elfcore_grok_prstatus	SWITCH,0:CALL,15:IF,6:functions,0:ELSE,2:DO,0:WHILE,0:FOR,0	49
0x400ea30	        0x488b4608	                mov rax, qword [rsi + 8]	      9116	elf.c	FUNCTION_115	IF_1
0x400ea34	    0x483d50010000	                          cmp rax, 0x150	      9116	elf.c	FUNCTION_115	IF_1
0x400ea3a	            0x745c	                            je 0x400ea98	      9116	elf.c	FUNCTION_115	IF_1
0x400ea3c	    0x483d90000000	                           cmp rax, 0x90	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x400ea42	            0x740c	                            je 0x400ea50	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x400ea44	      0xb801000000	                              mov eax, 1	      9183	elf.c	FUNCTION_115
0x400ea49	              0xc3	                                     ret	      9183	elf.c	FUNCTION_115
0x400ea4a	    0x660f1f440000	                    nop word [rax + rax]	      9183	elf.c	FUNCTION_115
0x400ea50	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400ea57	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x400ea5b	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400ea62	          0x8b5118	            mov edx, dword [rcx + 0x18] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400ea65	          0x448b00	                    mov r8d, dword [rax]	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400ea68	          0x4585c0	                           test r8d, r8d	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400ea6b	            0x7506	                           jne 0x400ea73	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400ea6d	         0xfbf490c	            movsx ecx, word [rcx + 0xc] 	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x400ea71	            0x8908	                    mov dword [rax], ecx	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x400ea73	          0x8b4804	                mov ecx, dword [rax + 4]	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400ea76	            0x85c9	                           test ecx, ecx	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400ea78	            0x746e	                            je 0x400eae8	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400ea7a	      0xb948000000	                           mov ecx, 0x48	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400ea7f	        0x48034e28	             add rcx, qword [rsi + 0x28]	      9181	elf.c	FUNCTION_115	CALL_15
0x400ea83	          0x895008	                mov dword [rax + 8], edx	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x400ea86	      0xbe00000000	                              mov esi, 0	      9181	elf.c	FUNCTION_115	CALL_15
0x400ea8b	      0xba44000000	                           mov edx, 0x44	      9149	elf.c	FUNCTION_115	ELSE_1	IF_4
0x400ea90	      0xe92bfcffff	 jmp sym._bfd_elfcore_make_pseudosection	      9181	elf.c	FUNCTION_115	CALL_15
0x400ea95	           0xf1f00	                         nop dword [rax]	      9181	elf.c	FUNCTION_115	CALL_15
0x400ea98	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400ea9f	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x400eaa3	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400eaaa	          0x8b5120	            mov edx, dword [rcx + 0x20] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400eaad	          0x448b10	                   mov r10d, dword [rax]	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400eab0	          0x4585d2	                         test r10d, r10d	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400eab3	            0x7506	                           jne 0x400eabb	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400eab5	         0xfbf490c	            movsx ecx, word [rcx + 0xc] 	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x400eab9	            0x8908	                    mov dword [rax], ecx	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x400eabb	        0x448b4804	                mov r9d, dword [rax + 4]	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x400eabf	          0x4585c9	                           test r9d, r9d	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x400eac2	            0x7503	                           jne 0x400eac7	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x400eac4	          0x895004	                mov dword [rax + 4], edx	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x400eac7	      0xb970000000	                           mov ecx, 0x70	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x400eacc	        0x48034e28	             add rcx, qword [rsi + 0x28]	      9181	elf.c	FUNCTION_115	CALL_15
0x400ead0	          0x895008	                mov dword [rax + 8], edx	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x400ead3	      0xbe00000000	                              mov esi, 0	      9181	elf.c	FUNCTION_115	CALL_15
0x400ead8	      0xbad8000000	                           mov edx, 0xd8	      9120	elf.c	FUNCTION_115	IF_1
0x400eadd	      0xe9defbffff	 jmp sym._bfd_elfcore_make_pseudosection	      9181	elf.c	FUNCTION_115	CALL_15
0x400eae2	    0x660f1f440000	                    nop word [rax + rax]	      9181	elf.c	FUNCTION_115	CALL_15
0x400eae8	          0x895004	                mov dword [rax + 4], edx	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x400eaeb	            0xeb8d	                           jmp 0x400ea7a	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
_bfd_elf_single_rel_hdr	SWITCH,0:CALL,5:IF,1:functions,0:ELSE,1:DO,0:WHILE,0:FOR,0	18
0x4005a90	    0x488b97e00000	            mov rdx, qword [rdi + 0xe0] 	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4005a97	        0x488b4258	            mov rax, qword [rdx + 0x58] 	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4005a9b	          0x4885c0	                           test rax, rax	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4005a9e	            0x7430	                            je 0x4005ad0	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4005aa0	      0x48837a7000	               cmp qword [rdx + 0x70], 0	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005aa5	            0x741f	                            je 0x4005ac6	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005aa7	              0x53	                                push rbx	      3049	elf.c	FUNCTION_44
0x4005aa8	      0xbeec0b0000	                          mov esi, 0xbec	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005aad	          0x4889fb	                            mov rbx, rdi	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005ab0	      0xbf00000000	                              mov edi, 0	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005ab5	      0xe800000000	                          call 0x4005aba	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005aba	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005ac1	              0x5b	                                 pop rbx	      3057	elf.c	FUNCTION_44
0x4005ac2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3057	elf.c	FUNCTION_44
0x4005ac6	            0xf3c3	                                     ret	      3057	elf.c	FUNCTION_44
0x4005ac8	     0xf1f84000000	                   nop dword [rax + rax]	      3057	elf.c	FUNCTION_44
0x4005ad0	        0x488b4270	            mov rax, qword [rdx + 0x70] 	      3056	elf.c	FUNCTION_44	CALL_5
0x4005ad4	              0xc3	                                     ret	      3056	elf.c	FUNCTION_44	CALL_5
_bfd_elf_swap_vernaux_in	SWITCH,0:CALL,5:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	30
0x4001f50	            0x4154	                                push r12	       152	elf.c	FUNCTION_7
0x4001f52	              0x55	                                push rbp	       152	elf.c	FUNCTION_7
0x4001f53	          0x4989fc	                            mov r12, rdi	       152	elf.c	FUNCTION_7
0x4001f56	              0x53	                                push rbx	       152	elf.c	FUNCTION_7
0x4001f57	        0x488b4708	                mov rax, qword [rdi + 8]	       153	elf.c	FUNCTION_7	CALL_1
0x4001f5b	          0x4889d5	                            mov rbp, rdx	       152	elf.c	FUNCTION_7
0x4001f5e	          0x4889f3	                            mov rbx, rsi	       152	elf.c	FUNCTION_7
0x4001f61	          0x4889f7	                            mov rdi, rsi	       153	elf.c	FUNCTION_7	CALL_1
0x4001f64	    0xff9080000000	                 call qword [rax + 0x80]	       153	elf.c	FUNCTION_7	CALL_1
0x4001f6a	        0x48894500	                    mov qword [rbp], rax	       153	elf.c	FUNCTION_7	CALL_1
0x4001f6e	      0x498b442408	                mov rax, qword [r12 + 8]	       154	elf.c	FUNCTION_7	CALL_2
0x4001f73	        0x488d7b04	                      lea rdi, [rbx + 4]	       154	elf.c	FUNCTION_7	CALL_2
0x4001f77	    0xff9098000000	                 call qword [rax + 0x98]	       154	elf.c	FUNCTION_7	CALL_2
0x4001f7d	        0x66894508	                  mov word [rbp + 8], ax	       154	elf.c	FUNCTION_7	CALL_2
0x4001f81	      0x498b442408	                mov rax, qword [r12 + 8]	       155	elf.c	FUNCTION_7	CALL_3
0x4001f86	        0x488d7b06	                      lea rdi, [rbx + 6]	       155	elf.c	FUNCTION_7	CALL_3
0x4001f8a	    0xff9098000000	                 call qword [rax + 0x98]	       155	elf.c	FUNCTION_7	CALL_3
0x4001f90	        0x6689450a	                mov word [rbp + 0xa], ax	       155	elf.c	FUNCTION_7	CALL_3
0x4001f94	      0x498b442408	                mov rax, qword [r12 + 8]	       156	elf.c	FUNCTION_7	CALL_4
0x4001f99	        0x488d7b08	                      lea rdi, [rbx + 8]	       156	elf.c	FUNCTION_7	CALL_4
0x4001f9d	    0xff9080000000	                 call qword [rax + 0x80]	       156	elf.c	FUNCTION_7	CALL_4
0x4001fa3	        0x48894510	            mov qword [rbp + 0x10], rax 	       156	elf.c	FUNCTION_7	CALL_4
0x4001fa7	      0x498b442408	                mov rax, qword [r12 + 8]	       157	elf.c	FUNCTION_7	CALL_5
0x4001fac	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	       157	elf.c	FUNCTION_7	CALL_5
0x4001fb0	    0xff9080000000	                 call qword [rax + 0x80]	       157	elf.c	FUNCTION_7	CALL_5
0x4001fb6	        0x48894518	            mov qword [rbp + 0x18], rax 	       157	elf.c	FUNCTION_7	CALL_5
0x4001fba	              0x5b	                                 pop rbx	       158	elf.c	FUNCTION_7
0x4001fbb	              0x5d	                                 pop rbp	       158	elf.c	FUNCTION_7
0x4001fbc	            0x415c	                                 pop r12	       158	elf.c	FUNCTION_7
0x4001fbe	              0xc3	                                     ret	       158	elf.c	FUNCTION_7
bfd_elf_is_group_section	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	5
0x4002bd0	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	       963	elf.c	FUNCTION_23	CALL_1
0x4002bd7	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       963	elf.c	FUNCTION_23	CALL_1
0x4002bdf	           0xf95c0	                                setne al	       963	elf.c	FUNCTION_23	CALL_1
0x4002be2	           0xfb6c0	                           movzx eax, al	       963	elf.c	FUNCTION_23	CALL_1
0x4002be5	              0xc3	                                     ret	       964	elf.c	FUNCTION_23
_bfd_elf_copy_private_bfd_data	SWITCH,0:CALL,26:IF,15:functions,0:ELSE,0:DO,0:WHILE,0:FOR,3	203
0x4002c30	        0x488b4708	                mov rax, qword [rdi + 8]	      1466	elf.c	FUNCTION_31	IF_1	CALL_3
0x4002c34	        0x83780805	                  cmp dword [rax + 8], 5	      1466	elf.c	FUNCTION_31	IF_1	CALL_3
0x4002c38	            0x7406	                            je 0x4002c40	      1466	elf.c	FUNCTION_31	IF_1	CALL_3
0x4002c3a	      0xb801000000	                              mov eax, 1	      1582	elf.c	FUNCTION_31
0x4002c3f	              0xc3	                                     ret	      1582	elf.c	FUNCTION_31
0x4002c40	        0x488b4608	                mov rax, qword [rsi + 8]	      1467	elf.c	FUNCTION_31	IF_1	CALL_4
0x4002c44	        0x83780805	                  cmp dword [rax + 8], 5	      1467	elf.c	FUNCTION_31	IF_1	CALL_4
0x4002c48	            0x75f0	                           jne 0x4002c3a	      1467	elf.c	FUNCTION_31	IF_1	CALL_4
0x4002c4a	            0x4157	                                push r15	      1460	elf.c	FUNCTION_31
0x4002c4c	            0x4156	                                push r14	      1460	elf.c	FUNCTION_31
0x4002c4e	            0x4155	                                push r13	      1460	elf.c	FUNCTION_31
0x4002c50	            0x4154	                                push r12	      1460	elf.c	FUNCTION_31
0x4002c52	              0x55	                                push rbp	      1460	elf.c	FUNCTION_31
0x4002c53	              0x53	                                push rbx	      1460	elf.c	FUNCTION_31
0x4002c54	        0x4883ec18	                           sub rsp, 0x18	      1460	elf.c	FUNCTION_31
0x4002c58	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1462	elf.c	FUNCTION_31	CALL_2
0x4002c5f	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1461	elf.c	FUNCTION_31	CALL_1
0x4002c66	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4002c6d	        0x4c8b7258	            mov r14, qword [rdx + 0x58] 	      1461	elf.c	FUNCTION_31	CALL_1
0x4002c71	        0x4c8b5058	            mov r10, qword [rax + 0x58] 	      1462	elf.c	FUNCTION_31	CALL_2
0x4002c75	        0x448b415c	            mov r8d, dword [rcx + 0x5c] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4002c79	          0x4585c0	                           test r8d, r8d	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4002c7c	            0x7524	                           jne 0x4002ca2	      1470	elf.c	FUNCTION_31	IF_2	CALL_5
0x4002c7e	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1472	elf.c	FUNCTION_31	IF_2	CALL_7
0x4002c82	        0x48895030	             mov qword [rax + 0x30], rdx	      1472	elf.c	FUNCTION_31	IF_2	CALL_7
0x4002c86	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4002c8d	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4002c94	    0xc7425c010000	               mov dword [rdx + 0x5c], 1	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4002c9b	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_8
0x4002ca2	    0x488b92f00200	           mov rdx, qword [rdx + 0x2f0] 	      1476	elf.c	FUNCTION_31	CALL_10
0x4002ca9	    0x488990f00200	            mov qword [rax + 0x2f0], rdx	      1476	elf.c	FUNCTION_31	CALL_10
0x4002cb0	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1480	elf.c	FUNCTION_31	CALL_12
0x4002cb7	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1479	elf.c	FUNCTION_31	CALL_11
0x4002cbe	         0xfb65207	               movzx edx, byte [rdx + 7]	      1480	elf.c	FUNCTION_31	CALL_12
0x4002cc2	          0x885007	                  mov byte [rax + 7], dl	      1479	elf.c	FUNCTION_31	CALL_11
0x4002cc5	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4002ccc	         0xfb64008	               movzx eax, byte [rax + 8]	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4002cd0	            0x84c0	                             test al, al	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4002cd2	            0x740a	                            je 0x4002cde	      1483	elf.c	FUNCTION_31	IF_3	CALL_13
0x4002cd4	    0x488b96f80000	            mov rdx, qword [rsi + 0xf8] 	      1484	elf.c	FUNCTION_31	IF_3	CALL_14
0x4002cdb	          0x884208	                  mov byte [rdx + 8], al	      1485	elf.c	FUNCTION_31	CALL_15
0x4002cde	        0x4c891424	                    mov qword [rsp], r10	      1485	elf.c	FUNCTION_31	CALL_15
0x4002ce2	          0x4989f7	                            mov r15, rsi	      1485	elf.c	FUNCTION_31	CALL_15
0x4002ce5	          0x4989fd	                            mov r13, rdi	      1485	elf.c	FUNCTION_31	CALL_15
0x4002ce8	      0xe800000000	                          call 0x4002ced	      1488	elf.c	FUNCTION_31	CALL_16
0x4002ced	          0x4d85f6	                           test r14, r14	      1490	elf.c	FUNCTION_31	IF_4
0x4002cf0	     0xf848a010000	                            je 0x4002e80	      1490	elf.c	FUNCTION_31	IF_4
0x4002cf6	        0x4c8b1424	                    mov r10, qword [rsp]	      1490	elf.c	FUNCTION_31	IF_4
0x4002cfa	          0x4d85d2	                           test r10, r10	      1490	elf.c	FUNCTION_31	IF_4
0x4002cfd	     0xf847d010000	                            je 0x4002e80	      1490	elf.c	FUNCTION_31	IF_4
0x4002d03	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d0a	        0x498b4708	                mov rax, qword [r15 + 8]	      1493	elf.c	FUNCTION_31	CALL_17
0x4002d0e	    0x83bafc020000	              cmp dword [rdx + 0x2fc], 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d15	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1493	elf.c	FUNCTION_31	CALL_17
0x4002d1c	        0x48890424	                    mov qword [rsp], rax	      1493	elf.c	FUNCTION_31	CALL_17
0x4002d20	     0xf865a010000	                           jbe 0x4002e80	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d26	    0x41bc01000000	                             mov r12d, 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d2c	            0xeb1a	                           jmp 0x4002d48	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d2e	            0x6690	                                     nop	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d30	      0x3dffffff5f	                     cmp eax, 0x5fffffff	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4002d35	            0x7725	                            ja 0x4002d5c	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4002d37	        0x4183c401	                             add r12d, 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d3b	    0x4439a2fc0200	          cmp dword [rdx + 0x2fc], r12d 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d42	     0xf8638010000	                           jbe 0x4002e80	      1496	elf.c	FUNCTION_31	FOR_1	CALL_18
0x4002d48	          0x4489e0	                           mov eax, r12d	      1499	elf.c	FUNCTION_31	FOR_1
0x4002d4b	        0x498b1cc2	            mov rbx, qword [r10 + rax*8]	      1499	elf.c	FUNCTION_31	FOR_1
0x4002d4f	          0x4885db	                           test rbx, rbx	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x4002d52	            0x74e3	                            je 0x4002d37	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x4002d54	          0x8b4304	                mov eax, dword [rbx + 4]	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4002d57	          0x83f808	                              cmp eax, 8	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4002d5a	            0x75d4	                           jne 0x4002d30	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x4002d5c	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d61	            0x74d4	                            je 0x4002d37	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d63	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d66	            0x85c9	                           test ecx, ecx	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d68	            0x7407	                            je 0x4002d71	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d6a	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d6d	            0x85c0	                           test eax, eax	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d6f	            0x75c6	                           jne 0x4002d37	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x4002d71	    0x498bbdf80000	            mov rdi, qword [r13 + 0xf8] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002d78	    0x448b87fc0200	           mov r8d, dword [rdi + 0x2fc] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002d7f	        0x4183f801	                              cmp r8d, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002d83	     0xf8644010000	                           jbe 0x4002ecd	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002d89	        0x498d4608	                      lea rax, [r14 + 8]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002d8d	      0xbd01000000	                              mov ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002d92	    0x660f1f440000	                    nop word [rax + rax]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002d98	          0x488b10	                    mov rdx, qword [rax]	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x4002d9b	          0x4885d2	                           test rdx, rdx	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4002d9e	            0x7424	                            je 0x4002dc4	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4002da0	        0x488b4b40	            mov rcx, qword [rbx + 0x40] 	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002da4	          0x4885c9	                           test rcx, rcx	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002da7	            0x741b	                            je 0x4002dc4	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002da9	        0x488b7240	            mov rsi, qword [rdx + 0x40] 	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002dad	          0x4885f6	                           test rsi, rsi	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002db0	            0x7412	                            je 0x4002dc4	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002db2	        0x488b7668	            mov rsi, qword [rsi + 0x68] 	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002db6	          0x4839f1	                            cmp rcx, rsi	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002db9	            0x7509	                           jne 0x4002dc4	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002dbb	          0x4885f6	                           test rsi, rsi	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002dbe	     0xf85d4000000	                           jne 0x4002e98	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002dc4	          0x83c501	                              add ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002dc7	        0x4883c008	                              add rax, 8	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002dcb	          0x4439c5	                            cmp ebp, r8d	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002dce	            0x75c8	                           jne 0x4002d98	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002dd0	      0xbd01000000	                              mov ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002dd5	            0xeb1f	                           jmp 0x4002df6	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002dd7	    0x660f1f840000	                    nop word [rax + rax]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002de0	          0x3b4204	                cmp eax, dword [rdx + 4]	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002de3	            0x7424	                            je 0x4002e09	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002de5	    0x8b87fc020000	           mov eax, dword [rdi + 0x2fc] 	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4002deb	          0x83c501	                              add ebp, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4002dee	            0x39e8	                            cmp eax, ebp	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4002df0	     0xf86ea000000	                           jbe 0x4002ee0	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4002df6	            0x89e8	                            mov eax, ebp	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4002df8	        0x498b14c6	            mov rdx, qword [r14 + rax*8]	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4002dfc	          0x4885d2	                           test rdx, rdx	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x4002dff	            0x74e4	                            je 0x4002de5	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x4002e01	          0x8b4304	                mov eax, dword [rbx + 4]	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e04	          0x83f808	                              cmp eax, 8	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e07	            0x75d7	                           jne 0x4002de0	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e09	        0x488b4208	                mov rax, qword [rdx + 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e0d	        0x48334308	                xor rax, qword [rbx + 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e11	    0x48a9bfffffff	            test rax, 0xffffffffffffffbf	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e17	            0x75cc	                           jne 0x4002de5	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e19	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e1d	        0x48394230	            cmp qword [rdx + 0x30], rax 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e21	            0x75c2	                           jne 0x4002de5	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e23	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e27	        0x48394238	            cmp qword [rdx + 0x38], rax 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e2b	            0x75b8	                           jne 0x4002de5	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e2d	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e31	        0x48394220	            cmp qword [rdx + 0x20], rax 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e35	            0x75ae	                           jne 0x4002de5	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e37	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e3b	        0x48394210	            cmp qword [rdx + 0x10], rax 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e3f	            0x75a4	                           jne 0x4002de5	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e41	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e45	        0x48394228	            cmp qword [rdx + 0x28], rax 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e49	            0x749a	                            je 0x4002de5	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002e4b	          0x4589e0	                           mov r8d, r12d	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e4e	          0x4889d9	                            mov rcx, rbx	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e51	          0x4c89fe	                            mov rsi, r15	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e54	          0x4c89ef	                            mov rdi, r13	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e57	      0x4c89542408	                mov qword [rsp + 8], r10	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e5c	      0xe88fd9ffff	    call sym.copy_special_section_fields	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e61	            0x85c0	                           test eax, eax	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e63	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e68	     0xf85ce000000	                           jne 0x4002f3c	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e6e	    0x498bbdf80000	            mov rdi, qword [r13 + 0xf8] 	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e75	      0xe96bffffff	                           jmp 0x4002de5	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e7a	    0x660f1f440000	                    nop word [rax + rax]	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_24
0x4002e80	        0x4883c418	                           add rsp, 0x18	      1582	elf.c	FUNCTION_31
0x4002e84	      0xb801000000	                              mov eax, 1	      1582	elf.c	FUNCTION_31
0x4002e89	              0x5b	                                 pop rbx	      1582	elf.c	FUNCTION_31
0x4002e8a	              0x5d	                                 pop rbp	      1582	elf.c	FUNCTION_31
0x4002e8b	            0x415c	                                 pop r12	      1582	elf.c	FUNCTION_31
0x4002e8d	            0x415d	                                 pop r13	      1582	elf.c	FUNCTION_31
0x4002e8f	            0x415e	                                 pop r14	      1582	elf.c	FUNCTION_31
0x4002e91	            0x415f	                                 pop r15	      1582	elf.c	FUNCTION_31
0x4002e93	              0xc3	                                     ret	      1582	elf.c	FUNCTION_31
0x4002e94	         0xf1f4000	                         nop dword [rax]	      1582	elf.c	FUNCTION_31
0x4002e98	          0x4c89ef	                            mov rdi, r13	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002e9b	          0x4589e0	                           mov r8d, r12d	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002e9e	          0x4889d9	                            mov rcx, rbx	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002ea1	          0x4c89fe	                            mov rsi, r15	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002ea4	      0x4c89542408	                mov qword [rsp + 8], r10	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002ea9	      0xe842d9ffff	    call sym.copy_special_section_fields	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002eae	    0x498bbdf80000	            mov rdi, qword [r13 + 0xf8] 	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002eb5	            0x85c0	                           test eax, eax	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002eb7	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002ebc	    0x8b87fc020000	           mov eax, dword [rdi + 0x2fc] 	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002ec2	            0x752c	                           jne 0x4002ef0	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_20
0x4002ec4	          0x83f801	                              cmp eax, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4002ec7	     0xf8703ffffff	                            ja 0x4002dd0	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4002ecd	    0x8b87fc020000	           mov eax, dword [rdi + 0x2fc] 	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_23
0x4002ed3	      0xbd01000000	                              mov ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002ed8	     0xf1f84000000	                   nop dword [rax + rax]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_19
0x4002ee0	            0x39c5	                            cmp ebp, eax	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4002ee2	            0x741c	                            je 0x4002f00	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4002ee4	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4002eeb	      0xe947feffff	                           jmp 0x4002d37	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4002ef0	            0x39e8	                            cmp eax, ebp	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x4002ef2	            0x77f0	                            ja 0x4002ee4	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x4002ef4	            0xebce	                           jmp 0x4002ec4	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x4002ef6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_22
0x4002f00	    0x817b04ffffff	        cmp dword [rbx + 4], 0x5fffffff 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4002f07	            0x76db	                           jbe 0x4002ee4	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_25
0x4002f09	        0x488b0424	                    mov rax, qword [rsp]	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002f0d	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002f14	          0x4885c0	                           test rax, rax	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002f17	            0x74cb	                            je 0x4002ee4	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002f19	      0x4c89542408	                mov qword [rsp + 8], r10	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002f1e	            0x31d2	                            xor edx, edx	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f20	          0x4889d9	                            mov rcx, rbx	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f23	          0x4c89fe	                            mov rsi, r15	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f26	          0x4c89ef	                            mov rdi, r13	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f29	            0xffd0	                                call rax	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f2b	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f32	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f37	      0xe9fbfdffff	                           jmp 0x4002d37	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f3c	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f43	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
0x4002f49	            0xeb95	                           jmp 0x4002ee0	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_26
_bfd_elf_make_empty_symbol	SWITCH,0:CALL,1:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	9
0x400df90	              0x53	                                push rbx	      8623	elf.c	FUNCTION_98
0x400df91	      0xbe60000000	                           mov esi, 0x60	      8626	elf.c	FUNCTION_98	CALL_1
0x400df96	          0x4889fb	                            mov rbx, rdi	      8623	elf.c	FUNCTION_98
0x400df99	      0xe800000000	                          call 0x400df9e	      8626	elf.c	FUNCTION_98	CALL_1
0x400df9e	          0x4885c0	                           test rax, rax	      8627	elf.c	FUNCTION_98	IF_1
0x400dfa1	            0x7403	                            je 0x400dfa6	      8627	elf.c	FUNCTION_98	IF_1
0x400dfa3	          0x488918	                    mov qword [rax], rbx	      8629	elf.c	FUNCTION_98
0x400dfa6	              0x5b	                                 pop rbx	      8631	elf.c	FUNCTION_98
0x400dfa7	              0xc3	                                     ret	      8631	elf.c	FUNCTION_98
_bfd_elf_get_symbol_info	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	3
0x400dfb0	          0x4889f7	                            mov rdi, rsi	      8637	elf.c	FUNCTION_99
0x400dfb3	          0x4889d6	                            mov rsi, rdx	      8638	elf.c	FUNCTION_99	CALL_1
0x400dfb6	      0xe900000000	                           jmp 0x400dfbb	      8638	elf.c	FUNCTION_99	CALL_1
_bfd_elf_copy_private_symbol_data	SWITCH,0:CALL,11:IF,7:functions,0:ELSE,4:DO,0:WHILE,0:FOR,0	70
0x400c610	        0x488b4708	                mov rax, qword [rdi + 8]	      7713	elf.c	FUNCTION_87	IF_1	CALL_1
0x400c614	        0x83780805	                  cmp dword [rax + 8], 5	      7713	elf.c	FUNCTION_87	IF_1	CALL_1
0x400c618	            0x7406	                            je 0x400c620	      7713	elf.c	FUNCTION_87	IF_1	CALL_1
0x400c61a	      0xb801000000	                              mov eax, 1	      7742	elf.c	FUNCTION_87
0x400c61f	              0xc3	                                     ret	      7742	elf.c	FUNCTION_87
0x400c620	        0x488b4208	                mov rax, qword [rdx + 8]	      7714	elf.c	FUNCTION_87	IF_1	CALL_2
0x400c624	        0x83780805	                  cmp dword [rax + 8], 5	      7714	elf.c	FUNCTION_87	IF_1	CALL_2
0x400c628	            0x75f0	                           jne 0x400c61a	      7714	elf.c	FUNCTION_87	IF_1	CALL_2
0x400c62a	          0x488b06	                    mov rax, qword [rsi]	      7717	elf.c	FUNCTION_87	CALL_3
0x400c62d	          0x4885c0	                           test rax, rax	      7717	elf.c	FUNCTION_87	CALL_3
0x400c630	            0x740e	                            je 0x400c640	      7717	elf.c	FUNCTION_87	CALL_3
0x400c632	        0x488b5008	                mov rdx, qword [rax + 8]	      7717	elf.c	FUNCTION_87	CALL_3
0x400c636	        0x837a0805	                  cmp dword [rdx + 8], 5	      7717	elf.c	FUNCTION_87	CALL_3
0x400c63a	     0xf8490000000	                            je 0x400c6d0	      7717	elf.c	FUNCTION_87	CALL_3
0x400c640	          0x488b01	                    mov rax, qword [rcx]	      7718	elf.c	FUNCTION_87	CALL_4
0x400c643	          0x4885c0	                           test rax, rax	      7718	elf.c	FUNCTION_87	CALL_4
0x400c646	            0x74d2	                            je 0x400c61a	      7718	elf.c	FUNCTION_87	CALL_4
0x400c648	            0x31f6	                            xor esi, esi	      7718	elf.c	FUNCTION_87	CALL_4
0x400c64a	        0x488b5008	                mov rdx, qword [rax + 8]	      7718	elf.c	FUNCTION_87	CALL_4
0x400c64e	        0x837a0805	                  cmp dword [rdx + 8], 5	      7718	elf.c	FUNCTION_87	CALL_4
0x400c652	            0x75c6	                           jne 0x400c61a	      7718	elf.c	FUNCTION_87	CALL_4
0x400c654	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	      7718	elf.c	FUNCTION_87	CALL_4
0x400c65c	            0x74bc	                            je 0x400c61a	      7718	elf.c	FUNCTION_87	CALL_4
0x400c65e	          0x4885f6	                           test rsi, rsi	      7720	elf.c	FUNCTION_87	IF_2
0x400c661	            0x74b7	                            je 0x400c61a	      7720	elf.c	FUNCTION_87	IF_2
0x400c663	          0x4885c9	                           test rcx, rcx	      7722	elf.c	FUNCTION_87	IF_2
0x400c666	          0x8b464c	            mov eax, dword [rsi + 0x4c] 	      7721	elf.c	FUNCTION_87	IF_2
0x400c669	            0x74af	                            je 0x400c61a	      7722	elf.c	FUNCTION_87	IF_2
0x400c66b	            0x85c0	                           test eax, eax	      7722	elf.c	FUNCTION_87	IF_2
0x400c66d	            0x74ab	                            je 0x400c61a	      7722	elf.c	FUNCTION_87	IF_2
0x400c66f	    0x48817e200000	               cmp qword [rsi + 0x20], 0	      7723	elf.c	FUNCTION_87	IF_2	CALL_5
0x400c677	            0x75a1	                           jne 0x400c61a	      7723	elf.c	FUNCTION_87	IF_2	CALL_5
0x400c679	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_6
0x400c680	    0x3b82780c0000	           cmp eax, dword [rdx + 0xc78] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_6
0x400c686	            0x7467	                            je 0x400c6ef	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_6
0x400c688	    0x3b827c0c0000	           cmp eax, dword [rdx + 0xc7c] 	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_7
0x400c68e	            0x7466	                            je 0x400c6f6	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_7
0x400c690	    0x488bb2980c00	           mov rsi, qword [rdx + 0xc98] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_8
0x400c697	          0x3b4650	            cmp eax, dword [rsi + 0x50] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_8
0x400c69a	            0x7461	                            je 0x400c6fd	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_8
0x400c69c	          0x3b464c	            cmp eax, dword [rsi + 0x4c] 	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_9
0x400c69f	            0x7463	                            je 0x400c704	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_9
0x400c6a1	    0x488b92e80200	           mov rdx, qword [rdx + 0x2e8] 	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_11
0x400c6a8	          0x4885d2	                           test rdx, rdx	      6045	elf.c	FUNCTION_72	FOR_1
0x400c6ab	            0x750c	                           jne 0x400c6b9	      6045	elf.c	FUNCTION_72	FOR_1
0x400c6ad	            0xeb19	                           jmp 0x400c6c8	      6045	elf.c	FUNCTION_72	FOR_1
0x400c6af	              0x90	                                     nop	      6045	elf.c	FUNCTION_72	FOR_1
0x400c6b0	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      6045	elf.c	FUNCTION_72	FOR_1
0x400c6b4	          0x4885d2	                           test rdx, rdx	      6045	elf.c	FUNCTION_72	FOR_1
0x400c6b7	            0x740f	                            je 0x400c6c8	      6045	elf.c	FUNCTION_72	FOR_1
0x400c6b9	          0x3b4250	            cmp eax, dword [rdx + 0x50] 	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400c6bc	            0x75f2	                           jne 0x400c6b0	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400c6be	      0xb844ffffff	                     mov eax, 0xffffff44	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x400c6c3	       0xf1f440000	                   nop dword [rax + rax]	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x400c6c8	          0x89414c	             mov dword [rcx + 0x4c], eax	      7738	elf.c	FUNCTION_87	IF_2
0x400c6cb	      0xe94affffff	                           jmp 0x400c61a	      7738	elf.c	FUNCTION_87	IF_2
0x400c6d0	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	      7717	elf.c	FUNCTION_87	CALL_3
0x400c6d8	     0xf8462ffffff	                            je 0x400c640	      7717	elf.c	FUNCTION_87	CALL_3
0x400c6de	          0x488b01	                    mov rax, qword [rcx]	      7718	elf.c	FUNCTION_87	CALL_4
0x400c6e1	          0x4885c0	                           test rax, rax	      7718	elf.c	FUNCTION_87	CALL_4
0x400c6e4	     0xf8430ffffff	                            je 0x400c61a	      7718	elf.c	FUNCTION_87	CALL_4
0x400c6ea	      0xe95bffffff	                           jmp 0x400c64a	      7718	elf.c	FUNCTION_87	CALL_4
0x400c6ef	      0xb840ffffff	                     mov eax, 0xffffff40	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x400c6f4	            0xebd2	                           jmp 0x400c6c8	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x400c6f6	      0xb841ffffff	                     mov eax, 0xffffff41	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x400c6fb	            0xebcb	                           jmp 0x400c6c8	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x400c6fd	      0xb842ffffff	                     mov eax, 0xffffff42	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x400c702	            0xebc4	                           jmp 0x400c6c8	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x400c704	      0xb843ffffff	                     mov eax, 0xffffff43	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
0x400c709	            0xebbd	                           jmp 0x400c6c8	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
_bfd_elf_map_sections_to_segments	SWITCH,0:CALL,52:IF,63:functions,0:ELSE,14:DO,0:WHILE,3:FOR,8	832
0x4005d30	            0x4157	                                push r15	      4575	elf.c	FUNCTION_65
0x4005d32	            0x4156	                                push r14	      4575	elf.c	FUNCTION_65
0x4005d34	          0x4989f7	                            mov r15, rsi	      4575	elf.c	FUNCTION_65
0x4005d37	            0x4155	                                push r13	      4575	elf.c	FUNCTION_65
0x4005d39	            0x4154	                                push r12	      4575	elf.c	FUNCTION_65
0x4005d3b	              0x55	                                push rbp	      4575	elf.c	FUNCTION_65
0x4005d3c	              0x53	                                push rbx	      4575	elf.c	FUNCTION_65
0x4005d3d	          0x4889fd	                            mov rbp, rdi	      4575	elf.c	FUNCTION_65
0x4005d40	    0x4881ec880000	                           sub rsp, 0x88	      4575	elf.c	FUNCTION_65
0x4005d47	    0x64488b042528	                mov rax, qword fs:[0x28]	      4575	elf.c	FUNCTION_65
0x4005d50	      0x4889442478	             mov qword [rsp + 0x78], rax	      4575	elf.c	FUNCTION_65
0x4005d55	            0x31c0	                            xor eax, eax	      4575	elf.c	FUNCTION_65
0x4005d57	        0x488b4708	                mov rax, qword [rdi + 8]	      4579	elf.c	FUNCTION_65	CALL_1
0x4005d5b	          0x4885f6	                           test rsi, rsi	      4584	elf.c	FUNCTION_65	IF_1
0x4005d5e	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4579	elf.c	FUNCTION_65	CALL_1
0x4005d65	      0x4889442410	             mov qword [rsp + 0x10], rax	      4579	elf.c	FUNCTION_65	CALL_1
0x4005d6a	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      4582	elf.c	FUNCTION_65	CALL_2
0x4005d71	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4582	elf.c	FUNCTION_65	CALL_2
0x4005d78	          0x488b18	                    mov rbx, qword [rax]	      4582	elf.c	FUNCTION_65	CALL_2
0x4005d7b	            0x7415	                            je 0x4005d92	      4584	elf.c	FUNCTION_65	IF_1
0x4005d7d	         0xfb65606	               movzx edx, byte [rsi + 6]	      4585	elf.c	FUNCTION_65	IF_1
0x4005d81	          0x4885db	                           test rbx, rbx	      4585	elf.c	FUNCTION_65	IF_1
0x4005d84	           0xf95c0	                                setne al	      4585	elf.c	FUNCTION_65	IF_1
0x4005d87	          0xc1e004	                              shl eax, 4	      4585	elf.c	FUNCTION_65	IF_1
0x4005d8a	          0x83e2ef	                     and edx, 0xffffffef	      4585	elf.c	FUNCTION_65	IF_1
0x4005d8d	             0x9d0	                             or eax, edx	      4585	elf.c	FUNCTION_65	IF_1
0x4005d8f	          0x884606	                  mov byte [rsi + 6], al	      4585	elf.c	FUNCTION_65	IF_1
0x4005d92	          0x4885db	                           test rbx, rbx	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005d95	     0xf842a010000	                            je 0x4005ec5	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005d9b	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005da2	    0x4c8b80980c00	            mov r8, qword [rax + 0xc98] 	      4532	elf.c	FUNCTION_64	CALL_1
0x4005da9	    0x49b920000000	           movabs r9, 0xffffffff00000020	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005db3	          0x498b00	                     mov rax, qword [r8]	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005db6	          0x4885c0	                           test rax, rax	      4533	elf.c	FUNCTION_64	WHILE_1
0x4005db9	            0x7463	                            je 0x4005e1e	      4533	elf.c	FUNCTION_64	WHILE_1
0x4005dbb	       0xf1f440000	                   nop dword [rax + rax]	      4533	elf.c	FUNCTION_64	WHILE_1
0x4005dc0	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dc3	            0x31ff	                            xor edi, edi	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dc5	            0x31d2	                            xor edx, edx	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dc7	            0x85c9	                           test ecx, ecx	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dc9	            0x7435	                            je 0x4005e00	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dcb	       0xf1f440000	                   nop dword [rax + rax]	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dd0	            0x89d1	                            mov ecx, edx	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005dd2	      0x488b74c848	    mov rsi, qword [rax + rcx*8 + 0x48] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005dd7	          0x8b4e20	            mov ecx, dword [rsi + 0x20] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005dda	          0xf6c580	                           test ch, 0x80	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005ddd	            0x7516	                           jne 0x4005df5	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005ddf	          0x83e101	                              and ecx, 1	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005de2	            0x7507	                           jne 0x4005deb	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005de4	      0x4883780801	                  cmp qword [rax + 8], 1	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005de9	            0x740a	                            je 0x4005df5	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005deb	            0x89f9	                            mov ecx, edi	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005ded	          0x83c701	                              add edi, 1	      4544	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005df0	      0x488974c848	     mov qword [rax + rcx*8 + 0x48], rsi	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4005df5	          0x498b00	                     mov rax, qword [r8]	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005df8	          0x83c201	                              add edx, 1	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dfb	          0x3b5044	            cmp edx, dword [rax + 0x44] 	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005dfe	            0x72d0	                            jb 0x4005dd0	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4005e00	          0x4885db	                           test rbx, rbx	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005e03	          0x897844	             mov dword [rax + 0x44], edi	      4547	elf.c	FUNCTION_64	WHILE_1
0x4005e06	            0x750b	                           jne 0x4005e13	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005e08	      0x4883780801	                  cmp qword [rax + 8], 1	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005e0d	     0xf849d000000	                            je 0x4005eb0	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005e13	          0x4989c0	                             mov r8, rax	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x4005e16	          0x488b00	                    mov rax, qword [rax]	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x4005e19	          0x4885c0	                           test rax, rax	      4533	elf.c	FUNCTION_64	WHILE_1
0x4005e1c	            0x75a2	                           jne 0x4005dc0	      4533	elf.c	FUNCTION_64	WHILE_1
0x4005e1e	        0x488b4508	                mov rax, qword [rbp + 8]	      4558	elf.c	FUNCTION_64	CALL_2
0x4005e22	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4559	elf.c	FUNCTION_64	IF_3
0x4005e29	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      4559	elf.c	FUNCTION_64	IF_3
0x4005e30	          0x4885c0	                           test rax, rax	      4559	elf.c	FUNCTION_64	IF_3
0x4005e33	            0x740c	                            je 0x4005e41	      4559	elf.c	FUNCTION_64	IF_3
0x4005e35	          0x4c89fe	                            mov rsi, r15	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4005e38	          0x4889ef	                            mov rdi, rbp	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4005e3b	            0xffd0	                                call rax	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4005e3d	            0x85c0	                           test eax, eax	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4005e3f	            0x7448	                            je 0x4005e89	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x4005e41	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e48	            0x31d2	                            xor edx, edx	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e4a	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e51	          0x488b01	                    mov rax, qword [rcx]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e54	          0x4885c0	                           test rax, rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e57	            0x7412	                            je 0x4005e6b	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e59	     0xf1f80000000	                         nop dword [rax]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e60	          0x488b00	                    mov rax, qword [rax]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e63	          0x83c201	                              add edx, 1	      5098	elf.c	FUNCTION_65	FOR_8
0x4005e66	          0x4885c0	                           test rax, rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e69	            0x75f5	                           jne 0x4005e60	      5097	elf.c	FUNCTION_65	FOR_8	CALL_50
0x4005e6b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5099	elf.c	FUNCTION_65	CALL_51
0x4005e70	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5099	elf.c	FUNCTION_65	CALL_51
0x4005e77	         0xfb64001	               movzx eax, byte [rax + 1]	      5099	elf.c	FUNCTION_65	CALL_51
0x4005e7b	           0xfafd0	                           imul edx, eax	      5099	elf.c	FUNCTION_65	CALL_51
0x4005e7e	            0x89d0	                            mov eax, edx	      5099	elf.c	FUNCTION_65	CALL_51
0x4005e80	        0x48894138	             mov qword [rcx + 0x38], rax	      5099	elf.c	FUNCTION_65	CALL_51
0x4005e84	      0xb801000000	                              mov eax, 1	      5101	elf.c	FUNCTION_65
0x4005e89	      0x488b5c2478	            mov rbx, qword [rsp + 0x78] 	      5107	elf.c	FUNCTION_65
0x4005e8e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5107	elf.c	FUNCTION_65
0x4005e97	     0xf85100c0000	                           jne 0x4006aad	      5107	elf.c	FUNCTION_65
0x4005e9d	    0x4881c4880000	                           add rsp, 0x88	      5107	elf.c	FUNCTION_65
0x4005ea4	              0x5b	                                 pop rbx	      5107	elf.c	FUNCTION_65
0x4005ea5	              0x5d	                                 pop rbp	      5107	elf.c	FUNCTION_65
0x4005ea6	            0x415c	                                 pop r12	      5107	elf.c	FUNCTION_65
0x4005ea8	            0x415d	                                 pop r13	      5107	elf.c	FUNCTION_65
0x4005eaa	            0x415e	                                 pop r14	      5107	elf.c	FUNCTION_65
0x4005eac	            0x415f	                                 pop r15	      5107	elf.c	FUNCTION_65
0x4005eae	              0xc3	                                     ret	      5107	elf.c	FUNCTION_65
0x4005eaf	              0x90	                                     nop	      5107	elf.c	FUNCTION_65
0x4005eb0	        0x4c854840	            test qword [rax + 0x40], r9 	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005eb4	     0xf8559ffffff	                           jne 0x4005e13	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005eba	          0x488b00	                    mov rax, qword [rax]	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005ebd	          0x498900	                     mov qword [r8], rax	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005ec0	      0xe9f1feffff	                           jmp 0x4005db6	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4005ec5	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005ecb	            0x85c0	                           test eax, eax	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005ecd	     0xf84c8feffff	                            je 0x4005d9b	      4587	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005ed3	            0x89c7	                            mov edi, eax	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4005ed5	      0xbe08000000	                              mov esi, 8	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4005eda	      0xe800000000	                          call 0x4005edf	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4005edf	          0x4989c6	                            mov r14, rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4005ee2	      0x4889442418	             mov qword [rsp + 0x18], rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_5
0x4005ee7	            0x31c0	                            xor eax, eax	      5106	elf.c	FUNCTION_65
0x4005ee9	          0x4d85f6	                           test r14, r14	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x4005eec	            0x749b	                            je 0x4005e89	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x4005eee	          0x4889ef	                            mov rdi, rbp	      4619	elf.c	FUNCTION_65	IF_2	CALL_6
0x4005ef1	      0xe800000000	                          call 0x4005ef6	      4619	elf.c	FUNCTION_65	IF_2	CALL_6
0x4005ef6	          0x8d48ff	                      lea ecx, [rax - 1]	      4620	elf.c	FUNCTION_65	IF_2
0x4005ef9	      0xb801000000	                              mov eax, 1	      4620	elf.c	FUNCTION_65	IF_2
0x4005efe	          0x48d3e0	                             shl rax, cl	      4620	elf.c	FUNCTION_65	IF_2
0x4005f01	      0x4c8d6400ff	                lea r12, [rax + rax - 1]	      4620	elf.c	FUNCTION_65	IF_2
0x4005f06	    0x488b85900000	            mov rax, qword [rbp + 0x90] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f0d	          0x4885c0	                           test rax, rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f10	     0xf84580a0000	                            je 0x400696e	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f16	          0x4531ed	                          xor r13d, r13d	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f19	            0x31f6	                            xor esi, esi	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f1b	          0x4c89f7	                            mov rdi, r14	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f1e	        0xf6402001	               test byte [rax + 0x20], 1	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005f22	            0x7421	                            je 0x4005f45	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005f24	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005f28	            0x89f2	                            mov edx, esi	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005f2a	          0x83c601	                              add esi, 1	      4628	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005f2d	        0x488904d7	            mov qword [rdi + rdx*8], rax	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005f31	          0x4889ca	                            mov rdx, rcx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005f34	        0x48035038	             add rdx, qword [rax + 0x38]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005f38	          0x4c21e1	                            and rcx, r12	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005f3b	          0x4c21e2	                            and rdx, r12	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005f3e	          0x4839ca	                            cmp rdx, rcx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005f41	        0x4c0f42ea	                          cmovb r13, rdx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005f45	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f49	          0x4885c0	                           test rax, rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f4c	            0x75d0	                           jne 0x4005f1e	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f4e	            0x89f0	                            mov eax, esi	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005f50	    0x3b85a0000000	            cmp eax, dword [rbp + 0xa0] 	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4005f56	        0x89742420	             mov dword [rsp + 0x20], esi	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4005f5a	            0x89f6	                            mov esi, esi	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4005f5c	     0xf87b6030000	                            ja 0x4006318	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4005f62	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x4005f67	      0xba08000000	                              mov edx, 8	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x4005f6c	      0xb900000000	                              mov ecx, 0	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x4005f71	      0xe800000000	                          call 0x4005f76	      4637	elf.c	FUNCTION_65	IF_2	CALL_9
0x4005f76	      0xbe00000000	                              mov esi, 0	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x4005f7b	          0x4889ef	                            mov rdi, rbp	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x4005f7e	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4641	elf.c	FUNCTION_65	IF_2
0x4005f87	      0xe800000000	                          call 0x4005f8c	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x4005f8c	          0x4889c2	                            mov rdx, rax	      4647	elf.c	FUNCTION_65	IF_2	CALL_10
0x4005f8f	      0x488d442470	                   lea rax, [rsp + 0x70]	      4642	elf.c	FUNCTION_65	IF_2
0x4005f94	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4607	elf.c	FUNCTION_65	IF_2
0x4005f9c	          0x4885d2	                           test rdx, rdx	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x4005f9f	      0x4889442408	                mov qword [rsp + 8], rax	      4642	elf.c	FUNCTION_65	IF_2
0x4005fa4	            0x740a	                            je 0x4005fb0	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x4005fa6	        0xf6422002	               test byte [rdx + 0x20], 2	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x4005faa	     0xf8536090000	                           jne 0x40068e6	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x4005fb0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4682	elf.c	FUNCTION_65	IF_2
0x4005fb5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4682	elf.c	FUNCTION_65	IF_2
0x4005fb9	          0x4885c0	                           test rax, rax	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4005fbc	          0x4889c7	                            mov rdi, rax	      4682	elf.c	FUNCTION_65	IF_2
0x4005fbf	      0xb801000000	                              mov eax, 1	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4005fc4	          0x4889c6	                            mov rsi, rax	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4005fc7	        0x480f45f7	                         cmovne rsi, rdi	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4005fcb	          0x4889ef	                            mov rdi, rbp	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4005fce	      0x4889742440	             mov qword [rsp + 0x40], rsi	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x4005fd3	      0xbe00000000	                              mov esi, 0	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4005fd8	      0xe800000000	                          call 0x4005fdd	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4005fdd	          0x4885c0	                           test rax, rax	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x4005fe0	          0x4889c7	                            mov rdi, rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4005fe3	      0x4889442448	             mov qword [rsp + 0x48], rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_13
0x4005fe8	            0x7415	                            je 0x4005fff	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x4005fea	        0xf6402002	               test byte [rax + 0x20], 2	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4005fee	      0xb800000000	                              mov eax, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4005ff3	          0x4889c6	                            mov rsi, rax	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4005ff6	        0x480f45f7	                         cmovne rsi, rdi	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4005ffa	      0x4889742448	             mov qword [rsp + 0x48], rsi	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4005fff	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x4006003	            0x85ff	                           test edi, edi	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x4006005	     0xf8448020000	                            je 0x4006253	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x400600b	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_14
0x4006012	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_14
0x4006019	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_14
0x400601d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x4006021	     0xf8477090000	                            je 0x400699e	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x4006027	        0xf6454520	           test byte [rbp + 0x45], 0x20 	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400602b	     0xf8491080000	                            je 0x40068c2	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006031	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4006036	          0x4c89e6	                            mov rsi, r12	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006039	    0x488b97000300	           mov rdx, qword [rdi + 0x300] 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4006040	           0xfb60a	                   movzx ecx, byte [rdx]	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4006043	          0x4801c1	                            add rcx, rax	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4006046	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400604b	          0x488b38	                    mov rdi, qword [rax]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400604e	        0x48237730	             and rsi, qword [rdi + 0x30]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006052	          0x4839f1	                            cmp rcx, rsi	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006055	            0x7734	                            ja 0x400608b	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006057	      0x4c8b542440	            mov r10, qword [rsp + 0x40] 	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400605c	            0x31d2	                            xor edx, edx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400605e	          0x4889f0	                            mov rax, rsi	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006061	          0x49f7f2	                                 div r10	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006064	          0x4889c8	                            mov rax, rcx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006067	          0x4989d0	                             mov r8, rdx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400606a	            0x31d2	                            xor edx, edx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400606c	          0x49f7f2	                                 div r10	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400606f	          0x4939d0	                             cmp r8, rdx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006072	            0x7217	                            jb 0x400608b	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006074	          0x49f7da	                                 neg r10	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4006077	      0xb801000000	                              mov eax, 1	      4598	elf.c	FUNCTION_65	IF_2
0x400607c	          0x4c21d6	                            and rsi, r10	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x400607f	          0x4c39ee	                            cmp rsi, r13	      4598	elf.c	FUNCTION_65	IF_2
0x4006082	       0xf42442428	           cmovb eax, dword [rsp + 0x28]	      4598	elf.c	FUNCTION_65	IF_2
0x4006087	        0x89442428	             mov dword [rsp + 0x28], eax	      4598	elf.c	FUNCTION_65	IF_2
0x400608b	          0x4989fc	                            mov r12, rdi	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400608e	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006093	          0x4531c9	                            xor r9d, r9d	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4006096	          0x4531db	                          xor r11d, r11d	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4006099	      0x48895c2468	             mov qword [rsp + 0x68], rbx	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400609e	      0x48896c2430	             mov qword [rsp + 0x30], rbp	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40060a3	          0x4531ed	                          xor r13d, r13d	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40060a6	          0x4c89fd	                            mov rbp, r15	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40060a9	    0xc74424380000	               mov dword [rsp + 0x38], 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40060b1	        0x488d77ff	                      lea rsi, [rdi - 1]	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40060b5	          0x48f7df	                                 neg rdi	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40060b8	            0x31c0	                            xor eax, eax	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40060ba	            0x31c9	                            xor ecx, ecx	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40060bc	      0x48897c2450	             mov qword [rsp + 0x50], rdi	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40060c1	          0x4489cb	                            mov ebx, r9d	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40060c4	      0x4889742460	             mov qword [rsp + 0x60], rsi	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40060c9	          0x4589df	                          mov r15d, r11d	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40060cc	            0xeb7e	                           jmp 0x400614c	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40060ce	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40060d2	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40060d6	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40060d9	     0xf849f000000	                            je 0x400617e	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40060df	    0x41b801000000	                              mov r8d, 1	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40060e5	          0x4c89e2	                            mov rdx, r12	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x40060e8	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x40060ed	          0x4889ef	                            mov rdi, rbp	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x40060f0	            0xffd0	                                call rax	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_18
0x40060f2	            0x85c0	                           test eax, eax	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x40060f4	     0xf8584000000	                           jne 0x400617e	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x40060fa	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x40060ff	      0xb801000000	                              mov eax, 1	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4006104	          0xf6c208	                              test dl, 8	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4006107	        0x440f44f8	                         cmove r15d, eax	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x400610b	          0xf6c210	                           test dl, 0x10	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x400610e	      0xb801000000	                              mov eax, 1	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x4006113	            0x89d1	                            mov ecx, edx	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4006115	           0xf45d8	                         cmovne ebx, eax	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x4006118	    0x81e102040000	                          and ecx, 0x402	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400611e	            0x31c0	                            xor eax, eax	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4006120	    0x81f900040000	                          cmp ecx, 0x400	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4006126	            0x7405	                            je 0x400612d	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4006128	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x400612d	        0x4983c501	                              add r13, 1	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4006131	      0x44396c2420	           cmp dword [rsp + 0x20], r13d 	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4006136	        0x418d4e01	                      lea ecx, [r14 + 1]	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400613a	     0xf86bc000000	                           jbe 0x40061fc	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4006140	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4006145	          0x4c89e1	                            mov rcx, r12	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4006148	        0x4e8b24ef	            mov r12, qword [rdi + r13*8]	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x400614c	          0x4885c9	                           test rcx, rcx	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x400614f	          0x4589ee	                          mov r14d, r13d	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x4006152	            0x74a6	                            je 0x40060fa	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x4006154	        0x488b5130	            mov rdx, qword [rcx + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4006158	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400615d	          0x4989d0	                             mov r8, rdx	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4006160	          0x4889f7	                            mov rdi, rsi	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4006163	        0x4c2b4128	              sub r8, qword [rcx + 0x28]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4006167	      0x492b7c2428	             sub rdi, qword [r12 + 0x28]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400616c	          0x4939f8	                             cmp r8, rdi	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x400616f	     0xf84f4020000	                            je 0x4006469	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4006175	          0x4885ed	                           test rbp, rbp	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006178	     0xf8550ffffff	                           jne 0x40060ce	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400617e	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_19
0x4006183	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_19
0x4006187	          0x4489f1	                           mov ecx, r14d	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_19
0x400618a	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_19
0x400618f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_19
0x4006194	      0xe837a0ffff	                   call sym.make_mapping	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_19
0x4006199	          0x4885c0	                           test rax, rax	      4838	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x400619c	     0xf8465010000	                            je 0x4006307	      4838	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x40061a2	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x40061a7	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061ac	      0x4889442408	                mov qword [rsp + 8], rax	      4842	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061b1	          0x4189d3	                           mov r11d, edx	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x40061b4	          0x4189d1	                            mov r9d, edx	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x40061b7	          0x488903	                    mov qword [rbx], rax	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061ba	        0x41c1eb03	                             shr r11d, 3	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x40061be	        0x41c1e904	                              shr r9d, 4	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x40061c2	            0x89d0	                            mov eax, edx	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061c4	        0x4183f301	                             xor r11d, 1	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x40061c8	          0x4489cb	                            mov ebx, r9d	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x40061cb	      0x2502040000	                          and eax, 0x402	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061d0	        0x4183e301	                             and r11d, 1	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x40061d4	          0x83e301	                              and ebx, 1	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x40061d7	      0x3d00040000	                          cmp eax, 0x400	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061dc	          0x4589df	                          mov r15d, r11d	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x40061df	     0xf8400030000	                            je 0x40064e5	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061e5	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061ea	      0x4489742438	            mov dword [rsp + 0x38], r14d	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061ef	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061f7	      0xe931ffffff	                           jmp 0x400612d	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40061fc	          0x4d85e4	                           test r12, r12	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x40061ff	          0x4989ef	                            mov r15, rbp	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x4006202	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x4006207	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x400620c	            0x7445	                            je 0x4006253	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x400620e	            0x89c8	                            mov eax, ecx	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4006210	        0x2b442438	             sub eax, dword [rsp + 0x38]	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4006214	          0x83f801	                              cmp eax, 1	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4006217	            0x750e	                           jne 0x4006227	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4006219	    0x81e202040000	                          and edx, 0x402	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x400621f	    0x81fa00040000	                          cmp edx, 0x400	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x4006225	            0x742c	                            je 0x4006253	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x4006227	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_20
0x400622c	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_20
0x4006230	          0x4889ef	                            mov rdi, rbp	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_20
0x4006233	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_20
0x4006238	      0xe8939fffff	                   call sym.make_mapping	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_20
0x400623d	          0x4885c0	                           test rax, rax	      4868	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x4006240	     0xf84c1000000	                            je 0x4006307	      4868	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x4006246	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x400624b	      0x4889442408	                mov qword [rsp + 8], rax	      4872	elf.c	FUNCTION_65	IF_2	IF_31
0x4006250	          0x488907	                    mov qword [rdi], rax	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x4006253	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x4006258	          0x4d85f6	                           test r14, r14	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x400625b	            0x743d	                            je 0x400629a	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x400625d	      0xbe50000000	                           mov esi, 0x50	      4505	elf.c	FUNCTION_63	CALL_1
0x4006262	          0x4889ef	                            mov rdi, rbp	      4505	elf.c	FUNCTION_63	CALL_1
0x4006265	      0xe800000000	                          call 0x400626a	      4505	elf.c	FUNCTION_63	CALL_1
0x400626a	          0x4885c0	                           test rax, rax	      4507	elf.c	FUNCTION_63	IF_1
0x400626d	     0xf8494000000	                            je 0x4006307	      4507	elf.c	FUNCTION_63	IF_1
0x4006273	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x4006278	    0x48c700000000	                      mov qword [rax], 0	      4509	elf.c	FUNCTION_63
0x400627f	    0x48c740080200	                  mov qword [rax + 8], 2	      4510	elf.c	FUNCTION_63
0x4006287	    0xc74044010000	               mov dword [rax + 0x44], 1	      4511	elf.c	FUNCTION_63
0x400628e	        0x4c897048	             mov qword [rax + 0x48], r14	      4512	elf.c	FUNCTION_63
0x4006292	      0x4889442408	                mov qword [rsp + 8], rax	      4882	elf.c	FUNCTION_65	IF_2	IF_33
0x4006297	          0x488907	                    mov qword [rdi], rax	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x400629a	    0x4c8ba5900000	            mov r12, qword [rbp + 0x90] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062a1	          0x4d85e4	                           test r12, r12	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062a4	     0xf8418050000	                            je 0x40067c2	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062aa	          0x4531f6	                          xor r14d, r14d	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062ad	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062b6	          0x4531ed	                          xor r13d, r13d	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062b9	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062be	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x40062c3	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40062c8	            0xa802	                              test al, 2	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40062ca	            0x7464	                            je 0x4006330	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40062cc	        0x498b3424	                    mov rsi, qword [r12]	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40062d0	    0x41b900000000	                              mov r9d, 0	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40062d6	      0xb905000000	                              mov ecx, 5	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40062db	          0x4c89cf	                             mov rdi, r9	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40062de	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40062e0	            0x754e	                           jne 0x4006330	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_22
0x40062e2	    0x41837c247002	               cmp dword [r12 + 0x70], 2	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x40062e8	     0xf840b020000	                            je 0x40064f9	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x40062ee	      0xbe50000000	                           mov esi, 0x50	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x40062f3	          0x4889ef	                            mov rdi, rbp	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x40062f6	      0xe800000000	                          call 0x40062fb	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x40062fb	          0x4885c0	                           test rax, rax	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x40062fe	          0x4889c3	                            mov rbx, rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4006301	     0xf8579060000	                           jne 0x4006980	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4006307	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5105	elf.c	FUNCTION_65	CALL_52
0x400630c	      0xe800000000	                          call 0x4006311	      5105	elf.c	FUNCTION_65	CALL_52
0x4006311	            0x31c0	                            xor eax, eax	      5106	elf.c	FUNCTION_65
0x4006313	      0xe971fbffff	                           jmp 0x4005e89	      5106	elf.c	FUNCTION_65
0x4006318	      0xbe1a120000	                         mov esi, 0x121a	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x400631d	      0xbf00000000	                              mov edi, 0	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4006322	      0xe800000000	                          call 0x4006327	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4006327	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x400632b	      0xe932fcffff	                           jmp 0x4005f62	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4006330	      0x2500040000	                          and eax, 0x400	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4006335	            0x89c2	                            mov edx, eax	      4634	elf.c	FUNCTION_65	IF_2	CALL_8
0x4006337	            0x85d2	                           test edx, edx	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4006339	            0x7415	                            je 0x4006350	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400633b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4006340	          0x4585ed	                         test r13d, r13d	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4006343	        0x490f44c4	                          cmove rax, r12	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4006347	        0x4183c501	                             add r13d, 1	      4934	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x400634b	      0x4889442420	             mov qword [rsp + 0x20], rax	      4934	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4006350	          0x4d85f6	                           test r14, r14	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4006353	     0xf8477010000	                            je 0x40064d0	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4006359	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x400635e	          0x4d85e4	                           test r12, r12	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4006361	     0xf855cffffff	                           jne 0x40062c3	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4006367	          0x4585ed	                         test r13d, r13d	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x400636a	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x400636f	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4006374	     0xf8499030000	                            je 0x4006713	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x400637a	        0x458d65ff	                     lea r12d, [r13 - 1]	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x400637e	          0x4889ef	                            mov rdi, rbp	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4006381	          0x4963c4	                        movsxd rax, r12d	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4006384	    0x488d34c55000	                 lea rsi, [rax*8 + 0x50]	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x400638c	      0xe800000000	                          call 0x4006391	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_29
0x4006391	          0x4885c0	                           test rax, rax	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x4006394	     0xf846dffffff	                            je 0x4006307	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x400639a	          0x4489e1	                           mov ecx, r12d	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x400639d	    0x48c700000000	                      mov qword [rax], 0	      4949	elf.c	FUNCTION_65	IF_2	IF_42
0x40063a4	    0x48c740080700	                  mov qword [rax + 8], 7	      4950	elf.c	FUNCTION_65	IF_2	IF_42
0x40063ac	      0x488d7cc850	          lea rdi, [rax + rcx*8 + 0x50] 	      4950	elf.c	FUNCTION_65	IF_2	IF_42
0x40063b1	        0x44896844	            mov dword [rax + 0x44], r13d	      4951	elf.c	FUNCTION_65	IF_2	IF_42
0x40063b5	    0x48c740100400	               mov qword [rax + 0x10], 4	      4953	elf.c	FUNCTION_65	IF_2	IF_42
0x40063bd	        0x80484001	                 or byte [rax + 0x40], 1	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x40063c1	        0x488d7048	                   lea rsi, [rax + 0x48]	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x40063c5	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x40063ca	            0xeb18	                           jmp 0x40063e4	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x40063cc	         0xf1f4000	                         nop dword [rax]	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x40063d0	          0x48890e	                    mov qword [rsi], rcx	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x40063d3	        0x4883c608	                              add rsi, 8	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x40063d7	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      4979	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x40063db	          0x4839f7	                            cmp rdi, rsi	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x40063de	     0xf8422030000	                            je 0x4006706	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x40063e4	        0xf6412104	               test byte [rcx + 0x21], 4	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x40063e8	            0x75e6	                           jne 0x40063d0	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x40063ea	      0xba05000000	                              mov edx, 5	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x40063ef	      0xbe00000000	                              mov esi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x40063f4	      0xbf00000000	                              mov edi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x40063f9	      0xe800000000	                          call 0x40063fe	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_31
0x40063fe	          0x4889ee	                            mov rsi, rbp	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x4006401	          0x4889c7	                            mov rdi, rax	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x4006404	            0x31c0	                            xor eax, eax	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x4006406	      0xe800000000	                          call 0x400640b	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_30
0x400640b	            0x31db	                            xor ebx, ebx	      4963	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x400640d	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      4963	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4006412	            0xeb2c	                           jmp 0x4006440	      4963	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4006414	      0xbe00000000	                              mov esi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4006419	      0xbf00000000	                              mov edi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x400641e	          0x83c301	                              add ebx, 1	      4969	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4006421	      0xe800000000	                          call 0x4006426	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4006426	          0x4889ee	                            mov rsi, rbp	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4006429	          0x4889c7	                            mov rdi, rax	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x400642c	            0x31c0	                            xor eax, eax	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x400642e	      0xe800000000	                          call 0x4006433	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4006433	          0x4439eb	                           cmp ebx, r13d	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4006436	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4973	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x400643a	     0xf8397040000	                           jae 0x40068d7	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4006440	        0xf6452104	               test byte [rbp + 0x21], 4	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4006444	      0xba05000000	                              mov edx, 5	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_33
0x4006449	            0x75c9	                           jne 0x4006414	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x400644b	      0xbe00000000	                              mov esi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4006450	      0xbf00000000	                              mov edi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4006455	      0xe800000000	                          call 0x400645a	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x400645a	          0x4889ee	                            mov rsi, rbp	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x400645d	          0x4889c7	                            mov rdi, rax	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4006460	            0x31c0	                            xor eax, eax	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4006462	      0xe800000000	                          call 0x4006467	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4006467	            0xebca	                           jmp 0x4006433	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_35
0x4006469	          0x4801d0	                            add rax, rdx	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400646c	     0xf8203fdffff	                            jb 0x4006175	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4006472	          0x4839c6	                            cmp rsi, rax	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4006475	     0xf82fafcffff	                            jb 0x4006175	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x400647b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4006480	          0x8b7f44	            mov edi, dword [rdi + 0x44] 	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4006483	        0x897c245c	             mov dword [rsp + 0x5c], edi	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4006487	          0xc1ef05	                              shr edi, 5	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400648a	    0x81e700010000	                          and edi, 0x100	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4006490	          0x4189f9	                            mov r9d, edi	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4006493	        0x488d78ff	                      lea rdi, [rax - 1]	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4006497	     0xf84aa010000	                            je 0x4006647	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x400649d	          0x4989f0	                             mov r8, rsi	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x40064a0	          0x4931f8	                             xor r8, rdi	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x40064a3	      0x4c85442450	            test qword [rsp + 0x50], r8 	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x40064a8	     0xf8599010000	                           jne 0x4006647	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x40064ae	          0x4885ed	                           test rbp, rbp	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064b1	     0xf8443fcffff	                            je 0x40060fa	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064b7	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064bb	          0x4531c0	                            xor r8d, r8d	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064be	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064c2	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064c5	     0xf851afcffff	                           jne 0x40060e5	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064cb	      0xe92afcffff	                           jmp 0x40060fa	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40064d0	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x40064d8	        0xf6400b01	                test byte [rax + 0xb], 1	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x40064dc	        0x4d0f45f4	                         cmovne r14, r12	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x40064e0	      0xe974feffff	                           jmp 0x4006359	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x40064e5	      0x4489742438	            mov dword [rsp + 0x38], r14d	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_28
0x40064ea	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40064f2	            0x31c0	                            xor eax, eax	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40064f4	      0xe934fcffff	                           jmp 0x400612d	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x40064f9	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x40064fe	          0x4885c0	                           test rax, rax	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4006501	     0xf84e7fdffff	                            je 0x40062ee	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4006507	        0x83787002	               cmp dword [rax + 0x70], 2	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400650b	     0xf85ddfdffff	                           jne 0x40062ee	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006511	        0xf6402002	               test byte [rax + 0x20], 2	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006515	     0xf84d3fdffff	                            je 0x40062ee	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400651b	          0x4d89e0	                             mov r8, r12	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400651e	      0xba01000000	                              mov edx, 1	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006523	            0xeb34	                           jmp 0x4006559	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006525	        0x498b4838	              mov rcx, qword [r8 + 0x38]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4006529	        0x49034830	              add rcx, qword [r8 + 0x30]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x400652d	        0x4883c103	                              add rcx, 3	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4006531	        0x4883e1fc	             and rcx, 0xfffffffffffffffc	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4006535	        0x483b4830	            cmp rcx, qword [rax + 0x30] 	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x4006539	            0x752d	                           jne 0x4006568	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_24
0x400653b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x400653f	          0x83c201	                              add edx, 1	      4908	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006542	          0x4885c9	                           test rcx, rcx	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4006545	            0x7421	                            je 0x4006568	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4006547	        0x83797002	               cmp dword [rcx + 0x70], 2	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400654b	            0x751b	                           jne 0x4006568	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x400654d	        0xf6412002	               test byte [rcx + 0x20], 2	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006551	          0x4989c0	                             mov r8, rax	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006554	            0x7412	                            je 0x4006568	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006556	          0x4889c8	                            mov rax, rcx	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4006559	          0x488b30	                    mov rsi, qword [rax]	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x400655c	      0xb905000000	                              mov ecx, 5	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4006561	          0x4c89cf	                             mov rdi, r9	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4006564	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4006566	            0x74bd	                            je 0x4006525	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37	CALL_23
0x4006568	        0x448d42ff	                      lea r8d, [rdx - 1]	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400656c	          0x4889ef	                            mov rdi, rbp	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x400656f	        0x89542440	             mov dword [rsp + 0x40], edx	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006573	    0x4a8d34c55000	                  lea rsi, [r8*8 + 0x50]	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x400657b	          0x4d89c7	                             mov r15, r8	      4912	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400657e	      0x4c89442438	              mov qword [rsp + 0x38], r8	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4006583	      0xe800000000	                          call 0x4006588	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x4006588	          0x4885c0	                           test rax, rax	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x400658b	          0x4889c3	                            mov rbx, rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_25
0x400658e	     0xf8473fdffff	                            je 0x4006307	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4006594	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006598	    0x48c700000000	                      mov qword [rax], 0	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400659f	    0x48c740080400	                  mov qword [rax + 8], 4	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40065a7	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065ac	          0x83fa01	                              cmp edx, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065af	          0x895044	             mov dword [rax + 0x44], edx	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x40065b2	            0x7653	                           jbe 0x4006607	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065b4	            0x89d6	                            mov esi, edx	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065b6	            0xeb1a	                           jmp 0x40065d2	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065b8	     0xf1f84000000	                   nop dword [rax + rax]	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065c0	        0x4183ff01	                             cmp r15d, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065c4	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065c9	          0x4489fa	                           mov edx, r15d	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065cc	            0x7435	                            je 0x4006603	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065ce	        0x4183ef01	                             sub r15d, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065d2	            0x89f0	                            mov eax, esi	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065d4	            0x29d0	                            sub eax, edx	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065d6	    0x41f644242104	               test byte [r12 + 0x21], 4	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x40065dc	      0x4c8964c348	     mov qword [rbx + rax*8 + 0x48], r12	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065e1	            0x74dd	                            je 0x40065c0	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x40065e3	      0xbe3a130000	                         mov esi, 0x133a	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x40065e8	      0xbf00000000	                              mov edi, 0	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x40065ed	      0xe800000000	                          call 0x40065f2	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_26
0x40065f2	        0x4183ff01	                             cmp r15d, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065f6	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065f9	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x40065fe	          0x4489fa	                           mov edx, r15d	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4006601	            0x75cb	                           jne 0x40065ce	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4006603	        0x448d46ff	                      lea r8d, [rsi - 1]	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4006607	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x400660c	      0x4e8964c348	      mov qword [rbx + r8*8 + 0x48], r12	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006611	    0x81e200040000	                          and edx, 0x400	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4006617	            0x7512	                           jne 0x400662b	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4006619	      0x488b442408	                mov rax, qword [rsp + 8]	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400661e	      0x48895c2408	                mov qword [rsp + 8], rbx	      4928	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006623	          0x488918	                    mov qword [rax], rbx	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006626	      0xe90cfdffff	                           jmp 0x4006337	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400662b	      0xbe3e130000	                         mov esi, 0x133e	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4006630	      0xbf00000000	                              mov edi, 0	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4006635	      0xe800000000	                          call 0x400663a	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x400663a	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x400663f	    0x81e200040000	                          and edx, 0x400	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4006645	            0xebd2	                           jmp 0x4006619	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_27
0x4006647	      0x4c8b542440	            mov r10, qword [rsp + 0x40] 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x400664c	          0x4c01d7	                            add rdi, r10	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x400664f	          0x4839f8	                            cmp rax, rdi	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4006652	     0xf8798000000	                            ja 0x40066f0	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4006658	      0x48237c2450	             and rdi, qword [rsp + 0x50]	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400665d	        0x4a8d0417	                    lea rax, [rdi + r10]	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006661	          0x4839d0	                            cmp rax, rdx	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4006664	            0x7609	                           jbe 0x400666f	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4006666	          0x4839c6	                            cmp rsi, rax	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_17
0x4006669	     0xf8306fbffff	                           jae 0x4006175	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_17
0x400666f	    0xf74120020400	         test dword [rcx + 0x20], 0x402 	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4006676	            0x750f	                           jne 0x4006687	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4006678	    0x41f744242002	         test dword [r12 + 0x20], 0x402 	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4006681	     0xf85eefaffff	                           jne 0x4006175	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4006687	          0x4585c9	                           test r9d, r9d	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x400668a	     0xf841efeffff	                            je 0x40064ae	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x4006690	          0x4885ed	                           test rbp, rbp	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4006693	     0xf84f8030000	                            je 0x4006a91	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4006699	        0xf6450320	               test byte [rbp + 3], 0x20	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400669d	            0x7413	                            je 0x40066b2	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x400669f	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x40066a4	          0xc1e804	                              shr eax, 4	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x40066a7	          0x83e001	                              and eax, 1	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x40066aa	            0x39d8	                            cmp eax, ebx	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x40066ac	     0xf851cfaffff	                           jne 0x40060ce	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x40066b2	          0x4585ff	                         test r15d, r15d	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40066b5	     0xf85fcfdffff	                           jne 0x40064b7	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40066bb	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40066c0	          0xf6c208	                              test dl, 8	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40066c3	     0xf8405faffff	                            je 0x40060ce	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x40066c9	          0x4885ed	                           test rbp, rbp	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066cc	     0xf8439faffff	                            je 0x400610b	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066d2	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066d6	          0x4531c0	                            xor r8d, r8d	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066d9	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066dd	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066e0	     0xf85fff9ffff	                           jne 0x40060e5	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066e6	      0xe920faffff	                           jmp 0x400610b	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066eb	       0xf1f440000	                   nop dword [rax + rax]	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40066f0	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40066f5	          0x4839fa	                            cmp rdx, rdi	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x40066f8	          0x4889f8	                            mov rax, rdi	      4770	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40066fb	     0xf8265ffffff	                            jb 0x4006666	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4006701	      0xe969ffffff	                           jmp 0x400666f	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19	CALL_16
0x4006706	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x400670b	      0x4889442408	                mov qword [rsp + 8], rax	      4983	elf.c	FUNCTION_65	IF_2	IF_42
0x4006710	          0x488907	                    mov qword [rdi], rax	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x4006713	          0x4d85f6	                           test r14, r14	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4006716	     0xf84a6000000	                            je 0x40067c2	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400671c	        0xf6454520	           test byte [rbp + 0x45], 0x20 	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4006720	     0xf849c000000	                            je 0x40067c2	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4006726	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x400672b	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_37
0x4006732	        0xf6400b01	                test byte [rax + 0xb], 1	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_37
0x4006736	            0x7478	                            je 0x40067b0	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_37
0x4006738	    0x81782c001000	         cmp dword [rax + 0x2c], 0x1000 	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_38
0x400673f	            0x776f	                            ja 0x40067b0	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_38
0x4006741	        0x418b4620	            mov eax, dword [r14 + 0x20] 	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4006745	      0xbe58000000	                           mov esi, 0x58	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_39
0x400674a	          0x4889ef	                            mov rdi, rbp	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_39
0x400674d	            0x89c2	                            mov edx, eax	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400674f	          0x83e208	                              and edx, 8	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4006752	          0x83fa01	                              cmp edx, 1	      4993	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006755	          0x4d19e4	                            sbb r12, r12	      4993	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006758	        0x4183e402	                             and r12d, 2	      4993	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400675c	        0x4983c404	                              add r12, 4	      4993	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006760	          0x4c89e2	                            mov rdx, r12	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x4006763	        0x4883ca01	                               or rdx, 1	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x4006767	            0xa810	                           test al, 0x10	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x4006769	        0x4c0f45e2	                         cmovne r12, rdx	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400676d	      0xe800000000	                          call 0x4006772	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_39
0x4006772	          0x4885c0	                           test rax, rax	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x4006775	     0xf848cfbffff	                            je 0x4006307	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x400677b	    0x498b96e00000	            mov rdx, qword [r14 + 0xe0] 	      5005	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_40
0x4006782	    0x48c700000000	                      mov qword [rax], 0	      5003	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006789	          0x8b522c	            mov edx, dword [rdx + 0x2c] 	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400678c	    0xc74044010000	               mov dword [rax + 0x44], 1	      5006	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006793	        0x80484001	                 or byte [rax + 0x40], 1	      5007	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006797	        0x4c897048	             mov qword [rax + 0x48], r14	      5008	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400679b	        0x4c896010	             mov qword [rax + 0x10], r12	      5009	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400679f	    0x8dba55e57464	             lea edi, [rdx + 0x6474e555]	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x40067a5	        0x48897808	                mov qword [rax + 8], rdi	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x40067a9	        0x49894500	                    mov qword [r13], rax	      5011	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x40067ad	          0x4989c5	                            mov r13, rax	      5012	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x40067b0	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x40067b4	          0x4d85f6	                           test r14, r14	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x40067b7	     0xf856effffff	                           jne 0x400672b	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x40067bd	      0x4c896c2408	                mov qword [rsp + 8], r13	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x40067c2	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_41
0x40067c9	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_41
0x40067d0	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_41
0x40067d4	          0x4d85e4	                           test r12, r12	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x40067d7	            0x740f	                            je 0x40067e8	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x40067d9	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x40067de	        0xf6422002	               test byte [rdx + 0x20], 2	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x40067e2	     0xf85c6010000	                           jne 0x40069ae	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x40067e8	          0x8b7054	            mov esi, dword [rax + 0x54] 	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_43
0x40067eb	            0x85f6	                           test esi, esi	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_43
0x40067ed	     0xf8518020000	                           jne 0x4006a0b	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_43
0x40067f3	          0x4d85ff	                           test r15, r15	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x40067f6	     0xf84a1000000	                            je 0x400689d	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x40067fc	      0x41f6470310	               test byte [r15 + 3], 0x10	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x4006801	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006806	     0xf8496000000	                            je 0x40068a2	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400680c	          0x4d85e4	                           test r12, r12	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400680f	     0xf84ee010000	                            je 0x4006a03	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006815	          0x4c89e0	                            mov rax, r12	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006818	            0xeb0e	                           jmp 0x4006828	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400681a	    0x660f1f440000	                    nop word [rax + rax]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006820	          0x488b00	                    mov rax, qword [rax]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006823	          0x4885c0	                           test rax, rax	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006826	            0x747a	                            je 0x40068a2	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006828	      0x4883780801	                  cmp qword [rax + 8], 1	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400682d	            0x75f1	                           jne 0x4006820	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400682f	          0x8b5044	            mov edx, dword [rax + 0x44] 	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4006832	            0x85d2	                           test edx, edx	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4006834	            0x74ea	                            je 0x4006820	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4006836	        0x488b4848	            mov rcx, qword [rax + 0x48] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400683a	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400683e	    0x493b8fc80000	            cmp rcx, qword [r15 + 0xc8] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4006845	            0x72d9	                            jb 0x4006820	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4006847	    0x493b8fd00000	            cmp rcx, qword [r15 + 0xd0] 	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400684e	            0x73d0	                           jae 0x4006820	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x4006850	          0x83ea01	                              sub edx, 1	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x4006853	          0x83faff	             cmp edx, 0xffffffffffffffff	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x4006856	            0x74c8	                            je 0x4006820	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x4006858	            0x89d1	                            mov ecx, edx	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400685a	      0x488b4cc848	    mov rcx, qword [rax + rcx*8 + 0x48] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400685f	          0x8b4920	            mov ecx, dword [rcx + 0x20] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4006862	    0x81e102010000	                          and ecx, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4006868	    0x81f902010000	                          cmp ecx, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x400686e	            0x75e0	                           jne 0x4006850	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x4006870	      0xbe50000000	                           mov esi, 0x50	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_46
0x4006875	          0x4889ef	                            mov rdi, rbp	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_46
0x4006878	      0xe800000000	                          call 0x400687d	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_46
0x400687d	          0x4885c0	                           test rax, rax	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x4006880	     0xf8481faffff	                            je 0x4006307	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x4006886	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400688b	    0x48c700000000	                      mov qword [rax], 0	      5083	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x4006892	    0x48c7400852e5	        mov qword [rax + 8], 0x6474e552 	      5084	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400689a	          0x488907	                    mov qword [rdi], rax	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400689d	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x40068a2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5090	elf.c	FUNCTION_65	IF_2	CALL_47
0x40068a7	      0xe800000000	                          call 0x40068ac	      5090	elf.c	FUNCTION_65	IF_2	CALL_47
0x40068ac	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x40068b3	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x40068ba	          0x4c8922	                    mov qword [rdx], r12	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x40068bd	      0xe9e0f4ffff	                           jmp 0x4005da2	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x40068c2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_48
0x40068c7	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4722	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	ELSE_1
0x40068cf	          0x488b38	                    mov rdi, qword [rax]	      4722	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	ELSE_1
0x40068d2	      0xe9b4f7ffff	                           jmp 0x400608b	      4722	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	ELSE_1
0x40068d7	      0xbf11000000	                           mov edi, 0x11	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_36
0x40068dc	      0xe800000000	                          call 0x40068e1	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_36
0x40068e1	      0xe921faffff	                           jmp 0x4006307	      4976	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x40068e6	      0xbe50000000	                           mov esi, 0x50	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x40068eb	          0x4889ef	                            mov rdi, rbp	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x40068ee	      0x4889542408	                mov qword [rsp + 8], rdx	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x40068f3	      0xe800000000	                          call 0x40068f8	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x40068f8	          0x4885c0	                           test rax, rax	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x40068fb	          0x4989c6	                            mov r14, rax	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_11
0x40068fe	     0xf8403faffff	                            je 0x4006307	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x4006904	        0x80484021	              or byte [rax + 0x40], 0x21	      4658	elf.c	FUNCTION_65	IF_2	IF_6
0x4006908	    0x48c700000000	                      mov qword [rax], 0	      4654	elf.c	FUNCTION_65	IF_2	IF_6
0x400690f	      0xbe50000000	                           mov esi, 0x50	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_12
0x4006914	    0x48c740080600	                  mov qword [rax + 8], 6	      4655	elf.c	FUNCTION_65	IF_2	IF_6
0x400691c	    0x48c740100400	               mov qword [rax + 0x10], 4	      4656	elf.c	FUNCTION_65	IF_2	IF_6
0x4006924	          0x4889ef	                            mov rdi, rbp	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_12
0x4006927	      0x4889442470	             mov qword [rsp + 0x70], rax	      4660	elf.c	FUNCTION_65	IF_2	IF_6
0x400692c	      0xe800000000	                          call 0x4006931	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_12
0x4006931	          0x4885c0	                           test rax, rax	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x4006934	     0xf84cdf9ffff	                            je 0x4006307	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x400693a	      0x488b542408	                mov rdx, qword [rsp + 8]	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x400693f	    0x48c700000000	                      mov qword [rax], 0	      4667	elf.c	FUNCTION_65	IF_2	IF_6
0x4006946	    0x48c740080300	                  mov qword [rax + 8], 3	      4668	elf.c	FUNCTION_65	IF_2	IF_6
0x400694e	    0xc74044010000	               mov dword [rax + 0x44], 1	      4669	elf.c	FUNCTION_65	IF_2	IF_6
0x4006955	      0x4889442408	                mov qword [rsp + 8], rax	      4673	elf.c	FUNCTION_65	IF_2	IF_6
0x400695a	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4659	elf.c	FUNCTION_65	IF_2	IF_6
0x4006962	        0x48895048	             mov qword [rax + 0x48], rdx	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x4006966	          0x498906	                    mov qword [r14], rax	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x4006969	      0xe942f6ffff	                           jmp 0x4005fb0	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x400696e	            0x31f6	                            xor esi, esi	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4006970	          0x4531ed	                          xor r13d, r13d	      4606	elf.c	FUNCTION_65	IF_2
0x4006973	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4622	elf.c	FUNCTION_65	IF_2
0x400697b	      0xe9e2f5ffff	                           jmp 0x4005f62	      4622	elf.c	FUNCTION_65	IF_2
0x4006980	    0x48c703000000	                      mov qword [rbx], 0	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006987	    0x48c743080400	                  mov qword [rbx + 8], 4	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400698f	          0x4531c0	                            xor r8d, r8d	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006992	    0xc74344010000	               mov dword [rbx + 0x44], 1	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006999	      0xe969fcffff	                           jmp 0x4006607	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400699e	          0x4c89fe	                            mov rsi, r15	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40069a1	          0x4889ef	                            mov rdi, rbp	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40069a4	      0xe8e799ffff	        call sym.get_program_header_size	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40069a9	      0xe979f6ffff	                           jmp 0x4006027	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_15
0x40069ae	      0xbe50000000	                           mov esi, 0x50	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_42
0x40069b3	          0x4889ef	                            mov rdi, rbp	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_42
0x40069b6	      0xe800000000	                          call 0x40069bb	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_42
0x40069bb	          0x4885c0	                           test rax, rax	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x40069be	     0xf8443f9ffff	                            je 0x4006307	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x40069c4	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x40069c9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40069ce	    0x48c700000000	                      mov qword [rax], 0	      5025	elf.c	FUNCTION_65	IF_2	IF_51
0x40069d5	    0x48c7400850e5	        mov qword [rax + 8], 0x6474e550 	      5026	elf.c	FUNCTION_65	IF_2	IF_51
0x40069dd	    0xc74044010000	               mov dword [rax + 0x44], 1	      5027	elf.c	FUNCTION_65	IF_2	IF_51
0x40069e4	      0x4889442408	                mov qword [rsp + 8], rax	      5031	elf.c	FUNCTION_65	IF_2	IF_51
0x40069e9	        0x48895048	             mov qword [rax + 0x48], rdx	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x40069ed	          0x488907	                    mov qword [rdi], rax	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40069f0	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40069f7	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40069fe	      0xe9e5fdffff	                           jmp 0x40067e8	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x4006a03	          0x4531e4	                          xor r12d, r12d	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006a06	      0xe997feffff	                           jmp 0x40068a2	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006a0b	      0xbe50000000	                           mov esi, 0x50	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_44
0x4006a10	          0x4889ef	                            mov rdi, rbp	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_44
0x4006a13	      0xe800000000	                          call 0x4006a18	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_44
0x4006a18	          0x4885c0	                           test rax, rax	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x4006a1b	     0xf84e6f8ffff	                            je 0x4006307	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x4006a21	    0x48c700000000	                      mov qword [rax], 0	      5040	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a28	    0x48c7400851e5	        mov qword [rax + 8], 0x6474e551 	      5041	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a30	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x4006a37	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a3b	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x4006a42	          0x83c901	                               or ecx, 1	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a45	          0x8b7a54	            mov edi, dword [rdx + 0x54] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x4006a48	        0x48897810	             mov qword [rax + 0x10], rdi	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_45
0x4006a4c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a51	    0x8b977c030000	           mov edx, dword [rdi + 0x37c] 	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a57	          0x4885d2	                           test rdx, rdx	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a5a	        0x48895028	             mov qword [rax + 0x28], rdx	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a5e	           0xf95c2	                                setne dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a61	          0x83e1fb	                     and ecx, 0xfffffffb	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a64	          0xc1e202	                              shl edx, 2	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a67	             0x9ca	                             or edx, ecx	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a69	          0x885040	               mov byte [rax + 0x40], dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a6c	        0x498b4f10	            mov rcx, qword [r15 + 0x10] 	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006a70	          0x4885c9	                           test rcx, rcx	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006a73	            0x7e0a	                           jle 0x4006a7f	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006a75	          0x83ca08	                               or edx, 8	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006a78	        0x48894830	             mov qword [rax + 0x30], rcx	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006a7c	          0x885040	               mov byte [rax + 0x40], dl	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006a7f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a84	      0x4889442408	                mov qword [rsp + 8], rax	      5053	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a89	          0x488907	                    mov qword [rdi], rax	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a8c	      0xe96bfdffff	                           jmp 0x40067fc	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x4006a91	          0x4585ff	                         test r15d, r15d	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006a94	     0xf8560f6ffff	                           jne 0x40060fa	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006a9a	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006a9f	          0xf6c208	                              test dl, 8	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006aa2	     0xf84d6f6ffff	                            je 0x400617e	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006aa8	      0xe95ef6ffff	                           jmp 0x400610b	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006aad	      0xe800000000	                          call 0x4006ab2	      5107	elf.c	FUNCTION_65
_bfd_elf_find_inliner_info	SWITCH,0:CALL,2:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	3
0x400e2d0	    0x4c8b87f80000	              mov r8, qword [rdi + 0xf8]	      8809	elf.c	FUNCTION_105	CALL_1
0x400e2d7	    0x4981c0300300	                           add r8, 0x330	      8809	elf.c	FUNCTION_105	CALL_1
0x400e2de	      0xe900000000	                           jmp 0x400e2e3	      8809	elf.c	FUNCTION_105	CALL_1
_bfd_elf_get_sec_type_attr	SWITCH,0:CALL,3:IF,6:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	48
0x4005390	              0x55	                                push rbp	      2797	elf.c	FUNCTION_40
0x4005391	              0x53	                                push rbx	      2797	elf.c	FUNCTION_40
0x4005392	        0x4883ec08	                              sub rsp, 8	      2797	elf.c	FUNCTION_40
0x4005396	          0x488b2e	                    mov rbp, qword [rsi]	      2803	elf.c	FUNCTION_40	IF_1
0x4005399	          0x4885ed	                           test rbp, rbp	      2803	elf.c	FUNCTION_40	IF_1
0x400539c	     0xf847e000000	                            je 0x4005420	      2803	elf.c	FUNCTION_40	IF_1
0x40053a2	        0x488b4708	                mov rax, qword [rdi + 8]	      2806	elf.c	FUNCTION_40	CALL_1
0x40053a6	          0x4889f3	                            mov rbx, rsi	      2806	elf.c	FUNCTION_40	CALL_1
0x40053a9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2807	elf.c	FUNCTION_40
0x40053b0	    0x488bb0080300	           mov rsi, qword [rax + 0x308] 	      2807	elf.c	FUNCTION_40
0x40053b7	          0x4885f6	                           test rsi, rsi	      2808	elf.c	FUNCTION_40	IF_2
0x40053ba	            0x7424	                            je 0x40053e0	      2808	elf.c	FUNCTION_40	IF_2
0x40053bc	         0xfb65325	           movzx edx, byte [rbx + 0x25] 	      2812	elf.c	FUNCTION_40	IF_2
0x40053c0	          0x4889ef	                            mov rdi, rbp	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40053c3	          0xc0ea02	                               shr dl, 2	      2812	elf.c	FUNCTION_40	IF_2
0x40053c6	          0x83e201	                              and edx, 1	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40053c9	      0xe800000000	                          call 0x40053ce	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x40053ce	          0x4885c0	                           test rax, rax	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x40053d1	            0x740d	                            je 0x40053e0	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x40053d3	        0x4883c408	                              add rsp, 8	      2830	elf.c	FUNCTION_40
0x40053d7	              0x5b	                                 pop rbx	      2830	elf.c	FUNCTION_40
0x40053d8	              0x5d	                                 pop rbp	      2830	elf.c	FUNCTION_40
0x40053d9	              0xc3	                                     ret	      2830	elf.c	FUNCTION_40
0x40053da	    0x660f1f440000	                    nop word [rax + rax]	      2830	elf.c	FUNCTION_40
0x40053e0	        0x807d002e	                    cmp byte [rbp], 0x2e	      2817	elf.c	FUNCTION_40	IF_4
0x40053e4	            0x753a	                           jne 0x4005420	      2817	elf.c	FUNCTION_40	IF_4
0x40053e6	         0xfbe4501	               movsx eax, byte [rbp + 1]	      2820	elf.c	FUNCTION_40
0x40053ea	          0x83e862	                           sub eax, 0x62	      2820	elf.c	FUNCTION_40
0x40053ed	          0x83f818	                           cmp eax, 0x18	      2821	elf.c	FUNCTION_40	IF_5
0x40053f0	            0x772e	                            ja 0x4005420	      2821	elf.c	FUNCTION_40	IF_5
0x40053f2	            0x4898	                                    cdqe	      2824	elf.c	FUNCTION_40
0x40053f4	    0x488b34c50000	                  mov rsi, qword [rax*8]	      2824	elf.c	FUNCTION_40
0x40053fc	          0x4885f6	                           test rsi, rsi	      2826	elf.c	FUNCTION_40	IF_6
0x40053ff	            0x741f	                            je 0x4005420	      2826	elf.c	FUNCTION_40	IF_6
0x4005401	         0xfb65325	           movzx edx, byte [rbx + 0x25] 	      2829	elf.c	FUNCTION_40	CALL_3
0x4005405	        0x4883c408	                              add rsp, 8	      2830	elf.c	FUNCTION_40
0x4005409	          0x4889ef	                            mov rdi, rbp	      2829	elf.c	FUNCTION_40	CALL_3
0x400540c	              0x5b	                                 pop rbx	      2830	elf.c	FUNCTION_40
0x400540d	              0x5d	                                 pop rbp	      2830	elf.c	FUNCTION_40
0x400540e	          0xc0ea02	                               shr dl, 2	      2829	elf.c	FUNCTION_40	CALL_3
0x4005411	          0x83e201	                              and edx, 1	      2829	elf.c	FUNCTION_40	CALL_3
0x4005414	      0xe997feffff	    jmp sym._bfd_elf_get_special_section	      2829	elf.c	FUNCTION_40	CALL_3
0x4005419	     0xf1f80000000	                         nop dword [rax]	      2829	elf.c	FUNCTION_40	CALL_3
0x4005420	        0x4883c408	                              add rsp, 8	      2830	elf.c	FUNCTION_40
0x4005424	            0x31c0	                            xor eax, eax	      2804	elf.c	FUNCTION_40	IF_1
0x4005426	              0x5b	                                 pop rbx	      2830	elf.c	FUNCTION_40
0x4005427	              0x5d	                                 pop rbp	      2830	elf.c	FUNCTION_40
0x4005428	              0xc3	                                     ret	      2830	elf.c	FUNCTION_40
_bfd_elf_find_line	SWITCH,0:CALL,2:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	15
0x400e290	        0x4883ec08	                              sub rsp, 8	      8789	elf.c	FUNCTION_104
0x400e294	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8790	elf.c	FUNCTION_104	CALL_1
0x400e29b	          0x4989c9	                             mov r9, rcx	      8789	elf.c	FUNCTION_104
0x400e29e	            0x31c9	                            xor ecx, ecx	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2a0	    0x480530030000	                          add rax, 0x330	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2a6	              0x50	                                push rax	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2a7	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2a9	      0x6800000000	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2ae	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2b0	            0x4150	                                 push r8	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2b2	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2b4	          0x4531c0	                            xor r8d, r8d	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2b7	      0xe800000000	                          call 0x400e2bc	      8790	elf.c	FUNCTION_104	CALL_1
0x400e2bc	        0x4883c438	                           add rsp, 0x38	      8794	elf.c	FUNCTION_104
0x400e2c0	              0xc3	                                     ret	      8794	elf.c	FUNCTION_104
bfd_sym_from_r_symndx	SWITCH,0:CALL,3:IF,3:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	70
0x4005180	            0x4156	                                push r14	      2560	elf.c	FUNCTION_37
0x4005182	            0x4155	                                push r13	      2560	elf.c	FUNCTION_37
0x4005184	          0x4989d5	                            mov r13, rdx	      2560	elf.c	FUNCTION_37
0x4005187	            0x4154	                                push r12	      2560	elf.c	FUNCTION_37
0x4005189	              0x55	                                push rbp	      2560	elf.c	FUNCTION_37
0x400518a	        0x4183e51f	                          and r13d, 0x1f	      2560	elf.c	FUNCTION_37
0x400518e	              0x53	                                push rbx	      2560	elf.c	FUNCTION_37
0x400518f	          0x4889f5	                            mov rbp, rsi	      2560	elf.c	FUNCTION_37
0x4005192	          0x4889fb	                            mov rbx, rdi	      2560	elf.c	FUNCTION_37
0x4005195	          0x4989d4	                            mov r12, rdx	      2560	elf.c	FUNCTION_37
0x4005198	        0x4883ec30	                           sub rsp, 0x30	      2560	elf.c	FUNCTION_37
0x400519c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2560	elf.c	FUNCTION_37
0x40051a5	      0x4889442428	             mov qword [rsp + 0x28], rax	      2560	elf.c	FUNCTION_37
0x40051aa	            0x31c0	                            xor eax, eax	      2560	elf.c	FUNCTION_37
0x40051ac	          0x483937	                    cmp qword [rdi], rsi	      2563	elf.c	FUNCTION_37	IF_1
0x40051af	     0xf849b000000	                            je 0x4005250	      2563	elf.c	FUNCTION_37	IF_1
0x40051b5	        0x498d4508	                      lea rax, [r13 + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051b9	        0x4883ec08	                              sub rsp, 8	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051bd	          0x4c89e1	                            mov rcx, r12	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051c0	      0xba01000000	                              mov edx, 1	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051c5	          0x4889ef	                            mov rdi, rbp	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051c8	        0x48c1e005	                              shl rax, 5	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051cc	      0x4c8d740308	                lea r14, [rbx + rax + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051d1	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x40051d8	          0x4d89f0	                             mov r8, r14	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051db	        0x488d7068	                   lea rsi, [rax + 0x68]	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x40051df	      0x488d442408	                      lea rax, [rsp + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051e4	              0x50	                                push rax	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051e5	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051ea	      0xe800000000	                          call 0x40051ef	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051ef	          0x4885c0	                           test rax, rax	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051f2	              0x5a	                                 pop rdx	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051f3	              0x59	                                 pop rcx	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051f4	            0x747a	                            je 0x4005270	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x40051f6	          0x483b2b	                    cmp rbp, qword [rbx]	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x40051f9	            0x742d	                            je 0x4005228	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x40051fb	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        90	string3.h	FUNCTION_207	CALL_6
0x40051ff	            0x89da	                            mov edx, ebx	        90	string3.h	FUNCTION_207	CALL_6
0x4005201	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        90	string3.h	FUNCTION_207	CALL_6
0x4005208	        0x48894308	                mov qword [rbx + 8], rax	        90	string3.h	FUNCTION_207	CALL_6
0x400520c	    0x488983000100	            mov qword [rbx + 0x100], rax	        90	string3.h	FUNCTION_207	CALL_6
0x4005213	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_207	CALL_6
0x4005217	            0x29fa	                            sub edx, edi	        90	string3.h	FUNCTION_207	CALL_6
0x4005219	    0x8d8a08010000	                  lea ecx, [rdx + 0x108]	        90	string3.h	FUNCTION_207	CALL_6
0x400521f	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_207	CALL_6
0x4005222	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_207	CALL_6
0x4005225	          0x48892b	                    mov qword [rbx], rbp	      2577	elf.c	FUNCTION_37	IF_1	IF_3
0x4005228	      0x4e8964eb08	        mov qword [rbx + r13*8 + 8], r12	      2579	elf.c	FUNCTION_37	IF_1
0x400522d	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2583	elf.c	FUNCTION_37
0x4005232	    0x644833342528	                xor rsi, qword fs:[0x28]	      2583	elf.c	FUNCTION_37
0x400523b	          0x4c89f0	                            mov rax, r14	      2583	elf.c	FUNCTION_37
0x400523e	            0x7535	                           jne 0x4005275	      2583	elf.c	FUNCTION_37
0x4005240	        0x4883c430	                           add rsp, 0x30	      2583	elf.c	FUNCTION_37
0x4005244	              0x5b	                                 pop rbx	      2583	elf.c	FUNCTION_37
0x4005245	              0x5d	                                 pop rbp	      2583	elf.c	FUNCTION_37
0x4005246	            0x415c	                                 pop r12	      2583	elf.c	FUNCTION_37
0x4005248	            0x415d	                                 pop r13	      2583	elf.c	FUNCTION_37
0x400524a	            0x415e	                                 pop r14	      2583	elf.c	FUNCTION_37
0x400524c	              0xc3	                                     ret	      2583	elf.c	FUNCTION_37
0x400524d	           0xf1f00	                         nop dword [rax]	      2583	elf.c	FUNCTION_37
0x4005250	      0x4a3b54ef08	       cmp rdx, qword [rdi + r13*8 + 8] 	      2563	elf.c	FUNCTION_37	IF_1
0x4005255	     0xf855affffff	                           jne 0x40051b5	      2563	elf.c	FUNCTION_37	IF_1
0x400525b	        0x4983c508	                              add r13, 8	      2563	elf.c	FUNCTION_37	IF_1
0x400525f	        0x49c1e505	                              shl r13, 5	      2563	elf.c	FUNCTION_37	IF_1
0x4005263	      0x4e8d742f08	                lea r14, [rdi + r13 + 8]	      2563	elf.c	FUNCTION_37	IF_1
0x4005268	            0xebc3	                           jmp 0x400522d	      2563	elf.c	FUNCTION_37	IF_1
0x400526a	    0x660f1f440000	                    nop word [rax + rax]	      2563	elf.c	FUNCTION_37	IF_1
0x4005270	          0x4531f6	                          xor r14d, r14d	      2572	elf.c	FUNCTION_37	IF_1	IF_2
0x4005273	            0xebb8	                           jmp 0x400522d	      2572	elf.c	FUNCTION_37	IF_1	IF_2
0x4005275	      0xe800000000	                          call 0x400527a	      2583	elf.c	FUNCTION_37
bfd_elf_make_object	SWITCH,0:CALL,2:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	5
0x40021b0	        0x488b4708	                mov rax, qword [rdi + 8]	       262	elf.c	FUNCTION_14	CALL_1
0x40021b4	      0xbea00c0000	                          mov esi, 0xca0	       263	elf.c	FUNCTION_14	CALL_2
0x40021b9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       263	elf.c	FUNCTION_14	CALL_2
0x40021c0	          0x8b5004	                mov edx, dword [rax + 4]	       263	elf.c	FUNCTION_14	CALL_2
0x40021c3	      0xe928ffffff	         jmp sym.bfd_elf_allocate_object	       263	elf.c	FUNCTION_14	CALL_2
convert_debug_to_zdebug	SWITCH,0:CALL,3:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	25
0x4000340	            0x4154	                                push r12	       968	elf.c	FUNCTION_24
0x4000342	              0x55	                                push rbp	       968	elf.c	FUNCTION_24
0x4000343	          0x4889f5	                            mov rbp, rsi	       968	elf.c	FUNCTION_24
0x4000346	              0x53	                                push rbx	       968	elf.c	FUNCTION_24
0x4000347	          0x4889fb	                            mov rbx, rdi	       968	elf.c	FUNCTION_24
0x400034a	          0x4889f7	                            mov rdi, rsi	       969	elf.c	FUNCTION_24	CALL_1
0x400034d	      0xe800000000	                          call 0x4000352	       969	elf.c	FUNCTION_24	CALL_1
0x4000352	          0x8d7002	                      lea esi, [rax + 2]	       970	elf.c	FUNCTION_24	CALL_2
0x4000355	          0x4889df	                            mov rdi, rbx	       970	elf.c	FUNCTION_24	CALL_2
0x4000358	          0x4989c4	                            mov r12, rax	       969	elf.c	FUNCTION_24	CALL_1
0x400035b	      0xe800000000	                          call 0x4000360	       970	elf.c	FUNCTION_24	CALL_2
0x4000360	          0x4885c0	                           test rax, rax	       971	elf.c	FUNCTION_24	IF_1
0x4000363	          0x4889c3	                            mov rbx, rax	       970	elf.c	FUNCTION_24	CALL_2
0x4000366	            0x7417	                            je 0x400037f	       971	elf.c	FUNCTION_24	IF_1
0x4000368	        0x488d7802	                      lea rdi, [rax + 2]	        53	string3.h	FUNCTION_204	CALL_3
0x400036c	        0x488d7501	                      lea rsi, [rbp + 1]	        53	string3.h	FUNCTION_204	CALL_3
0x4000370	          0xc6002e	                    mov byte [rax], 0x2e	       973	elf.c	FUNCTION_24
0x4000373	        0xc640017a	                mov byte [rax + 1], 0x7a	       974	elf.c	FUNCTION_24
0x4000377	          0x4489e2	                           mov edx, r12d	        53	string3.h	FUNCTION_204	CALL_3
0x400037a	      0xe800000000	                          call 0x400037f	        53	string3.h	FUNCTION_204	CALL_3
0x400037f	          0x4889d8	                            mov rax, rbx	       977	elf.c	FUNCTION_24
0x4000382	              0x5b	                                 pop rbx	       977	elf.c	FUNCTION_24
0x4000383	              0x5d	                                 pop rbp	       977	elf.c	FUNCTION_24
0x4000384	            0x415c	                                 pop r12	       977	elf.c	FUNCTION_24
0x4000386	              0xc3	                                     ret	       977	elf.c	FUNCTION_24
_bfd_elf_setup_sections	SWITCH,0:CALL,22:IF,11:functions,0:ELSE,4:DO,0:WHILE,1:FOR,2	193
0x40028c0	            0x4157	                                push r15	       845	elf.c	FUNCTION_22
0x40028c2	            0x4156	                                push r14	       845	elf.c	FUNCTION_22
0x40028c4	          0x4989ff	                            mov r15, rdi	       845	elf.c	FUNCTION_22
0x40028c7	            0x4155	                                push r13	       845	elf.c	FUNCTION_22
0x40028c9	            0x4154	                                push r12	       845	elf.c	FUNCTION_22
0x40028cb	    0x41b801000000	                              mov r8d, 1	       852	elf.c	FUNCTION_22	FOR_1
0x40028d1	              0x55	                                push rbp	       845	elf.c	FUNCTION_22
0x40028d2	              0x53	                                push rbx	       845	elf.c	FUNCTION_22
0x40028d3	        0x4883ec28	                           sub rsp, 0x28	       845	elf.c	FUNCTION_22
0x40028d7	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       847	elf.c	FUNCTION_22	CALL_1
0x40028de	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	       852	elf.c	FUNCTION_22	FOR_1
0x40028e5	    0x8b80700c0000	           mov eax, dword [rax + 0xc70] 	       847	elf.c	FUNCTION_22	CALL_1
0x40028eb	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x40028ee	        0x89442404	                mov dword [rsp + 4], eax	       847	elf.c	FUNCTION_22	CALL_1
0x40028f2	            0x7565	                           jne 0x4002959	       852	elf.c	FUNCTION_22	FOR_1
0x40028f4	      0xe9b7000000	                           jmp 0x40029b0	       852	elf.c	FUNCTION_22	FOR_1
0x40028f9	     0xf1f80000000	                         nop dword [rax]	       852	elf.c	FUNCTION_22	FOR_1
0x4002900	          0x8b6828	            mov ebp, dword [rax + 0x28] 	       857	elf.c	FUNCTION_22	FOR_1	IF_1
0x4002903	            0x85ed	                           test ebp, ebp	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x4002905	     0xf8565010000	                           jne 0x4002a70	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x400290b	        0x498b4708	                mov rax, qword [r15 + 8]	       863	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	CALL_3
0x400290f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4002916	    0x488ba8e80200	           mov rbp, qword [rax + 0x2e8] 	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x400291d	          0x4885ed	                           test rbp, rbp	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4002920	            0x742e	                            je 0x4002950	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4002922	      0xba05000000	                              mov edx, 5	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002927	      0xbe00000000	                              mov esi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x400292c	      0xbf00000000	                              mov edi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002931	      0x4489442408	                mov dword [rsp + 8], r8d	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002936	      0xe800000000	                          call 0x400293b	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x400293b	          0x4889da	                            mov rdx, rbx	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400293e	          0x4889c7	                            mov rdi, rax	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002941	          0x4c89fe	                            mov rsi, r15	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002944	            0x31c0	                            xor eax, eax	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002946	            0xffd5	                                call rbp	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002948	      0x448b442408	                mov r8d, dword [rsp + 8]	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400294d	           0xf1f00	                         nop dword [rax]	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002950	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       852	elf.c	FUNCTION_22	FOR_1
0x4002954	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x4002957	            0x7457	                            je 0x40029b0	       852	elf.c	FUNCTION_22	FOR_1
0x4002959	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	       854	elf.c	FUNCTION_22	FOR_1	CALL_2
0x4002960	        0xf6400880	               test byte [rax + 8], 0x80	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x4002964	            0x759a	                           jne 0x4002900	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x4002966	        0x83780411	               cmp dword [rax + 4], 0x11	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x400296a	            0x75e4	                           jne 0x4002950	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x400296c	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x4002974	            0x75da	                           jne 0x4002950	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x4002976	    0x8ba888000000	            mov ebp, dword [rax + 0x88] 	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x400297c	      0xba05000000	                              mov edx, 5	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4002981	      0xbe00000000	                              mov esi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4002986	      0xbf00000000	                              mov edi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x400298b	      0xe800000000	                          call 0x4002990	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x4002990	            0x89ea	                            mov edx, ebp	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002992	          0x4889c7	                            mov rdi, rax	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002995	          0x4c89fe	                            mov rsi, r15	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x4002998	            0x31c0	                            xor eax, eax	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x400299a	      0xe800000000	                          call 0x400299f	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x400299f	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       852	elf.c	FUNCTION_22	FOR_1
0x40029a3	          0x4531c0	                            xor r8d, r8d	       902	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x40029a6	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x40029a9	            0x75ae	                           jne 0x4002959	       852	elf.c	FUNCTION_22	FOR_1
0x40029ab	       0xf1f440000	                   nop dword [rax + rax]	       852	elf.c	FUNCTION_22	FOR_1
0x40029b0	        0x8b442404	                mov eax, dword [rsp + 4]	       907	elf.c	FUNCTION_22	IF_7
0x40029b4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       907	elf.c	FUNCTION_22	IF_7
0x40029b7	     0xf849d000000	                            je 0x4002a5a	       907	elf.c	FUNCTION_22	IF_7
0x40029bd	            0x85c0	                           test eax, eax	       910	elf.c	FUNCTION_22	FOR_2
0x40029bf	     0xf8495000000	                            je 0x4002a5a	       910	elf.c	FUNCTION_22	FOR_2
0x40029c5	          0x4531f6	                          xor r14d, r14d	       910	elf.c	FUNCTION_22	FOR_2
0x40029c8	          0x4531ed	                          xor r13d, r13d	       910	elf.c	FUNCTION_22	FOR_2
0x40029cb	       0xf1f440000	                   nop dword [rax + rax]	       910	elf.c	FUNCTION_22	FOR_2
0x40029d0	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x40029d7	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x40029de	        0x4a8b2c30	              mov rbp, qword [rax + r14]	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x40029e2	          0x4885ed	                           test rbp, rbp	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40029e5	     0xf8475010000	                            je 0x4002b60	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40029eb	      0x48837d4000	               cmp qword [rbp + 0x40], 0	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40029f0	     0xf846a010000	                            je 0x4002b60	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40029f6	        0x488b5d48	            mov rbx, qword [rbp + 0x48] 	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40029fa	          0x4885db	                           test rbx, rbx	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x40029fd	     0xf845d010000	                            je 0x4002b60	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002a03	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002a07	        0x48c1e802	                              shr rax, 2	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002a0b	          0x83e801	                              sub eax, 1	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002a0e	        0x4c8d24c3	                  lea r12, [rbx + rax*8]	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002a12	          0x4c39e3	                            cmp rbx, r12	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002a15	            0x7430	                            je 0x4002a47	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002a17	        0x4883c308	                              add rbx, 8	       932	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002a1b	          0x488b03	                    mov rax, qword [rbx]	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002a1e	          0x4885c0	                           test rax, rax	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002a21	            0x74ef	                            je 0x4002a12	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002a23	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002a27	          0x4885d2	                           test rdx, rdx	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002a2a	     0xf84c0000000	                            je 0x4002af0	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002a30	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002a37	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002a3b	          0x4c39e3	                            cmp rbx, r12	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002a3e	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002a45	            0x75d0	                           jne 0x4002a17	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002a47	        0x4183c501	                             add r13d, 1	       910	elf.c	FUNCTION_22	FOR_2
0x4002a4b	        0x4983c608	                              add r14, 8	       910	elf.c	FUNCTION_22	FOR_2
0x4002a4f	      0x44396c2404	               cmp dword [rsp + 4], r13d	       910	elf.c	FUNCTION_22	FOR_2
0x4002a54	     0xf8576ffffff	                           jne 0x40029d0	       910	elf.c	FUNCTION_22	FOR_2
0x4002a5a	        0x4883c428	                           add rsp, 0x28	       958	elf.c	FUNCTION_22
0x4002a5e	          0x4489c0	                            mov eax, r8d	       958	elf.c	FUNCTION_22
0x4002a61	              0x5b	                                 pop rbx	       958	elf.c	FUNCTION_22
0x4002a62	              0x5d	                                 pop rbp	       958	elf.c	FUNCTION_22
0x4002a63	            0x415c	                                 pop r12	       958	elf.c	FUNCTION_22
0x4002a65	            0x415d	                                 pop r13	       958	elf.c	FUNCTION_22
0x4002a67	            0x415e	                                 pop r14	       958	elf.c	FUNCTION_22
0x4002a69	            0x415f	                                 pop r15	       958	elf.c	FUNCTION_22
0x4002a6b	              0xc3	                                     ret	       958	elf.c	FUNCTION_22
0x4002a6c	         0xf1f4000	                         nop dword [rax]	       958	elf.c	FUNCTION_22
0x4002a70	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002a77	    0x3baafc020000	           cmp ebp, dword [rdx + 0x2fc] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002a7d	            0x7249	                            jb 0x4002ac8	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002a7f	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002a86	      0xba05000000	                              mov edx, 5	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4002a8b	      0xbe00000000	                              mov esi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4002a90	      0xbf00000000	                              mov edi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4002a95	      0xe800000000	                          call 0x4002a9a	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4002a9a	            0x89ea	                            mov edx, ebp	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002a9c	          0x4889c7	                            mov rdi, rax	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002a9f	          0x4889d9	                            mov rcx, rbx	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002aa2	            0x31c0	                            xor eax, eax	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002aa4	          0x4c89e6	                            mov rsi, r12	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002aa7	      0xe800000000	                          call 0x4002aac	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002aac	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002ab3	            0x31d2	                            xor edx, edx	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002ab5	          0x4531c0	                            xor r8d, r8d	       889	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4002ab8	    0x488990900000	             mov qword [rax + 0x90], rdx	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002abf	      0xe98cfeffff	                           jmp 0x4002950	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002ac4	         0xf1f4000	                         nop dword [rax]	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002ac8	        0x488b7258	            mov rsi, qword [rdx + 0x58] 	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002acc	            0x89e9	                            mov ecx, ebp	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002ace	        0x488b14ce	            mov rdx, qword [rsi + rcx*8]	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x4002ad2	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x4002ad6	          0x4885d2	                           test rdx, rdx	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4002ad9	            0x74a4	                            je 0x4002a7f	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x4002adb	    0x488990900000	             mov qword [rax + 0x90], rdx	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002ae2	      0xe969feffff	                           jmp 0x4002950	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002ae7	    0x660f1f840000	                    nop word [rax + rax]	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002af0	          0x8b5004	                mov edx, dword [rax + 4]	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002af3	          0x83fa04	                              cmp edx, 4	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002af6	     0xf8416ffffff	                            je 0x4002a12	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002afc	          0x83fa09	                              cmp edx, 9	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002aff	     0xf840dffffff	                            je 0x4002a12	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002b05	            0x8b10	                    mov edx, dword [rax]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b07	        0x4c8b4540	              mov r8, qword [rbp + 0x40]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b0b	      0xb900000000	                              mov ecx, 0	       331	elf.c	FUNCTION_17	IF_1
0x4002b10	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x4002b12	     0xf8588000000	                           jne 0x4002ba0	       330	elf.c	FUNCTION_17	IF_1
0x4002b18	          0x8b4004	                mov eax, dword [rax + 4]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b1b	      0xba05000000	                              mov edx, 5	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4002b20	      0xbe00000000	                              mov esi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4002b25	      0xbf00000000	                              mov edi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4002b2a	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4002b2f	      0x4c89442410	              mov qword [rsp + 0x10], r8	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4002b34	        0x89442408	                mov dword [rsp + 8], eax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b38	      0xe800000000	                          call 0x4002b3d	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x4002b3d	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b42	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b47	          0x4889c7	                            mov rdi, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b4a	        0x8b542408	                mov edx, dword [rsp + 8]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b4e	          0x4c89fe	                            mov rsi, r15	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b51	            0x31c0	                            xor eax, eax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b53	      0xe800000000	                          call 0x4002b58	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002b58	          0x4531c0	                            xor r8d, r8d	       952	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002b5b	      0xe9b2feffff	                           jmp 0x4002a12	       952	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002b60	      0xba05000000	                              mov edx, 5	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4002b65	      0xbe00000000	                              mov esi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4002b6a	      0xbf00000000	                              mov edi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4002b6f	      0xe800000000	                          call 0x4002b74	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4002b74	          0x4489ea	                           mov edx, r13d	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002b77	          0x4889c7	                            mov rdi, rax	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002b7a	          0x4c89fe	                            mov rsi, r15	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002b7d	            0x31c0	                            xor eax, eax	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002b7f	        0x4183c501	                             add r13d, 1	       910	elf.c	FUNCTION_22	FOR_2
0x4002b83	        0x4983c608	                              add r14, 8	       910	elf.c	FUNCTION_22	FOR_2
0x4002b87	      0xe800000000	                          call 0x4002b8c	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002b8c	          0x4531c0	                            xor r8d, r8d	       923	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002b8f	      0x44396c2404	               cmp dword [rsp + 4], r13d	       910	elf.c	FUNCTION_22	FOR_2
0x4002b94	     0xf8536feffff	                           jne 0x40029d0	       910	elf.c	FUNCTION_22	FOR_2
0x4002b9a	      0xe9bbfeffff	                           jmp 0x4002a5a	       910	elf.c	FUNCTION_22	FOR_2
0x4002b9f	              0x90	                                     nop	       910	elf.c	FUNCTION_22	FOR_2
0x4002ba0	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002ba7	          0x4c89ff	                            mov rdi, r15	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002baa	      0x4c89442408	                 mov qword [rsp + 8], r8	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002baf	          0x8b7050	            mov esi, dword [rax + 0x50] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002bb2	      0xe889f6ffff	call sym.bfd_elf_string_from_elf_section.part.20	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002bb7	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002bbc	          0x4889c1	                            mov rcx, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002bbf	          0x488b03	                    mov rax, qword [rbx]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002bc2	      0xe951ffffff	                           jmp 0x4002b18	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
_bfd_elf_get_synthetic_symtab	SWITCH,0:CALL,17:IF,13:functions,0:ELSE,0:DO,0:WHILE,0:FOR,3	225
0x40110f0	            0x4157	                                push r15	     11388	elf.c	FUNCTION_200
0x40110f2	            0x4156	                                push r14	     11388	elf.c	FUNCTION_200
0x40110f4	            0x4155	                                push r13	     11388	elf.c	FUNCTION_200
0x40110f6	            0x4154	                                push r12	     11388	elf.c	FUNCTION_200
0x40110f8	              0x55	                                push rbp	     11388	elf.c	FUNCTION_200
0x40110f9	              0x53	                                push rbx	     11388	elf.c	FUNCTION_200
0x40110fa	        0x4883ec68	                           sub rsp, 0x68	     11388	elf.c	FUNCTION_200
0x40110fe	    0x64488b042528	                mov rax, qword fs:[0x28]	     11388	elf.c	FUNCTION_200
0x4011107	      0x4889442458	             mov qword [rsp + 0x58], rax	     11388	elf.c	FUNCTION_200
0x401110c	            0x31c0	                            xor eax, eax	     11388	elf.c	FUNCTION_200
0x401110e	        0x488b4708	                mov rax, qword [rdi + 8]	     11389	elf.c	FUNCTION_200	CALL_1
0x4011112	    0x488b98680300	           mov rbx, qword [rax + 0x368] 	     11389	elf.c	FUNCTION_200	CALL_1
0x4011119	    0x49c701000000	                       mov qword [r9], 0	     11401	elf.c	FUNCTION_200
0x4011120	          0x8b4744	            mov eax, dword [rdi + 0x44] 	     11403	elf.c	FUNCTION_200	IF_1
0x4011123	          0xc1e805	                              shr eax, 5	     11403	elf.c	FUNCTION_200	IF_1
0x4011126	            0xa842	                           test al, 0x42	     11406	elf.c	FUNCTION_200	IF_2
0x4011128	            0x7453	                            je 0x401117d	     11406	elf.c	FUNCTION_200	IF_2
0x401112a	          0x4885c9	                           test rcx, rcx	     11406	elf.c	FUNCTION_200	IF_2
0x401112d	            0x7e4e	                           jle 0x401117d	     11406	elf.c	FUNCTION_200	IF_2
0x401112f	    0x4883bb980200	              cmp qword [rbx + 0x298], 0	     11409	elf.c	FUNCTION_200	IF_3
0x4011137	            0x7444	                            je 0x401117d	     11409	elf.c	FUNCTION_200	IF_3
0x4011139	    0x488bb3f00200	           mov rsi, qword [rbx + 0x2f0] 	     11412	elf.c	FUNCTION_200
0x4011140	          0x4989fe	                            mov r14, rdi	     11412	elf.c	FUNCTION_200
0x4011143	          0x4c89c5	                             mov rbp, r8	     11412	elf.c	FUNCTION_200
0x4011146	          0x4d89cd	                             mov r13, r9	     11412	elf.c	FUNCTION_200
0x4011149	          0x4885f6	                           test rsi, rsi	     11413	elf.c	FUNCTION_200	IF_4
0x401114c	     0xf84ee020000	                            je 0x4011440	     11413	elf.c	FUNCTION_200	IF_4
0x4011152	          0x4c89f7	                            mov rdi, r14	     11415	elf.c	FUNCTION_200	CALL_3
0x4011155	      0xe800000000	                          call 0x401115a	     11415	elf.c	FUNCTION_200	CALL_3
0x401115a	          0x4885c0	                           test rax, rax	     11416	elf.c	FUNCTION_200	IF_5
0x401115d	          0x4989c0	                             mov r8, rax	     11415	elf.c	FUNCTION_200	CALL_3
0x4011160	            0x741b	                            je 0x401117d	     11416	elf.c	FUNCTION_200	IF_5
0x4011162	    0x4c8ba0e00000	            mov r12, qword [rax + 0xe0] 	     11419	elf.c	FUNCTION_200	CALL_4
0x4011169	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x4011170	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x4011176	      0x4139442428	            cmp dword [r12 + 0x28], eax 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401117b	            0x742b	                            je 0x40111a8	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401117d	            0x31c0	                            xor eax, eax	     11407	elf.c	FUNCTION_200	IF_2
0x401117f	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	     11496	elf.c	FUNCTION_200
0x4011184	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     11496	elf.c	FUNCTION_200
0x401118d	     0xf85fa020000	                           jne 0x401148d	     11496	elf.c	FUNCTION_200
0x4011193	        0x4883c468	                           add rsp, 0x68	     11496	elf.c	FUNCTION_200
0x4011197	              0x5b	                                 pop rbx	     11496	elf.c	FUNCTION_200
0x4011198	              0x5d	                                 pop rbp	     11496	elf.c	FUNCTION_200
0x4011199	            0x415c	                                 pop r12	     11496	elf.c	FUNCTION_200
0x401119b	            0x415d	                                 pop r13	     11496	elf.c	FUNCTION_200
0x401119d	            0x415e	                                 pop r14	     11496	elf.c	FUNCTION_200
0x401119f	            0x415f	                                 pop r15	     11496	elf.c	FUNCTION_200
0x40111a1	              0xc3	                                     ret	     11496	elf.c	FUNCTION_200
0x40111a2	    0x660f1f440000	                    nop word [rax + rax]	     11496	elf.c	FUNCTION_200
0x40111a8	      0x418b442404	                mov eax, dword [r12 + 4]	     11421	elf.c	FUNCTION_200	IF_6
0x40111ad	          0x83f809	                              cmp eax, 9	     11421	elf.c	FUNCTION_200	IF_6
0x40111b0	            0x7405	                            je 0x40111b7	     11421	elf.c	FUNCTION_200	IF_6
0x40111b2	          0x83f804	                              cmp eax, 4	     11421	elf.c	FUNCTION_200	IF_6
0x40111b5	            0x75c6	                           jne 0x401117d	     11421	elf.c	FUNCTION_200	IF_6
0x40111b7	      0xbe00000000	                              mov esi, 0	     11424	elf.c	FUNCTION_200	CALL_6
0x40111bc	          0x4c89f7	                            mov rdi, r14	     11424	elf.c	FUNCTION_200	CALL_6
0x40111bf	        0x4c890424	                     mov qword [rsp], r8	     11424	elf.c	FUNCTION_200	CALL_6
0x40111c3	      0xe800000000	                          call 0x40111c8	     11424	elf.c	FUNCTION_200	CALL_6
0x40111c8	          0x4885c0	                           test rax, rax	     11425	elf.c	FUNCTION_200	IF_7
0x40111cb	      0x4889442410	             mov qword [rsp + 0x10], rax	     11424	elf.c	FUNCTION_200	CALL_6
0x40111d0	            0x74ab	                            je 0x401117d	     11425	elf.c	FUNCTION_200	IF_7
0x40111d2	        0x498b4608	                mov rax, qword [r14 + 8]	     11428	elf.c	FUNCTION_200	CALL_7
0x40111d6	        0x4c8b0424	                     mov r8, qword [rsp]	     11429	elf.c	FUNCTION_200	IF_8
0x40111da	      0xb901000000	                              mov ecx, 1	     11429	elf.c	FUNCTION_200	IF_8
0x40111df	          0x4889ea	                            mov rdx, rbp	     11429	elf.c	FUNCTION_200	IF_8
0x40111e2	          0x4c89f7	                            mov rdi, r14	     11429	elf.c	FUNCTION_200	IF_8
0x40111e5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11428	elf.c	FUNCTION_200	CALL_7
0x40111ec	          0x4c89c6	                             mov rsi, r8	     11429	elf.c	FUNCTION_200	IF_8
0x40111ef	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11428	elf.c	FUNCTION_200	CALL_7
0x40111f6	          0xff5040	                 call qword [rax + 0x40]	     11429	elf.c	FUNCTION_200	IF_8
0x40111f9	            0x85c0	                           test eax, eax	     11429	elf.c	FUNCTION_200	IF_8
0x40111fb	        0x4c8b0424	                     mov r8, qword [rsp]	     11429	elf.c	FUNCTION_200	IF_8
0x40111ff	     0xf847c020000	                            je 0x4011481	     11429	elf.c	FUNCTION_200	IF_8
0x4011205	        0x498b4038	              mov rax, qword [r8 + 0x38]	     11432	elf.c	FUNCTION_200
0x4011209	            0x31d2	                            xor edx, edx	     11432	elf.c	FUNCTION_200
0x401120b	        0x498b6878	              mov rbp, qword [r8 + 0x78]	     11434	elf.c	FUNCTION_200
0x401120f	      0x49f7742438	                  div qword [r12 + 0x38]	     11432	elf.c	FUNCTION_200
0x4011214	          0x4889c2	                            mov rdx, rax	     11433	elf.c	FUNCTION_200
0x4011217	        0x48890424	                    mov qword [rsp], rax	     11432	elf.c	FUNCTION_200
0x401121b	        0x488d0440	                  lea rax, [rax + rax*2]	     11433	elf.c	FUNCTION_200
0x401121f	          0x4889c1	                            mov rcx, rax	     11433	elf.c	FUNCTION_200
0x4011222	        0x48c1e104	                              shl rcx, 4	     11433	elf.c	FUNCTION_200
0x4011226	          0x4885d2	                           test rdx, rdx	     11435	elf.c	FUNCTION_200	FOR_1
0x4011229	      0x48894c2428	             mov qword [rsp + 0x28], rcx	     11433	elf.c	FUNCTION_200
0x401122e	     0xf8e36020000	                           jle 0x401146a	     11435	elf.c	FUNCTION_200	FOR_1
0x4011234	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	     11435	elf.c	FUNCTION_200	FOR_1
0x401123b	          0x4989cf	                            mov r15, rcx	     11435	elf.c	FUNCTION_200	FOR_1
0x401123e	          0x4531e4	                          xor r12d, r12d	     11435	elf.c	FUNCTION_200	FOR_1
0x4011241	      0x4889442420	             mov qword [rsp + 0x20], rax	     11435	elf.c	FUNCTION_200	FOR_1
0x4011246	         0xfb64009	               movzx eax, byte [rax + 9]	     11435	elf.c	FUNCTION_200	FOR_1
0x401124a	        0x48c1e005	                              shl rax, 5	     11435	elf.c	FUNCTION_200	FOR_1
0x401124e	      0x4889442418	             mov qword [rsp + 0x18], rax	     11435	elf.c	FUNCTION_200	FOR_1
0x4011253	       0xf1f440000	                   nop dword [rax + rax]	     11435	elf.c	FUNCTION_200	FOR_1
0x4011258	        0x488b4500	                    mov rax, qword [rbp]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401125c	      0x4c89442408	                 mov qword [rsp + 8], r8	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x4011261	          0x488b00	                    mov rax, qword [rax]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x4011264	        0x488b7808	                mov rdi, qword [rax + 8]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x4011268	      0xe800000000	                          call 0x401126d	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x401126d	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x4011272	      0x4d8d7c0705	                lea r15, [r15 + rax + 5]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x4011277	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401127c	            0x7414	                            je 0x4011292	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x401127e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x4011283	        0x80780c02	                 cmp byte [rax + 0xc], 2	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x4011287	           0xf94c0	                                 sete al	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401128a	           0xfb6c0	                           movzx eax, al	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x401128d	      0x4d8d7cc70b	           lea r15, [r15 + rax*8 + 0xb] 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x4011292	        0x4983c401	                              add r12, 1	     11435	elf.c	FUNCTION_200	FOR_1
0x4011296	      0x48036c2418	             add rbp, qword [rsp + 0x18]	     11435	elf.c	FUNCTION_200	FOR_1
0x401129b	        0x4c392424	                    cmp qword [rsp], r12	     11435	elf.c	FUNCTION_200	FOR_1
0x401129f	            0x75b7	                           jne 0x4011258	     11435	elf.c	FUNCTION_200	FOR_1
0x40112a1	          0x4c89ff	                            mov rdi, r15	     11448	elf.c	FUNCTION_200	CALL_9
0x40112a4	      0x4c89442408	                 mov qword [rsp + 8], r8	     11448	elf.c	FUNCTION_200	CALL_9
0x40112a9	      0xe800000000	                          call 0x40112ae	     11448	elf.c	FUNCTION_200	CALL_9
0x40112ae	          0x4885c0	                           test rax, rax	     11449	elf.c	FUNCTION_200	IF_10
0x40112b1	          0x4989c7	                            mov r15, rax	     11448	elf.c	FUNCTION_200	CALL_9
0x40112b4	        0x49894500	                    mov qword [r13], rax	     11448	elf.c	FUNCTION_200	CALL_9
0x40112b8	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11449	elf.c	FUNCTION_200	IF_10
0x40112bd	     0xf84be010000	                            je 0x4011481	     11449	elf.c	FUNCTION_200	IF_10
0x40112c3	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	     11452	elf.c	FUNCTION_200
0x40112c8	        0x498b6878	              mov rbp, qword [r8 + 0x78]	     11453	elf.c	FUNCTION_200
0x40112cc	          0x4531e4	                          xor r12d, r12d	     11453	elf.c	FUNCTION_200
0x40112cf	    0x48c744242000	               mov qword [rsp + 0x20], 0	     11453	elf.c	FUNCTION_200
0x40112d8	          0x4d01fd	                            add r13, r15	     11452	elf.c	FUNCTION_200
0x40112db	            0xeb3e	                           jmp 0x401131b	     11452	elf.c	FUNCTION_200
0x40112dd	           0xf1f00	                         nop dword [rax]	     11452	elf.c	FUNCTION_200
0x40112e0	    0x488344242001	               add qword [rsp + 0x20], 1	     11492	elf.c	FUNCTION_200	FOR_2
0x40112e6	    0x41c745004070	            mov dword [r13], 0x746c7040 	        53	string3.h	FUNCTION_204	CALL_3
0x40112ee	        0x4983c730	                           add r15, 0x30	     11492	elf.c	FUNCTION_200	FOR_2
0x40112f2	      0x41c6450400	                   mov byte [r13 + 4], 0	        53	string3.h	FUNCTION_204	CALL_3
0x40112f7	        0x4983c505	                              add r13, 5	     11491	elf.c	FUNCTION_200	FOR_2
0x40112fb	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	     11455	elf.c	FUNCTION_200	FOR_2
0x4011302	        0x4983c401	                              add r12, 1	     11455	elf.c	FUNCTION_200	FOR_2
0x4011306	         0xfb64009	               movzx eax, byte [rax + 9]	     11455	elf.c	FUNCTION_200	FOR_2
0x401130a	        0x48c1e005	                              shl rax, 5	     11455	elf.c	FUNCTION_200	FOR_2
0x401130e	          0x4801c5	                            add rbp, rax	     11455	elf.c	FUNCTION_200	FOR_2
0x4011311	        0x4c392424	                    cmp qword [rsp], r12	     11455	elf.c	FUNCTION_200	FOR_2
0x4011315	     0xf8e45010000	                           jle 0x4011460	     11455	elf.c	FUNCTION_200	FOR_2
0x401131b	          0x4889ea	                            mov rdx, rbp	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401131e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x4011323	          0x4c89e7	                            mov rdi, r12	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x4011326	    0xff9398020000	                call qword [rbx + 0x298]	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401132c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x4011330	            0x74c9	                            je 0x40112fb	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x4011332	        0x488b7500	                    mov rsi, qword [rbp]	     11464	elf.c	FUNCTION_200	FOR_2
0x4011336	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	     11470	elf.c	FUNCTION_200	FOR_2
0x401133b	          0x488b16	                    mov rdx, qword [rsi]	     11464	elf.c	FUNCTION_200	FOR_2
0x401133e	          0x488b3a	                    mov rdi, qword [rdx]	     11464	elf.c	FUNCTION_200	FOR_2
0x4011341	          0x49893f	                    mov qword [r15], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x4011344	        0x488b7a08	                mov rdi, qword [rdx + 8]	     11464	elf.c	FUNCTION_200	FOR_2
0x4011348	        0x49897f08	                mov qword [r15 + 8], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x401134c	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	     11464	elf.c	FUNCTION_200	FOR_2
0x4011350	        0x49897f10	             mov qword [r15 + 0x10], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x4011354	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	     11464	elf.c	FUNCTION_200	FOR_2
0x4011358	        0x49894f20	             mov qword [r15 + 0x20], rcx	     11470	elf.c	FUNCTION_200	FOR_2
0x401135c	        0x49897f18	             mov qword [r15 + 0x18], rdi	     11464	elf.c	FUNCTION_200	FOR_2
0x4011360	        0x418b5718	            mov edx, dword [r15 + 0x18] 	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x4011364	            0x89d7	                            mov edi, edx	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x4011366	          0x83cf02	                               or edi, 2	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x4011369	          0xf6c201	                              test dl, 1	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401136c	           0xf44d7	                          cmove edx, edi	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401136f	        0x482b4128	             sub rax, qword [rcx + 0x28]	     11471	elf.c	FUNCTION_200	FOR_2
0x4011373	        0x4d896f08	                mov qword [r15 + 8], r13	     11472	elf.c	FUNCTION_200	FOR_2
0x4011377	    0x49c747280000	               mov qword [r15 + 0x28], 0	     11473	elf.c	FUNCTION_200	FOR_2
0x401137f	    0x81ca00002000	                        or edx, 0x200000	     11469	elf.c	FUNCTION_200	FOR_2
0x4011385	        0x41895718	             mov dword [r15 + 0x18], edx	     11469	elf.c	FUNCTION_200	FOR_2
0x4011389	        0x49894710	             mov qword [r15 + 0x10], rax	     11471	elf.c	FUNCTION_200	FOR_2
0x401138d	          0x488b06	                    mov rax, qword [rsi]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x4011390	        0x488b7008	                mov rsi, qword [rax + 8]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x4011394	          0x4889f7	                            mov rdi, rsi	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x4011397	      0x4889742418	             mov qword [rsp + 0x18], rsi	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x401139c	      0xe800000000	                          call 0x40113a1	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40113a1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_204	CALL_3
0x40113a6	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_204	CALL_3
0x40113a9	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_204	CALL_3
0x40113ac	      0x4889442408	                mov qword [rsp + 8], rax	        53	string3.h	FUNCTION_204	CALL_3
0x40113b1	      0xe800000000	                          call 0x40113b6	        53	string3.h	FUNCTION_204	CALL_3
0x40113b6	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11476	elf.c	FUNCTION_200	FOR_2
0x40113bb	          0x4d01c5	                             add r13, r8	     11476	elf.c	FUNCTION_200	FOR_2
0x40113be	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x40113c3	     0xf8417ffffff	                            je 0x40112e0	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x40113c9	      0xb82b300000	                         mov eax, 0x302b	        53	string3.h	FUNCTION_204	CALL_3
0x40113ce	      0x41c6450278	                mov byte [r13 + 2], 0x78	        53	string3.h	FUNCTION_204	CALL_3
0x40113d3	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40113d8	      0x6641894500	                      mov word [r13], ax	        53	string3.h	FUNCTION_204	CALL_3
0x40113dd	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40113e1	          0x4c89f7	                            mov rdi, r14	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40113e4	        0x4983c503	                              add r13, 3	     11482	elf.c	FUNCTION_200	FOR_2	IF_13
0x40113e8	      0xe800000000	                          call 0x40113ed	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40113ed	      0x807c243030	            cmp byte [rsp + 0x30], 0x30 	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x40113f2	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x40113f7	            0x7510	                           jne 0x4011409	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x40113f9	     0xf1f80000000	                         nop dword [rax]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4011400	        0x4883c601	                              add rsi, 1	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4011404	          0x803e30	                    cmp byte [rsi], 0x30	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4011407	            0x74f7	                            je 0x4011400	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4011409	          0x4889f7	                            mov rdi, rsi	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401140c	      0x4889742418	             mov qword [rsp + 0x18], rsi	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x4011411	      0xe800000000	                          call 0x4011416	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x4011416	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_204	CALL_3
0x401141b	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_204	CALL_3
0x401141e	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_204	CALL_3
0x4011421	      0x4889442408	                mov qword [rsp + 8], rax	        53	string3.h	FUNCTION_204	CALL_3
0x4011426	      0xe800000000	                          call 0x401142b	        53	string3.h	FUNCTION_204	CALL_3
0x401142b	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x4011430	          0x4d01c5	                             add r13, r8	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x4011433	      0xe9a8feffff	                           jmp 0x40112e0	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x4011438	     0xf1f84000000	                   nop dword [rax + rax]	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x4011440	    0xf68388030000	          test byte [rbx + 0x388], 0x20 	     11414	elf.c	FUNCTION_200	IF_4
0x4011447	      0xbe00000000	                              mov esi, 0	     11414	elf.c	FUNCTION_200	IF_4
0x401144c	      0xb800000000	                              mov eax, 0	     11414	elf.c	FUNCTION_200	IF_4
0x4011451	        0x480f44f0	                          cmove rsi, rax	     11414	elf.c	FUNCTION_200	IF_4
0x4011455	      0xe9f8fcffff	                           jmp 0x4011152	     11414	elf.c	FUNCTION_200	IF_4
0x401145a	    0x660f1f440000	                    nop word [rax + rax]	     11414	elf.c	FUNCTION_200	IF_4
0x4011460	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11414	elf.c	FUNCTION_200	IF_4
0x4011465	      0xe915fdffff	                           jmp 0x401117f	     11414	elf.c	FUNCTION_200	IF_4
0x401146a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     11448	elf.c	FUNCTION_200	CALL_9
0x401146f	      0xe800000000	                          call 0x4011474	     11448	elf.c	FUNCTION_200	CALL_9
0x4011474	          0x4885c0	                           test rax, rax	     11449	elf.c	FUNCTION_200	IF_10
0x4011477	        0x49894500	                    mov qword [r13], rax	     11448	elf.c	FUNCTION_200	CALL_9
0x401147b	     0xf85fcfcffff	                           jne 0x401117d	     11449	elf.c	FUNCTION_200	IF_10
0x4011481	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11430	elf.c	FUNCTION_200	IF_8
0x4011488	      0xe9f2fcffff	                           jmp 0x401117f	     11430	elf.c	FUNCTION_200	IF_8
0x401148d	      0xe800000000	                          call 0x4011492	     11496	elf.c	FUNCTION_200
elfcore_write_note	SWITCH,0:CALL,7:IF,3:functions,0:ELSE,0:DO,0:WHILE,2:FOR,0	96
0x400ffa0	            0x4157	                                push r15	     10470	elf.c	FUNCTION_161
0x400ffa2	            0x4156	                                push r14	     10470	elf.c	FUNCTION_161
0x400ffa4	          0x4989ff	                            mov r15, rdi	     10470	elf.c	FUNCTION_161
0x400ffa7	            0x4155	                                push r13	     10470	elf.c	FUNCTION_161
0x400ffa9	            0x4154	                                push r12	     10470	elf.c	FUNCTION_161
0x400ffab	          0x4989cd	                            mov r13, rcx	     10470	elf.c	FUNCTION_161
0x400ffae	              0x55	                                push rbp	     10470	elf.c	FUNCTION_161
0x400ffaf	              0x53	                                push rbx	     10470	elf.c	FUNCTION_161
0x400ffb0	          0x4889d5	                            mov rbp, rdx	     10470	elf.c	FUNCTION_161
0x400ffb3	          0x4889f3	                            mov rbx, rsi	     10470	elf.c	FUNCTION_161
0x400ffb6	        0x4883ec28	                           sub rsp, 0x28	     10470	elf.c	FUNCTION_161
0x400ffba	          0x4885c9	                           test rcx, rcx	     10477	elf.c	FUNCTION_161	IF_1
0x400ffbd	      0x448944240c	              mov dword [rsp + 0xc], r8d	     10470	elf.c	FUNCTION_161
0x400ffc2	      0x4c894c2410	              mov qword [rsp + 0x10], r9	     10470	elf.c	FUNCTION_161
0x400ffc7	      0x448b742460	           mov r14d, dword [rsp + 0x60] 	     10470	elf.c	FUNCTION_161
0x400ffcc	     0xf8416010000	                            je 0x40100e8	     10477	elf.c	FUNCTION_161	IF_1
0x400ffd2	          0x4889cf	                            mov rdi, rcx	     10478	elf.c	FUNCTION_161	CALL_1
0x400ffd5	      0xe800000000	                          call 0x400ffda	     10478	elf.c	FUNCTION_161	CALL_1
0x400ffda	        0x4c8d6001	                      lea r12, [rax + 1]	     10478	elf.c	FUNCTION_161	CALL_1
0x400ffde	        0x4883c004	                              add rax, 4	     10478	elf.c	FUNCTION_161	CALL_1
0x400ffe2	        0x4883e0fc	             and rax, 0xfffffffffffffffc	     10478	elf.c	FUNCTION_161	CALL_1
0x400ffe6	        0x418d5603	                      lea edx, [r14 + 3]	     10480	elf.c	FUNCTION_161
0x400ffea	        0x48637500	                 movsxd rsi, dword [rbp]	     10482	elf.c	FUNCTION_161	CALL_2
0x400ffee	          0x4889df	                            mov rdi, rbx	     10482	elf.c	FUNCTION_161	CALL_2
0x400fff1	          0x83e2fc	                     and edx, 0xfffffffc	     10480	elf.c	FUNCTION_161
0x400fff4	          0x4863d2	                         movsxd rdx, edx	     10480	elf.c	FUNCTION_161
0x400fff7	      0x488d54100c	              lea rdx, [rax + rdx + 0xc]	     10480	elf.c	FUNCTION_161
0x400fffc	          0x4801d6	                            add rsi, rdx	     10482	elf.c	FUNCTION_161	CALL_2
0x400ffff	      0x4889542418	             mov qword [rsp + 0x18], rdx	     10482	elf.c	FUNCTION_161	CALL_2
0x4010004	      0xe800000000	                          call 0x4010009	     10482	elf.c	FUNCTION_161	CALL_2
0x4010009	          0x4885c0	                           test rax, rax	     10483	elf.c	FUNCTION_161	IF_2
0x401000c	          0x4889c1	                            mov rcx, rax	     10482	elf.c	FUNCTION_161	CALL_2
0x401000f	        0x48890424	                    mov qword [rsp], rax	     10482	elf.c	FUNCTION_161	CALL_2
0x4010013	     0xf84b9000000	                            je 0x40100d2	     10483	elf.c	FUNCTION_161	IF_2
0x4010019	        0x48635d00	                 movsxd rbx, dword [rbp]	     10485	elf.c	FUNCTION_161
0x401001d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	     10486	elf.c	FUNCTION_161
0x4010022	          0x4c89e7	                            mov rdi, r12	     10488	elf.c	FUNCTION_161	CALL_3
0x4010025	          0x4889d8	                            mov rax, rbx	     10485	elf.c	FUNCTION_161
0x4010028	          0x4801cb	                            add rbx, rcx	     10485	elf.c	FUNCTION_161
0x401002b	             0x1c2	                            add edx, eax	     10486	elf.c	FUNCTION_161
0x401002d	        0x498b4708	                mov rax, qword [r15 + 8]	     10488	elf.c	FUNCTION_161	CALL_3
0x4010031	          0x4889de	                            mov rsi, rbx	     10488	elf.c	FUNCTION_161	CALL_3
0x4010034	          0x895500	                    mov dword [rbp], edx	     10486	elf.c	FUNCTION_161
0x4010037	          0x4963ee	                        movsxd rbp, r14d	     10489	elf.c	FUNCTION_161	CALL_4
0x401003a	    0xff9090000000	                 call qword [rax + 0x90]	     10488	elf.c	FUNCTION_161	CALL_3
0x4010040	        0x498b4708	                mov rax, qword [r15 + 8]	     10489	elf.c	FUNCTION_161	CALL_4
0x4010044	        0x488d7304	                      lea rsi, [rbx + 4]	     10489	elf.c	FUNCTION_161	CALL_4
0x4010048	          0x4889ef	                            mov rdi, rbp	     10489	elf.c	FUNCTION_161	CALL_4
0x401004b	    0xff9090000000	                 call qword [rax + 0x90]	     10489	elf.c	FUNCTION_161	CALL_4
0x4010051	        0x498b4708	                mov rax, qword [r15 + 8]	     10490	elf.c	FUNCTION_161	CALL_5
0x4010055	      0x48637c240c	          movsxd rdi, dword [rsp + 0xc] 	     10490	elf.c	FUNCTION_161	CALL_5
0x401005a	        0x488d7308	                      lea rsi, [rbx + 8]	     10490	elf.c	FUNCTION_161	CALL_5
0x401005e	        0x4883c30c	                            add rbx, 0xc	     10491	elf.c	FUNCTION_161
0x4010062	    0xff9090000000	                 call qword [rax + 0x90]	     10490	elf.c	FUNCTION_161	CALL_5
0x4010068	          0x4d85ed	                           test r13, r13	     10492	elf.c	FUNCTION_161	IF_3
0x401006b	            0x7433	                            je 0x40100a0	     10492	elf.c	FUNCTION_161	IF_3
0x401006d	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_204	CALL_3
0x4010070	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_204	CALL_3
0x4010073	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_204	CALL_3
0x4010076	      0xe800000000	                          call 0x401007b	        53	string3.h	FUNCTION_204	CALL_3
0x401007b	          0x4c01e3	                            add rbx, r12	     10495	elf.c	FUNCTION_161	IF_3
0x401007e	        0x41f6c403	                            test r12b, 3	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x4010082	            0x741c	                            je 0x40100a0	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x4010084	          0x4929dc	                            sub r12, rbx	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x4010087	    0x660f1f840000	                    nop word [rax + rax]	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x4010090	        0x4883c301	                              add rbx, 1	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x4010094	        0xc643ff00	                   mov byte [rbx - 1], 0	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x4010098	        0x4a8d0423	                    lea rax, [rbx + r12]	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x401009c	            0xa803	                              test al, 3	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x401009e	            0x75f0	                           jne 0x4010090	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x40100a0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_204	CALL_3
0x40100a5	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_204	CALL_3
0x40100a8	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_204	CALL_3
0x40100ab	          0x4801eb	                            add rbx, rbp	     10503	elf.c	FUNCTION_161
0x40100ae	      0xe800000000	                          call 0x40100b3	        53	string3.h	FUNCTION_204	CALL_3
0x40100b3	        0x41f6c603	                            test r14b, 3	     10504	elf.c	FUNCTION_161	WHILE_2
0x40100b7	            0x7419	                            je 0x40100d2	     10504	elf.c	FUNCTION_161	WHILE_2
0x40100b9	     0xf1f80000000	                         nop dword [rax]	     10504	elf.c	FUNCTION_161	WHILE_2
0x40100c0	        0x4183c601	                             add r14d, 1	     10507	elf.c	FUNCTION_161	WHILE_2
0x40100c4	        0x4883c301	                              add rbx, 1	     10506	elf.c	FUNCTION_161	WHILE_2
0x40100c8	        0xc643ff00	                   mov byte [rbx - 1], 0	     10506	elf.c	FUNCTION_161	WHILE_2
0x40100cc	        0x41f6c603	                            test r14b, 3	     10504	elf.c	FUNCTION_161	WHILE_2
0x40100d0	            0x75ee	                           jne 0x40100c0	     10504	elf.c	FUNCTION_161	WHILE_2
0x40100d2	        0x488b0424	                    mov rax, qword [rsp]	     10510	elf.c	FUNCTION_161
0x40100d6	        0x4883c428	                           add rsp, 0x28	     10510	elf.c	FUNCTION_161
0x40100da	              0x5b	                                 pop rbx	     10510	elf.c	FUNCTION_161
0x40100db	              0x5d	                                 pop rbp	     10510	elf.c	FUNCTION_161
0x40100dc	            0x415c	                                 pop r12	     10510	elf.c	FUNCTION_161
0x40100de	            0x415d	                                 pop r13	     10510	elf.c	FUNCTION_161
0x40100e0	            0x415e	                                 pop r14	     10510	elf.c	FUNCTION_161
0x40100e2	            0x415f	                                 pop r15	     10510	elf.c	FUNCTION_161
0x40100e4	              0xc3	                                     ret	     10510	elf.c	FUNCTION_161
0x40100e5	           0xf1f00	                         nop dword [rax]	     10510	elf.c	FUNCTION_161
0x40100e8	            0x31c0	                            xor eax, eax	     10510	elf.c	FUNCTION_161
0x40100ea	          0x4531e4	                          xor r12d, r12d	     10476	elf.c	FUNCTION_161
0x40100ed	      0xe9f4feffff	                           jmp 0x400ffe6	     10476	elf.c	FUNCTION_161
elfcore_write_prpsinfo	SWITCH,0:CALL,10:IF,3:functions,0:ELSE,1:DO,0:WHILE,0:FOR,0	86
0x4010100	            0x4157	                                push r15	     10535	elf.c	FUNCTION_162
0x4010102	            0x4156	                                push r14	     10535	elf.c	FUNCTION_162
0x4010104	          0x4989cf	                            mov r15, rcx	     10535	elf.c	FUNCTION_162
0x4010107	            0x4155	                                push r13	     10535	elf.c	FUNCTION_162
0x4010109	            0x4154	                                push r12	     10535	elf.c	FUNCTION_162
0x401010b	          0x4d89c5	                             mov r13, r8	     10535	elf.c	FUNCTION_162
0x401010e	              0x55	                                push rbp	     10535	elf.c	FUNCTION_162
0x401010f	              0x53	                                push rbx	     10535	elf.c	FUNCTION_162
0x4010110	          0x4889f5	                            mov rbp, rsi	     10535	elf.c	FUNCTION_162
0x4010113	          0x4889fb	                            mov rbx, rdi	     10535	elf.c	FUNCTION_162
0x4010116	          0x4989d4	                            mov r12, rdx	     10535	elf.c	FUNCTION_162
0x4010119	    0x4881ec980000	                           sub rsp, 0x98	     10535	elf.c	FUNCTION_162
0x4010120	    0x64488b042528	                mov rax, qword fs:[0x28]	     10535	elf.c	FUNCTION_162
0x4010129	    0x488984248800	             mov qword [rsp + 0x88], rax	     10535	elf.c	FUNCTION_162
0x4010131	            0x31c0	                            xor eax, eax	     10535	elf.c	FUNCTION_162
0x4010133	        0x488b4708	                mov rax, qword [rdi + 8]	     10536	elf.c	FUNCTION_162	CALL_1
0x4010137	    0x4c8bb0680300	           mov r14, qword [rax + 0x368] 	     10536	elf.c	FUNCTION_162	CALL_1
0x401013e	    0x4d8b96200200	           mov r10, qword [r14 + 0x220] 	     10538	elf.c	FUNCTION_162	IF_1
0x4010145	          0x4d85d2	                           test r10, r10	     10538	elf.c	FUNCTION_162	IF_1
0x4010148	            0x7446	                            je 0x4010190	     10538	elf.c	FUNCTION_162	IF_1
0x401014a	          0x4d89c1	                              mov r9, r8	     10541	elf.c	FUNCTION_162	IF_1
0x401014d	            0x31c0	                            xor eax, eax	     10541	elf.c	FUNCTION_162	IF_1
0x401014f	          0x4989c8	                             mov r8, rcx	     10541	elf.c	FUNCTION_162	IF_1
0x4010152	      0xb903000000	                              mov ecx, 3	     10541	elf.c	FUNCTION_162	IF_1
0x4010157	          0x41ffd2	                                call r10	     10541	elf.c	FUNCTION_162	IF_1
0x401015a	          0x4885c0	                           test rax, rax	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x401015d	            0x7431	                            je 0x4010190	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x401015f	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	     10586	elf.c	FUNCTION_162
0x4010167	    0x644833142528	                xor rdx, qword fs:[0x28]	     10586	elf.c	FUNCTION_162
0x4010170	     0xf85cc000000	                           jne 0x4010242	     10586	elf.c	FUNCTION_162
0x4010176	    0x4881c4980000	                           add rsp, 0x98	     10586	elf.c	FUNCTION_162
0x401017d	              0x5b	                                 pop rbx	     10586	elf.c	FUNCTION_162
0x401017e	              0x5d	                                 pop rbp	     10586	elf.c	FUNCTION_162
0x401017f	            0x415c	                                 pop r12	     10586	elf.c	FUNCTION_162
0x4010181	            0x415d	                                 pop r13	     10586	elf.c	FUNCTION_162
0x4010183	            0x415e	                                 pop r14	     10586	elf.c	FUNCTION_162
0x4010185	            0x415f	                                 pop r15	     10586	elf.c	FUNCTION_162
0x4010187	              0xc3	                                     ret	     10586	elf.c	FUNCTION_162
0x4010188	     0xf1f84000000	                   nop dword [rax + rax]	     10586	elf.c	FUNCTION_162
0x4010190	    0x498b86000300	           mov rax, qword [r14 + 0x300] 	     10549	elf.c	FUNCTION_162	IF_3
0x4010197	        0x80780c01	                 cmp byte [rax + 0xc], 1	     10549	elf.c	FUNCTION_162	IF_3
0x401019b	            0x7463	                            je 0x4010200	     10549	elf.c	FUNCTION_162	IF_3
0x401019d	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_207	CALL_6
0x401019f	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_207	CALL_6
0x40101a2	      0xb911000000	                           mov ecx, 0x11	        90	string3.h	FUNCTION_207	CALL_6
0x40101a7	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_207	CALL_6
0x40101aa	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       126	string3.h	FUNCTION_212	CALL_3
0x40101af	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_212	CALL_3
0x40101b4	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_212	CALL_3
0x40101b7	          0x4989e6	                            mov r14, rsp	        90	string3.h	FUNCTION_207	CALL_6
0x40101ba	      0xe800000000	                          call 0x40101bf	       126	string3.h	FUNCTION_212	CALL_3
0x40101bf	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       126	string3.h	FUNCTION_212	CALL_3
0x40101c4	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_212	CALL_3
0x40101c9	          0x4c89ee	                            mov rsi, r13	       126	string3.h	FUNCTION_212	CALL_3
0x40101cc	      0xe800000000	                          call 0x40101d1	       126	string3.h	FUNCTION_212	CALL_3
0x40101d1	        0x4883ec08	                              sub rsp, 8	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101d5	      0x6888000000	                               push 0x88	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101da	      0xb900000000	                              mov ecx, 0	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101df	          0x4c89e2	                            mov rdx, r12	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101e2	          0x4d89f1	                             mov r9, r14	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101e5	    0x41b803000000	                              mov r8d, 3	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101eb	          0x4889ee	                            mov rsi, rbp	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101ee	          0x4889df	                            mov rdi, rbx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101f1	      0xe800000000	                          call 0x40101f6	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101f6	              0x5a	                                 pop rdx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101f7	              0x59	                                 pop rcx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101f8	      0xe962ffffff	                           jmp 0x401015f	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x40101fd	           0xf1f00	                         nop dword [rax]	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x4010200	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_207	CALL_6
0x4010202	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_207	CALL_6
0x4010205	      0xb90f000000	                            mov ecx, 0xf	        90	string3.h	FUNCTION_207	CALL_6
0x401020a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_207	CALL_6
0x401020d	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_212	CALL_3
0x4010212	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_212	CALL_3
0x4010215	          0x4989e6	                            mov r14, rsp	        90	string3.h	FUNCTION_207	CALL_6
0x4010218	    0xc70700000000	                      mov dword [rdi], 0	        90	string3.h	FUNCTION_207	CALL_6
0x401021e	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	       126	string3.h	FUNCTION_212	CALL_3
0x4010223	      0xe800000000	                          call 0x4010228	       126	string3.h	FUNCTION_212	CALL_3
0x4010228	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       126	string3.h	FUNCTION_212	CALL_3
0x401022d	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_212	CALL_3
0x4010232	          0x4c89ee	                            mov rsi, r13	       126	string3.h	FUNCTION_212	CALL_3
0x4010235	      0xe800000000	                          call 0x401023a	       126	string3.h	FUNCTION_212	CALL_3
0x401023a	        0x4883ec08	                              sub rsp, 8	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x401023e	            0x6a7c	                               push 0x7c	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4010240	            0xeb98	                           jmp 0x40101da	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x4010242	      0xe800000000	                          call 0x4010247	     10586	elf.c	FUNCTION_162
bfd_section_from_shdr	SWITCH,2:CALL,114:IF,69:functions,0:ELSE,9:DO,0:WHILE,0:FOR,7	887
0x40032d0	    0x488b8ff80000	            mov rcx, qword [rdi + 0xf8] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40032d7	            0x31c0	                            xor eax, eax	      2006	elf.c	FUNCTION_36	IF_1
0x40032d9	    0x8b91fc020000	           mov edx, dword [rcx + 0x2fc] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40032df	            0x39f2	                            cmp edx, esi	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40032e1	     0xf86f7010000	                           jbe 0x40034de	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x40032e7	            0x4157	                                push r15	      1995	elf.c	FUNCTION_36
0x40032e9	            0x4156	                                push r14	      1995	elf.c	FUNCTION_36
0x40032eb	            0x4155	                                push r13	      1995	elf.c	FUNCTION_36
0x40032ed	            0x4154	                                push r12	      1995	elf.c	FUNCTION_36
0x40032ef	          0x4189f5	                           mov r13d, esi	      1995	elf.c	FUNCTION_36
0x40032f2	              0x55	                                push rbp	      1995	elf.c	FUNCTION_36
0x40032f3	              0x53	                                push rbx	      1995	elf.c	FUNCTION_36
0x40032f4	            0x89f5	                            mov ebp, esi	      1995	elf.c	FUNCTION_36
0x40032f6	          0x4889fb	                            mov rbx, rdi	      1995	elf.c	FUNCTION_36
0x40032f9	        0x4883ec28	                           sub rsp, 0x28	      1995	elf.c	FUNCTION_36
0x40032fd	    0x8b0500000000	            mov eax, dword [0x04003303] 	      2008	elf.c	FUNCTION_36	IF_2
0x4003303	          0x83c001	                              add eax, 1	      2008	elf.c	FUNCTION_36	IF_2
0x4003306	          0x83f803	                              cmp eax, 3	      2008	elf.c	FUNCTION_36	IF_2
0x4003309	    0x890500000000	            mov dword [0x0400330f], eax 	      2008	elf.c	FUNCTION_36	IF_2
0x400330f	            0x7654	                           jbe 0x4003365	      2008	elf.c	FUNCTION_36	IF_2
0x4003311	    0x483b3d000000	            cmp rdi, qword [0x04003318] 	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x4003318	     0xf84b2080000	                            je 0x4003bd0	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x400331e	    0x48c705000000	               mov qword [0x04003329], 0	      2021	elf.c	FUNCTION_36	IF_2	IF_3
0x4003329	    0x488d34950000	                        lea rsi, [rdx*4]	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4003331	          0x4889df	                            mov rdi, rbx	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4003334	      0xe800000000	                          call 0x4003339	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4003339	    0x48891d000000	            mov qword [0x04003340], rbx 	      2027	elf.c	FUNCTION_36	IF_2	IF_4
0x4003340	    0x488905000000	            mov qword [0x04003347], rax 	      2025	elf.c	FUNCTION_36	IF_2	IF_4
0x4003347	          0x4189ed	                           mov r13d, ebp	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400334a	        0x4a8d04a8	                  lea rax, [rax + r13*4]	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x400334e	            0x8b10	                    mov edx, dword [rax]	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4003350	            0x85d2	                           test edx, edx	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4003352	     0xf8598040000	                           jne 0x40037f0	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4003358	    0xc70001000000	                      mov dword [rax], 1	      2035	elf.c	FUNCTION_36	IF_2
0x400335e	    0x488b8bf80000	            mov rcx, qword [rbx + 0xf8] 	      2035	elf.c	FUNCTION_36	IF_2
0x4003365	        0x488b4158	            mov rax, qword [rcx + 0x58] 	      2038	elf.c	FUNCTION_36	CALL_6
0x4003369	    0x4e8d04ed0000	                         lea r8, [r13*8]	      2038	elf.c	FUNCTION_36	CALL_6
0x4003371	    0x41be00000000	                             mov r14d, 0	       331	elf.c	FUNCTION_17	IF_1
0x4003377	        0x4e8b24e8	            mov r12, qword [rax + r13*8]	      2038	elf.c	FUNCTION_36	CALL_6
0x400337b	        0x418b1424	                    mov edx, dword [r12]	      2040	elf.c	FUNCTION_36	CALL_8
0x400337f	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x4003381	     0xf85c1020000	                           jne 0x4003648	       330	elf.c	FUNCTION_17	IF_1
0x4003387	        0x488b4308	                mov rax, qword [rbx + 8]	      2045	elf.c	FUNCTION_36	CALL_9
0x400338b	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      2045	elf.c	FUNCTION_36	CALL_9
0x4003392	      0x418b442404	                mov eax, dword [r12 + 4]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003397	          0x83f80a	                            cmp eax, 0xa	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400339a	     0xf8470030000	                            je 0x4003710	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033a0	     0xf863a010000	                           jbe 0x40034e0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033a6	          0x83f812	                           cmp eax, 0x12	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033a9	     0xf8439080000	                            je 0x4003be8	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033af	     0xf86cb020000	                           jbe 0x4003680	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033b5	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033ba	     0xf8460080000	                            je 0x4003c20	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033c0	     0xf86ea080000	                           jbe 0x4003cb0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033c6	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033cb	     0xf844f040000	                            je 0x4003820	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033d1	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033d6	     0xf85e4080000	                           jne 0x4003cc0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40033dc	    0x49837c243802	               cmp qword [r12 + 0x38], 2	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x40033e2	     0xf85a8000000	                           jne 0x4003490	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x40033e8	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x40033ef	        0x498b1424	                    mov rdx, qword [r12]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x40033f3	    0x89a8800c0000	            mov dword [rax + 0xc80], ebp	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x40033f9	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003400	    0x488990f80100	            mov qword [rax + 0x1f8], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003407	      0x498b542408	                mov rdx, qword [r12 + 8]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400340c	    0x488990000200	            mov qword [rax + 0x200], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003413	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003418	    0x488990080200	            mov qword [rax + 0x208], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400341f	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003424	    0x488990100200	            mov qword [rax + 0x210], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400342b	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003430	    0x488990180200	            mov qword [rax + 0x218], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003437	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400343c	    0x488990200200	            mov qword [rax + 0x220], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003443	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003448	    0x488990280200	            mov qword [rax + 0x228], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400344f	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003454	    0x488990300200	            mov qword [rax + 0x230], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400345b	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003460	    0x488990380200	            mov qword [rax + 0x238], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003467	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x400346c	    0x488990400200	            mov qword [rax + 0x240], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003473	       0xf1f440000	                   nop dword [rax + rax]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003478	            0x89e9	                            mov ecx, ebp	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x400347a	          0x4c89f2	                            mov rdx, r14	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x400347d	          0x4c89e6	                            mov rsi, r12	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003480	          0x4889df	                            mov rdi, rbx	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003483	      0xe800000000	                          call 0x4003488	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003488	            0xeb08	                           jmp 0x4003492	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x400348a	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x400348f	              0x90	                                     nop	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x4003490	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x4003492	    0x488b15000000	            mov rdx, qword [0x04003499] 	      2544	elf.c	FUNCTION_36	IF_68
0x4003499	          0x4885d2	                           test rdx, rdx	      2544	elf.c	FUNCTION_36	IF_68
0x400349c	            0x740d	                            je 0x40034ab	      2544	elf.c	FUNCTION_36	IF_68
0x400349e	    0x483b1d000000	            cmp rbx, qword [0x040034a5] 	      2544	elf.c	FUNCTION_36	IF_68
0x40034a5	     0xf8435030000	                            je 0x40037e0	      2544	elf.c	FUNCTION_36	IF_68
0x40034ab	    0x8b0d00000000	            mov ecx, dword [0x040034b1] 	      2546	elf.c	FUNCTION_36	IF_69
0x40034b1	          0x8d51ff	                      lea edx, [rcx - 1]	      2546	elf.c	FUNCTION_36	IF_69
0x40034b4	            0x85d2	                           test edx, edx	      2546	elf.c	FUNCTION_36	IF_69
0x40034b6	    0x891500000000	            mov dword [0x040034bc], edx 	      2546	elf.c	FUNCTION_36	IF_69
0x40034bc	            0x7512	                           jne 0x40034d0	      2546	elf.c	FUNCTION_36	IF_69
0x40034be	    0x48c705000000	               mov qword [0x040034c9], 0	      2548	elf.c	FUNCTION_36	IF_69
0x40034c9	    0x48891d000000	            mov qword [0x040034d0], rbx 	      2549	elf.c	FUNCTION_36	IF_69
0x40034d0	        0x4883c428	                           add rsp, 0x28	      2552	elf.c	FUNCTION_36
0x40034d4	              0x5b	                                 pop rbx	      2552	elf.c	FUNCTION_36
0x40034d5	              0x5d	                                 pop rbp	      2552	elf.c	FUNCTION_36
0x40034d6	            0x415c	                                 pop r12	      2552	elf.c	FUNCTION_36
0x40034d8	            0x415d	                                 pop r13	      2552	elf.c	FUNCTION_36
0x40034da	            0x415e	                                 pop r14	      2552	elf.c	FUNCTION_36
0x40034dc	            0x415f	                                 pop r15	      2552	elf.c	FUNCTION_36
0x40034de	            0xf3c3	                                     ret	      2552	elf.c	FUNCTION_36
0x40034e0	          0x83f804	                              cmp eax, 4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40034e3	     0xf8417050000	                            je 0x4003a00	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40034e9	     0xf8731020000	                            ja 0x4003720	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40034ef	          0x83f801	                              cmp eax, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40034f2	     0xf8480ffffff	                            je 0x4003478	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40034f8	     0xf8212020000	                            jb 0x4003710	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40034fe	          0x83f802	                              cmp eax, 2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003501	     0xf84a9030000	                            je 0x40038b0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003507	          0x83f803	                              cmp eax, 3	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400350a	     0xf85b0070000	                           jne 0x4003cc0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003510	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4003516	     0xf85f4010000	                           jne 0x4003710	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x400351c	          0x3b6950	            cmp ebp, dword [rcx + 0x50] 	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x400351f	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003526	     0xf84720b0000	                            je 0x400409e	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x400352c	    0x8bb0780c0000	           mov esi, dword [rax + 0xc78] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4003532	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4003536	          0x4889f2	                            mov rdx, rsi	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4003539	        0x488b34f1	            mov rsi, qword [rcx + rsi*8]	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x400353d	          0x3b6e28	            cmp ebp, dword [rsi + 0x28] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4003540	     0xf84fd0b0000	                            je 0x4004143	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x4003546	    0x8bb87c0c0000	           mov edi, dword [rax + 0xc7c] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x400354c	          0x4889fe	                            mov rsi, rdi	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x400354f	        0x488b3cf9	            mov rdi, qword [rcx + rdi*8]	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x4003553	          0x3b6f28	            cmp ebp, dword [rdi + 0x28] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x4003556	     0xf84ae000000	                            je 0x400360a	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x400355c	            0x85f6	                           test esi, esi	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x400355e	            0x7408	                            je 0x4003568	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x4003560	            0x85d2	                           test edx, edx	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x4003562	     0xf8510ffffff	                           jne 0x4003478	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x4003568	    0x448b88fc0200	           mov r9d, dword [rax + 0x2fc] 	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x400356f	        0x4183f901	                              cmp r9d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003573	     0xf86fffeffff	                           jbe 0x4003478	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003579	      0xba08000000	                              mov edx, 8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400357e	      0x4c89642410	             mov qword [rsp + 0x10], r12	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003583	      0x4c896c2408	                mov qword [rsp + 8], r13	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003588	    0x41bf01000000	                             mov r15d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400358e	          0x4189ed	                           mov r13d, ebp	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003591	      0x4c89442418	              mov qword [rsp + 0x18], r8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003596	          0x4589cc	                           mov r12d, r9d	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003599	          0x4889d5	                            mov rbp, rdx	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400359c	            0xeb17	                           jmp 0x40035b5	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400359e	            0x6690	                                     nop	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40035a0	        0x4183c701	                             add r15d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40035a4	        0x4883c508	                              add rbp, 8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40035a8	          0x4539fc	                          cmp r12d, r15d	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40035ab	     0xf84a30c0000	                            je 0x4004254	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40035b1	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40035b5	        0x488b0c29	              mov rcx, qword [rcx + rbp]	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x40035b9	        0x443b6928	           cmp r13d, dword [rcx + 0x28] 	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x40035bd	            0x75e1	                           jne 0x40035a0	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x40035bf	          0x4539fd	                          cmp r13d, r15d	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x40035c2	     0xf84c2feffff	                            je 0x400348a	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x40035c8	          0x4489fe	                           mov esi, r15d	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40035cb	          0x4889df	                            mov rdi, rbx	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40035ce	      0xe800000000	                          call 0x40035d3	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40035d3	            0x85c0	                           test eax, eax	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40035d5	     0xf84affeffff	                            je 0x400348a	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x40035db	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40035e2	    0x4439b8780c00	          cmp dword [rax + 0xc78], r15d 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40035e9	     0xf84450b0000	                            je 0x4004134	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x40035ef	    0x4439b87c0c00	          cmp dword [rax + 0xc7c], r15d 	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40035f6	            0x75a8	                           jne 0x40035a0	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40035f8	          0x4489ed	                           mov ebp, r13d	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x40035fb	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x4003600	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x4003605	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x400360a	    0x488db8a80100	                  lea rdi, [rax + 0x1a8]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4003611	          0x4c89e6	                            mov rsi, r12	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4003614	      0xb914000000	                           mov ecx, 0x14	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x4003619	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400361b	          0x4c89f2	                            mov rdx, r14	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x400361e	            0x89e9	                            mov ecx, ebp	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x4003620	          0x4889df	                            mov rdi, rbx	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x4003623	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x400362a	    0x488db0a80100	                  lea rsi, [rax + 0x1a8]	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x4003631	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x4003635	        0x4a893400	               mov qword [rax + r8], rsi	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x4003639	      0xe800000000	                          call 0x400363e	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x400363e	      0xe94ffeffff	                           jmp 0x4003492	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x4003643	       0xf1f440000	                   nop dword [rax + rax]	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x4003648	          0x8b7150	            mov esi, dword [rcx + 0x50] 	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x400364b	          0x4889df	                            mov rdi, rbx	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x400364e	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x4003653	      0x48894c2408	                mov qword [rsp + 8], rcx	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x4003658	      0xe8e3ebffff	call sym.bfd_elf_string_from_elf_section.part.20	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x400365d	          0x4885c0	                           test rax, rax	      2042	elf.c	FUNCTION_36	IF_6
0x4003660	          0x4989c6	                            mov r14, rax	      2042	elf.c	FUNCTION_36	IF_6
0x4003663	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2042	elf.c	FUNCTION_36	IF_6
0x4003668	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2042	elf.c	FUNCTION_36	IF_6
0x400366d	     0xf841dfeffff	                            je 0x4003490	      2042	elf.c	FUNCTION_36	IF_6
0x4003673	      0xe90ffdffff	                           jmp 0x4003387	      2042	elf.c	FUNCTION_36	IF_6
0x4003678	     0xf1f84000000	                   nop dword [rax + rax]	      2042	elf.c	FUNCTION_36	IF_6
0x4003680	          0x83f810	                           cmp eax, 0x10	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003683	     0xf87af070000	                            ja 0x4003e38	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003689	          0x83f80e	                            cmp eax, 0xe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400368c	     0xf83e6fdffff	                           jae 0x4003478	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003692	          0x83f80b	                            cmp eax, 0xb	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003695	     0xf8525060000	                           jne 0x4003cc0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400369b	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40036a2	    0x8b827c0c0000	           mov eax, dword [rdx + 0xc7c] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40036a8	            0x39c5	                            cmp ebp, eax	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40036aa	            0x7464	                            je 0x4003710	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40036ac	    0x498bb7000300	           mov rsi, qword [r15 + 0x300] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40036b3	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40036b8	         0xfb67605	               movzx esi, byte [rsi + 5]	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40036bc	          0x4839f1	                            cmp rcx, rsi	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40036bf	     0xf85cbfdffff	                           jne 0x4003490	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x40036c5	      0x418b7c242c	            mov edi, dword [r12 + 0x2c] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40036ca	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40036cf	        0x480fafcf	                           imul rcx, rdi	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40036d3	          0x4839f1	                            cmp rcx, rsi	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40036d6	     0xf87ad070000	                            ja 0x4003e89	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x40036dc	            0x85c0	                           test eax, eax	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x40036de	     0xf8407090000	                            je 0x4003feb	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x40036e4	      0xba05000000	                              mov edx, 5	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x40036e9	      0xbe00000000	                              mov esi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x40036ee	      0xbf00000000	                              mov edi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x40036f3	      0xe800000000	                          call 0x40036f8	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x40036f8	            0x89ea	                            mov edx, ebp	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x40036fa	          0x4889c7	                            mov rdi, rax	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x40036fd	          0x4889de	                            mov rsi, rbx	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4003700	            0x31c0	                            xor eax, eax	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4003702	      0xe800000000	                          call 0x4003707	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4003707	    0x660f1f840000	                    nop word [rax + rax]	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4003710	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4003715	      0xe978fdffff	                           jmp 0x4003492	      2109	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x400371a	    0x660f1f440000	                    nop word [rax + rax]	      2109	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003720	          0x83f808	                              cmp eax, 8	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003723	     0xf87d7020000	                            ja 0x4003a00	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003729	          0x83f807	                              cmp eax, 7	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400372c	     0xf8346fdffff	                           jae 0x4003478	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003732	          0x83f805	                              cmp eax, 5	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003735	     0xf843dfdffff	                            je 0x4003478	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400373b	          0x83f806	                              cmp eax, 6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400373e	     0xf857c050000	                           jne 0x4003cc0	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003744	            0x89e9	                            mov ecx, ebp	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4003746	          0x4c89f2	                            mov rdx, r14	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4003749	          0x4c89e6	                            mov rsi, r12	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400374c	          0x4889df	                            mov rdi, rbx	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400374f	      0xe800000000	                          call 0x4003754	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4003754	            0x85c0	                           test eax, eax	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x4003756	     0xf8434fdffff	                            je 0x4003490	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x400375c	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4003763	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4003768	    0x8b8afc020000	           mov ecx, dword [rdx + 0x2fc] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x400376e	            0x39c8	                            cmp eax, ecx	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4003770	     0xf872f070000	                            ja 0x4003ea5	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x4003776	        0x488b7258	            mov rsi, qword [rdx + 0x58] 	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x400377a	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x400377e	          0x4885c0	                           test rax, rax	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4003781	     0xf8409fdffff	                            je 0x4003490	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4003787	        0x83780403	                  cmp dword [rax + 4], 3	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x400378b	            0x7483	                            je 0x4003710	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x400378d	    0x8b827c0c0000	           mov eax, dword [rdx + 0xc7c] 	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4003793	            0x85c0	                           test eax, eax	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4003795	     0xf8538070000	                           jne 0x4003ed3	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x400379b	          0x83f901	                              cmp ecx, 1	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x400379e	     0xf866cffffff	                           jbe 0x4003710	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40037a4	        0x488b5608	                mov rdx, qword [rsi + 8]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40037a8	        0x837a040b	                cmp dword [rdx + 4], 0xb	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037ac	     0xf842c080000	                            je 0x4003fde	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037b2	          0x8d51fe	                      lea edx, [rcx - 2]	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037b5	        0x488d4610	                   lea rax, [rsi + 0x10]	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037b9	      0x488d4cd610	          lea rcx, [rsi + rdx*8 + 0x10] 	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037be	            0xeb11	                           jmp 0x40037d1	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037c0	          0x488b10	                    mov rdx, qword [rax]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40037c3	        0x4883c008	                              add rax, 8	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x40037c7	        0x837a040b	                cmp dword [rdx + 4], 0xb	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037cb	     0xf840d080000	                            je 0x4003fde	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40037d1	          0x4839c8	                            cmp rax, rcx	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40037d4	            0x75ea	                           jne 0x40037c0	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40037d6	      0xe935ffffff	                           jmp 0x4003710	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40037db	       0xf1f440000	                   nop dword [rax + rax]	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40037e0	    0x42c704aa0000	              mov dword [rdx + r13*4], 0	      2545	elf.c	FUNCTION_36	IF_68
0x40037e8	      0xe9befcffff	                           jmp 0x40034ab	      2545	elf.c	FUNCTION_36	IF_68
0x40037ed	           0xf1f00	                         nop dword [rax]	      2545	elf.c	FUNCTION_36	IF_68
0x40037f0	      0xba05000000	                              mov edx, 5	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x40037f5	      0xbe00000000	                              mov esi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x40037fa	      0xbf00000000	                              mov edi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x40037ff	      0xe800000000	                          call 0x4003804	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4003804	          0x4889de	                            mov rsi, rbx	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4003807	          0x4889c7	                            mov rdi, rax	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x400380a	            0x31c0	                            xor eax, eax	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x400380c	      0xe800000000	                          call 0x4003811	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4003811	            0x31c0	                            xor eax, eax	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4003813	      0xe9b8fcffff	                           jmp 0x40034d0	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4003818	     0xf1f84000000	                   nop dword [rax + rax]	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4003820	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4003827	        0x498b1424	                    mov rdx, qword [r12]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400382b	    0x89a8880c0000	            mov dword [rax + 0xc88], ebp	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4003831	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003838	    0x488990480200	            mov qword [rax + 0x248], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400383f	      0x498b542408	                mov rdx, qword [r12 + 8]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003844	    0x488990500200	            mov qword [rax + 0x250], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400384b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003850	    0x488990580200	            mov qword [rax + 0x258], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003857	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400385c	    0x488990600200	            mov qword [rax + 0x260], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003863	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003868	    0x488990680200	            mov qword [rax + 0x268], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400386f	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003874	    0x488990700200	            mov qword [rax + 0x270], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400387b	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003880	    0x488990780200	            mov qword [rax + 0x278], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003887	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400388c	    0x488990800200	            mov qword [rax + 0x280], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003893	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003898	    0x488990880200	            mov qword [rax + 0x288], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x400389f	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40038a4	    0x488990900200	            mov qword [rax + 0x290], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40038ab	      0xe9c8fbffff	                           jmp 0x4003478	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x40038b0	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40038b7	    0x8b82780c0000	           mov eax, dword [rdx + 0xc78] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40038bd	            0x39c5	                            cmp ebp, eax	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40038bf	     0xf844bfeffff	                            je 0x4003710	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40038c5	    0x498bb7000300	           mov rsi, qword [r15 + 0x300] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40038cc	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40038d1	         0xfb67605	               movzx esi, byte [rsi + 5]	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40038d5	          0x4839f1	                            cmp rcx, rsi	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40038d8	     0xf85b2fbffff	                           jne 0x4003490	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40038de	      0x418b7c242c	            mov edi, dword [r12 + 0x2c] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40038e3	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40038e8	        0x480fafcf	                           imul rcx, rdi	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40038ec	          0x4839f1	                            cmp rcx, rsi	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40038ef	     0xf8794050000	                            ja 0x4003e89	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40038f5	            0x85c0	                           test eax, eax	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x40038f7	     0xf8548090000	                           jne 0x4004245	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x40038fd	    0x89aa780c0000	            mov dword [rdx + 0xc78], ebp	      2145	elf.c	FUNCTION_36	SWITCH_1	CALL_25
0x4003903	        0x498b1424	                    mov rdx, qword [r12]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003907	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400390e	        0x48895068	             mov qword [rax + 0x68], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003912	      0x498b542408	                mov rdx, qword [r12 + 8]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003917	        0x48895070	             mov qword [rax + 0x70], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400391b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003920	        0x48895078	             mov qword [rax + 0x78], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003924	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003929	    0x488990800000	             mov qword [rax + 0x80], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003930	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003935	    0x488990880000	             mov qword [rax + 0x88], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400393c	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003941	    0x488990900000	             mov qword [rax + 0x90], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003948	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400394d	    0x488990980000	             mov qword [rax + 0x98], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003954	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003959	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003960	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003965	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400396c	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003971	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003978	    0x4c8b8bf80000	              mov r9, qword [rbx + 0xf8]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x400397f	        0x498b4158	              mov rax, qword [r9 + 0x58]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4003983	        0x498d7168	                    lea rsi, [r9 + 0x68]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x4003987	        0x4a893400	               mov qword [rax + r8], rsi	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x400398b	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      2148	elf.c	FUNCTION_36	SWITCH_1
0x400398e	            0x89cf	                            mov edi, ecx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4003990	          0xc1ef05	                              shr edi, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4003993	    0x81e7ffff0f00	                        and edi, 0xfffff	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4003999	            0x89f8	                            mov eax, edi	      2148	elf.c	FUNCTION_36	SWITCH_1
0x400399b	          0x83c810	                            or eax, 0x10	      2148	elf.c	FUNCTION_36	SWITCH_1
0x400399e	          0xc1e005	                              shl eax, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40039a1	            0x89c2	                            mov edx, eax	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40039a3	            0x89c8	                            mov eax, ecx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40039a5	      0x251f0000fe	                     and eax, 0xfe00001f	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40039aa	             0x9d0	                             or eax, edx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40039ac	          0x894344	             mov dword [rbx + 0x44], eax	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40039af	      0x41f6417002	                test byte [r9 + 0x70], 2	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40039b4	            0x7409	                            je 0x40039bf	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40039b6	          0x83e740	                           and edi, 0x40	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40039b9	     0xf85a7080000	                           jne 0x4004266	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x40039bf	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039c6	    0x488b87e80200	           mov rax, qword [rdi + 0x2e8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039cd	          0x4885c0	                           test rax, rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039d0	            0x751b	                           jne 0x40039ed	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039d2	      0xe902080000	                           jmp 0x40041d9	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039d7	    0x660f1f840000	                    nop word [rax + rax]	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039e0	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039e4	          0x4885c0	                           test rax, rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039e7	     0xf84ec070000	                            je 0x40041d9	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x40039ed	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x40039f0	            0x75ee	                           jne 0x40039e0	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x40039f2	      0xe919fdffff	                           jmp 0x4003710	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x40039f7	    0x660f1f840000	                    nop word [rax + rax]	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4003a00	          0x83f809	                              cmp eax, 9	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003a03	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003a08	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003a0f	     0xf846b040000	                            je 0x4003e80	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003a15	         0xfb64004	               movzx eax, byte [rax + 4]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003a19	          0x4839d0	                            cmp rax, rdx	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003a1c	     0xf856efaffff	                           jne 0x4003490	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003a22	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x4003a29	      0x458b4c2428	            mov r9d, dword [r12 + 0x28] 	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4003a2e	    0x448b97fc0200	          mov r10d, dword [rdi + 0x2fc] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x4003a35	          0x4539ca	                           cmp r10d, r9d	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4003a38	     0xf861e050000	                           jbe 0x4003f5c	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4003a3e	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a41	          0xc1e805	                              shr eax, 5	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a44	            0xa842	                           test al, 0x42	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a46	     0xf849d040000	                            je 0x4003ee9	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a4c	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a50	          0x4489c8	                            mov eax, r9d	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a53	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a57	        0x448b5804	               mov r11d, dword [rax + 4]	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003a5b	        0x4183fb02	                             cmp r11d, 2	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003a5f	     0xf8430050000	                            je 0x4003f95	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003a65	        0x4183fb0b	                           cmp r11d, 0xb	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003a69	     0xf8426050000	                            je 0x4003f95	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003a6f	    0x44398f780c00	           cmp dword [rdi + 0xc78], r9d 	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a76	     0xf85fcf9ffff	                           jne 0x4003478	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a7c	          0x4585c9	                           test r9d, r9d	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a7f	     0xf84f3f9ffff	                            je 0x4003478	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a85	      0x418b74242c	            mov esi, dword [r12 + 0x2c] 	      2393	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a8a	          0x4139f2	                           cmp r10d, esi	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a8d	     0xf86e5f9ffff	                           jbe 0x4003478	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a93	            0x85f6	                           test esi, esi	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a95	     0xf84ddf9ffff	                            je 0x4003478	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a9b	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4003a9f	            0x89f0	                            mov eax, esi	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4003aa1	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4003aa5	          0x8b4004	                mov eax, dword [rax + 4]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x4003aa8	          0x83f804	                              cmp eax, 4	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4003aab	     0xf84c7f9ffff	                            je 0x4003478	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4003ab1	          0x83f809	                              cmp eax, 9	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4003ab4	     0xf84bef9ffff	                            je 0x4003478	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x4003aba	          0x4889df	                            mov rdi, rbx	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003abd	      0x4c89442408	                 mov qword [rsp + 8], r8	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003ac2	      0xe800000000	                          call 0x4003ac7	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003ac7	            0x85c0	                           test eax, eax	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003ac9	     0xf84c1f9ffff	                            je 0x4003490	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003acf	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4003ad6	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4003adb	    0x3b82fc020000	           cmp eax, dword [rdx + 0x2fc] 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4003ae1	     0xf83a9f9ffff	                           jae 0x4003490	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4003ae7	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4003aeb	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2593	elf.c	FUNCTION_38	CALL_2
0x4003aef	        0x488b6840	            mov rbp, qword [rax + 0x40] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4003af3	          0x4885ed	                           test rbp, rbp	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4003af6	     0xf8494f9ffff	                            je 0x4003490	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4003afc	    0x41837c240404	                  cmp dword [r12 + 4], 4	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003b02	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      2410	elf.c	FUNCTION_36	SWITCH_1	CALL_88
0x4003b09	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003b0e	     0xf84b0070000	                            je 0x40042c4	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003b14	        0x4c8d7058	                   lea r14, [rax + 0x58]	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x4003b18	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x4003b1c	          0x4885c0	                           test rax, rax	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4003b1f	     0xf856bf9ffff	                           jne 0x4003490	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4003b25	      0xbe50000000	                           mov esi, 0x50	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4003b2a	          0x4889df	                            mov rdi, rbx	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4003b2d	      0x4c89442408	                 mov qword [rsp + 8], r8	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4003b32	      0xe800000000	                          call 0x4003b37	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4003b37	          0x4885c0	                           test rax, rax	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4003b3a	     0xf8450f9ffff	                            je 0x4003490	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4003b40	          0x4889c7	                            mov rdi, rax	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003b43	      0xb914000000	                           mov ecx, 0x14	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003b48	          0x4c89e6	                            mov rsi, r12	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003b4b	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003b4d	          0x498906	                    mov qword [r14], rax	      2423	elf.c	FUNCTION_36	SWITCH_1
0x4003b50	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4003b55	    0x8b8d88000000	            mov ecx, dword [rbp + 0x88] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b5b	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4003b62	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b67	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4003b6b	        0x4a890402	               mov qword [rdx + r8], rax	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4003b6f	            0x31c0	                            xor eax, eax	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b71	          0x4885f6	                           test rsi, rsi	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b74	            0x740a	                            je 0x4003b80	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b76	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b7b	            0x31d2	                            xor edx, edx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b7d	          0x48f7f6	                                 div rsi	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b80	    0x498b97000300	           mov rdx, qword [r15 + 0x300] 	      2426	elf.c	FUNCTION_36	SWITCH_1
0x4003b87	         0xfb65209	               movzx edx, byte [rdx + 9]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b8b	        0x834d2004	                or dword [rbp + 0x20], 4	      2427	elf.c	FUNCTION_36	SWITCH_1
0x4003b8f	    0x48c745780000	               mov qword [rbp + 0x78], 0	      2428	elf.c	FUNCTION_36	SWITCH_1
0x4003b97	           0xfafc2	                           imul eax, edx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b9a	             0x1c8	                            add eax, ecx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003b9c	    0x49837c242000	               cmp qword [r12 + 0x20], 0	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4003ba2	    0x898588000000	            mov dword [rbp + 0x88], eax 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003ba8	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4003bad	    0x488985980000	            mov qword [rbp + 0x98], rax 	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4003bb4	            0x740c	                            je 0x4003bc2	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4003bb6	    0x41837c240404	                  cmp dword [r12 + 4], 4	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4003bbc	            0x7504	                           jne 0x4003bc2	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4003bbe	        0x804d2504	                 or byte [rbp + 0x25], 4	      2435	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4003bc2	        0x834b4420	             or dword [rbx + 0x44], 0x20	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4003bc6	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4003bcb	      0xe9c2f8ffff	                           jmp 0x4003492	      2438	elf.c	FUNCTION_36	SWITCH_1
0x4003bd0	    0x488b05000000	            mov rax, qword [0x04003bd7] 	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4003bd7	          0x4885c0	                           test rax, rax	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4003bda	     0xf8567f7ffff	                           jne 0x4003347	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4003be0	      0xe944f7ffff	                           jmp 0x4003329	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4003be5	           0xf1f00	                         nop dword [rax]	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4003be8	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003bef	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003bf6	          0x4885c0	                           test rax, rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003bf9	            0x7512	                           jne 0x4003c0d	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003bfb	      0xe988010000	                           jmp 0x4003d88	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003c00	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003c04	          0x4885c0	                           test rax, rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003c07	     0xf847b010000	                            je 0x4003d88	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003c0d	          0x3b6850	            cmp ebp, dword [rax + 0x50] 	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003c10	            0x75ee	                           jne 0x4003c00	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003c12	      0xe9f9faffff	                           jmp 0x4003710	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003c17	    0x660f1f840000	                    nop word [rax + rax]	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003c20	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4003c27	        0x498b1424	                    mov rdx, qword [r12]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c2b	    0x89a8840c0000	            mov dword [rax + 0xc84], ebp	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4003c31	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c38	    0x488990980200	            mov qword [rax + 0x298], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c3f	      0x498b542408	                mov rdx, qword [r12 + 8]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c44	    0x488990a00200	            mov qword [rax + 0x2a0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c4b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c50	    0x488990a80200	            mov qword [rax + 0x2a8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c57	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c5c	    0x488990b00200	            mov qword [rax + 0x2b0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c63	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c68	    0x488990b80200	            mov qword [rax + 0x2b8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c6f	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c74	    0x488990c00200	            mov qword [rax + 0x2c0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c7b	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c80	    0x488990c80200	            mov qword [rax + 0x2c8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c87	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c8c	    0x488990d00200	            mov qword [rax + 0x2d0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c93	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c98	    0x488990d80200	            mov qword [rax + 0x2d8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003c9f	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003ca4	    0x488990e00200	            mov qword [rax + 0x2e0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003cab	      0xe9c8f7ffff	                           jmp 0x4003478	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003cb0	    0x8d900a000090	             lea edx, [rax - 0x6ffffff6]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003cb6	          0x83fa01	                              cmp edx, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003cb9	     0xf86b9f7ffff	                           jbe 0x4003478	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003cbf	              0x90	                                     nop	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003cc0	      0x3df5ffff6f	                     cmp eax, 0x6ffffff5	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003cc5	            0x89e9	                            mov ecx, ebp	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003cc7	          0x4c89f2	                            mov rdx, r14	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003cca	          0x4c89e6	                            mov rsi, r12	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003ccd	          0x4889df	                            mov rdi, rbx	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003cd0	     0xf848a000000	                            je 0x4003d60	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003cd6	    0x413b87380300	           cmp eax, dword [r15 + 0x338] 	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003cdd	     0xf847d000000	                            je 0x4003d60	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003ce3	    0x41ff97900000	                 call qword [r15 + 0x90]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003cea	            0x89c2	                            mov edx, eax	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003cec	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4003cf1	            0x85d2	                           test edx, edx	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003cf3	     0xf8599f7ffff	                           jne 0x4003492	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003cf9	      0x458b7c2404	               mov r15d, dword [r12 + 4]	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4003cfe	          0x4585ff	                         test r15d, r15d	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4003d01	     0xf88c6020000	                            js 0x4003fcd	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4003d07	    0x418d87000000	             lea eax, [r15 - 0x70000000]	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4003d0e	      0x3dffffff0f	                      cmp eax, 0xfffffff	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4003d13	            0x761a	                           jbe 0x4003d2f	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4003d15	    0x418d87000000	             lea eax, [r15 - 0x60000000]	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4003d1c	      0x3dffffff0f	                      cmp eax, 0xfffffff	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4003d21	            0x770c	                            ja 0x4003d2f	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4003d23	    0x41f644240901	                  test byte [r12 + 9], 1	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4003d29	     0xf8449f7ffff	                            je 0x4003478	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4003d2f	      0xba05000000	                              mov edx, 5	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003d34	      0xbe00000000	                              mov esi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003d39	      0xbf00000000	                              mov edi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003d3e	      0xe800000000	                          call 0x4003d43	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003d43	          0x4c89f1	                            mov rcx, r14	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003d46	          0x4889c7	                            mov rdi, rax	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003d49	          0x4489fa	                           mov edx, r15d	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003d4c	            0x31c0	                            xor eax, eax	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003d4e	          0x4889de	                            mov rsi, rbx	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003d51	      0xe800000000	                          call 0x4003d56	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003d56	            0x31c0	                            xor eax, eax	      2542	elf.c	FUNCTION_36
0x4003d58	      0xe935f7ffff	                           jmp 0x4003492	      2542	elf.c	FUNCTION_36
0x4003d5d	           0xf1f00	                         nop dword [rax]	      2542	elf.c	FUNCTION_36
0x4003d60	      0xe800000000	                          call 0x4003d65	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d65	            0x85c0	                           test eax, eax	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d67	     0xf8423f7ffff	                            je 0x4003490	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d6d	          0x4c89e6	                            mov rsi, r12	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4003d70	          0x4889df	                            mov rdi, rbx	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4003d73	      0xe800000000	                          call 0x4003d78	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4003d78	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4003d7d	      0xe910f7ffff	                           jmp 0x4003492	      2482	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d82	    0x660f1f440000	                    nop word [rax + rax]	      2482	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d88	      0xbe60000000	                           mov esi, 0x60	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4003d8d	          0x4889df	                            mov rdi, rbx	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4003d90	      0x4c89442408	                 mov qword [rsp + 8], r8	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4003d95	      0xe800000000	                          call 0x4003d9a	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4003d9a	          0x4885c0	                           test rax, rax	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4003d9d	     0xf84edf6ffff	                            je 0x4003490	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4003da3	        0x498b1424	                    mov rdx, qword [r12]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003da7	          0x896850	             mov dword [rax + 0x50], ebp	      2250	elf.c	FUNCTION_36	SWITCH_1
0x4003daa	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4003daf	          0x488910	                    mov qword [rax], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003db2	      0x498b542408	                mov rdx, qword [r12 + 8]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003db7	        0x48895008	                mov qword [rax + 8], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dbb	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dc0	        0x48895010	             mov qword [rax + 0x10], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dc4	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dc9	        0x48895018	             mov qword [rax + 0x18], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dcd	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dd2	        0x48895020	             mov qword [rax + 0x20], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dd6	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003ddb	        0x48895028	             mov qword [rax + 0x28], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003ddf	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003de4	        0x48895030	             mov qword [rax + 0x30], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003de8	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003ded	        0x48895038	             mov qword [rax + 0x38], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003df1	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003df6	        0x48895040	             mov qword [rax + 0x40], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dfa	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003dff	        0x48895048	             mov qword [rax + 0x48], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003e03	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4003e0a	    0x488b8ae80200	           mov rcx, qword [rdx + 0x2e8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4003e11	        0x48894858	             mov qword [rax + 0x58], rcx	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x4003e15	    0x488982e80200	            mov qword [rdx + 0x2e8], rax	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x4003e1c	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4003e23	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4003e27	        0x4a890402	               mov qword [rdx + r8], rax	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4003e2b	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4003e30	      0xe95df6ffff	                           jmp 0x4003492	      2255	elf.c	FUNCTION_36	SWITCH_1
0x4003e35	           0xf1f00	                         nop dword [rax]	      2255	elf.c	FUNCTION_36	SWITCH_1
0x4003e38	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003e3d	        0x4883f803	                              cmp rax, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003e41	     0xf8649f6ffff	                           jbe 0x4003490	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003e47	    0x49837c243804	               cmp qword [r12 + 0x38], 4	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003e4d	     0xf853df6ffff	                           jne 0x4003490	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003e53	            0xa803	                              test al, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003e55	     0xf8535f6ffff	                           jne 0x4003490	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003e5b	            0x89e9	                            mov ecx, ebp	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003e5d	          0x4c89f2	                            mov rdx, r14	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003e60	          0x4c89e6	                            mov rsi, r12	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003e63	          0x4889df	                            mov rdi, rbx	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003e66	      0xe800000000	                          call 0x4003e6b	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003e6b	            0x85c0	                           test eax, eax	      2000	elf.c	FUNCTION_36
0x4003e6d	           0xf95c0	                                setne al	      2000	elf.c	FUNCTION_36
0x4003e70	           0xfb6c0	                           movzx eax, al	      2000	elf.c	FUNCTION_36
0x4003e73	      0xe91af6ffff	                           jmp 0x4003492	      2000	elf.c	FUNCTION_36
0x4003e78	     0xf1f84000000	                   nop dword [rax + rax]	      2000	elf.c	FUNCTION_36
0x4003e80	         0xfb64003	               movzx eax, byte [rax + 3]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003e84	      0xe990fbffff	                           jmp 0x4003a19	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003e89	          0x4885f6	                           test rsi, rsi	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4003e8c	     0xf85fef5ffff	                           jne 0x4003490	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4003e92	    0x41c744242c00	               mov dword [r12 + 0x2c], 0	      2214	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4003e9b	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4003ea0	      0xe9edf5ffff	                           jmp 0x4003492	      2215	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4003ea5	          0x4889df	                            mov rdi, rbx	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003ea8	      0xe800000000	                          call 0x4003ead	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003ead	          0x83f805	                              cmp eax, 5	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003eb0	            0x7409	                            je 0x4003ebb	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003eb2	          0x83f808	                              cmp eax, 8	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003eb5	     0xf85d5f5ffff	                           jne 0x4003490	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003ebb	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2000	elf.c	FUNCTION_36
0x4003ec0	      0x2d00ff0000	                         sub eax, 0xff00	      2000	elf.c	FUNCTION_36
0x4003ec5	          0x83f801	                              cmp eax, 1	      2000	elf.c	FUNCTION_36
0x4003ec8	           0xf96c0	                                setbe al	      2000	elf.c	FUNCTION_36
0x4003ecb	           0xfb6c0	                           movzx eax, al	      2000	elf.c	FUNCTION_36
0x4003ece	      0xe9bff5ffff	                           jmp 0x4003492	      2000	elf.c	FUNCTION_36
0x4003ed3	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4003ed7	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4003eda	      0x4189442428	             mov dword [r12 + 0x28], eax	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4003edf	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x4003ee4	      0xe9a9f5ffff	                           jmp 0x4003492	      2000	elf.c	FUNCTION_36
0x4003ee9	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003eed	          0x4889c6	                            mov rsi, rax	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003ef0	      0x4889442408	                mov qword [rsp + 8], rax	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003ef5	          0x4489c8	                            mov eax, r9d	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003ef8	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003efc	        0x448b5804	               mov r11d, dword [rax + 4]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003f00	        0x4183fb0b	                           cmp r11d, 0xb	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003f04	     0xf8451fbffff	                            je 0x4003a5b	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003f0a	        0x4183fb02	                             cmp r11d, 2	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003f0e	     0xf8447fbffff	                            je 0x4003a5b	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003f14	        0x4183fa01	                             cmp r10d, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f18	     0xf863dfbffff	                           jbe 0x4003a5b	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f1e	        0x488d5608	                      lea rdx, [rsi + 8]	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f22	      0xb801000000	                              mov eax, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f27	            0x31f6	                            xor esi, esi	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f29	            0xeb1a	                           jmp 0x4003f45	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f2b	       0xf1f440000	                   nop dword [rax + rax]	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f30	          0x83f90b	                            cmp ecx, 0xb	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003f33	            0x741b	                            je 0x4003f50	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003f35	          0x83c001	                              add eax, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f38	        0x4883c208	                              add rdx, 8	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f3c	          0x4139c2	                           cmp r10d, eax	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f3f	     0xf84dc020000	                            je 0x4004221	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003f45	          0x488b0a	                    mov rcx, qword [rdx]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003f48	          0x8b4904	                mov ecx, dword [rcx + 4]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003f4b	          0x83f902	                              cmp ecx, 2	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003f4e	            0x75e0	                           jne 0x4003f30	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003f50	            0x85f6	                           test esi, esi	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x4003f52	     0xf8503fbffff	                           jne 0x4003a5b	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x4003f58	            0x89c6	                            mov esi, eax	      2371	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45
0x4003f5a	            0xebd9	                           jmp 0x4003f35	      2371	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45
0x4003f5c	      0xba05000000	                              mov edx, 5	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4003f61	      0xbe00000000	                              mov esi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4003f66	      0xbf00000000	                              mov edi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4003f6b	      0x44894c2408	                mov dword [rsp + 8], r9d	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4003f70	      0xe800000000	                          call 0x4003f75	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x4003f75	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f7a	          0x4889c7	                            mov rdi, rax	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f7d	          0x4189e8	                            mov r8d, ebp	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f80	          0x4c89f1	                            mov rcx, r14	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f83	          0x4889de	                            mov rsi, rbx	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f86	            0x31c0	                            xor eax, eax	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f88	          0x4489ca	                            mov edx, r9d	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f8b	      0xe800000000	                          call 0x4003f90	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f90	      0xe9e3f4ffff	                           jmp 0x4003478	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x4003f95	          0x4489ce	                            mov esi, r9d	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003f98	          0x4889df	                            mov rdi, rbx	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003f9b	      0x4489542410	            mov dword [rsp + 0x10], r10d	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fa0	      0x4c89442408	                 mov qword [rsp + 8], r8	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fa5	      0xe800000000	                          call 0x4003faa	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003faa	            0x85c0	                           test eax, eax	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fac	     0xf84def4ffff	                            je 0x4003490	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fb2	      0x458b4c2428	            mov r9d, dword [r12 + 0x28] 	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fb7	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fbe	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fc3	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fc8	      0xe9a2faffff	                           jmp 0x4003a6f	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x4003fcd	    0x41f644240802	                  test byte [r12 + 8], 2	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4003fd3	     0xf849ff4ffff	                            je 0x4003478	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4003fd9	      0xe951fdffff	                           jmp 0x4003d2f	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4003fde	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003fe1	      0x4189442428	             mov dword [r12 + 0x28], eax	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003fe6	      0xe925f7ffff	                           jmp 0x4003710	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003feb	    0x89aa7c0c0000	            mov dword [rdx + 0xc7c], ebp	      2229	elf.c	FUNCTION_36	SWITCH_1	CALL_39
0x4003ff1	        0x498b1424	                    mov rdx, qword [r12]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4003ff5	            0x89e9	                            mov ecx, ebp	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4003ff7	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4003ffe	          0x4889df	                            mov rdi, rbx	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4004001	    0x488990580100	            mov qword [rax + 0x158], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004008	      0x498b542408	                mov rdx, qword [r12 + 8]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400400d	    0x488990600100	            mov qword [rax + 0x160], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004014	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004019	    0x488990680100	            mov qword [rax + 0x168], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004020	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004025	    0x488990700100	            mov qword [rax + 0x170], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400402c	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004031	    0x488990780100	            mov qword [rax + 0x178], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004038	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400403d	    0x488990800100	            mov qword [rax + 0x180], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004044	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004049	    0x488990880100	            mov qword [rax + 0x188], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004050	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004055	    0x488990900100	            mov qword [rax + 0x190], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400405c	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004061	    0x488990980100	            mov qword [rax + 0x198], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004068	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400406d	    0x488990a00100	            mov qword [rax + 0x1a0], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4004074	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x400407b	          0x4c89f2	                            mov rdx, r14	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x400407e	    0x488db0580100	                  lea rsi, [rax + 0x158]	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4004085	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4004089	        0x4a893400	               mov qword [rax + r8], rsi	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x400408d	    0x814b44000200	            or dword [rbx + 0x44], 0x200	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4004094	      0xe800000000	                          call 0x4004099	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4004099	      0xe9f4f3ffff	                           jmp 0x4003492	      2237	elf.c	FUNCTION_36	SWITCH_1
0x400409e	        0x498b1424	                    mov rdx, qword [r12]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040a2	    0x488990b80000	             mov qword [rax + 0xb8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040a9	      0x498b542408	                mov rdx, qword [r12 + 8]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040ae	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040b5	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040ba	    0x488990c80000	             mov qword [rax + 0xc8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040c1	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040c6	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040cd	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040d2	    0x488990d80000	             mov qword [rax + 0xd8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040d9	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040de	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040e5	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040ea	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040f1	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040f6	    0x488990f00000	             mov qword [rax + 0xf0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40040fd	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4004102	    0x488990f80000	             mov qword [rax + 0xf8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4004109	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400410e	    0x488990000100	            mov qword [rax + 0x100], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4004115	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x400411c	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4004120	    0x4805b8000000	                           add rax, 0xb8	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x4004126	        0x4a890402	               mov qword [rdx + r8], rax	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x400412a	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x400412f	      0xe95ef3ffff	                           jmp 0x4003492	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4004134	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4004139	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x400413e	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4004143	        0x498b1424	                    mov rdx, qword [r12]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4004147	    0x488990080100	            mov qword [rax + 0x108], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400414e	      0x498b542408	                mov rdx, qword [r12 + 8]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4004153	    0x488990100100	            mov qword [rax + 0x110], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400415a	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400415f	    0x488990180100	            mov qword [rax + 0x118], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4004166	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400416b	    0x488990200100	            mov qword [rax + 0x120], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4004172	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4004177	    0x488990280100	            mov qword [rax + 0x128], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400417e	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4004183	    0x488990300100	            mov qword [rax + 0x130], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400418a	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400418f	    0x488990380100	            mov qword [rax + 0x138], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4004196	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400419b	    0x488990400100	            mov qword [rax + 0x140], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40041a2	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40041a7	    0x488990480100	            mov qword [rax + 0x148], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40041ae	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40041b3	    0x488990500100	            mov qword [rax + 0x150], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40041ba	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x40041c1	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x40041c5	    0x480508010000	                          add rax, 0x108	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x40041cb	        0x4a890402	               mov qword [rdx + r8], rax	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x40041cf	      0xb801000000	                              mov eax, 1	      2000	elf.c	FUNCTION_36
0x40041d4	      0xe9b9f2ffff	                           jmp 0x4003492	      2274	elf.c	FUNCTION_36	SWITCH_1	IF_34
0x40041d9	    0x8b97fc020000	           mov edx, dword [rdi + 0x2fc] 	      2173	elf.c	FUNCTION_36	SWITCH_1	CALL_31
0x40041df	          0x8d7501	                      lea esi, [rbp + 1]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041e2	            0x39f2	                            cmp edx, esi	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041e4	            0x7622	                           jbe 0x4004208	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041e6	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041ea	            0xeb0b	                           jmp 0x40041f7	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041ec	         0xf1f4000	                         nop dword [rax]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041f0	          0x83c601	                              add esi, 1	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041f3	            0x39f2	                            cmp edx, esi	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041f5	            0x7611	                           jbe 0x4004208	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x40041f7	            0x89f0	                            mov eax, esi	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x40041f9	        0x488b04c1	            mov rax, qword [rcx + rax*8]	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x40041fd	        0x83780412	               cmp dword [rax + 4], 0x12	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4004201	            0x75ed	                           jne 0x40041f0	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4004203	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4004206	            0x75e8	                           jne 0x40041f0	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4004208	            0x39f2	                            cmp edx, esi	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x400420a	            0x7474	                            je 0x4004280	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x400420c	            0x39ee	                            cmp esi, ebp	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x400420e	     0xf84fcf4ffff	                            je 0x4003710	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x4004214	          0x4889df	                            mov rdi, rbx	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4004217	      0xe800000000	                          call 0x400421c	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x400421c	      0xe971f2ffff	                           jmp 0x4003492	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x4004221	            0x85f6	                           test esi, esi	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4004223	     0xf8432f8ffff	                            je 0x4003a5b	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4004229	            0x89f0	                            mov eax, esi	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400422b	      0x488b742408	                mov rsi, qword [rsp + 8]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4004230	      0x4189442428	             mov dword [r12 + 0x28], eax	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4004235	          0x4989c1	                             mov r9, rax	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4004238	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400423c	        0x448b5804	               mov r11d, dword [rax + 4]	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4004240	      0xe916f8ffff	                           jmp 0x4003a5b	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4004245	      0xba05000000	                              mov edx, 5	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x400424a	      0xbe00000000	                              mov esi, 0	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x400424f	      0xe99af4ffff	                           jmp 0x40036ee	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x4004254	          0x4489ed	                           mov ebp, r13d	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x4004257	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x400425c	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x4004261	      0xe912f2ffff	                           jmp 0x4003478	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x4004266	            0x89e9	                            mov ecx, ebp	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4004268	          0x4c89f2	                            mov rdx, r14	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x400426b	          0x4889df	                            mov rdi, rbx	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x400426e	      0xe800000000	                          call 0x4004273	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4004273	            0x85c0	                           test eax, eax	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4004275	     0xf8415f2ffff	                            je 0x4003490	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x400427b	      0xe93ff7ffff	                           jmp 0x40039bf	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4004280	          0x83fd01	                              cmp ebp, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4004283	            0x7635	                           jbe 0x40042ba	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4004285	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4004289	      0xbe01000000	                              mov esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x400428e	        0x4883c008	                              add rax, 8	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4004292	            0xeb13	                           jmp 0x40042a7	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4004294	         0xf1f4000	                         nop dword [rax]	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4004298	          0x83c601	                              add esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x400429b	        0x4883c008	                              add rax, 8	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x400429f	            0x39f5	                            cmp ebp, esi	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40042a1	     0xf8469f4ffff	                            je 0x4003710	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40042a7	          0x488b10	                    mov rdx, qword [rax]	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x40042aa	        0x837a0412	               cmp dword [rdx + 4], 0x12	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40042ae	            0x75e8	                           jne 0x4004298	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40042b0	          0x3b6a28	            cmp ebp, dword [rdx + 0x28] 	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40042b3	            0x75e3	                           jne 0x4004298	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40042b5	      0xe952ffffff	                           jmp 0x400420c	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40042ba	      0xbe01000000	                              mov esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40042bf	      0xe948ffffff	                           jmp 0x400420c	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40042c4	        0x4c8d7070	                   lea r14, [rax + 0x70]	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40042c8	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x40042cc	      0xe94bf8ffff	                           jmp 0x4003b1c	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
bfd_elf_sym_name	SWITCH,0:CALL,6:IF,3:functions,0:ELSE,1:DO,0:WHILE,0:FOR,0	39
0x4002850	              0x53	                                push rbx	       522	elf.c	FUNCTION_19
0x4002851	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       524	elf.c	FUNCTION_19
0x4002855	          0x4889cb	                            mov rbx, rcx	       522	elf.c	FUNCTION_19
0x4002858	          0x8b7628	            mov esi, dword [rsi + 0x28] 	       525	elf.c	FUNCTION_19
0x400285b	            0x85c0	                           test eax, eax	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400285d	            0x7521	                           jne 0x4002880	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400285f	         0xfb64a18	           movzx ecx, byte [rdx + 0x18] 	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4002863	      0xb800000000	                              mov eax, 0	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4002868	          0x83e10f	                            and ecx, 0xf	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400286b	          0x80f903	                               cmp cl, 3	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400286e	            0x7428	                            je 0x4002898	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4002870	          0x4885db	                           test rbx, rbx	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4002873	            0x7408	                            je 0x400287d	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4002875	          0x803800	                       cmp byte [rax], 0	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4002878	            0x7503	                           jne 0x400287d	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400287a	          0x488b03	                    mov rax, qword [rbx]	       539	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400287d	              0x5b	                                 pop rbx	       542	elf.c	FUNCTION_19
0x400287e	              0xc3	                                     ret	       542	elf.c	FUNCTION_19
0x400287f	              0x90	                                     nop	       542	elf.c	FUNCTION_19
0x4002880	            0x89c1	                            mov ecx, eax	       542	elf.c	FUNCTION_19
0x4002882	            0x89ca	                            mov edx, ecx	       542	elf.c	FUNCTION_19
0x4002884	      0xe8b7f9ffff	call sym.bfd_elf_string_from_elf_section.part.20	       542	elf.c	FUNCTION_19
0x4002889	          0x4885c0	                           test rax, rax	       536	elf.c	FUNCTION_19	IF_2
0x400288c	            0x75e2	                           jne 0x4002870	       536	elf.c	FUNCTION_19	IF_2
0x400288e	      0xb800000000	                              mov eax, 0	       537	elf.c	FUNCTION_19	IF_2
0x4002893	              0x5b	                                 pop rbx	       542	elf.c	FUNCTION_19
0x4002894	              0xc3	                                     ret	       542	elf.c	FUNCTION_19
0x4002895	           0xf1f00	                         nop dword [rax]	       542	elf.c	FUNCTION_19
0x4002898	    0x488bb7f80000	            mov rsi, qword [rdi + 0xf8] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x400289f	          0x8b521c	            mov edx, dword [rdx + 0x1c] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40028a2	    0x3b96fc020000	           cmp edx, dword [rsi + 0x2fc] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40028a8	            0x73c6	                           jae 0x4002870	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x40028aa	        0x488b4e58	            mov rcx, qword [rsi + 0x58] 	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40028ae	          0x8b7650	            mov esi, dword [rsi + 0x50] 	       532	elf.c	FUNCTION_19	IF_1	CALL_4
0x40028b1	        0x488b14d1	            mov rdx, qword [rcx + rdx*8]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40028b5	            0x8b0a	                    mov ecx, dword [rdx]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x40028b7	            0x85c9	                           test ecx, ecx	       330	elf.c	FUNCTION_17	IF_1
0x40028b9	            0x74b5	                            je 0x4002870	       330	elf.c	FUNCTION_17	IF_1
0x40028bb	            0xebc5	                           jmp 0x4002882	       330	elf.c	FUNCTION_17	IF_1
_bfd_elf_canonicalize_reloc	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1	34
0x400c7d0	              0x55	                                push rbp	      8161	elf.c	FUNCTION_92
0x400c7d1	              0x53	                                push rbx	      8161	elf.c	FUNCTION_92
0x400c7d2	          0x4889f5	                            mov rbp, rsi	      8161	elf.c	FUNCTION_92
0x400c7d5	          0x4889d3	                            mov rbx, rdx	      8161	elf.c	FUNCTION_92
0x400c7d8	          0x4889ca	                            mov rdx, rcx	      8161	elf.c	FUNCTION_92
0x400c7db	            0x31c9	                            xor ecx, ecx	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400c7dd	        0x4883ec08	                              sub rsp, 8	      8161	elf.c	FUNCTION_92
0x400c7e1	        0x488b4708	                mov rax, qword [rdi + 8]	      8164	elf.c	FUNCTION_92	CALL_1
0x400c7e5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400c7ec	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400c7f3	          0xff5040	                 call qword [rax + 0x40]	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400c7f6	            0x85c0	                           test eax, eax	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400c7f8	            0x743c	                            je 0x400c836	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400c7fa	    0x8b8588000000	            mov eax, dword [rbp + 0x88] 	      8170	elf.c	FUNCTION_92	FOR_1
0x400c800	        0x488b5578	            mov rdx, qword [rbp + 0x78] 	      8169	elf.c	FUNCTION_92
0x400c804	            0x85c0	                           test eax, eax	      8170	elf.c	FUNCTION_92	FOR_1
0x400c806	            0x7427	                            je 0x400c82f	      8170	elf.c	FUNCTION_92	FOR_1
0x400c808	          0x8d48ff	                      lea ecx, [rax - 1]	      8170	elf.c	FUNCTION_92	FOR_1
0x400c80b	      0x488d4ccb08	              lea rcx, [rbx + rcx*8 + 8]	      8170	elf.c	FUNCTION_92	FOR_1
0x400c810	        0x4883c308	                              add rbx, 8	      8171	elf.c	FUNCTION_92	FOR_1
0x400c814	        0x488953f8	                mov qword [rbx - 8], rdx	      8171	elf.c	FUNCTION_92	FOR_1
0x400c818	        0x4883c220	                           add rdx, 0x20	      8171	elf.c	FUNCTION_92	FOR_1
0x400c81c	          0x4839cb	                            cmp rbx, rcx	      8170	elf.c	FUNCTION_92	FOR_1
0x400c81f	            0x75ef	                           jne 0x400c810	      8170	elf.c	FUNCTION_92	FOR_1
0x400c821	    0x48c701000000	                      mov qword [rcx], 0	      8173	elf.c	FUNCTION_92
0x400c828	        0x4883c408	                              add rsp, 8	      8176	elf.c	FUNCTION_92
0x400c82c	              0x5b	                                 pop rbx	      8176	elf.c	FUNCTION_92
0x400c82d	              0x5d	                                 pop rbp	      8176	elf.c	FUNCTION_92
0x400c82e	              0xc3	                                     ret	      8176	elf.c	FUNCTION_92
0x400c82f	          0x4889d9	                            mov rcx, rbx	      8170	elf.c	FUNCTION_92	FOR_1
0x400c832	            0x31c0	                            xor eax, eax	      8170	elf.c	FUNCTION_92	FOR_1
0x400c834	            0xebeb	                           jmp 0x400c821	      8170	elf.c	FUNCTION_92	FOR_1
0x400c836	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8167	elf.c	FUNCTION_92	IF_1
0x400c83d	            0xebe9	                           jmp 0x400c828	      8167	elf.c	FUNCTION_92	IF_1
bfd_elf_bfd_from_remote_memory	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	4
0x40110d0	        0x488b4708	                mov rax, qword [rdi + 8]	     11377	elf.c	FUNCTION_199	CALL_1
0x40110d4	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11377	elf.c	FUNCTION_199	CALL_1
0x40110db	    0x488b80900200	           mov rax, qword [rax + 0x290] 	     11377	elf.c	FUNCTION_199	CALL_1
0x40110e2	            0xffe0	                                 jmp rax	     11377	elf.c	FUNCTION_199	CALL_1
_bfd_elf_is_function_type	SWITCH,0:CALL,0:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	5
0x40114e0	          0x83e7f7	                     and edi, 0xfffffff7	     11533	elf.c	FUNCTION_202
0x40114e3	            0x31c0	                            xor eax, eax	     11533	elf.c	FUNCTION_202
0x40114e5	          0x83ff02	                              cmp edi, 2	     11533	elf.c	FUNCTION_202
0x40114e8	           0xf94c0	                                 sete al	     11533	elf.c	FUNCTION_202
0x40114eb	              0xc3	                                     ret	     11535	elf.c	FUNCTION_202
_bfd_elf_validate_reloc	SWITCH,2:CALL,5:IF,5:functions,0:ELSE,3:DO,0:WHILE,0:FOR,0	103
0x400e4b0	          0x488b06	                    mov rax, qword [rsi]	      8897	elf.c	FUNCTION_109	IF_1
0x400e4b3	        0x488b4f08	                mov rcx, qword [rdi + 8]	      8897	elf.c	FUNCTION_109	IF_1
0x400e4b7	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x400e4ba	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x400e4bd	        0x48394808	                cmp qword [rax + 8], rcx	      8897	elf.c	FUNCTION_109	IF_1
0x400e4c1	     0xf8479010000	                            je 0x400e640	      8897	elf.c	FUNCTION_109	IF_1
0x400e4c7	              0x55	                                push rbp	      8894	elf.c	FUNCTION_109
0x400e4c8	              0x53	                                push rbx	      8894	elf.c	FUNCTION_109
0x400e4c9	          0x4889fd	                            mov rbp, rdi	      8894	elf.c	FUNCTION_109
0x400e4cc	          0x4889f3	                            mov rbx, rsi	      8894	elf.c	FUNCTION_109
0x400e4cf	        0x4883ec08	                              sub rsp, 8	      8894	elf.c	FUNCTION_109
0x400e4d3	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x400e4d7	          0x8b5010	            mov edx, dword [rax + 0x10] 	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x400e4da	          0x8b480c	              mov ecx, dword [rax + 0xc]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e4dd	            0x85d2	                           test edx, edx	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x400e4df	          0x8d51f8	                      lea edx, [rcx - 8]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e4e2	            0x740c	                            je 0x400e4f0	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x400e4e4	          0x83fa38	                           cmp edx, 0x38	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e4e7	            0x7730	                            ja 0x400e519	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e4e9	    0xff24d5000000	                       jmp qword [rdx*8]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e4f0	          0x83fa38	                           cmp edx, 0x38	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e4f3	            0x7724	                            ja 0x400e519	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e4f5	    0xff24d5000000	                       jmp qword [rdx*8]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e4fc	         0xf1f4000	                         nop dword [rax]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e500	      0xbe06000000	                              mov esi, 6	      8949	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e505	           0xf1f00	                         nop dword [rax]	      8949	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e508	          0x4889ef	                            mov rdi, rbp	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x400e50b	      0xe800000000	                          call 0x400e510	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x400e510	          0x4885c0	                           test rax, rax	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x400e513	            0x756f	                           jne 0x400e584	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x400e515	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x400e519	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      8980	elf.c	FUNCTION_109	CALL_4
0x400e51d	      0xba05000000	                              mov edx, 5	      8980	elf.c	FUNCTION_109	CALL_4
0x400e522	      0xbe00000000	                              mov esi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x400e527	      0xbf00000000	                              mov edi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x400e52c	      0xe800000000	                          call 0x400e531	      8980	elf.c	FUNCTION_109	CALL_4
0x400e531	          0x4889da	                            mov rdx, rbx	      8980	elf.c	FUNCTION_109	CALL_4
0x400e534	          0x4889ee	                            mov rsi, rbp	      8980	elf.c	FUNCTION_109	CALL_4
0x400e537	          0x4889c7	                            mov rdi, rax	      8980	elf.c	FUNCTION_109	CALL_4
0x400e53a	            0x31c0	                            xor eax, eax	      8980	elf.c	FUNCTION_109	CALL_4
0x400e53c	      0xe800000000	                          call 0x400e541	      8980	elf.c	FUNCTION_109	CALL_4
0x400e541	      0xbf11000000	                           mov edi, 0x11	      8982	elf.c	FUNCTION_109	CALL_5
0x400e546	      0xe800000000	                          call 0x400e54b	      8982	elf.c	FUNCTION_109	CALL_5
0x400e54b	        0x4883c408	                              add rsp, 8	      8984	elf.c	FUNCTION_109
0x400e54f	            0x31c0	                            xor eax, eax	      8983	elf.c	FUNCTION_109
0x400e551	              0x5b	                                 pop rbx	      8984	elf.c	FUNCTION_109
0x400e552	              0x5d	                                 pop rbp	      8984	elf.c	FUNCTION_109
0x400e553	              0xc3	                                     ret	      8984	elf.c	FUNCTION_109
0x400e554	         0xf1f4000	                         nop dword [rax]	      8984	elf.c	FUNCTION_109
0x400e558	      0xbe0c000000	                            mov esi, 0xc	      8913	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e55d	           0xf1f00	                         nop dword [rax]	      8913	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e560	          0x4889ef	                            mov rdi, rbp	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x400e563	      0xe800000000	                          call 0x400e568	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x400e568	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400e56c	          0x8b5048	            mov edx, dword [rax + 0x48] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400e56f	          0x395148	            cmp dword [rcx + 0x48], edx 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400e572	            0x7410	                            je 0x400e584	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400e574	            0x85d2	                           test edx, edx	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400e576	        0x488b5308	                mov rdx, qword [rbx + 8]	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400e57a	     0xf84b0000000	                            je 0x400e630	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400e580	        0x48015310	            add qword [rbx + 0x10], rdx 	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400e584	        0x48894318	             mov qword [rbx + 0x18], rax	      8971	elf.c	FUNCTION_109	IF_1	IF_5
0x400e588	        0x4883c408	                              add rsp, 8	      8984	elf.c	FUNCTION_109
0x400e58c	      0xb801000000	                              mov eax, 1	      8976	elf.c	FUNCTION_109
0x400e591	              0x5b	                                 pop rbx	      8984	elf.c	FUNCTION_109
0x400e592	              0x5d	                                 pop rbp	      8984	elf.c	FUNCTION_109
0x400e593	              0xc3	                                     ret	      8984	elf.c	FUNCTION_109
0x400e594	         0xf1f4000	                         nop dword [rax]	      8984	elf.c	FUNCTION_109
0x400e598	      0xbe0d000000	                            mov esi, 0xd	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e59d	            0xebc1	                           jmp 0x400e560	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e59f	              0x90	                                     nop	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e5a0	      0xbe01000000	                              mov esi, 1	      8961	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5a5	      0xe95effffff	                           jmp 0x400e508	      8962	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5aa	    0x660f1f440000	                    nop word [rax + rax]	      8962	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5b0	      0xbe02000000	                              mov esi, 2	      8958	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5b5	      0xe94effffff	                           jmp 0x400e508	      8959	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5ba	    0x660f1f440000	                    nop word [rax + rax]	      8959	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5c0	      0xbe03000000	                              mov esi, 3	      8955	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5c5	      0xe93effffff	                           jmp 0x400e508	      8956	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5ca	    0x660f1f440000	                    nop word [rax + rax]	      8956	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5d0	      0xbe05000000	                              mov esi, 5	      8952	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5d5	      0xe92effffff	                           jmp 0x400e508	      8953	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5da	    0x660f1f440000	                    nop word [rax + rax]	      8953	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5e0	      0xbe07000000	                              mov esi, 7	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5e5	      0xe91effffff	                           jmp 0x400e508	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5ea	    0x660f1f440000	                    nop word [rax + rax]	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400e5f0	      0xbe08000000	                              mov esi, 8	      8925	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e5f5	      0xe966ffffff	                           jmp 0x400e560	      8926	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e5fa	    0x660f1f440000	                    nop word [rax + rax]	      8926	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e600	      0xbe09000000	                              mov esi, 9	      8922	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e605	      0xe956ffffff	                           jmp 0x400e560	      8923	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e60a	    0x660f1f440000	                    nop word [rax + rax]	      8923	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e610	      0xbe0a000000	                            mov esi, 0xa	      8919	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e615	      0xe946ffffff	                           jmp 0x400e560	      8920	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e61a	    0x660f1f440000	                    nop word [rax + rax]	      8920	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e620	      0xbe0b000000	                            mov esi, 0xb	      8916	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e625	      0xe936ffffff	                           jmp 0x400e560	      8917	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e62a	    0x660f1f440000	                    nop word [rax + rax]	      8917	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400e630	        0x48295310	             sub qword [rbx + 0x10], rdx	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x400e634	      0xe94bffffff	                           jmp 0x400e584	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x400e639	     0xf1f80000000	                         nop dword [rax]	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x400e640	      0xb801000000	                              mov eax, 1	      8976	elf.c	FUNCTION_109
0x400e645	              0xc3	                                     ret	      8976	elf.c	FUNCTION_109
make_mapping	SWITCH,0:CALL,1:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1	49
0x40001d0	            0x4157	                                push r15	      4470	elf.c	FUNCTION_62
0x40001d2	            0x4156	                                push r14	      4470	elf.c	FUNCTION_62
0x40001d4	          0x4989f6	                            mov r14, rsi	      4470	elf.c	FUNCTION_62
0x40001d7	            0x4155	                                push r13	      4470	elf.c	FUNCTION_62
0x40001d9	          0x4189cd	                           mov r13d, ecx	      4477	elf.c	FUNCTION_62
0x40001dc	            0x4154	                                push r12	      4470	elf.c	FUNCTION_62
0x40001de	          0x4129d5	                           sub r13d, edx	      4477	elf.c	FUNCTION_62
0x40001e1	              0x55	                                push rbp	      4470	elf.c	FUNCTION_62
0x40001e2	              0x53	                                push rbx	      4470	elf.c	FUNCTION_62
0x40001e3	        0x418d5dff	                      lea ebx, [r13 - 1]	      4477	elf.c	FUNCTION_62
0x40001e7	          0x4189d4	                           mov r12d, edx	      4470	elf.c	FUNCTION_62
0x40001ea	          0x4189cf	                           mov r15d, ecx	      4470	elf.c	FUNCTION_62
0x40001ed	        0x4883ec08	                              sub rsp, 8	      4470	elf.c	FUNCTION_62
0x40001f1	          0x4489c5	                            mov ebp, r8d	      4470	elf.c	FUNCTION_62
0x40001f4	    0x488d34dd5000	                 lea rsi, [rbx*8 + 0x50]	      4478	elf.c	FUNCTION_62	CALL_1
0x40001fc	      0xe800000000	                          call 0x4000201	      4478	elf.c	FUNCTION_62	CALL_1
0x4000201	          0x4885c0	                           test rax, rax	      4479	elf.c	FUNCTION_62	IF_1
0x4000204	            0x745e	                            je 0x4000264	      4479	elf.c	FUNCTION_62	IF_1
0x4000206	          0x4489e2	                           mov edx, r12d	      4483	elf.c	FUNCTION_62	FOR_1
0x4000209	            0x31f6	                            xor esi, esi	      4483	elf.c	FUNCTION_62	FOR_1
0x400020b	          0x4539e7	                          cmp r15d, r12d	      4483	elf.c	FUNCTION_62	FOR_1
0x400020e	    0x48c700000000	                      mov qword [rax], 0	      4481	elf.c	FUNCTION_62
0x4000215	    0x48c740080100	                  mov qword [rax + 8], 1	      4482	elf.c	FUNCTION_62
0x400021d	        0x4d8d04d6	                   lea r8, [r14 + rdx*8]	      4483	elf.c	FUNCTION_62	FOR_1
0x4000221	        0x4c8d4b01	                       lea r9, [rbx + 1]	      4483	elf.c	FUNCTION_62	FOR_1
0x4000225	            0x761d	                           jbe 0x4000244	      4483	elf.c	FUNCTION_62	FOR_1
0x4000227	    0x660f1f840000	                    nop word [rax + rax]	      4483	elf.c	FUNCTION_62	FOR_1
0x4000230	        0x498b3cf0	             mov rdi, qword [r8 + rsi*8]	      4484	elf.c	FUNCTION_62	FOR_1
0x4000234	            0x89f1	                            mov ecx, esi	      4484	elf.c	FUNCTION_62	FOR_1
0x4000236	        0x4883c601	                              add rsi, 1	      4484	elf.c	FUNCTION_62	FOR_1
0x400023a	          0x4c39ce	                             cmp rsi, r9	      4483	elf.c	FUNCTION_62	FOR_1
0x400023d	      0x48897cc848	     mov qword [rax + rcx*8 + 0x48], rdi	      4484	elf.c	FUNCTION_62	FOR_1
0x4000242	            0x75ec	                           jne 0x4000230	      4483	elf.c	FUNCTION_62	FOR_1
0x4000244	          0x4585e4	                         test r12d, r12d	      4487	elf.c	FUNCTION_62	IF_2
0x4000247	        0x44896844	            mov dword [rax + 0x44], r13d	      4485	elf.c	FUNCTION_62
0x400024b	            0x7508	                           jne 0x4000255	      4487	elf.c	FUNCTION_62	IF_2
0x400024d	            0x85ed	                           test ebp, ebp	      4487	elf.c	FUNCTION_62	IF_2
0x400024f	            0x7404	                            je 0x4000255	      4487	elf.c	FUNCTION_62	IF_2
0x4000251	        0x80484030	              or byte [rax + 0x40], 0x30	      4491	elf.c	FUNCTION_62	IF_2
0x4000255	        0x4883c408	                              add rsp, 8	      4495	elf.c	FUNCTION_62
0x4000259	              0x5b	                                 pop rbx	      4495	elf.c	FUNCTION_62
0x400025a	              0x5d	                                 pop rbp	      4495	elf.c	FUNCTION_62
0x400025b	            0x415c	                                 pop r12	      4495	elf.c	FUNCTION_62
0x400025d	            0x415d	                                 pop r13	      4495	elf.c	FUNCTION_62
0x400025f	            0x415e	                                 pop r14	      4495	elf.c	FUNCTION_62
0x4000261	            0x415f	                                 pop r15	      4495	elf.c	FUNCTION_62
0x4000263	              0xc3	                                     ret	      4495	elf.c	FUNCTION_62
0x4000264	            0x31c0	                            xor eax, eax	      4480	elf.c	FUNCTION_62	IF_1
0x4000266	            0xebed	                           jmp 0x4000255	      4480	elf.c	FUNCTION_62	IF_1
_bfd_elf_new_section_hook	SWITCH,0:CALL,5:IF,4:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	61
0x4005430	              0x55	                                push rbp	      2834	elf.c	FUNCTION_41
0x4005431	              0x53	                                push rbx	      2834	elf.c	FUNCTION_41
0x4005432	          0x4889fd	                            mov rbp, rdi	      2834	elf.c	FUNCTION_41
0x4005435	          0x4889f3	                            mov rbx, rsi	      2834	elf.c	FUNCTION_41
0x4005438	        0x4883ec08	                              sub rsp, 8	      2834	elf.c	FUNCTION_41
0x400543c	    0x4883bee00000	               cmp qword [rsi + 0xe0], 0	      2840	elf.c	FUNCTION_41	IF_1
0x4005444	     0xf8496000000	                            je 0x40054e0	      2840	elf.c	FUNCTION_41	IF_1
0x400544a	        0x488b4508	                mov rax, qword [rbp + 8]	      2850	elf.c	FUNCTION_41	CALL_2
0x400544e	         0xfb65325	           movzx edx, byte [rbx + 0x25] 	      2851	elf.c	FUNCTION_41
0x4005452	    0x488b88680300	           mov rcx, qword [rax + 0x368] 	      2850	elf.c	FUNCTION_41	CALL_2
0x4005459	          0x83e2fb	                     and edx, 0xfffffffb	      2851	elf.c	FUNCTION_41
0x400545c	     0xfb681880300	          movzx eax, byte [rcx + 0x388] 	      2851	elf.c	FUNCTION_41
0x4005463	          0xc0e802	                               shr al, 2	      2851	elf.c	FUNCTION_41
0x4005466	          0x83e004	                              and eax, 4	      2851	elf.c	FUNCTION_41
0x4005469	             0x9d0	                             or eax, edx	      2851	elf.c	FUNCTION_41
0x400546b	          0x884325	               mov byte [rbx + 0x25], al	      2851	elf.c	FUNCTION_41
0x400546e	         0xfb64544	           movzx eax, byte [rbp + 0x44] 	      2862	elf.c	FUNCTION_41	IF_3
0x4005472	          0x83e018	                           and eax, 0x18	      2862	elf.c	FUNCTION_41	IF_3
0x4005475	            0x3c08	                               cmp al, 8	      2862	elf.c	FUNCTION_41	IF_3
0x4005477	            0x745f	                            je 0x40054d8	      2862	elf.c	FUNCTION_41	IF_3
0x4005479	          0x4889de	                            mov rsi, rbx	      2865	elf.c	FUNCTION_41	IF_3
0x400547c	          0x4889ef	                            mov rdi, rbp	      2865	elf.c	FUNCTION_41	IF_3
0x400547f	    0xff91a0000000	                 call qword [rcx + 0xa0]	      2865	elf.c	FUNCTION_41	IF_3
0x4005485	          0x4885c0	                           test rax, rax	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x4005488	            0x741c	                            je 0x40054a6	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x400548a	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x400548d	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4005490	            0x85d2	                           test edx, edx	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4005492	            0x752c	                           jne 0x40054c0	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4005494	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x400549b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x400549f	          0x894a04	                mov dword [rdx + 4], ecx	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x40054a2	        0x48894208	                mov qword [rdx + 8], rax	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x40054a6	        0x4883c408	                              add rsp, 8	      2878	elf.c	FUNCTION_41
0x40054aa	          0x4889de	                            mov rsi, rbx	      2877	elf.c	FUNCTION_41	CALL_5
0x40054ad	          0x4889ef	                            mov rdi, rbp	      2877	elf.c	FUNCTION_41	CALL_5
0x40054b0	              0x5b	                                 pop rbx	      2878	elf.c	FUNCTION_41
0x40054b1	              0x5d	                                 pop rbp	      2878	elf.c	FUNCTION_41
0x40054b2	      0xe900000000	                           jmp 0x40054b7	      2877	elf.c	FUNCTION_41	CALL_5
0x40054b7	    0x660f1f840000	                    nop word [rax + rax]	      2877	elf.c	FUNCTION_41	CALL_5
0x40054c0	    0x81e200001000	                       and edx, 0x100000	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x40054c6	            0x75cc	                           jne 0x4005494	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x40054c8	          0x8d51f2	                    lea edx, [rcx - 0xe]	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x40054cb	          0x83fa01	                              cmp edx, 1	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x40054ce	            0x77d6	                            ja 0x40054a6	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x40054d0	            0xebc2	                           jmp 0x4005494	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x40054d2	    0x660f1f440000	                    nop word [rax + rax]	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x40054d8	        0xf6432210	           test byte [rbx + 0x22], 0x10 	      2863	elf.c	FUNCTION_41	IF_3
0x40054dc	            0x74c8	                            je 0x40054a6	      2863	elf.c	FUNCTION_41	IF_3
0x40054de	            0xeb99	                           jmp 0x4005479	      2863	elf.c	FUNCTION_41	IF_3
0x40054e0	      0xbee0000000	                           mov esi, 0xe0	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x40054e5	      0xe800000000	                          call 0x40054ea	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x40054ea	          0x4885c0	                           test rax, rax	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x40054ed	            0x740c	                            je 0x40054fb	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x40054ef	    0x488983e00000	             mov qword [rbx + 0xe0], rax	      2846	elf.c	FUNCTION_41	IF_1
0x40054f6	      0xe94fffffff	                           jmp 0x400544a	      2846	elf.c	FUNCTION_41	IF_1
0x40054fb	        0x4883c408	                              add rsp, 8	      2878	elf.c	FUNCTION_41
0x40054ff	            0x31c0	                            xor eax, eax	      2878	elf.c	FUNCTION_41
0x4005501	              0x5b	                                 pop rbx	      2878	elf.c	FUNCTION_41
0x4005502	              0x5d	                                 pop rbp	      2878	elf.c	FUNCTION_41
0x4005503	              0xc3	                                     ret	      2878	elf.c	FUNCTION_41
_bfd_elf_symbol_from_bfd_symbol	SWITCH,0:CALL,8:IF,4:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	56
0x400a670	              0x55	                                push rbp	      6490	elf.c	FUNCTION_79
0x400a671	              0x53	                                push rbx	      6490	elf.c	FUNCTION_79
0x400a672	        0x4883ec08	                              sub rsp, 8	      6490	elf.c	FUNCTION_79
0x400a676	          0x488b16	                    mov rdx, qword [rsi]	      6491	elf.c	FUNCTION_79
0x400a679	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      6500	elf.c	FUNCTION_79	IF_1
0x400a67d	          0x4885c0	                           test rax, rax	      6500	elf.c	FUNCTION_79	IF_1
0x400a680	     0xf85a2000000	                           jne 0x400a728	      6500	elf.c	FUNCTION_79	IF_1
0x400a686	        0xf6421901	               test byte [rdx + 0x19], 1	      6501	elf.c	FUNCTION_79	IF_1
0x400a68a	            0x7424	                            je 0x400a6b0	      6501	elf.c	FUNCTION_79	IF_1
0x400a68c	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      6502	elf.c	FUNCTION_79	IF_1
0x400a690	          0x4885c0	                           test rax, rax	      6502	elf.c	FUNCTION_79	IF_1
0x400a693	            0x741b	                            je 0x400a6b0	      6502	elf.c	FUNCTION_79	IF_1
0x400a695	    0x4839b8f00000	            cmp qword [rax + 0xf0], rdi 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400a69c	            0x745a	                            je 0x400a6f8	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400a69e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400a6a2	          0x4885c0	                           test rax, rax	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400a6a5	            0x7409	                            je 0x400a6b0	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x400a6a7	    0x483bb8f00000	            cmp rdi, qword [rax + 0xf0] 	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x400a6ae	            0x7448	                            je 0x400a6f8	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x400a6b0	        0x488b6a08	                mov rbp, qword [rdx + 8]	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400a6b4	          0x4889fb	                            mov rbx, rdi	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400a6b7	      0xba05000000	                              mov edx, 5	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400a6bc	      0xbe00000000	                              mov esi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400a6c1	      0xbf00000000	                              mov edi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400a6c6	      0xe800000000	                          call 0x400a6cb	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x400a6cb	          0x4889ea	                            mov rdx, rbp	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400a6ce	          0x4889de	                            mov rsi, rbx	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400a6d1	          0x4889c7	                            mov rdi, rax	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400a6d4	            0x31c0	                            xor eax, eax	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400a6d6	      0xe800000000	                          call 0x400a6db	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x400a6db	      0xbf07000000	                              mov edi, 7	      6526	elf.c	FUNCTION_79	IF_4	CALL_7
0x400a6e0	      0xe800000000	                          call 0x400a6e5	      6526	elf.c	FUNCTION_79	IF_4	CALL_7
0x400a6e5	        0x4883c408	                              add rsp, 8	      6540	elf.c	FUNCTION_79
0x400a6e9	      0xb8ffffffff	                     mov eax, 0xffffffff	      6527	elf.c	FUNCTION_79	IF_4
0x400a6ee	              0x5b	                                 pop rbx	      6540	elf.c	FUNCTION_79
0x400a6ef	              0x5d	                                 pop rbp	      6540	elf.c	FUNCTION_79
0x400a6f0	              0xc3	                                     ret	      6540	elf.c	FUNCTION_79
0x400a6f1	     0xf1f80000000	                         nop dword [rax]	      6540	elf.c	FUNCTION_79
0x400a6f8	    0x488b8ff80000	            mov rcx, qword [rdi + 0xf8] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400a6ff	        0x4863400c	          movsxd rax, dword [rax + 0xc] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400a703	    0x488b89980c00	           mov rcx, qword [rcx + 0xc98] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400a70a	          0x3b4148	            cmp eax, dword [rcx + 0x48] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400a70d	            0x7da1	                           jge 0x400a6b0	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x400a70f	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400a713	        0x488b04c1	            mov rax, qword [rcx + rax*8]	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400a717	          0x4885c0	                           test rax, rax	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400a71a	            0x7494	                            je 0x400a6b0	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x400a71c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x400a720	        0x48894228	             mov qword [rdx + 0x28], rax	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x400a724	         0xf1f4000	                         nop dword [rax]	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x400a728	            0x85c0	                           test eax, eax	      6518	elf.c	FUNCTION_79	IF_4
0x400a72a	            0x7484	                            je 0x400a6b0	      6518	elf.c	FUNCTION_79	IF_4
0x400a72c	        0x4883c408	                              add rsp, 8	      6540	elf.c	FUNCTION_79
0x400a730	              0x5b	                                 pop rbx	      6540	elf.c	FUNCTION_79
0x400a731	              0x5d	                                 pop rbp	      6540	elf.c	FUNCTION_79
0x400a732	              0xc3	                                     ret	      6540	elf.c	FUNCTION_79
_bfd_elf_sizeof_headers	SWITCH,0:CALL,6:IF,3:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1	41
0x400e2f0	              0x55	                                push rbp	      8817	elf.c	FUNCTION_106
0x400e2f1	              0x53	                                push rbx	      8817	elf.c	FUNCTION_106
0x400e2f2	        0x4883ec08	                              sub rsp, 8	      8817	elf.c	FUNCTION_106
0x400e2f6	        0x488b4708	                mov rax, qword [rdi + 8]	      8818	elf.c	FUNCTION_106	CALL_1
0x400e2fa	           0xfb616	                   movzx edx, byte [rsi]	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400e2fd	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8819	elf.c	FUNCTION_106
0x400e304	          0x83e203	                              and edx, 3	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400e307	          0x80fa02	                               cmp dl, 2	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400e30a	    0x4c8b80000300	            mov r8, qword [rax + 0x300] 	      8819	elf.c	FUNCTION_106
0x400e311	        0x410fb618	                    movzx ebx, byte [r8]	      8819	elf.c	FUNCTION_106
0x400e315	           0xfb6c3	                           movzx eax, bl	      8819	elf.c	FUNCTION_106
0x400e318	            0x741e	                            je 0x400e338	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400e31a	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x400e321	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x400e328	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x400e32c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x400e330	            0x740e	                            je 0x400e340	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x400e332	        0x48894138	             mov qword [rcx + 0x38], rax	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x400e336	             0x1d8	                            add eax, ebx	      8838	elf.c	FUNCTION_106	IF_1
0x400e338	        0x4883c408	                              add rsp, 8	      8842	elf.c	FUNCTION_106
0x400e33c	              0x5b	                                 pop rbx	      8842	elf.c	FUNCTION_106
0x400e33d	              0x5d	                                 pop rbp	      8842	elf.c	FUNCTION_106
0x400e33e	              0xc3	                                     ret	      8842	elf.c	FUNCTION_106
0x400e33f	              0x90	                                     nop	      8842	elf.c	FUNCTION_106
0x400e340	          0x488b11	                    mov rdx, qword [rcx]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e343	          0x4885d2	                           test rdx, rdx	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e346	            0x7418	                            je 0x400e360	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e348	      0x450fb64001	                movzx r8d, byte [r8 + 1]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e34d	            0x31c0	                            xor eax, eax	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e34f	              0x90	                                     nop	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e350	          0x488b12	                    mov rdx, qword [rdx]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e353	          0x4c01c0	                             add rax, r8	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x400e356	          0x4885d2	                           test rdx, rdx	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e359	            0x75f5	                           jne 0x400e350	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400e35b	          0x4885c0	                           test rax, rax	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x400e35e	            0x75d2	                           jne 0x400e332	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x400e360	          0x4889fd	                            mov rbp, rdi	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x400e363	      0xe82820ffff	        call sym.get_program_header_size	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x400e368	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x400e36f	    0x488b8a980c00	           mov rcx, qword [rdx + 0xc98] 	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x400e376	            0xebba	                           jmp 0x400e332	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
_bfd_elf_swap_verneed_out	SWITCH,0:CALL,5:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	30
0x4001ed0	            0x4154	                                push r12	       138	elf.c	FUNCTION_6
0x4001ed2	              0x55	                                push rbp	       138	elf.c	FUNCTION_6
0x4001ed3	          0x4889fd	                            mov rbp, rdi	       138	elf.c	FUNCTION_6
0x4001ed6	              0x53	                                push rbx	       138	elf.c	FUNCTION_6
0x4001ed7	        0x488b4508	                mov rax, qword [rbp + 8]	       139	elf.c	FUNCTION_6	CALL_1
0x4001edb	          0x4889d3	                            mov rbx, rdx	       138	elf.c	FUNCTION_6
0x4001ede	           0xfb73e	                   movzx edi, word [rsi]	       139	elf.c	FUNCTION_6	CALL_1
0x4001ee1	          0x4989f4	                            mov r12, rsi	       138	elf.c	FUNCTION_6
0x4001ee4	          0x4889d6	                            mov rsi, rdx	       139	elf.c	FUNCTION_6	CALL_1
0x4001ee7	    0xff90a8000000	                 call qword [rax + 0xa8]	       139	elf.c	FUNCTION_6	CALL_1
0x4001eed	        0x488b4508	                mov rax, qword [rbp + 8]	       140	elf.c	FUNCTION_6	CALL_2
0x4001ef1	    0x410fb77c2402	               movzx edi, word [r12 + 2]	       140	elf.c	FUNCTION_6	CALL_2
0x4001ef7	        0x488d7302	                      lea rsi, [rbx + 2]	       140	elf.c	FUNCTION_6	CALL_2
0x4001efb	    0xff90a8000000	                 call qword [rax + 0xa8]	       140	elf.c	FUNCTION_6	CALL_2
0x4001f01	        0x488b4508	                mov rax, qword [rbp + 8]	       141	elf.c	FUNCTION_6	CALL_3
0x4001f05	        0x488d7304	                      lea rsi, [rbx + 4]	       141	elf.c	FUNCTION_6	CALL_3
0x4001f09	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       141	elf.c	FUNCTION_6	CALL_3
0x4001f0e	    0xff9090000000	                 call qword [rax + 0x90]	       141	elf.c	FUNCTION_6	CALL_3
0x4001f14	        0x488b4508	                mov rax, qword [rbp + 8]	       142	elf.c	FUNCTION_6	CALL_4
0x4001f18	        0x488d7308	                      lea rsi, [rbx + 8]	       142	elf.c	FUNCTION_6	CALL_4
0x4001f1c	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       142	elf.c	FUNCTION_6	CALL_4
0x4001f21	    0xff9090000000	                 call qword [rax + 0x90]	       142	elf.c	FUNCTION_6	CALL_4
0x4001f27	        0x488b4508	                mov rax, qword [rbp + 8]	       143	elf.c	FUNCTION_6	CALL_5
0x4001f2b	        0x488d730c	                    lea rsi, [rbx + 0xc]	       143	elf.c	FUNCTION_6	CALL_5
0x4001f2f	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       143	elf.c	FUNCTION_6	CALL_5
0x4001f34	              0x5b	                                 pop rbx	       144	elf.c	FUNCTION_6
0x4001f35	              0x5d	                                 pop rbp	       144	elf.c	FUNCTION_6
0x4001f36	            0x415c	                                 pop r12	       144	elf.c	FUNCTION_6
0x4001f38	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       143	elf.c	FUNCTION_6	CALL_5
0x4001f3f	            0xffe0	                                 jmp rax	       143	elf.c	FUNCTION_6	CALL_5
_bfd_elf_filter_global_symbols	SWITCH,0:CALL,3:IF,4:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1	64
0x4005b60	            0x4157	                                push r15	      4003	elf.c	FUNCTION_54
0x4005b62	            0x4156	                                push r14	      4003	elf.c	FUNCTION_54
0x4005b64	            0x4155	                                push r13	      4003	elf.c	FUNCTION_54
0x4005b66	            0x4154	                                push r12	      4003	elf.c	FUNCTION_54
0x4005b68	              0x55	                                push rbp	      4003	elf.c	FUNCTION_54
0x4005b69	              0x53	                                push rbx	      4003	elf.c	FUNCTION_54
0x4005b6a	          0x4889d5	                            mov rbp, rdx	      4003	elf.c	FUNCTION_54
0x4005b6d	        0x4883ec18	                           sub rsp, 0x18	      4003	elf.c	FUNCTION_54
0x4005b71	          0x4885c9	                           test rcx, rcx	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b74	        0x48893424	                    mov qword [rsp], rsi	      4003	elf.c	FUNCTION_54
0x4005b78	     0xf8eaf000000	                           jle 0x4005c2d	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b7e	          0x4989fd	                            mov r13, rdi	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b81	          0x4989cc	                            mov r12, rcx	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b84	    0x48c744240800	                  mov qword [rsp + 8], 0	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b8d	          0x4531f6	                          xor r14d, r14d	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b90	            0xeb0f	                           jmp 0x4005ba1	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b92	    0x660f1f440000	                    nop word [rax + rax]	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b98	        0x4983c601	                              add r14, 1	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b9c	          0x4d39f4	                            cmp r12, r14	      4006	elf.c	FUNCTION_54	FOR_1
0x4005b9f	            0x7467	                            je 0x4005c08	      4006	elf.c	FUNCTION_54	FOR_1
0x4005ba1	      0x4e8b7cf500	            mov r15, qword [rbp + r14*8]	      4008	elf.c	FUNCTION_54	FOR_1
0x4005ba6	          0x4c89ef	                            mov rdi, r13	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_2
0x4005ba9	          0x4c89fe	                            mov rsi, r15	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_2
0x4005bac	        0x498b5f08	                mov rbx, qword [r15 + 8]	      4009	elf.c	FUNCTION_54	FOR_1	CALL_1
0x4005bb0	      0xe83baaffff	                  call sym.sym_is_global	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_2
0x4005bb5	            0x85c0	                           test eax, eax	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_2
0x4005bb7	            0x74df	                            je 0x4005b98	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_2
0x4005bb9	        0x488b0424	                    mov rax, qword [rsp]	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4005bbd	          0x4531c0	                            xor r8d, r8d	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4005bc0	            0x31c9	                            xor ecx, ecx	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4005bc2	            0x31d2	                            xor edx, edx	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4005bc4	          0x4889de	                            mov rsi, rbx	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4005bc7	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4005bcb	      0xe800000000	                          call 0x4005bd0	      4015	elf.c	FUNCTION_54	FOR_1	CALL_3
0x4005bd0	          0x4885c0	                           test rax, rax	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x4005bd3	            0x74c3	                            je 0x4005b98	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x4005bd5	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4005bd9	          0x8d51fd	                      lea edx, [rcx - 3]	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4005bdc	          0x80fa01	                               cmp dl, 1	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4005bdf	            0x77b7	                            ja 0x4005b98	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4005be1	        0xf640190c	            test byte [rax + 0x19], 0xc 	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4005be5	            0x75b1	                           jne 0x4005b98	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x4005be7	      0x488b442408	                mov rax, qword [rsp + 8]	      4023	elf.c	FUNCTION_54	FOR_1
0x4005bec	        0x4983c601	                              add r14, 1	      4006	elf.c	FUNCTION_54	FOR_1
0x4005bf0	      0x4c897cc500	            mov qword [rbp + rax*8], r15	      4023	elf.c	FUNCTION_54	FOR_1
0x4005bf5	        0x4883c001	                              add rax, 1	      4023	elf.c	FUNCTION_54	FOR_1
0x4005bf9	          0x4d39f4	                            cmp r12, r14	      4006	elf.c	FUNCTION_54	FOR_1
0x4005bfc	      0x4889442408	                mov qword [rsp + 8], rax	      4023	elf.c	FUNCTION_54	FOR_1
0x4005c01	            0x759e	                           jne 0x4005ba1	      4006	elf.c	FUNCTION_54	FOR_1
0x4005c03	       0xf1f440000	                   nop dword [rax + rax]	      4006	elf.c	FUNCTION_54	FOR_1
0x4005c08	      0x488b442408	                mov rax, qword [rsp + 8]	      4006	elf.c	FUNCTION_54	FOR_1
0x4005c0d	    0x488d14c50000	                        lea rdx, [rax*8]	      4006	elf.c	FUNCTION_54	FOR_1
0x4005c15	    0x48c744150000	                mov qword [rbp + rdx], 0	      4026	elf.c	FUNCTION_54
0x4005c1e	        0x4883c418	                           add rsp, 0x18	      4029	elf.c	FUNCTION_54
0x4005c22	              0x5b	                                 pop rbx	      4029	elf.c	FUNCTION_54
0x4005c23	              0x5d	                                 pop rbp	      4029	elf.c	FUNCTION_54
0x4005c24	            0x415c	                                 pop r12	      4029	elf.c	FUNCTION_54
0x4005c26	            0x415d	                                 pop r13	      4029	elf.c	FUNCTION_54
0x4005c28	            0x415e	                                 pop r14	      4029	elf.c	FUNCTION_54
0x4005c2a	            0x415f	                                 pop r15	      4029	elf.c	FUNCTION_54
0x4005c2c	              0xc3	                                     ret	      4029	elf.c	FUNCTION_54
0x4005c2d	            0x31c0	                            xor eax, eax	      4006	elf.c	FUNCTION_54	FOR_1
0x4005c2f	            0x31d2	                            xor edx, edx	      4006	elf.c	FUNCTION_54	FOR_1
0x4005c31	            0xebe2	                           jmp 0x4005c15	      4006	elf.c	FUNCTION_54	FOR_1
_bfd_elf_rela_local_sym	SWITCH,0:CALL,3:IF,3:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	52
0x4010f40	            0x4155	                                push r13	     11273	elf.c	FUNCTION_196
0x4010f42	            0x4154	                                push r12	     11273	elf.c	FUNCTION_196
0x4010f44	              0x55	                                push rbp	     11273	elf.c	FUNCTION_196
0x4010f45	              0x53	                                push rbx	     11273	elf.c	FUNCTION_196
0x4010f46	        0x4883ec08	                              sub rsp, 8	     11273	elf.c	FUNCTION_196
0x4010f4a	          0x488b2a	                    mov rbp, qword [rdx]	     11274	elf.c	FUNCTION_196
0x4010f4d	          0x4c8b06	                     mov r8, qword [rsi]	     11279	elf.c	FUNCTION_196
0x4010f50	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     11277	elf.c	FUNCTION_196
0x4010f54	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	     11277	elf.c	FUNCTION_196
0x4010f58	        0x48035828	             add rbx, qword [rax + 0x28]	     11277	elf.c	FUNCTION_196
0x4010f5c	          0x4c01c3	                             add rbx, r8	     11277	elf.c	FUNCTION_196
0x4010f5f	        0xf6452280	           test byte [rbp + 0x22], 0x80 	     11280	elf.c	FUNCTION_196	IF_1
0x4010f63	            0x740b	                            je 0x4010f70	     11280	elf.c	FUNCTION_196	IF_1
0x4010f65	         0xfb64618	           movzx eax, byte [rsi + 0x18] 	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x4010f69	          0x83e00f	                            and eax, 0xf	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x4010f6c	            0x3c03	                               cmp al, 3	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x4010f6e	            0x7410	                            je 0x4010f80	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x4010f70	        0x4883c408	                              add rsp, 8	     11303	elf.c	FUNCTION_196
0x4010f74	          0x4889d8	                            mov rax, rbx	     11303	elf.c	FUNCTION_196
0x4010f77	              0x5b	                                 pop rbx	     11303	elf.c	FUNCTION_196
0x4010f78	              0x5d	                                 pop rbp	     11303	elf.c	FUNCTION_196
0x4010f79	            0x415c	                                 pop r12	     11303	elf.c	FUNCTION_196
0x4010f7b	            0x415d	                                 pop r13	     11303	elf.c	FUNCTION_196
0x4010f7d	              0xc3	                                     ret	     11303	elf.c	FUNCTION_196
0x4010f7e	            0x6690	                                     nop	     11303	elf.c	FUNCTION_196
0x4010f80	         0xfb74524	           movzx eax, word [rbp + 0x24] 	     11282	elf.c	FUNCTION_196	IF_1
0x4010f84	        0x66258003	                           and ax, 0x380	     11282	elf.c	FUNCTION_196	IF_1
0x4010f88	        0x663d0001	                           cmp ax, 0x100	     11282	elf.c	FUNCTION_196	IF_1
0x4010f8c	            0x75e2	                           jne 0x4010f70	     11282	elf.c	FUNCTION_196	IF_1
0x4010f8e	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010f95	          0x4989cd	                            mov r13, rcx	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010f98	          0x4c89c1	                             mov rcx, r8	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010f9b	        0x49034d10	             add rcx, qword [r13 + 0x10]	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010f9f	          0x4989d4	                            mov r12, rdx	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010fa2	          0x4c89e6	                            mov rsi, r12	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010fa5	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010fac	      0xe800000000	                          call 0x4010fb1	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010fb1	        0x498b1424	                    mov rdx, qword [r12]	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x4010fb5	        0x49894510	             mov qword [r13 + 0x10], rax	     11284	elf.c	FUNCTION_196	IF_1
0x4010fb9	          0x4839d5	                            cmp rbp, rdx	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x4010fbc	            0x7411	                            je 0x4010fcf	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x4010fbe	        0xf6452180	           test byte [rbp + 0x21], 0x80 	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4010fc2	            0x740b	                            je 0x4010fcf	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4010fc4	    0x488995c80000	            mov qword [rbp + 0xc8], rdx 	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4010fcb	        0x498b1424	                    mov rdx, qword [r12]	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4010fcf	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	     11300	elf.c	FUNCTION_196	IF_1
0x4010fd3	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	     11300	elf.c	FUNCTION_196	IF_1
0x4010fd7	        0x48035128	             add rdx, qword [rcx + 0x28]	     11300	elf.c	FUNCTION_196	IF_1
0x4010fdb	          0x4829da	                            sub rdx, rbx	     11300	elf.c	FUNCTION_196	IF_1
0x4010fde	          0x4801d0	                            add rax, rdx	     11300	elf.c	FUNCTION_196	IF_1
0x4010fe1	        0x49894510	             mov qword [r13 + 0x10], rax	     11300	elf.c	FUNCTION_196	IF_1
0x4010fe5	            0xeb89	                           jmp 0x4010f70	     11300	elf.c	FUNCTION_196	IF_1
_bfd_elf_no_info_to_howto	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	5
0x400e490	        0x4883ec08	                              sub rsp, 8	      8885	elf.c	FUNCTION_108
0x400e494	      0xba00000000	                              mov edx, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x400e499	      0xbeb6220000	                         mov esi, 0x22b6	      8886	elf.c	FUNCTION_108	CALL_1
0x400e49e	      0xbf00000000	                              mov edi, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x400e4a3	      0xe800000000	                          call 0x400e4a8	      8886	elf.c	FUNCTION_108	CALL_1
_bfd_elf_find_segment_containing_section	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,2	27
0x4005ca0	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005ca7	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005cae	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005cb2	          0x488b3a	                    mov rdi, qword [rdx]	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005cb5	          0x4885ff	                           test rdi, rdi	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005cb8	            0x7434	                            je 0x4005cee	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005cba	          0x8b5744	            mov edx, dword [rdi + 0x44] 	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005cbd	          0x83ea01	                              sub edx, 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005cc0	            0x7820	                            js 0x4005ce2	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005cc2	          0x4863ca	                         movsxd rcx, edx	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005cc5	      0x483b74cf48	    cmp rsi, qword [rdi + rcx*8 + 0x48] 	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005cca	            0x750e	                           jne 0x4005cda	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005ccc	            0xeb24	                           jmp 0x4005cf2	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005cce	            0x6690	                                     nop	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005cd0	          0x4863ca	                         movsxd rcx, edx	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005cd3	      0x483974cf48	    cmp qword [rdi + rcx*8 + 0x48], rsi 	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005cd8	            0x7416	                            je 0x4005cf0	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005cda	          0x83ea01	                              sub edx, 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005cdd	          0x83faff	             cmp edx, 0xffffffffffffffff	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005ce0	            0x75ee	                           jne 0x4005cd0	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005ce2	          0x488b3f	                    mov rdi, qword [rdi]	      4450	elf.c	FUNCTION_61	FOR_1
0x4005ce5	        0x4883c040	                           add rax, 0x40	      4450	elf.c	FUNCTION_61	FOR_1
0x4005ce9	          0x4885ff	                           test rdi, rdi	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005cec	            0x75cc	                           jne 0x4005cba	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005cee	            0x31c0	                            xor eax, eax	      4459	elf.c	FUNCTION_61
0x4005cf0	            0xf3c3	                                     ret	      4460	elf.c	FUNCTION_61
0x4005cf2	            0xf3c3	                                     ret	      4460	elf.c	FUNCTION_61
_bfd_elf_maybe_function_sym	SWITCH,0:CALL,0:IF,3:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	17
0x40114f0	          0x8b4f18	            mov ecx, dword [rdi + 0x18] 	     11547	elf.c	FUNCTION_203	IF_1
0x40114f3	            0x31c0	                            xor eax, eax	     11550	elf.c	FUNCTION_203	IF_1
0x40114f5	    0xf7c100411d00	                      test ecx, 0x1d4100	     11547	elf.c	FUNCTION_203	IF_1
0x40114fb	            0x7506	                           jne 0x4011503	     11547	elf.c	FUNCTION_203	IF_1
0x40114fd	        0x48397720	            cmp qword [rdi + 0x20], rsi 	     11549	elf.c	FUNCTION_203	IF_1
0x4011501	            0x7405	                            je 0x4011508	     11549	elf.c	FUNCTION_203	IF_1
0x4011503	            0xf3c3	                                     ret	     11559	elf.c	FUNCTION_203
0x4011505	           0xf1f00	                         nop dword [rax]	     11559	elf.c	FUNCTION_203
0x4011508	        0x488b4710	            mov rax, qword [rdi + 0x10] 	     11552	elf.c	FUNCTION_203
0x401150c	    0x81e100002000	                       and ecx, 0x200000	     11554	elf.c	FUNCTION_203	IF_2
0x4011512	          0x488902	                    mov qword [rdx], rax	     11552	elf.c	FUNCTION_203
0x4011515	      0xb801000000	                              mov eax, 1	     11557	elf.c	FUNCTION_203	IF_3
0x401151a	            0x75e7	                           jne 0x4011503	     11554	elf.c	FUNCTION_203	IF_2
0x401151c	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	     11555	elf.c	FUNCTION_203	IF_2
0x4011520	          0x4885d2	                           test rdx, rdx	     11557	elf.c	FUNCTION_203	IF_3
0x4011523	        0x480f45c2	                         cmovne rax, rdx	     11557	elf.c	FUNCTION_203	IF_3
0x4011527	              0xc3	                                     ret	     11559	elf.c	FUNCTION_203
_bfd_elf_canonicalize_symtab	SWITCH,0:CALL,3:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	12
0x400c840	        0x488b4708	                mov rax, qword [rdi + 8]	      8181	elf.c	FUNCTION_93	CALL_1
0x400c844	              0x53	                                push rbx	      8180	elf.c	FUNCTION_93
0x400c845	            0x31d2	                            xor edx, edx	      8182	elf.c	FUNCTION_93	CALL_2
0x400c847	          0x4889fb	                            mov rbx, rdi	      8180	elf.c	FUNCTION_93
0x400c84a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8182	elf.c	FUNCTION_93	CALL_2
0x400c851	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8182	elf.c	FUNCTION_93	CALL_2
0x400c858	          0xff5048	                 call qword [rax + 0x48]	      8182	elf.c	FUNCTION_93	CALL_2
0x400c85b	          0x4885c0	                           test rax, rax	      8184	elf.c	FUNCTION_93	IF_1
0x400c85e	            0x7806	                            js 0x400c866	      8184	elf.c	FUNCTION_93	IF_1
0x400c860	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      8185	elf.c	FUNCTION_93	CALL_3
0x400c866	              0x5b	                                 pop rbx	      8187	elf.c	FUNCTION_93
0x400c867	              0xc3	                                     ret	      8187	elf.c	FUNCTION_93
elfcore_write_register_note	SWITCH,0:CALL,44:IF,22:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	266
0x4010a70	          0x4889c8	                            mov rax, rcx	     11034	elf.c	FUNCTION_190
0x4010a73	        0x4883ec08	                              sub rsp, 8	     11034	elf.c	FUNCTION_190
0x4010a77	          0x4989fa	                            mov r10, rdi	     11034	elf.c	FUNCTION_190
0x4010a7a	          0x4989f3	                            mov r11, rsi	     11034	elf.c	FUNCTION_190
0x4010a7d	      0xbf00000000	                              mov edi, 0	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4010a82	      0xb906000000	                              mov ecx, 6	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4010a87	          0x4889c6	                            mov rsi, rax	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4010a8a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4010a8c	     0xf841e020000	                            je 0x4010cb0	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x4010a92	      0xbf00000000	                              mov edi, 0	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4010a97	      0xb909000000	                              mov ecx, 9	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4010a9c	          0x4889c6	                            mov rsi, rax	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4010a9f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4010aa1	     0xf8469020000	                            je 0x4010d10	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x4010aa7	      0xbf00000000	                              mov edi, 0	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4010aac	      0xb90c000000	                            mov ecx, 0xc	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4010ab1	          0x4889c6	                            mov rsi, rax	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4010ab4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4010ab6	            0x7548	                           jne 0x4010b00	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x4010ab8	        0x498b4208	                mov rax, qword [r10 + 8]	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4010abc	      0xb900000000	                              mov ecx, 0	     10788	elf.c	FUNCTION_170	ELSE_1
0x4010ac1	          0x4c89de	                            mov rsi, r11	     10789	elf.c	FUNCTION_170	CALL_2
0x4010ac4	          0x4c89d7	                            mov rdi, r10	     10789	elf.c	FUNCTION_170	CALL_2
0x4010ac7	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x4010ace	        0x83780c09	                cmp dword [rax + 0xc], 9	     10788	elf.c	FUNCTION_170	ELSE_1
0x4010ad2	      0xb800000000	                              mov eax, 0	     10788	elf.c	FUNCTION_170	ELSE_1
0x4010ad7	        0x480f44c8	                          cmove rcx, rax	     10788	elf.c	FUNCTION_170	ELSE_1
0x4010adb	        0x4883ec08	                              sub rsp, 8	     10789	elf.c	FUNCTION_170	CALL_2
0x4010adf	            0x4151	                                 push r9	     10789	elf.c	FUNCTION_170	CALL_2
0x4010ae1	          0x4d89c1	                              mov r9, r8	     10789	elf.c	FUNCTION_170	CALL_2
0x4010ae4	    0x41b802020000	                          mov r8d, 0x202	     10789	elf.c	FUNCTION_170	CALL_2
0x4010aea	      0xe800000000	                          call 0x4010aef	     10789	elf.c	FUNCTION_170	CALL_2
0x4010aef	              0x5e	                                 pop rsi	     11040	elf.c	FUNCTION_190	CALL_6
0x4010af0	              0x5f	                                 pop rdi	     11040	elf.c	FUNCTION_190	CALL_6
0x4010af1	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4010af5	              0xc3	                                     ret	     11080	elf.c	FUNCTION_190
0x4010af6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11080	elf.c	FUNCTION_190
0x4010b00	      0xbf00000000	                              mov edi, 0	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4010b05	      0xb90d000000	                            mov ecx, 0xd	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4010b0a	          0x4889c6	                            mov rsi, rax	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4010b0d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4010b0f	     0xf8413020000	                            je 0x4010d28	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x4010b15	      0xbf00000000	                              mov edi, 0	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4010b1a	      0xb90d000000	                            mov ecx, 0xd	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4010b1f	          0x4889c6	                            mov rsi, rax	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4010b22	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4010b24	     0xf84b6010000	                            je 0x4010ce0	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x4010b2a	      0xbf00000000	                              mov edi, 0	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4010b2f	      0xb914000000	                           mov ecx, 0x14	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4010b34	          0x4889c6	                            mov rsi, rax	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4010b37	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4010b39	     0xf8419020000	                            je 0x4010d58	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x4010b3f	      0xbf00000000	                              mov edi, 0	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4010b44	      0xb910000000	                           mov ecx, 0x10	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4010b49	          0x4889c6	                            mov rsi, rax	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4010b4c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4010b4e	     0xf841c020000	                            je 0x4010d70	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x4010b54	      0xbf00000000	                              mov edi, 0	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4010b59	      0xb911000000	                           mov ecx, 0x11	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4010b5e	          0x4889c6	                            mov rsi, rax	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4010b61	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4010b63	     0xf841f020000	                            je 0x4010d88	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x4010b69	      0xbf00000000	                              mov edi, 0	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4010b6e	      0xb912000000	                           mov ecx, 0x12	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4010b73	          0x4889c6	                            mov rsi, rax	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4010b76	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4010b78	     0xf8422020000	                            je 0x4010da0	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x4010b7e	      0xbf00000000	                              mov edi, 0	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4010b83	      0xb90f000000	                            mov ecx, 0xf	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4010b88	          0x4889c6	                            mov rsi, rax	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4010b8b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4010b8d	     0xf8425020000	                            je 0x4010db8	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x4010b93	      0xbf00000000	                              mov edi, 0	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4010b98	      0xb911000000	                           mov ecx, 0x11	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4010b9d	          0x4889c6	                            mov rsi, rax	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4010ba0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4010ba2	     0xf8498010000	                            je 0x4010d40	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x4010ba8	      0xbf00000000	                              mov edi, 0	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4010bad	      0xb915000000	                           mov ecx, 0x15	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4010bb2	          0x4889c6	                            mov rsi, rax	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4010bb5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4010bb7	     0xf8413020000	                            je 0x4010dd0	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x4010bbd	      0xbf00000000	                              mov edi, 0	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4010bc2	      0xb916000000	                           mov ecx, 0x16	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4010bc7	          0x4889c6	                            mov rsi, rax	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4010bca	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4010bcc	     0xf8412020000	                            je 0x4010de4	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x4010bd2	      0xbf00000000	                              mov edi, 0	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4010bd7	      0xb90e000000	                            mov ecx, 0xe	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4010bdc	          0x4889c6	                            mov rsi, rax	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4010bdf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4010be1	     0xf8411020000	                            je 0x4010df8	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x4010be7	      0xbf00000000	                              mov edi, 0	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4010bec	      0xb913000000	                           mov ecx, 0x13	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4010bf1	          0x4889c6	                            mov rsi, rax	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4010bf4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4010bf6	     0xf8410020000	                            je 0x4010e0c	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x4010bfc	      0xbf00000000	                              mov edi, 0	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4010c01	      0xb914000000	                           mov ecx, 0x14	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4010c06	          0x4889c6	                            mov rsi, rax	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4010c09	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4010c0b	     0xf840f020000	                            je 0x4010e20	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x4010c11	      0xbf00000000	                              mov edi, 0	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4010c16	      0xb910000000	                           mov ecx, 0x10	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4010c1b	          0x4889c6	                            mov rsi, rax	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4010c1e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4010c20	     0xf840e020000	                            je 0x4010e34	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x4010c26	      0xbf00000000	                              mov edi, 0	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4010c2b	      0xb910000000	                           mov ecx, 0x10	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4010c30	          0x4889c6	                            mov rsi, rax	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4010c33	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4010c35	     0xf840d020000	                            je 0x4010e48	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x4010c3b	      0xbf00000000	                              mov edi, 0	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4010c40	      0xb90d000000	                            mov ecx, 0xd	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4010c45	          0x4889c6	                            mov rsi, rax	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4010c48	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4010c4a	     0xf840c020000	                            je 0x4010e5c	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x4010c50	      0xbf00000000	                              mov edi, 0	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4010c55	      0xb90f000000	                            mov ecx, 0xf	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4010c5a	          0x4889c6	                            mov rsi, rax	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4010c5d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4010c5f	     0xf840b020000	                            je 0x4010e70	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x4010c65	      0xbf00000000	                              mov edi, 0	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4010c6a	      0xb914000000	                           mov ecx, 0x14	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4010c6f	          0x4889c6	                            mov rsi, rax	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4010c72	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4010c74	     0xf840a020000	                            je 0x4010e84	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x4010c7a	          0x4889c6	                            mov rsi, rax	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c7d	      0xb914000000	                           mov ecx, 0x14	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c82	      0xbf00000000	                              mov edi, 0	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c87	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c89	        0x400f97c6	                                seta sil	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c8d	           0xf92c1	                                 setb cl	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c90	            0x31c0	                            xor eax, eax	     11079	elf.c	FUNCTION_190
0x4010c92	          0x4038ce	                             cmp sil, cl	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c95	     0xf8556feffff	                           jne 0x4010af1	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x4010c9b	        0x4883ec08	                              sub rsp, 8	     11023	elf.c	FUNCTION_189	CALL_1
0x4010c9f	            0x4151	                                 push r9	     11023	elf.c	FUNCTION_189	CALL_1
0x4010ca1	          0x4d89c1	                              mov r9, r8	     11023	elf.c	FUNCTION_189	CALL_1
0x4010ca4	    0x41b803040000	                          mov r8d, 0x403	     11023	elf.c	FUNCTION_189	CALL_1
0x4010caa	            0xeb43	                           jmp 0x4010cef	     11023	elf.c	FUNCTION_189	CALL_1
0x4010cac	         0xf1f4000	                         nop dword [rax]	     11023	elf.c	FUNCTION_189	CALL_1
0x4010cb0	        0x4883ec08	                              sub rsp, 8	     10764	elf.c	FUNCTION_168	CALL_1
0x4010cb4	      0xb900000000	                              mov ecx, 0	     10764	elf.c	FUNCTION_168	CALL_1
0x4010cb9	          0x4c89de	                            mov rsi, r11	     10764	elf.c	FUNCTION_168	CALL_1
0x4010cbc	            0x4151	                                 push r9	     10764	elf.c	FUNCTION_168	CALL_1
0x4010cbe	          0x4c89d7	                            mov rdi, r10	     10764	elf.c	FUNCTION_168	CALL_1
0x4010cc1	          0x4d89c1	                              mov r9, r8	     10764	elf.c	FUNCTION_168	CALL_1
0x4010cc4	    0x41b802000000	                              mov r8d, 2	     10764	elf.c	FUNCTION_168	CALL_1
0x4010cca	      0xe800000000	                          call 0x4010ccf	     10764	elf.c	FUNCTION_168	CALL_1
0x4010ccf	            0x4158	                                  pop r8	     11036	elf.c	FUNCTION_190	CALL_2
0x4010cd1	            0x4159	                                  pop r9	     11036	elf.c	FUNCTION_190	CALL_2
0x4010cd3	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4010cd7	              0xc3	                                     ret	     11080	elf.c	FUNCTION_190
0x4010cd8	     0xf1f84000000	                   nop dword [rax + rax]	     11080	elf.c	FUNCTION_190
0x4010ce0	        0x4883ec08	                              sub rsp, 8	     10813	elf.c	FUNCTION_172	CALL_1
0x4010ce4	            0x4151	                                 push r9	     10813	elf.c	FUNCTION_172	CALL_1
0x4010ce6	          0x4d89c1	                              mov r9, r8	     10813	elf.c	FUNCTION_172	CALL_1
0x4010ce9	    0x41b802010000	                          mov r8d, 0x102	     10813	elf.c	FUNCTION_172	CALL_1
0x4010cef	      0xb900000000	                              mov ecx, 0	     11023	elf.c	FUNCTION_189	CALL_1
0x4010cf4	          0x4c89de	                            mov rsi, r11	     11023	elf.c	FUNCTION_189	CALL_1
0x4010cf7	          0x4c89d7	                            mov rdi, r10	     11023	elf.c	FUNCTION_189	CALL_1
0x4010cfa	      0xe800000000	                          call 0x4010cff	     11023	elf.c	FUNCTION_189	CALL_1
0x4010cff	              0x5a	                                 pop rdx	     11078	elf.c	FUNCTION_190	CALL_44
0x4010d00	              0x59	                                 pop rcx	     11078	elf.c	FUNCTION_190	CALL_44
0x4010d01	        0x4883c408	                              add rsp, 8	     11080	elf.c	FUNCTION_190
0x4010d05	              0xc3	                                     ret	     11080	elf.c	FUNCTION_190
0x4010d06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11080	elf.c	FUNCTION_190
0x4010d10	        0x4883ec08	                              sub rsp, 8	     10776	elf.c	FUNCTION_169	CALL_1
0x4010d14	            0x4151	                                 push r9	     10776	elf.c	FUNCTION_169	CALL_1
0x4010d16	          0x4d89c1	                              mov r9, r8	     10776	elf.c	FUNCTION_169	CALL_1
0x4010d19	    0x41b87f2be646	                     mov r8d, 0x46e62b7f	     10776	elf.c	FUNCTION_169	CALL_1
0x4010d1f	            0xebce	                           jmp 0x4010cef	     10776	elf.c	FUNCTION_169	CALL_1
0x4010d21	     0xf1f80000000	                         nop dword [rax]	     10776	elf.c	FUNCTION_169	CALL_1
0x4010d28	        0x4883ec08	                              sub rsp, 8	     10801	elf.c	FUNCTION_171	CALL_1
0x4010d2c	            0x4151	                                 push r9	     10801	elf.c	FUNCTION_171	CALL_1
0x4010d2e	          0x4d89c1	                              mov r9, r8	     10801	elf.c	FUNCTION_171	CALL_1
0x4010d31	    0x41b800010000	                          mov r8d, 0x100	     10801	elf.c	FUNCTION_171	CALL_1
0x4010d37	            0xebb6	                           jmp 0x4010cef	     10801	elf.c	FUNCTION_171	CALL_1
0x4010d39	     0xf1f80000000	                         nop dword [rax]	     10801	elf.c	FUNCTION_171	CALL_1
0x4010d40	        0x4883ec08	                              sub rsp, 8	     10886	elf.c	FUNCTION_178	CALL_1
0x4010d44	            0x4151	                                 push r9	     10886	elf.c	FUNCTION_178	CALL_1
0x4010d46	          0x4d89c1	                              mov r9, r8	     10886	elf.c	FUNCTION_178	CALL_1
0x4010d49	    0x41b805030000	                          mov r8d, 0x305	     10886	elf.c	FUNCTION_178	CALL_1
0x4010d4f	            0xeb9e	                           jmp 0x4010cef	     10886	elf.c	FUNCTION_178	CALL_1
0x4010d51	     0xf1f80000000	                         nop dword [rax]	     10886	elf.c	FUNCTION_178	CALL_1
0x4010d58	        0x4883ec08	                              sub rsp, 8	     10825	elf.c	FUNCTION_173	CALL_1
0x4010d5c	            0x4151	                                 push r9	     10825	elf.c	FUNCTION_173	CALL_1
0x4010d5e	          0x4d89c1	                              mov r9, r8	     10825	elf.c	FUNCTION_173	CALL_1
0x4010d61	    0x41b800030000	                          mov r8d, 0x300	     10825	elf.c	FUNCTION_173	CALL_1
0x4010d67	            0xeb86	                           jmp 0x4010cef	     10825	elf.c	FUNCTION_173	CALL_1
0x4010d69	     0xf1f80000000	                         nop dword [rax]	     10825	elf.c	FUNCTION_173	CALL_1
0x4010d70	        0x4883ec08	                              sub rsp, 8	     10838	elf.c	FUNCTION_174	CALL_1
0x4010d74	            0x4151	                                 push r9	     10838	elf.c	FUNCTION_174	CALL_1
0x4010d76	          0x4d89c1	                              mov r9, r8	     10838	elf.c	FUNCTION_174	CALL_1
0x4010d79	    0x41b801030000	                          mov r8d, 0x301	     10838	elf.c	FUNCTION_174	CALL_1
0x4010d7f	      0xe96bffffff	                           jmp 0x4010cef	     10838	elf.c	FUNCTION_174	CALL_1
0x4010d84	         0xf1f4000	                         nop dword [rax]	     10838	elf.c	FUNCTION_174	CALL_1
0x4010d88	        0x4883ec08	                              sub rsp, 8	     10850	elf.c	FUNCTION_175	CALL_1
0x4010d8c	            0x4151	                                 push r9	     10850	elf.c	FUNCTION_175	CALL_1
0x4010d8e	          0x4d89c1	                              mov r9, r8	     10850	elf.c	FUNCTION_175	CALL_1
0x4010d91	    0x41b802030000	                          mov r8d, 0x302	     10850	elf.c	FUNCTION_175	CALL_1
0x4010d97	      0xe953ffffff	                           jmp 0x4010cef	     10850	elf.c	FUNCTION_175	CALL_1
0x4010d9c	         0xf1f4000	                         nop dword [rax]	     10850	elf.c	FUNCTION_175	CALL_1
0x4010da0	        0x4883ec08	                              sub rsp, 8	     10862	elf.c	FUNCTION_176	CALL_1
0x4010da4	            0x4151	                                 push r9	     10862	elf.c	FUNCTION_176	CALL_1
0x4010da6	          0x4d89c1	                              mov r9, r8	     10862	elf.c	FUNCTION_176	CALL_1
0x4010da9	    0x41b803030000	                          mov r8d, 0x303	     10862	elf.c	FUNCTION_176	CALL_1
0x4010daf	      0xe93bffffff	                           jmp 0x4010cef	     10862	elf.c	FUNCTION_176	CALL_1
0x4010db4	         0xf1f4000	                         nop dword [rax]	     10862	elf.c	FUNCTION_176	CALL_1
0x4010db8	        0x4883ec08	                              sub rsp, 8	     10874	elf.c	FUNCTION_177	CALL_1
0x4010dbc	            0x4151	                                 push r9	     10874	elf.c	FUNCTION_177	CALL_1
0x4010dbe	          0x4d89c1	                              mov r9, r8	     10874	elf.c	FUNCTION_177	CALL_1
0x4010dc1	    0x41b804030000	                          mov r8d, 0x304	     10874	elf.c	FUNCTION_177	CALL_1
0x4010dc7	      0xe923ffffff	                           jmp 0x4010cef	     10874	elf.c	FUNCTION_177	CALL_1
0x4010dcc	         0xf1f4000	                         nop dword [rax]	     10874	elf.c	FUNCTION_177	CALL_1
0x4010dd0	        0x4883ec08	                              sub rsp, 8	     10898	elf.c	FUNCTION_179	CALL_1
0x4010dd4	            0x4151	                                 push r9	     10898	elf.c	FUNCTION_179	CALL_1
0x4010dd6	          0x4d89c1	                              mov r9, r8	     10898	elf.c	FUNCTION_179	CALL_1
0x4010dd9	    0x41b806030000	                          mov r8d, 0x306	     10898	elf.c	FUNCTION_179	CALL_1
0x4010ddf	      0xe90bffffff	                           jmp 0x4010cef	     10898	elf.c	FUNCTION_179	CALL_1
0x4010de4	        0x4883ec08	                              sub rsp, 8	     10911	elf.c	FUNCTION_180	CALL_1
0x4010de8	            0x4151	                                 push r9	     10911	elf.c	FUNCTION_180	CALL_1
0x4010dea	          0x4d89c1	                              mov r9, r8	     10911	elf.c	FUNCTION_180	CALL_1
0x4010ded	    0x41b807030000	                          mov r8d, 0x307	     10911	elf.c	FUNCTION_180	CALL_1
0x4010df3	      0xe9f7feffff	                           jmp 0x4010cef	     10911	elf.c	FUNCTION_180	CALL_1
0x4010df8	        0x4883ec08	                              sub rsp, 8	     10924	elf.c	FUNCTION_181	CALL_1
0x4010dfc	            0x4151	                                 push r9	     10924	elf.c	FUNCTION_181	CALL_1
0x4010dfe	          0x4d89c1	                              mov r9, r8	     10924	elf.c	FUNCTION_181	CALL_1
0x4010e01	    0x41b808030000	                          mov r8d, 0x308	     10924	elf.c	FUNCTION_181	CALL_1
0x4010e07	      0xe9e3feffff	                           jmp 0x4010cef	     10924	elf.c	FUNCTION_181	CALL_1
0x4010e0c	        0x4883ec08	                              sub rsp, 8	     10936	elf.c	FUNCTION_182	CALL_1
0x4010e10	            0x4151	                                 push r9	     10936	elf.c	FUNCTION_182	CALL_1
0x4010e12	          0x4d89c1	                              mov r9, r8	     10936	elf.c	FUNCTION_182	CALL_1
0x4010e15	    0x41b809030000	                          mov r8d, 0x309	     10936	elf.c	FUNCTION_182	CALL_1
0x4010e1b	      0xe9cffeffff	                           jmp 0x4010cef	     10936	elf.c	FUNCTION_182	CALL_1
0x4010e20	        0x4883ec08	                              sub rsp, 8	     10948	elf.c	FUNCTION_183	CALL_1
0x4010e24	            0x4151	                                 push r9	     10948	elf.c	FUNCTION_183	CALL_1
0x4010e26	          0x4d89c1	                              mov r9, r8	     10948	elf.c	FUNCTION_183	CALL_1
0x4010e29	    0x41b80a030000	                          mov r8d, 0x30a	     10948	elf.c	FUNCTION_183	CALL_1
0x4010e2f	      0xe9bbfeffff	                           jmp 0x4010cef	     10948	elf.c	FUNCTION_183	CALL_1
0x4010e34	        0x4883ec08	                              sub rsp, 8	     10961	elf.c	FUNCTION_184	CALL_1
0x4010e38	            0x4151	                                 push r9	     10961	elf.c	FUNCTION_184	CALL_1
0x4010e3a	          0x4d89c1	                              mov r9, r8	     10961	elf.c	FUNCTION_184	CALL_1
0x4010e3d	    0x41b80b030000	                          mov r8d, 0x30b	     10961	elf.c	FUNCTION_184	CALL_1
0x4010e43	      0xe9a7feffff	                           jmp 0x4010cef	     10961	elf.c	FUNCTION_184	CALL_1
0x4010e48	        0x4883ec08	                              sub rsp, 8	     10974	elf.c	FUNCTION_185	CALL_1
0x4010e4c	            0x4151	                                 push r9	     10974	elf.c	FUNCTION_185	CALL_1
0x4010e4e	          0x4d89c1	                              mov r9, r8	     10974	elf.c	FUNCTION_185	CALL_1
0x4010e51	    0x41b80c030000	                          mov r8d, 0x30c	     10974	elf.c	FUNCTION_185	CALL_1
0x4010e57	      0xe993feffff	                           jmp 0x4010cef	     10974	elf.c	FUNCTION_185	CALL_1
0x4010e5c	        0x4883ec08	                              sub rsp, 8	     10987	elf.c	FUNCTION_186	CALL_1
0x4010e60	            0x4151	                                 push r9	     10987	elf.c	FUNCTION_186	CALL_1
0x4010e62	          0x4d89c1	                              mov r9, r8	     10987	elf.c	FUNCTION_186	CALL_1
0x4010e65	    0x41b800040000	                          mov r8d, 0x400	     10987	elf.c	FUNCTION_186	CALL_1
0x4010e6b	      0xe97ffeffff	                           jmp 0x4010cef	     10987	elf.c	FUNCTION_186	CALL_1
0x4010e70	        0x4883ec08	                              sub rsp, 8	     10999	elf.c	FUNCTION_187	CALL_1
0x4010e74	            0x4151	                                 push r9	     10999	elf.c	FUNCTION_187	CALL_1
0x4010e76	          0x4d89c1	                              mov r9, r8	     10999	elf.c	FUNCTION_187	CALL_1
0x4010e79	    0x41b801040000	                          mov r8d, 0x401	     10999	elf.c	FUNCTION_187	CALL_1
0x4010e7f	      0xe96bfeffff	                           jmp 0x4010cef	     10999	elf.c	FUNCTION_187	CALL_1
0x4010e84	        0x4883ec08	                              sub rsp, 8	     11011	elf.c	FUNCTION_188	CALL_1
0x4010e88	            0x4151	                                 push r9	     11011	elf.c	FUNCTION_188	CALL_1
0x4010e8a	          0x4d89c1	                              mov r9, r8	     11011	elf.c	FUNCTION_188	CALL_1
0x4010e8d	    0x41b802040000	                          mov r8d, 0x402	     11011	elf.c	FUNCTION_188	CALL_1
0x4010e93	      0xe957feffff	                           jmp 0x4010cef	     11011	elf.c	FUNCTION_188	CALL_1
_bfd_elf_fixup_group_sections	SWITCH,0:CALL,6:IF,11:functions,0:ELSE,2:DO,0:WHILE,1:FOR,1	89
0x400a960	    0x488b97900000	            mov rdx, qword [rdi + 0x90] 	      7602	elf.c	FUNCTION_85	FOR_1
0x400a967	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x400a96a	            0x7519	                           jne 0x400a985	      7602	elf.c	FUNCTION_85	FOR_1
0x400a96c	      0xe9f0000000	                           jmp 0x400aa61	      7602	elf.c	FUNCTION_85	FOR_1
0x400a971	     0xf1f80000000	                         nop dword [rax]	      7602	elf.c	FUNCTION_85	FOR_1
0x400a978	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      7602	elf.c	FUNCTION_85	FOR_1
0x400a97c	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x400a97f	     0xf84dc000000	                            je 0x400aa61	      7602	elf.c	FUNCTION_85	FOR_1
0x400a985	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x400a98c	        0x83780411	               cmp dword [rax + 4], 0x11	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x400a990	            0x75e6	                           jne 0x400a978	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x400a992	    0x488bb8c00000	            mov rdi, qword [rax + 0xc0] 	      7605	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_2
0x400a999	          0x4885ff	                           test rdi, rdi	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a99c	            0x74da	                            je 0x400a978	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a99e	          0x4889f8	                            mov rax, rdi	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a9a1	          0x4531c0	                            xor r8d, r8d	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a9a4	            0xeb2c	                           jmp 0x400a9d2	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a9a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a9b0	        0x483b7268	            cmp rsi, qword [rdx + 0x68] 	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400a9b4	     0xf84b6000000	                            je 0x400aa70	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400a9ba	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400a9c1	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x400a9c8	          0x4839c7	                            cmp rdi, rax	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400a9cb	            0x745b	                            je 0x400aa28	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400a9cd	          0x4885c0	                           test rax, rax	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a9d0	            0x7456	                            je 0x400aa28	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x400a9d2	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400a9d6	          0x4839f1	                            cmp rcx, rsi	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400a9d9	            0x75d5	                           jne 0x400a9b0	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x400a9db	        0x483b7268	            cmp rsi, qword [rdx + 0x68] 	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x400a9df	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7625	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	CALL_5
0x400a9e6	            0x74d9	                            je 0x400a9c1	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x400a9e8	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400a9ec	        0x4d8d4804	                        lea r9, [r8 + 4]	      7626	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x400a9f0	          0x4885c9	                           test rcx, rcx	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400a9f3	     0xf84af000000	                            je 0x400aaa8	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400a9f9	        0x4983c008	                               add r8, 8	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400a9fd	        0xf6410902	                  test byte [rcx + 9], 2	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400aa01	        0x4d0f44c1	                            cmove r8, r9	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x400aa05	        0x488b4870	            mov rcx, qword [rax + 0x70] 	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400aa09	          0x4885c9	                           test rcx, rcx	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400aa0c	            0x74b3	                            je 0x400a9c1	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400aa0e	        0xf6410902	                  test byte [rcx + 9], 2	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400aa12	            0x74ad	                            je 0x400a9c1	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400aa14	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x400aa1b	        0x4983c004	                               add r8, 4	      7632	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x400aa1f	          0x4839c7	                            cmp rdi, rax	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400aa22	            0x75a9	                           jne 0x400a9cd	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400aa24	         0xf1f4000	                         nop dword [rax]	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x400aa28	          0x4d85c0	                             test r8, r8	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x400aa2b	     0xf8447ffffff	                            je 0x400a978	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x400aa31	          0x4885f6	                           test rsi, rsi	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400aa34	            0x747a	                            je 0x400aab0	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400aa36	        0x488b4240	            mov rax, qword [rdx + 0x40] 	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400aa3a	          0x4885c0	                           test rax, rax	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400aa3d	            0x7508	                           jne 0x400aa47	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400aa3f	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400aa43	        0x48894240	             mov qword [rdx + 0x40], rax	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x400aa47	          0x4c29c0	                             sub rax, r8	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400aa4a	        0x4883f804	                              cmp rax, 4	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400aa4e	            0x7640	                           jbe 0x400aa90	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400aa50	        0x48894238	             mov qword [rdx + 0x38], rax	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x400aa54	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      7602	elf.c	FUNCTION_85	FOR_1
0x400aa58	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x400aa5b	     0xf8524ffffff	                           jne 0x400a985	      7602	elf.c	FUNCTION_85	FOR_1
0x400aa61	      0xb801000000	                              mov eax, 1	      7668	elf.c	FUNCTION_85
0x400aa66	              0xc3	                                     ret	      7668	elf.c	FUNCTION_85
0x400aa67	    0x660f1f840000	                    nop word [rax + rax]	      7668	elf.c	FUNCTION_85
0x400aa70	    0x488b89e00000	            mov rcx, qword [rcx + 0xe0] 	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x400aa77	    0x48816108fffd	 and qword [rcx + 8], 0xfffffffffffffdff	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x400aa7f	    0x48c781b00000	               mov qword [rcx + 0xb0], 0	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x400aa8a	      0xe92bffffff	                           jmp 0x400a9ba	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x400aa8f	              0x90	                                     nop	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x400aa90	    0x48c742380000	               mov qword [rdx + 0x38], 0	      7649	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400aa98	    0x814a20008000	           or dword [rdx + 0x20], 0x8000	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400aa9f	      0xe9d4feffff	                           jmp 0x400a978	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400aaa4	         0xf1f4000	                         nop dword [rax]	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x400aaa8	          0x4d89c8	                              mov r8, r9	      7626	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x400aaab	      0xe955ffffff	                           jmp 0x400aa05	      7626	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x400aab0	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x400aab4	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x400aab8	          0x4c29c0	                             sub rax, r8	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x400aabb	        0x4883f804	                              cmp rax, 4	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400aabf	            0x7714	                            ja 0x400aad5	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400aac1	    0x48c741380000	               mov qword [rcx + 0x38], 0	      7660	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400aac9	    0x814920008000	           or dword [rcx + 0x20], 0x8000	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400aad0	      0xe9a3feffff	                           jmp 0x400a978	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x400aad5	        0x48894138	             mov qword [rcx + 0x38], rax	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x400aad9	      0xe99afeffff	                           jmp 0x400a978	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
_bfd_elf_get_special_section	SWITCH,0:CALL,3:IF,8:functions,0:ELSE,1:DO,0:WHILE,0:FOR,1	73
0x40052b0	            0x4157	                                push r15	      2751	elf.c	FUNCTION_39
0x40052b2	            0x4156	                                push r14	      2751	elf.c	FUNCTION_39
0x40052b4	            0x4155	                                push r13	      2751	elf.c	FUNCTION_39
0x40052b6	            0x4154	                                push r12	      2751	elf.c	FUNCTION_39
0x40052b8	          0x4989fd	                            mov r13, rdi	      2751	elf.c	FUNCTION_39
0x40052bb	              0x55	                                push rbp	      2751	elf.c	FUNCTION_39
0x40052bc	              0x53	                                push rbx	      2751	elf.c	FUNCTION_39
0x40052bd	          0x4889f3	                            mov rbx, rsi	      2751	elf.c	FUNCTION_39
0x40052c0	        0x4883ec18	                           sub rsp, 0x18	      2751	elf.c	FUNCTION_39
0x40052c4	        0x8954240c	              mov dword [rsp + 0xc], edx	      2751	elf.c	FUNCTION_39
0x40052c8	      0xe800000000	                          call 0x40052cd	      2755	elf.c	FUNCTION_39	CALL_1
0x40052cd	          0x4c8b3b	                    mov r15, qword [rbx]	      2757	elf.c	FUNCTION_39	FOR_1
0x40052d0	          0x4d85ff	                           test r15, r15	      2757	elf.c	FUNCTION_39	FOR_1
0x40052d3	     0xf84a7000000	                            je 0x4005380	      2757	elf.c	FUNCTION_39	FOR_1
0x40052d9	          0x4189c4	                           mov r12d, eax	      2757	elf.c	FUNCTION_39	FOR_1
0x40052dc	            0x4898	                                    cdqe	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052de	        0x48890424	                    mov qword [rsp], rax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052e2	            0xeb38	                           jmp 0x400531c	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052e4	         0xf1f4000	                         nop dword [rax]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052e8	             0x1d5	                            add ebp, edx	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40052ea	          0x4139ec	                           cmp r12d, ebp	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40052ed	            0x7c21	                            jl 0x4005310	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x40052ef	        0x488b3c24	                    mov rdi, qword [rsp]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052f3	        0x4b8d3437	                    lea rsi, [r15 + r14]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052f7	          0x4829d7	                            sub rdi, rdx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052fa	          0x4c01ef	                            add rdi, r13	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x40052fd	      0xe800000000	                          call 0x4005302	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4005302	            0x85c0	                           test eax, eax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4005304	            0x7460	                            je 0x4005366	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4005306	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4005310	        0x4883c320	                           add rbx, 0x20	      2757	elf.c	FUNCTION_39	FOR_1
0x4005314	          0x4c8b3b	                    mov r15, qword [rbx]	      2757	elf.c	FUNCTION_39	FOR_1
0x4005317	          0x4d85ff	                           test r15, r15	      2757	elf.c	FUNCTION_39	FOR_1
0x400531a	            0x7464	                            je 0x4005380	      2757	elf.c	FUNCTION_39	FOR_1
0x400531c	          0x8b6b08	                mov ebp, dword [rbx + 8]	      2760	elf.c	FUNCTION_39	FOR_1
0x400531f	          0x4139ec	                           cmp r12d, ebp	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x4005322	            0x7cec	                            jl 0x4005310	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x4005324	          0x4c63f5	                         movsxd r14, ebp	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4005327	          0x4c89fe	                            mov rsi, r15	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400532a	          0x4c89ef	                            mov rdi, r13	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x400532d	          0x4c89f2	                            mov rdx, r14	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4005330	      0xe800000000	                          call 0x4005335	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4005335	            0x85c0	                           test eax, eax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4005337	            0x75d7	                           jne 0x4005310	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4005339	        0x4863530c	          movsxd rdx, dword [rbx + 0xc] 	      2767	elf.c	FUNCTION_39	FOR_1
0x400533d	            0x85d2	                           test edx, edx	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x400533f	            0x7fa7	                            jg 0x40052e8	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x4005341	    0x430fb6443500	             movzx eax, byte [r13 + r14]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4005347	            0x84c0	                             test al, al	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4005349	            0x741b	                            je 0x4005366	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x400534b	            0x85d2	                           test edx, edx	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x400534d	            0x74c1	                            je 0x4005310	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x400534f	            0x3c2e	                            cmp al, 0x2e	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4005351	            0x7413	                            je 0x4005366	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4005353	          0x83fafe	             cmp edx, 0xfffffffffffffffe	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4005356	            0x74b8	                            je 0x4005310	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4005358	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x400535c	            0x85c0	                           test eax, eax	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x400535e	            0x7406	                            je 0x4005366	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4005360	        0x837b1009	               cmp dword [rbx + 0x10], 9	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4005364	            0x74aa	                            je 0x4005310	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4005366	        0x4883c418	                           add rsp, 0x18	      2793	elf.c	FUNCTION_39
0x400536a	          0x4889d8	                            mov rax, rbx	      2793	elf.c	FUNCTION_39
0x400536d	              0x5b	                                 pop rbx	      2793	elf.c	FUNCTION_39
0x400536e	              0x5d	                                 pop rbp	      2793	elf.c	FUNCTION_39
0x400536f	            0x415c	                                 pop r12	      2793	elf.c	FUNCTION_39
0x4005371	            0x415d	                                 pop r13	      2793	elf.c	FUNCTION_39
0x4005373	            0x415e	                                 pop r14	      2793	elf.c	FUNCTION_39
0x4005375	            0x415f	                                 pop r15	      2793	elf.c	FUNCTION_39
0x4005377	              0xc3	                                     ret	      2793	elf.c	FUNCTION_39
0x4005378	     0xf1f84000000	                   nop dword [rax + rax]	      2793	elf.c	FUNCTION_39
0x4005380	            0x31db	                            xor ebx, ebx	      2792	elf.c	FUNCTION_39
0x4005382	            0xebe2	                           jmp 0x4005366	      2792	elf.c	FUNCTION_39
bfd_elf_get_elf_syms	SWITCH,0:CALL,21:IF,18:functions,0:ELSE,1:DO,0:WHILE,0:FOR,2	255
0x4002440	            0x4157	                                push r15	       386	elf.c	FUNCTION_18
0x4002442	            0x4156	                                push r14	       386	elf.c	FUNCTION_18
0x4002444	            0x4155	                                push r13	       386	elf.c	FUNCTION_18
0x4002446	            0x4154	                                push r12	       386	elf.c	FUNCTION_18
0x4002448	          0x4d89c4	                             mov r12, r8	       386	elf.c	FUNCTION_18
0x400244b	              0x55	                                push rbp	       386	elf.c	FUNCTION_18
0x400244c	              0x53	                                push rbx	       386	elf.c	FUNCTION_18
0x400244d	        0x4883ec38	                           sub rsp, 0x38	       386	elf.c	FUNCTION_18
0x4002451	        0x4c8b4708	                 mov r8, qword [rdi + 8]	       400	elf.c	FUNCTION_18	IF_1	CALL_1
0x4002455	        0x48890c24	                    mov qword [rsp], rcx	       386	elf.c	FUNCTION_18
0x4002459	      0x4183780805	                   cmp dword [r8 + 8], 5	       400	elf.c	FUNCTION_18	IF_1	CALL_1
0x400245e	     0xf8593030000	                           jne 0x40027f7	       400	elf.c	FUNCTION_18	IF_1	CALL_1
0x4002464	          0x4885d2	                           test rdx, rdx	       403	elf.c	FUNCTION_18	IF_2
0x4002467	          0x4989d6	                            mov r14, rdx	       403	elf.c	FUNCTION_18	IF_2
0x400246a	     0xf843d010000	                            je 0x40025ad	       403	elf.c	FUNCTION_18	IF_2
0x4002470	          0x4889fd	                            mov rbp, rdi	       403	elf.c	FUNCTION_18	IF_2
0x4002473	    0x488bbff80000	            mov rdi, qword [rdi + 0xf8] 	       408	elf.c	FUNCTION_18	IF_3	CALL_3
0x400247a	    0x4c8b9fe80200	           mov r11, qword [rdi + 0x2e8] 	       408	elf.c	FUNCTION_18	IF_3	CALL_3
0x4002481	          0x4d85db	                           test r11, r11	       408	elf.c	FUNCTION_18	IF_3	CALL_3
0x4002484	     0xf847e010000	                            je 0x4002608	       408	elf.c	FUNCTION_18	IF_3	CALL_3
0x400248a	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x400248e	    0x8b97fc020000	           mov edx, dword [rdi + 0x2fc] 	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x4002494	          0x4c89db	                            mov rbx, r11	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x4002497	    0x660f1f840000	                    nop word [rax + rax]	       411	elf.c	FUNCTION_18	IF_3	CALL_4
0x40024a0	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_6
0x40024a3	            0x39d0	                            cmp eax, edx	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_6
0x40024a5	            0x7306	                           jae 0x40024ad	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_6
0x40024a7	        0x483934c1	           cmp qword [rcx + rax*8], rsi 	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40024ab	            0x7414	                            je 0x40024c1	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40024ad	        0x488b5b58	            mov rbx, qword [rbx + 0x58] 	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_5
0x40024b1	          0x4885db	                           test rbx, rbx	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_5
0x40024b4	            0x75ea	                           jne 0x40024a0	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_5
0x40024b6	        0x4883c768	                           add rdi, 0x68	       429	elf.c	FUNCTION_18	IF_3	IF_6	IF_7	CALL_7
0x40024ba	          0x4839fe	                            cmp rsi, rdi	       407	elf.c	FUNCTION_18
0x40024bd	        0x490f44db	                          cmove rbx, r11	       407	elf.c	FUNCTION_18
0x40024c1	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       407	elf.c	FUNCTION_18
0x40024c6	    0x4d8bb8680300	            mov r15, qword [r8 + 0x368] 	       441	elf.c	FUNCTION_18	CALL_9
0x40024cd	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	       442	elf.c	FUNCTION_18
0x40024d4	      0x440fb66805	              movzx r13d, byte [rax + 5]	       442	elf.c	FUNCTION_18
0x40024d9	        0x488b0424	                    mov rax, qword [rsp]	       444	elf.c	FUNCTION_18
0x40024dd	        0x490fafc5	                           imul rax, r13	       444	elf.c	FUNCTION_18
0x40024e1	        0x48034618	             add rax, qword [rsi + 0x18]	       444	elf.c	FUNCTION_18
0x40024e5	          0x4d85c9	                             test r9, r9	       445	elf.c	FUNCTION_18	IF_8
0x40024e8	          0x4889c3	                            mov rbx, rax	       444	elf.c	FUNCTION_18
0x40024eb	     0xf8437020000	                            je 0x4002728	       445	elf.c	FUNCTION_18	IF_8
0x40024f1	            0x31d2	                            xor edx, edx	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x40024f3	          0x4889c6	                            mov rsi, rax	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x40024f6	          0x4889ef	                            mov rdi, rbp	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x40024f9	      0x4c894c2408	                 mov qword [rsp + 8], r9	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x40024fe	      0xe800000000	                          call 0x4002503	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002503	            0x85c0	                           test eax, eax	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002505	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400250a	     0xf85f0000000	                           jne 0x4002600	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002510	          0x4c89f3	                            mov rbx, r14	       443	elf.c	FUNCTION_18
0x4002513	          0x4889ea	                            mov rdx, rbp	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002516	          0x4c89cf	                             mov rdi, r9	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002519	        0x490fafdd	                           imul rbx, r13	       443	elf.c	FUNCTION_18
0x400251d	      0x4c894c2408	                 mov qword [rsp + 8], r9	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002522	          0x4889de	                            mov rsi, rbx	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002525	      0xe800000000	                          call 0x400252a	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400252a	          0x4839c3	                            cmp rbx, rax	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400252d	     0xf85cd000000	                           jne 0x4002600	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002533	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002538	          0x4531c0	                            xor r8d, r8d	       438	elf.c	FUNCTION_18
0x400253b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       458	elf.c	FUNCTION_18	IF_10
0x4002540	          0x4885c0	                           test rax, rax	       458	elf.c	FUNCTION_18	IF_10
0x4002543	     0xf84cd000000	                            je 0x4002616	       458	elf.c	FUNCTION_18	IF_10
0x4002549	      0x4883782000	               cmp qword [rax + 0x20], 0	       458	elf.c	FUNCTION_18	IF_10
0x400254e	     0xf84c2000000	                            je 0x4002616	       458	elf.c	FUNCTION_18	IF_10
0x4002554	            0x31db	                            xor ebx, ebx	       439	elf.c	FUNCTION_18
0x4002556	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       464	elf.c	FUNCTION_18	ELSE_1	IF_11
0x400255c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       463	elf.c	FUNCTION_18	ELSE_1
0x4002560	            0x745d	                            je 0x40025bf	       464	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4002562	        0x488b0424	                    mov rax, qword [rsp]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002566	          0x4889ef	                            mov rdi, rbp	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002569	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x400256e	      0x4c89442408	                 mov qword [rsp + 8], r8	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002573	        0x488d3482	                  lea rsi, [rdx + rax*4]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002577	            0x31d2	                            xor edx, edx	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002579	      0xe800000000	                          call 0x400257e	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x400257e	            0x85c0	                           test eax, eax	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002580	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002585	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x400258a	     0xf84ec010000	                            je 0x400277c	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002590	          0x4531e4	                          xor r12d, r12d	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x4002593	          0x4d85c0	                             test r8, r8	       508	elf.c	FUNCTION_18	IF_17
0x4002596	            0x7408	                            je 0x40025a0	       508	elf.c	FUNCTION_18	IF_17
0x4002598	          0x4c89c7	                             mov rdi, r8	       509	elf.c	FUNCTION_18	CALL_20
0x400259b	      0xe800000000	                          call 0x40025a0	       509	elf.c	FUNCTION_18	CALL_20
0x40025a0	          0x4885db	                           test rbx, rbx	       510	elf.c	FUNCTION_18	IF_18
0x40025a3	            0x7408	                            je 0x40025ad	       510	elf.c	FUNCTION_18	IF_18
0x40025a5	          0x4889df	                            mov rdi, rbx	       511	elf.c	FUNCTION_18	CALL_21
0x40025a8	      0xe800000000	                          call 0x40025ad	       511	elf.c	FUNCTION_18	CALL_21
0x40025ad	        0x4883c438	                           add rsp, 0x38	       514	elf.c	FUNCTION_18
0x40025b1	          0x4c89e0	                            mov rax, r12	       514	elf.c	FUNCTION_18
0x40025b4	              0x5b	                                 pop rbx	       514	elf.c	FUNCTION_18
0x40025b5	              0x5d	                                 pop rbp	       514	elf.c	FUNCTION_18
0x40025b6	            0x415c	                                 pop r12	       514	elf.c	FUNCTION_18
0x40025b8	            0x415d	                                 pop r13	       514	elf.c	FUNCTION_18
0x40025ba	            0x415e	                                 pop r14	       514	elf.c	FUNCTION_18
0x40025bc	            0x415f	                                 pop r15	       514	elf.c	FUNCTION_18
0x40025be	              0xc3	                                     ret	       514	elf.c	FUNCTION_18
0x40025bf	      0xbe04000000	                              mov esi, 4	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40025c4	          0x4c89f7	                            mov rdi, r14	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40025c7	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40025cc	      0x4c89442410	              mov qword [rsp + 0x10], r8	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40025d1	      0x4889542408	                mov qword [rsp + 8], rdx	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40025d6	      0xe800000000	                          call 0x40025db	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40025db	          0x4885c0	                           test rax, rax	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40025de	          0x4889c3	                            mov rbx, rax	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40025e1	      0x488b542408	                mov rdx, qword [rsp + 8]	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40025e6	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40025eb	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40025f0	     0xf854f020000	                           jne 0x4002845	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40025f6	          0x4531e4	                          xor r12d, r12d	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40025f9	          0x4d85c0	                             test r8, r8	       508	elf.c	FUNCTION_18	IF_17
0x40025fc	            0x759a	                           jne 0x4002598	       508	elf.c	FUNCTION_18	IF_17
0x40025fe	            0x6690	                                     nop	       508	elf.c	FUNCTION_18	IF_17
0x4002600	          0x4531e4	                          xor r12d, r12d	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x4002603	            0xeba8	                           jmp 0x40025ad	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x4002605	           0xf1f00	                         nop dword [rax]	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x4002608	    0x48c744241000	               mov qword [rsp + 0x10], 0	       407	elf.c	FUNCTION_18
0x4002611	      0xe9b0feffff	                           jmp 0x40024c6	       407	elf.c	FUNCTION_18
0x4002616	            0x31db	                            xor ebx, ebx	       439	elf.c	FUNCTION_18
0x4002618	    0x48c744247000	               mov qword [rsp + 0x70], 0	       459	elf.c	FUNCTION_18	IF_10
0x4002621	          0x4d85e4	                           test r12, r12	       479	elf.c	FUNCTION_18	IF_13
0x4002624	    0x48c744240800	                  mov qword [rsp + 8], 0	       440	elf.c	FUNCTION_18
0x400262d	     0xf848d010000	                            je 0x40027c0	       479	elf.c	FUNCTION_18	IF_13
0x4002633	          0x4d89f2	                            mov r10, r14	       489	elf.c	FUNCTION_18
0x4002636	        0x49c1e205	                              shl r10, 5	       489	elf.c	FUNCTION_18
0x400263a	        0x4b8d0414	                    lea rax, [r12 + r10]	       489	elf.c	FUNCTION_18
0x400263e	          0x4939c4	                            cmp r12, rax	       490	elf.c	FUNCTION_18	FOR_2
0x4002641	     0xf834cffffff	                           jae 0x4002593	       490	elf.c	FUNCTION_18	FOR_2
0x4002647	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       490	elf.c	FUNCTION_18	FOR_2
0x400264c	      0x4c89642420	             mov qword [rsp + 0x20], r12	       490	elf.c	FUNCTION_18	FOR_2
0x4002651	          0x4c89fb	                            mov rbx, r15	       490	elf.c	FUNCTION_18	FOR_2
0x4002654	          0x4d89ce	                             mov r14, r9	       490	elf.c	FUNCTION_18	FOR_2
0x4002657	          0x4d89e7	                            mov r15, r12	       490	elf.c	FUNCTION_18	FOR_2
0x400265a	      0x4c89442418	              mov qword [rsp + 0x18], r8	       490	elf.c	FUNCTION_18	FOR_2
0x400265f	          0x4989c4	                            mov r12, rax	       490	elf.c	FUNCTION_18	FOR_2
0x4002662	      0x4c894c2428	              mov qword [rsp + 0x28], r9	       490	elf.c	FUNCTION_18	FOR_2
0x4002667	            0xeb31	                           jmp 0x400269a	       490	elf.c	FUNCTION_18	FOR_2
0x4002669	     0xf1f80000000	                         nop dword [rax]	       490	elf.c	FUNCTION_18	FOR_2
0x4002670	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       493	elf.c	FUNCTION_18	FOR_2
0x4002675	        0x4983c720	                           add r15, 0x20	       493	elf.c	FUNCTION_18	FOR_2
0x4002679	          0x4d01ee	                            add r14, r13	       493	elf.c	FUNCTION_18	FOR_2
0x400267c	        0x4883c004	                              add rax, 4	       493	elf.c	FUNCTION_18	FOR_2
0x4002680	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       493	elf.c	FUNCTION_18	FOR_2
0x4002686	    0x480f44442470	           cmove rax, qword [rsp + 0x70]	       493	elf.c	FUNCTION_18	FOR_2
0x400268c	          0x4d39fc	                            cmp r12, r15	       490	elf.c	FUNCTION_18	FOR_2
0x400268f	      0x4889442470	             mov qword [rsp + 0x70], rax	       493	elf.c	FUNCTION_18	FOR_2
0x4002694	     0xf86ce000000	                           jbe 0x4002768	       490	elf.c	FUNCTION_18	FOR_2
0x400269a	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026a1	          0x4c89f9	                            mov rcx, r15	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026a4	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026a9	          0x4c89f6	                            mov rsi, r14	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026ac	          0x4889ef	                            mov rdi, rbp	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026af	          0xff5030	                 call qword [rax + 0x30]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026b2	            0x85c0	                           test eax, eax	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026b4	            0x75ba	                           jne 0x4002670	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026b6	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026bb	      0xba05000000	                              mov edx, 5	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026c0	      0xbe00000000	                              mov esi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026c5	      0xbf00000000	                              mov edi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026ca	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026cf	          0x4531e4	                          xor r12d, r12d	       503	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026d2	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       503	elf.c	FUNCTION_18	FOR_2	IF_15
0x40026d7	      0xe800000000	                          call 0x40026dc	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026dc	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026e1	          0x4889c7	                            mov rdi, rax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026e4	          0x4c89f0	                            mov rax, r14	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026e7	            0x31d2	                            xor edx, edx	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026e9	          0x4889ee	                            mov rsi, rbp	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026ec	          0x4c29c8	                             sub rax, r9	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026ef	          0x49f7f5	                                 div r13	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026f2	        0x488b1424	                    mov rdx, qword [rsp]	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026f6	          0x4801c2	                            add rdx, rax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026f9	            0x31c0	                            xor eax, eax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x40026fb	      0xe800000000	                          call 0x4002700	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x4002700	      0x488b442408	                mov rax, qword [rsp + 8]	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x4002705	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x400270a	          0x4885c0	                           test rax, rax	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x400270d	     0xf8480feffff	                            je 0x4002593	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x4002713	          0x4889c7	                            mov rdi, rax	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_19
0x4002716	        0x4c890424	                     mov qword [rsp], r8	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_19
0x400271a	      0xe800000000	                          call 0x400271f	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_19
0x400271f	        0x4c8b0424	                     mov r8, qword [rsp]	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_19
0x4002723	      0xe96bfeffff	                           jmp 0x4002593	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_19
0x4002728	          0x4c89ee	                            mov rsi, r13	       447	elf.c	FUNCTION_18	IF_8	CALL_10
0x400272b	          0x4c89f7	                            mov rdi, r14	       447	elf.c	FUNCTION_18	IF_8	CALL_10
0x400272e	      0xe800000000	                          call 0x4002733	       447	elf.c	FUNCTION_18	IF_8	CALL_10
0x4002733	          0x4885c0	                           test rax, rax	       450	elf.c	FUNCTION_18	IF_9
0x4002736	     0xf84c4feffff	                            je 0x4002600	       450	elf.c	FUNCTION_18	IF_9
0x400273c	            0x31d2	                            xor edx, edx	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400273e	          0x4889de	                            mov rsi, rbx	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002741	          0x4889ef	                            mov rdi, rbp	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002744	      0x4889442408	                mov qword [rsp + 8], rax	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002749	      0xe800000000	                          call 0x400274e	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400274e	            0x85c0	                           test eax, eax	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002750	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002755	     0xf84b0000000	                            je 0x400280b	       451	elf.c	FUNCTION_18	IF_9	CALL_11
0x400275b	            0x31db	                            xor ebx, ebx	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400275d	          0x4531e4	                          xor r12d, r12d	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002760	      0xe933feffff	                           jmp 0x4002598	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002765	           0xf1f00	                         nop dword [rax]	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002768	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400276d	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002772	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002777	      0xe917feffff	                           jmp 0x4002593	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400277c	    0x4a8d0cb50000	                        lea rcx, [r14*4]	       462	elf.c	FUNCTION_18	ELSE_1
0x4002784	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x4002789	          0x4889ea	                            mov rdx, rbp	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x400278c	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x4002791	      0x4c89442410	              mov qword [rsp + 0x10], r8	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x4002796	          0x4889ce	                            mov rsi, rcx	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x4002799	      0x48894c2408	                mov qword [rsp + 8], rcx	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x400279e	      0xe800000000	                          call 0x40027a3	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40027a3	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40027a8	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40027ad	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40027b2	          0x4839c1	                            cmp rcx, rax	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40027b5	     0xf85d5fdffff	                           jne 0x4002590	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40027bb	      0xe961feffff	                           jmp 0x4002621	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_15
0x40027c0	      0xbe20000000	                           mov esi, 0x20	       481	elf.c	FUNCTION_18	IF_13
0x40027c5	          0x4c89f7	                            mov rdi, r14	       481	elf.c	FUNCTION_18	IF_13
0x40027c8	      0x4c89442408	                 mov qword [rsp + 8], r8	       481	elf.c	FUNCTION_18	IF_13
0x40027cd	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       481	elf.c	FUNCTION_18	IF_13
0x40027d2	      0xe800000000	                          call 0x40027d7	       481	elf.c	FUNCTION_18	IF_13
0x40027d7	          0x4885c0	                           test rax, rax	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x40027da	          0x4989c4	                            mov r12, rax	       481	elf.c	FUNCTION_18	IF_13
0x40027dd	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x40027e2	     0xf84abfdffff	                            je 0x4002593	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x40027e8	      0x4889442408	                mov qword [rsp + 8], rax	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x40027ed	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x40027f2	      0xe93cfeffff	                           jmp 0x4002633	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x40027f7	      0xba00000000	                              mov edx, 0	       401	elf.c	FUNCTION_18	CALL_2
0x40027fc	      0xbe91010000	                          mov esi, 0x191	       401	elf.c	FUNCTION_18	CALL_2
0x4002801	      0xbf00000000	                              mov edi, 0	       401	elf.c	FUNCTION_18	CALL_2
0x4002806	      0xe800000000	                          call 0x400280b	       401	elf.c	FUNCTION_18	CALL_2
0x400280b	          0x4c89f1	                            mov rcx, r14	       443	elf.c	FUNCTION_18
0x400280e	          0x4c89c7	                             mov rdi, r8	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002811	          0x4889ea	                            mov rdx, rbp	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002814	        0x490fafcd	                           imul rcx, r13	       443	elf.c	FUNCTION_18
0x4002818	      0x4c89442408	                 mov qword [rsp + 8], r8	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400281d	          0x4889ce	                            mov rsi, rcx	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002820	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002825	      0xe800000000	                          call 0x400282a	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400282a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400282f	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002834	          0x4839c1	                            cmp rcx, rax	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x4002837	     0xf851effffff	                           jne 0x400275b	       452	elf.c	FUNCTION_18	IF_9	CALL_12
0x400283d	          0x4d89c1	                              mov r9, r8	       448	elf.c	FUNCTION_18	IF_8
0x4002840	      0xe9f6fcffff	                           jmp 0x400253b	       448	elf.c	FUNCTION_18	IF_8
0x4002845	      0x4889442470	             mov qword [rsp + 0x70], rax	       448	elf.c	FUNCTION_18	IF_8
0x400284a	      0xe913fdffff	                           jmp 0x4002562	       448	elf.c	FUNCTION_18	IF_8
_bfd_elf_copy_private_header_data	SWITCH,0:CALL,6:IF,3:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	1671
0x400aae0	            0x4157	                                push r15	      7674	elf.c	FUNCTION_86
0x400aae2	            0x4156	                                push r14	      7674	elf.c	FUNCTION_86
0x400aae4	            0x4155	                                push r13	      7674	elf.c	FUNCTION_86
0x400aae6	            0x4154	                                push r12	      7674	elf.c	FUNCTION_86
0x400aae8	              0x55	                                push rbp	      7674	elf.c	FUNCTION_86
0x400aae9	              0x53	                                push rbx	      7674	elf.c	FUNCTION_86
0x400aaea	    0x4881eca80000	                           sub rsp, 0xa8	      7674	elf.c	FUNCTION_86
0x400aaf1	        0x488b5708	                mov rdx, qword [rdi + 8]	      7675	elf.c	FUNCTION_86	IF_1	CALL_1
0x400aaf5	    0x64488b042528	                mov rax, qword fs:[0x28]	      7674	elf.c	FUNCTION_86
0x400aafe	    0x488984249800	             mov qword [rsp + 0x98], rax	      7674	elf.c	FUNCTION_86
0x400ab06	            0x31c0	                            xor eax, eax	      7674	elf.c	FUNCTION_86
0x400ab08	      0x4889742408	                mov qword [rsp + 8], rsi	      7674	elf.c	FUNCTION_86
0x400ab0d	      0xb801000000	                              mov eax, 1	      7677	elf.c	FUNCTION_86	IF_1
0x400ab12	        0x837a0805	                  cmp dword [rdx + 8], 5	      7675	elf.c	FUNCTION_86	IF_1	CALL_1
0x400ab16	            0x7430	                            je 0x400ab48	      7675	elf.c	FUNCTION_86	IF_1	CALL_1
0x400ab18	    0x488bbc249800	            mov rdi, qword [rsp + 0x98] 	      7691	elf.c	FUNCTION_86
0x400ab20	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      7691	elf.c	FUNCTION_86
0x400ab29	     0xf85ee130000	                           jne 0x400bf1d	      7691	elf.c	FUNCTION_86
0x400ab2f	    0x4881c4a80000	                           add rsp, 0xa8	      7691	elf.c	FUNCTION_86
0x400ab36	              0x5b	                                 pop rbx	      7691	elf.c	FUNCTION_86
0x400ab37	              0x5d	                                 pop rbp	      7691	elf.c	FUNCTION_86
0x400ab38	            0x415c	                                 pop r12	      7691	elf.c	FUNCTION_86
0x400ab3a	            0x415d	                                 pop r13	      7691	elf.c	FUNCTION_86
0x400ab3c	            0x415e	                                 pop r14	      7691	elf.c	FUNCTION_86
0x400ab3e	            0x415f	                                 pop r15	      7691	elf.c	FUNCTION_86
0x400ab40	              0xc3	                                     ret	      7691	elf.c	FUNCTION_86
0x400ab41	     0xf1f80000000	                         nop dword [rax]	      7691	elf.c	FUNCTION_86
0x400ab48	        0x488b4e08	                mov rcx, qword [rsi + 8]	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400ab4c	          0x4989fc	                            mov r12, rdi	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400ab4f	        0x83790805	                  cmp dword [rcx + 8], 5	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400ab53	            0x75c3	                           jne 0x400ab18	      7676	elf.c	FUNCTION_86	IF_1	CALL_2
0x400ab55	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400ab5c	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400ab63	        0x48833800	                      cmp qword [rax], 0	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400ab67	            0x7437	                            je 0x400aba0	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400ab69	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      7690	elf.c	FUNCTION_86	CALL_6
0x400ab71	    0x644833042528	                xor rax, qword fs:[0x28]	      7690	elf.c	FUNCTION_86	CALL_6
0x400ab7a	     0xf859d130000	                           jne 0x400bf1d	      7690	elf.c	FUNCTION_86	CALL_6
0x400ab80	    0x4881c4a80000	                           add rsp, 0xa8	      7691	elf.c	FUNCTION_86
0x400ab87	          0x4c89e7	                            mov rdi, r12	      7690	elf.c	FUNCTION_86	CALL_6
0x400ab8a	            0x31f6	                            xor esi, esi	      7690	elf.c	FUNCTION_86	CALL_6
0x400ab8c	              0x5b	                                 pop rbx	      7691	elf.c	FUNCTION_86
0x400ab8d	              0x5d	                                 pop rbp	      7691	elf.c	FUNCTION_86
0x400ab8e	            0x415c	                                 pop r12	      7691	elf.c	FUNCTION_86
0x400ab90	            0x415d	                                 pop r13	      7691	elf.c	FUNCTION_86
0x400ab92	            0x415e	                                 pop r14	      7691	elf.c	FUNCTION_86
0x400ab94	            0x415f	                                 pop r15	      7691	elf.c	FUNCTION_86
0x400ab96	      0xe9c5fdffff	   jmp sym._bfd_elf_fixup_group_sections	      7690	elf.c	FUNCTION_86	CALL_6
0x400ab9b	       0xf1f440000	                   nop dword [rax + rax]	      7690	elf.c	FUNCTION_86	CALL_6
0x400aba0	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400aba8	        0x488b5860	            mov rbx, qword [rax + 0x60] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400abac	      0x4889442420	             mov qword [rsp + 0x20], rax	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400abb1	          0x4885db	                           test rbx, rbx	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400abb4	            0x74b3	                            je 0x400ab69	      7684	elf.c	FUNCTION_86	IF_2	CALL_4
0x400abb6	          0x4839ca	                            cmp rdx, rcx	      7374	elf.c	FUNCTION_82	IF_3
0x400abb9	          0x4989da	                            mov r10, rbx	      7374	elf.c	FUNCTION_82	IF_3
0x400abbc	     0xf8469100000	                            je 0x400bc2b	      7374	elf.c	FUNCTION_82	IF_3
0x400abc2	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	      6562	elf.c	FUNCTION_80	CALL_1
0x400abc9	    0x48c784249000	               mov qword [rsp + 0x90], 0	      6565	elf.c	FUNCTION_80
0x400abd5	      0x4889442478	             mov qword [rsp + 0x78], rax	      6562	elf.c	FUNCTION_80	CALL_1
0x400abda	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6568	elf.c	FUNCTION_80	CALL_3
0x400abdf	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6568	elf.c	FUNCTION_80	CALL_3
0x400abe2	        0x8944245c	             mov dword [rsp + 0x5c], eax	      6568	elf.c	FUNCTION_80	CALL_3
0x400abe6	    0x488b81680300	           mov rax, qword [rcx + 0x368] 	      6569	elf.c	FUNCTION_80	CALL_4
0x400abed	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6569	elf.c	FUNCTION_80	CALL_4
0x400abf1	      0x4889442440	             mov qword [rsp + 0x40], rax	      6569	elf.c	FUNCTION_80	CALL_4
0x400abf6	    0x498b84249000	            mov rax, qword [r12 + 0x90] 	      6682	elf.c	FUNCTION_80	FOR_1
0x400abfe	          0x4885c0	                           test rax, rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400ac01	      0x4889442428	             mov qword [rsp + 0x28], rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400ac06	            0x7415	                            je 0x400ac1d	      6682	elf.c	FUNCTION_80	FOR_1
0x400ac08	     0xf1f84000000	                   nop dword [rax + rax]	      6682	elf.c	FUNCTION_80	FOR_1
0x400ac10	        0x806024bf	             and byte [rax + 0x24], 0xbf	      6683	elf.c	FUNCTION_80	FOR_1
0x400ac14	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6682	elf.c	FUNCTION_80	FOR_1
0x400ac18	          0x4885c0	                           test rax, rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400ac1b	            0x75f3	                           jne 0x400ac10	      6682	elf.c	FUNCTION_80	FOR_1
0x400ac1d	        0x8b74245c	            mov esi, dword [rsp + 0x5c] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400ac21	            0x85f6	                           test esi, esi	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400ac23	     0xf84bf130000	                            je 0x400bfe8	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400ac29	      0x49837a2000	               cmp qword [r10 + 0x20], 0	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac2e	     0xf85e70f0000	                           jne 0x400bc1b	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac34	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac38	          0x8d50ff	                      lea edx, [rax - 1]	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac3b	          0x4c89d0	                            mov rax, r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac3e	        0x4883c201	                              add rdx, 1	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac42	        0x48c1e206	                              shl rdx, 6	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac46	          0x4c01d2	                            add rdx, r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac49	            0xeb10	                           jmp 0x400ac5b	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac4b	       0xf1f440000	                   nop dword [rax + rax]	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac50	      0x4883782000	               cmp qword [rax + 0x20], 0	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac55	     0xf85c00f0000	                           jne 0x400bc1b	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac5b	        0x4883c040	                           add rax, 0x40	      6692	elf.c	FUNCTION_80	FOR_2
0x400ac5f	          0x4839d0	                            cmp rax, rdx	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400ac62	            0x75ec	                           jne 0x400ac50	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400ac64	    0xc78424880000	               mov dword [rsp + 0x88], 0	      6689	elf.c	FUNCTION_80
0x400ac6f	          0x4531f6	                          xor r14d, r14d	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac72	          0x4d89d7	                            mov r15, r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac75	      0x4c89542410	             mov qword [rsp + 0x10], r10	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac7a	          0x4489f5	                           mov ebp, r14d	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac7d	      0x4c89642430	             mov qword [rsp + 0x30], r12	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac82	            0xeb2a	                           jmp 0x400acae	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400ac84	        0x4883f801	                              cmp rax, 1	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x400ac88	     0xf84a2000000	                            je 0x400ad30	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x400ac8e	    0x483d52e57464	                     cmp rax, 0x6474e552	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400ac94	            0x7507	                           jne 0x400ac9d	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400ac96	    0x49c707000000	                      mov qword [r15], 0	      6724	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400ac9d	          0x83c501	                              add ebp, 1	      6705	elf.c	FUNCTION_80	FOR_3
0x400aca0	        0x4983c740	                           add r15, 0x40	      6705	elf.c	FUNCTION_80	FOR_3
0x400aca4	        0x396c245c	            cmp dword [rsp + 0x5c], ebp 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400aca8	     0xf8647010000	                           jbe 0x400adf5	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400acae	          0x498b07	                    mov rax, qword [r15]	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400acb1	        0x4883f803	                              cmp rax, 3	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400acb5	            0x75cd	                           jne 0x400ac84	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400acb7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acbc	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acbf	            0x74dc	                            je 0x400ac9d	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acc1	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acc5	            0xeb12	                           jmp 0x400acd9	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acc7	    0x660f1f840000	                    nop word [rax + rax]	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acd0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acd4	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acd7	            0x74c4	                            je 0x400ac9d	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400acd9	          0x4885d2	                           test rdx, rdx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acdc	            0x75f2	                           jne 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acde	      0x49837f2000	               cmp qword [r15 + 0x20], 0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ace3	            0x75eb	                           jne 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ace5	      0x49837f3000	               cmp qword [r15 + 0x30], 0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acea	            0x75e4	                           jne 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acec	        0x498b4f28	            mov rcx, qword [r15 + 0x28] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acf0	          0x4885c9	                           test rcx, rcx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acf3	            0x74db	                            je 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acf5	        0xf6402101	               test byte [rax + 0x21], 1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acf9	            0x74d5	                            je 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acfb	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400acff	          0x4d85c0	                             test r8, r8	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad02	            0x74cc	                            je 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad04	    0x488bb8900000	            mov rdi, qword [rax + 0x90] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad0b	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad0f	          0x4839f7	                            cmp rdi, rsi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad12	            0x72bc	                            jb 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad14	          0x4c01c7	                             add rdi, r8	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad17	          0x4801f1	                            add rcx, rsi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad1a	          0x4839cf	                            cmp rdi, rcx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad1d	            0x77b1	                            ja 0x400acd0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad1f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad23	        0x49894718	             mov qword [r15 + 0x18], rax	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad27	      0xe971ffffff	                           jmp 0x400ac9d	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad2c	         0xf1f4000	                         nop dword [rax]	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400ad30	            0x85ed	                           test ebp, ebp	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad32	     0xf8465ffffff	                            je 0x400ac9d	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad38	          0x8d55ff	                      lea edx, [rbp - 1]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad3b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad40	        0x896c2418	             mov dword [rsp + 0x18], ebp	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad44	        0x4883c201	                              add rdx, 1	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad48	        0x48c1e206	                              shl rdx, 6	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad4c	          0x4801c2	                            add rdx, rax	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad4f	            0xeb14	                           jmp 0x400ad65	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad51	     0xf1f80000000	                         nop dword [rax]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad58	        0x4883c040	                           add rax, 0x40	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad5c	          0x4839d0	                            cmp rax, rdx	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad5f	     0xf8487000000	                            je 0x400adec	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ad65	        0x48833801	                      cmp qword [rax], 1	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad69	            0x75ed	                           jne 0x400ad58	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad6b	        0x4c8b4028	              mov r8, qword [rax + 0x28]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad6f	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad73	        0x4c8b4818	              mov r9, qword [rax + 0x18]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad77	        0x4d8b5718	            mov r10, qword [r15 + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad7b	          0x4939f8	                             cmp r8, rdi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad7e	          0x4889fe	                            mov rsi, rdi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad81	        0x490f43f0	                          cmovae rsi, r8	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad85	        0x498d0c31	                     lea rcx, [r9 + rsi]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad89	          0x4939ca	                            cmp r10, rcx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad8c	            0x73ca	                           jae 0x400ad58	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad8e	        0x498b5f28	            mov rbx, qword [r15 + 0x28] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad92	        0x4d8b5f30	            mov r11, qword [r15 + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad96	          0x4c39db	                            cmp rbx, r11	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad99	          0x4c89dd	                            mov rbp, r11	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ad9c	        0x480f43eb	                         cmovae rbp, rbx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ada0	        0x4d8d2c2a	                    lea r13, [r10 + rbp]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ada4	          0x4d39e9	                             cmp r9, r13	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ada7	            0x73af	                           jae 0x400ad58	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400ada9	        0x4c8b7020	            mov r14, qword [rax + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adad	        0x4d8b6720	            mov r12, qword [r15 + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adb1	          0x4c01f6	                            add rsi, r14	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adb4	          0x4939f4	                            cmp r12, rsi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adb7	            0x739f	                           jae 0x400ad58	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adb9	          0x4c01e5	                            add rbp, r12	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adbc	          0x4939ee	                            cmp r14, rbp	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adbf	            0x7397	                           jae 0x400ad58	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400adc1	          0x4d39ca	                             cmp r10, r9	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400adc4	     0xf87f5110000	                            ja 0x400bfbf	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400adca	          0x4c29e9	                            sub rcx, r13	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400adcd	          0x4885c9	                           test rcx, rcx	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400add0	            0x7e0e	                           jle 0x400ade0	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400add2	          0x4901cb	                            add r11, rcx	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400add5	          0x4801d9	                            add rcx, rbx	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400add8	        0x4d895f30	             mov qword [r15 + 0x30], r11	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400addc	        0x49894f28	             mov qword [r15 + 0x28], rcx	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400ade0	    0x48c700000000	                      mov qword [rax], 0	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400ade7	      0xe96cffffff	                           jmp 0x400ad58	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400adec	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400adf0	      0xe9a8feffff	                           jmp 0x400ac9d	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400adf5	    0x488d84249000	                   lea rax, [rsp + 0x90]	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400adfd	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ae02	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ae07	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ae12	    0x48c784248000	               mov qword [rsp + 0x80], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ae1e	      0x4889442438	             mov qword [rsp + 0x38], rax	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ae23	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400ae28	    0xc74424500000	               mov dword [rsp + 0x50], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ae30	    0xc74424740000	               mov dword [rsp + 0x74], 0	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ae38	          0x4d89d5	                            mov r13, r10	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ae3b	      0x4c89642460	             mov qword [rsp + 0x60], r12	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ae40	        0x4883e801	                              sub rax, 1	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400ae44	      0x4889442448	             mov qword [rsp + 0x48], rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400ae49	     0xfb684248800	           movzx eax, byte [rsp + 0x88] 	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ae51	             0x1c0	                            add eax, eax	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ae53	        0x88442473	               mov byte [rsp + 0x73], al	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ae57	    0x660f1f840000	                    nop word [rax + rax]	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ae60	        0x4d8b4d00	                     mov r9, qword [r13]	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400ae64	          0x4d85c9	                             test r9, r9	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400ae67	     0xf848a020000	                            je 0x400b0f7	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400ae6d	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae72	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae79	          0x4885c0	                           test rax, rax	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae7c	     0xf84be0c0000	                            je 0x400bb40	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae82	        0x4d8b5520	            mov r10, qword [r13 + 0x20] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae86	          0x4531c0	                            xor r8d, r8d	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae89	            0x31db	                            xor ebx, ebx	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae8b	      0xe9ad000000	                           jmp 0x400af3d	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ae90	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ae94	          0x4c39d2	                            cmp rdx, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ae97	     0xf82f3000000	                            jb 0x400af90	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ae9d	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aea0	            0x89ce	                            mov esi, ecx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aea2	    0x81e600050000	                          and esi, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aea8	    0x81fe00040000	                          cmp esi, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aeae	     0xf8522010000	                           jne 0x400afd6	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aeb4	            0x31f6	                            xor esi, esi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aeb6	        0x4983f907	                               cmp r9, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aeba	     0xf8416010000	                            je 0x400afd6	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aec0	          0x4801d6	                            add rsi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aec3	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aec7	        0x49395528	            cmp qword [r13 + 0x28], rdx 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aecb	      0x490f435528	          cmovae rdx, qword [r13 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aed0	          0x4c01d2	                            add rdx, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aed3	          0x4839d6	                            cmp rsi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aed6	     0xf87b4000000	                            ja 0x400af90	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aedc	          0xf6c101	                              test cl, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aedf	     0xf84ab000000	                            je 0x400af90	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aee5	    0x4981f951e574	                      cmp r9, 0x6474e551	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aeec	            0x7442	                            je 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aeee	        0x4983f907	                               cmp r9, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aef2	     0xf84cf020000	                            je 0x400b1c7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aef8	        0x4983f901	                               cmp r9, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aefc	            0x7415	                            je 0x400af13	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aefe	          0xf6c504	                              test ch, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af01	            0x752d	                           jne 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af03	        0x4983f902	                               cmp r9, 2	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af07	     0xf84f6020000	                            je 0x400b203	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af0d	        0x4983f901	                               cmp r9, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af11	            0x7506	                           jne 0x400af19	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af13	        0xf6402440	           test byte [rax + 0x24], 0x40 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af17	            0x7517	                           jne 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af19	          0x4885db	                           test rbx, rbx	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x400af1c	        0x480f44d8	                          cmove rbx, rax	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x400af20	      0x4883786801	               cmp qword [rax + 0x68], 1	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400af25	        0x4183d8ff	             sbb r8d, 0xffffffffffffffff	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400af29	     0xf1f80000000	                         nop dword [rax]	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400af30	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6798	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400af34	          0x4885c0	                           test rax, rax	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400af37	     0xf84a2000000	                            je 0x400afdf	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400af3d	          0x4d85d2	                           test r10, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af40	     0xf854affffff	                           jne 0x400ae90	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af46	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af4a	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af4e	          0x4839d6	                            cmp rsi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af51	            0x723d	                            jb 0x400af90	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af53	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af56	            0x89cf	                            mov edi, ecx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af58	    0x81e700050000	                          and edi, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af5e	    0x81ff00040000	                          cmp edi, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af64	            0x756a	                           jne 0x400afd0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af66	            0x31ff	                            xor edi, edi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af68	        0x4983f907	                               cmp r9, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af6c	            0x7462	                            je 0x400afd0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af6e	          0x4801f7	                            add rdi, rsi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af71	        0x498b7530	            mov rsi, qword [r13 + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af75	        0x49397528	            cmp qword [r13 + 0x28], rsi 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af79	      0x490f437528	          cmovae rsi, qword [r13 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af7e	          0x4801f2	                            add rdx, rsi	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af81	          0x4839d7	                            cmp rdi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af84	     0xf8652ffffff	                           jbe 0x400aedc	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af8a	    0x660f1f440000	                    nop word [rax + rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af90	        0x4983f904	                               cmp r9, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af94	            0x759a	                           jne 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af96	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400af9d	        0x837a0407	                  cmp dword [rdx + 4], 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afa1	            0x758d	                           jne 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afa3	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afaa	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afae	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afb1	     0xf8279ffffff	                            jb 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afb7	        0x48034838	             add rcx, qword [rax + 0x38]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afbb	        0x49035528	             add rdx, qword [r13 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afbf	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afc2	     0xf8768ffffff	                            ja 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afc8	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afcb	      0xe92effffff	                           jmp 0x400aefe	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afd0	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afd4	            0xeb98	                           jmp 0x400af6e	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afd6	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afda	      0xe9e1feffff	                           jmp 0x400aec0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afdf	          0x4489c5	                            mov ebp, r8d	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400afe2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400afe7	      0x4489442410	             mov dword [rsp + 0x10], r8d	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400afec	    0x488d04ed4800	                 lea rax, [rbp*8 + 0x48]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400aff4	          0x4889c6	                            mov rsi, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400aff7	      0x4889442468	             mov qword [rsp + 0x68], rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400affc	      0xe800000000	                          call 0x400b001	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400b001	          0x4885c0	                           test rax, rax	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400b004	          0x4989c7	                            mov r15, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400b007	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400b00c	     0xf847e0b0000	                            je 0x400bb90	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400b012	    0x48c700000000	                      mov qword [rax], 0	      6821	elf.c	FUNCTION_80	FOR_6
0x400b019	        0x498b4500	                    mov rax, qword [r13]	      6822	elf.c	FUNCTION_80	FOR_6
0x400b01d	        0x49894708	                mov qword [r15 + 8], rax	      6822	elf.c	FUNCTION_80	FOR_6
0x400b021	        0x498b5508	                mov rdx, qword [r13 + 8]	      6823	elf.c	FUNCTION_80	FOR_6
0x400b025	      0x41804f4001	                 or byte [r15 + 0x40], 1	      6824	elf.c	FUNCTION_80	FOR_6
0x400b02a	          0x4885db	                           test rbx, rbx	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b02d	        0x49895710	             mov qword [r15 + 0x10], rdx	      6823	elf.c	FUNCTION_80	FOR_6
0x400b031	            0x7407	                            je 0x400b03a	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b033	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b038	            0x7418	                            je 0x400b052	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b03a	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b03e	        0x49895718	             mov qword [r15 + 0x18], rdx	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b042	      0x410fb65740	           movzx edx, byte [r15 + 0x40] 	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b047	          0x83e2fd	                     and edx, 0xfffffffd	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b04a	         0xa542473	                or dl, byte [rsp + 0x73]	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b04e	        0x41885740	               mov byte [r15 + 0x40], dl	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400b052	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      6837	elf.c	FUNCTION_80	FOR_6
0x400b056	          0x4885d2	                           test rdx, rdx	      6838	elf.c	FUNCTION_80	FOR_6
0x400b059	     0xf8576010000	                           jne 0x400b1d5	      6838	elf.c	FUNCTION_80	FOR_6
0x400b05f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400b064	        0x498b4d28	            mov rcx, qword [r13 + 0x28] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400b068	          0x8b773c	            mov esi, dword [rdi + 0x3c] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400b06b	          0x4839f1	                            cmp rcx, rsi	      6838	elf.c	FUNCTION_80	FOR_6
0x400b06e	     0xf82b4050000	                            jb 0x400b628	      6838	elf.c	FUNCTION_80	FOR_6
0x400b074	      0x410fb67740	           movzx esi, byte [r15 + 0x40] 	      6837	elf.c	FUNCTION_80	FOR_6
0x400b079	        0x8b7c2474	            mov edi, dword [rsp + 0x74] 	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b07d	          0x83ce10	                            or esi, 0x10	      6837	elf.c	FUNCTION_80	FOR_6
0x400b080	          0x83e6df	                     and esi, 0xffffffdf	      6839	elf.c	FUNCTION_80	FOR_6
0x400b083	            0x85ff	                           test edi, edi	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b085	        0x41887740	              mov byte [r15 + 0x40], sil	      6839	elf.c	FUNCTION_80	FOR_6
0x400b089	            0x740a	                            je 0x400b095	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b08b	        0x4883f801	                              cmp rax, 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b08f	     0xf843f050000	                            je 0x400b5d4	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b095	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b09a	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b09e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0a3	          0x4801ca	                            add rdx, rcx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0a6	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0a9	         0xfaf4f40	            imul ecx, dword [rdi + 0x40]	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0ad	          0x4801f1	                            add rcx, rsi	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0b0	          0x4839ca	                            cmp rdx, rcx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0b3	     0xf8207010000	                            jb 0x400b1c0	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0b9	      0xba01000000	                              mov edx, 1	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0be	      0x410fb64f40	           movzx ecx, byte [r15 + 0x40] 	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0c3	          0xc1e205	                              shl edx, 5	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0c6	          0x83e1df	                     and ecx, 0xffffffdf	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0c9	             0x9ca	                             or edx, ecx	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0cb	        0x4883f801	                              cmp rax, 1	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400b0cf	        0x41885740	               mov byte [r15 + 0x40], dl	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b0d3	     0xf8470010000	                            je 0x400b249	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400b0d9	          0x4585c0	                           test r8d, r8d	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b0dc	     0xf857c010000	                           jne 0x400b25e	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b0e2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b0e7	    0x41c747440000	               mov dword [r15 + 0x44], 0	      6870	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b0ef	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      6872	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b0f4	          0x4c8938	                    mov qword [rax], r15	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b0f7	      0x8344245001	               add dword [rsp + 0x50], 1	      6779	elf.c	FUNCTION_80	FOR_6
0x400b0fc	        0x4983c540	                           add r13, 0x40	      6779	elf.c	FUNCTION_80	FOR_6
0x400b100	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      6779	elf.c	FUNCTION_80	FOR_6
0x400b104	        0x3944245c	            cmp dword [rsp + 0x5c], eax 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b108	     0xf8752fdffff	                            ja 0x400ae60	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b10e	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      7152	elf.c	FUNCTION_80	CALL_26
0x400b113	    0x4883bc248000	               cmp qword [rsp + 0x80], 0	      7157	elf.c	FUNCTION_80	IF_43
0x400b11c	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400b124	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400b129	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400b130	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400b137	          0x488902	                    mov qword [rdx], rax	      7152	elf.c	FUNCTION_80	CALL_26
0x400b13a	     0xf8429faffff	                            je 0x400ab69	      7157	elf.c	FUNCTION_80	IF_43
0x400b140	          0x4885c0	                           test rax, rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b143	     0xf8420faffff	                            je 0x400ab69	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b149	          0x4889c1	                            mov rcx, rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b14c	            0x31d2	                            xor edx, edx	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b14e	          0x488b09	                    mov rcx, qword [rcx]	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b151	          0x83c201	                              add edx, 1	      7162	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b154	          0x4885c9	                           test rcx, rcx	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b157	            0x75f5	                           jne 0x400b14e	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b159	    0x3b94248c0000	            cmp edx, dword [rsp + 0x8c] 	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x400b160	            0x762a	                           jbe 0x400b18c	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x400b162	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b167	    0x2b94248c0000	             sub edx, dword [rsp + 0x8c]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b16e	         0xfaf5340	            imul edx, dword [rbx + 0x40]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b172	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b17a	        0x48295318	             sub qword [rbx + 0x18], rdx	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b17e	            0xeb0c	                           jmp 0x400b18c	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b180	          0x488b00	                    mov rax, qword [rax]	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400b183	          0x4885c0	                           test rax, rax	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400b186	     0xf84ddf9ffff	                            je 0x400ab69	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400b18c	      0x4883780806	                  cmp qword [rax + 8], 6	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b191	            0x75ed	                           jne 0x400b180	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b193	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b19b	            0x31d2	                            xor edx, edx	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b19d	        0xf6434010	           test byte [rbx + 0x40], 0x10 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1a1	            0x7408	                            je 0x400b1ab	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1a3	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1a8	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1ab	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1b3	        0x48035318	             add rdx, qword [rbx + 0x18]	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1b7	        0x48895018	             mov qword [rax + 0x18], rdx	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1bb	      0xe9a9f9ffff	                           jmp 0x400ab69	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b1c0	            0x31d2	                            xor edx, edx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1c2	      0xe9f7feffff	                           jmp 0x400b0be	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1c7	          0x80e504	                               and ch, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b1ca	     0xf8549fdffff	                           jne 0x400af19	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b1d0	      0xe95bfdffff	                           jmp 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b1d5	      0x41806740cf	             and byte [r15 + 0x40], 0xcf	      6839	elf.c	FUNCTION_80	FOR_6
0x400b1da	        0x4883f801	                              cmp rax, 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1de	            0x750c	                           jne 0x400b1ec	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1e0	        0x8b7c2474	            mov edi, dword [rsp + 0x74] 	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1e4	            0x85ff	                           test edi, edi	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1e6	     0xf85e8030000	                           jne 0x400b5d4	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1ec	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1f1	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1f5	          0x4839f2	                            cmp rdx, rsi	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1f8	            0x77c6	                            ja 0x400b1c0	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1fa	        0x498b4d28	            mov rcx, qword [r13 + 0x28] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b1fe	      0xe99bfeffff	                           jmp 0x400b09e	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b203	    0x81e100050000	                          and ecx, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b209	    0x81f900040000	                          cmp ecx, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b20f	            0x740b	                            je 0x400b21c	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b211	      0x4883783800	               cmp qword [rax + 0x38], 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b216	     0xf85fdfcffff	                           jne 0x400af19	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b21c	          0x4d85d2	                           test r10, r10	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b21f	     0xf849c080000	                            je 0x400bac1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b225	        0x4c395030	            cmp qword [rax + 0x30], r10 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b229	     0xf85eafcffff	                           jne 0x400af19	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b22f	          0x488b30	                    mov rsi, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b232	      0xbf00000000	                              mov edi, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b237	      0xb909000000	                              mov ecx, 9	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b23c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b23e	     0xf84d5fcffff	                            je 0x400af19	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b244	      0xe9e7fcffff	                           jmp 0x400af30	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400b249	          0x83e220	                           and edx, 0x20	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400b24c	       0xf44442474	           cmove eax, dword [rsp + 0x74]	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400b251	          0x4585c0	                           test r8d, r8d	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b254	        0x89442474	             mov dword [rsp + 0x74], eax	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400b258	     0xf8489030000	                            je 0x400b5e7	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b25e	      0xbe08000000	                              mov esi, 8	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400b263	          0x4889ef	                            mov rdi, rbp	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400b266	      0x4489442410	             mov dword [rsp + 0x10], r8d	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400b26b	      0xe800000000	                          call 0x400b270	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400b270	          0x4885c0	                           test rax, rax	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x400b273	          0x4989c1	                             mov r9, rax	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400b276	     0xf8414090000	                            je 0x400bb90	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x400b27c	          0x4885db	                           test rbx, rbx	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b27f	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b284	     0xf84f70c0000	                            je 0x400bf81	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b28a	        0x498b6d20	            mov rbp, qword [r13 + 0x20] 	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b28e	          0x4531e4	                          xor r12d, r12d	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b291	          0x4531f6	                          xor r14d, r14d	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b294	    0xc74424100000	               mov dword [rsp + 0x10], 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b29c	          0x4531d2	                          xor r10d, r10d	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b29f	      0x4489442418	             mov dword [rsp + 0x18], r8d	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b2a4	      0xe9dc010000	                           jmp 0x400b485	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b2a9	     0xf1f80000000	                         nop dword [rax]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b2b0	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2b4	          0x4839d5	                            cmp rbp, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2b7	     0xf8753020000	                            ja 0x400b510	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2bd	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2c0	            0x89c8	                            mov eax, ecx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2c2	      0x2500050000	                          and eax, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2c7	      0x3d00040000	                          cmp eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2cc	        0x498b4500	                    mov rax, qword [r13]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2d0	     0xf8440020000	                            je 0x400b516	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2d6	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2da	          0x4801d6	                            add rsi, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2dd	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2e1	        0x49395528	            cmp qword [r13 + 0x28], rdx 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2e5	      0x490f435528	          cmovae rdx, qword [r13 + 0x28]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2ea	          0x4801ea	                            add rdx, rbp	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2ed	          0x4839d6	                            cmp rsi, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2f0	     0xf87da010000	                            ja 0x400b4d0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2f6	          0xf6c101	                              test cl, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2f9	     0xf84d1010000	                            je 0x400b4d0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b2ff	    0x483d51e57464	                     cmp rax, 0x6474e551	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b305	     0xf846d010000	                            je 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b30b	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b30f	     0xf84ab020000	                            je 0x400b5c0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b315	        0x4883f801	                              cmp rax, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b319	     0xf848f020000	                            je 0x400b5ae	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b31f	          0xf6c504	                              test ch, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b322	     0xf8550010000	                           jne 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b328	          0x4531db	                          xor r11d, r11d	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b32b	        0x4883f802	                              cmp rax, 2	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b32f	     0xf842d070000	                            je 0x400ba62	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b335	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b339	          0x4885d2	                           test rdx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b33c	     0xf8436010000	                            je 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b342	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b349	        0x418d7a01	                      lea edi, [r10 + 1]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b34d	        0x4b891cd1	             mov qword [r9 + r10*8], rbx	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b351	            0x85f6	                           test esi, esi	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b353	     0xf854c020000	                           jne 0x400b5a5	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b359	        0x4d8b5518	            mov r10, qword [r13 + 0x18] 	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b35d	          0x4d85d2	                           test r10, r10	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b360	     0xf843f020000	                            je 0x400b5a5	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b366	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b36b	    0xf6868a030000	          test byte [rsi + 0x38a], 0x40 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b372	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b376	            0x757d	                           jne 0x400b3f5	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b378	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b37c	            0x85c9	                           test ecx, ecx	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b37e	            0x7575	                           jne 0x400b3f5	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b380	          0x4885f6	                           test rsi, rsi	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b383	            0x7470	                            je 0x400b3f5	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b385	      0x410fb64f40	           movzx ecx, byte [r15 + 0x40] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b38a	    0x48c744242800	               mov qword [rsp + 0x28], 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b393	          0xf6c110	                           test cl, 0x10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b396	            0x740e	                            je 0x400b3a6	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b398	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b39d	        0x458b403c	              mov r8d, dword [r8 + 0x3c]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3a1	      0x4c89442428	              mov qword [rsp + 0x28], r8	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3a6	          0x80e120	                            and cl, 0x20	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3a9	    0x48c744243000	               mov qword [rsp + 0x30], 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3b2	            0x7413	                            je 0x400b3c7	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3b4	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3b9	        0x448b4144	            mov r8d, dword [rcx + 0x44] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3bd	      0x440faf4140	            imul r8d, dword [rcx + 0x40]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3c2	      0x4c89442430	              mov qword [rsp + 0x30], r8	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3c7	          0x8b4a70	            mov ecx, dword [rdx + 0x70] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3ca	    0x41b801000000	                              mov r8d, 1	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3d0	          0x49d3e0	                              shl r8, cl	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3d3	          0x4c89c1	                             mov rcx, r8	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3d6	      0x4f8d4402ff	                  lea r8, [r10 + r8 - 1]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3db	      0x4c03442428	              add r8, qword [rsp + 0x28]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3e0	      0x4c03442430	              add r8, qword [rsp + 0x30]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3e5	          0x48f7d9	                                 neg rcx	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3e8	          0x4c21c1	                             and rcx, r8	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3eb	        0x483b4a28	            cmp rcx, qword [rdx + 0x28] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3ef	     0xf84260c0000	                            je 0x400c01b	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22	CALL_14
0x400b3f5	        0x4d8b5718	            mov r10, qword [r15 + 0x18] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b3f9	          0x4939f2	                            cmp r10, rsi	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b3fc	     0xf8736010000	                            ja 0x400b538	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b402	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b405	    0x81e100050000	                          and ecx, 0x500	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b40b	    0x81f900040000	                          cmp ecx, 0x400	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b411	     0xf85a1060000	                           jne 0x400bab8	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b417	            0x31c9	                            xor ecx, ecx	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b419	          0x4584db	                         test r11b, r11b	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b41c	     0xf8596060000	                           jne 0x400bab8	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b422	          0x4801f1	                            add rcx, rsi	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b425	          0x4989c8	                             mov r8, rcx	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b428	        0x498b4d30	            mov rcx, qword [r13 + 0x30] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b42c	        0x49394d28	            cmp qword [r13 + 0x28], rcx 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b430	      0x490f434d28	          cmovae rcx, qword [r13 + 0x28]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b435	          0x4c01d1	                            add rcx, r10	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b438	          0x4939c8	                             cmp r8, rcx	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b43b	     0xf87f7000000	                            ja 0x400b538	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b441	          0x4d85f6	                           test r14, r14	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b444	     0xf84a20a0000	                            je 0x400beec	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b44a	        0x49397630	            cmp qword [r14 + 0x30], rsi 	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b44e	        0x4c0f47f2	                          cmova r14, rdx	      6956	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b452	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b456	            0x89f0	                            mov eax, esi	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b458	      0x498954c748	     mov qword [r15 + rax*8 + 0x48], rdx	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b45d	            0x89f0	                            mov eax, esi	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b45f	          0x83c001	                              add eax, 1	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b462	        0x89442410	             mov dword [rsp + 0x10], eax	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b466	        0x397c2418	            cmp dword [rsp + 0x18], edi 	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400b46a	     0xf84720a0000	                            je 0x400bee2	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400b470	          0x4189fa	                           mov r10d, edi	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400b473	       0xf1f440000	                   nop dword [rax + rax]	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400b478	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6921	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b47c	          0x4885db	                           test rbx, rbx	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b47f	     0xf84c4010000	                            je 0x400b649	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b485	          0x4885ed	                           test rbp, rbp	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b488	     0xf8522feffff	                           jne 0x400b2b0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b48e	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b492	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b496	          0x4839d6	                            cmp rsi, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b499	            0x7275	                            jb 0x400b510	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b49b	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b49e	            0x89c8	                            mov eax, ecx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4a0	      0x2500050000	                          and eax, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4a5	      0x3d00040000	                          cmp eax, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4aa	        0x498b4500	                    mov rax, qword [r13]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4ae	            0x7477	                            je 0x400b527	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4b0	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4b4	          0x4801f7	                            add rdi, rsi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4b7	        0x498b7530	            mov rsi, qword [r13 + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4bb	        0x49397528	            cmp qword [r13 + 0x28], rsi 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4bf	      0x490f437528	          cmovae rsi, qword [r13 + 0x28]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4c4	          0x4801d6	                            add rsi, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4c7	          0x4839f7	                            cmp rdi, rsi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4ca	     0xf8626feffff	                           jbe 0x400b2f6	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4d0	        0x4883f804	                              cmp rax, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4d4	            0x75a2	                           jne 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4d6	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4dd	        0x837a0407	                  cmp dword [rdx + 4], 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4e1	            0x7595	                           jne 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4e3	    0x488b8b900000	            mov rcx, qword [rbx + 0x90] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4ea	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4ee	          0x4839d1	                            cmp rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4f1	     0xf8281ffffff	                            jb 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4f7	        0x48034b38	             add rcx, qword [rbx + 0x38]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4fb	        0x49035528	             add rdx, qword [r13 + 0x28]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b4ff	          0x4839d1	                            cmp rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b502	     0xf8770ffffff	                            ja 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b508	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b50b	      0xe90ffeffff	                           jmp 0x400b31f	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b510	        0x498b4500	                    mov rax, qword [r13]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b514	            0xebba	                           jmp 0x400b4d0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b516	            0x31f6	                            xor esi, esi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b518	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b51c	     0xf85b8fdffff	                           jne 0x400b2da	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b522	      0xe9affdffff	                           jmp 0x400b2d6	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b527	            0x31ff	                            xor edi, edi	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b529	        0x4883f807	                              cmp rax, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b52d	     0xf8581ffffff	                           jne 0x400b4b4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b533	      0xe978ffffff	                           jmp 0x400b4b0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b538	        0x4883f804	                              cmp rax, 4	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b53c	     0xf8492050000	                            je 0x400bad4	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b542	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b547	    0xf6808a030000	          test byte [rax + 0x38a], 0x40 	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b54e	            0x7449	                            je 0x400b599	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b550	        0x4c8b5228	            mov r10, qword [rdx + 0x28] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b554	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b558	          0x4939c2	                            cmp r10, rax	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b55b	            0x723c	                            jb 0x400b599	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b55d	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b560	    0x81e100050000	                          and ecx, 0x500	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b566	    0x81f900040000	                          cmp ecx, 0x400	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b56c	     0xf8585060000	                           jne 0x400bbf7	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b572	            0x31c9	                            xor ecx, ecx	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b574	          0x4584db	                         test r11b, r11b	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b577	     0xf857a060000	                           jne 0x400bbf7	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b57d	          0x4c01d1	                            add rcx, r10	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b580	        0x4d8b5d30	            mov r11, qword [r13 + 0x30] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b584	        0x4d395d28	            cmp qword [r13 + 0x28], r11 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b588	      0x4d0f435d28	          cmovae r11, qword [r13 + 0x28]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b58d	          0x4901c3	                            add r11, rax	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b590	          0x4c39d9	                            cmp rcx, r11	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b593	     0xf86a8feffff	                           jbe 0x400b441	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b599	          0x4d85e4	                           test r12, r12	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400b59c	        0x4c0f44e2	                          cmove r12, rdx	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400b5a0	      0xe9c1feffff	                           jmp 0x400b466	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400b5a5	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400b5a9	      0xe947feffff	                           jmp 0x400b3f5	      6964	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400b5ae	        0xf6432440	           test byte [rbx + 0x24], 0x40 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5b2	     0xf85c0feffff	                           jne 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5b8	          0x4531db	                          xor r11d, r11d	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5bb	      0xe975fdffff	                           jmp 0x400b335	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5c0	          0x80e504	                               and ch, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5c3	     0xf84affeffff	                            je 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5c9	    0x41bb01000000	                             mov r11d, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5cf	      0xe961fdffff	                           jmp 0x400b335	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b5d4	          0x4585c0	                           test r8d, r8d	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b5d7	     0xf8581fcffff	                           jne 0x400b25e	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b5dd	        0x4883f801	                              cmp rax, 1	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b5e1	     0xf85fbfaffff	                           jne 0x400b0e2	      6862	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b5e7	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b5ec	            0x750b	                           jne 0x400b5f9	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b5ee	      0x49837d3000	               cmp qword [r13 + 0x30], 0	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b5f3	     0xf85e9faffff	                           jne 0x400b0e2	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b5f9	        0x498b5d18	            mov rbx, qword [r13 + 0x18] 	      6868	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b5fd	      0xba05000000	                              mov edx, 5	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400b602	      0xbe00000000	                              mov esi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400b607	      0xbf00000000	                              mov edi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400b60c	      0xe800000000	                          call 0x400b611	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400b611	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400b616	          0x4889c7	                            mov rdi, rax	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400b619	          0x4889da	                            mov rdx, rbx	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400b61c	            0x31c0	                            xor eax, eax	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400b61e	      0xe800000000	                          call 0x400b623	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400b623	      0xe9bafaffff	                           jmp 0x400b0e2	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400b628	        0x8b4c2474	            mov ecx, dword [rsp + 0x74] 	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b62c	      0x41806740cf	             and byte [r15 + 0x40], 0xcf	      6839	elf.c	FUNCTION_80	FOR_6
0x400b631	            0x85c9	                           test ecx, ecx	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b633	            0x7406	                            je 0x400b63b	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b635	        0x4883f801	                              cmp rax, 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b639	            0x7499	                            je 0x400b5d4	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b63b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b640	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b644	      0xe9b1fbffff	                           jmp 0x400b1fa	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b649	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400b64e	          0x4539d0	                           cmp r8d, r10d	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b651	            0x7423	                            je 0x400b676	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b653	      0xbe3c1b0000	                         mov esi, 0x1b3c	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b658	      0xbf00000000	                              mov edi, 0	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b65d	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b662	      0x4489442418	             mov dword [rsp + 0x18], r8d	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b667	      0xe800000000	                          call 0x400b66c	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b66c	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b671	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      6972	elf.c	FUNCTION_80	FOR_6	CALL_15
0x400b676	      0x4439442410	            cmp dword [rsp + 0x10], r8d 	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b67b	     0xf8416050000	                            je 0x400bb97	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b681	          0x4d85f6	                           test r14, r14	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x400b684	      0x410fb65740	           movzx edx, byte [r15 + 0x40] 	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b689	        0x4d0f44f4	                          cmove r14, r12	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x400b68d	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x400b691	          0xf6c220	                           test dl, 0x20	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b694	        0x49894718	             mov qword [r15 + 0x18], rax	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x400b698	            0x7424	                            je 0x400b6be	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b69a	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b69f	    0x4c89bc248000	             mov qword [rsp + 0x80], r15	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b6a7	          0x8b7b44	            mov edi, dword [rbx + 0x44] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b6aa	            0x89f9	                            mov ecx, edi	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b6ac	    0x89bc248c0000	             mov dword [rsp + 0x8c], edi	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b6b3	         0xfaf4b40	            imul ecx, dword [rbx + 0x40]	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b6b7	          0x4829c8	                            sub rax, rcx	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b6ba	        0x49894718	             mov qword [r15 + 0x18], rax	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b6be	          0x83e210	                           and edx, 0x10	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6c1	            0x743e	                            je 0x400b701	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6c3	        0x418b4e70	            mov ecx, dword [r14 + 0x70] 	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6c7	      0xb801000000	                              mov eax, 1	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6cc	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6d0	          0x48d3e0	                             shl rax, cl	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6d3	          0x4889c1	                            mov rcx, rax	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6d6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6db	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6de	          0x4829c2	                            sub rdx, rax	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6e1	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b6e5	          0x4885c0	                           test rax, rax	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b6e8	     0xf8425050000	                            je 0x400bc13	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b6ee	          0x4839c1	                            cmp rcx, rax	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b6f1	     0xf861c050000	                           jbe 0x400bc13	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b6f7	          0x48f7d8	                                 neg rax	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6fa	          0x4821d0	                            and rax, rdx	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b6fd	        0x49894718	             mov qword [r15 + 0x18], rax	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b701	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b706	          0x4531d2	                          xor r10d, r10d	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b709	          0x48f7d8	                                 neg rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b70c	      0x4889442418	             mov qword [rsp + 0x18], rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b711	          0x4c89f8	                            mov rax, r15	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b714	          0x4d89cf	                             mov r15, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b717	    0x660f1f840000	                    nop word [rax + rax]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b720	          0x4c89ff	                            mov rdi, r15	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b723	    0xc74044000000	               mov dword [rax + 0x44], 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b72a	          0x4989c7	                            mov r15, rax	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b72d	            0x31ed	                            xor ebp, ebp	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b72f	          0x4531f6	                          xor r14d, r14d	      7050	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b732	          0x4889f8	                            mov rax, rdi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b735	      0xe9d3000000	                           jmp 0x400b80d	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b73a	    0x660f1f440000	                    nop word [rax + rax]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b740	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b743	    0x81e100050000	                          and ecx, 0x500	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b749	    0x81f900040000	                          cmp ecx, 0x400	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b74f	     0xf84ab010000	                            je 0x400b900	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b755	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b759	          0x4801d7	                            add rdi, rdx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b75c	        0x498b4d30	            mov rcx, qword [r13 + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b760	        0x49394d28	            cmp qword [r13 + 0x28], rcx 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b764	      0x490f434d28	          cmovae rcx, qword [r13 + 0x28]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b769	          0x4801f1	                            add rcx, rsi	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b76c	          0x4839cf	                            cmp rdi, rcx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b76f	     0xf87c0000000	                            ja 0x400b835	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b775	        0x418b7f44	            mov edi, dword [r15 + 0x44] 	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400b779	            0x85ff	                           test edi, edi	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400b77b	     0xf8597010000	                           jne 0x400b918	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400b781	      0x410fb64f40	           movzx ecx, byte [r15 + 0x40] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b786	          0x4531c9	                            xor r9d, r9d	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b789	          0xf6c110	                           test cl, 0x10	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b78c	            0x7409	                            je 0x400b797	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b78e	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b793	        0x458b4b3c	            mov r9d, dword [r11 + 0x3c] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b797	        0x4883ee01	                              sub rsi, 1	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b79b	          0x4531db	                          xor r11d, r11d	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b79e	          0x83e120	                           and ecx, 0x20	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7a1	      0x4889742410	             mov qword [rsp + 0x10], rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7a6	            0x740e	                            je 0x400b7b6	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7a8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7ad	        0x448b5e44	           mov r11d, dword [rsi + 0x44] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7b1	      0x440faf5e40	           imul r11d, dword [rsi + 0x40]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7b6	          0x8b4b70	            mov ecx, dword [rbx + 0x70] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7b9	      0xbe01000000	                              mov esi, 1	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7be	          0x48d3e6	                             shl rsi, cl	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7c1	          0x4889f1	                            mov rcx, rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7c4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7c9	          0x4801ce	                            add rsi, rcx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7cc	          0x48f7d9	                                 neg rcx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7cf	          0x4c01ce	                             add rsi, r9	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7d2	          0x4c01de	                            add rsi, r11	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7d5	          0x4821ce	                            and rsi, rcx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7d8	          0x4839f2	                            cmp rdx, rsi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7db	     0xf8526080000	                           jne 0x400c007	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36	CALL_18
0x400b7e1	        0x4183c201	                             add r10d, 1	      7105	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b7e5	      0x49837d0001	                      cmp qword [r13], 1	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b7ea	          0x8d5701	                      lea edx, [rdi + 1]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b7ed	        0x41895744	             mov dword [r15 + 0x44], edx	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b7f1	      0x49895cff48	     mov qword [r15 + rdi*8 + 0x48], rbx	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b7f6	    0x48c704e80000	              mov qword [rax + rbp*8], 0	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b7fe	     0xf84b4010000	                            je 0x400b9b8	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b804	        0x4883c501	                              add rbp, 1	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b808	          0x4139e8	                            cmp r8d, ebp	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b80b	            0x763f	                           jbe 0x400b84c	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b80d	        0x4c8b24e8	            mov r12, qword [rax + rbp*8]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b811	          0x4d85e4	                           test r12, r12	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x400b814	            0x74ee	                            je 0x400b804	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x400b816	      0x498b5c2468	            mov rbx, qword [r12 + 0x68] 	      7060	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b81b	          0x4885db	                           test rbx, rbx	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b81e	     0xf845c010000	                            je 0x400b980	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b824	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b828	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b82c	          0x4839f2	                            cmp rdx, rsi	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b82f	     0xf830bffffff	                           jae 0x400b740	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b835	      0x49837d0004	                      cmp qword [r13], 4	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b83a	            0x7454	                            je 0x400b890	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b83c	          0x4d85f6	                           test r14, r14	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400b83f	        0x4c0f44f3	                          cmove r14, rbx	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400b843	        0x4883c501	                              add rbp, 1	      7110	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400b847	          0x4139e8	                            cmp r8d, ebp	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b84a	            0x77c1	                            ja 0x400b80d	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b84c	          0x4889c7	                            mov rdi, rax	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b84f	          0x4c89f8	                            mov rax, r15	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b852	        0x448b4844	            mov r9d, dword [rax + 0x44] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400b856	          0x4989ff	                            mov r15, rdi	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400b859	          0x4585c9	                           test r9d, r9d	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400b85c	     0xf84ce010000	                            je 0x400ba30	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400b862	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b867	          0x4539d0	                           cmp r8d, r10d	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b86a	      0x4889442438	             mov qword [rsp + 0x38], rax	      7118	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b86f	          0x488907	                    mov qword [rdi], rax	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b872	     0xf8750010000	                            ja 0x400b9c8	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b878	          0x4d89f9	                             mov r9, r15	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b87b	          0x4c89cf	                             mov rdi, r9	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400b87e	      0xe800000000	                          call 0x400b883	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400b883	      0xe96ff8ffff	                           jmp 0x400b0f7	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400b888	     0xf1f84000000	                   nop dword [rax + rax]	      7149	elf.c	FUNCTION_80	FOR_6	CALL_25
0x400b890	    0x498b8c24e000	            mov rcx, qword [r12 + 0xe0] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b898	        0x83790407	                  cmp dword [rcx + 4], 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b89c	            0x759e	                           jne 0x400b83c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b89e	    0x498bbc249000	            mov rdi, qword [r12 + 0x90] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8a6	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8aa	          0x4839cf	                            cmp rdi, rcx	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8ad	            0x728d	                            jb 0x400b83c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8af	      0x49037c2438	             add rdi, qword [r12 + 0x38]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8b4	        0x49034d28	             add rcx, qword [r13 + 0x28]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8b8	          0x4839cf	                            cmp rdi, rcx	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8bb	     0xf877bffffff	                            ja 0x400b83c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8c1	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8c6	         0xfb67f44	           movzx edi, byte [rdi + 0x44] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8ca	            0x89f9	                            mov ecx, edi	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8cc	      0x40887c2410	              mov byte [rsp + 0x10], dil	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8d1	          0x83e107	                              and ecx, 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8d4	          0x80f903	                               cmp cl, 3	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8d7	     0xf855fffffff	                           jne 0x400b83c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8dd	    0x49837c242800	               cmp qword [r12 + 0x28], 0	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8e3	     0xf8553ffffff	                           jne 0x400b83c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8e9	    0x49837c243000	               cmp qword [r12 + 0x30], 0	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8ef	     0xf8547ffffff	                           jne 0x400b83c	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8f5	      0xe97bfeffff	                           jmp 0x400b775	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b8fa	    0x660f1f440000	                    nop word [rax + rax]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b900	            0x31ff	                            xor edi, edi	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b902	      0x49837d0007	                      cmp qword [r13], 7	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b907	     0xf854cfeffff	                           jne 0x400b759	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b90d	      0xe943feffff	                           jmp 0x400b755	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b912	    0x660f1f440000	                    nop word [rax + rax]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b918	          0x8d4fff	                      lea ecx, [rdi - 1]	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x400b91b	    0x49c7c3ffffff	             mov r11, 0xffffffffffffffff	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b922	      0x498b74cf48	    mov rsi, qword [r15 + rcx*8 + 0x48] 	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x400b927	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b92b	        0x48034e30	             add rcx, qword [rsi + 0x30]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b92f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b934	          0x4801ce	                            add rsi, rcx	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b937	            0x7208	                            jb 0x400b941	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b939	      0x4823742418	             and rsi, qword [rsp + 0x18]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b93e	          0x4989f3	                            mov r11, rsi	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_20
0x400b941	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b946	      0x4c8d4c16ff	                 lea r9, [rsi + rdx - 1]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b94b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b950	          0x4c21ce	                             and rsi, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b953	          0x4c39ca	                             cmp rdx, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b956	    0x49c7c1ffffff	              mov r9, 0xffffffffffffffff	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b95d	        0x490f47f1	                           cmova rsi, r9	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	CALL_21
0x400b961	          0x4839ca	                            cmp rdx, rcx	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b964	     0xf82d2feffff	                            jb 0x400b83c	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b96a	          0x4939f3	                            cmp r11, rsi	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b96d	     0xf836efeffff	                           jae 0x400b7e1	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b973	      0xe9c4feffff	                           jmp 0x400b83c	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b978	     0xf1f84000000	                   nop dword [rax + rax]	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b980	      0xbe961b0000	                         mov esi, 0x1b96	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b985	      0xbf00000000	                              mov edi, 0	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b98a	      0x4489542430	            mov dword [rsp + 0x30], r10d	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b98f	      0x4489442428	             mov dword [rsp + 0x28], r8d	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b994	      0x4889442410	             mov qword [rsp + 0x10], rax	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b999	      0xe800000000	                          call 0x400b99e	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b99e	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b9a3	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b9a8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b9ad	      0xe972feffff	                           jmp 0x400b824	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b9b2	    0x660f1f440000	                    nop word [rax + rax]	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_17
0x400b9b8	    0x41804c242440	              or byte [r12 + 0x24], 0x40	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b9be	      0xe941feffff	                           jmp 0x400b804	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b9c3	       0xf1f440000	                   nop dword [rax + rax]	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b9c8	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400b9cd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400b9d2	      0x4489542428	            mov dword [rsp + 0x28], r10d	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400b9d7	      0x4489442410	             mov dword [rsp + 0x10], r8d	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400b9dc	      0xe800000000	                          call 0x400b9e1	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_23
0x400b9e1	          0x4885c0	                           test rax, rax	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b9e4	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b9e9	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b9ee	     0xf8494010000	                            je 0x400bb88	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b9f4	        0x498b5500	                    mov rdx, qword [r13]	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b9f8	    0x48c700000000	                      mov qword [rax], 0	      7137	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b9ff	        0x48895008	                mov qword [rax + 8], rdx	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba03	        0x498b5508	                mov rdx, qword [r13 + 8]	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba07	        0x48895010	             mov qword [rax + 0x10], rdx	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba0b	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba0f	          0x83ca01	                               or edx, 1	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba12	          0x885040	               mov byte [rax + 0x40], dl	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba15	          0x83e2cd	                     and edx, 0xffffffcd	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba18	         0xa542473	                or dl, byte [rsp + 0x73]	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba1c	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba20	          0x885040	               mov byte [rax + 0x40], dl	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba23	        0x48894818	             mov qword [rax + 0x18], rcx	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba27	      0xe9f4fcffff	                           jmp 0x400b720	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba2c	         0xf1f4000	                         nop dword [rax]	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400ba30	      0xbeca1b0000	                         mov esi, 0x1bca	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba35	      0xbf00000000	                              mov edi, 0	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba3a	      0x4489542430	            mov dword [rsp + 0x30], r10d	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba3f	      0x4489442428	             mov dword [rsp + 0x28], r8d	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba44	      0x4889442410	             mov qword [rsp + 0x10], rax	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba49	      0xe800000000	                          call 0x400ba4e	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba4e	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba53	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba58	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba5d	      0xe900feffff	                           jmp 0x400b862	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_22
0x400ba62	    0x81e100050000	                          and ecx, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba68	    0x81f900040000	                          cmp ecx, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba6e	            0x740b	                            je 0x400ba7b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba70	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba75	     0xf85baf8ffff	                           jne 0x400b335	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba7b	          0x4531db	                          xor r11d, r11d	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba7e	          0x4885ed	                           test rbp, rbp	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba81	      0xb802000000	                              mov eax, 2	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba86	     0xf8474010000	                            je 0x400bc00	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba8c	        0x483b6b30	            cmp rbp, qword [rbx + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba90	     0xf859ff8ffff	                           jne 0x400b335	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba96	          0x488b33	                    mov rsi, qword [rbx]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba99	      0xbf00000000	                              mov edi, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ba9e	      0xb909000000	                              mov ecx, 9	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400baa3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400baa5	     0xf85cdf9ffff	                           jne 0x400b478	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400baab	          0x4531db	                          xor r11d, r11d	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400baae	      0xb802000000	                              mov eax, 2	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400bab3	      0xe97df8ffff	                           jmp 0x400b335	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400bab8	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400babc	      0xe961f9ffff	                           jmp 0x400b422	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bac1	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400bac5	        0x49397d18	            cmp qword [r13 + 0x18], rdi 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400bac9	     0xf854af4ffff	                           jne 0x400af19	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400bacf	      0xe95bf7ffff	                           jmp 0x400b22f	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400bad4	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400badb	        0x83780407	                  cmp dword [rax + 4], 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400badf	     0xf855dfaffff	                           jne 0x400b542	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bae5	    0x488b8b900000	            mov rcx, qword [rbx + 0x90] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400baec	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400baf0	          0x4839c1	                            cmp rcx, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400baf3	     0xf8249faffff	                            jb 0x400b542	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400baf9	        0x48034b38	             add rcx, qword [rbx + 0x38]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bafd	        0x49034528	             add rax, qword [r13 + 0x28]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb01	          0x4839c1	                            cmp rcx, rax	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb04	     0xf8738faffff	                            ja 0x400b542	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb0a	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb0f	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb13	        0x88442428	               mov byte [rsp + 0x28], al	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb17	          0x83e007	                              and eax, 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb1a	            0x3c03	                               cmp al, 3	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb1c	     0xf8520faffff	                           jne 0x400b542	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb22	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb27	     0xf8515faffff	                           jne 0x400b542	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb2d	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb32	     0xf8409f9ffff	                            je 0x400b441	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb38	      0xe905faffff	                           jmp 0x400b542	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb3d	           0xf1f00	                         nop dword [rax]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bb40	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400bb45	      0xbe48000000	                           mov esi, 0x48	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400bb4a	      0xe800000000	                          call 0x400bb4f	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400bb4f	          0x4885c0	                           test rax, rax	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400bb52	          0x4989c7	                            mov r15, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400bb55	            0x7439	                            je 0x400bb90	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400bb57	        0x498b4500	                    mov rax, qword [r13]	      6822	elf.c	FUNCTION_80	FOR_6
0x400bb5b	    0x49c707000000	                      mov qword [r15], 0	      6821	elf.c	FUNCTION_80	FOR_6
0x400bb62	            0x31db	                            xor ebx, ebx	      6794	elf.c	FUNCTION_80	FOR_6
0x400bb64	    0x48c744246848	           mov qword [rsp + 0x68], 0x48 	      6824	elf.c	FUNCTION_80	FOR_6
0x400bb6d	            0x31ed	                            xor ebp, ebp	      6824	elf.c	FUNCTION_80	FOR_6
0x400bb6f	          0x4531c0	                            xor r8d, r8d	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400bb72	        0x49894708	                mov qword [r15 + 8], rax	      6822	elf.c	FUNCTION_80	FOR_6
0x400bb76	        0x498b5508	                mov rdx, qword [r13 + 8]	      6823	elf.c	FUNCTION_80	FOR_6
0x400bb7a	      0x41804f4001	                 or byte [r15 + 0x40], 1	      6824	elf.c	FUNCTION_80	FOR_6
0x400bb7f	        0x49895710	             mov qword [r15 + 0x10], rdx	      6823	elf.c	FUNCTION_80	FOR_6
0x400bb83	      0xe9b2f4ffff	                           jmp 0x400b03a	      6823	elf.c	FUNCTION_80	FOR_6
0x400bb88	          0x4c89ff	                            mov rdi, r15	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_24
0x400bb8b	      0xe800000000	                          call 0x400bb90	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_24
0x400bb90	            0x31c0	                            xor eax, eax	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400bb92	      0xe981efffff	                           jmp 0x400ab18	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400bb97	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x400bb9b	    0x448b94248800	           mov r10d, dword [rsp + 0x88] 	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bba3	        0x41894744	             mov dword [r15 + 0x44], eax	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x400bba7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x400bbac	          0x4585d2	                         test r10d, r10d	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbaf	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      6984	elf.c	FUNCTION_80	FOR_6	IF_27
0x400bbb4	          0x4c8938	                    mov qword [rax], r15	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x400bbb7	     0xf84befcffff	                            je 0x400b87b	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbbd	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbc2	    0xf6808a030000	          test byte [rax + 0x38a], 0x40 	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbc9	     0xf85acfcffff	                           jne 0x400b87b	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbcf	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbd3	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbd7	          0x4839d0	                            cmp rax, rdx	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbda	     0xf849bfcffff	                            je 0x400b87b	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbe0	      0x41f6474030	           test byte [r15 + 0x40], 0x30 	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbe5	     0xf8590fcffff	                           jne 0x400b87b	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbeb	          0x4829d0	                            sub rax, rdx	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbee	        0x49894720	             mov qword [r15 + 0x20], rax	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbf2	      0xe984fcffff	                           jmp 0x400b87b	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400bbf7	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bbfb	      0xe97df9ffff	                           jmp 0x400b57d	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400bc00	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400bc04	        0x49397d18	            cmp qword [r13 + 0x18], rdi 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400bc08	     0xf8527f7ffff	                           jne 0x400b335	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400bc0e	      0xe983feffff	                           jmp 0x400ba96	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400bc13	          0x4889c8	                            mov rax, rcx	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400bc16	      0xe9dcfaffff	                           jmp 0x400b6f7	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400bc1b	    0xc78424880000	               mov dword [rsp + 0x88], 1	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x400bc26	      0xe944f0ffff	                           jmp 0x400ac6f	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x400bc2b	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400bc32	    0xf6808a030000	          test byte [rax + 0x38a], 0x40 	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400bc39	     0xf852b020000	                           jne 0x400be6a	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400bc3f	      0x488b442408	                mov rax, qword [rsp + 8]	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc44	    0x4c8b98900000	            mov r11, qword [rax + 0x90] 	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc4b	          0x4d85db	                           test r11, r11	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc4e	          0x4c89d8	                            mov rax, r11	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc51	            0x740d	                            je 0x400bc60	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc53	        0x806024bf	             and byte [rax + 0x24], 0xbf	      7393	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc57	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7392	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc5b	          0x4885c0	                           test rax, rax	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc5e	            0x75f3	                           jne 0x400bc53	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400bc60	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_5
0x400bc65	        0x448b6844	           mov r13d, dword [rax + 0x44] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_5
0x400bc69	          0x4585ed	                         test r13d, r13d	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bc6c	     0xf84ec020000	                            je 0x400bf5e	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bc72	        0x458d75ff	                     lea r14d, [r13 - 1]	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bc76	          0x4889df	                            mov rdi, rbx	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bc79	        0x4983c601	                              add r14, 1	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bc7d	        0x49c1e606	                              shl r14, 6	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bc81	          0x4901de	                            add r14, rbx	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bc84	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bc89	            0x7518	                           jne 0x400bca3	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bc8b	      0x48837f3000	               cmp qword [rdi + 0x30], 0	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bc90	            0x7511	                           jne 0x400bca3	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bc92	          0x488b07	                    mov rax, qword [rdi]	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bc95	        0x4883e802	                              sub rax, 2	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bc99	        0x4883f801	                              cmp rax, 1	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bc9d	     0xf86d7010000	                           jbe 0x400be7a	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400bca3	    0x498b84249000	            mov rax, qword [r12 + 0x90] 	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bcab	          0x4885c0	                           test rax, rax	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bcae	     0xf8529010000	                           jne 0x400bddd	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bcb4	      0xe998020000	                           jmp 0x400bf51	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bcb9	     0xf1f80000000	                         nop dword [rax]	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bcc0	        0x4d8d50fa	                       lea r10, [r8 - 6]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcc4	        0x4983fa01	                              cmp r10, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcc8	     0xf8602010000	                           jbe 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcce	          0x83e102	                              and ecx, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcd1	     0xf8558010000	                           jne 0x400be2f	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcd7	        0x4d8d48ff	                        lea r9, [r8 - 1]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcdb	        0x4983f901	                               cmp r9, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcdf	     0xf86eb000000	                           jbe 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bce5	    0x4d8d88b01a8b	               lea r9, [r8 - 0x6474e550]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcec	        0x4983f902	                               cmp r9, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcf0	     0xf86da000000	                           jbe 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcf6	          0x8b6e04	                mov ebp, dword [rsi + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcf9	          0x83fd08	                              cmp ebp, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcfc	            0x7479	                            je 0x400bd77	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bcfe	        0x4c8b5618	            mov r10, qword [rsi + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd02	        0x4c8b7f10	            mov r15, qword [rdi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd06	          0x4d39fa	                            cmp r10, r15	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd09	     0xf82c1000000	                            jb 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd0f	        0x4c8b4e20	              mov r9, qword [rsi + 0x20]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd13	          0x4d01ca	                             add r10, r9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd16	          0x4d29fa	                            sub r10, r15	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd19	        0x4c3b5728	            cmp r10, qword [rdi + 0x28] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd1d	     0xf87ad000000	                            ja 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd23	          0x4885c9	                           test rcx, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd26	     0xf8568020000	                           jne 0x400bf94	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd2c	        0x4983f802	                               cmp r8, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd30	            0x7545	                           jne 0x400bd77	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd32	      0x48837e2000	               cmp qword [rsi + 0x20], 0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd37	            0x753e	                           jne 0x400bd77	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd39	        0x4c8b4f30	              mov r9, qword [rdi + 0x30]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd3d	          0x4d85c9	                             test r9, r9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd40	            0x7435	                            je 0x400bd77	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd42	          0x83fd08	                              cmp ebp, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd45	            0x7416	                            je 0x400bd5d	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd47	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd4b	        0x4c8b5710	            mov r10, qword [rdi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd4f	          0x4d39d0	                             cmp r8, r10	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd52	            0x767c	                           jbe 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd54	          0x4d29d0	                             sub r8, r10	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd57	        0x4c3b4728	              cmp r8, qword [rdi + 0x28]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd5b	            0x7373	                           jae 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd5d	          0x4885c9	                           test rcx, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd60	            0x7415	                            je 0x400bd77	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd62	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd66	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd6a	          0x4839f1	                            cmp rcx, rsi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd6d	            0x7661	                           jbe 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd6f	          0x4829f1	                            sub rcx, rsi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd72	          0x4939c9	                             cmp r9, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd75	            0x7659	                           jbe 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bd77	          0x4885d2	                           test rdx, rdx	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd7a	     0xf84fa000000	                            je 0x400be7a	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd80	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd83	          0x397020	            cmp dword [rax + 0x20], esi 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd86	     0xf85ee000000	                           jne 0x400be7a	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd8c	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd90	        0x48397030	            cmp qword [rax + 0x30], rsi 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd94	     0xf85e0000000	                           jne 0x400be7a	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd9a	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bd9e	        0x48397028	            cmp qword [rax + 0x28], rsi 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bda2	     0xf85d2000000	                           jne 0x400be7a	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bda8	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdac	        0x48397038	            cmp qword [rax + 0x38], rsi 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdb0	     0xf85c4000000	                           jne 0x400be7a	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdb6	        0x488b7240	            mov rsi, qword [rdx + 0x40] 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdba	        0x48397040	            cmp qword [rax + 0x40], rsi 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdbe	     0xf85b6000000	                           jne 0x400be7a	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdc4	          0x8b5270	            mov edx, dword [rdx + 0x70] 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdc7	          0x395070	            cmp dword [rax + 0x70], edx 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdca	     0xf85aa000000	                           jne 0x400be7a	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400bdd0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7410	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bdd4	          0x4885c0	                           test rax, rax	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bdd7	     0xf8474010000	                            je 0x400bf51	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bddd	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      7414	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400bde1	          0x4885d2	                           test rdx, rdx	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400bde4	            0x7404	                            je 0x400bdea	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400bde6	        0x804a2440	              or byte [rdx + 0x24], 0x40	      7416	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400bdea	    0x488bb0e00000	            mov rsi, qword [rax + 0xe0] 	      7419	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	CALL_7
0x400bdf1	          0x4c8b07	                     mov r8, qword [rdi]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bdf4	        0x488b4e08	                mov rcx, qword [rsi + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bdf8	          0x4989c9	                             mov r9, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bdfb	    0x4181e1000400	                          and r9d, 0x400	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be02	     0xf84b8feffff	                            je 0x400bcc0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be08	        0x4983f807	                               cmp r8, 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be0c	        0x400f94c5	                                sete bpl	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be10	    0x4981f852e574	                      cmp r8, 0x6474e552	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be17	        0x410f94c2	                               sete r10b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be1b	          0x4408d5	                            or bpl, r10b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be1e	     0xf85aafeffff	                           jne 0x400bcce	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be24	        0x4983f801	                               cmp r8, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be28	            0x75a6	                           jne 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be2a	      0xe99ffeffff	                           jmp 0x400bcce	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be2f	          0x8b6e04	                mov ebp, dword [rsi + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be32	          0x83fd08	                              cmp ebp, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be35	     0xf85c3feffff	                           jne 0x400bcfe	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be3b	        0x4c8b5610	            mov r10, qword [rsi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be3f	        0x4c8b7f18	            mov r15, qword [rdi + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be43	          0x4d39fa	                            cmp r10, r15	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be46	            0x7288	                            jb 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be48	          0x4d29fa	                            sub r10, r15	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be4b	          0x4d85c9	                             test r9, r9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be4e	     0xf8559010000	                           jne 0x400bfad	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be54	        0x4c8b4e20	              mov r9, qword [rsi + 0x20]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be58	          0x4d01d1	                             add r9, r10	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be5b	        0x4c3b4f30	              cmp r9, qword [rdi + 0x30]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be5f	     0xf876bffffff	                            ja 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be65	      0xe9c2feffff	                           jmp 0x400bd2c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400be6a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_10
0x400be6f	            0x31ed	                            xor ebp, ebp	      7458	elf.c	FUNCTION_82	IF_10
0x400be71	        0x448b6844	           mov r13d, dword [rax + 0x44] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_10
0x400be75	          0x4585ed	                         test r13d, r13d	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400be78	            0x7437	                            je 0x400beb1	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400be7a	          0x4531ff	                          xor r15d, r15d	      7358	elf.c	FUNCTION_81
0x400be7d	            0x31ed	                            xor ebp, ebp	      7358	elf.c	FUNCTION_81
0x400be7f	            0xeb0d	                           jmp 0x400be8e	      7358	elf.c	FUNCTION_81
0x400be81	        0x4183c701	                             add r15d, 1	      7462	elf.c	FUNCTION_82	IF_10	FOR_5
0x400be85	        0x4883c340	                           add rbx, 0x40	      7462	elf.c	FUNCTION_82	IF_10	FOR_5
0x400be89	          0x4539ef	                          cmp r15d, r13d	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400be8c	            0x7323	                           jae 0x400beb1	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_11
0x400be8e	        0x48833b01	                      cmp qword [rbx], 1	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400be92	            0x75ed	                           jne 0x400be81	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400be94	        0x4c8b7338	            mov r14, qword [rbx + 0x38] 	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400be98	          0x4939ee	                            cmp r14, rbp	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400be9b	            0x76e4	                           jbe 0x400be81	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400be9d	    0x48b800000000	         movabs rax, 0x4000000000000000 	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400bea7	          0x4939c6	                            cmp r14, rax	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400beaa	            0x7748	                            ja 0x400bef4	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400beac	          0x4c89f5	                            mov rbp, r14	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400beaf	            0xebd0	                           jmp 0x400be81	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400beb1	      0x488b442408	                mov rax, qword [rsp + 8]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400beb6	        0x488b4808	                mov rcx, qword [rax + 8]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400beba	    0x488b81680300	           mov rax, qword [rcx + 0x368] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bec1	        0x48396810	            cmp qword [rax + 0x10], rbp 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bec5	            0x755b	                           jne 0x400bf22	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bec7	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400becf	      0x498b542408	                mov rdx, qword [r12 + 8]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bed4	      0x4889442420	             mov qword [rsp + 0x20], rax	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bed9	        0x4c8b5060	            mov r10, qword [rax + 0x60] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bedd	      0xe9e0ecffff	                           jmp 0x400abc2	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bee2	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400bee7	      0xe98af7ffff	                           jmp 0x400b676	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400beec	          0x4989d6	                            mov r14, rdx	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400beef	      0xe95ef5ffff	                           jmp 0x400b452	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400bef4	      0xba05000000	                              mov edx, 5	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bef9	      0xbe00000000	                              mov esi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400befe	      0xbf00000000	                              mov edi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf03	      0xe800000000	                          call 0x400bf08	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf08	          0x4c89f2	                            mov rdx, r14	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf0b	          0x4889c7	                            mov rdi, rax	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf0e	          0x4c89e6	                            mov rsi, r12	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf11	            0x31c0	                            xor eax, eax	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf13	      0xe800000000	                          call 0x400bf18	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf18	      0xe964ffffff	                           jmp 0x400be81	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_13
0x400bf1d	      0xe800000000	                          call 0x400bf22	      7691	elf.c	FUNCTION_86
0x400bf22	          0x488b39	                    mov rdi, qword [rcx]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf25	          0x4889ee	                            mov rsi, rbp	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf28	      0xe800000000	                          call 0x400bf2d	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf2d	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf35	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf3a	      0x498b542408	                mov rdx, qword [r12 + 8]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf3f	      0x4889442420	             mov qword [rsp + 0x20], rax	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf44	        0x488b4b08	                mov rcx, qword [rbx + 8]	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf48	        0x4c8b5060	            mov r10, qword [rax + 0x60] 	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf4c	      0xe971ecffff	                           jmp 0x400abc2	      7477	elf.c	FUNCTION_82	IF_10	CALL_16
0x400bf51	        0x4883c740	                           add rdi, 0x40	      7398	elf.c	FUNCTION_82	IF_3	FOR_2
0x400bf55	          0x4c39f7	                            cmp rdi, r14	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bf58	     0xf8526fdffff	                           jne 0x400bc84	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_6
0x400bf5e	          0x4d85db	                           test r11, r11	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400bf61	     0xf84bd000000	                            je 0x400c024	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400bf67	      0x410fb64324	           movzx eax, byte [r11 + 0x24] 	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400bf6c	            0xa840	                           test al, 0x40	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400bf6e	     0xf84f6feffff	                            je 0x400be6a	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400bf74	          0x83e0bf	                     and eax, 0xffffffbf	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x400bf77	        0x41884324	               mov byte [r11 + 0x24], al	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x400bf7b	        0x4d8b5b10	            mov r11, qword [r11 + 0x10] 	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x400bf7f	            0xebdd	                           jmp 0x400bf5e	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x400bf81	    0xc74424100000	               mov dword [rsp + 0x10], 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400bf89	          0x4531e4	                          xor r12d, r12d	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400bf8c	          0x4531f6	                          xor r14d, r14d	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400bf8f	      0xe9bff6ffff	                           jmp 0x400b653	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400bf94	        0x4c8b5610	            mov r10, qword [rsi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bf98	        0x4c8b7f18	            mov r15, qword [rdi + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bf9c	          0x4d39d7	                            cmp r15, r10	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bf9f	     0xf872bfeffff	                            ja 0x400bdd0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bfa5	          0x4d29fa	                            sub r10, r15	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bfa8	      0xe9abfeffff	                           jmp 0x400be58	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bfad	          0x4531c9	                            xor r9d, r9d	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bfb0	        0x48833f07	                      cmp qword [rdi], 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bfb4	     0xf859efeffff	                           jne 0x400be58	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bfba	      0xe995feffff	                           jmp 0x400be54	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_8
0x400bfbf	          0x4929cd	                            sub r13, rcx	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400bfc2	          0x4d85ed	                           test r13, r13	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400bfc5	            0x7e0e	                           jle 0x400bfd5	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400bfc7	          0x4c01ef	                            add rdi, r13	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400bfca	          0x4d01c5	                             add r13, r8	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400bfcd	        0x48897830	             mov qword [rax + 0x30], rdi	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400bfd1	        0x4c896828	             mov qword [rax + 0x28], r13	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400bfd5	    0x49c707000000	                      mov qword [r15], 0	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400bfdc	            0x31ed	                            xor ebp, ebp	      6754	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400bfde	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400bfe3	      0xe9b5ecffff	                           jmp 0x400ac9d	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400bfe8	      0x488b442408	                mov rax, qword [rsp + 8]	      7152	elf.c	FUNCTION_80	CALL_26
0x400bfed	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400bff4	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7152	elf.c	FUNCTION_80	CALL_26
0x400bffb	    0x48c700000000	                      mov qword [rax], 0	      7152	elf.c	FUNCTION_80	CALL_26
0x400c002	      0xe962ebffff	                           jmp 0x400ab69	      7152	elf.c	FUNCTION_80	CALL_26
0x400c007	      0xba00000000	                              mov edx, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400c00c	      0xbea81b0000	                         mov esi, 0x1ba8	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400c011	      0xbf00000000	                              mov edi, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400c016	      0xe800000000	                          call 0x400c01b	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_19
0x400c01b	        0x4d895718	             mov qword [r15 + 0x18], r10	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400c01f	      0xe9d1f3ffff	                           jmp 0x400b3f5	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400c024	    0x4d8bbc24f800	            mov r15, qword [r12 + 0xf8] 	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400c02c	    0x48c784249000	               mov qword [rsp + 0x90], 0	      7209	elf.c	FUNCTION_81
0x400c038	            0x31d2	                            xor edx, edx	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400c03a	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      7215	elf.c	FUNCTION_81	CALL_2
0x400c03e	        0x4d8b7760	            mov r14, qword [r15 + 0x60] 	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400c042	            0x39d0	                            cmp eax, edx	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400c044	            0x761a	                           jbe 0x400c060	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400c046	        0x4883c201	                              add rdx, 1	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400c04a	          0x4889d1	                            mov rcx, rdx	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400c04d	        0x48c1e106	                              shl rcx, 6	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400c051	    0x49837c0ee000	         cmp qword [r14 + rcx - 0x20], 0	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400c057	            0x74e9	                            je 0x400c042	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400c059	      0xba01000000	                              mov edx, 1	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400c05e	            0xeb02	                           jmp 0x400c062	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400c060	            0x31d2	                            xor edx, edx	      7214	elf.c	FUNCTION_81
0x400c062	        0x48c1e006	                              shl rax, 6	      7214	elf.c	FUNCTION_81
0x400c066	    0xc74424100000	               mov dword [rsp + 0x10], 0	      7204	elf.c	FUNCTION_81
0x400c06e	      0x4c89642420	             mov qword [rsp + 0x20], r12	      7204	elf.c	FUNCTION_81
0x400c073	          0x4c01f0	                            add rax, r14	      7204	elf.c	FUNCTION_81
0x400c076	      0x4889442438	             mov qword [rsp + 0x38], rax	      7204	elf.c	FUNCTION_81
0x400c07b	    0x488d84249000	                   lea rax, [rsp + 0x90]	      7210	elf.c	FUNCTION_81
0x400c083	      0x4889442418	             mov qword [rsp + 0x18], rax	      7210	elf.c	FUNCTION_81
0x400c088	          0x8d0412	                    lea eax, [rdx + rdx]	      7266	elf.c	FUNCTION_81	FOR_2
0x400c08b	        0x8844245c	               mov byte [rsp + 0x5c], al	      7266	elf.c	FUNCTION_81	FOR_2
0x400c08f	      0x4c3b742438	            cmp r14, qword [rsp + 0x38] 	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x400c094	     0xf842d050000	                            je 0x400c5c7	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x400c09a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c09f	            0x31ed	                            xor ebp, ebp	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0a1	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0a8	          0x4885db	                           test rbx, rbx	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0ab	     0xf846f010000	                            je 0x400c220	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0b1	          0x498b3e	                    mov rdi, qword [r14]	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0b4	          0x4989d8	                             mov r8, rbx	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0b7	            0x31db	                            xor ebx, ebx	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0b9	        0x4c8d5fff	                      lea r11, [rdi - 1]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0bd	    0x4c8d97b01a8b	             lea r10, [rdi - 0x6474e550]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0c4	        0x4c8d67fa	                      lea r12, [rdi - 6]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0c8	            0xeb2b	                           jmp 0x400c0f5	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0ca	        0x4883ff07	                              cmp rdi, 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0ce	        0x410f94c1	                                sete r9b	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0d2	    0x4881ff52e574	                     cmp rdi, 0x6474e552	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0d9	        0x400f94c6	                                sete sil	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0dd	          0x4108f1	                             or r9b, sil	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0e0	            0x752f	                           jne 0x400c111	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0e2	        0x4883ff01	                              cmp rdi, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0e6	            0x7429	                            je 0x400c111	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c0e8	        0x4d8b4010	               mov r8, qword [r8 + 0x10]	      7239	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0ec	          0x4d85c0	                             test r8, r8	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0ef	     0xf84fa040000	                            je 0x400c5ef	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400c0f5	    0x498b80e00000	              mov rax, qword [r8 + 0xe0]	      7241	elf.c	FUNCTION_81	FOR_2	FOR_3	CALL_5
0x400c0fc	        0x488b4808	                mov rcx, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c100	          0x4889ca	                            mov rdx, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c103	    0x81e200040000	                          and edx, 0x400	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c109	            0x75bf	                           jne 0x400c0ca	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c10b	        0x4983fc01	                              cmp r12, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c10f	            0x76d7	                           jbe 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c111	          0x83e102	                              and ecx, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c114	            0x754a	                           jne 0x400c160	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c116	        0x4983fb01	                              cmp r11, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c11a	            0x76cc	                           jbe 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c11c	        0x4983fa02	                              cmp r10, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c120	            0x76c6	                           jbe 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c122	        0x448b4804	                mov r9d, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c126	        0x4183f908	                              cmp r9d, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c12a	            0x7422	                            je 0x400c14e	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c12c	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c130	        0x4d8b6e10	            mov r13, qword [r14 + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c134	          0x4c39ee	                            cmp rsi, r13	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c137	            0x72af	                            jb 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c139	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c13d	          0x4801d6	                            add rsi, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c140	          0x4c29ee	                            sub rsi, r13	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c143	        0x493b7628	            cmp rsi, qword [r14 + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c147	            0x779f	                            ja 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c149	          0x4885c9	                           test rcx, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c14c	            0x754c	                           jne 0x400c19a	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c14e	        0x49833e02	                      cmp qword [r14], 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c152	            0x745c	                            je 0x400c1b0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c154	          0x4885db	                           test rbx, rbx	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x400c157	        0x490f44d8	                           cmove rbx, r8	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x400c15b	          0x83c501	                              add ebp, 1	      7246	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2
0x400c15e	            0xeb88	                           jmp 0x400c0e8	      7246	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2
0x400c160	        0x448b4804	                mov r9d, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c164	        0x4183f908	                              cmp r9d, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c168	            0x75c2	                           jne 0x400c12c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c16a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c16e	        0x4d8b6e18	            mov r13, qword [r14 + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c172	          0x4c39ee	                            cmp rsi, r13	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c175	     0xf826dffffff	                            jb 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c17b	          0x4c29ee	                            sub rsi, r13	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c17e	          0x4885d2	                           test rdx, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c181	     0xf8588000000	                           jne 0x400c20f	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c187	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c18b	          0x4801f2	                            add rdx, rsi	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c18e	        0x493b5630	            cmp rdx, qword [r14 + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c192	     0xf8750ffffff	                            ja 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c198	            0xebb4	                           jmp 0x400c14e	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c19a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c19e	        0x4d8b6e18	            mov r13, qword [r14 + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1a2	          0x4c39ee	                            cmp rsi, r13	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1a5	     0xf823dffffff	                            jb 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1ab	          0x4c29ee	                            sub rsi, r13	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1ae	            0xebdb	                           jmp 0x400c18b	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1b0	      0x4883782000	               cmp qword [rax + 0x20], 0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1b5	            0x759d	                           jne 0x400c154	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1b7	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1bb	          0x4885d2	                           test rdx, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1be	            0x7494	                            je 0x400c154	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1c0	        0x4183f908	                              cmp r9d, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1c4	            0x741e	                            je 0x400c1e4	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1c6	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1ca	        0x4d8b4e10	              mov r9, qword [r14 + 0x10]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1ce	          0x4c39ce	                             cmp rsi, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1d1	     0xf8611ffffff	                           jbe 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1d7	          0x4c29ce	                             sub rsi, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1da	        0x493b7628	            cmp rsi, qword [r14 + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1de	     0xf8304ffffff	                           jae 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1e4	          0x4885c9	                           test rcx, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1e7	     0xf8467ffffff	                            je 0x400c154	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1ed	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1f1	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1f5	          0x4839c8	                            cmp rax, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1f8	     0xf86eafeffff	                           jbe 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c1fe	          0x4829c8	                            sub rax, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c201	          0x4839c2	                            cmp rdx, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c204	     0xf86defeffff	                           jbe 0x400c0e8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c20a	      0xe945ffffff	                           jmp 0x400c154	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c20f	            0x31d2	                            xor edx, edx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c211	        0x49833e07	                      cmp qword [r14], 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c215	     0xf8570ffffff	                           jne 0x400c18b	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c21b	      0xe967ffffff	                           jmp 0x400c187	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400c220	      0xbe50000000	                           mov esi, 0x50	      7252	elf.c	FUNCTION_81	FOR_2
0x400c225	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x400c22a	      0xe800000000	                          call 0x400c22f	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x400c22f	          0x4885c0	                           test rax, rax	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x400c232	     0xf8458f9ffff	                            je 0x400bb90	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x400c238	          0x498b16	                    mov rdx, qword [r14]	      7262	elf.c	FUNCTION_81	FOR_2
0x400c23b	    0x48c700000000	                      mov qword [rax], 0	      7261	elf.c	FUNCTION_81	FOR_2
0x400c242	        0x48895008	                mov qword [rax + 8], rdx	      7262	elf.c	FUNCTION_81	FOR_2
0x400c246	        0x498b4e08	                mov rcx, qword [r14 + 8]	      7263	elf.c	FUNCTION_81	FOR_2
0x400c24a	        0x48894810	             mov qword [rax + 0x10], rcx	      7263	elf.c	FUNCTION_81	FOR_2
0x400c24e	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      7264	elf.c	FUNCTION_81	FOR_2
0x400c252	          0x83c901	                               or ecx, 1	      7264	elf.c	FUNCTION_81	FOR_2
0x400c255	          0x884840	               mov byte [rax + 0x40], cl	      7264	elf.c	FUNCTION_81	FOR_2
0x400c258	          0x83e1fd	                     and ecx, 0xfffffffd	      7266	elf.c	FUNCTION_81	FOR_2
0x400c25b	         0xb4c245c	              or ecx, dword [rsp + 0x5c]	      7266	elf.c	FUNCTION_81	FOR_2
0x400c25f	        0x4d8b6620	            mov r12, qword [r14 + 0x20] 	      7265	elf.c	FUNCTION_81	FOR_2
0x400c263	          0x884840	               mov byte [rax + 0x40], cl	      7266	elf.c	FUNCTION_81	FOR_2
0x400c266	        0x4c896018	             mov qword [rax + 0x18], r12	      7265	elf.c	FUNCTION_81	FOR_2
0x400c26a	        0x498b7638	            mov rsi, qword [r14 + 0x38] 	      7267	elf.c	FUNCTION_81	FOR_2
0x400c26e	    0x48c740200000	               mov qword [rax + 0x20], 0	      7269	elf.c	FUNCTION_81	FOR_2
0x400c276	        0x48897028	             mov qword [rax + 0x28], rsi	      7267	elf.c	FUNCTION_81	FOR_2
0x400c27a	            0x89ce	                            mov esi, ecx	      7268	elf.c	FUNCTION_81	FOR_2
0x400c27c	          0x83ce04	                               or esi, 4	      7268	elf.c	FUNCTION_81	FOR_2
0x400c27f	        0x40887040	              mov byte [rax + 0x40], sil	      7268	elf.c	FUNCTION_81	FOR_2
0x400c283	    0x488db2af1a8b	             lea rsi, [rdx - 0x6474e551]	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400c28a	        0x4883fe01	                              cmp rsi, 1	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400c28e	            0x770e	                            ja 0x400c29e	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400c290	        0x498b7630	            mov rsi, qword [r14 + 0x30] 	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x400c294	          0x83c90c	                             or ecx, 0xc	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x400c297	          0x884840	               mov byte [rax + 0x40], cl	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x400c29a	        0x48897030	             mov qword [rax + 0x30], rsi	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x400c29e	        0x4d8b4e10	              mov r9, qword [r14 + 0x10]	      7286	elf.c	FUNCTION_81	FOR_2
0x400c2a2	          0x4d85c9	                             test r9, r9	      7287	elf.c	FUNCTION_81	FOR_2
0x400c2a5	     0xf8574020000	                           jne 0x400c51f	      7287	elf.c	FUNCTION_81	FOR_2
0x400c2ab	        0x418b4f3c	            mov ecx, dword [r15 + 0x3c] 	      7287	elf.c	FUNCTION_81	FOR_2
0x400c2af	        0x49394e28	            cmp qword [r14 + 0x28], rcx 	      7287	elf.c	FUNCTION_81	FOR_2
0x400c2b3	     0xf82f0020000	                            jb 0x400c5a9	      7287	elf.c	FUNCTION_81	FOR_2
0x400c2b9	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      7286	elf.c	FUNCTION_81	FOR_2
0x400c2bd	          0x83c910	                            or ecx, 0x10	      7286	elf.c	FUNCTION_81	FOR_2
0x400c2c0	          0x83e1df	                     and ecx, 0xffffffdf	      7289	elf.c	FUNCTION_81	FOR_2
0x400c2c3	        0x4883fa01	                              cmp rdx, 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2c7	          0x884840	               mov byte [rax + 0x40], cl	      7289	elf.c	FUNCTION_81	FOR_2
0x400c2ca	            0x750b	                           jne 0x400c2d7	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2cc	      0x837c241000	               cmp dword [rsp + 0x10], 0	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2d1	     0xf853b020000	                           jne 0x400c512	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2d7	        0x498b4f18	            mov rcx, qword [r15 + 0x18] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2db	        0x418b7744	            mov esi, dword [r15 + 0x44] 	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2df	          0x4c89cf	                             mov rdi, r9	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2e2	        0x49037e28	             add rdi, qword [r14 + 0x28]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2e6	      0x410faf7740	            imul esi, dword [r15 + 0x40]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2eb	          0x4801f1	                            add rcx, rsi	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2ee	          0x4839cf	                            cmp rdi, rcx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2f1	     0xf8246020000	                            jb 0x400c53d	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2f7	      0xb901000000	                              mov ecx, 1	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c2fc	         0xfb67040	           movzx esi, byte [rax + 0x40] 	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c300	          0xc1e105	                              shl ecx, 5	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c303	          0x83e6df	                     and esi, 0xffffffdf	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c306	             0x9f1	                             or ecx, esi	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c308	        0x4883fa01	                              cmp rdx, 1	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400c30c	          0x884840	               mov byte [rax + 0x40], cl	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c30f	     0xf84f4010000	                            je 0x400c509	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400c315	            0x85ed	                           test ebp, ebp	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x400c317	     0xf8427020000	                            je 0x400c544	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x400c31d	          0x4885db	                           test rbx, rbx	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400c320	     0xf841e020000	                            je 0x400c544	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400c326	        0x488d7aff	                      lea rdi, [rdx - 1]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c32a	            0x31f6	                            xor esi, esi	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400c32c	          0x4531ed	                          xor r13d, r13d	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400c32f	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c334	    0x488dbab01a8b	             lea rdi, [rdx - 0x6474e550]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c33b	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c340	        0x488d7afa	                      lea rdi, [rdx - 6]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c344	      0x48897c2450	             mov qword [rsp + 0x50], rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c349	            0xeb2b	                           jmp 0x400c376	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c34b	        0x4883fa07	                              cmp rdx, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c34f	        0x410f94c2	                               sete r10b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c353	    0x4881fa52e574	                     cmp rdx, 0x6474e552	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c35a	        0x410f94c0	                                sete r8b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c35e	          0x4508c2	                            or r10b, r8b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c361	            0x7537	                           jne 0x400c39a	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c363	        0x4883fa01	                              cmp rdx, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c367	            0x7431	                            je 0x400c39a	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c369	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      7309	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400c36d	          0x4885db	                           test rbx, rbx	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400c370	     0xf84f3010000	                            je 0x400c569	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400c376	    0x488b8be00000	            mov rcx, qword [rbx + 0xe0] 	      7311	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	CALL_8
0x400c37d	        0x488b7908	                mov rdi, qword [rcx + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c381	          0x4989fb	                            mov r11, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c384	    0x4181e3000400	                         and r11d, 0x400	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c38b	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c390	            0x75b9	                           jne 0x400c34b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c392	    0x48837c245001	               cmp qword [rsp + 0x50], 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c398	            0x76cf	                           jbe 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c39a	          0x83e702	                              and edi, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c39d	     0xf85d8000000	                           jne 0x400c47b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3a3	    0x48837c244001	               cmp qword [rsp + 0x40], 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3a9	            0x76be	                           jbe 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3ab	    0x48837c244802	               cmp qword [rsp + 0x48], 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3b1	            0x76b6	                           jbe 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3b3	        0x448b4104	                mov r8d, dword [rcx + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3b7	        0x4183f808	                              cmp r8d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3bb	            0x7467	                            je 0x400c424	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3bd	        0x4c8b5118	            mov r10, qword [rcx + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3c1	          0x4d39d1	                             cmp r9, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3c4	            0x77a3	                            ja 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3c6	        0x4c035120	             add r10, qword [rcx + 0x20]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3ca	          0x4d29ca	                             sub r10, r9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3cd	        0x4d3b5628	            cmp r10, qword [r14 + 0x28] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3d1	            0x7796	                            ja 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3d3	          0x4885ff	                           test rdi, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3d6	            0x744c	                            je 0x400c424	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3d8	        0x4c8b5910	            mov r11, qword [rcx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3dc	        0x4d8b5618	            mov r10, qword [r14 + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3e0	          0x4d39d3	                            cmp r11, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3e3	            0x7284	                            jb 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3e5	          0x4d29d3	                            sub r11, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3e8	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3ee	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3f3	        0x410f94c3	                               sete r11b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3f7	        0x4883fa07	                              cmp rdx, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3fb	        0x410f94c2	                               sete r10b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c3ff	          0x4508d3	                           or r11b, r10b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c402	     0xf85f8000000	                           jne 0x400c500	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c408	          0x4531d2	                          xor r10d, r10d	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c40b	        0x4183f808	                              cmp r8d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c40f	     0xf85eb000000	                           jne 0x400c500	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c415	      0x4c03542430	             add r10, qword [rsp + 0x30]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c41a	        0x4d3b5630	            cmp r10, qword [r14 + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c41e	     0xf8745ffffff	                            ja 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c424	        0x4883fa02	                              cmp rdx, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c428	            0x7477	                            je 0x400c4a1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c42a	        0x448b5320	           mov r10d, dword [rbx + 0x20] 	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400c42e	        0x4c8b4368	              mov r8, qword [rbx + 0x68]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400c432	        0x418d7d01	                      lea edi, [r13 + 1]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400c436	        0x41f6c201	                            test r10b, 1	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400c43a	      0x4e8944e848	      mov qword [rax + r13*8 + 0x48], r8	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400c43f	            0x742a	                            je 0x400c46b	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400c441	          0x4885f6	                           test rsi, rsi	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c444	            0x7452	                            je 0x400c498	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c446	        0x4c8b4330	              mov r8, qword [rbx + 0x30]	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c44a	        0x4c3b4630	              cmp r8, qword [rsi + 0x30]	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c44e	        0x480f42f3	                          cmovb rsi, rbx	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c452	        0x4180e202	                             and r10b, 2	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400c456	            0x7436	                            je 0x400c48e	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400c458	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400c45c	          0x4c29c9	                             sub rcx, r9	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400c45f	          0x4d29e0	                             sub r8, r12	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400c462	          0x4939c8	                             cmp r8, rcx	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400c465	            0x7404	                            je 0x400c46b	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400c467	        0x806040fd	             and byte [rax + 0x40], 0xfd	      7333	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400c46b	            0x39ef	                            cmp edi, ebp	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400c46d	     0xf84f6000000	                            je 0x400c569	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400c473	          0x4189fd	                           mov r13d, edi	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400c476	      0xe9eefeffff	                           jmp 0x400c369	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400c47b	        0x448b4104	                mov r8d, dword [rcx + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c47f	        0x4183f808	                              cmp r8d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c483	     0xf8534ffffff	                           jne 0x400c3bd	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c489	      0xe94affffff	                           jmp 0x400c3d8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c48e	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400c492	        0x492b4e18	             sub rcx, qword [r14 + 0x18]	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400c496	            0xebc7	                           jmp 0x400c45f	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400c498	          0x4889de	                            mov rsi, rbx	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c49b	        0x4c8b4330	              mov r8, qword [rbx + 0x30]	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c49f	            0xebb1	                           jmp 0x400c452	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400c4a1	      0x4883792000	               cmp qword [rcx + 0x20], 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4a6	            0x7582	                           jne 0x400c42a	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4a8	        0x4d8b5630	            mov r10, qword [r14 + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4ac	          0x4d85d2	                           test r10, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4af	     0xf8475ffffff	                            je 0x400c42a	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4b5	        0x4183f808	                              cmp r8d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4b9	            0x741a	                            je 0x400c4d5	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4bb	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4bf	          0x4d39c1	                              cmp r9, r8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4c2	     0xf83a1feffff	                           jae 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4c8	          0x4d29c8	                              sub r8, r9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4cb	        0x4d3b4628	              cmp r8, qword [r14 + 0x28]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4cf	     0xf8394feffff	                           jae 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4d5	          0x4885ff	                           test rdi, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4d8	     0xf844cffffff	                            je 0x400c42a	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4de	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4e2	        0x4d8b4618	              mov r8, qword [r14 + 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4e6	          0x4c39c7	                             cmp rdi, r8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4e9	     0xf867afeffff	                           jbe 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4ef	          0x4c29c7	                             sub rdi, r8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4f2	          0x4939fa	                            cmp r10, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4f5	     0xf866efeffff	                           jbe 0x400c369	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c4fb	      0xe92affffff	                           jmp 0x400c42a	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c500	        0x4c8b5120	            mov r10, qword [rcx + 0x20] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c504	      0xe90cffffff	                           jmp 0x400c415	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400c509	          0x80e120	                            and cl, 0x20	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400c50c	     0xf8403feffff	                            je 0x400c315	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400c512	    0xc74424100100	               mov dword [rsp + 0x10], 1	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400c51a	      0xe9f6fdffff	                           jmp 0x400c315	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400c51f	        0x806040cf	             and byte [rax + 0x40], 0xcf	      7289	elf.c	FUNCTION_81	FOR_2
0x400c523	      0x837c241000	               cmp dword [rsp + 0x10], 0	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c528	            0x7406	                            je 0x400c530	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c52a	        0x4883fa01	                              cmp rdx, 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c52e	            0x74e2	                            je 0x400c512	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c530	        0x498b4f18	            mov rcx, qword [r15 + 0x18] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c534	          0x4939c9	                             cmp r9, rcx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c537	     0xf869efdffff	                           jbe 0x400c2db	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c53d	            0x31c9	                            xor ecx, ecx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c53f	      0xe9b8fdffff	                           jmp 0x400c2fc	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c544	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c548	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c54b	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c54e	            0x7455	                            je 0x400c5a5	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c550	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      7353	elf.c	FUNCTION_81	FOR_2
0x400c555	          0x896844	             mov dword [rax + 0x44], ebp	      7352	elf.c	FUNCTION_81	FOR_2
0x400c558	        0x4983c640	                           add r14, 0x40	      7227	elf.c	FUNCTION_81	FOR_2
0x400c55c	      0x4889442418	             mov qword [rsp + 0x18], rax	      7354	elf.c	FUNCTION_81	FOR_2
0x400c561	          0x488903	                    mov qword [rbx], rax	      7353	elf.c	FUNCTION_81	FOR_2
0x400c564	      0xe926fbffff	                           jmp 0x400c08f	      7353	elf.c	FUNCTION_81	FOR_2
0x400c569	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c56d	          0xf6c210	                           test dl, 0x10	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c570	            0x7426	                            je 0x400c598	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c572	          0x4885f6	                           test rsi, rsi	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c575	            0x7421	                            je 0x400c598	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c577	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c57b	        0x492b4e18	             sub rcx, qword [r14 + 0x18]	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c57f	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c582	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c585	        0x48894838	             mov qword [rax + 0x38], rcx	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400c589	            0x75c5	                           jne 0x400c550	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c58b	        0x488b5630	            mov rdx, qword [rsi + 0x30] 	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c58f	          0x4c29e2	                            sub rdx, r12	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c592	        0x48895020	             mov qword [rax + 0x20], rdx	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c596	            0xebb8	                           jmp 0x400c550	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c598	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c59b	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c59e	            0x75b0	                           jne 0x400c550	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c5a0	          0x4885f6	                           test rsi, rsi	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c5a3	            0x75e6	                           jne 0x400c58b	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c5a5	            0x31d2	                            xor edx, edx	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c5a7	            0xebe6	                           jmp 0x400c58f	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400c5a9	        0x806040cf	             and byte [rax + 0x40], 0xcf	      7289	elf.c	FUNCTION_81	FOR_2
0x400c5ad	      0x837c241000	               cmp dword [rsp + 0x10], 0	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c5b2	     0xf841ffdffff	                            je 0x400c2d7	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c5b8	        0x4883fa01	                              cmp rdx, 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c5bc	     0xf8515fdffff	                           jne 0x400c2d7	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c5c2	      0xe94bffffff	                           jmp 0x400c512	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400c5c7	      0x488b442408	                mov rax, qword [rsp + 8]	      7357	elf.c	FUNCTION_81	CALL_10
0x400c5cc	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400c5d4	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400c5d9	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400c5e0	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400c5e7	          0x488910	                    mov qword [rax], rdx	      7357	elf.c	FUNCTION_81	CALL_10
0x400c5ea	      0xe97ae5ffff	                           jmp 0x400ab69	      7357	elf.c	FUNCTION_81	CALL_10
0x400c5ef	            0x85ed	                           test ebp, ebp	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x400c5f1	      0xbe50000000	                           mov esi, 0x50	      7252	elf.c	FUNCTION_81	FOR_2
0x400c5f6	     0xf8429fcffff	                            je 0x400c225	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x400c5fc	            0x89e8	                            mov eax, ebp	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x400c5fe	    0x488d34c54800	                 lea rsi, [rax*8 + 0x48]	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x400c606	      0xe91afcffff	                           jmp 0x400c225	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
_bfd_elf_write_corefile_contents	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	1
0x400a630	      0xe9cbfaffff	  jmp sym._bfd_elf_write_object_contents	      6446	elf.c	FUNCTION_77	CALL_1
elf_fake_sections	SWITCH,1:CALL,27:IF,38:functions,0:ELSE,9:DO,0:WHILE,0:FOR,0	433
0x4001450	          0x8b4208	                mov eax, dword [rdx + 8]	      3147	elf.c	FUNCTION_48	IF_1
0x4001453	            0x85c0	                           test eax, eax	      3147	elf.c	FUNCTION_48	IF_1
0x4001455	     0xf85ad010000	                           jne 0x4001608	      3147	elf.c	FUNCTION_48	IF_1
0x400145b	            0x4157	                                push r15	      3138	elf.c	FUNCTION_48
0x400145d	            0x4156	                                push r14	      3138	elf.c	FUNCTION_48
0x400145f	            0x4155	                                push r13	      3138	elf.c	FUNCTION_48
0x4001461	            0x4154	                                push r12	      3138	elf.c	FUNCTION_48
0x4001463	          0x4989fd	                            mov r13, rdi	      3138	elf.c	FUNCTION_48
0x4001466	              0x55	                                push rbp	      3138	elf.c	FUNCTION_48
0x4001467	              0x53	                                push rbx	      3138	elf.c	FUNCTION_48
0x4001468	          0x4989d4	                            mov r12, rdx	      3138	elf.c	FUNCTION_48
0x400146b	          0x4889f5	                            mov rbp, rsi	      3138	elf.c	FUNCTION_48
0x400146e	        0x4883ec18	                           sub rsp, 0x18	      3138	elf.c	FUNCTION_48
0x4001472	        0x488b4708	                mov rax, qword [rdi + 8]	      3140	elf.c	FUNCTION_48	CALL_1
0x4001476	    0x488b9ee00000	            mov rbx, qword [rsi + 0xe0] 	      3141	elf.c	FUNCTION_48	CALL_2
0x400147d	          0x4c8b3e	                    mov r15, qword [rsi]	      3144	elf.c	FUNCTION_48
0x4001480	    0x4c8bb0680300	           mov r14, qword [rax + 0x368] 	      3140	elf.c	FUNCTION_48	CALL_1
0x4001487	          0x488b02	                    mov rax, qword [rdx]	      3156	elf.c	FUNCTION_48	IF_2
0x400148a	          0x4885c0	                           test rax, rax	      3156	elf.c	FUNCTION_48	IF_2
0x400148d	     0xf8455020000	                            je 0x40016e8	      3156	elf.c	FUNCTION_48	IF_2
0x4001493	        0xf6400c01	                test byte [rax + 0xc], 1	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4001497	            0x7417	                            je 0x40014b0	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4001499	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x400149c	          0xf6c420	                           test ah, 0x20	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x400149f	            0x740f	                            je 0x40014b0	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x40014a1	      0x41807f0164	                cmp byte [r15 + 1], 0x64	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x40014a6	     0xf844c050000	                            je 0x40019f8	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x40014ac	         0xf1f4000	                         nop dword [rax]	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x40014b0	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x40014b7	            0x31d2	                            xor edx, edx	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x40014b9	          0x4c89fe	                            mov rsi, r15	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x40014bc	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x40014c3	        0x488b7808	                mov rdi, qword [rax + 8]	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x40014c7	      0xe800000000	                          call 0x40014cc	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x40014cc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x40014cf	            0x8903	                    mov dword [rbx], eax	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x40014d1	     0xf841a010000	                            je 0x40015f1	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x40014d7	          0x4531c9	                            xor r9d, r9d	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x40014da	    0x48b801000000	                 movabs rax, 0x100000001	      3226	elf.c	FUNCTION_48	IF_12
0x40014e4	        0x48854520	           test qword [rbp + 0x20], rax 	      3226	elf.c	FUNCTION_48	IF_12
0x40014e8	     0xf8422010000	                            je 0x4001610	      3226	elf.c	FUNCTION_48	IF_12
0x40014ee	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      3228	elf.c	FUNCTION_48	IF_12
0x40014f2	        0x48894310	             mov qword [rbx + 0x10], rax	      3228	elf.c	FUNCTION_48	IF_12
0x40014f6	        0x448b4570	            mov r8d, dword [rbp + 0x70] 	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40014fa	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3233	elf.c	FUNCTION_48	ELSE_4
0x40014fe	    0x48c743180000	               mov qword [rbx + 0x18], 0	      3232	elf.c	FUNCTION_48	ELSE_4
0x4001506	    0xc74328000000	               mov dword [rbx + 0x28], 0	      3234	elf.c	FUNCTION_48	ELSE_4
0x400150d	        0x4183f83e	                           cmp r8d, 0x3e	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x4001511	        0x48894320	             mov qword [rbx + 0x20], rax	      3233	elf.c	FUNCTION_48	ELSE_4
0x4001515	     0xf87a5000000	                            ja 0x40015c0	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x400151b	          0x4489c1	                            mov ecx, r8d	      3245	elf.c	FUNCTION_48
0x400151e	      0xb801000000	                              mov eax, 1	      3245	elf.c	FUNCTION_48
0x4001523	        0x48896b40	             mov qword [rbx + 0x40], rbp	      3249	elf.c	FUNCTION_48
0x4001527	          0x48d3e0	                             shl rax, cl	      3245	elf.c	FUNCTION_48
0x400152a	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3250	elf.c	FUNCTION_48
0x4001532	        0x48894330	             mov qword [rbx + 0x30], rax	      3245	elf.c	FUNCTION_48
0x4001536	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3254	elf.c	FUNCTION_48	IF_14
0x4001539	            0x89c1	                            mov ecx, eax	      3254	elf.c	FUNCTION_48	IF_14
0x400153b	    0x81e100000002	                      and ecx, 0x2000000	      3254	elf.c	FUNCTION_48	IF_14
0x4001541	     0xf85d9000000	                           jne 0x4001620	      3254	elf.c	FUNCTION_48	IF_14
0x4001547	            0x89c2	                            mov edx, eax	      3122	elf.c	FUNCTION_47	IF_1
0x4001549	    0x81e203010000	                          and edx, 0x103	      3122	elf.c	FUNCTION_47	IF_1
0x400154f	          0x83fa01	                              cmp edx, 1	      3122	elf.c	FUNCTION_47	IF_1
0x4001552	          0x8b5304	                mov edx, dword [rbx + 4]	      3259	elf.c	FUNCTION_48	IF_15
0x4001555	     0xf8475010000	                            je 0x40016d0	      3122	elf.c	FUNCTION_47	IF_1
0x400155b	            0x85d2	                           test edx, edx	      3259	elf.c	FUNCTION_48	IF_15
0x400155d	     0xf8425060000	                            je 0x4001b88	      3259	elf.c	FUNCTION_48	IF_15
0x4001563	          0x83fa08	                              cmp edx, 8	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x4001566	     0xf85c5000000	                           jne 0x4001631	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400156c	            0x89c1	                            mov ecx, eax	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400156e	          0x83e101	                              and ecx, 1	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x4001571	     0xf84f2010000	                            je 0x4001769	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x4001577	      0xba05000000	                              mov edx, 5	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x400157c	      0xbe00000000	                              mov esi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x4001581	      0xbf00000000	                              mov edi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x4001586	      0x44894c2408	                mov dword [rsp + 8], r9d	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x400158b	      0xe800000000	                          call 0x4001590	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x4001590	          0x4889ee	                            mov rsi, rbp	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x4001593	          0x4889c7	                            mov rdi, rax	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x4001596	            0x31c0	                            xor eax, eax	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x4001598	      0xe800000000	                          call 0x400159d	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x400159d	    0xc74304010000	                  mov dword [rbx + 4], 1	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015a4	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015a7	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015ac	            0x89c1	                            mov ecx, eax	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015ae	            0x89c2	                            mov edx, eax	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015b0	    0x81e100000002	                      and ecx, 0x2000000	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015b6	          0x83e201	                              and edx, 1	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015b9	      0xe9a2010000	                           jmp 0x4001760	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015be	            0x6690	                                     nop	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x40015c0	      0xba05000000	                              mov edx, 5	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40015c5	      0xbe00000000	                              mov esi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40015ca	      0xbf00000000	                              mov edi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40015cf	      0x4489442408	                mov dword [rsp + 8], r8d	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40015d4	      0xe800000000	                          call 0x40015d9	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40015d9	      0x448b442408	                mov r8d, dword [rsp + 8]	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40015de	          0x4889c7	                            mov rdi, rax	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40015e1	          0x4889e9	                            mov rcx, rbp	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40015e4	          0x4c89ee	                            mov rsi, r13	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40015e7	            0x31c0	                            xor eax, eax	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40015e9	          0x4489c2	                            mov edx, r8d	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40015ec	      0xe800000000	                          call 0x40015f1	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40015f1	    0x41c744240801	                  mov dword [r12 + 8], 1	      3242	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40015fa	        0x4883c418	                           add rsp, 0x18	      3441	elf.c	FUNCTION_48
0x40015fe	              0x5b	                                 pop rbx	      3441	elf.c	FUNCTION_48
0x40015ff	              0x5d	                                 pop rbp	      3441	elf.c	FUNCTION_48
0x4001600	            0x415c	                                 pop r12	      3441	elf.c	FUNCTION_48
0x4001602	            0x415d	                                 pop r13	      3441	elf.c	FUNCTION_48
0x4001604	            0x415e	                                 pop r14	      3441	elf.c	FUNCTION_48
0x4001606	            0x415f	                                 pop r15	      3441	elf.c	FUNCTION_48
0x4001608	            0xf3c3	                                     ret	      3441	elf.c	FUNCTION_48
0x400160a	    0x660f1f440000	                    nop word [rax + rax]	      3441	elf.c	FUNCTION_48
0x4001610	    0x48c743100000	               mov qword [rbx + 0x10], 0	      3230	elf.c	FUNCTION_48	ELSE_4
0x4001618	      0xe9d9feffff	                           jmp 0x40014f6	      3230	elf.c	FUNCTION_48	ELSE_4
0x400161d	           0xf1f00	                         nop dword [rax]	      3230	elf.c	FUNCTION_48	ELSE_4
0x4001620	          0x8b5304	                mov edx, dword [rbx + 4]	      3259	elf.c	FUNCTION_48	IF_15
0x4001623	      0xbe11000000	                           mov esi, 0x11	      3255	elf.c	FUNCTION_48	IF_14
0x4001628	            0x85d2	                           test edx, edx	      3259	elf.c	FUNCTION_48	IF_15
0x400162a	            0x7505	                           jne 0x4001631	      3259	elf.c	FUNCTION_48	IF_15
0x400162c	          0x897304	                mov dword [rbx + 4], esi	      3260	elf.c	FUNCTION_48	IF_15
0x400162f	            0x89f2	                            mov edx, esi	      3260	elf.c	FUNCTION_48	IF_15
0x4001631	          0x83fa10	                           cmp edx, 0x10	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001634	            0x774a	                            ja 0x4001680	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001636	          0x83fa0e	                            cmp edx, 0xe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001639	     0xf8331040000	                           jae 0x4001a70	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400163f	          0x83fa06	                              cmp edx, 6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001642	     0xf8418030000	                            je 0x4001960	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001648	     0xf87e2000000	                            ja 0x4001730	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400164e	          0x83fa04	                              cmp edx, 4	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001651	     0xf84d1020000	                            je 0x4001928	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001657	          0x83fa05	                              cmp edx, 5	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400165a	     0xf858b030000	                           jne 0x40019eb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001660	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4001667	            0x89c2	                            mov edx, eax	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4001669	          0x83e201	                              and edx, 1	      3292	elf.c	FUNCTION_48	SWITCH_1
0x400166c	         0xfb67608	               movzx esi, byte [rsi + 8]	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4001670	        0x48897338	             mov qword [rbx + 0x38], rsi	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4001674	      0xe9e7000000	                           jmp 0x4001760	      3293	elf.c	FUNCTION_48	SWITCH_1
0x4001679	     0xf1f80000000	                         nop dword [rax]	      3293	elf.c	FUNCTION_48	SWITCH_1
0x4001680	    0x81fafdffff6f	                     cmp edx, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001686	     0xf84f4020000	                            je 0x4001980	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400168c	     0xf872e020000	                            ja 0x40018c0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001692	          0x83fa11	                           cmp edx, 0x11	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001695	     0xf8415030000	                            je 0x40019b0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400169b	    0x81faf6ffff6f	                     cmp edx, 0x6ffffff6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40016a1	     0xf8544030000	                           jne 0x40019eb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40016a7	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016ae	            0x89c2	                            mov edx, eax	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016b0	          0x83e201	                              and edx, 1	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016b3	        0x807e0a40	              cmp byte [rsi + 0xa], 0x40	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016b7	        0x400f95c6	                               setne sil	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016bb	        0x400fb6f6	                          movzx esi, sil	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016bf	        0x48c1e602	                              shl rsi, 2	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016c3	        0x48897338	             mov qword [rbx + 0x38], rsi	      3346	elf.c	FUNCTION_48	SWITCH_1
0x40016c7	      0xe994000000	                           jmp 0x4001760	      3347	elf.c	FUNCTION_48	SWITCH_1
0x40016cc	         0xf1f4000	                         nop dword [rax]	      3347	elf.c	FUNCTION_48	SWITCH_1
0x40016d0	            0x85d2	                           test edx, edx	      3259	elf.c	FUNCTION_48	IF_15
0x40016d2	     0xf8559ffffff	                           jne 0x4001631	      3259	elf.c	FUNCTION_48	IF_15
0x40016d8	      0xbe08000000	                              mov esi, 8	      3259	elf.c	FUNCTION_48	IF_15
0x40016dd	      0xe94affffff	                           jmp 0x400162c	      3259	elf.c	FUNCTION_48	IF_15
0x40016e2	    0x660f1f440000	                    nop word [rax + rax]	      3259	elf.c	FUNCTION_48	IF_15
0x40016e8	        0xf6462310	           test byte [rsi + 0x23], 0x10 	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x40016ec	     0xf84befdffff	                            je 0x40014b0	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x40016f2	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x40016f5	          0xc1e805	                              shr eax, 5	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x40016f8	      0xa900800200	                       test eax, 0x28000	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x40016fd	     0xf8495030000	                            je 0x4001a98	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x4001703	      0x41807f017a	                cmp byte [r15 + 1], 0x7a	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x4001708	     0xf85a2fdffff	                           jne 0x40014b0	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x400170e	          0x4c89fe	                            mov rsi, r15	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4001711	      0xe8daebffff	        call sym.convert_zdebug_to_debug	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x4001716	          0x4885c0	                           test rax, rax	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4001719	          0x4989c7	                            mov r15, rax	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x400171c	     0xf858efdffff	                           jne 0x40014b0	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4001722	      0xe9cafeffff	                           jmp 0x40015f1	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4001727	    0x660f1f840000	                    nop word [rax + rax]	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4001730	          0x83fa09	                              cmp edx, 9	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001733	     0xf84b7010000	                            je 0x40018f0	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001739	          0x83fa0b	                            cmp edx, 0xb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400173c	     0xf85a9020000	                           jne 0x40019eb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001742	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3296	elf.c	FUNCTION_48	SWITCH_1
0x4001749	            0x89c2	                            mov edx, eax	      3296	elf.c	FUNCTION_48	SWITCH_1
0x400174b	          0x83e201	                              and edx, 1	      3296	elf.c	FUNCTION_48	SWITCH_1
0x400174e	         0xfb67605	               movzx esi, byte [rsi + 5]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x4001752	        0x48897338	             mov qword [rbx + 0x38], rsi	      3296	elf.c	FUNCTION_48	SWITCH_1
0x4001756	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x4001760	            0x85d2	                           test edx, edx	      3350	elf.c	FUNCTION_48	IF_21
0x4001762	            0x7405	                            je 0x4001769	      3350	elf.c	FUNCTION_48	IF_21
0x4001764	      0x48834b0802	                   or qword [rbx + 8], 2	      3351	elf.c	FUNCTION_48	IF_21
0x4001769	            0xa808	                              test al, 8	      3352	elf.c	FUNCTION_48	IF_22
0x400176b	            0x7505	                           jne 0x4001772	      3352	elf.c	FUNCTION_48	IF_22
0x400176d	      0x48834b0801	                   or qword [rbx + 8], 1	      3353	elf.c	FUNCTION_48	IF_22
0x4001772	            0xa810	                           test al, 0x10	      3354	elf.c	FUNCTION_48	IF_23
0x4001774	            0x7405	                            je 0x400177b	      3354	elf.c	FUNCTION_48	IF_23
0x4001776	      0x48834b0804	                   or qword [rbx + 8], 4	      3355	elf.c	FUNCTION_48	IF_23
0x400177b	      0xa900008000	                      test eax, 0x800000	      3356	elf.c	FUNCTION_48	IF_24
0x4001780	            0x740f	                            je 0x4001791	      3356	elf.c	FUNCTION_48	IF_24
0x4001782	    0x8bbdc4000000	            mov edi, dword [rbp + 0xc4] 	      3359	elf.c	FUNCTION_48	IF_24
0x4001788	      0x48834b0810	                or qword [rbx + 8], 0x10	      3358	elf.c	FUNCTION_48	IF_24
0x400178d	        0x48897b38	             mov qword [rbx + 0x38], rdi	      3359	elf.c	FUNCTION_48	IF_24
0x4001791	      0xa900000001	                     test eax, 0x1000000	      3361	elf.c	FUNCTION_48	IF_25
0x4001796	            0x7405	                            je 0x400179d	      3361	elf.c	FUNCTION_48	IF_25
0x4001798	      0x48834b0820	                or qword [rbx + 8], 0x20	      3362	elf.c	FUNCTION_48	IF_25
0x400179d	            0x85c9	                           test ecx, ecx	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x400179f	            0x7519	                           jne 0x40017ba	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40017a1	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40017a8	    0x4883bab00000	               cmp qword [rdx + 0xb0], 0	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40017b0	            0x7408	                            je 0x40017ba	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40017b2	    0x48814b080002	               or qword [rbx + 8], 0x200	      3364	elf.c	FUNCTION_48	IF_26
0x40017ba	          0xf6c404	                              test ah, 4	      3365	elf.c	FUNCTION_48	IF_27
0x40017bd	            0x7441	                            je 0x4001800	      3365	elf.c	FUNCTION_48	IF_27
0x40017bf	    0x48814b080004	               or qword [rbx + 8], 0x400	      3367	elf.c	FUNCTION_48	IF_27
0x40017c7	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x40017cc	            0x7532	                           jne 0x4001800	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x40017ce	          0xf6c401	                              test ah, 1	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x40017d1	            0x752d	                           jne 0x4001800	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x40017d3	    0x488b8d100100	           mov rcx, qword [rbp + 0x110] 	      3371	elf.c	FUNCTION_48	IF_27	IF_28
0x40017da	    0x48c743200000	               mov qword [rbx + 0x20], 0	      3373	elf.c	FUNCTION_48	IF_27	IF_28
0x40017e2	          0x4885c9	                           test rcx, rcx	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x40017e5	            0x7419	                            je 0x4001800	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x40017e7	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x40017eb	        0x48035110	             add rdx, qword [rcx + 0x10]	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x40017ef	          0x4885d2	                           test rdx, rdx	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x40017f2	        0x48895320	             mov qword [rbx + 0x20], rdx	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x40017f6	            0x7408	                            je 0x4001800	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x40017f8	    0xc74304080000	                  mov dword [rbx + 4], 8	      3378	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x40017ff	              0x90	                                     nop	      3378	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4001800	            0x89c2	                            mov edx, eax	      3382	elf.c	FUNCTION_48	IF_31
0x4001802	    0x81e200800002	                      and edx, 0x2008000	      3382	elf.c	FUNCTION_48	IF_31
0x4001808	    0x81fa00800000	                         cmp edx, 0x8000	      3382	elf.c	FUNCTION_48	IF_31
0x400180e	     0xf844c020000	                            je 0x4001a60	      3382	elf.c	FUNCTION_48	IF_31
0x4001814	            0xa804	                              test al, 4	      3389	elf.c	FUNCTION_48	IF_32
0x4001816	            0x7460	                            je 0x4001878	      3389	elf.c	FUNCTION_48	IF_32
0x4001818	        0x498b0424	                    mov rax, qword [r12]	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x400181c	          0x4885c0	                           test rax, rax	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x400181f	     0xf84fb010000	                            je 0x4001a20	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x4001825	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x4001828	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400182b	            0x89cf	                            mov edi, ecx	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400182d	             0x1d7	                            add edi, edx	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400182f	     0xf84eb010000	                            je 0x4001a20	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x4001835	           0xfb630	                   movzx esi, byte [rax]	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4001838	          0x83e603	                              and esi, 3	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400183b	        0x4080fe02	                              cmp sil, 2	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400183f	            0x740a	                            je 0x400184b	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4001841	        0xf6400308	                  test byte [rax + 3], 8	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x4001845	     0xf84d5010000	                            je 0x4001a20	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x400184b	            0x85c9	                           test ecx, ecx	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400184d	            0x740b	                            je 0x400185a	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400184f	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4001854	     0xf84df020000	                            je 0x4001b39	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400185a	            0x85d2	                           test edx, edx	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x400185c	            0x741a	                            je 0x4001878	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x400185e	      0x48837b7000	               cmp qword [rbx + 0x70], 0	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4001863	        0x488d7370	                   lea rsi, [rbx + 0x70]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x4001867	          0x4589c8	                            mov r8d, r9d	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x400186a	      0xb901000000	                              mov ecx, 1	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x400186f	     0xf84c9010000	                            je 0x4001a3e	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4001875	           0xf1f00	                         nop dword [rax]	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x4001878	    0x498b86b00000	            mov rax, qword [r14 + 0xb0] 	      3428	elf.c	FUNCTION_48	IF_37
0x400187f	        0x448b7b04	               mov r15d, dword [rbx + 4]	      3427	elf.c	FUNCTION_48
0x4001883	          0x4885c0	                           test rax, rax	      3428	elf.c	FUNCTION_48	IF_37
0x4001886	            0x7413	                            je 0x400189b	      3428	elf.c	FUNCTION_48	IF_37
0x4001888	          0x4889ea	                            mov rdx, rbp	      3429	elf.c	FUNCTION_48	IF_37
0x400188b	          0x4889de	                            mov rsi, rbx	      3429	elf.c	FUNCTION_48	IF_37
0x400188e	          0x4c89ef	                            mov rdi, r13	      3429	elf.c	FUNCTION_48	IF_37
0x4001891	            0xffd0	                                call rax	      3429	elf.c	FUNCTION_48	IF_37
0x4001893	            0x85c0	                           test eax, eax	      3429	elf.c	FUNCTION_48	IF_37
0x4001895	     0xf8456fdffff	                            je 0x40015f1	      3429	elf.c	FUNCTION_48	IF_37
0x400189b	        0x4183ff08	                             cmp r15d, 8	      3435	elf.c	FUNCTION_48	IF_38
0x400189f	     0xf8555fdffff	                           jne 0x40015fa	      3435	elf.c	FUNCTION_48	IF_38
0x40018a5	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3435	elf.c	FUNCTION_48	IF_38
0x40018aa	     0xf844afdffff	                            je 0x40015fa	      3435	elf.c	FUNCTION_48	IF_38
0x40018b0	    0xc74304080000	                  mov dword [rbx + 4], 8	      3439	elf.c	FUNCTION_48	IF_38
0x40018b7	      0xe93efdffff	                           jmp 0x40015fa	      3439	elf.c	FUNCTION_48	IF_38
0x40018bc	         0xf1f4000	                         nop dword [rax]	      3439	elf.c	FUNCTION_48	IF_38
0x40018c0	    0x81fafeffff6f	                     cmp edx, 0x6ffffffe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018c6	     0xf84fc000000	                            je 0x40019c8	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018cc	    0x81faffffff6f	                     cmp edx, 0x6fffffff	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018d2	     0xf8513010000	                           jne 0x40019eb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018d8	            0x89c2	                            mov edx, eax	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018da	    0x48c743380200	               mov qword [rbx + 0x38], 2	      3314	elf.c	FUNCTION_48	SWITCH_1
0x40018e2	          0x83e201	                              and edx, 1	      3314	elf.c	FUNCTION_48	SWITCH_1
0x40018e5	      0xe976feffff	                           jmp 0x4001760	      3315	elf.c	FUNCTION_48	SWITCH_1
0x40018ea	    0x660f1f440000	                    nop word [rax + rax]	      3315	elf.c	FUNCTION_48	SWITCH_1
0x40018f0	        0x498b7508	                mov rsi, qword [r13 + 8]	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x40018f4	            0x89c2	                            mov edx, eax	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x40018f6	          0x83e201	                              and edx, 1	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x40018f9	    0x488bb6680300	           mov rsi, qword [rsi + 0x368] 	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4001900	    0xf68688030000	              test byte [rsi + 0x388], 4	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4001907	     0xf8453feffff	                            je 0x4001760	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x400190d	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4001914	         0xfb67603	               movzx esi, byte [rsi + 3]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4001918	        0x48897338	             mov qword [rbx + 0x38], rsi	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x400191c	      0xe93ffeffff	                           jmp 0x4001760	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4001921	     0xf1f80000000	                         nop dword [rax]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x4001928	        0x498b7508	                mov rsi, qword [r13 + 8]	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400192c	            0x89c2	                            mov edx, eax	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400192e	          0x83e201	                              and edx, 1	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4001931	    0x488bb6680300	           mov rsi, qword [rsi + 0x368] 	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4001938	    0xf68688030000	              test byte [rsi + 0x388], 8	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x400193f	     0xf841bfeffff	                            je 0x4001760	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4001945	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x400194c	         0xfb67604	               movzx esi, byte [rsi + 4]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4001950	        0x48897338	             mov qword [rbx + 0x38], rsi	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4001954	      0xe907feffff	                           jmp 0x4001760	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4001959	     0xf1f80000000	                         nop dword [rax]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4001960	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4001967	            0x89c2	                            mov edx, eax	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4001969	          0x83e201	                              and edx, 1	      3300	elf.c	FUNCTION_48	SWITCH_1
0x400196c	         0xfb67606	               movzx esi, byte [rsi + 6]	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4001970	        0x48897338	             mov qword [rbx + 0x38], rsi	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4001974	      0xe9e7fdffff	                           jmp 0x4001760	      3301	elf.c	FUNCTION_48	SWITCH_1
0x4001979	     0xf1f80000000	                         nop dword [rax]	      3301	elf.c	FUNCTION_48	SWITCH_1
0x4001980	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x4001983	    0x48c743380000	               mov qword [rbx + 0x38], 0	      3318	elf.c	FUNCTION_48	SWITCH_1
0x400198b	            0x85d2	                           test edx, edx	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x400198d	     0xf857d010000	                           jne 0x4001b10	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x4001993	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x400199a	    0x8b9240030000	           mov edx, dword [rdx + 0x340] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40019a0	          0x89532c	             mov dword [rbx + 0x2c], edx	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40019a3	            0x89c2	                            mov edx, eax	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40019a5	          0x83e201	                              and edx, 1	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40019a8	      0xe9b3fdffff	                           jmp 0x4001760	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40019ad	           0xf1f00	                         nop dword [rax]	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40019b0	            0x89c2	                            mov edx, eax	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40019b2	    0x48c743380400	               mov qword [rbx + 0x38], 4	      3342	elf.c	FUNCTION_48	SWITCH_1
0x40019ba	          0x83e201	                              and edx, 1	      3342	elf.c	FUNCTION_48	SWITCH_1
0x40019bd	      0xe99efdffff	                           jmp 0x4001760	      3343	elf.c	FUNCTION_48	SWITCH_1
0x40019c2	    0x660f1f440000	                    nop word [rax + rax]	      3343	elf.c	FUNCTION_48	SWITCH_1
0x40019c8	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x40019cb	    0x48c743380000	               mov qword [rbx + 0x38], 0	      3330	elf.c	FUNCTION_48	SWITCH_1
0x40019d3	            0x85d2	                           test edx, edx	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x40019d5	     0xf85f5000000	                           jne 0x4001ad0	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x40019db	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x40019e2	    0x8b9244030000	           mov edx, dword [rdx + 0x344] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x40019e8	          0x89532c	             mov dword [rbx + 0x2c], edx	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x40019eb	            0x89c2	                            mov edx, eax	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x40019ed	          0x83e201	                              and edx, 1	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x40019f0	      0xe96bfdffff	                           jmp 0x4001760	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x40019f5	           0xf1f00	                         nop dword [rax]	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x40019f8	      0x41807f065f	                cmp byte [r15 + 6], 0x5f	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x40019fd	     0xf85adfaffff	                           jne 0x40014b0	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x4001a03	       0xd00000008	                    or eax, section_end.	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4001a08	    0x41b901000000	                              mov r9d, 1	      3171	elf.c	FUNCTION_48	IF_2	IF_3
0x4001a0e	          0x894620	             mov dword [rsi + 0x20], eax	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x4001a11	    0xc703ffffffff	            mov dword [rbx], 0xffffffff 	      3211	elf.c	FUNCTION_48	IF_10
0x4001a17	      0xe9befaffff	                           jmp 0x40014da	      3211	elf.c	FUNCTION_48	IF_10
0x4001a1c	         0xf1f4000	                         nop dword [rax]	      3211	elf.c	FUNCTION_48	IF_10
0x4001a20	         0xfb65525	           movzx edx, byte [rbp + 0x25] 	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4001a24	        0x488d7370	                   lea rsi, [rbx + 0x70]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a28	        0x488d4358	                   lea rax, [rbx + 0x58]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a2c	          0x4589c8	                            mov r8d, r9d	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a2f	            0x89d1	                            mov ecx, edx	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4001a31	          0xc0e902	                               shr cl, 2	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4001a34	          0x83e101	                              and ecx, 1	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a37	          0x83e204	                              and edx, 4	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a3a	        0x480f44f0	                          cmove rsi, rax	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a3e	          0x4c89fa	                            mov rdx, r15	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a41	          0x4c89ef	                            mov rdi, r13	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a44	      0xe8f7f8ffff	call sym._bfd_elf_init_reloc_shdr.isra.18	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a49	            0x85c0	                           test eax, eax	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a4b	     0xf8527feffff	                           jne 0x4001878	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a51	      0xe99bfbffff	                           jmp 0x40015f1	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001a60	      0xba00000080	                     mov edx, 0x80000000	      3383	elf.c	FUNCTION_48	IF_31
0x4001a65	        0x48095308	                 or qword [rbx + 8], rdx	      3383	elf.c	FUNCTION_48	IF_31
0x4001a69	      0xe9a6fdffff	                           jmp 0x4001814	      3383	elf.c	FUNCTION_48	IF_31
0x4001a6e	            0x6690	                                     nop	      3383	elf.c	FUNCTION_48	IF_31
0x4001a70	    0x498bb6000300	           mov rsi, qword [r14 + 0x300] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001a77	            0x89c2	                            mov edx, eax	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001a79	          0x83e201	                              and edx, 1	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001a7c	         0xfb6760a	            movzx esi, byte [rsi + 0xa] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001a80	        0x40c0ee03	                              shr sil, 3	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001a84	        0x400fb6f6	                          movzx esi, sil	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001a88	        0x48897338	             mov qword [rbx + 0x38], rsi	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001a8c	      0xe9cffcffff	                           jmp 0x4001760	      3289	elf.c	FUNCTION_48	SWITCH_1
0x4001a91	     0xf1f80000000	                         nop dword [rax]	      3289	elf.c	FUNCTION_48	SWITCH_1
0x4001a98	         0xfb64624	           movzx eax, byte [rsi + 0x24] 	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001a9c	          0x83e030	                           and eax, 0x30	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001a9f	            0x3c10	                            cmp al, 0x10	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001aa1	     0xf8509faffff	                           jne 0x40014b0	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001aa7	          0x4c89fe	                            mov rsi, r15	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4001aaa	      0xe891e8ffff	        call sym.convert_debug_to_zdebug	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4001aaf	          0x4885c0	                           test rax, rax	      3200	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4001ab2	     0xf8439fbffff	                            je 0x40015f1	      3200	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4001ab8	      0x41807f017a	                cmp byte [r15 + 1], 0x7a	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001abd	     0xf84a4000000	                            je 0x4001b67	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001ac3	          0x4989c7	                            mov r15, rax	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001ac6	      0xe9e5f9ffff	                           jmp 0x40014b0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001acb	       0xf1f440000	                   nop dword [rax + rax]	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001ad0	    0x498bb5f80000	            mov rsi, qword [r13 + 0xf8] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001ad7	    0x8bb644030000	           mov esi, dword [rsi + 0x344] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001add	            0x39f2	                            cmp edx, esi	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001adf	     0xf8406ffffff	                            je 0x40019eb	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001ae5	            0x85f6	                           test esi, esi	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001ae7	     0xf84fefeffff	                            je 0x40019eb	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001aed	      0x44894c2408	                mov dword [rsp + 8], r9d	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001af2	      0xbe0a0d0000	                          mov esi, 0xd0a	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001af7	      0xbf00000000	                              mov edi, 0	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001afc	      0xe800000000	                          call 0x4001b01	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001b01	      0xe99efaffff	                           jmp 0x40015a4	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001b06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001b10	    0x498bb5f80000	            mov rsi, qword [r13 + 0xf8] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b17	    0x8bb640030000	           mov esi, dword [rsi + 0x340] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b1d	            0x85f6	                           test esi, esi	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b1f	     0xf84c6feffff	                            je 0x40019eb	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b25	            0x39f2	                            cmp edx, esi	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b27	     0xf84befeffff	                            je 0x40019eb	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b2d	      0x44894c2408	                mov dword [rsp + 8], r9d	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b32	      0xbefe0c0000	                          mov esi, 0xcfe	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b37	            0xebbe	                           jmp 0x4001af7	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001b39	        0x488d7358	                   lea rsi, [rbx + 0x58]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b3d	            0x31c9	                            xor ecx, ecx	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b3f	          0x4589c8	                            mov r8d, r9d	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b42	          0x4c89fa	                            mov rdx, r15	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b45	          0x4c89ef	                            mov rdi, r13	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b48	      0x44894c2408	                mov dword [rsp + 8], r9d	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b4d	      0xe8eef7ffff	call sym._bfd_elf_init_reloc_shdr.isra.18	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b52	            0x85c0	                           test eax, eax	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b54	     0xf8497faffff	                            je 0x40015f1	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b5a	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b5d	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b62	      0xe9f3fcffff	                           jmp 0x400185a	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001b67	      0xbe850c0000	                          mov esi, 0xc85	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b6c	      0xbf00000000	                              mov edi, 0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b71	      0x4889442408	                mov qword [rsp + 8], rax	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b76	      0xe800000000	                          call 0x4001b7b	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b7b	      0x488b442408	                mov rax, qword [rsp + 8]	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b80	          0x4989c7	                            mov r15, rax	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b83	      0xe928f9ffff	                           jmp 0x40014b0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b88	      0xbe01000000	                              mov esi, 1	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001b8d	      0xe99afaffff	                           jmp 0x400162c	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
convert_zdebug_to_debug	SWITCH,0:CALL,3:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	24
0x40002f0	            0x4154	                                push r12	       981	elf.c	FUNCTION_25
0x40002f2	              0x55	                                push rbp	       981	elf.c	FUNCTION_25
0x40002f3	          0x4889f5	                            mov rbp, rsi	       981	elf.c	FUNCTION_25
0x40002f6	              0x53	                                push rbx	       981	elf.c	FUNCTION_25
0x40002f7	          0x4889fb	                            mov rbx, rdi	       981	elf.c	FUNCTION_25
0x40002fa	          0x4889f7	                            mov rdi, rsi	       982	elf.c	FUNCTION_25	CALL_1
0x40002fd	      0xe800000000	                          call 0x4000302	       982	elf.c	FUNCTION_25	CALL_1
0x4000302	          0x4889df	                            mov rdi, rbx	       983	elf.c	FUNCTION_25	CALL_2
0x4000305	            0x89c6	                            mov esi, eax	       983	elf.c	FUNCTION_25	CALL_2
0x4000307	          0x4989c4	                            mov r12, rax	       982	elf.c	FUNCTION_25	CALL_1
0x400030a	      0xe800000000	                          call 0x400030f	       983	elf.c	FUNCTION_25	CALL_2
0x400030f	          0x4885c0	                           test rax, rax	       984	elf.c	FUNCTION_25	IF_1
0x4000312	          0x4889c3	                            mov rbx, rax	       983	elf.c	FUNCTION_25	CALL_2
0x4000315	            0x7415	                            je 0x400032c	       984	elf.c	FUNCTION_25	IF_1
0x4000317	        0x488d7801	                      lea rdi, [rax + 1]	        53	string3.h	FUNCTION_204	CALL_3
0x400031b	      0x418d5424ff	                      lea edx, [r12 - 1]	        53	string3.h	FUNCTION_204	CALL_3
0x4000320	        0x488d7502	                      lea rsi, [rbp + 2]	        53	string3.h	FUNCTION_204	CALL_3
0x4000324	          0xc6002e	                    mov byte [rax], 0x2e	       986	elf.c	FUNCTION_25
0x4000327	      0xe800000000	                          call 0x400032c	        53	string3.h	FUNCTION_204	CALL_3
0x400032c	          0x4889d8	                            mov rax, rbx	       989	elf.c	FUNCTION_25
0x400032f	              0x5b	                                 pop rbx	       989	elf.c	FUNCTION_25
0x4000330	              0x5d	                                 pop rbp	       989	elf.c	FUNCTION_25
0x4000331	            0x415c	                                 pop r12	       989	elf.c	FUNCTION_25
0x4000333	              0xc3	                                     ret	       989	elf.c	FUNCTION_25
bfd_get_elf_phdrs	SWITCH,0:CALL,4:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	20
0x4010ee0	              0x53	                                push rbx	     11241	elf.c	FUNCTION_194
0x4010ee1	        0x488b4708	                mov rax, qword [rdi + 8]	     11244	elf.c	FUNCTION_194	IF_1
0x4010ee5	        0x83780805	                  cmp dword [rax + 8], 5	     11244	elf.c	FUNCTION_194	IF_1
0x4010ee9	            0x7525	                           jne 0x4010f10	     11244	elf.c	FUNCTION_194	IF_1
0x4010eeb	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11250	elf.c	FUNCTION_194	CALL_2
0x4010ef2	          0x4889f1	                            mov rcx, rsi	     11250	elf.c	FUNCTION_194	CALL_2
0x4010ef5	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_204	CALL_3
0x4010ef8	        0x48635044	         movsxd rdx, dword [rax + 0x44] 	     11250	elf.c	FUNCTION_194	CALL_2
0x4010efc	        0x488b7060	            mov rsi, qword [rax + 0x60] 	        53	string3.h	FUNCTION_204	CALL_3
0x4010f00	          0x4889d3	                            mov rbx, rdx	     11250	elf.c	FUNCTION_194	CALL_2
0x4010f03	        0x48c1e206	                              shl rdx, 6	        53	string3.h	FUNCTION_204	CALL_3
0x4010f07	      0xe800000000	                          call 0x4010f0c	        53	string3.h	FUNCTION_204	CALL_3
0x4010f0c	            0x89d8	                            mov eax, ebx	     11254	elf.c	FUNCTION_194
0x4010f0e	              0x5b	                                 pop rbx	     11255	elf.c	FUNCTION_194
0x4010f0f	              0xc3	                                     ret	     11255	elf.c	FUNCTION_194
0x4010f10	      0xbf03000000	                              mov edi, 3	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x4010f15	      0xe800000000	                          call 0x4010f1a	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x4010f1a	      0xb8ffffffff	                     mov eax, 0xffffffff	     11247	elf.c	FUNCTION_194	IF_1
0x4010f1f	              0x5b	                                 pop rbx	     11255	elf.c	FUNCTION_194
0x4010f20	              0xc3	                                     ret	     11255	elf.c	FUNCTION_194
_bfd_elf_rel_local_sym	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	15
0x4010ff0	          0x4989d0	                             mov r8, rdx	     11310	elf.c	FUNCTION_197
0x4010ff3	          0x488b12	                    mov rdx, qword [rdx]	     11311	elf.c	FUNCTION_197
0x4010ff6	         0xfb74224	           movzx eax, word [rdx + 0x24] 	     11313	elf.c	FUNCTION_197	IF_1
0x4010ffa	        0x66258003	                           and ax, 0x380	     11313	elf.c	FUNCTION_197	IF_1
0x4010ffe	        0x663d0001	                           cmp ax, 0x100	     11313	elf.c	FUNCTION_197	IF_1
0x4011002	            0x740c	                            je 0x4011010	     11313	elf.c	FUNCTION_197	IF_1
0x4011004	          0x4889c8	                            mov rax, rcx	     11314	elf.c	FUNCTION_197	IF_1
0x4011007	          0x480306	                    add rax, qword [rsi]	     11314	elf.c	FUNCTION_197	IF_1
0x401100a	              0xc3	                                     ret	     11319	elf.c	FUNCTION_197
0x401100b	       0xf1f440000	                   nop dword [rax + rax]	     11319	elf.c	FUNCTION_197
0x4011010	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	     11316	elf.c	FUNCTION_197	CALL_1
0x4011017	          0x48030e	                    add rcx, qword [rsi]	     11316	elf.c	FUNCTION_197	CALL_1
0x401101a	          0x4c89c6	                             mov rsi, r8	     11316	elf.c	FUNCTION_197	CALL_1
0x401101d	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11316	elf.c	FUNCTION_197	CALL_1
0x4011024	      0xe900000000	                           jmp 0x4011029	     11316	elf.c	FUNCTION_197	CALL_1
bfd_elf_gnu_hash	SWITCH,0:CALL,0:IF,0:functions,0:ELSE,0:DO,0:WHILE,1:FOR,0	16
0x40020c0	           0xfb617	                   movzx edx, byte [rdi]	       229	elf.c	FUNCTION_12	WHILE_1
0x40020c3	        0x488d4f01	                      lea rcx, [rdi + 1]	       229	elf.c	FUNCTION_12	WHILE_1
0x40020c7	      0xb805150000	                         mov eax, 0x1505	       229	elf.c	FUNCTION_12	WHILE_1
0x40020cc	            0x84d2	                             test dl, dl	       229	elf.c	FUNCTION_12	WHILE_1
0x40020ce	            0x741c	                            je 0x40020ec	       229	elf.c	FUNCTION_12	WHILE_1
0x40020d0	          0x4889c6	                            mov rsi, rax	       229	elf.c	FUNCTION_12	WHILE_1
0x40020d3	        0x4883c101	                              add rcx, 1	       229	elf.c	FUNCTION_12	WHILE_1
0x40020d7	        0x48c1e605	                              shl rsi, 5	       229	elf.c	FUNCTION_12	WHILE_1
0x40020db	          0x4801f2	                            add rdx, rsi	       229	elf.c	FUNCTION_12	WHILE_1
0x40020de	          0x4801d0	                            add rax, rdx	       230	elf.c	FUNCTION_12	WHILE_1
0x40020e1	         0xfb651ff	               movzx edx, byte [rcx - 1]	       229	elf.c	FUNCTION_12	WHILE_1
0x40020e5	            0x84d2	                             test dl, dl	       229	elf.c	FUNCTION_12	WHILE_1
0x40020e7	            0x75e7	                           jne 0x40020d0	       229	elf.c	FUNCTION_12	WHILE_1
0x40020e9	            0x89c0	                            mov eax, eax	       229	elf.c	FUNCTION_12	WHILE_1
0x40020eb	              0xc3	                                     ret	       229	elf.c	FUNCTION_12	WHILE_1
0x40020ec	            0xf3c3	                                     ret	       232	elf.c	FUNCTION_12
_bfd_elf_swap_verdef_in	SWITCH,0:CALL,7:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	38
0x4001ca0	            0x4154	                                push r12	        70	elf.c	FUNCTION_1
0x4001ca2	              0x55	                                push rbp	        70	elf.c	FUNCTION_1
0x4001ca3	          0x4989fc	                            mov r12, rdi	        70	elf.c	FUNCTION_1
0x4001ca6	              0x53	                                push rbx	        70	elf.c	FUNCTION_1
0x4001ca7	        0x488b4708	                mov rax, qword [rdi + 8]	        71	elf.c	FUNCTION_1	CALL_1
0x4001cab	          0x4889d5	                            mov rbp, rdx	        70	elf.c	FUNCTION_1
0x4001cae	          0x4889f3	                            mov rbx, rsi	        70	elf.c	FUNCTION_1
0x4001cb1	          0x4889f7	                            mov rdi, rsi	        71	elf.c	FUNCTION_1	CALL_1
0x4001cb4	    0xff9098000000	                 call qword [rax + 0x98]	        71	elf.c	FUNCTION_1	CALL_1
0x4001cba	        0x66894500	                      mov word [rbp], ax	        71	elf.c	FUNCTION_1	CALL_1
0x4001cbe	      0x498b442408	                mov rax, qword [r12 + 8]	        72	elf.c	FUNCTION_1	CALL_2
0x4001cc3	        0x488d7b02	                      lea rdi, [rbx + 2]	        72	elf.c	FUNCTION_1	CALL_2
0x4001cc7	    0xff9098000000	                 call qword [rax + 0x98]	        72	elf.c	FUNCTION_1	CALL_2
0x4001ccd	        0x66894502	                  mov word [rbp + 2], ax	        72	elf.c	FUNCTION_1	CALL_2
0x4001cd1	      0x498b442408	                mov rax, qword [r12 + 8]	        73	elf.c	FUNCTION_1	CALL_3
0x4001cd6	        0x488d7b04	                      lea rdi, [rbx + 4]	        73	elf.c	FUNCTION_1	CALL_3
0x4001cda	    0xff9098000000	                 call qword [rax + 0x98]	        73	elf.c	FUNCTION_1	CALL_3
0x4001ce0	        0x66894504	                  mov word [rbp + 4], ax	        73	elf.c	FUNCTION_1	CALL_3
0x4001ce4	      0x498b442408	                mov rax, qword [r12 + 8]	        74	elf.c	FUNCTION_1	CALL_4
0x4001ce9	        0x488d7b06	                      lea rdi, [rbx + 6]	        74	elf.c	FUNCTION_1	CALL_4
0x4001ced	    0xff9098000000	                 call qword [rax + 0x98]	        74	elf.c	FUNCTION_1	CALL_4
0x4001cf3	        0x66894506	                  mov word [rbp + 6], ax	        74	elf.c	FUNCTION_1	CALL_4
0x4001cf7	      0x498b442408	                mov rax, qword [r12 + 8]	        75	elf.c	FUNCTION_1	CALL_5
0x4001cfc	        0x488d7b08	                      lea rdi, [rbx + 8]	        75	elf.c	FUNCTION_1	CALL_5
0x4001d00	    0xff9080000000	                 call qword [rax + 0x80]	        75	elf.c	FUNCTION_1	CALL_5
0x4001d06	        0x48894508	                mov qword [rbp + 8], rax	        75	elf.c	FUNCTION_1	CALL_5
0x4001d0a	      0x498b442408	                mov rax, qword [r12 + 8]	        76	elf.c	FUNCTION_1	CALL_6
0x4001d0f	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	        76	elf.c	FUNCTION_1	CALL_6
0x4001d13	    0xff9080000000	                 call qword [rax + 0x80]	        76	elf.c	FUNCTION_1	CALL_6
0x4001d19	        0x48894510	            mov qword [rbp + 0x10], rax 	        76	elf.c	FUNCTION_1	CALL_6
0x4001d1d	      0x498b442408	                mov rax, qword [r12 + 8]	        77	elf.c	FUNCTION_1	CALL_7
0x4001d22	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        77	elf.c	FUNCTION_1	CALL_7
0x4001d26	    0xff9080000000	                 call qword [rax + 0x80]	        77	elf.c	FUNCTION_1	CALL_7
0x4001d2c	        0x48894518	            mov qword [rbp + 0x18], rax 	        77	elf.c	FUNCTION_1	CALL_7
0x4001d30	              0x5b	                                 pop rbx	        78	elf.c	FUNCTION_1
0x4001d31	              0x5d	                                 pop rbp	        78	elf.c	FUNCTION_1
0x4001d32	            0x415c	                                 pop r12	        78	elf.c	FUNCTION_1
0x4001d34	              0xc3	                                     ret	        78	elf.c	FUNCTION_1
_bfd_elf_get_lineno	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	5
0x400e090	        0x4883ec08	                              sub rsp, 8	      8714	elf.c	FUNCTION_101
0x400e094	      0xba00000000	                              mov edx, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x400e099	      0xbe0b220000	                         mov esi, 0x220b	      8715	elf.c	FUNCTION_101	CALL_1
0x400e09e	      0xbf00000000	                              mov edi, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x400e0a3	      0xe800000000	                          call 0x400e0a8	      8715	elf.c	FUNCTION_101	CALL_1
bfd_get_elf_phdr_upper_bound	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	14
0x4010ea0	        0x488b4708	                mov rax, qword [rdi + 8]	     11222	elf.c	FUNCTION_193	IF_1
0x4010ea4	        0x83780805	                  cmp dword [rax + 8], 5	     11222	elf.c	FUNCTION_193	IF_1
0x4010ea8	            0x7516	                           jne 0x4010ec0	     11222	elf.c	FUNCTION_193	IF_1
0x4010eaa	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11228	elf.c	FUNCTION_193	CALL_2
0x4010eb1	          0x8b4044	            mov eax, dword [rax + 0x44] 	     11228	elf.c	FUNCTION_193	CALL_2
0x4010eb4	        0x48c1e006	                              shl rax, 6	     11228	elf.c	FUNCTION_193	CALL_2
0x4010eb8	              0xc3	                                     ret	     11228	elf.c	FUNCTION_193	CALL_2
0x4010eb9	     0xf1f80000000	                         nop dword [rax]	     11228	elf.c	FUNCTION_193	CALL_2
0x4010ec0	        0x4883ec08	                              sub rsp, 8	     11221	elf.c	FUNCTION_193
0x4010ec4	      0xbf03000000	                              mov edi, 3	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x4010ec9	      0xe800000000	                          call 0x4010ece	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x4010ece	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11225	elf.c	FUNCTION_193	IF_1
0x4010ed5	        0x4883c408	                              add rsp, 8	     11229	elf.c	FUNCTION_193
0x4010ed9	              0xc3	                                     ret	     11229	elf.c	FUNCTION_193
_bfd_elf_copy_private_section_data	SWITCH,0:CALL,3:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	29
0x400a8f0	        0x488b4708	                mov rax, qword [rdi + 8]	      7571	elf.c	FUNCTION_84	IF_1
0x400a8f4	        0x83780805	                  cmp dword [rax + 8], 5	      7571	elf.c	FUNCTION_84	IF_1
0x400a8f8	            0x7406	                            je 0x400a900	      7571	elf.c	FUNCTION_84	IF_1
0x400a8fa	      0xb801000000	                              mov eax, 1	      7588	elf.c	FUNCTION_84
0x400a8ff	              0xc3	                                     ret	      7588	elf.c	FUNCTION_84
0x400a900	        0x488b4208	                mov rax, qword [rdx + 8]	      7572	elf.c	FUNCTION_84	IF_1
0x400a904	        0x83780805	                  cmp dword [rax + 8], 5	      7572	elf.c	FUNCTION_84	IF_1
0x400a908	            0x75f0	                           jne 0x400a8fa	      7572	elf.c	FUNCTION_84	IF_1
0x400a90a	    0x4c8b86e00000	              mov r8, qword [rsi + 0xe0]	      7575	elf.c	FUNCTION_84	CALL_1
0x400a911	    0x4c8b89e00000	              mov r9, qword [rcx + 0xe0]	      7576	elf.c	FUNCTION_84	CALL_2
0x400a918	        0x498b4038	              mov rax, qword [r8 + 0x38]	      7578	elf.c	FUNCTION_84
0x400a91c	        0x49894138	              mov qword [r9 + 0x38], rax	      7578	elf.c	FUNCTION_84
0x400a920	        0x418b4004	                 mov eax, dword [r8 + 4]	      7580	elf.c	FUNCTION_84	IF_2
0x400a924	          0x83f802	                              cmp eax, 2	      7583	elf.c	FUNCTION_84	IF_2
0x400a927	        0x410f94c3	                               sete r11b	      7583	elf.c	FUNCTION_84	IF_2
0x400a92b	          0x83f80b	                            cmp eax, 0xb	      7583	elf.c	FUNCTION_84	IF_2
0x400a92e	        0x410f94c2	                               sete r10b	      7583	elf.c	FUNCTION_84	IF_2
0x400a932	          0x4508d3	                           or r11b, r10b	      7583	elf.c	FUNCTION_84	IF_2
0x400a935	            0x7519	                           jne 0x400a950	      7583	elf.c	FUNCTION_84	IF_2
0x400a937	      0x2dfdffff6f	                     sub eax, 0x6ffffffd	      7583	elf.c	FUNCTION_84	IF_2
0x400a93c	          0x83f801	                              cmp eax, 1	      7583	elf.c	FUNCTION_84	IF_2
0x400a93f	            0x760f	                           jbe 0x400a950	      7583	elf.c	FUNCTION_84	IF_2
0x400a941	          0x4531c0	                            xor r8d, r8d	      7586	elf.c	FUNCTION_84	CALL_3
0x400a944	      0xe9f7fdffff	jmp sym._bfd_elf_init_private_section_data	      7586	elf.c	FUNCTION_84	CALL_3
0x400a949	     0xf1f80000000	                         nop dword [rax]	      7586	elf.c	FUNCTION_84	CALL_3
0x400a950	        0x418b402c	              mov eax, dword [r8 + 0x2c]	      7584	elf.c	FUNCTION_84	IF_2
0x400a954	          0x4531c0	                            xor r8d, r8d	      7586	elf.c	FUNCTION_84	CALL_3
0x400a957	        0x4189412c	              mov dword [r9 + 0x2c], eax	      7584	elf.c	FUNCTION_84	IF_2
0x400a95b	      0xe9e0fdffff	jmp sym._bfd_elf_init_private_section_data	      7586	elf.c	FUNCTION_84	CALL_3
_bfd_elf_swap_versym_out	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	6
0x4002060	           0xfb70e	                   movzx ecx, word [rsi]	       191	elf.c	FUNCTION_10	CALL_1
0x4002063	        0x488b4708	                mov rax, qword [rdi + 8]	       191	elf.c	FUNCTION_10	CALL_1
0x4002067	          0x4889d6	                            mov rsi, rdx	       191	elf.c	FUNCTION_10	CALL_1
0x400206a	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       191	elf.c	FUNCTION_10	CALL_1
0x4002071	          0x4889cf	                            mov rdi, rcx	       191	elf.c	FUNCTION_10	CALL_1
0x4002074	            0xffe0	                                 jmp rax	       191	elf.c	FUNCTION_10	CALL_1
elfcore_grok_note	SWITCH,1:CALL,53:IF,26:functions,0:ELSE,21:DO,0:WHILE,0:FOR,0	628
0x400f520	            0x4156	                                push r14	      9655	elf.c	FUNCTION_144
0x400f522	            0x4155	                                push r13	      9655	elf.c	FUNCTION_144
0x400f524	            0x4154	                                push r12	      9655	elf.c	FUNCTION_144
0x400f526	              0x55	                                push rbp	      9655	elf.c	FUNCTION_144
0x400f527	          0x4889fd	                            mov rbp, rdi	      9655	elf.c	FUNCTION_144
0x400f52a	              0x53	                                push rbx	      9655	elf.c	FUNCTION_144
0x400f52b	          0x4889f3	                            mov rbx, rsi	      9655	elf.c	FUNCTION_144
0x400f52e	        0x4883ec30	                           sub rsp, 0x30	      9655	elf.c	FUNCTION_144
0x400f532	        0x488b5708	                mov rdx, qword [rdi + 8]	      9656	elf.c	FUNCTION_144	CALL_1
0x400f536	    0x64488b042528	                mov rax, qword fs:[0x28]	      9655	elf.c	FUNCTION_144
0x400f53f	      0x4889442428	             mov qword [rsp + 0x28], rax	      9655	elf.c	FUNCTION_144
0x400f544	            0x31c0	                            xor eax, eax	      9655	elf.c	FUNCTION_144
0x400f546	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f54a	    0x488b8a680300	           mov rcx, qword [rdx + 0x368] 	      9656	elf.c	FUNCTION_144	CALL_1
0x400f551	    0x483d05030000	                          cmp rax, 0x305	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f557	     0xf846b070000	                            je 0x400fcc8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f55d	            0x7669	                           jbe 0x400f5c8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f55f	    0x483d0c030000	                          cmp rax, 0x30c	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f565	     0xf84d5020000	                            je 0x400f840	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f56b	     0xf86cf000000	                           jbe 0x400f640	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f571	    0x483d03040000	                          cmp rax, 0x403	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f577	     0xf848b070000	                            je 0x400fd08	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f57d	     0xf868d010000	                           jbe 0x400f710	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f583	    0x483d7f2be646	                     cmp rax, 0x46e62b7f	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f589	     0xf84b9060000	                            je 0x400fc48	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f58f	    0x483d49474953	                     cmp rax, 0x53494749	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f595	     0xf84a5030000	                            je 0x400f940	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f59b	    0x483d454c4946	                     cmp rax, 0x46494c45	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5a1	     0xf85e9010000	                           jne 0x400f790	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5a7	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f5ab	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f5af	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f5b4	      0xe800000000	                          call 0x400f5b9	      9192	elf.c	FUNCTION_116	CALL_1
0x400f5b9	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f5bc	      0xe907020000	                           jmp 0x400f7c8	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x400f5c1	     0xf1f80000000	                         nop dword [rax]	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x400f5c8	    0x483d00010000	                          cmp rax, 0x100	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5ce	     0xf8474070000	                            je 0x400fd48	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5d4	     0xf8686010000	                           jbe 0x400f760	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5da	    0x483d01030000	                          cmp rax, 0x301	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5e0	     0xf84a2070000	                            je 0x400fd88	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5e6	     0xf86bc000000	                           jbe 0x400f6a8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5ec	    0x483d03030000	                          cmp rax, 0x303	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5f2	     0xf8490050000	                            je 0x400fb88	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5f8	     0xf8782020000	                            ja 0x400f880	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f5fe	        0x48833e06	                      cmp qword [rsi], 6	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x400f602	     0xf8588010000	                           jne 0x400f790	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x400f608	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400f60c	      0xbf00000000	                              mov edi, 0	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400f611	      0xb906000000	                              mov ecx, 6	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400f616	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400f618	     0xf8572010000	                           jne 0x400f790	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400f61e	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f622	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f626	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f62b	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f62e	      0xe800000000	                          call 0x400f633	      9192	elf.c	FUNCTION_116	CALL_1
0x400f633	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f636	      0xe98d010000	                           jmp 0x400f7c8	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x400f63b	       0xf1f440000	                   nop dword [rax + rax]	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x400f640	    0x483d08030000	                          cmp rax, 0x308	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f646	     0xf8474020000	                            je 0x400f8c0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f64c	     0xf869e010000	                           jbe 0x400f7f0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f652	    0x483d0a030000	                          cmp rax, 0x30a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f658	     0xf842a060000	                            je 0x400fc88	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f65e	     0xf8754040000	                            ja 0x400fab8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f664	        0x48833e06	                      cmp qword [rsi], 6	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x400f668	     0xf8522010000	                           jne 0x400f790	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x400f66e	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400f672	      0xbf00000000	                              mov edi, 0	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400f677	      0xb906000000	                              mov ecx, 6	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400f67c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400f67e	     0xf850c010000	                           jne 0x400f790	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400f684	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f688	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f68c	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f691	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f694	      0xe800000000	                          call 0x400f699	      9192	elf.c	FUNCTION_116	CALL_1
0x400f699	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f69c	      0xe927010000	                           jmp 0x400f7c8	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x400f6a1	     0xf1f80000000	                         nop dword [rax]	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x400f6a8	    0x483d02020000	                          cmp rax, 0x202	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f6ae	     0xf8414050000	                            je 0x400fbc8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f6b4	    0x483d00030000	                          cmp rax, 0x300	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f6ba	     0xf8478030000	                            je 0x400fa38	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f6c0	    0x483d02010000	                          cmp rax, 0x102	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f6c6	     0xf85c4000000	                           jne 0x400f790	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f6cc	        0x48833e06	                      cmp qword [rsi], 6	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x400f6d0	     0xf85ba000000	                           jne 0x400f790	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x400f6d6	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400f6da	      0xbf00000000	                              mov edi, 0	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400f6df	      0xb906000000	                              mov ecx, 6	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400f6e4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400f6e6	     0xf85a4000000	                           jne 0x400f790	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400f6ec	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f6f0	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f6f4	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f6f9	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f6fc	      0xe800000000	                          call 0x400f701	      9192	elf.c	FUNCTION_116	CALL_1
0x400f701	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f704	      0xe9bf000000	                           jmp 0x400f7c8	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x400f709	     0xf1f80000000	                         nop dword [rax]	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x400f710	    0x483d01040000	                          cmp rax, 0x401	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f716	     0xf84ec040000	                            je 0x400fc08	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f71c	     0xf87de010000	                            ja 0x400f900	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f722	    0x483d00040000	                          cmp rax, 0x400	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f728	            0x7566	                           jne 0x400f790	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f72a	        0x48833e06	                      cmp qword [rsi], 6	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x400f72e	            0x7560	                           jne 0x400f790	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x400f730	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400f734	      0xbf00000000	                              mov edi, 0	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400f739	      0xb906000000	                              mov ecx, 6	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400f73e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400f740	            0x754e	                           jne 0x400f790	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400f742	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f746	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f74a	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f74f	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f752	      0xe800000000	                          call 0x400f757	      9192	elf.c	FUNCTION_116	CALL_1
0x400f757	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f75a	            0xeb6c	                           jmp 0x400f7c8	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x400f75c	         0xf1f4000	                         nop dword [rax]	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x400f760	        0x4883f803	                              cmp rax, 3	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f764	     0xf84e6030000	                            je 0x400fb50	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f76a	            0x7634	                           jbe 0x400f7a0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f76c	        0x4883f80d	                            cmp rax, 0xd	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f770	     0xf84da030000	                            je 0x400fb50	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f776	        0x4883f812	                           cmp rax, 0x12	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f77a	     0xf8410020000	                            je 0x400f990	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f780	        0x4883f806	                              cmp rax, 6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f784	     0xf846e030000	                            je 0x400faf8	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f78a	    0x660f1f440000	                    nop word [rax + rax]	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f790	    0x41bc01000000	                             mov r12d, 1	      9661	elf.c	FUNCTION_144	SWITCH_1
0x400f796	            0xeb30	                           jmp 0x400f7c8	      9661	elf.c	FUNCTION_144	SWITCH_1
0x400f798	     0xf1f84000000	                   nop dword [rax + rax]	      9661	elf.c	FUNCTION_144	SWITCH_1
0x400f7a0	        0x4883f801	                              cmp rax, 1	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f7a4	     0xf84b6010000	                            je 0x400f960	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f7aa	        0x4883f802	                              cmp rax, 2	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f7ae	            0x75e0	                           jne 0x400f790	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f7b0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f7b4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f7b8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f7bd	      0xe800000000	                          call 0x400f7c2	      9192	elf.c	FUNCTION_116	CALL_1
0x400f7c2	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f7c5	           0xf1f00	                         nop dword [rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f7c8	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      9870	elf.c	FUNCTION_144
0x400f7cd	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9870	elf.c	FUNCTION_144
0x400f7d6	          0x4489e0	                           mov eax, r12d	      9870	elf.c	FUNCTION_144
0x400f7d9	     0xf85b4070000	                           jne 0x400ff93	      9870	elf.c	FUNCTION_144
0x400f7df	        0x4883c430	                           add rsp, 0x30	      9870	elf.c	FUNCTION_144
0x400f7e3	              0x5b	                                 pop rbx	      9870	elf.c	FUNCTION_144
0x400f7e4	              0x5d	                                 pop rbp	      9870	elf.c	FUNCTION_144
0x400f7e5	            0x415c	                                 pop r12	      9870	elf.c	FUNCTION_144
0x400f7e7	            0x415d	                                 pop r13	      9870	elf.c	FUNCTION_144
0x400f7e9	            0x415e	                                 pop r14	      9870	elf.c	FUNCTION_144
0x400f7eb	              0xc3	                                     ret	      9870	elf.c	FUNCTION_144
0x400f7ec	         0xf1f4000	                         nop dword [rax]	      9870	elf.c	FUNCTION_144
0x400f7f0	    0x483d06030000	                          cmp rax, 0x306	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f7f6	     0xf847c020000	                            je 0x400fa78	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f7fc	    0x483d07030000	                          cmp rax, 0x307	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f802	            0x758c	                           jne 0x400f790	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400f804	        0x48833e06	                      cmp qword [rsi], 6	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x400f808	            0x7586	                           jne 0x400f790	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x400f80a	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400f80e	      0xbf00000000	                              mov edi, 0	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400f813	      0xb906000000	                              mov ecx, 6	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400f818	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400f81a	     0xf8570ffffff	                           jne 0x400f790	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400f820	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f824	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f828	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f82d	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f830	      0xe800000000	                          call 0x400f835	      9192	elf.c	FUNCTION_116	CALL_1
0x400f835	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f838	            0xeb8e	                           jmp 0x400f7c8	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x400f83a	    0x660f1f440000	                    nop word [rax + rax]	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x400f840	        0x48833e06	                      cmp qword [rsi], 6	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x400f844	     0xf8546ffffff	                           jne 0x400f790	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x400f84a	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400f84e	      0xbf00000000	                              mov edi, 0	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400f853	      0xb906000000	                              mov ecx, 6	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400f858	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400f85a	     0xf8530ffffff	                           jne 0x400f790	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400f860	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f864	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f868	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f86d	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f870	      0xe800000000	                          call 0x400f875	      9192	elf.c	FUNCTION_116	CALL_1
0x400f875	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f878	      0xe94bffffff	                           jmp 0x400f7c8	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x400f87d	           0xf1f00	                         nop dword [rax]	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x400f880	        0x48833e06	                      cmp qword [rsi], 6	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x400f884	     0xf8506ffffff	                           jne 0x400f790	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x400f88a	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400f88e	      0xbf00000000	                              mov edi, 0	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400f893	      0xb906000000	                              mov ecx, 6	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400f898	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400f89a	     0xf85f0feffff	                           jne 0x400f790	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400f8a0	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8a4	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8a8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8ad	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8b0	      0xe800000000	                          call 0x400f8b5	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8b5	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8b8	      0xe90bffffff	                           jmp 0x400f7c8	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x400f8bd	           0xf1f00	                         nop dword [rax]	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x400f8c0	        0x48833e06	                      cmp qword [rsi], 6	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x400f8c4	     0xf85c6feffff	                           jne 0x400f790	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x400f8ca	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400f8ce	      0xbf00000000	                              mov edi, 0	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400f8d3	      0xb906000000	                              mov ecx, 6	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400f8d8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400f8da	     0xf85b0feffff	                           jne 0x400f790	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400f8e0	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8e4	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8e8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8ed	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8f0	      0xe800000000	                          call 0x400f8f5	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8f5	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f8f8	      0xe9cbfeffff	                           jmp 0x400f7c8	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x400f8fd	           0xf1f00	                         nop dword [rax]	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x400f900	        0x48833e06	                      cmp qword [rsi], 6	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x400f904	     0xf8586feffff	                           jne 0x400f790	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x400f90a	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400f90e	      0xbf00000000	                              mov edi, 0	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400f913	      0xb906000000	                              mov ecx, 6	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400f918	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400f91a	     0xf8570feffff	                           jne 0x400f790	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400f920	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f924	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f928	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f92d	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400f930	      0xe800000000	                          call 0x400f935	      9192	elf.c	FUNCTION_116	CALL_1
0x400f935	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f938	      0xe98bfeffff	                           jmp 0x400f7c8	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x400f93d	           0xf1f00	                         nop dword [rax]	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x400f940	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f944	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f948	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f94d	      0xe800000000	                          call 0x400f952	      9192	elf.c	FUNCTION_116	CALL_1
0x400f952	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400f955	      0xe96efeffff	                           jmp 0x400f7c8	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x400f95a	    0x660f1f440000	                    nop word [rax + rax]	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x400f960	    0x488b81080200	           mov rax, qword [rcx + 0x208] 	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x400f967	          0x4885c0	                           test rax, rax	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x400f96a	            0x740a	                            je 0x400f976	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x400f96c	            0xffd0	                                call rax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x400f96e	            0x85c0	                           test eax, eax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x400f970	     0xf851afeffff	                           jne 0x400f790	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x400f976	          0x4889de	                            mov rsi, rbx	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400f979	          0x4889ef	                            mov rdi, rbp	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400f97c	      0xe8aff0ffff	          call sym.elfcore_grok_prstatus	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400f981	          0x4189c4	                           mov r12d, eax	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400f984	      0xe93ffeffff	                           jmp 0x400f7c8	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400f989	     0xf1f80000000	                         nop dword [rax]	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400f990	    0x48817e08d702	              cmp qword [rsi + 8], 0x2d7	      9575	elf.c	FUNCTION_143	IF_1
0x400f998	     0xf86f2fdffff	                           jbe 0x400f790	      9575	elf.c	FUNCTION_143	IF_1
0x400f99e	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9a2	      0xbf00000000	                              mov edi, 0	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9a7	      0xb905000000	                              mov ecx, 5	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9ac	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9ae	        0x410f97c4	                               seta r12b	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9b2	           0xf92c0	                                 setb al	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9b5	          0x4129c4	                           sub r12d, eax	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9b8	        0x450fbee4	                        movsx r12d, r12b	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9bc	          0x4585e4	                         test r12d, r12d	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9bf	     0xf85cbfdffff	                           jne 0x400f790	      9578	elf.c	FUNCTION_143	IF_2	CALL_1
0x400f9c5	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9581	elf.c	FUNCTION_143	CALL_2
0x400f9c9	          0xff5238	                 call qword [rdx + 0x38]	      9581	elf.c	FUNCTION_143	CALL_2
0x400f9cc	          0x83f802	                              cmp eax, 2	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400f9cf	     0xf84be040000	                            je 0x400fe93	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400f9d5	          0x83f803	                              cmp eax, 3	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400f9d8	     0xf84e7030000	                            je 0x400fdc5	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400f9de	          0x83f801	                              cmp eax, 1	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400f9e1	     0xf85a9fdffff	                           jne 0x400f790	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400f9e7	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400f9ee	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400f9f5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400f9f9	        0x488d7808	                      lea rdi, [rax + 8]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400f9fd	        0x488b4508	                mov rax, qword [rbp + 8]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400fa01	          0xff5038	                 call qword [rax + 0x38]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400fa04	      0x4189442404	                mov dword [r12 + 4], eax	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400fa09	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400fa10	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400fa14	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400fa1b	        0x488b4508	                mov rax, qword [rbp + 8]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400fa1f	        0x4883c70c	                            add rdi, 0xc	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400fa23	          0xff5038	                 call qword [rax + 0x38]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400fa26	        0x41890424	                    mov dword [r12], eax	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400fa2a	    0x41bc01000000	                             mov r12d, 1	      9650	elf.c	FUNCTION_143
0x400fa30	      0xe993fdffff	                           jmp 0x400f7c8	      9650	elf.c	FUNCTION_143
0x400fa35	           0xf1f00	                         nop dword [rax]	      9650	elf.c	FUNCTION_143
0x400fa38	        0x48833e06	                      cmp qword [rsi], 6	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x400fa3c	     0xf854efdffff	                           jne 0x400f790	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x400fa42	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400fa46	      0xbf00000000	                              mov edi, 0	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400fa4b	      0xb906000000	                              mov ecx, 6	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400fa50	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400fa52	     0xf8538fdffff	                           jne 0x400f790	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400fa58	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fa5c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fa60	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fa65	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fa68	      0xe800000000	                          call 0x400fa6d	      9192	elf.c	FUNCTION_116	CALL_1
0x400fa6d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fa70	      0xe953fdffff	                           jmp 0x400f7c8	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x400fa75	           0xf1f00	                         nop dword [rax]	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x400fa78	        0x48833e06	                      cmp qword [rsi], 6	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x400fa7c	     0xf850efdffff	                           jne 0x400f790	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x400fa82	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400fa86	      0xbf00000000	                              mov edi, 0	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400fa8b	      0xb906000000	                              mov ecx, 6	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400fa90	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400fa92	     0xf85f8fcffff	                           jne 0x400f790	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400fa98	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fa9c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400faa0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400faa5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400faa8	      0xe800000000	                          call 0x400faad	      9192	elf.c	FUNCTION_116	CALL_1
0x400faad	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fab0	      0xe913fdffff	                           jmp 0x400f7c8	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x400fab5	           0xf1f00	                         nop dword [rax]	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x400fab8	        0x48833e06	                      cmp qword [rsi], 6	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x400fabc	     0xf85cefcffff	                           jne 0x400f790	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x400fac2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400fac6	      0xbf00000000	                              mov edi, 0	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400facb	      0xb906000000	                              mov ecx, 6	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400fad0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400fad2	     0xf85b8fcffff	                           jne 0x400f790	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400fad8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fadc	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fae0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fae5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fae8	      0xe800000000	                          call 0x400faed	      9192	elf.c	FUNCTION_116	CALL_1
0x400faed	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400faf0	      0xe9d3fcffff	                           jmp 0x400f7c8	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x400faf5	           0xf1f00	                         nop dword [rax]	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x400faf8	      0xba00010000	                          mov edx, 0x100	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400fafd	      0xbe00000000	                              mov esi, 0	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400fb02	          0x4531e4	                          xor r12d, r12d	      9853	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x400fb05	      0xe800000000	                          call 0x400fb0a	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400fb0a	          0x4885c0	                           test rax, rax	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x400fb0d	          0x4989c5	                            mov r13, rax	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400fb10	     0xf84b2fcffff	                            je 0x400f7c8	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x400fb16	        0x488b4308	                mov rax, qword [rbx + 8]	      9854	elf.c	FUNCTION_144	SWITCH_1
0x400fb1a	          0x4889ef	                            mov rdi, rbp	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb1d	    0x41bc01000000	                             mov r12d, 1	      9858	elf.c	FUNCTION_144	SWITCH_1
0x400fb23	        0x49894538	             mov qword [r13 + 0x38], rax	      9854	elf.c	FUNCTION_144	SWITCH_1
0x400fb27	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      9855	elf.c	FUNCTION_144	SWITCH_1
0x400fb2b	    0x498985900000	             mov qword [r13 + 0x90], rax	      9855	elf.c	FUNCTION_144	SWITCH_1
0x400fb32	      0xe800000000	                          call 0x400fb37	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb37	          0x8d501f	                   lea edx, [rax + 0x1f]	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb3a	            0x85c0	                           test eax, eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb3c	           0xf48c2	                          cmovs eax, edx	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb3f	          0xc1f805	                              sar eax, 5	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb42	          0x83c001	                              add eax, 1	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb45	        0x41894570	             mov dword [r13 + 0x70], eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400fb49	      0xe97afcffff	                           jmp 0x400f7c8	      9858	elf.c	FUNCTION_144	SWITCH_1
0x400fb4e	            0x6690	                                     nop	      9858	elf.c	FUNCTION_144	SWITCH_1
0x400fb50	    0x488b81100200	           mov rax, qword [rcx + 0x210] 	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x400fb57	          0x4885c0	                           test rax, rax	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x400fb5a	            0x7410	                            je 0x400fb6c	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x400fb5c	          0x4889de	                            mov rsi, rbx	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400fb5f	          0x4889ef	                            mov rdi, rbp	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400fb62	            0xffd0	                                call rax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400fb64	            0x85c0	                           test eax, eax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400fb66	     0xf8524fcffff	                           jne 0x400f790	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400fb6c	        0x488b7308	                mov rsi, qword [rbx + 8]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400fb70	        0x488d5320	                   lea rdx, [rbx + 0x20]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400fb74	          0x4889ef	                            mov rdi, rbp	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400fb77	      0xe8c4f7ffff	    call sym.elfcore_grok_psinfo.isra.29	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400fb7c	          0x4189c4	                           mov r12d, eax	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400fb7f	      0xe944fcffff	                           jmp 0x400f7c8	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400fb84	         0xf1f4000	                         nop dword [rax]	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400fb88	        0x48833e06	                      cmp qword [rsi], 6	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x400fb8c	     0xf85fefbffff	                           jne 0x400f790	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x400fb92	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400fb96	      0xbf00000000	                              mov edi, 0	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400fb9b	      0xb906000000	                              mov ecx, 6	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400fba0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400fba2	     0xf85e8fbffff	                           jne 0x400f790	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400fba8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbac	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbb0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbb5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbb8	      0xe800000000	                          call 0x400fbbd	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbbd	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbc0	      0xe903fcffff	                           jmp 0x400f7c8	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x400fbc5	           0xf1f00	                         nop dword [rax]	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x400fbc8	        0x48833e06	                      cmp qword [rsi], 6	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x400fbcc	     0xf85befbffff	                           jne 0x400f790	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x400fbd2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400fbd6	      0xbf00000000	                              mov edi, 0	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400fbdb	      0xb906000000	                              mov ecx, 6	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400fbe0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400fbe2	     0xf85a8fbffff	                           jne 0x400f790	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400fbe8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbec	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbf0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbf5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbf8	      0xe800000000	                          call 0x400fbfd	      9192	elf.c	FUNCTION_116	CALL_1
0x400fbfd	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc00	      0xe9c3fbffff	                           jmp 0x400f7c8	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x400fc05	           0xf1f00	                         nop dword [rax]	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x400fc08	        0x48833e06	                      cmp qword [rsi], 6	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x400fc0c	     0xf857efbffff	                           jne 0x400f790	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x400fc12	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400fc16	      0xbf00000000	                              mov edi, 0	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400fc1b	      0xb906000000	                              mov ecx, 6	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400fc20	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400fc22	     0xf8568fbffff	                           jne 0x400f790	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400fc28	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc2c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc30	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc35	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc38	      0xe800000000	                          call 0x400fc3d	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc3d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc40	      0xe983fbffff	                           jmp 0x400f7c8	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x400fc45	           0xf1f00	                         nop dword [rax]	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x400fc48	        0x48833e06	                      cmp qword [rsi], 6	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x400fc4c	     0xf853efbffff	                           jne 0x400f790	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x400fc52	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400fc56	      0xbf00000000	                              mov edi, 0	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400fc5b	      0xb906000000	                              mov ecx, 6	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400fc60	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400fc62	     0xf8528fbffff	                           jne 0x400f790	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400fc68	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc6c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc70	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc75	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc78	      0xe800000000	                          call 0x400fc7d	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc7d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fc80	      0xe943fbffff	                           jmp 0x400f7c8	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x400fc85	           0xf1f00	                         nop dword [rax]	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x400fc88	        0x48833e06	                      cmp qword [rsi], 6	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x400fc8c	     0xf85fefaffff	                           jne 0x400f790	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x400fc92	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400fc96	      0xbf00000000	                              mov edi, 0	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400fc9b	      0xb906000000	                              mov ecx, 6	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400fca0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400fca2	     0xf85e8faffff	                           jne 0x400f790	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400fca8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcac	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcb0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcb5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcb8	      0xe800000000	                          call 0x400fcbd	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcbd	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcc0	      0xe903fbffff	                           jmp 0x400f7c8	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x400fcc5	           0xf1f00	                         nop dword [rax]	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x400fcc8	        0x48833e06	                      cmp qword [rsi], 6	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x400fccc	     0xf85befaffff	                           jne 0x400f790	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x400fcd2	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400fcd6	      0xbf00000000	                              mov edi, 0	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400fcdb	      0xb906000000	                              mov ecx, 6	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400fce0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400fce2	     0xf85a8faffff	                           jne 0x400f790	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400fce8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcec	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcf0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcf5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcf8	      0xe800000000	                          call 0x400fcfd	      9192	elf.c	FUNCTION_116	CALL_1
0x400fcfd	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd00	      0xe9c3faffff	                           jmp 0x400f7c8	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x400fd05	           0xf1f00	                         nop dword [rax]	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x400fd08	        0x48833e06	                      cmp qword [rsi], 6	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x400fd0c	     0xf857efaffff	                           jne 0x400f790	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x400fd12	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400fd16	      0xbf00000000	                              mov edi, 0	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400fd1b	      0xb906000000	                              mov ecx, 6	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400fd20	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400fd22	     0xf8568faffff	                           jne 0x400f790	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400fd28	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd2c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd30	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd35	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd38	      0xe800000000	                          call 0x400fd3d	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd3d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd40	      0xe983faffff	                           jmp 0x400f7c8	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x400fd45	           0xf1f00	                         nop dword [rax]	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x400fd48	        0x48833e06	                      cmp qword [rsi], 6	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x400fd4c	     0xf853efaffff	                           jne 0x400f790	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x400fd52	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400fd56	      0xbf00000000	                              mov edi, 0	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400fd5b	      0xb906000000	                              mov ecx, 6	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400fd60	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400fd62	     0xf8528faffff	                           jne 0x400f790	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400fd68	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd6c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd70	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd75	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd78	      0xe800000000	                          call 0x400fd7d	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd7d	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fd80	      0xe943faffff	                           jmp 0x400f7c8	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x400fd85	           0xf1f00	                         nop dword [rax]	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x400fd88	        0x48833e06	                      cmp qword [rsi], 6	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x400fd8c	     0xf85fef9ffff	                           jne 0x400f790	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x400fd92	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400fd96	      0xbf00000000	                              mov edi, 0	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400fd9b	      0xb906000000	                              mov ecx, 6	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400fda0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400fda2	     0xf85e8f9ffff	                           jne 0x400f790	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400fda8	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400fdac	        0x488b5308	                mov rdx, qword [rbx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400fdb0	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400fdb5	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400fdb8	      0xe800000000	                          call 0x400fdbd	      9192	elf.c	FUNCTION_116	CALL_1
0x400fdbd	          0x4189c4	                           mov r12d, eax	      9192	elf.c	FUNCTION_116	CALL_1
0x400fdc0	      0xe903faffff	                           jmp 0x400f7c8	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x400fdc5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x400fdc9	          0x4989e6	                            mov r14, rsp	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fdcc	        0x488d7804	                      lea rdi, [rax + 4]	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x400fdd0	        0x488b4508	                mov rax, qword [rbp + 8]	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x400fdd4	          0xff5038	                 call qword [rax + 0x38]	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x400fdd7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fddc	          0x4989c0	                             mov r8, rax	      9626	elf.c	FUNCTION_143	SWITCH_1	CALL_14
0x400fddf	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fde4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fde9	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fdec	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fdee	      0xe800000000	                          call 0x400fdf3	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fdf3	          0x4889e0	                            mov rax, rsp	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fdf6	            0x8b08	                    mov ecx, dword [rax]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fdf8	        0x4883c004	                              add rax, 4	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fdfc	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe02	            0xf7d1	                                 not ecx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe04	            0x21ca	                            and edx, ecx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe06	    0x81e280808080	                     and edx, 0x80808080	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe0c	            0x74e8	                            je 0x400fdf6	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe0e	            0x89d1	                            mov ecx, edx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe10	          0x4889ef	                            mov rdi, rbp	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_16
0x400fe13	          0xc1e910	                           shr ecx, 0x10	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe16	    0xf7c280800000	                        test edx, 0x8080	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe1c	           0xf44d1	                          cmove edx, ecx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe1f	        0x488d4802	                      lea rcx, [rax + 2]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe23	        0x480f44c1	                          cmove rax, rcx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe27	            0x89d1	                            mov ecx, edx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe29	              0xd1	                              add cl, dl	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe2b	        0x4883d803	                              sbb rax, 3	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe2f	          0x4c29f0	                            sub rax, r14	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe32	        0x4c8d6801	                      lea r13, [rax + 1]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_15
0x400fe36	          0x4c89ee	                            mov rsi, r13	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_16
0x400fe39	      0xe800000000	                          call 0x400fe3e	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_16
0x400fe3e	          0x4885c0	                           test rax, rax	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x400fe41	     0xf8481f9ffff	                            je 0x400f7c8	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x400fe47	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_204	CALL_3
0x400fe4a	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_204	CALL_3
0x400fe4d	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_204	CALL_3
0x400fe50	      0xe800000000	                          call 0x400fe55	        53	string3.h	FUNCTION_204	CALL_3
0x400fe55	      0xba00010000	                          mov edx, 0x100	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x400fe5a	          0x4889c6	                            mov rsi, rax	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x400fe5d	          0x4889ef	                            mov rdi, rbp	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x400fe60	      0xe800000000	                          call 0x400fe65	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_18
0x400fe65	          0x4885c0	                           test rax, rax	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x400fe68	     0xf845af9ffff	                            je 0x400f7c8	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x400fe6e	        0x488b5308	                mov rdx, qword [rbx + 8]	      9641	elf.c	FUNCTION_143	SWITCH_1
0x400fe72	    0x41bc01000000	                             mov r12d, 1	      9650	elf.c	FUNCTION_143
0x400fe78	        0x48895038	             mov qword [rax + 0x38], rdx	      9641	elf.c	FUNCTION_143	SWITCH_1
0x400fe7c	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      9642	elf.c	FUNCTION_143	SWITCH_1
0x400fe80	    0xc74070020000	               mov dword [rax + 0x70], 2	      9643	elf.c	FUNCTION_143	SWITCH_1
0x400fe87	    0x488990900000	             mov qword [rax + 0x90], rdx	      9642	elf.c	FUNCTION_143	SWITCH_1
0x400fe8e	      0xe935f9ffff	                           jmp 0x400f7c8	      9642	elf.c	FUNCTION_143	SWITCH_1
0x400fe93	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x400fe97	          0x4989e6	                            mov r14, rsp	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fe9a	        0x488d7808	                      lea rdi, [rax + 8]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x400fe9e	        0x488b4508	                mov rax, qword [rbp + 8]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x400fea2	          0xff5038	                 call qword [rax + 0x38]	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x400fea5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x400feaa	          0x4989c0	                             mov r8, rax	      9596	elf.c	FUNCTION_143	SWITCH_1	CALL_7
0x400fead	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_216	CALL_1
0x400feb2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x400feb7	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_216	CALL_1
0x400feba	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_216	CALL_1
0x400febc	      0xe800000000	                          call 0x400fec1	        33	stdio2.h	FUNCTION_216	CALL_1
0x400fec1	          0x4889e0	                            mov rax, rsp	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fec4	            0x8b08	                    mov ecx, dword [rax]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fec6	        0x4883c004	                              add rax, 4	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400feca	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fed0	            0xf7d1	                                 not ecx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fed2	            0x21ca	                            and edx, ecx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fed4	    0x81e280808080	                     and edx, 0x80808080	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400feda	            0x74e8	                            je 0x400fec4	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fedc	            0x89d1	                            mov ecx, edx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fede	          0x4889ef	                            mov rdi, rbp	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x400fee1	          0xc1e910	                           shr ecx, 0x10	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fee4	    0xf7c280800000	                        test edx, 0x8080	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400feea	           0xf44d1	                          cmove edx, ecx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400feed	        0x488d4802	                      lea rcx, [rax + 2]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fef1	        0x480f44c1	                          cmove rax, rcx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fef5	            0x89d1	                            mov ecx, edx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fef7	              0xd1	                              add cl, dl	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fef9	        0x4883d803	                              sbb rax, 3	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400fefd	          0x4c29f0	                            sub rax, r14	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400ff00	        0x4c8d6801	                      lea r13, [rax + 1]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400ff04	          0x4c89ee	                            mov rsi, r13	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x400ff07	      0xe800000000	                          call 0x400ff0c	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x400ff0c	          0x4885c0	                           test rax, rax	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x400ff0f	     0xf84b3f8ffff	                            je 0x400f7c8	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x400ff15	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_204	CALL_3
0x400ff18	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_204	CALL_3
0x400ff1b	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_204	CALL_3
0x400ff1e	      0xe800000000	                          call 0x400ff23	        53	string3.h	FUNCTION_204	CALL_3
0x400ff23	      0xba00010000	                          mov edx, 0x100	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400ff28	          0x4889c6	                            mov rsi, rax	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400ff2b	          0x4889ef	                            mov rdi, rbp	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400ff2e	      0xe800000000	                          call 0x400ff33	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400ff33	          0x4885c0	                           test rax, rax	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x400ff36	          0x4989c5	                            mov r13, rax	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400ff39	     0xf8489f8ffff	                            je 0x400f7c8	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x400ff3f	    0x48c74038cc02	          mov qword [rax + 0x38], 0x2cc 	      9610	elf.c	FUNCTION_143	SWITCH_1
0x400ff47	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      9612	elf.c	FUNCTION_143	SWITCH_1
0x400ff4b	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x400ff4f	    0x41c745700200	               mov dword [r13 + 0x70], 2	      9613	elf.c	FUNCTION_143	SWITCH_1
0x400ff57	        0x4883c00c	                            add rax, 0xc	      9612	elf.c	FUNCTION_143	SWITCH_1
0x400ff5b	    0x498985900000	             mov qword [r13 + 0x90], rax	      9612	elf.c	FUNCTION_143	SWITCH_1
0x400ff62	        0x488b4508	                mov rax, qword [rbp + 8]	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x400ff66	        0x4883c708	                              add rdi, 8	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x400ff6a	          0xff5038	                 call qword [rax + 0x38]	      9616	elf.c	FUNCTION_143	SWITCH_1	CALL_12
0x400ff6d	            0x85c0	                           test eax, eax	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x400ff6f	     0xf841bf8ffff	                            je 0x400f790	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x400ff75	          0x4c89ea	                            mov rdx, r13	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_13
0x400ff78	      0xbe00000000	                              mov esi, 0	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_13
0x400ff7d	          0x4889ef	                            mov rdi, rbp	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_13
0x400ff80	          0x4531e4	                          xor r12d, r12d	      9576	elf.c	FUNCTION_143	IF_1
0x400ff83	      0xe85811ffff	        call sym.elfcore_maybe_make_sect	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_13
0x400ff88	            0x85c0	                           test eax, eax	      9576	elf.c	FUNCTION_143	IF_1
0x400ff8a	        0x410f95c4	                              setne r12b	      9576	elf.c	FUNCTION_143	IF_1
0x400ff8e	      0xe935f8ffff	                           jmp 0x400f7c8	      9576	elf.c	FUNCTION_143	IF_1
0x400ff93	      0xe800000000	                          call 0x400ff98	      9870	elf.c	FUNCTION_144
elf_parse_notes	SWITCH,1:CALL,14:IF,11:functions,0:ELSE,1:DO,0:WHILE,1:FOR,1	228
0x40009b0	            0x4157	                                push r15	     11085	elf.c	FUNCTION_191
0x40009b2	            0x4156	                                push r14	     11085	elf.c	FUNCTION_191
0x40009b4	          0x4989f7	                            mov r15, rsi	     11085	elf.c	FUNCTION_191
0x40009b7	            0x4155	                                push r13	     11085	elf.c	FUNCTION_191
0x40009b9	            0x4154	                                push r12	     11085	elf.c	FUNCTION_191
0x40009bb	          0x4989fe	                            mov r14, rdi	     11085	elf.c	FUNCTION_191
0x40009be	              0x55	                                push rbp	     11085	elf.c	FUNCTION_191
0x40009bf	              0x53	                                push rbx	     11085	elf.c	FUNCTION_191
0x40009c0	          0x4989d5	                            mov r13, rdx	     11085	elf.c	FUNCTION_191
0x40009c3	    0x4881ec280100	                          sub rsp, 0x128	     11085	elf.c	FUNCTION_191
0x40009ca	    0x64488b042528	                mov rax, qword fs:[0x28]	     11085	elf.c	FUNCTION_191
0x40009d3	    0x488984241801	            mov qword [rsp + 0x118], rax	     11085	elf.c	FUNCTION_191
0x40009db	            0x31c0	                            xor eax, eax	     11085	elf.c	FUNCTION_191
0x40009dd	        0x4983f803	                               cmp r8, 3	     11092	elf.c	FUNCTION_191	IF_1
0x40009e1	      0x48894c2410	             mov qword [rsp + 0x10], rcx	     11085	elf.c	FUNCTION_191
0x40009e6	            0x7640	                           jbe 0x4000a28	     11092	elf.c	FUNCTION_191	IF_1
0x40009e8	        0x498d50fc	                       lea rdx, [r8 - 4]	     11094	elf.c	FUNCTION_191	IF_2
0x40009ec	          0x4d89c4	                             mov r12, r8	     11094	elf.c	FUNCTION_191	IF_2
0x40009ef	    0x48f7c2fbffff	            test rdx, 0xfffffffffffffffb	     11094	elf.c	FUNCTION_191	IF_2
0x40009f6	            0x7436	                            je 0x4000a2e	     11094	elf.c	FUNCTION_191	IF_2
0x40009f8	    0x488b8c241801	           mov rcx, qword [rsp + 0x118] 	     11180	elf.c	FUNCTION_191
0x4000a00	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     11180	elf.c	FUNCTION_191
0x4000a09	     0xf8576030000	                           jne 0x4000d85	     11180	elf.c	FUNCTION_191
0x4000a0f	    0x4881c4280100	                          add rsp, 0x128	     11180	elf.c	FUNCTION_191
0x4000a16	              0x5b	                                 pop rbx	     11180	elf.c	FUNCTION_191
0x4000a17	              0x5d	                                 pop rbp	     11180	elf.c	FUNCTION_191
0x4000a18	            0x415c	                                 pop r12	     11180	elf.c	FUNCTION_191
0x4000a1a	            0x415d	                                 pop r13	     11180	elf.c	FUNCTION_191
0x4000a1c	            0x415e	                                 pop r14	     11180	elf.c	FUNCTION_191
0x4000a1e	            0x415f	                                 pop r15	     11180	elf.c	FUNCTION_191
0x4000a20	              0xc3	                                     ret	     11180	elf.c	FUNCTION_191
0x4000a21	     0xf1f80000000	                         nop dword [rax]	     11180	elf.c	FUNCTION_191
0x4000a28	    0x41bc04000000	                             mov r12d, 4	     11093	elf.c	FUNCTION_191	IF_1
0x4000a2e	        0x4b8d042f	                    lea rax, [r15 + r13]	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000a32	          0x4939c7	                            cmp r15, rax	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000a35	      0x4889442418	             mov qword [rsp + 0x18], rax	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000a3a	     0xf83c0010000	                           jae 0x4000c00	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000a40	        0x4983fd0b	                            cmp r13, 0xb	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000a44	          0x4c89f9	                            mov rcx, r15	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000a47	     0xf86a3010000	                           jbe 0x4000bf0	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000a4d	          0x4c89e0	                            mov rax, r12	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000a50	      0x4c89642420	             mov qword [rsp + 0x20], r12	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000a55	          0x4889cd	                            mov rbp, rcx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000a58	          0x48f7d8	                                 neg rax	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000a5b	      0x4889442408	                mov qword [rsp + 8], rax	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000a60	      0x498d4424ff	                      lea rax, [r12 - 1]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000a65	          0x4d89f4	                            mov r12, r14	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000a68	      0x4889442430	             mov qword [rsp + 0x30], rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000a6d	      0x498b442408	                mov rax, qword [r12 + 8]	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000a72	        0x498d7f08	                      lea rdi, [r15 + 8]	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000a76	    0xff9080000000	                 call qword [rax + 0x80]	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000a7c	      0x4889442460	             mov qword [rsp + 0x60], rax	     11106	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000a81	      0x498b442408	                mov rax, qword [r12 + 8]	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x4000a86	          0x4c89ff	                            mov rdi, r15	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x4000a89	    0xff9080000000	                 call qword [rax + 0x80]	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x4000a8f	        0x498d570c	                    lea rdx, [r15 + 0xc]	     11109	elf.c	FUNCTION_191	WHILE_1
0x4000a93	          0x4889e9	                            mov rcx, rbp	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000a96	      0x4889442450	             mov qword [rsp + 0x50], rax	     11108	elf.c	FUNCTION_191	WHILE_1	CALL_2
0x4000a9b	          0x4829d1	                            sub rcx, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000a9e	      0x4889542468	             mov qword [rsp + 0x68], rdx	     11109	elf.c	FUNCTION_191	WHILE_1
0x4000aa3	          0x4889ca	                            mov rdx, rcx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000aa6	          0x4c01ea	                            add rdx, r13	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000aa9	          0x4839d0	                            cmp rax, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000aac	     0xf873e010000	                            ja 0x4000bf0	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000ab2	      0x498b442408	                mov rax, qword [r12 + 8]	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x4000ab7	        0x498d7f04	                      lea rdi, [r15 + 4]	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x4000abb	    0xff9080000000	                 call qword [rax + 0x80]	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x4000ac1	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000ac6	          0x4889c3	                            mov rbx, rax	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x4000ac9	      0x4889442458	             mov qword [rsp + 0x58], rax	     11113	elf.c	FUNCTION_191	WHILE_1	CALL_3
0x4000ace	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000ad3	      0x4d8d44010b	                lea r8, [r9 + rax + 0xb]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000ad8	      0x4c23442408	                 and r8, qword [rsp + 8]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000add	        0x4b8d1407	                     lea rdx, [r15 + r8]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000ae1	          0x4d89c6	                             mov r14, r8	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000ae4	          0x4889d0	                            mov rax, rdx	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000ae7	      0x4889542470	             mov qword [rsp + 0x70], rdx	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_4
0x4000aec	          0x4829e8	                            sub rax, rbp	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000aef	      0x4803442410	             add rax, qword [rsp + 0x10]	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000af4	          0x4885db	                           test rbx, rbx	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000af7	      0x4889442478	             mov qword [rsp + 0x78], rax	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000afc	            0x741d	                            je 0x4000b1b	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000afe	      0x483b542418	            cmp rdx, qword [rsp + 0x18] 	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000b03	     0xf83e7000000	                           jae 0x4000bf0	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000b09	          0x4889e8	                            mov rax, rbp	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000b0c	          0x4829d0	                            sub rax, rdx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000b0f	          0x4c01e8	                            add rax, r13	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000b12	          0x4839c3	                            cmp rbx, rax	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000b15	     0xf87d5000000	                            ja 0x4000bf0	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000b1b	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4000b21	          0x83e007	                              and eax, 7	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4000b24	            0x3c01	                               cmp al, 1	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4000b26	     0xf84e4000000	                            je 0x4000c10	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4000b2c	            0x3c03	                               cmp al, 3	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4000b2e	     0xf85cc000000	                           jne 0x4000c00	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	CALL_5
0x4000b34	      0x488b442468	            mov rax, qword [rsp + 0x68] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4000b39	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000b41	      0xbe00000000	                              mov esi, 0	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000b46	      0xb912000000	                           mov ecx, 0x12	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000b4b	    0x41bb05000000	                             mov r11d, 5	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b51	      0x48895c2440	             mov qword [rsp + 0x40], rbx	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b56	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000b59	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000b61	      0x4c89742448	             mov qword [rsp + 0x48], r14	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b66	      0x48896c2438	             mov qword [rsp + 0x38], rbp	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b6b	      0x4889442428	             mov qword [rsp + 0x28], rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4000b70	          0x4c89cb	                             mov rbx, r9	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b73	          0x4589de	                          mov r14d, r11d	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b76	          0x4889cd	                            mov rbp, rcx	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b79	     0xf1f80000000	                         nop dword [rax]	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000b80	        0x488b5500	                    mov rdx, qword [rbp]	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4000b84	          0x4839d3	                            cmp rbx, rdx	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4000b87	            0x7216	                            jb 0x4000b9f	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4000b89	        0x488b75f8	                mov rsi, qword [rbp - 8]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4000b8d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4000b92	      0xe800000000	                          call 0x4000b97	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4000b97	            0x85c0	                           test eax, eax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4000b99	     0xf8461010000	                            je 0x4000d00	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_8
0x4000b9f	        0x4183ee01	                             sub r14d, 1	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000ba3	        0x4883ed18	                           sub rbp, 0x18	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000ba7	        0x4183feff	            cmp r14d, 0xffffffffffffffff	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000bab	            0x75d3	                           jne 0x4000b80	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000bad	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000bb2	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000bb7	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_7
0x4000bbc	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000bc1	        0x4e8d0430	                     lea r8, [rax + r14]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000bc5	          0x4c01c3	                             add rbx, r8	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000bc8	      0x48235c2408	                and rbx, qword [rsp + 8]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000bcd	          0x4901df	                            add r15, rbx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_14
0x4000bd0	      0x4c397c2418	            cmp qword [rsp + 0x18], r15 	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000bd5	            0x7629	                           jbe 0x4000c00	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000bd7	          0x4889e8	                            mov rax, rbp	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000bda	          0x4c29f8	                            sub rax, r15	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000bdd	          0x4c01e8	                            add rax, r13	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000be0	        0x4883f80b	                            cmp rax, 0xb	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000be4	     0xf8783feffff	                            ja 0x4000a6d	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000bea	    0x660f1f440000	                    nop word [rax + rax]	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000bf0	            0x31c0	                            xor eax, eax	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4000bf2	      0xe901feffff	                           jmp 0x40009f8	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4000bf7	    0x660f1f840000	                    nop word [rax + rax]	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4000c00	      0xb801000000	                              mov eax, 1	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000c05	      0xe9eefdffff	                           jmp 0x40009f8	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000c0a	    0x660f1f440000	                    nop word [rax + rax]	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000c10	        0x4983f904	                               cmp r9, 4	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c14	            0x746a	                            je 0x4000c80	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c16	        0x4983f908	                               cmp r9, 8	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x4000c1a	            0x75a0	                           jne 0x4000bbc	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x4000c1c	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x4000c21	      0xbf00000000	                              mov edi, 0	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x4000c26	      0xb908000000	                              mov ecx, 8	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x4000c2b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x4000c2d	            0x758d	                           jne 0x4000bbc	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_12
0x4000c2f	    0x48837c246003	               cmp qword [rsp + 0x60], 3	      9926	elf.c	FUNCTION_148	SWITCH_1
0x4000c35	            0x7585	                           jne 0x4000bbc	      9926	elf.c	FUNCTION_148	SWITCH_1
0x4000c37	        0x488d7318	                   lea rsi, [rbx + 0x18]	      9910	elf.c	FUNCTION_147
0x4000c3b	          0x4c89e7	                            mov rdi, r12	      9910	elf.c	FUNCTION_147
0x4000c3e	      0xe800000000	                          call 0x4000c43	      9910	elf.c	FUNCTION_147
0x4000c43	          0x4889c3	                            mov rbx, rax	      9910	elf.c	FUNCTION_147
0x4000c46	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      9914	elf.c	FUNCTION_147	CALL_2
0x4000c4e	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      9915	elf.c	FUNCTION_147
0x4000c53	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        53	string3.h	FUNCTION_204	CALL_3
0x4000c57	    0x488b80600c00	           mov rax, qword [rax + 0xc60] 	      9914	elf.c	FUNCTION_147	CALL_2
0x4000c5e	        0x48895308	                mov qword [rbx + 8], rdx	      9915	elf.c	FUNCTION_147
0x4000c62	          0x488903	                    mov qword [rbx], rax	      9914	elf.c	FUNCTION_147	CALL_2
0x4000c65	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	        53	string3.h	FUNCTION_204	CALL_3
0x4000c6a	      0xe800000000	                          call 0x4000c6f	        53	string3.h	FUNCTION_204	CALL_3
0x4000c6f	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      9918	elf.c	FUNCTION_147	CALL_4
0x4000c77	    0x488998600c00	            mov qword [rax + 0xc60], rbx	      9918	elf.c	FUNCTION_147	CALL_4
0x4000c7e	            0xeb5a	                           jmp 0x4000cda	      9918	elf.c	FUNCTION_147	CALL_4
0x4000c80	      0x488b442468	            mov rax, qword [rsp + 0x68] 	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c85	          0x803847	                    cmp byte [rax], 0x47	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c88	     0xf852effffff	                           jne 0x4000bbc	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c8e	        0x8078014e	                cmp byte [rax + 1], 0x4e	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c92	     0xf8524ffffff	                           jne 0x4000bbc	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c98	        0x80780255	                cmp byte [rax + 2], 0x55	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000c9c	     0xf851affffff	                           jne 0x4000bbc	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000ca2	        0x80780300	                   cmp byte [rax + 3], 0	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000ca6	     0xf8510ffffff	                           jne 0x4000bbc	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_10
0x4000cac	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000cb1	        0x4883f803	                              cmp rax, 3	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000cb5	     0xf8489000000	                            je 0x4000d44	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000cbb	        0x4883f805	                              cmp rax, 5	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000cbf	     0xf85f7feffff	                           jne 0x4000bbc	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000cc5	      0x488d742450	                   lea rsi, [rsp + 0x50]	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4000cca	          0x4c89e7	                            mov rdi, r12	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4000ccd	      0xe800000000	                          call 0x4000cd2	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4000cd2	            0x85c0	                           test eax, eax	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000cd4	     0xf8416ffffff	                            je 0x4000bf0	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000cda	      0x488b442450	            mov rax, qword [rsp + 0x50] 	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000cdf	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000ce4	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000ce9	      0x4c8d44010b	               lea r8, [rcx + rax + 0xb]	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000cee	      0x4c23442408	                 and r8, qword [rsp + 8]	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000cf3	          0x4d89c6	                             mov r14, r8	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000cf6	      0xe9c1feffff	                           jmp 0x4000bbc	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000cfb	       0xf1f440000	                   nop dword [rax + rax]	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000d00	          0x4d63de	                        movsxd r11, r14d	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000d03	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_11
0x4000d08	      0x488d742450	                   lea rsi, [rsp + 0x50]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d0d	        0x4b8d045b	                  lea rax, [r11 + r11*2]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d11	          0x4c89e7	                            mov rdi, r12	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d14	    0xff94c4900000	        call qword [rsp + rax*8 + 0x90] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d1b	            0x85c0	                           test eax, eax	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d1d	     0xf84d5fcffff	                            je 0x40009f8	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d23	      0x488b442450	            mov rax, qword [rsp + 0x50] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d28	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d2d	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d32	      0x4c8d44010b	               lea r8, [rcx + rax + 0xb]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d37	      0x4c23442408	                 and r8, qword [rsp + 8]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d3c	          0x4d89c6	                             mov r14, r8	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d3f	      0xe978feffff	                           jmp 0x4000bbc	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_9
0x4000d44	          0x4885db	                           test rbx, rbx	      9877	elf.c	FUNCTION_145	IF_1
0x4000d47	     0xf84a3feffff	                            je 0x4000bf0	      9877	elf.c	FUNCTION_145	IF_1
0x4000d4d	        0x488d730f	                    lea rsi, [rbx + 0xf]	      9880	elf.c	FUNCTION_145	CALL_1
0x4000d51	          0x4c89e7	                            mov rdi, r12	      9880	elf.c	FUNCTION_145	CALL_1
0x4000d54	      0xe800000000	                          call 0x4000d59	      9880	elf.c	FUNCTION_145	CALL_1
0x4000d59	          0x4885c0	                           test rax, rax	      9881	elf.c	FUNCTION_145	IF_2
0x4000d5c	          0x4889c3	                            mov rbx, rax	      9880	elf.c	FUNCTION_145	CALL_1
0x4000d5f	     0xf848bfeffff	                            je 0x4000bf0	      9881	elf.c	FUNCTION_145	IF_2
0x4000d65	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      9884	elf.c	FUNCTION_145
0x4000d6a	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	        53	string3.h	FUNCTION_204	CALL_3
0x4000d6f	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_204	CALL_3
0x4000d73	          0x488910	                    mov qword [rax], rdx	      9884	elf.c	FUNCTION_145
0x4000d76	      0xe800000000	                          call 0x4000d7b	        53	string3.h	FUNCTION_204	CALL_3
0x4000d7b	    0x49899c241001	            mov qword [r12 + 0x110], rbx	      9886	elf.c	FUNCTION_145
0x4000d83	            0xeb9e	                           jmp 0x4000d23	      9886	elf.c	FUNCTION_145
0x4000d85	      0xe800000000	                          call 0x4000d8a	     11180	elf.c	FUNCTION_191
_bfd_elf_swap_versym_in	SWITCH,0:CALL,1:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	8
0x4002040	              0x53	                                push rbx	       180	elf.c	FUNCTION_9
0x4002041	        0x488b4708	                mov rax, qword [rdi + 8]	       181	elf.c	FUNCTION_9	CALL_1
0x4002045	          0x4889d3	                            mov rbx, rdx	       180	elf.c	FUNCTION_9
0x4002048	          0x4889f7	                            mov rdi, rsi	       181	elf.c	FUNCTION_9	CALL_1
0x400204b	    0xff9098000000	                 call qword [rax + 0x98]	       181	elf.c	FUNCTION_9	CALL_1
0x4002051	          0x668903	                      mov word [rbx], ax	       181	elf.c	FUNCTION_9	CALL_1
0x4002054	              0x5b	                                 pop rbx	       182	elf.c	FUNCTION_9
0x4002055	              0xc3	                                     ret	       182	elf.c	FUNCTION_9
_bfd_elfcore_strndup	SWITCH,0:CALL,3:IF,2:functions,0:ELSE,1:DO,0:WHILE,0:FOR,0	30
0x400eaf0	            0x4154	                                push r12	      9360	elf.c	FUNCTION_139
0x400eaf2	              0x55	                                push rbp	      9360	elf.c	FUNCTION_139
0x400eaf3	          0x4889f5	                            mov rbp, rsi	      9360	elf.c	FUNCTION_139
0x400eaf6	              0x53	                                push rbx	      9360	elf.c	FUNCTION_139
0x400eaf7	            0x31f6	                            xor esi, esi	      9362	elf.c	FUNCTION_139	CALL_1
0x400eaf9	          0x4989fc	                            mov r12, rdi	      9360	elf.c	FUNCTION_139
0x400eafc	          0x4889ef	                            mov rdi, rbp	      9362	elf.c	FUNCTION_139	CALL_1
0x400eaff	          0x4889d3	                            mov rbx, rdx	      9360	elf.c	FUNCTION_139
0x400eb02	      0xe800000000	                          call 0x400eb07	      9362	elf.c	FUNCTION_139	CALL_1
0x400eb07	          0x4889c2	                            mov rdx, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x400eb0a	          0x4c89e7	                            mov rdi, r12	      9370	elf.c	FUNCTION_139	CALL_2
0x400eb0d	          0x4829ea	                            sub rdx, rbp	      9368	elf.c	FUNCTION_139	ELSE_1
0x400eb10	          0x4885c0	                           test rax, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x400eb13	        0x480f45da	                         cmovne rbx, rdx	      9368	elf.c	FUNCTION_139	ELSE_1
0x400eb17	        0x488d7301	                      lea rsi, [rbx + 1]	      9370	elf.c	FUNCTION_139	CALL_2
0x400eb1b	      0xe800000000	                          call 0x400eb20	      9370	elf.c	FUNCTION_139	CALL_2
0x400eb20	          0x4885c0	                           test rax, rax	      9371	elf.c	FUNCTION_139	IF_2
0x400eb23	          0x4889c1	                            mov rcx, rax	      9370	elf.c	FUNCTION_139	CALL_2
0x400eb26	            0x7415	                            je 0x400eb3d	      9371	elf.c	FUNCTION_139	IF_2
0x400eb28	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_204	CALL_3
0x400eb2b	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_204	CALL_3
0x400eb2e	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_204	CALL_3
0x400eb31	      0xe800000000	                          call 0x400eb36	        53	string3.h	FUNCTION_204	CALL_3
0x400eb36	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_204	CALL_3
0x400eb39	        0xc6041800	                 mov byte [rax + rbx], 0	      9375	elf.c	FUNCTION_139
0x400eb3d	              0x5b	                                 pop rbx	      9378	elf.c	FUNCTION_139
0x400eb3e	          0x4889c8	                            mov rax, rcx	      9378	elf.c	FUNCTION_139
0x400eb41	              0x5d	                                 pop rbp	      9378	elf.c	FUNCTION_139
0x400eb42	            0x415c	                                 pop r12	      9378	elf.c	FUNCTION_139
0x400eb44	              0xc3	                                     ret	      9378	elf.c	FUNCTION_139
_bfd_elf_get_dynamic_reloc_upper_bound	SWITCH,0:CALL,7:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1	38
0x400c8a0	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400c8a7	    0x8bb07c0c0000	           mov esi, dword [rax + 0xc7c] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400c8ad	            0x85f6	                           test esi, esi	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400c8af	            0x745c	                            je 0x400c90d	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400c8b1	    0x488b8f900000	            mov rcx, qword [rdi + 0x90] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8b8	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8bb	            0x744a	                            je 0x400c907	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8bd	    0x41b808000000	                              mov r8d, 8	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8c3	            0xeb0c	                           jmp 0x400c8d1	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8c5	           0xf1f00	                         nop dword [rax]	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8c8	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8cc	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8cf	            0x7432	                            je 0x400c903	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8d1	    0x4c8b89e00000	              mov r9, qword [rcx + 0xe0]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400c8d8	        0x413b7128	              cmp esi, dword [r9 + 0x28]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400c8dc	            0x75ea	                           jne 0x400c8c8	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400c8de	        0x418b7904	                 mov edi, dword [r9 + 4]	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400c8e2	          0x83ff09	                              cmp edi, 9	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400c8e5	            0x7405	                            je 0x400c8ec	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400c8e7	          0x83ff04	                              cmp edi, 4	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400c8ea	            0x75dc	                           jne 0x400c8c8	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400c8ec	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400c8f0	            0x31d2	                            xor edx, edx	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400c8f2	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8f6	        0x49f77138	                   div qword [r9 + 0x38]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400c8fa	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400c8fd	        0x4d8d04c0	                    lea r8, [r8 + rax*8]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400c901	            0x75ce	                           jne 0x400c8d1	      8219	elf.c	FUNCTION_95	FOR_1
0x400c903	          0x4c89c0	                             mov rax, r8	      8219	elf.c	FUNCTION_95	FOR_1
0x400c906	              0xc3	                                     ret	      8219	elf.c	FUNCTION_95	FOR_1
0x400c907	      0xb808000000	                              mov eax, 8	      8218	elf.c	FUNCTION_95
0x400c90c	              0xc3	                                     ret	      8218	elf.c	FUNCTION_95
0x400c90d	        0x4883ec08	                              sub rsp, 8	      8208	elf.c	FUNCTION_95
0x400c911	      0xbf05000000	                              mov edi, 5	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x400c916	      0xe800000000	                          call 0x400c91b	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x400c91b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8215	elf.c	FUNCTION_95	IF_1
0x400c922	        0x4883c408	                              add rsp, 8	      8227	elf.c	FUNCTION_95
0x400c926	              0xc3	                                     ret	      8227	elf.c	FUNCTION_95
elfcore_grok_spu_note	SWITCH,0:CALL,3:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	37
0x4000270	            0x4154	                                push r12	     10421	elf.c	FUNCTION_160
0x4000272	              0x55	                                push rbp	     10421	elf.c	FUNCTION_160
0x4000273	          0x4989fc	                            mov r12, rdi	     10421	elf.c	FUNCTION_160
0x4000276	              0x53	                                push rbx	     10421	elf.c	FUNCTION_160
0x4000277	          0x488b2e	                    mov rbp, qword [rsi]	     10427	elf.c	FUNCTION_160
0x400027a	          0x4889f3	                            mov rbx, rsi	     10421	elf.c	FUNCTION_160
0x400027d	          0x4889ee	                            mov rsi, rbp	     10428	elf.c	FUNCTION_160	CALL_1
0x4000280	      0xe800000000	                          call 0x4000285	     10428	elf.c	FUNCTION_160	CALL_1
0x4000285	          0x4885c0	                           test rax, rax	     10429	elf.c	FUNCTION_160	IF_1
0x4000288	            0x7456	                            je 0x40002e0	     10429	elf.c	FUNCTION_160	IF_1
0x400028a	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_204	CALL_3
0x400028e	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_204	CALL_3
0x4000291	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_204	CALL_3
0x4000294	      0xe800000000	                          call 0x4000299	        53	string3.h	FUNCTION_204	CALL_3
0x4000299	      0xba00010000	                          mov edx, 0x100	     10434	elf.c	FUNCTION_160	CALL_3
0x400029e	      0xc64428ff00	             mov byte [rax + rbp - 1], 0	     10432	elf.c	FUNCTION_160
0x40002a3	          0x4889c6	                            mov rsi, rax	     10434	elf.c	FUNCTION_160	CALL_3
0x40002a6	          0x4c89e7	                            mov rdi, r12	     10434	elf.c	FUNCTION_160	CALL_3
0x40002a9	      0xe800000000	                          call 0x40002ae	     10434	elf.c	FUNCTION_160	CALL_3
0x40002ae	          0x4885c0	                           test rax, rax	     10435	elf.c	FUNCTION_160	IF_2
0x40002b1	            0x742d	                            je 0x40002e0	     10435	elf.c	FUNCTION_160	IF_2
0x40002b3	        0x488b5308	                mov rdx, qword [rbx + 8]	     10438	elf.c	FUNCTION_160
0x40002b7	        0x48895038	             mov qword [rax + 0x38], rdx	     10438	elf.c	FUNCTION_160
0x40002bb	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	     10439	elf.c	FUNCTION_160
0x40002bf	    0xc74070010000	               mov dword [rax + 0x70], 1	     10440	elf.c	FUNCTION_160
0x40002c6	    0x488990900000	             mov qword [rax + 0x90], rdx	     10439	elf.c	FUNCTION_160
0x40002cd	      0xb801000000	                              mov eax, 1	     10442	elf.c	FUNCTION_160
0x40002d2	              0x5b	                                 pop rbx	     10443	elf.c	FUNCTION_160
0x40002d3	              0x5d	                                 pop rbp	     10443	elf.c	FUNCTION_160
0x40002d4	            0x415c	                                 pop r12	     10443	elf.c	FUNCTION_160
0x40002d6	              0xc3	                                     ret	     10443	elf.c	FUNCTION_160
0x40002d7	    0x660f1f840000	                    nop word [rax + rax]	     10443	elf.c	FUNCTION_160
0x40002e0	              0x5b	                                 pop rbx	     10443	elf.c	FUNCTION_160
0x40002e1	            0x31c0	                            xor eax, eax	     10430	elf.c	FUNCTION_160	IF_1
0x40002e3	              0x5d	                                 pop rbp	     10443	elf.c	FUNCTION_160
0x40002e4	            0x415c	                                 pop r12	     10443	elf.c	FUNCTION_160
0x40002e6	              0xc3	                                     ret	     10443	elf.c	FUNCTION_160
_bfd_elf_make_section_from_phdr	SWITCH,0:CALL,11:IF,14:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	241
0x4005510	              0x55	                                push rbp	      2907	elf.c	FUNCTION_42
0x4005511	          0x4889e5	                            mov rbp, rsp	      2907	elf.c	FUNCTION_42
0x4005514	            0x4157	                                push r15	      2907	elf.c	FUNCTION_42
0x4005516	            0x4156	                                push r14	      2907	elf.c	FUNCTION_42
0x4005518	            0x4155	                                push r13	      2907	elf.c	FUNCTION_42
0x400551a	            0x4154	                                push r12	      2907	elf.c	FUNCTION_42
0x400551c	          0x4189d5	                           mov r13d, edx	      2907	elf.c	FUNCTION_42
0x400551f	              0x53	                                push rbx	      2907	elf.c	FUNCTION_42
0x4005520	          0x4989fc	                            mov r12, rdi	      2907	elf.c	FUNCTION_42
0x4005523	          0x4889f3	                            mov rbx, rsi	      2907	elf.c	FUNCTION_42
0x4005526	          0x4989ce	                            mov r14, rcx	      2907	elf.c	FUNCTION_42
0x4005529	        0x4883ec68	                           sub rsp, 0x68	      2907	elf.c	FUNCTION_42
0x400552d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2907	elf.c	FUNCTION_42
0x4005536	        0x488945c8	             mov qword [rbp - 0x38], rax	      2907	elf.c	FUNCTION_42
0x400553a	            0x31c0	                            xor eax, eax	      2907	elf.c	FUNCTION_42
0x400553c	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2914	elf.c	FUNCTION_42
0x4005540	          0x4885c0	                           test rax, rax	      2916	elf.c	FUNCTION_42
0x4005543	     0xf8457010000	                            je 0x40056a0	      2916	elf.c	FUNCTION_42
0x4005549	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2915	elf.c	FUNCTION_42
0x400554d	          0x4839d0	                            cmp rax, rdx	      2916	elf.c	FUNCTION_42
0x4005550	     0xf868a010000	                           jbe 0x40056e0	      2916	elf.c	FUNCTION_42
0x4005556	          0x4885d2	                           test rdx, rdx	      2916	elf.c	FUNCTION_42
0x4005559	     0xf8481010000	                            je 0x40056e0	      2916	elf.c	FUNCTION_42
0x400555f	    0x41bf01000000	                             mov r15d, 1	      2916	elf.c	FUNCTION_42
0x4005565	      0xb800000000	                              mov eax, 0	      2920	elf.c	FUNCTION_42	IF_1
0x400556a	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_216	CALL_1
0x400556e	        0x488d7d80	                   lea rdi, [rbp - 0x80]	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005572	      0xba40000000	                           mov edx, 0x40	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005577	              0x50	                                push rax	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005578	          0x4589e9	                           mov r9d, r13d	        33	stdio2.h	FUNCTION_216	CALL_1
0x400557b	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_216	CALL_1
0x400557e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005583	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005588	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_216	CALL_1
0x400558a	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005591	      0xe800000000	                          call 0x4005596	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005596	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x400559d	            0x8b0a	                    mov ecx, dword [rdx]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x400559f	        0x4883c204	                              add rdx, 4	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055a3	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055a9	            0xf7d1	                                 not ecx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055ab	            0x21c8	                            and eax, ecx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055ad	      0x2580808080	                     and eax, 0x80808080	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055b2	            0x74e9	                            je 0x400559d	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055b4	            0x89c1	                            mov ecx, eax	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055b6	          0xc1e910	                           shr ecx, 0x10	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055b9	      0xa980800000	                        test eax, 0x8080	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055be	           0xf44c1	                          cmove eax, ecx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055c1	        0x488d4a02	                      lea rcx, [rdx + 2]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055c5	            0x89c7	                            mov edi, eax	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055c7	        0x480f44d1	                          cmove rdx, rcx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055cb	          0x4000c7	                             add dil, al	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055ce	          0x4c89e7	                            mov rdi, r12	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x40055d1	        0x4883da03	                              sbb rdx, 3	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055d5	    0x482b9578ffff	             sub rdx, qword [rbp - 0x88]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055dc	        0x4883c201	                              add rdx, 1	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40055e0	          0x4889d6	                            mov rsi, rdx	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x40055e3	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x40055ea	      0xe800000000	                          call 0x40055ef	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x40055ef	          0x4885c0	                           test rax, rax	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x40055f2	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x40055f9	              0x5e	                                 pop rsi	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x40055fa	              0x5f	                                 pop rdi	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x40055fb	     0xf840f020000	                            je 0x4005810	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4005601	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	        53	string3.h	FUNCTION_204	CALL_3
0x4005608	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_204	CALL_3
0x400560b	      0xe800000000	                          call 0x4005610	        53	string3.h	FUNCTION_204	CALL_3
0x4005610	          0x4c89e7	                            mov rdi, r12	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4005613	          0x4889c6	                            mov rsi, rax	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4005616	      0xe800000000	                          call 0x400561b	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x400561b	          0x4885c0	                           test rax, rax	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x400561e	          0x4889c2	                            mov rdx, rax	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4005621	     0xf84e9010000	                            je 0x4005810	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x4005627	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2929	elf.c	FUNCTION_42	IF_1
0x400562b	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x400562f	    0x48899570ffff	             mov qword [rbp - 0x90], rdx	      2933	elf.c	FUNCTION_42	IF_1
0x4005636	        0x48894228	             mov qword [rdx + 0x28], rax	      2929	elf.c	FUNCTION_42	IF_1
0x400563a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2930	elf.c	FUNCTION_42	IF_1
0x400563e	        0x48894230	             mov qword [rdx + 0x30], rax	      2930	elf.c	FUNCTION_42	IF_1
0x4005642	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2931	elf.c	FUNCTION_42	IF_1
0x4005646	        0x48894238	             mov qword [rdx + 0x38], rax	      2931	elf.c	FUNCTION_42	IF_1
0x400564a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2932	elf.c	FUNCTION_42	IF_1
0x400564e	    0x814a20000100	            or dword [rdx + 0x20], 0x100	      2933	elf.c	FUNCTION_42	IF_1
0x4005655	    0x488982900000	             mov qword [rdx + 0x90], rax	      2932	elf.c	FUNCTION_42	IF_1
0x400565c	      0xe800000000	                          call 0x4005661	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x4005661	        0x48833b01	                      cmp qword [rbx], 1	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x4005665	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x400566c	          0x894270	             mov dword [rdx + 0x70], eax	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x400566f	     0xf84fb010000	                            je 0x4005870	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x4005675	        0x488b4308	                mov rax, qword [rbx + 8]	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x4005679	            0xa802	                              test al, 2	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x400567b	     0xf84af010000	                            je 0x4005830	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x4005681	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2952	elf.c	FUNCTION_42	IF_7
0x4005685	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2952	elf.c	FUNCTION_42	IF_7
0x4005689	            0x761c	                           jbe 0x40056a7	      2952	elf.c	FUNCTION_42	IF_7
0x400568b	          0x4585ff	                         test r15d, r15d	      2956	elf.c	FUNCTION_42	IF_7
0x400568e	            0x7460	                            je 0x40056f0	      2956	elf.c	FUNCTION_42	IF_7
0x4005690	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7
0x4005695	            0xeb5e	                           jmp 0x40056f5	      2956	elf.c	FUNCTION_42	IF_7
0x4005697	    0x660f1f840000	                    nop word [rax + rax]	      2956	elf.c	FUNCTION_42	IF_7
0x40056a0	      0x48837e2800	               cmp qword [rsi + 0x28], 0	      2918	elf.c	FUNCTION_42	IF_1
0x40056a5	            0x7529	                           jne 0x40056d0	      2918	elf.c	FUNCTION_42	IF_1
0x40056a7	      0xb801000000	                              mov eax, 1	      2991	elf.c	FUNCTION_42
0x40056ac	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      2992	elf.c	FUNCTION_42
0x40056b0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2992	elf.c	FUNCTION_42
0x40056b9	     0xf85e3010000	                           jne 0x40058a2	      2992	elf.c	FUNCTION_42
0x40056bf	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      2992	elf.c	FUNCTION_42
0x40056c3	              0x5b	                                 pop rbx	      2992	elf.c	FUNCTION_42
0x40056c4	            0x415c	                                 pop r12	      2992	elf.c	FUNCTION_42
0x40056c6	            0x415d	                                 pop r13	      2992	elf.c	FUNCTION_42
0x40056c8	            0x415e	                                 pop r14	      2992	elf.c	FUNCTION_42
0x40056ca	            0x415f	                                 pop r15	      2992	elf.c	FUNCTION_42
0x40056cc	              0x5d	                                 pop rbp	      2992	elf.c	FUNCTION_42
0x40056cd	              0xc3	                                     ret	      2992	elf.c	FUNCTION_42
0x40056ce	            0x6690	                                     nop	      2992	elf.c	FUNCTION_42
0x40056d0	          0x4531ff	                          xor r15d, r15d	      2918	elf.c	FUNCTION_42	IF_1
0x40056d3	      0xb800000000	                              mov eax, 0	      2920	elf.c	FUNCTION_42	IF_1
0x40056d8	      0xe98dfeffff	                           jmp 0x400556a	      2920	elf.c	FUNCTION_42	IF_1
0x40056dd	           0xf1f00	                         nop dword [rax]	      2920	elf.c	FUNCTION_42	IF_1
0x40056e0	          0x4885d2	                           test rdx, rdx	      2918	elf.c	FUNCTION_42	IF_1
0x40056e3	            0x75eb	                           jne 0x40056d0	      2918	elf.c	FUNCTION_42	IF_1
0x40056e5	        0x488d4580	                   lea rax, [rbp - 0x80]	      2918	elf.c	FUNCTION_42	IF_1
0x40056e9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2918	elf.c	FUNCTION_42	IF_1
0x40056f0	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7
0x40056f5	    0x4c8bbd78ffff	             mov r15, qword [rbp - 0x88]	        33	stdio2.h	FUNCTION_216	CALL_1
0x40056fc	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005700	      0xba40000000	                           mov edx, 0x40	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005705	              0x50	                                push rax	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005706	          0x4589e9	                           mov r9d, r13d	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005709	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_216	CALL_1
0x400570c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005711	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005716	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005718	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_216	CALL_1
0x400571b	      0xe800000000	                          call 0x4005720	        33	stdio2.h	FUNCTION_216	CALL_1
0x4005720	          0x4c89fa	                            mov rdx, r15	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005723	            0x8b0a	                    mov ecx, dword [rdx]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005725	        0x4883c204	                              add rdx, 4	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005729	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400572f	            0xf7d1	                                 not ecx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005731	            0x21c8	                            and eax, ecx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005733	      0x2580808080	                     and eax, 0x80808080	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005738	            0x74e9	                            je 0x4005723	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400573a	            0x89c1	                            mov ecx, eax	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400573c	    0x4c8bb578ffff	             mov r14, qword [rbp - 0x88]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005743	          0x4c89e7	                            mov rdi, r12	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4005746	          0xc1e910	                           shr ecx, 0x10	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005749	      0xa980800000	                        test eax, 0x8080	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400574e	           0xf44c1	                          cmove eax, ecx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005751	        0x488d4a02	                      lea rcx, [rdx + 2]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005755	            0x89c6	                            mov esi, eax	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005757	        0x480f44d1	                          cmove rdx, rcx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400575b	          0x4000c6	                             add sil, al	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400575e	        0x4883da03	                              sbb rdx, 3	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005762	          0x4c29f2	                            sub rdx, r14	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005765	        0x4c8d6a01	                      lea r13, [rdx + 1]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005769	          0x4c89ee	                            mov rsi, r13	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x400576c	      0xe800000000	                          call 0x4005771	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4005771	          0x4889c1	                            mov rcx, rax	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4005774	          0x4885c9	                           test rcx, rcx	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4005777	              0x58	                                 pop rax	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4005778	              0x5a	                                 pop rdx	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4005779	     0xf8491000000	                            je 0x4005810	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x400577f	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_204	CALL_3
0x4005782	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_204	CALL_3
0x4005785	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_204	CALL_3
0x4005788	      0xe800000000	                          call 0x400578d	        53	string3.h	FUNCTION_204	CALL_3
0x400578d	          0x4c89e7	                            mov rdi, r12	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4005790	          0x4889c6	                            mov rsi, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4005793	      0xe800000000	                          call 0x4005798	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4005798	          0x4885c0	                           test rax, rax	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x400579b	          0x4889c6	                            mov rsi, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x400579e	          0x4989c7	                            mov r15, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x40057a1	            0x746d	                            je 0x4005810	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x40057a3	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2965	elf.c	FUNCTION_42	IF_7
0x40057a7	          0x4889c2	                            mov rdx, rax	      2966	elf.c	FUNCTION_42	IF_7
0x40057aa	        0x48035320	             add rdx, qword [rbx + 0x20]	      2966	elf.c	FUNCTION_42	IF_7
0x40057ae	          0x4889c7	                            mov rdi, rax	      2965	elf.c	FUNCTION_42	IF_7
0x40057b1	        0x48037b18	             add rdi, qword [rbx + 0x18]	      2965	elf.c	FUNCTION_42	IF_7
0x40057b5	        0x48895630	             mov qword [rsi + 0x30], rdx	      2966	elf.c	FUNCTION_42	IF_7
0x40057b9	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2967	elf.c	FUNCTION_42	IF_7
0x40057bd	        0x48897e28	             mov qword [rsi + 0x28], rdi	      2965	elf.c	FUNCTION_42	IF_7
0x40057c1	          0x4829c2	                            sub rdx, rax	      2967	elf.c	FUNCTION_42	IF_7
0x40057c4	        0x48034310	             add rax, qword [rbx + 0x10]	      2968	elf.c	FUNCTION_42	IF_7
0x40057c8	        0x48895638	             mov qword [rsi + 0x38], rdx	      2967	elf.c	FUNCTION_42	IF_7
0x40057cc	    0x488986900000	             mov qword [rsi + 0x90], rax	      2968	elf.c	FUNCTION_42	IF_7
0x40057d3	          0x4889f8	                            mov rax, rdi	      2969	elf.c	FUNCTION_42	IF_7
0x40057d6	          0x48f7d8	                                 neg rax	      2969	elf.c	FUNCTION_42	IF_7
0x40057d9	          0x4821c7	                            and rdi, rax	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40057dc	            0x7442	                            je 0x4005820	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40057de	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40057e2	          0x4839c7	                            cmp rdi, rax	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40057e5	        0x480f47f8	                          cmova rdi, rax	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x40057e9	      0xe800000000	                          call 0x40057ee	      2972	elf.c	FUNCTION_42	IF_7	CALL_10
0x40057ee	        0x48833b01	                      cmp qword [rbx], 1	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40057f2	        0x41894770	             mov dword [r15 + 0x70], eax	      2972	elf.c	FUNCTION_42	IF_7	CALL_10
0x40057f6	            0x7448	                            je 0x4005840	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40057f8	        0x488b4308	                mov rax, qword [rbx + 8]	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40057fc	            0xa802	                              test al, 2	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x40057fe	     0xf85a3feffff	                           jne 0x40056a7	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x4005804	      0x41834f2008	                or dword [r15 + 0x20], 8	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4005809	      0xe999feffff	                           jmp 0x40056a7	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x400580e	            0x6690	                                     nop	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x4005810	            0x31c0	                            xor eax, eax	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4005812	      0xe995feffff	                           jmp 0x40056ac	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4005817	    0x660f1f840000	                    nop word [rax + rax]	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4005820	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4005824	            0xebc3	                           jmp 0x40057e9	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4005826	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4005830	        0x834a2008	                or dword [rdx + 0x20], 8	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4005834	      0xe948feffff	                           jmp 0x4005681	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4005839	     0xf1f80000000	                         nop dword [rax]	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x4005840	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x4005846	          0x83e007	                              and eax, 7	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x4005849	            0x3c03	                               cmp al, 3	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x400584b	            0x744b	                            je 0x4005898	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12	CALL_11
0x400584d	        0x418b5720	            mov edx, dword [r15 + 0x20] 	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4005851	            0x89d0	                            mov eax, edx	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4005853	          0x83c801	                               or eax, 1	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x4005856	        0x41894720	             mov dword [r15 + 0x20], eax	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x400585a	        0x488b4308	                mov rax, qword [rbx + 8]	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x400585e	            0xa801	                              test al, 1	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4005860	            0x749a	                            je 0x40057fc	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4005862	          0x83ca11	                            or edx, 0x11	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4005865	        0x41895720	             mov dword [r15 + 0x20], edx	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4005869	            0xeb91	                           jmp 0x40057fc	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x400586b	       0xf1f440000	                   nop dword [rax + rax]	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x4005870	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x4005873	            0x89c8	                            mov eax, ecx	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x4005875	          0x83c803	                               or eax, 3	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x4005878	          0x894220	             mov dword [rdx + 0x20], eax	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x400587b	        0x488b4308	                mov rax, qword [rbx + 8]	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x400587f	            0xa801	                              test al, 1	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005881	     0xf84f2fdffff	                            je 0x4005679	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005887	          0x83c913	                            or ecx, 0x13	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x400588a	          0x894a20	             mov dword [rdx + 0x20], ecx	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x400588d	      0xe9e7fdffff	                           jmp 0x4005679	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005892	    0x660f1f440000	                    nop word [rax + rax]	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005898	    0x49c747380000	               mov qword [r15 + 0x38], 0	      2982	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40058a0	            0xebab	                           jmp 0x400584d	      2982	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40058a2	      0xe800000000	                          call 0x40058a7	      2992	elf.c	FUNCTION_42
get_segment_type	SWITCH,1:CALL,0:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	50
0x4000040	          0x83ff05	                              cmp edi, 5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000043	     0xf84a7000000	                            je 0x40000f0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000049	            0x7725	                            ja 0x4000070	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400004b	          0x83ff02	                              cmp edi, 2	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400004e	     0xf848c000000	                            je 0x40000e0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000054	            0x764a	                           jbe 0x40000a0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000056	          0x83ff03	                              cmp edi, 3	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000059	      0xb800000000	                              mov eax, 0	      1593	elf.c	FUNCTION_32	SWITCH_1
0x400005e	            0x740a	                            je 0x400006a	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000060	          0x83ff04	                              cmp edi, 4	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000063	      0xb800000000	                              mov eax, 0	      1594	elf.c	FUNCTION_32	SWITCH_1
0x4000068	            0x752a	                           jne 0x4000094	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400006a	            0xf3c3	                                     ret	      1604	elf.c	FUNCTION_32
0x400006c	         0xf1f4000	                         nop dword [rax]	      1604	elf.c	FUNCTION_32
0x4000070	    0x81ff50e57464	                     cmp edi, 0x6474e550	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000076	            0x7458	                            je 0x40000d0	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000078	            0x763e	                           jbe 0x40000b8	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400007a	    0x81ff51e57464	                     cmp edi, 0x6474e551	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000080	      0xb800000000	                              mov eax, 0	      1599	elf.c	FUNCTION_32	SWITCH_1
0x4000085	            0x74e3	                            je 0x400006a	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000087	    0x81ff52e57464	                     cmp edi, 0x6474e552	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400008d	      0xb800000000	                              mov eax, 0	      1600	elf.c	FUNCTION_32	SWITCH_1
0x4000092	            0x74d6	                            je 0x400006a	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000094	            0x31c0	                            xor eax, eax	      1601	elf.c	FUNCTION_32	SWITCH_1
0x4000096	              0xc3	                                     ret	      1604	elf.c	FUNCTION_32
0x4000097	    0x660f1f840000	                    nop word [rax + rax]	      1604	elf.c	FUNCTION_32
0x40000a0	            0x85ff	                           test edi, edi	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000a2	      0xb800000000	                              mov eax, 0	      1590	elf.c	FUNCTION_32	SWITCH_1
0x40000a7	            0x74c1	                            je 0x400006a	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000a9	          0x83ff01	                              cmp edi, 1	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000ac	      0xb800000000	                              mov eax, 0	      1591	elf.c	FUNCTION_32	SWITCH_1
0x40000b1	            0x75e1	                           jne 0x4000094	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000b3	            0xf3c3	                                     ret	      1604	elf.c	FUNCTION_32
0x40000b5	           0xf1f00	                         nop dword [rax]	      1604	elf.c	FUNCTION_32
0x40000b8	          0x83ff06	                              cmp edi, 6	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000bb	      0xb800000000	                              mov eax, 0	      1596	elf.c	FUNCTION_32	SWITCH_1
0x40000c0	            0x74a8	                            je 0x400006a	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000c2	          0x83ff07	                              cmp edi, 7	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000c5	      0xb800000000	                              mov eax, 0	      1597	elf.c	FUNCTION_32	SWITCH_1
0x40000ca	            0x75c8	                           jne 0x4000094	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000cc	            0xf3c3	                                     ret	      1604	elf.c	FUNCTION_32
0x40000ce	            0x6690	                                     nop	      1604	elf.c	FUNCTION_32
0x40000d0	      0xb800000000	                              mov eax, 0	      1598	elf.c	FUNCTION_32	SWITCH_1
0x40000d5	              0xc3	                                     ret	      1598	elf.c	FUNCTION_32	SWITCH_1
0x40000d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1598	elf.c	FUNCTION_32	SWITCH_1
0x40000e0	      0xb800000000	                              mov eax, 0	      1592	elf.c	FUNCTION_32	SWITCH_1
0x40000e5	              0xc3	                                     ret	      1592	elf.c	FUNCTION_32	SWITCH_1
0x40000e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1592	elf.c	FUNCTION_32	SWITCH_1
0x40000f0	      0xb800000000	                              mov eax, 0	      1595	elf.c	FUNCTION_32	SWITCH_1
0x40000f5	              0xc3	                                     ret	      1595	elf.c	FUNCTION_32	SWITCH_1
_bfd_elf_close_and_cleanup	SWITCH,0:CALL,8:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	26
0x400e650	              0x55	                                push rbp	      8988	elf.c	FUNCTION_110
0x400e651	              0x53	                                push rbx	      8988	elf.c	FUNCTION_110
0x400e652	          0x4889fb	                            mov rbx, rdi	      8988	elf.c	FUNCTION_110
0x400e655	        0x4883ec08	                              sub rsp, 8	      8988	elf.c	FUNCTION_110
0x400e659	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x400e65d	    0x488baff80000	            mov rbp, qword [rdi + 0xf8] 	      8989	elf.c	FUNCTION_110	CALL_1
0x400e664	          0x83e007	                              and eax, 7	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x400e667	            0x3c01	                               cmp al, 1	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x400e669	            0x752e	                           jne 0x400e699	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x400e66b	          0x4885ed	                           test rbp, rbp	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x400e66e	            0x7429	                            je 0x400e699	      8990	elf.c	FUNCTION_110	IF_1	CALL_2
0x400e670	    0x488b85980c00	           mov rax, qword [rbp + 0xc98] 	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x400e677	          0x4885c0	                           test rax, rax	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x400e67a	            0x740e	                            je 0x400e68a	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x400e67c	        0x488b7808	                mov rdi, qword [rax + 8]	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x400e680	          0x4885ff	                           test rdi, rdi	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x400e683	            0x7405	                            je 0x400e68a	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_4
0x400e685	      0xe800000000	                          call 0x400e68a	      8993	elf.c	FUNCTION_110	IF_1	CALL_6
0x400e68a	    0x488db5300300	                  lea rsi, [rbp + 0x330]	      8994	elf.c	FUNCTION_110	IF_1	CALL_7
0x400e691	          0x4889df	                            mov rdi, rbx	      8994	elf.c	FUNCTION_110	IF_1	CALL_7
0x400e694	      0xe800000000	                          call 0x400e699	      8994	elf.c	FUNCTION_110	IF_1	CALL_7
0x400e699	        0x4883c408	                              add rsp, 8	      8998	elf.c	FUNCTION_110
0x400e69d	          0x4889df	                            mov rdi, rbx	      8997	elf.c	FUNCTION_110	CALL_8
0x400e6a0	              0x5b	                                 pop rbx	      8998	elf.c	FUNCTION_110
0x400e6a1	              0x5d	                                 pop rbp	      8998	elf.c	FUNCTION_110
0x400e6a2	      0xe900000000	                           jmp 0x400e6a7	      8997	elf.c	FUNCTION_110	CALL_8
_bfd_elf_get_symtab_upper_bound	SWITCH,0:CALL,2:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	14
0x400c710	        0x488b5708	                mov rdx, qword [rdi + 8]	      8118	elf.c	FUNCTION_89	CALL_2
0x400c714	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400c71b	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400c722	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400c729	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400c730	         0xfb64a05	               movzx ecx, byte [rdx + 5]	      8118	elf.c	FUNCTION_89	CALL_2
0x400c734	            0x31d2	                            xor edx, edx	      8118	elf.c	FUNCTION_89	CALL_2
0x400c736	          0x48f7f1	                                 div rcx	      8118	elf.c	FUNCTION_89	CALL_2
0x400c739	    0x488d0cc50800	                    lea rcx, [rax*8 + 8]	      8119	elf.c	FUNCTION_89
0x400c741	          0x4885c0	                           test rax, rax	      8119	elf.c	FUNCTION_89
0x400c744	        0x488d51f8	                      lea rdx, [rcx - 8]	      8119	elf.c	FUNCTION_89
0x400c748	          0x4889c8	                            mov rax, rcx	      8119	elf.c	FUNCTION_89
0x400c74b	        0x480f4fc2	                          cmovg rax, rdx	      8119	elf.c	FUNCTION_89
0x400c74f	              0xc3	                                     ret	      8124	elf.c	FUNCTION_89
elfcore_grok_openbsd_note	SWITCH,0:CALL,8:IF,8:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	125
0x400eb50	            0x4155	                                push r13	     10260	elf.c	FUNCTION_156
0x400eb52	            0x4154	                                push r12	     10260	elf.c	FUNCTION_156
0x400eb54	              0x55	                                push rbp	     10260	elf.c	FUNCTION_156
0x400eb55	              0x53	                                push rbx	     10260	elf.c	FUNCTION_156
0x400eb56	          0x4889fd	                            mov rbp, rdi	     10260	elf.c	FUNCTION_156
0x400eb59	          0x4889f3	                            mov rbx, rsi	     10260	elf.c	FUNCTION_156
0x400eb5c	        0x4883ec08	                              sub rsp, 8	     10260	elf.c	FUNCTION_156
0x400eb60	        0x488b4610	            mov rax, qword [rsi + 0x10] 	     10261	elf.c	FUNCTION_156	IF_1
0x400eb64	        0x4883f80a	                            cmp rax, 0xa	     10261	elf.c	FUNCTION_156	IF_1
0x400eb68	     0xf8492000000	                            je 0x400ec00	     10261	elf.c	FUNCTION_156	IF_1
0x400eb6e	        0x4883f814	                           cmp rax, 0x14	     10264	elf.c	FUNCTION_156	IF_2
0x400eb72	     0xf8400010000	                            je 0x400ec78	     10264	elf.c	FUNCTION_156	IF_2
0x400eb78	        0x4883f815	                           cmp rax, 0x15	     10267	elf.c	FUNCTION_156	IF_3
0x400eb7c	     0xf841e010000	                            je 0x400eca0	     10267	elf.c	FUNCTION_156	IF_3
0x400eb82	        0x4883f816	                           cmp rax, 0x16	     10270	elf.c	FUNCTION_156	IF_4
0x400eb86	     0xf8424010000	                            je 0x400ecb0	     10270	elf.c	FUNCTION_156	IF_4
0x400eb8c	        0x4883f80b	                            cmp rax, 0xb	     10273	elf.c	FUNCTION_156	IF_5
0x400eb90	     0xf848a000000	                            je 0x400ec20	     10273	elf.c	FUNCTION_156	IF_5
0x400eb96	        0x4883f817	                           cmp rax, 0x17	     10287	elf.c	FUNCTION_156	IF_7
0x400eb9a	    0x41bc01000000	                             mov r12d, 1	     10301	elf.c	FUNCTION_156
0x400eba0	            0x740e	                            je 0x400ebb0	     10287	elf.c	FUNCTION_156	IF_7
0x400eba2	        0x4883c408	                              add rsp, 8	     10302	elf.c	FUNCTION_156
0x400eba6	          0x4489e0	                           mov eax, r12d	     10302	elf.c	FUNCTION_156
0x400eba9	              0x5b	                                 pop rbx	     10302	elf.c	FUNCTION_156
0x400ebaa	              0x5d	                                 pop rbp	     10302	elf.c	FUNCTION_156
0x400ebab	            0x415c	                                 pop r12	     10302	elf.c	FUNCTION_156
0x400ebad	            0x415d	                                 pop r13	     10302	elf.c	FUNCTION_156
0x400ebaf	              0xc3	                                     ret	     10302	elf.c	FUNCTION_156
0x400ebb0	      0xba00010000	                          mov edx, 0x100	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400ebb5	      0xbe00000000	                              mov esi, 0	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400ebba	      0xe800000000	                          call 0x400ebbf	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400ebbf	          0x4885c0	                           test rax, rax	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x400ebc2	          0x4989c5	                            mov r13, rax	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400ebc5	            0x7444	                            je 0x400ec0b	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x400ebc7	        0x488b4308	                mov rax, qword [rbx + 8]	     10294	elf.c	FUNCTION_156	IF_7
0x400ebcb	          0x4889ef	                            mov rdi, rbp	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebce	        0x49894538	             mov qword [r13 + 0x38], rax	     10294	elf.c	FUNCTION_156	IF_7
0x400ebd2	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10295	elf.c	FUNCTION_156	IF_7
0x400ebd6	    0x498985900000	             mov qword [r13 + 0x90], rax	     10295	elf.c	FUNCTION_156	IF_7
0x400ebdd	      0xe800000000	                          call 0x400ebe2	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebe2	          0x8d501f	                   lea edx, [rax + 0x1f]	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebe5	            0x85c0	                           test eax, eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebe7	           0xf48c2	                          cmovs eax, edx	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebea	          0xc1f805	                              sar eax, 5	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebed	          0x83c001	                              add eax, 1	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebf0	        0x41894570	             mov dword [r13 + 0x70], eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400ebf4	            0xebac	                           jmp 0x400eba2	     10298	elf.c	FUNCTION_156	IF_7
0x400ebf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10298	elf.c	FUNCTION_156	IF_7
0x400ec00	      0x48837e0867	               cmp qword [rsi + 8], 0x67	     10240	elf.c	FUNCTION_155	IF_1
0x400ec05	     0xf87b5000000	                            ja 0x400ecc0	     10240	elf.c	FUNCTION_155	IF_1
0x400ec0b	        0x4883c408	                              add rsp, 8	     10302	elf.c	FUNCTION_156
0x400ec0f	          0x4531e4	                          xor r12d, r12d	     10241	elf.c	FUNCTION_155	IF_1
0x400ec12	              0x5b	                                 pop rbx	     10302	elf.c	FUNCTION_156
0x400ec13	          0x4489e0	                           mov eax, r12d	     10302	elf.c	FUNCTION_156
0x400ec16	              0x5d	                                 pop rbp	     10302	elf.c	FUNCTION_156
0x400ec17	            0x415c	                                 pop r12	     10302	elf.c	FUNCTION_156
0x400ec19	            0x415d	                                 pop r13	     10302	elf.c	FUNCTION_156
0x400ec1b	              0xc3	                                     ret	     10302	elf.c	FUNCTION_156
0x400ec1c	         0xf1f4000	                         nop dword [rax]	     10302	elf.c	FUNCTION_156
0x400ec20	      0xba00010000	                          mov edx, 0x100	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400ec25	      0xbe00000000	                              mov esi, 0	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400ec2a	      0xe800000000	                          call 0x400ec2f	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400ec2f	          0x4885c0	                           test rax, rax	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x400ec32	          0x4989c4	                            mov r12, rax	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400ec35	            0x74d4	                            je 0x400ec0b	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x400ec37	        0x488b4308	                mov rax, qword [rbx + 8]	     10280	elf.c	FUNCTION_156	IF_5
0x400ec3b	          0x4889ef	                            mov rdi, rbp	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec3e	      0x4989442438	             mov qword [r12 + 0x38], rax	     10280	elf.c	FUNCTION_156	IF_5
0x400ec43	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10281	elf.c	FUNCTION_156	IF_5
0x400ec47	    0x498984249000	             mov qword [r12 + 0x90], rax	     10281	elf.c	FUNCTION_156	IF_5
0x400ec4f	      0xe800000000	                          call 0x400ec54	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec54	          0x8d501f	                   lea edx, [rax + 0x1f]	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec57	            0x85c0	                           test eax, eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec59	           0xf48c2	                          cmovs eax, edx	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec5c	          0xc1f805	                              sar eax, 5	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec5f	          0x83c001	                              add eax, 1	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec62	      0x4189442470	             mov dword [r12 + 0x70], eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400ec67	    0x41bc01000000	                             mov r12d, 1	     10284	elf.c	FUNCTION_156	IF_5
0x400ec6d	      0xe930ffffff	                           jmp 0x400eba2	     10284	elf.c	FUNCTION_156	IF_5
0x400ec72	    0x660f1f440000	                    nop word [rax + rax]	     10284	elf.c	FUNCTION_156	IF_5
0x400ec78	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400ec7c	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400ec80	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400ec85	        0x4883c408	                              add rsp, 8	     10302	elf.c	FUNCTION_156
0x400ec89	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400ec8c	              0x5b	                                 pop rbx	     10302	elf.c	FUNCTION_156
0x400ec8d	              0x5d	                                 pop rbp	     10302	elf.c	FUNCTION_156
0x400ec8e	            0x415c	                                 pop r12	     10302	elf.c	FUNCTION_156
0x400ec90	            0x415d	                                 pop r13	     10302	elf.c	FUNCTION_156
0x400ec92	      0xe929faffff	 jmp sym._bfd_elfcore_make_pseudosection	      9192	elf.c	FUNCTION_116	CALL_1
0x400ec97	    0x660f1f840000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400eca0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400eca4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400eca8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecad	            0xebd6	                           jmp 0x400ec85	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecaf	              0x90	                                     nop	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecb0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecb4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecb8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecbd	            0xebc6	                           jmp 0x400ec85	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecbf	              0x90	                                     nop	      9192	elf.c	FUNCTION_116	CALL_1
0x400ecc0	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     10244	elf.c	FUNCTION_155	CALL_1
0x400ecc7	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10244	elf.c	FUNCTION_155	CALL_1
0x400ecce	        0x488b4620	            mov rax, qword [rsi + 0x20] 	     10245	elf.c	FUNCTION_155	CALL_2
0x400ecd2	        0x488d7808	                      lea rdi, [rax + 8]	     10245	elf.c	FUNCTION_155	CALL_2
0x400ecd6	        0x488b4508	                mov rax, qword [rbp + 8]	     10245	elf.c	FUNCTION_155	CALL_2
0x400ecda	    0xff9080000000	                 call qword [rax + 0x80]	     10245	elf.c	FUNCTION_155	CALL_2
0x400ece0	        0x41890424	                    mov dword [r12], eax	     10245	elf.c	FUNCTION_155	CALL_2
0x400ece4	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10248	elf.c	FUNCTION_155	CALL_3
0x400eceb	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10248	elf.c	FUNCTION_155	CALL_3
0x400ecf2	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10249	elf.c	FUNCTION_155	CALL_4
0x400ecf6	        0x488d7820	                   lea rdi, [rax + 0x20]	     10249	elf.c	FUNCTION_155	CALL_4
0x400ecfa	        0x488b4508	                mov rax, qword [rbp + 8]	     10249	elf.c	FUNCTION_155	CALL_4
0x400ecfe	    0xff9080000000	                 call qword [rax + 0x80]	     10249	elf.c	FUNCTION_155	CALL_4
0x400ed04	      0x4189442404	                mov dword [r12 + 4], eax	     10249	elf.c	FUNCTION_155	CALL_4
0x400ed09	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10252	elf.c	FUNCTION_155	CALL_5
0x400ed10	      0xba1f000000	                           mov edx, 0x1f	     10253	elf.c	FUNCTION_155	CALL_6
0x400ed15	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	     10253	elf.c	FUNCTION_155	CALL_6
0x400ed19	          0x4889ef	                            mov rdi, rbp	     10253	elf.c	FUNCTION_155	CALL_6
0x400ed1c	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10252	elf.c	FUNCTION_155	CALL_5
0x400ed23	        0x4883c648	                           add rsi, 0x48	     10253	elf.c	FUNCTION_155	CALL_6
0x400ed27	      0xe800000000	                          call 0x400ed2c	     10253	elf.c	FUNCTION_155	CALL_6
0x400ed2c	      0x4989442418	             mov qword [r12 + 0x18], rax	     10253	elf.c	FUNCTION_155	CALL_6
0x400ed31	    0x41bc01000000	                             mov r12d, 1	     10255	elf.c	FUNCTION_155
0x400ed37	      0xe966feffff	                           jmp 0x400eba2	     10255	elf.c	FUNCTION_155
_bfd_elf_rel_vtable_reloc_fn	SWITCH,0:CALL,0:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	2
0x400e6b0	      0xb802000000	                              mov eax, 2	      9013	elf.c	FUNCTION_111
0x400e6b5	              0xc3	                                     ret	      9013	elf.c	FUNCTION_111
_bfd_elf_swap_verneed_in	SWITCH,0:CALL,5:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	30
0x4001e60	            0x4154	                                push r12	       124	elf.c	FUNCTION_5
0x4001e62	              0x55	                                push rbp	       124	elf.c	FUNCTION_5
0x4001e63	          0x4989fc	                            mov r12, rdi	       124	elf.c	FUNCTION_5
0x4001e66	              0x53	                                push rbx	       124	elf.c	FUNCTION_5
0x4001e67	        0x488b4708	                mov rax, qword [rdi + 8]	       125	elf.c	FUNCTION_5	CALL_1
0x4001e6b	          0x4889d5	                            mov rbp, rdx	       124	elf.c	FUNCTION_5
0x4001e6e	          0x4889f3	                            mov rbx, rsi	       124	elf.c	FUNCTION_5
0x4001e71	          0x4889f7	                            mov rdi, rsi	       125	elf.c	FUNCTION_5	CALL_1
0x4001e74	    0xff9098000000	                 call qword [rax + 0x98]	       125	elf.c	FUNCTION_5	CALL_1
0x4001e7a	        0x66894500	                      mov word [rbp], ax	       125	elf.c	FUNCTION_5	CALL_1
0x4001e7e	      0x498b442408	                mov rax, qword [r12 + 8]	       126	elf.c	FUNCTION_5	CALL_2
0x4001e83	        0x488d7b02	                      lea rdi, [rbx + 2]	       126	elf.c	FUNCTION_5	CALL_2
0x4001e87	    0xff9098000000	                 call qword [rax + 0x98]	       126	elf.c	FUNCTION_5	CALL_2
0x4001e8d	        0x66894502	                  mov word [rbp + 2], ax	       126	elf.c	FUNCTION_5	CALL_2
0x4001e91	      0x498b442408	                mov rax, qword [r12 + 8]	       127	elf.c	FUNCTION_5	CALL_3
0x4001e96	        0x488d7b04	                      lea rdi, [rbx + 4]	       127	elf.c	FUNCTION_5	CALL_3
0x4001e9a	    0xff9080000000	                 call qword [rax + 0x80]	       127	elf.c	FUNCTION_5	CALL_3
0x4001ea0	        0x48894508	                mov qword [rbp + 8], rax	       127	elf.c	FUNCTION_5	CALL_3
0x4001ea4	      0x498b442408	                mov rax, qword [r12 + 8]	       128	elf.c	FUNCTION_5	CALL_4
0x4001ea9	        0x488d7b08	                      lea rdi, [rbx + 8]	       128	elf.c	FUNCTION_5	CALL_4
0x4001ead	    0xff9080000000	                 call qword [rax + 0x80]	       128	elf.c	FUNCTION_5	CALL_4
0x4001eb3	        0x48894510	            mov qword [rbp + 0x10], rax 	       128	elf.c	FUNCTION_5	CALL_4
0x4001eb7	      0x498b442408	                mov rax, qword [r12 + 8]	       129	elf.c	FUNCTION_5	CALL_5
0x4001ebc	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	       129	elf.c	FUNCTION_5	CALL_5
0x4001ec0	    0xff9080000000	                 call qword [rax + 0x80]	       129	elf.c	FUNCTION_5	CALL_5
0x4001ec6	        0x48894518	            mov qword [rbp + 0x18], rax 	       129	elf.c	FUNCTION_5	CALL_5
0x4001eca	              0x5b	                                 pop rbx	       130	elf.c	FUNCTION_5
0x4001ecb	              0x5d	                                 pop rbp	       130	elf.c	FUNCTION_5
0x4001ecc	            0x415c	                                 pop r12	       130	elf.c	FUNCTION_5
0x4001ece	              0xc3	                                     ret	       130	elf.c	FUNCTION_5
_bfd_elf_canonicalize_dynamic_symtab	SWITCH,0:CALL,3:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	12
0x400c870	        0x488b4708	                mov rax, qword [rdi + 8]	      8193	elf.c	FUNCTION_94	CALL_1
0x400c874	              0x53	                                push rbx	      8192	elf.c	FUNCTION_94
0x400c875	      0xba01000000	                              mov edx, 1	      8194	elf.c	FUNCTION_94	CALL_2
0x400c87a	          0x4889fb	                            mov rbx, rdi	      8192	elf.c	FUNCTION_94
0x400c87d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8194	elf.c	FUNCTION_94	CALL_2
0x400c884	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8194	elf.c	FUNCTION_94	CALL_2
0x400c88b	          0xff5048	                 call qword [rax + 0x48]	      8194	elf.c	FUNCTION_94	CALL_2
0x400c88e	          0x4885c0	                           test rax, rax	      8196	elf.c	FUNCTION_94	IF_1
0x400c891	            0x7806	                            js 0x400c899	      8196	elf.c	FUNCTION_94	IF_1
0x400c893	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	      8197	elf.c	FUNCTION_94	CALL_3
0x400c899	              0x5b	                                 pop rbx	      8199	elf.c	FUNCTION_94
0x400c89a	              0xc3	                                     ret	      8199	elf.c	FUNCTION_94
_bfd_elf_plt_get_reloc_section	SWITCH,0:CALL,4:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	26
0x4005b00	              0x53	                                push rbx	      3591	elf.c	FUNCTION_50
0x4005b01	        0x488b5708	                mov rdx, qword [rdi + 8]	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4005b05	          0x4889fb	                            mov rbx, rdi	      3591	elf.c	FUNCTION_50
0x4005b08	          0x4889f0	                            mov rax, rsi	      3591	elf.c	FUNCTION_50
0x4005b0b	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4005b12	    0xf68289030000	              test byte [rdx + 0x389], 2	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4005b19	            0x740e	                            je 0x4005b29	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x4005b1b	      0xbf00000000	                              mov edi, 0	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4005b20	      0xb905000000	                              mov ecx, 5	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4005b25	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4005b27	            0x740f	                            je 0x4005b38	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x4005b29	          0x4889df	                            mov rdi, rbx	      3606	elf.c	FUNCTION_50	CALL_4
0x4005b2c	          0x4889c6	                            mov rsi, rax	      3606	elf.c	FUNCTION_50	CALL_4
0x4005b2f	              0x5b	                                 pop rbx	      3607	elf.c	FUNCTION_50
0x4005b30	      0xe900000000	                           jmp 0x4005b35	      3606	elf.c	FUNCTION_50	CALL_4
0x4005b35	           0xf1f00	                         nop dword [rax]	      3606	elf.c	FUNCTION_50	CALL_4
0x4005b38	      0xbe00000000	                              mov esi, 0	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4005b3d	          0x4889df	                            mov rdi, rbx	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4005b40	      0xe800000000	                          call 0x4005b45	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x4005b45	          0x4885c0	                           test rax, rax	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x4005b48	            0x7406	                            je 0x4005b50	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x4005b4a	              0x5b	                                 pop rbx	      3607	elf.c	FUNCTION_50
0x4005b4b	              0xc3	                                     ret	      3607	elf.c	FUNCTION_50
0x4005b4c	         0xf1f4000	                         nop dword [rax]	      3607	elf.c	FUNCTION_50
0x4005b50	      0xb800000000	                              mov eax, 0	      3603	elf.c	FUNCTION_50	IF_1
0x4005b55	            0xebd2	                           jmp 0x4005b29	      3603	elf.c	FUNCTION_50	IF_1
bfd_section_from_phdr	SWITCH,1:CALL,13:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	115
0x40058b0	          0x488b06	                    mov rax, qword [rsi]	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058b3	        0x4883f804	                              cmp rax, 4	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058b7	     0xf84e3000000	                            je 0x40059a0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058bd	            0x7631	                           jbe 0x40058f0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058bf	    0x483d50e57464	                     cmp rax, 0x6474e550	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058c5	     0xf84c5000000	                            je 0x4005990	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058cb	            0x7753	                            ja 0x4005920	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058cd	        0x4883f805	                              cmp rax, 5	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058d1	     0xf8489000000	                            je 0x4005960	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058d7	        0x4883f806	                              cmp rax, 6	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058db	     0xf858f000000	                           jne 0x4005970	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058e1	      0xb900000000	                              mov ecx, 0	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x40058e6	      0xe925fcffff	 jmp sym._bfd_elf_make_section_from_phdr	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x40058eb	       0xf1f440000	                   nop dword [rax + rax]	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x40058f0	        0x4883f801	                              cmp rax, 1	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058f4	     0xf84e6000000	                            je 0x40059e0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40058fa	     0xf82d0000000	                            jb 0x40059d0	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005900	        0x4883f802	                              cmp rax, 2	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005904	            0x743a	                            je 0x4005940	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005906	        0x4883f803	                              cmp rax, 3	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400590a	            0x7564	                           jne 0x4005970	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400590c	      0xb900000000	                              mov ecx, 0	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4005911	      0xe9fafbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4005916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4005920	    0x483d51e57464	                     cmp rax, 0x6474e551	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005926	            0x7428	                            je 0x4005950	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005928	    0x483d52e57464	                     cmp rax, 0x6474e552	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400592e	            0x7540	                           jne 0x4005970	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005930	      0xb900000000	                              mov ecx, 0	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4005935	      0xe9d6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x400593a	    0x660f1f440000	                    nop word [rax + rax]	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4005940	      0xb900000000	                              mov ecx, 0	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4005945	      0xe9c6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x400594a	    0x660f1f440000	                    nop word [rax + rax]	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4005950	      0xb900000000	                              mov ecx, 0	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4005955	      0xe9b6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x400595a	    0x660f1f440000	                    nop word [rax + rax]	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4005960	      0xb900000000	                              mov ecx, 0	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4005965	      0xe9a6fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x400596a	    0x660f1f440000	                    nop word [rax + rax]	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x4005970	        0x488b4708	                mov rax, qword [rdi + 8]	      3039	elf.c	FUNCTION_43	SWITCH_1	CALL_12
0x4005974	      0xb900000000	                              mov ecx, 0	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005979	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005980	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005987	            0xffe0	                                 jmp rax	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005989	     0xf1f80000000	                         nop dword [rax]	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005990	      0xb900000000	                              mov ecx, 0	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4005995	      0xe976fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x400599a	    0x660f1f440000	                    nop word [rax + rax]	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x40059a0	            0x4156	                                push r14	      2996	elf.c	FUNCTION_43
0x40059a2	            0x4155	                                push r13	      2996	elf.c	FUNCTION_43
0x40059a4	      0xb900000000	                              mov ecx, 0	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40059a9	            0x4154	                                push r12	      2996	elf.c	FUNCTION_43
0x40059ab	              0x55	                                push rbp	      2996	elf.c	FUNCTION_43
0x40059ac	          0x4889fd	                            mov rbp, rdi	      2996	elf.c	FUNCTION_43
0x40059af	              0x53	                                push rbx	      2996	elf.c	FUNCTION_43
0x40059b0	          0x4889f3	                            mov rbx, rsi	      2996	elf.c	FUNCTION_43
0x40059b3	      0xe800000000	                          call 0x40059b8	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40059b8	            0x85c0	                           test eax, eax	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40059ba	            0x7534	                           jne 0x40059f0	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x40059bc	            0x31c0	                            xor eax, eax	      3018	elf.c	FUNCTION_43	SWITCH_1	IF_2
0x40059be	              0x5b	                                 pop rbx	      3042	elf.c	FUNCTION_43
0x40059bf	              0x5d	                                 pop rbp	      3042	elf.c	FUNCTION_43
0x40059c0	            0x415c	                                 pop r12	      3042	elf.c	FUNCTION_43
0x40059c2	            0x415d	                                 pop r13	      3042	elf.c	FUNCTION_43
0x40059c4	            0x415e	                                 pop r14	      3042	elf.c	FUNCTION_43
0x40059c6	              0xc3	                                     ret	      3042	elf.c	FUNCTION_43
0x40059c7	    0x660f1f840000	                    nop word [rax + rax]	      3042	elf.c	FUNCTION_43
0x40059d0	      0xb900000000	                              mov ecx, 0	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40059d5	      0xe936fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40059da	    0x660f1f440000	                    nop word [rax + rax]	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40059e0	      0xb900000000	                              mov ecx, 0	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x40059e5	      0xe926fbffff	 jmp sym._bfd_elf_make_section_from_phdr	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x40059ea	    0x660f1f440000	                    nop word [rax + rax]	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x40059f0	        0x4c8b6328	            mov r12, qword [rbx + 0x28] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x40059f4	      0x498d4424ff	                      lea rax, [r12 - 1]	     11188	elf.c	FUNCTION_192	IF_1
0x40059f9	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	     11188	elf.c	FUNCTION_192	IF_1
0x40059fd	            0x7611	                           jbe 0x4005a10	     11188	elf.c	FUNCTION_192	IF_1
0x40059ff	      0xb801000000	                              mov eax, 1	      3019	elf.c	FUNCTION_43	SWITCH_1
0x4005a04	            0xebb8	                           jmp 0x40059be	      3019	elf.c	FUNCTION_43	SWITCH_1
0x4005a06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3019	elf.c	FUNCTION_43	SWITCH_1
0x4005a10	        0x4c8b6b38	            mov r13, qword [rbx + 0x38] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x4005a14	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x4005a18	            0x31d2	                            xor edx, edx	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005a1a	          0x4889ef	                            mov rdi, rbp	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005a1d	          0x4889de	                            mov rsi, rbx	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005a20	      0xe800000000	                          call 0x4005a25	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005a25	            0x85c0	                           test eax, eax	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005a27	            0x7593	                           jne 0x40059bc	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005a29	      0x498d7c2401	                      lea rdi, [r12 + 1]	     11194	elf.c	FUNCTION_192	CALL_2
0x4005a2e	      0xe800000000	                          call 0x4005a33	     11194	elf.c	FUNCTION_192	CALL_2
0x4005a33	          0x4885c0	                           test rax, rax	     11195	elf.c	FUNCTION_192	IF_3
0x4005a36	          0x4989c6	                            mov r14, rax	     11194	elf.c	FUNCTION_192	CALL_2
0x4005a39	            0x7481	                            je 0x40059bc	     11195	elf.c	FUNCTION_192	IF_3
0x4005a3b	      0x42c6042000	                 mov byte [rax + r12], 0	     11200	elf.c	FUNCTION_192
0x4005a40	          0x4889ea	                            mov rdx, rbp	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005a43	          0x4c89e6	                            mov rsi, r12	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005a46	          0x4889c7	                            mov rdi, rax	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005a49	      0xe800000000	                          call 0x4005a4e	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005a4e	          0x4939c4	                            cmp r12, rax	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005a51	            0x740d	                            je 0x4005a60	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005a53	          0x4c89f7	                            mov rdi, r14	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x4005a56	      0xe800000000	                          call 0x4005a5b	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x4005a5b	      0xe95cffffff	                           jmp 0x40059bc	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x4005a60	          0x4d89e8	                             mov r8, r13	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a63	          0x4889d9	                            mov rcx, rbx	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a66	          0x4c89e2	                            mov rdx, r12	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a69	          0x4c89f6	                            mov rsi, r14	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a6c	          0x4889ef	                            mov rdi, rbp	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a6f	      0xe83cafffff	                call sym.elf_parse_notes	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a74	            0x85c0	                           test eax, eax	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a76	            0x74db	                            je 0x4005a53	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x4005a78	          0x4c89f7	                            mov rdi, r14	     11209	elf.c	FUNCTION_192	CALL_6
0x4005a7b	      0xe800000000	                          call 0x4005a80	     11209	elf.c	FUNCTION_192	CALL_6
0x4005a80	      0xe97affffff	                           jmp 0x40059ff	     11209	elf.c	FUNCTION_192	CALL_6
_bfd_elf_get_symbol_version_string	SWITCH,0:CALL,6:IF,5:functions,0:ELSE,3:DO,0:WHILE,0:FOR,2	54
0x4002f50	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4002f57	    0x448b90800c00	          mov r10d, dword [rax + 0xc80] 	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4002f5e	          0x4585d2	                         test r10d, r10d	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4002f61	     0xf8499000000	                            je 0x4003000	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4002f67	    0x448b88840c00	           mov r9d, dword [rax + 0xc84] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002f6e	          0x4585c9	                           test r9d, r9d	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002f71	            0x747d	                            je 0x4002ff0	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002f73	         0xfbf4658	           movsx eax, word [rsi + 0x58] 	      1861	elf.c	FUNCTION_34	IF_1
0x4002f77	            0x89c1	                            mov ecx, eax	      1861	elf.c	FUNCTION_34	IF_1
0x4002f79	          0xc1e81f	                           shr eax, 0x1f	      1863	elf.c	FUNCTION_34	IF_1
0x4002f7c	      0x6681e1ff7f	                          and cx, 0x7fff	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x4002f81	            0x8902	                    mov dword [rdx], eax	      1863	elf.c	FUNCTION_34	IF_1
0x4002f83	      0xb800000000	                              mov eax, 0	      1867	elf.c	FUNCTION_34	IF_1	IF_2
0x4002f88	            0x745b	                            je 0x4002fe5	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x4002f8a	        0x6683f901	                               cmp cx, 1	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4002f8e	           0xfb7f1	                           movzx esi, cx	      1864	elf.c	FUNCTION_34	IF_1
0x4002f91	            0x744d	                            je 0x4002fe0	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4002f93	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4002f9a	    0x3bb240030000	           cmp esi, dword [rdx + 0x340] 	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4002fa0	            0x7661	                           jbe 0x4003003	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4002fa2	    0x488bba500300	           mov rdi, qword [rdx + 0x350] 	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002fa9	          0x4885ff	                           test rdi, rdi	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002fac	            0x7437	                            je 0x4002fe5	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002fae	            0x6690	                                     nop	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002fb0	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fb4	          0x4885d2	                           test rdx, rdx	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fb7	            0x7510	                           jne 0x4002fc9	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fb9	            0xeb1a	                           jmp 0x4002fd5	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fbb	       0xf1f440000	                   nop dword [rax + rax]	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fc0	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fc4	          0x4885d2	                           test rdx, rdx	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fc7	            0x740c	                            je 0x4002fd5	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002fc9	         0xfb74a0a	            movzx ecx, word [rdx + 0xa] 	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002fcd	            0x39ce	                            cmp esi, ecx	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002fcf	            0x75ef	                           jne 0x4002fc0	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002fd1	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      1888	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002fd5	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	      1880	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1
0x4002fd9	          0x4885ff	                           test rdi, rdi	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002fdc	            0x75d2	                           jne 0x4002fb0	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002fde	            0xf3c3	                                     ret	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002fe0	      0xb800000000	                              mov eax, 0	      1869	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4002fe5	            0xf3c3	                                     ret	      1896	elf.c	FUNCTION_34
0x4002fe7	    0x660f1f840000	                    nop word [rax + rax]	      1896	elf.c	FUNCTION_34
0x4002ff0	    0x448b80880c00	           mov r8d, dword [rax + 0xc88] 	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002ff7	          0x4585c0	                           test r8d, r8d	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002ffa	     0xf8573ffffff	                           jne 0x4002f73	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4003000	            0x31c0	                            xor eax, eax	      1857	elf.c	FUNCTION_34
0x4003002	              0xc3	                                     ret	      1857	elf.c	FUNCTION_34
0x4003003	          0x8d46ff	                      lea eax, [rsi - 1]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4003006	    0x488b8a480300	           mov rcx, qword [rdx + 0x348] 	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x400300d	        0x488d04c0	                  lea rax, [rax + rax*8]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4003011	        0x488d04c1	                  lea rax, [rcx + rax*8]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4003015	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4003019	              0xc3	                                     ret	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
bfd_elf_print_symbol	SWITCH,2:CALL,8:IF,5:functions,0:ELSE,2:DO,0:WHILE,0:FOR,1	167
0x4003020	            0x4156	                                push r14	      1905	elf.c	FUNCTION_35
0x4003022	            0x4155	                                push r13	      1905	elf.c	FUNCTION_35
0x4003024	            0x4154	                                push r12	      1905	elf.c	FUNCTION_35
0x4003026	              0x55	                                push rbp	      1905	elf.c	FUNCTION_35
0x4003027	          0x4989d4	                            mov r12, rdx	      1905	elf.c	FUNCTION_35
0x400302a	              0x53	                                push rbx	      1905	elf.c	FUNCTION_35
0x400302b	          0x4889fd	                            mov rbp, rdi	      1905	elf.c	FUNCTION_35
0x400302e	          0x4889f3	                            mov rbx, rsi	      1905	elf.c	FUNCTION_35
0x4003031	        0x4883ec10	                           sub rsp, 0x10	      1905	elf.c	FUNCTION_35
0x4003035	    0x64488b042528	                mov rax, qword fs:[0x28]	      1905	elf.c	FUNCTION_35
0x400303e	      0x4889442408	                mov qword [rsp + 8], rax	      1905	elf.c	FUNCTION_35
0x4003043	            0x31c0	                            xor eax, eax	      1905	elf.c	FUNCTION_35
0x4003045	          0x83f901	                              cmp ecx, 1	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4003048	     0xf8452010000	                            je 0x40031a0	      1907	elf.c	FUNCTION_35	SWITCH_1
0x400304e	     0xf823c010000	                            jb 0x4003190	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4003054	          0x83f902	                              cmp ecx, 2	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4003057	     0xf850d010000	                           jne 0x400316a	      1907	elf.c	FUNCTION_35	SWITCH_1
0x400305d	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4003061	          0x4885c0	                           test rax, rax	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4003064	     0xf8456020000	                            je 0x40032c0	      1927	elf.c	FUNCTION_35	SWITCH_1
0x400306a	          0x4c8b30	                    mov r14, qword [rax]	      1927	elf.c	FUNCTION_35	SWITCH_1
0x400306d	        0x488b4508	                mov rax, qword [rbp + 8]	      1929	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x4003071	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4003078	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400307f	          0x4885c0	                           test rax, rax	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4003082	     0xf8460010000	                            je 0x40031e8	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4003088	          0x4c89e2	                            mov rdx, r12	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400308b	          0x4889de	                            mov rsi, rbx	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x400308e	          0x4889ef	                            mov rdi, rbp	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4003091	            0xffd0	                                call rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4003093	          0x4885c0	                           test rax, rax	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x4003096	          0x4989c5	                            mov r13, rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4003099	     0xf8449010000	                            je 0x40031e8	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x400309f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x40030a1	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_66
0x40030a4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x40030a9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x40030ae	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x40030b1	      0xe800000000	                          call 0x40030b6	        97	stdio2.h	CALL_66
0x40030b6	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40030bb	          0x4885c0	                           test rax, rax	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40030be	     0xf843c010000	                            je 0x4003200	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40030c4	        0xf6402110	           test byte [rax + 0x21], 0x10 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40030c8	     0xf8432010000	                            je 0x4003200	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3	CALL_4
0x40030ce	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x40030d3	          0x4889ef	                            mov rdi, rbp	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x40030d6	          0x4889de	                            mov rsi, rbx	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x40030d9	      0xe800000000	                          call 0x40030de	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x40030de	      0x488d542404	                      lea rdx, [rsp + 4]	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_6
0x40030e3	          0x4889ef	                            mov rdi, rbp	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_6
0x40030e6	          0x4c89e6	                            mov rsi, r12	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_6
0x40030e9	      0xe800000000	                          call 0x40030ee	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_6
0x40030ee	          0x4885c0	                           test rax, rax	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x40030f1	          0x4889c5	                            mov rbp, rax	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_6
0x40030f4	            0x7423	                            je 0x4003119	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x40030f6	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_66
0x40030f9	        0x8b442404	                mov eax, dword [rsp + 4]	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x40030fd	            0x85c0	                           test eax, eax	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x40030ff	     0xf850b010000	                           jne 0x4003210	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4003105	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400310a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400310f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x4003112	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x4003114	      0xe800000000	                          call 0x4003119	        97	stdio2.h	CALL_66
0x4003119	    0x410fb64c2449	           movzx ecx, byte [r12 + 0x49] 	      1969	elf.c	FUNCTION_35	SWITCH_1
0x400311f	          0x80f901	                               cmp cl, 1	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4003122	     0xf8438010000	                            je 0x4003260	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4003128	            0x7229	                            jb 0x4003153	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x400312a	          0x80f902	                               cmp cl, 2	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x400312d	     0xf846d010000	                            je 0x40032a0	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4003133	          0x80f903	                               cmp cl, 3	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4003136	     0xf8544010000	                           jne 0x4003280	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x400313c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x400313f	      0xba0b000000	                            mov edx, 0xb	        97	stdio2.h	CALL_66
0x4003144	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x4003149	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x400314e	      0xe800000000	                          call 0x4003153	        97	stdio2.h	CALL_66
0x4003153	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_66
0x4003156	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400315b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x4003160	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x4003163	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x4003165	      0xe800000000	                          call 0x400316a	        97	stdio2.h	CALL_66
0x400316a	      0x488b442408	                mov rax, qword [rsp + 8]	      1987	elf.c	FUNCTION_35
0x400316f	    0x644833042528	                xor rax, qword fs:[0x28]	      1987	elf.c	FUNCTION_35
0x4003178	     0xf854d010000	                           jne 0x40032cb	      1987	elf.c	FUNCTION_35
0x400317e	        0x4883c410	                           add rsp, 0x10	      1987	elf.c	FUNCTION_35
0x4003182	              0x5b	                                 pop rbx	      1987	elf.c	FUNCTION_35
0x4003183	              0x5d	                                 pop rbp	      1987	elf.c	FUNCTION_35
0x4003184	            0x415c	                                 pop r12	      1987	elf.c	FUNCTION_35
0x4003186	            0x415d	                                 pop r13	      1987	elf.c	FUNCTION_35
0x4003188	            0x415e	                                 pop r14	      1987	elf.c	FUNCTION_35
0x400318a	              0xc3	                                     ret	      1987	elf.c	FUNCTION_35
0x400318b	       0xf1f440000	                   nop dword [rax + rax]	      1987	elf.c	FUNCTION_35
0x4003190	        0x488b7a08	                mov rdi, qword [rdx + 8]	        97	stdio2.h	CALL_66
0x4003194	      0xe800000000	                          call 0x4003199	        97	stdio2.h	CALL_66
0x4003199	            0xebcf	                           jmp 0x400316a	        97	stdio2.h	CALL_66
0x400319b	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_66
0x40031a0	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_66
0x40031a3	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_66
0x40031a8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x40031ad	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x40031b2	      0xe800000000	                          call 0x40031b7	        97	stdio2.h	CALL_66
0x40031b7	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40031bc	          0x4889de	                            mov rsi, rbx	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40031bf	          0x4889ef	                            mov rdi, rbp	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40031c2	      0xe800000000	                          call 0x40031c7	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x40031c7	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	        97	stdio2.h	CALL_66
0x40031cc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x40031d1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x40031d6	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x40031d9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x40031db	      0xe800000000	                          call 0x40031e0	        97	stdio2.h	CALL_66
0x40031e0	            0xeb88	                           jmp 0x400316a	        97	stdio2.h	CALL_66
0x40031e2	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_66
0x40031e8	          0x4c89e2	                            mov rdx, r12	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x40031eb	          0x4889de	                            mov rsi, rbx	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x40031ee	          0x4889ef	                            mov rdi, rbp	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x40031f1	      0x4d8b6c2408	                mov r13, qword [r12 + 8]	      1935	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x40031f6	      0xe800000000	                          call 0x40031fb	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x40031fb	      0xe99ffeffff	                           jmp 0x400309f	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4003200	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4003205	      0xe9c9feffff	                           jmp 0x40030d3	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x400320a	    0x660f1f440000	                    nop word [rax + rax]	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4003210	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x4003215	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400321a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400321d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400321f	      0xe800000000	                          call 0x4003224	        97	stdio2.h	CALL_66
0x4003224	          0x4889ef	                            mov rdi, rbp	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003227	      0xbd0a000000	                            mov ebp, 0xa	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x400322c	      0xe800000000	                          call 0x4003231	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003231	            0x29c5	                            sub ebp, eax	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003233	            0x85ed	                           test ebp, ebp	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003235	     0xf8edefeffff	                           jle 0x4003119	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x400323b	       0xf1f440000	                   nop dword [rax + rax]	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003240	          0x4889de	                            mov rsi, rbx	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_8
0x4003243	      0xbf20000000	                           mov edi, 0x20	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_8
0x4003248	      0xe800000000	                          call 0x400324d	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_8
0x400324d	          0x83ed01	                              sub ebp, 1	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003250	            0x75ee	                           jne 0x4003240	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003252	      0xe9c2feffff	                           jmp 0x4003119	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003257	    0x660f1f840000	                    nop word [rax + rax]	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_7
0x4003260	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x4003263	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_66
0x4003268	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400326d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x4003272	      0xe800000000	                          call 0x4003277	        97	stdio2.h	CALL_66
0x4003277	      0xe9d7feffff	                           jmp 0x4003153	        97	stdio2.h	CALL_66
0x400327c	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_66
0x4003280	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x4003285	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400328a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400328d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400328f	      0xe800000000	                          call 0x4003294	        97	stdio2.h	CALL_66
0x4003294	      0xe9bafeffff	                           jmp 0x4003153	        97	stdio2.h	CALL_66
0x4003299	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_66
0x40032a0	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x40032a3	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_66
0x40032a8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x40032ad	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x40032b2	      0xe800000000	                          call 0x40032b7	        97	stdio2.h	CALL_66
0x40032b7	      0xe997feffff	                           jmp 0x4003153	        97	stdio2.h	CALL_66
0x40032bc	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_66
0x40032c0	    0x41be00000000	                             mov r14d, 0	      1927	elf.c	FUNCTION_35	SWITCH_1
0x40032c6	      0xe9a2fdffff	                           jmp 0x400306d	      1927	elf.c	FUNCTION_35	SWITCH_1
0x40032cb	      0xe800000000	          call sym.bfd_section_from_shdr	      1987	elf.c	FUNCTION_35
_bfd_elf_get_reloc_upper_bound	SWITCH,0:CALL,0:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	4
0x400c7c0	    0x8b8688000000	            mov eax, dword [rsi + 0x88] 	      8151	elf.c	FUNCTION_91
0x400c7c6	          0x83c001	                              add eax, 1	      8151	elf.c	FUNCTION_91
0x400c7c9	        0x48c1e003	                              shl rax, 3	      8151	elf.c	FUNCTION_91
0x400c7cd	              0xc3	                                     ret	      8152	elf.c	FUNCTION_91
_bfd_elf_swap_vernaux_out	SWITCH,0:CALL,5:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	30
0x4001fc0	            0x4154	                                push r12	       166	elf.c	FUNCTION_8
0x4001fc2	              0x55	                                push rbp	       166	elf.c	FUNCTION_8
0x4001fc3	          0x4989f4	                            mov r12, rsi	       166	elf.c	FUNCTION_8
0x4001fc6	              0x53	                                push rbx	       166	elf.c	FUNCTION_8
0x4001fc7	        0x488b4708	                mov rax, qword [rdi + 8]	       167	elf.c	FUNCTION_8	CALL_1
0x4001fcb	          0x4889fd	                            mov rbp, rdi	       166	elf.c	FUNCTION_8
0x4001fce	          0x4889d3	                            mov rbx, rdx	       166	elf.c	FUNCTION_8
0x4001fd1	          0x4889d6	                            mov rsi, rdx	       167	elf.c	FUNCTION_8	CALL_1
0x4001fd4	        0x498b3c24	                    mov rdi, qword [r12]	       167	elf.c	FUNCTION_8	CALL_1
0x4001fd8	    0xff9090000000	                 call qword [rax + 0x90]	       167	elf.c	FUNCTION_8	CALL_1
0x4001fde	        0x488b4508	                mov rax, qword [rbp + 8]	       168	elf.c	FUNCTION_8	CALL_2
0x4001fe2	    0x410fb77c2408	               movzx edi, word [r12 + 8]	       168	elf.c	FUNCTION_8	CALL_2
0x4001fe8	        0x488d7304	                      lea rsi, [rbx + 4]	       168	elf.c	FUNCTION_8	CALL_2
0x4001fec	    0xff90a8000000	                 call qword [rax + 0xa8]	       168	elf.c	FUNCTION_8	CALL_2
0x4001ff2	        0x488b4508	                mov rax, qword [rbp + 8]	       169	elf.c	FUNCTION_8	CALL_3
0x4001ff6	    0x410fb77c240a	            movzx edi, word [r12 + 0xa] 	       169	elf.c	FUNCTION_8	CALL_3
0x4001ffc	        0x488d7306	                      lea rsi, [rbx + 6]	       169	elf.c	FUNCTION_8	CALL_3
0x4002000	    0xff90a8000000	                 call qword [rax + 0xa8]	       169	elf.c	FUNCTION_8	CALL_3
0x4002006	        0x488b4508	                mov rax, qword [rbp + 8]	       170	elf.c	FUNCTION_8	CALL_4
0x400200a	        0x488d7308	                      lea rsi, [rbx + 8]	       170	elf.c	FUNCTION_8	CALL_4
0x400200e	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       170	elf.c	FUNCTION_8	CALL_4
0x4002013	    0xff9090000000	                 call qword [rax + 0x90]	       170	elf.c	FUNCTION_8	CALL_4
0x4002019	        0x488b4508	                mov rax, qword [rbp + 8]	       171	elf.c	FUNCTION_8	CALL_5
0x400201d	        0x488d730c	                    lea rsi, [rbx + 0xc]	       171	elf.c	FUNCTION_8	CALL_5
0x4002021	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       171	elf.c	FUNCTION_8	CALL_5
0x4002026	              0x5b	                                 pop rbx	       172	elf.c	FUNCTION_8
0x4002027	              0x5d	                                 pop rbp	       172	elf.c	FUNCTION_8
0x4002028	            0x415c	                                 pop r12	       172	elf.c	FUNCTION_8
0x400202a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       171	elf.c	FUNCTION_8	CALL_5
0x4002031	            0xffe0	                                 jmp rax	       171	elf.c	FUNCTION_8	CALL_5
_bfd_elf_set_section_contents	SWITCH,0:CALL,6:IF,5:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	83
0x400e380	            0x4155	                                push r13	      8850	elf.c	FUNCTION_107
0x400e382	            0x4154	                                push r12	      8850	elf.c	FUNCTION_107
0x400e384	          0x4989d5	                            mov r13, rdx	      8850	elf.c	FUNCTION_107
0x400e387	              0x55	                                push rbp	      8850	elf.c	FUNCTION_107
0x400e388	              0x53	                                push rbx	      8850	elf.c	FUNCTION_107
0x400e389	          0x4989f4	                            mov r12, rsi	      8850	elf.c	FUNCTION_107
0x400e38c	          0x4889fb	                            mov rbx, rdi	      8850	elf.c	FUNCTION_107
0x400e38f	          0x4c89c5	                             mov rbp, r8	      8850	elf.c	FUNCTION_107
0x400e392	        0x4883ec18	                           sub rsp, 0x18	      8850	elf.c	FUNCTION_107
0x400e396	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      8854	elf.c	FUNCTION_107	IF_1
0x400e39a	     0xf8490000000	                            je 0x400e430	      8854	elf.c	FUNCTION_107	IF_1
0x400e3a0	          0x4885ed	                           test rbp, rbp	      8858	elf.c	FUNCTION_107	IF_2
0x400e3a3	            0x747b	                            je 0x400e420	      8858	elf.c	FUNCTION_107	IF_2
0x400e3a5	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      8861	elf.c	FUNCTION_107	CALL_2
0x400e3ad	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      8862	elf.c	FUNCTION_107	IF_3
0x400e3b1	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      8862	elf.c	FUNCTION_107	IF_3
0x400e3b5	            0x7429	                            je 0x400e3e0	      8862	elf.c	FUNCTION_107	IF_3
0x400e3b7	          0x4801ce	                            add rsi, rcx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400e3ba	            0x31d2	                            xor edx, edx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400e3bc	          0x4889df	                            mov rdi, rbx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400e3bf	      0xe800000000	                          call 0x400e3c4	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400e3c4	            0x85c0	                           test eax, eax	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400e3c6	     0xf8484000000	                            je 0x400e450	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400e3cc	            0x31c0	                            xor eax, eax	      8856	elf.c	FUNCTION_107	IF_1
0x400e3ce	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x400e3d2	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x400e3d3	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x400e3d4	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x400e3d6	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x400e3d8	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x400e3d9	     0xf1f80000000	                         nop dword [rax]	      8879	elf.c	FUNCTION_107
0x400e3e0	      0x488d540d00	                    lea rdx, [rbp + rcx]	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x400e3e5	        0x483b5020	            cmp rdx, qword [rax + 0x20] 	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x400e3e9	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      8865	elf.c	FUNCTION_107	IF_3
0x400e3ed	     0xf877f000000	                            ja 0x400e472	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x400e3f3	    0x41f644242308	               test byte [r12 + 0x23], 8	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400e3f9	            0x7477	                            je 0x400e472	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400e3fb	          0x4885ff	                           test rdi, rdi	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400e3fe	            0x7472	                            je 0x400e472	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400e400	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_204	CALL_3
0x400e403	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_204	CALL_3
0x400e406	          0x4801cf	                            add rdi, rcx	        53	string3.h	FUNCTION_204	CALL_3
0x400e409	      0xe800000000	                          call 0x400e40e	        53	string3.h	FUNCTION_204	CALL_3
0x400e40e	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x400e412	      0xb801000000	                              mov eax, 1	      8871	elf.c	FUNCTION_107	IF_3
0x400e417	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x400e418	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x400e419	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x400e41b	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x400e41d	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x400e41e	            0x6690	                                     nop	      8879	elf.c	FUNCTION_107
0x400e420	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x400e424	      0xb801000000	                              mov eax, 1	      8859	elf.c	FUNCTION_107	IF_2
0x400e429	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x400e42a	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x400e42b	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x400e42d	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x400e42f	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x400e430	            0x31f6	                            xor esi, esi	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400e432	      0x48894c2408	                mov qword [rsp + 8], rcx	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400e437	      0xe800000000	                          call 0x400e43c	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400e43c	            0x85c0	                           test eax, eax	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400e43e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400e443	     0xf8557ffffff	                           jne 0x400e3a0	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400e449	            0x31c0	                            xor eax, eax	      8856	elf.c	FUNCTION_107	IF_1
0x400e44b	      0xe97effffff	                           jmp 0x400e3ce	      8856	elf.c	FUNCTION_107	IF_1
0x400e450	          0x4889da	                            mov rdx, rbx	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400e453	          0x4889ee	                            mov rsi, rbp	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400e456	          0x4c89ef	                            mov rdi, r13	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400e459	      0xe800000000	                          call 0x400e45e	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400e45e	          0x4839c5	                            cmp rbp, rax	      8856	elf.c	FUNCTION_107	IF_1
0x400e461	           0xf94c0	                                 sete al	      8856	elf.c	FUNCTION_107	IF_1
0x400e464	        0x4883c418	                           add rsp, 0x18	      8879	elf.c	FUNCTION_107
0x400e468	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x400e469	           0xfb6c0	                           movzx eax, al	      8856	elf.c	FUNCTION_107	IF_1
0x400e46c	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x400e46d	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x400e46f	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x400e471	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
0x400e472	      0xba00000000	                              mov edx, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x400e477	      0xbea5220000	                         mov esi, 0x22a5	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x400e47c	      0xbf00000000	                              mov edi, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x400e481	      0xe800000000	                          call 0x400e486	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
_bfd_elf_swap_verdef_out	SWITCH,0:CALL,7:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	38
0x4001d40	            0x4154	                                push r12	        86	elf.c	FUNCTION_2
0x4001d42	              0x55	                                push rbp	        86	elf.c	FUNCTION_2
0x4001d43	          0x4889fd	                            mov rbp, rdi	        86	elf.c	FUNCTION_2
0x4001d46	              0x53	                                push rbx	        86	elf.c	FUNCTION_2
0x4001d47	        0x488b4508	                mov rax, qword [rbp + 8]	        87	elf.c	FUNCTION_2	CALL_1
0x4001d4b	          0x4889d3	                            mov rbx, rdx	        86	elf.c	FUNCTION_2
0x4001d4e	           0xfb73e	                   movzx edi, word [rsi]	        87	elf.c	FUNCTION_2	CALL_1
0x4001d51	          0x4989f4	                            mov r12, rsi	        86	elf.c	FUNCTION_2
0x4001d54	          0x4889d6	                            mov rsi, rdx	        87	elf.c	FUNCTION_2	CALL_1
0x4001d57	    0xff90a8000000	                 call qword [rax + 0xa8]	        87	elf.c	FUNCTION_2	CALL_1
0x4001d5d	        0x488b4508	                mov rax, qword [rbp + 8]	        88	elf.c	FUNCTION_2	CALL_2
0x4001d61	    0x410fb77c2402	               movzx edi, word [r12 + 2]	        88	elf.c	FUNCTION_2	CALL_2
0x4001d67	        0x488d7302	                      lea rsi, [rbx + 2]	        88	elf.c	FUNCTION_2	CALL_2
0x4001d6b	    0xff90a8000000	                 call qword [rax + 0xa8]	        88	elf.c	FUNCTION_2	CALL_2
0x4001d71	        0x488b4508	                mov rax, qword [rbp + 8]	        89	elf.c	FUNCTION_2	CALL_3
0x4001d75	    0x410fb77c2404	               movzx edi, word [r12 + 4]	        89	elf.c	FUNCTION_2	CALL_3
0x4001d7b	        0x488d7304	                      lea rsi, [rbx + 4]	        89	elf.c	FUNCTION_2	CALL_3
0x4001d7f	    0xff90a8000000	                 call qword [rax + 0xa8]	        89	elf.c	FUNCTION_2	CALL_3
0x4001d85	        0x488b4508	                mov rax, qword [rbp + 8]	        90	elf.c	FUNCTION_2	CALL_4
0x4001d89	    0x410fb77c2406	               movzx edi, word [r12 + 6]	        90	elf.c	FUNCTION_2	CALL_4
0x4001d8f	        0x488d7306	                      lea rsi, [rbx + 6]	        90	elf.c	FUNCTION_2	CALL_4
0x4001d93	    0xff90a8000000	                 call qword [rax + 0xa8]	        90	elf.c	FUNCTION_2	CALL_4
0x4001d99	        0x488b4508	                mov rax, qword [rbp + 8]	        91	elf.c	FUNCTION_2	CALL_5
0x4001d9d	        0x488d7308	                      lea rsi, [rbx + 8]	        91	elf.c	FUNCTION_2	CALL_5
0x4001da1	      0x498b7c2408	                mov rdi, qword [r12 + 8]	        91	elf.c	FUNCTION_2	CALL_5
0x4001da6	    0xff9090000000	                 call qword [rax + 0x90]	        91	elf.c	FUNCTION_2	CALL_5
0x4001dac	        0x488b4508	                mov rax, qword [rbp + 8]	        92	elf.c	FUNCTION_2	CALL_6
0x4001db0	        0x488d730c	                    lea rsi, [rbx + 0xc]	        92	elf.c	FUNCTION_2	CALL_6
0x4001db4	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	        92	elf.c	FUNCTION_2	CALL_6
0x4001db9	    0xff9090000000	                 call qword [rax + 0x90]	        92	elf.c	FUNCTION_2	CALL_6
0x4001dbf	        0x488b4508	                mov rax, qword [rbp + 8]	        93	elf.c	FUNCTION_2	CALL_7
0x4001dc3	        0x488d7310	                   lea rsi, [rbx + 0x10]	        93	elf.c	FUNCTION_2	CALL_7
0x4001dc7	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        93	elf.c	FUNCTION_2	CALL_7
0x4001dcc	              0x5b	                                 pop rbx	        94	elf.c	FUNCTION_2
0x4001dcd	              0x5d	                                 pop rbp	        94	elf.c	FUNCTION_2
0x4001dce	            0x415c	                                 pop r12	        94	elf.c	FUNCTION_2
0x4001dd0	    0x488b80900000	            mov rax, qword [rax + 0x90] 	        93	elf.c	FUNCTION_2	CALL_7
0x4001dd7	            0xffe0	                                 jmp rax	        93	elf.c	FUNCTION_2	CALL_7
_bfd_elf_section_offset	SWITCH,1:CALL,5:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	42
0x4011030	      0x440fb74224	           movzx r8d, word [rdx + 0x24] 	     11333	elf.c	FUNCTION_198	SWITCH_1
0x4011035	          0x4989d1	                             mov r9, rdx	     11332	elf.c	FUNCTION_198
0x4011038	      0x6641c1e807	                              shr r8w, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401103d	        0x4183e007	                              and r8d, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x4011041	        0x4180f801	                              cmp r8b, 1	     11333	elf.c	FUNCTION_198	SWITCH_1
0x4011045	            0x7461	                            je 0x40110a8	     11333	elf.c	FUNCTION_198	SWITCH_1
0x4011047	        0x4180f803	                              cmp r8b, 3	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401104b	            0x7453	                            je 0x40110a0	     11333	elf.c	FUNCTION_198	SWITCH_1
0x401104d	              0x55	                                push rbp	     11332	elf.c	FUNCTION_198
0x401104e	              0x53	                                push rbx	     11332	elf.c	FUNCTION_198
0x401104f	          0x4889cb	                            mov rbx, rcx	     11332	elf.c	FUNCTION_198
0x4011052	        0x4883ec08	                              sub rsp, 8	     11332	elf.c	FUNCTION_198
0x4011056	        0xf6422304	               test byte [rdx + 0x23], 4	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401105a	            0x7438	                            je 0x4011094	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401105c	        0x488b4708	                mov rax, qword [rdi + 8]	     11345	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_4
0x4011060	        0x488b6a38	            mov rbp, qword [rdx + 0x38] 	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011064	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401106b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x4011072	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011076	          0xc0e803	                               shr al, 3	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011079	           0xfb6c0	                           movzx eax, al	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401107c	          0x4829c5	                            sub rbp, rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401107f	      0xe800000000	                          call 0x4011084	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011084	            0x31d2	                            xor edx, edx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011086	            0x89c1	                            mov ecx, eax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011088	          0x4889e8	                            mov rax, rbp	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401108b	          0x48f7f1	                                 div rcx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401108e	          0x4829d8	                            sub rax, rbx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011091	          0x4889c3	                            mov rbx, rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4011094	        0x4883c408	                              add rsp, 8	     11354	elf.c	FUNCTION_198
0x4011098	          0x4889d8	                            mov rax, rbx	     11354	elf.c	FUNCTION_198
0x401109b	              0x5b	                                 pop rbx	     11354	elf.c	FUNCTION_198
0x401109c	              0x5d	                                 pop rbp	     11354	elf.c	FUNCTION_198
0x401109d	              0xc3	                                     ret	     11354	elf.c	FUNCTION_198
0x401109e	            0x6690	                                     nop	     11354	elf.c	FUNCTION_198
0x40110a0	      0xe900000000	                           jmp 0x40110a5	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x40110a5	           0xf1f00	                         nop dword [rax]	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x40110a8	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40110af	          0x4c89cf	                             mov rdi, r9	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40110b2	          0x4889ca	                            mov rdx, rcx	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40110b5	    0x488bb0d80000	            mov rsi, qword [rax + 0xd8] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40110bc	      0xe900000000	                           jmp 0x40110c1	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
_bfd_elf_post_process_headers	SWITCH,0:CALL,3:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	12
0x40114a0	        0x488b4708	                mov rax, qword [rdi + 8]	     11515	elf.c	FUNCTION_201	CALL_2
0x40114a4	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	     11513	elf.c	FUNCTION_201	CALL_1
0x40114ab	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11515	elf.c	FUNCTION_201	CALL_2
0x40114b2	          0x8b400c	              mov eax, dword [rax + 0xc]	     11515	elf.c	FUNCTION_201	CALL_2
0x40114b5	            0x84c0	                             test al, al	     11520	elf.c	FUNCTION_201	IF_1
0x40114b7	          0x884207	                  mov byte [rdx + 7], al	     11515	elf.c	FUNCTION_201	CALL_2
0x40114ba	            0x7514	                           jne 0x40114d0	     11520	elf.c	FUNCTION_201	IF_1
0x40114bc	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x40114c3	    0xf6808d0c0000	          test byte [rax + 0xc8d], 0x1c 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x40114ca	            0x7404	                            je 0x40114d0	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x40114cc	        0xc6420703	                   mov byte [rdx + 7], 3	     11522	elf.c	FUNCTION_201	IF_1
0x40114d0	            0xf3c3	                                     ret	     11522	elf.c	FUNCTION_201	IF_1
_bfd_elf_find_nearest_line	SWITCH,0:CALL,7:IF,6:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	118
0x400e0e0	            0x4157	                                push r15	      8746	elf.c	FUNCTION_103
0x400e0e2	            0x4156	                                push r14	      8746	elf.c	FUNCTION_103
0x400e0e4	          0x4989ff	                            mov r15, rdi	      8746	elf.c	FUNCTION_103
0x400e0e7	            0x4155	                                push r13	      8746	elf.c	FUNCTION_103
0x400e0e9	            0x4154	                                push r12	      8746	elf.c	FUNCTION_103
0x400e0eb	          0x4989cd	                            mov r13, rcx	      8746	elf.c	FUNCTION_103
0x400e0ee	              0x55	                                push rbp	      8746	elf.c	FUNCTION_103
0x400e0ef	              0x53	                                push rbx	      8746	elf.c	FUNCTION_103
0x400e0f0	          0x4d89cc	                             mov r12, r9	      8746	elf.c	FUNCTION_103
0x400e0f3	          0x4c89c3	                             mov rbx, r8	      8746	elf.c	FUNCTION_103
0x400e0f6	          0x4889f5	                            mov rbp, rsi	      8746	elf.c	FUNCTION_103
0x400e0f9	        0x4883ec28	                           sub rsp, 0x28	      8746	elf.c	FUNCTION_103
0x400e0fd	    0x64488b042528	                mov rax, qword fs:[0x28]	      8746	elf.c	FUNCTION_103
0x400e106	      0x4889442418	             mov qword [rsp + 0x18], rax	      8746	elf.c	FUNCTION_103
0x400e10b	            0x31c0	                            xor eax, eax	      8746	elf.c	FUNCTION_103
0x400e10d	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e114	      0x4c8b742460	            mov r14, qword [rsp + 0x60] 	      8746	elf.c	FUNCTION_103
0x400e119	        0x48891424	                    mov qword [rsp], rdx	      8746	elf.c	FUNCTION_103
0x400e11d	    0x480530030000	                          add rax, 0x330	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e123	              0x50	                                push rax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e124	            0x6a00	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e126	      0x6800000000	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e12b	    0xffb424800000	                 push qword [rsp + 0x80]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e132	            0x4156	                                push r14	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e134	            0x4151	                                 push r9	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e136	          0x4d89c1	                              mov r9, r8	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e139	          0x4989c8	                             mov r8, rcx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e13c	          0x4889d1	                            mov rcx, rdx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e13f	            0x31d2	                            xor edx, edx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e141	      0xe800000000	                          call 0x400e146	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e146	        0x4883c430	                           add rsp, 0x30	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e14a	            0x85c0	                           test eax, eax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e14c	            0x743a	                            je 0x400e188	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400e14e	      0x49833c2400	                      cmp qword [r12], 0	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x400e153	     0xf84e7000000	                            je 0x400e240	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x400e159	    0x41bb01000000	                             mov r11d, 1	      8781	elf.c	FUNCTION_103
0x400e15f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8782	elf.c	FUNCTION_103
0x400e164	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8782	elf.c	FUNCTION_103
0x400e16d	          0x4489d8	                           mov eax, r11d	      8782	elf.c	FUNCTION_103
0x400e170	     0xf8515010000	                           jne 0x400e28b	      8782	elf.c	FUNCTION_103
0x400e176	        0x4883c428	                           add rsp, 0x28	      8782	elf.c	FUNCTION_103
0x400e17a	              0x5b	                                 pop rbx	      8782	elf.c	FUNCTION_103
0x400e17b	              0x5d	                                 pop rbp	      8782	elf.c	FUNCTION_103
0x400e17c	            0x415c	                                 pop r12	      8782	elf.c	FUNCTION_103
0x400e17e	            0x415d	                                 pop r13	      8782	elf.c	FUNCTION_103
0x400e180	            0x415e	                                 pop r14	      8782	elf.c	FUNCTION_103
0x400e182	            0x415f	                                 pop r15	      8782	elf.c	FUNCTION_103
0x400e184	              0xc3	                                     ret	      8782	elf.c	FUNCTION_103
0x400e185	           0xf1f00	                         nop dword [rax]	      8782	elf.c	FUNCTION_103
0x400e188	        0x4883ec08	                              sub rsp, 8	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e18c	          0x4c89e9	                            mov rcx, r13	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e18f	          0x4889ee	                            mov rsi, rbp	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e192	            0x4156	                                push r14	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e194	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e199	          0x4d89e1	                             mov r9, r12	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e19c	          0x4989d8	                             mov r8, rbx	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e19f	          0x4c89ff	                            mov rdi, r15	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e1a2	      0xe800000000	                          call 0x400e1a7	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e1a7	            0x85c0	                           test eax, eax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e1a9	              0x59	                                 pop rcx	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e1aa	              0x5e	                                 pop rsi	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e1ab	            0x75a1	                           jne 0x400e14e	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e1ad	        0x8944240c	              mov dword [rsp + 0xc], eax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400e1b1	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1b8	        0x4883ec08	                              sub rsp, 8	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1bc	          0x4989d9	                             mov r9, rbx	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1bf	          0x4c89e9	                            mov rcx, r13	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1c2	          0x4889ee	                            mov rsi, rbp	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1c5	          0x4c89ff	                            mov rdi, r15	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1c8	    0x480520030000	                          add rax, 0x320	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1ce	              0x50	                                push rax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1cf	            0x4156	                                push r14	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1d1	            0x4154	                                push r12	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1d3	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1d8	      0x4c8d442434	                    lea r8, [rsp + 0x34]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1dd	      0xe800000000	                          call 0x400e1e2	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1e2	        0x4883c420	                           add rsp, 0x20	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1e6	            0x85c0	                           test eax, eax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1e8	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1ed	     0xf846cffffff	                            je 0x400e15f	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400e1f3	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      8770	elf.c	FUNCTION_103	IF_4
0x400e1f7	            0x85d2	                           test edx, edx	      8770	elf.c	FUNCTION_103	IF_4
0x400e1f9	            0x7575	                           jne 0x400e270	      8770	elf.c	FUNCTION_103	IF_4
0x400e1fb	          0x4885ed	                           test rbp, rbp	      8773	elf.c	FUNCTION_103	IF_5
0x400e1fe	     0xf845bffffff	                            je 0x400e15f	      8773	elf.c	FUNCTION_103	IF_5
0x400e204	        0x488b1424	                    mov rdx, qword [rsp]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e208	          0x4d89e1	                             mov r9, r12	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e20b	          0x4989d8	                             mov r8, rbx	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e20e	          0x4c89e9	                            mov rcx, r13	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e211	          0x4889ee	                            mov rsi, rbp	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e214	          0x4c89ff	                            mov rdi, r15	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e217	      0x44895c240c	             mov dword [rsp + 0xc], r11d	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e21c	      0xe800000000	                          call 0x400e221	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e221	          0x4885c0	                           test rax, rax	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e224	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e229	     0xf8430ffffff	                            je 0x400e15f	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400e22f	    0x41c706000000	                      mov dword [r14], 0	      8780	elf.c	FUNCTION_103
0x400e236	      0xe91effffff	                           jmp 0x400e159	      8780	elf.c	FUNCTION_103
0x400e23b	       0xf1f440000	                   nop dword [rax + rax]	      8780	elf.c	FUNCTION_103
0x400e240	        0x48833b00	                      cmp qword [rbx], 0	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e244	        0x488b1424	                    mov rdx, qword [rsp]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e248	    0x41b800000000	                              mov r8d, 0	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e24e	          0x4d89e1	                             mov r9, r12	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e251	          0x4c89e9	                            mov rcx, r13	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e254	          0x4889ee	                            mov rsi, rbp	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e257	          0x4c89ff	                            mov rdi, r15	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e25a	        0x4c0f44c3	                           cmove r8, rbx	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e25e	      0xe800000000	                          call 0x400e263	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400e263	    0x41bb01000000	                             mov r11d, 1	      8762	elf.c	FUNCTION_103	IF_1
0x400e269	      0xe9f1feffff	                           jmp 0x400e15f	      8762	elf.c	FUNCTION_103	IF_1
0x400e26e	            0x6690	                                     nop	      8762	elf.c	FUNCTION_103	IF_1
0x400e270	      0x49833c2400	                      cmp qword [r12], 0	      8770	elf.c	FUNCTION_103	IF_4
0x400e275	     0xf85defeffff	                           jne 0x400e159	      8770	elf.c	FUNCTION_103	IF_4
0x400e27b	          0x418b06	                    mov eax, dword [r14]	      8770	elf.c	FUNCTION_103	IF_4
0x400e27e	            0x85c0	                           test eax, eax	      8770	elf.c	FUNCTION_103	IF_4
0x400e280	     0xf8475ffffff	                            je 0x400e1fb	      8770	elf.c	FUNCTION_103	IF_4
0x400e286	      0xe9cefeffff	                           jmp 0x400e159	      8770	elf.c	FUNCTION_103	IF_4
0x400e28b	      0xe800000000	             call sym._bfd_elf_find_line	      8782	elf.c	FUNCTION_103
_bfd_elf_get_dynamic_symtab_upper_bound	SWITCH,0:CALL,4:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	24
0x400c750	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8131	elf.c	FUNCTION_90	CALL_1
0x400c757	    0x8b907c0c0000	           mov edx, dword [rax + 0xc7c] 	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400c75d	            0x85d2	                           test edx, edx	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400c75f	            0x743f	                            je 0x400c7a0	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400c761	        0x488b5708	                mov rdx, qword [rdi + 8]	      8139	elf.c	FUNCTION_90	CALL_4
0x400c765	    0x488b80780100	           mov rax, qword [rax + 0x178] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400c76c	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400c773	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400c77a	         0xfb67205	               movzx esi, byte [rdx + 5]	      8139	elf.c	FUNCTION_90	CALL_4
0x400c77e	            0x31d2	                            xor edx, edx	      8139	elf.c	FUNCTION_90	CALL_4
0x400c780	          0x48f7f6	                                 div rsi	      8139	elf.c	FUNCTION_90	CALL_4
0x400c783	    0x488d14c50800	                    lea rdx, [rax*8 + 8]	      8140	elf.c	FUNCTION_90
0x400c78b	          0x4889c1	                            mov rcx, rax	      8139	elf.c	FUNCTION_90	CALL_4
0x400c78e	          0x4885c9	                           test rcx, rcx	      8140	elf.c	FUNCTION_90
0x400c791	        0x488d42f8	                      lea rax, [rdx - 8]	      8142	elf.c	FUNCTION_90	IF_2
0x400c795	        0x480f4ec2	                         cmovle rax, rdx	      8140	elf.c	FUNCTION_90
0x400c799	              0xc3	                                     ret	      8140	elf.c	FUNCTION_90
0x400c79a	    0x660f1f440000	                    nop word [rax + rax]	      8140	elf.c	FUNCTION_90
0x400c7a0	        0x4883ec08	                              sub rsp, 8	      8128	elf.c	FUNCTION_90
0x400c7a4	      0xbf05000000	                              mov edi, 5	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x400c7a9	      0xe800000000	                          call 0x400c7ae	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x400c7ae	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8136	elf.c	FUNCTION_90	IF_1
0x400c7b5	        0x4883c408	                              add rsp, 8	      8145	elf.c	FUNCTION_90
0x400c7b9	              0xc3	                                     ret	      8145	elf.c	FUNCTION_90
get_program_header_size	SWITCH,0:CALL,14:IF,14:functions,0:ELSE,0:DO,0:WHILE,1:FOR,3	154
0x4000390	            0x4157	                                push r15	      4325	elf.c	FUNCTION_60
0x4000392	            0x4156	                                push r14	      4325	elf.c	FUNCTION_60
0x4000394	            0x4155	                                push r13	      4325	elf.c	FUNCTION_60
0x4000396	            0x4154	                                push r12	      4325	elf.c	FUNCTION_60
0x4000398	          0x4989fc	                            mov r12, rdi	      4325	elf.c	FUNCTION_60
0x400039b	              0x55	                                push rbp	      4325	elf.c	FUNCTION_60
0x400039c	              0x53	                                push rbx	      4325	elf.c	FUNCTION_60
0x400039d	          0x4889f5	                            mov rbp, rsi	      4325	elf.c	FUNCTION_60
0x40003a0	      0xbe00000000	                              mov esi, 0	      4334	elf.c	FUNCTION_60	CALL_1
0x40003a5	        0x4883ec18	                           sub rsp, 0x18	      4325	elf.c	FUNCTION_60
0x40003a9	      0xe800000000	                          call 0x40003ae	      4334	elf.c	FUNCTION_60	CALL_1
0x40003ae	          0x4885c0	                           test rax, rax	      4335	elf.c	FUNCTION_60	IF_1
0x40003b1	     0xf8419020000	                            je 0x40005d0	      4335	elf.c	FUNCTION_60	IF_1
0x40003b7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4335	elf.c	FUNCTION_60	IF_1
0x40003ba	          0x83e002	                              and eax, 2	      4335	elf.c	FUNCTION_60	IF_1
0x40003bd	          0x83f801	                              cmp eax, 1	      4341	elf.c	FUNCTION_60	IF_1
0x40003c0	          0x4819db	                            sbb rbx, rbx	      4341	elf.c	FUNCTION_60	IF_1
0x40003c3	        0x4883e3fe	             and rbx, 0xfffffffffffffffe	      4341	elf.c	FUNCTION_60	IF_1
0x40003c7	        0x4883c304	                              add rbx, 4	      4341	elf.c	FUNCTION_60	IF_1
0x40003cb	      0xbe00000000	                              mov esi, 0	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x40003d0	          0x4c89e7	                            mov rdi, r12	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x40003d3	      0xe800000000	                          call 0x40003d8	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x40003d8	        0x4883f801	                              cmp rax, 1	      4347	elf.c	FUNCTION_60	IF_2
0x40003dc	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4347	elf.c	FUNCTION_60	IF_2
0x40003e0	          0x4885ed	                           test rbp, rbp	      4350	elf.c	FUNCTION_60	IF_3
0x40003e3	            0x740d	                            je 0x40003f2	      4350	elf.c	FUNCTION_60	IF_3
0x40003e5	         0xfb64503	               movzx eax, byte [rbp + 3]	      4350	elf.c	FUNCTION_60	IF_3
0x40003e9	          0x83e010	                           and eax, 0x10	      4350	elf.c	FUNCTION_60	IF_3
0x40003ec	            0x3c01	                               cmp al, 1	      4353	elf.c	FUNCTION_60	IF_3
0x40003ee	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4353	elf.c	FUNCTION_60	IF_3
0x40003f2	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x40003fa	    0x4d8b84249000	              mov r8, qword [r12 + 0x90]	      4368	elf.c	FUNCTION_60	FOR_1
0x4000402	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000409	      0x4883781801	               cmp qword [rax + 0x18], 1	      4359	elf.c	FUNCTION_60	IF_4
0x400040e	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4359	elf.c	FUNCTION_60	IF_4
0x4000412	        0x83785401	               cmp dword [rax + 0x54], 1	      4365	elf.c	FUNCTION_60	IF_5
0x4000416	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4365	elf.c	FUNCTION_60	IF_5
0x400041a	          0x4d85c0	                             test r8, r8	      4368	elf.c	FUNCTION_60	FOR_1
0x400041d	            0x7475	                            je 0x4000494	      4368	elf.c	FUNCTION_60	FOR_1
0x400041f	        0x458b5020	            mov r10d, dword [r8 + 0x20] 	      4368	elf.c	FUNCTION_60	FOR_1
0x4000423	          0x4c89c2	                             mov rdx, r8	      4368	elf.c	FUNCTION_60	FOR_1
0x4000426	          0x4589d1	                           mov r9d, r10d	      4368	elf.c	FUNCTION_60	FOR_1
0x4000429	            0xeb09	                           jmp 0x4000434	      4368	elf.c	FUNCTION_60	FOR_1
0x400042b	       0xf1f440000	                   nop dword [rax + rax]	      4368	elf.c	FUNCTION_60	FOR_1
0x4000430	        0x448b4a20	            mov r9d, dword [rdx + 0x20] 	      4368	elf.c	FUNCTION_60	FOR_1
0x4000434	        0x4183e102	                              and r9d, 2	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000438	            0x7426	                            je 0x4000460	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x400043a	          0x488b32	                    mov rsi, qword [rdx]	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x400043d	      0xb800000000	                              mov eax, 0	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x4000442	      0xb905000000	                              mov ecx, 5	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x4000447	          0x4889c7	                            mov rdi, rax	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x400044a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x400044c	            0x7512	                           jne 0x4000460	      4371	elf.c	FUNCTION_60	FOR_1	IF_6	CALL_5
0x400044e	        0x4883c301	                              add rbx, 1	      4374	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000452	        0x837a7002	               cmp dword [rdx + 0x70], 2	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x4000456	     0xf84bf000000	                            je 0x400051b	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x400045c	         0xf1f4000	                         nop dword [rax]	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x4000460	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4368	elf.c	FUNCTION_60	FOR_1
0x4000464	          0x4885d2	                           test rdx, rdx	      4368	elf.c	FUNCTION_60	FOR_1
0x4000467	            0x75c7	                           jne 0x4000430	      4368	elf.c	FUNCTION_60	FOR_1
0x4000469	    0x4181e2000400	                         and r10d, 0x400	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000470	            0x7419	                            je 0x400048b	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000472	      0xe9b9000000	                           jmp 0x4000530	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000477	    0x660f1f840000	                    nop word [rax + rax]	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000480	      0x41f6402104	                test byte [r8 + 0x21], 4	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000485	     0xf85a5000000	                           jne 0x4000530	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x400048b	        0x4d8b4010	               mov r8, qword [r8 + 0x10]	      4391	elf.c	FUNCTION_60	FOR_2
0x400048f	          0x4d85c0	                             test r8, r8	      4391	elf.c	FUNCTION_60	FOR_2
0x4000492	            0x75ec	                           jne 0x4000480	      4391	elf.c	FUNCTION_60	FOR_2
0x4000494	    0x41f644244520	           test byte [r12 + 0x45], 0x20 	      4403	elf.c	FUNCTION_60	IF_9
0x400049a	      0x498b442408	                mov rax, qword [r12 + 8]	      4401	elf.c	FUNCTION_60	CALL_7
0x400049f	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      4401	elf.c	FUNCTION_60	CALL_7
0x40004a6	     0xf8594000000	                           jne 0x4000540	      4403	elf.c	FUNCTION_60	IF_9
0x40004ac	    0x498b87480100	           mov rax, qword [r15 + 0x148] 	      4427	elf.c	FUNCTION_60	IF_13
0x40004b3	          0x4885c0	                           test rax, rax	      4427	elf.c	FUNCTION_60	IF_13
0x40004b6	            0x7416	                            je 0x40004ce	      4427	elf.c	FUNCTION_60	IF_13
0x40004b8	          0x4889ee	                            mov rsi, rbp	      4431	elf.c	FUNCTION_60	IF_13
0x40004bb	          0x4c89e7	                            mov rdi, r12	      4431	elf.c	FUNCTION_60	IF_13
0x40004be	            0xffd0	                                call rax	      4431	elf.c	FUNCTION_60	IF_13
0x40004c0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x40004c3	     0xf8411010000	                            je 0x40005da	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x40004c9	            0x4898	                                    cdqe	      4434	elf.c	FUNCTION_60	IF_13
0x40004cb	          0x4801c3	                            add rbx, rax	      4434	elf.c	FUNCTION_60	IF_13
0x40004ce	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      4437	elf.c	FUNCTION_60
0x40004d5	         0xfb64001	               movzx eax, byte [rax + 1]	      4437	elf.c	FUNCTION_60
0x40004d9	        0x4883c418	                           add rsp, 0x18	      4438	elf.c	FUNCTION_60
0x40004dd	        0x480fafc3	                           imul rax, rbx	      4437	elf.c	FUNCTION_60
0x40004e1	              0x5b	                                 pop rbx	      4438	elf.c	FUNCTION_60
0x40004e2	              0x5d	                                 pop rbp	      4438	elf.c	FUNCTION_60
0x40004e3	            0x415c	                                 pop r12	      4438	elf.c	FUNCTION_60
0x40004e5	            0x415d	                                 pop r13	      4438	elf.c	FUNCTION_60
0x40004e7	            0x415e	                                 pop r14	      4438	elf.c	FUNCTION_60
0x40004e9	            0x415f	                                 pop r15	      4438	elf.c	FUNCTION_60
0x40004eb	              0xc3	                                     ret	      4438	elf.c	FUNCTION_60
0x40004ec	         0xf1f4000	                         nop dword [rax]	      4438	elf.c	FUNCTION_60
0x40004f0	        0x837a7002	               cmp dword [rdx + 0x70], 2	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x40004f4	     0xf8536ffffff	                           jne 0x4000430	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x40004fa	        0x448b4a20	            mov r9d, dword [rdx + 0x20] 	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x40004fe	        0x41f6c102	                             test r9b, 2	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000502	     0xf842cffffff	                            je 0x4000434	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000508	          0x488b32	                    mov rsi, qword [rdx]	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x400050b	      0xb905000000	                              mov ecx, 5	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x4000510	          0x4889c7	                            mov rdi, rax	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x4000513	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x4000515	     0xf8519ffffff	                           jne 0x4000434	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1	CALL_6
0x400051b	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x400051f	          0x4885d2	                           test rdx, rdx	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000522	            0x75cc	                           jne 0x40004f0	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000524	      0xe940ffffff	                           jmp 0x4000469	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000529	     0xf1f80000000	                         nop dword [rax]	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000530	        0x4883c301	                              add rbx, 1	      4396	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000534	      0xe95bffffff	                           jmp 0x4000494	      4397	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000539	     0xf1f80000000	                         nop dword [rax]	      4397	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000540	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      4406	elf.c	FUNCTION_60	IF_9	CALL_8
0x4000544	      0xe800000000	                          call 0x4000549	      4406	elf.c	FUNCTION_60	IF_9	CALL_8
0x4000549	    0x4d8bac249000	            mov r13, qword [r12 + 0x90] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000551	          0x4189c0	                            mov r8d, eax	      4406	elf.c	FUNCTION_60	IF_9	CALL_8
0x4000554	          0x4d85ed	                           test r13, r13	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000557	            0x7522	                           jne 0x400057b	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000559	      0xe94effffff	                           jmp 0x40004ac	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400055e	            0x6690	                                     nop	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000560	        0x453b4570	            cmp r8d, dword [r13 + 0x70] 	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x4000564	            0x7604	                           jbe 0x400056a	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x4000566	        0x45894570	             mov dword [r13 + 0x70], r8d	      4421	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x400056a	        0x4883c301	                              add rbx, 1	      4422	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10
0x400056e	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000572	          0x4d85ed	                           test r13, r13	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000575	     0xf8431ffffff	                            je 0x40004ac	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x400057b	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_9
0x4000582	        0xf6400b01	                test byte [rax + 0xb], 1	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_9
0x4000586	            0x74e6	                            je 0x400056e	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_9
0x4000588	        0x448b702c	           mov r14d, dword [rax + 0x2c] 	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x400058c	    0x4181fe001000	                        cmp r14d, 0x1000	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x4000593	            0x76cb	                           jbe 0x4000560	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x4000595	      0xba05000000	                              mov edx, 5	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x400059a	      0xbe00000000	                              mov esi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x400059f	      0xbf00000000	                              mov edi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40005a4	      0x448944240c	              mov dword [rsp + 0xc], r8d	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40005a9	      0xe800000000	                          call 0x40005ae	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_12
0x40005ae	          0x4489f1	                           mov ecx, r14d	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x40005b1	          0x4889c7	                            mov rdi, rax	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x40005b4	          0x4c89ea	                            mov rdx, r13	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x40005b7	          0x4c89e6	                            mov rsi, r12	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x40005ba	            0x31c0	                            xor eax, eax	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x40005bc	      0xe800000000	                          call 0x40005c1	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_11
0x40005c1	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x40005c6	            0xeba6	                           jmp 0x400056e	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x40005c8	     0xf1f84000000	                   nop dword [rax + rax]	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x40005d0	      0xbb02000000	                              mov ebx, 2	      4332	elf.c	FUNCTION_60
0x40005d5	      0xe9f1fdffff	                           jmp 0x40003cb	      4332	elf.c	FUNCTION_60
0x40005da	      0xba00000000	                              mov edx, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
0x40005df	      0xbe51110000	                         mov esi, 0x1151	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
0x40005e4	      0xbf00000000	                              mov edi, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
0x40005e9	      0xe800000000	                          call 0x40005ee	      4433	elf.c	FUNCTION_60	IF_13	CALL_14
bfd_elf_mkcorefile	SWITCH,0:CALL,4:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	21
0x40021d0	              0x55	                                push rbp	       269	elf.c	FUNCTION_15
0x40021d1	              0x53	                                push rbx	       269	elf.c	FUNCTION_15
0x40021d2	          0x4889fb	                            mov rbx, rdi	       269	elf.c	FUNCTION_15
0x40021d5	        0x4883ec08	                              sub rsp, 8	       269	elf.c	FUNCTION_15
0x40021d9	        0x488b4708	                mov rax, qword [rdi + 8]	       271	elf.c	FUNCTION_15	IF_1
0x40021dd	    0xff90d8000000	                 call qword [rax + 0xd8]	       271	elf.c	FUNCTION_15	IF_1
0x40021e3	            0x85c0	                           test eax, eax	       271	elf.c	FUNCTION_15	IF_1
0x40021e5	            0x7430	                            je 0x4002217	       271	elf.c	FUNCTION_15	IF_1
0x40021e7	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	       273	elf.c	FUNCTION_15	CALL_3
0x40021ee	      0xbe20000000	                           mov esi, 0x20	       273	elf.c	FUNCTION_15	CALL_3
0x40021f3	          0x4889df	                            mov rdi, rbx	       273	elf.c	FUNCTION_15	CALL_3
0x40021f6	      0xe800000000	                          call 0x40021fb	       273	elf.c	FUNCTION_15	CALL_3
0x40021fb	    0x488985900c00	           mov qword [rbp + 0xc90], rax 	       273	elf.c	FUNCTION_15	CALL_3
0x4002202	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       274	elf.c	FUNCTION_15	CALL_4
0x4002209	    0x4883b8900c00	              cmp qword [rax + 0xc90], 0	       274	elf.c	FUNCTION_15	CALL_4
0x4002211	           0xf95c0	                                setne al	       274	elf.c	FUNCTION_15	CALL_4
0x4002214	           0xfb6c0	                           movzx eax, al	       274	elf.c	FUNCTION_15	CALL_4
0x4002217	        0x4883c408	                              add rsp, 8	       275	elf.c	FUNCTION_15
0x400221b	              0x5b	                                 pop rbx	       275	elf.c	FUNCTION_15
0x400221c	              0x5d	                                 pop rbp	       275	elf.c	FUNCTION_15
0x400221d	              0xc3	                                     ret	       275	elf.c	FUNCTION_15
elfcore_write_linux_prpsinfo32	SWITCH,0:CALL,5:IF,1:functions,0:ELSE,1:DO,0:WHILE,0:FOR,0	116
0x4010250	            0x4155	                                push r13	     10595	elf.c	FUNCTION_163
0x4010252	            0x4154	                                push r12	     10595	elf.c	FUNCTION_163
0x4010254	          0x4989d5	                            mov r13, rdx	     10595	elf.c	FUNCTION_163
0x4010257	              0x55	                                push rbp	     10595	elf.c	FUNCTION_163
0x4010258	              0x53	                                push rbx	     10595	elf.c	FUNCTION_163
0x4010259	          0x4889fd	                            mov rbp, rdi	     10595	elf.c	FUNCTION_163
0x401025c	          0x4989f4	                            mov r12, rsi	     10595	elf.c	FUNCTION_163
0x401025f	          0x4889cb	                            mov rbx, rcx	     10595	elf.c	FUNCTION_163
0x4010262	    0x4881ec980000	                           sub rsp, 0x98	     10595	elf.c	FUNCTION_163
0x4010269	    0x64488b042528	                mov rax, qword fs:[0x28]	     10595	elf.c	FUNCTION_163
0x4010272	    0x488984248800	             mov qword [rsp + 0x88], rax	     10595	elf.c	FUNCTION_163
0x401027a	            0x31c0	                            xor eax, eax	     10595	elf.c	FUNCTION_163
0x401027c	        0x488b4708	                mov rax, qword [rdi + 8]	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x4010280	      0x488d742404	                      lea rsi, [rsp + 4]	       117	elf-linux-core.h	FUNCTION_234	CALL_5
0x4010285	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x401028c	    0xf6828b030000	          test byte [rdx + 0x38b], 0x10 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x4010293	           0xfb611	                   movzx edx, byte [rcx]	       113	elf-linux-core.h	FUNCTION_234	CALL_1
0x4010296	          0x881424	                      mov byte [rsp], dl	       113	elf-linux-core.h	FUNCTION_234	CALL_1
0x4010299	         0xfb65101	               movzx edx, byte [rcx + 1]	       114	elf-linux-core.h	FUNCTION_234	CALL_2
0x401029d	        0x88542401	                  mov byte [rsp + 1], dl	       114	elf-linux-core.h	FUNCTION_234	CALL_2
0x40102a1	         0xfb65102	               movzx edx, byte [rcx + 2]	       115	elf-linux-core.h	FUNCTION_234	CALL_3
0x40102a5	        0x88542402	                  mov byte [rsp + 2], dl	       115	elf-linux-core.h	FUNCTION_234	CALL_3
0x40102a9	         0xfb65103	               movzx edx, byte [rcx + 3]	       116	elf-linux-core.h	FUNCTION_234	CALL_4
0x40102ad	        0x88542403	                  mov byte [rsp + 3], dl	       116	elf-linux-core.h	FUNCTION_234	CALL_4
0x40102b1	        0x488b7908	                mov rdi, qword [rcx + 8]	       117	elf-linux-core.h	FUNCTION_234	CALL_5
0x40102b5	     0xf85d5000000	                           jne 0x4010390	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x40102bb	          0xff5048	                 call qword [rax + 0x48]	        65	elf-linux-core.h	FUNCTION_233	CALL_5
0x40102be	        0x488b4508	                mov rax, qword [rbp + 8]	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x40102c2	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x40102c5	      0x488d742408	                      lea rsi, [rsp + 8]	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x40102ca	          0xff5048	                 call qword [rax + 0x48]	        66	elf-linux-core.h	FUNCTION_233	CALL_6
0x40102cd	        0x488b4508	                mov rax, qword [rbp + 8]	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x40102d1	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x40102d4	      0x488d74240c	                    lea rsi, [rsp + 0xc]	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x40102d9	          0xff5048	                 call qword [rax + 0x48]	        67	elf-linux-core.h	FUNCTION_233	CALL_7
0x40102dc	        0x488b4508	                mov rax, qword [rbp + 8]	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x40102e0	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x40102e4	      0x488d742410	                   lea rsi, [rsp + 0x10]	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x40102e9	          0xff5048	                 call qword [rax + 0x48]	        68	elf-linux-core.h	FUNCTION_233	CALL_8
0x40102ec	        0x488b4508	                mov rax, qword [rbp + 8]	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x40102f0	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x40102f4	      0x488d742414	                   lea rsi, [rsp + 0x14]	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x40102f9	          0xff5048	                 call qword [rax + 0x48]	        69	elf-linux-core.h	FUNCTION_233	CALL_9
0x40102fc	        0x488b4508	                mov rax, qword [rbp + 8]	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x4010300	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x4010304	      0x488d742418	                   lea rsi, [rsp + 0x18]	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x4010309	          0xff5048	                 call qword [rax + 0x48]	        70	elf-linux-core.h	FUNCTION_233	CALL_10
0x401030c	        0x488b4508	                mov rax, qword [rbp + 8]	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x4010310	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x4010314	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x4010319	          0xff5048	                 call qword [rax + 0x48]	        71	elf-linux-core.h	FUNCTION_233	CALL_11
0x401031c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       126	string3.h	FUNCTION_212	CALL_3
0x4010321	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_212	CALL_3
0x4010325	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_212	CALL_3
0x401032a	      0xe800000000	                          call 0x401032f	       126	string3.h	FUNCTION_212	CALL_3
0x401032f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       126	string3.h	FUNCTION_212	CALL_3
0x4010334	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_212	CALL_3
0x4010338	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_212	CALL_3
0x401033d	      0xe800000000	                          call 0x4010342	       126	string3.h	FUNCTION_212	CALL_3
0x4010342	        0x4883ec08	                              sub rsp, 8	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4010346	      0x6880000000	                               push 0x80	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401034b	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4010350	      0xb900000000	                              mov ecx, 0	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4010355	          0x4c89ea	                            mov rdx, r13	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4010358	    0x41b803000000	                              mov r8d, 3	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401035e	          0x4c89e6	                            mov rsi, r12	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4010361	          0x4889ef	                            mov rdi, rbp	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4010364	      0xe800000000	                          call 0x4010369	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x4010369	              0x5a	                                 pop rdx	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401036a	              0x59	                                 pop rcx	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x401036b	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	     10612	elf.c	FUNCTION_163
0x4010373	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10612	elf.c	FUNCTION_163
0x401037c	     0xf85a0000000	                           jne 0x4010422	     10612	elf.c	FUNCTION_163
0x4010382	    0x4881c4980000	                           add rsp, 0x98	     10612	elf.c	FUNCTION_163
0x4010389	              0x5b	                                 pop rbx	     10612	elf.c	FUNCTION_163
0x401038a	              0x5d	                                 pop rbp	     10612	elf.c	FUNCTION_163
0x401038b	            0x415c	                                 pop r12	     10612	elf.c	FUNCTION_163
0x401038d	            0x415d	                                 pop r13	     10612	elf.c	FUNCTION_163
0x401038f	              0xc3	                                     ret	     10612	elf.c	FUNCTION_163
0x4010390	          0xff5048	                 call qword [rax + 0x48]	       117	elf-linux-core.h	FUNCTION_234	CALL_5
0x4010393	        0x488b4508	                mov rax, qword [rbp + 8]	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x4010397	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x401039a	      0x488d742408	                      lea rsi, [rsp + 8]	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x401039f	          0xff5060	                 call qword [rax + 0x60]	       118	elf-linux-core.h	FUNCTION_234	CALL_6
0x40103a2	        0x488b4508	                mov rax, qword [rbp + 8]	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x40103a6	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x40103a9	      0x488d74240a	                    lea rsi, [rsp + 0xa]	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x40103ae	          0xff5060	                 call qword [rax + 0x60]	       119	elf-linux-core.h	FUNCTION_234	CALL_7
0x40103b1	        0x488b4508	                mov rax, qword [rbp + 8]	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x40103b5	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x40103b9	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x40103be	          0xff5048	                 call qword [rax + 0x48]	       120	elf-linux-core.h	FUNCTION_234	CALL_8
0x40103c1	        0x488b4508	                mov rax, qword [rbp + 8]	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x40103c5	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x40103c9	      0x488d742410	                   lea rsi, [rsp + 0x10]	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x40103ce	          0xff5048	                 call qword [rax + 0x48]	       121	elf-linux-core.h	FUNCTION_234	CALL_9
0x40103d1	        0x488b4508	                mov rax, qword [rbp + 8]	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x40103d5	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x40103d9	      0x488d742414	                   lea rsi, [rsp + 0x14]	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x40103de	          0xff5048	                 call qword [rax + 0x48]	       122	elf-linux-core.h	FUNCTION_234	CALL_10
0x40103e1	        0x488b4508	                mov rax, qword [rbp + 8]	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x40103e5	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x40103e9	      0x488d742418	                   lea rsi, [rsp + 0x18]	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x40103ee	          0xff5048	                 call qword [rax + 0x48]	       123	elf-linux-core.h	FUNCTION_234	CALL_11
0x40103f1	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	       126	string3.h	FUNCTION_212	CALL_3
0x40103f6	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_212	CALL_3
0x40103fa	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_212	CALL_3
0x40103ff	      0xe800000000	                          call 0x4010404	       126	string3.h	FUNCTION_212	CALL_3
0x4010404	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       126	string3.h	FUNCTION_212	CALL_3
0x4010409	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_212	CALL_3
0x401040d	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_212	CALL_3
0x4010412	      0xe800000000	                          call 0x4010417	       126	string3.h	FUNCTION_212	CALL_3
0x4010417	        0x4883ec08	                              sub rsp, 8	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x401041b	            0x6a7c	                               push 0x7c	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x401041d	      0xe929ffffff	                           jmp 0x401034b	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x4010422	      0xe800000000	                          call 0x4010427	     10612	elf.c	FUNCTION_163
_bfd_elf_swap_verdaux_out	SWITCH,0:CALL,2:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	18
0x4001e20	            0x4154	                                push r12	       113	elf.c	FUNCTION_4
0x4001e22	              0x55	                                push rbp	       113	elf.c	FUNCTION_4
0x4001e23	          0x4989f4	                            mov r12, rsi	       113	elf.c	FUNCTION_4
0x4001e26	              0x53	                                push rbx	       113	elf.c	FUNCTION_4
0x4001e27	        0x488b4708	                mov rax, qword [rdi + 8]	       114	elf.c	FUNCTION_4	CALL_1
0x4001e2b	          0x4889fd	                            mov rbp, rdi	       113	elf.c	FUNCTION_4
0x4001e2e	          0x4889d3	                            mov rbx, rdx	       113	elf.c	FUNCTION_4
0x4001e31	        0x498b3c24	                    mov rdi, qword [r12]	       114	elf.c	FUNCTION_4	CALL_1
0x4001e35	          0x4889d6	                            mov rsi, rdx	       114	elf.c	FUNCTION_4	CALL_1
0x4001e38	    0xff9090000000	                 call qword [rax + 0x90]	       114	elf.c	FUNCTION_4	CALL_1
0x4001e3e	        0x488b4508	                mov rax, qword [rbp + 8]	       115	elf.c	FUNCTION_4	CALL_2
0x4001e42	        0x488d7304	                      lea rsi, [rbx + 4]	       115	elf.c	FUNCTION_4	CALL_2
0x4001e46	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       115	elf.c	FUNCTION_4	CALL_2
0x4001e4b	              0x5b	                                 pop rbx	       116	elf.c	FUNCTION_4
0x4001e4c	              0x5d	                                 pop rbp	       116	elf.c	FUNCTION_4
0x4001e4d	            0x415c	                                 pop r12	       116	elf.c	FUNCTION_4
0x4001e4f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       115	elf.c	FUNCTION_4	CALL_2
0x4001e56	            0xffe0	                                 jmp rax	       115	elf.c	FUNCTION_4	CALL_2
_bfd_elf_slurp_version_tables	SWITCH,0:CALL,53:IF,46:functions,0:ELSE,5:DO,0:WHILE,0:FOR,5	542
0x400ca60	            0x4157	                                push r15	      8282	elf.c	FUNCTION_97
0x400ca62	            0x4156	                                push r14	      8282	elf.c	FUNCTION_97
0x400ca64	            0x4155	                                push r13	      8282	elf.c	FUNCTION_97
0x400ca66	            0x4154	                                push r12	      8282	elf.c	FUNCTION_97
0x400ca68	          0x4189f4	                           mov r12d, esi	      8282	elf.c	FUNCTION_97
0x400ca6b	              0x55	                                push rbp	      8282	elf.c	FUNCTION_97
0x400ca6c	              0x53	                                push rbx	      8282	elf.c	FUNCTION_97
0x400ca6d	          0x4889fb	                            mov rbx, rdi	      8282	elf.c	FUNCTION_97
0x400ca70	    0x4881eca80000	                           sub rsp, 0xa8	      8282	elf.c	FUNCTION_97
0x400ca77	    0x4c8baff80000	            mov r13, qword [rdi + 0xf8] 	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400ca7e	    0x64488b042528	                mov rax, qword fs:[0x28]	      8282	elf.c	FUNCTION_97
0x400ca87	    0x488984249800	             mov qword [rsp + 0x98], rax	      8282	elf.c	FUNCTION_97
0x400ca8f	            0x31c0	                            xor eax, eax	      8282	elf.c	FUNCTION_97
0x400ca91	    0x458b9d880c00	          mov r11d, dword [r13 + 0xc88] 	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400ca98	          0x4585db	                         test r11d, r11d	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400ca9b	     0xf84af000000	                            je 0x400cb50	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400caa1	    0x418b85740200	           mov eax, dword [r13 + 0x274] 	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400caa8	            0x85c0	                           test eax, eax	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400caaa	            0x7417	                            je 0x400cac3	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400caac	    0x498bbd680200	           mov rdi, qword [r13 + 0x268] 	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400cab3	          0x4889fa	                            mov rdx, rdi	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400cab6	        0x48c1ea04	                              shr rdx, 4	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400caba	          0x4839d0	                            cmp rax, rdx	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400cabd	     0xf86fd010000	                           jbe 0x400ccc0	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400cac3	          0x4531ff	                          xor r15d, r15d	      8283	elf.c	FUNCTION_97
0x400cac6	      0xba05000000	                              mov edx, 5	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400cacb	      0xbe00000000	                              mov esi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400cad0	      0xbf00000000	                              mov edi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400cad5	      0xe800000000	                          call 0x400cada	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400cada	          0x4889de	                            mov rsi, rbx	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400cadd	          0x4889c7	                            mov rdi, rax	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400cae0	            0x31c0	                            xor eax, eax	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400cae2	      0xe800000000	                          call 0x400cae7	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400cae7	      0xbf11000000	                           mov edi, 0x11	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400caec	      0xe800000000	                          call 0x400caf1	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400caf1	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400caf8	    0x48c780500300	              mov qword [rax + 0x350], 0	      8304	elf.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x400cb03	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x400cb0a	    0xc78044030000	              mov dword [rax + 0x344], 0	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x400cb14	          0x4d85ff	                           test r15, r15	      8616	elf.c	FUNCTION_97	IF_46
0x400cb17	            0x7408	                            je 0x400cb21	      8616	elf.c	FUNCTION_97	IF_46
0x400cb19	          0x4c89ff	                            mov rdi, r15	      8617	elf.c	FUNCTION_97	CALL_53
0x400cb1c	      0xe800000000	                          call 0x400cb21	      8617	elf.c	FUNCTION_97	CALL_53
0x400cb21	            0x31c0	                            xor eax, eax	      8618	elf.c	FUNCTION_97
0x400cb23	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      8619	elf.c	FUNCTION_97
0x400cb2b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8619	elf.c	FUNCTION_97
0x400cb34	     0xf8567080000	                           jne 0x400d3a1	      8619	elf.c	FUNCTION_97
0x400cb3a	    0x4881c4a80000	                           add rsp, 0xa8	      8619	elf.c	FUNCTION_97
0x400cb41	              0x5b	                                 pop rbx	      8619	elf.c	FUNCTION_97
0x400cb42	              0x5d	                                 pop rbp	      8619	elf.c	FUNCTION_97
0x400cb43	            0x415c	                                 pop r12	      8619	elf.c	FUNCTION_97
0x400cb45	            0x415d	                                 pop r13	      8619	elf.c	FUNCTION_97
0x400cb47	            0x415e	                                 pop r14	      8619	elf.c	FUNCTION_97
0x400cb49	            0x415f	                                 pop r15	      8619	elf.c	FUNCTION_97
0x400cb4b	              0xc3	                                     ret	      8619	elf.c	FUNCTION_97
0x400cb4c	         0xf1f4000	                         nop dword [rax]	      8619	elf.c	FUNCTION_97
0x400cb50	          0x4531f6	                          xor r14d, r14d	      8284	elf.c	FUNCTION_97
0x400cb53	    0x458b8d840c00	           mov r9d, dword [r13 + 0xc84] 	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400cb5a	          0x4585c9	                           test r9d, r9d	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400cb5d	            0x7479	                            je 0x400cbd8	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400cb5f	    0x458b85c40200	           mov r8d, dword [r13 + 0x2c4] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400cb66	          0x4585c0	                           test r8d, r8d	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400cb69	            0x7411	                            je 0x400cb7c	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400cb6b	    0x498bbdb80200	           mov rdi, qword [r13 + 0x2b8] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400cb72	        0x4883ff13	                           cmp rdi, 0x13	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400cb76	     0xf8724010000	                            ja 0x400cca0	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400cb7c	          0x4531ff	                          xor r15d, r15d	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400cb7f	      0xba05000000	                              mov edx, 5	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400cb84	      0xbe00000000	                              mov esi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400cb89	      0xbf00000000	                              mov edi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400cb8e	      0xe800000000	                          call 0x400cb93	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400cb93	          0x4889de	                            mov rsi, rbx	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400cb96	          0x4889c7	                            mov rdi, rax	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400cb99	            0x31c0	                            xor eax, eax	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400cb9b	      0xe800000000	                          call 0x400cba0	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400cba0	      0xbf11000000	                           mov edi, 0x11	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400cba5	      0xe800000000	                          call 0x400cbaa	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400cbaa	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400cbb1	    0x48c780480300	              mov qword [rax + 0x348], 0	      8431	elf.c	FUNCTION_97	IF_18	IF_19	CALL_28
0x400cbbc	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400cbc3	    0xc78040030000	              mov dword [rax + 0x340], 0	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400cbcd	      0xe942ffffff	                           jmp 0x400cb14	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400cbd2	    0x660f1f440000	                    nop word [rax + rax]	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400cbd8	          0x4585e4	                         test r12d, r12d	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x400cbdb	     0xf84b3000000	                            je 0x400cc94	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x400cbe1	        0x4183fe02	                             cmp r14d, 2	      8572	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400cbe5	     0xf8605020000	                           jbe 0x400cdf0	      8572	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400cbeb	        0x418d7601	                      lea esi, [r14 + 1]	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400cbef	          0x4989f6	                            mov r14, rsi	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400cbf2	      0xba48000000	                           mov edx, 0x48	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400cbf7	          0x4889df	                            mov rdi, rbx	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400cbfa	      0xe800000000	                          call 0x400cbff	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400cbff	    0x498985480300	            mov qword [r13 + 0x348], rax	      8577	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_46
0x400cc06	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400cc0d	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400cc15	     0xf8406ffffff	                            je 0x400cb21	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400cc1b	    0x4489b0400300	           mov dword [rax + 0x340], r14d	      8582	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_49
0x400cc22	    0x488b8bf80000	            mov rcx, qword [rbx + 0xf8] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400cc29	        0x418d46ff	                      lea eax, [r14 - 1]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400cc2d	          0x4889df	                            mov rdi, rbx	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400cc30	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400cc34	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400cc3b	      0xb901000000	                              mov ecx, 1	      8596	elf.c	FUNCTION_97	IF_43
0x400cc40	        0x488d2cd0	                  lea rbp, [rax + rdx*8]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400cc44	            0x31d2	                            xor edx, edx	      8594	elf.c	FUNCTION_97	IF_43
0x400cc46	      0xb801000000	                              mov eax, 1	      8593	elf.c	FUNCTION_97	IF_43
0x400cc4b	        0x66894500	                      mov word [rbp], ax	      8593	elf.c	FUNCTION_97	IF_43
0x400cc4f	        0x66895502	                  mov word [rbp + 2], dx	      8594	elf.c	FUNCTION_97	IF_43
0x400cc53	      0x6644897504	                mov word [rbp + 4], r14w	      8595	elf.c	FUNCTION_97	IF_43
0x400cc58	        0x66894d06	                  mov word [rbp + 6], cx	      8596	elf.c	FUNCTION_97	IF_43
0x400cc5c	        0x48895d20	            mov qword [rbp + 0x20], rbx 	      8598	elf.c	FUNCTION_97	IF_43
0x400cc60	      0xe800000000	                          call 0x400cc65	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400cc65	          0x4885c0	                           test rax, rax	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x400cc68	        0x48894528	            mov qword [rbp + 0x28], rax 	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400cc6c	            0x7443	                            je 0x400ccb1	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x400cc6e	    0x48c745300000	               mov qword [rbp + 0x30], 0	      8603	elf.c	FUNCTION_97	IF_43
0x400cc76	      0xbe20000000	                           mov esi, 0x20	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400cc7b	          0x4889df	                            mov rdi, rbx	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400cc7e	      0xe800000000	                          call 0x400cc83	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400cc83	          0x4885c0	                           test rax, rax	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x400cc86	        0x48894538	            mov qword [rbp + 0x38], rax 	      8604	elf.c	FUNCTION_97	IF_43
0x400cc8a	            0x7425	                            je 0x400ccb1	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x400cc8c	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	      8610	elf.c	FUNCTION_97	IF_43
0x400cc90	        0x48895010	             mov qword [rax + 0x10], rdx	      8610	elf.c	FUNCTION_97	IF_43
0x400cc94	      0xb801000000	                              mov eax, 1	      8613	elf.c	FUNCTION_97
0x400cc99	      0xe985feffff	                           jmp 0x400cb23	      8613	elf.c	FUNCTION_97
0x400cc9e	            0x6690	                                     nop	      8613	elf.c	FUNCTION_97
0x400cca0	      0xe800000000	                          call 0x400cca5	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x400cca5	          0x4885c0	                           test rax, rax	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400cca8	          0x4989c7	                            mov r15, rax	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x400ccab	     0xf854f010000	                           jne 0x400ce00	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400ccb1	          0x4531ff	                          xor r15d, r15d	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400ccb4	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400ccbb	      0xe9f1feffff	                           jmp 0x400cbb1	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400ccc0	      0xe800000000	                          call 0x400ccc5	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x400ccc5	          0x4885c0	                           test rax, rax	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x400ccc8	          0x4989c7	                            mov r15, rax	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x400cccb	     0xf8420feffff	                            je 0x400caf1	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x400ccd1	    0x498bb5600200	           mov rsi, qword [r13 + 0x260] 	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400ccd8	            0x31d2	                            xor edx, edx	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400ccda	          0x4889df	                            mov rdi, rbx	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400ccdd	      0xe800000000	                          call 0x400cce2	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400cce2	            0x85c0	                           test eax, eax	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400cce4	     0xf8507feffff	                           jne 0x400caf1	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400ccea	    0x498bb5680200	           mov rsi, qword [r13 + 0x268] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400ccf1	          0x4889da	                            mov rdx, rbx	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400ccf4	          0x4c89ff	                            mov rdi, r15	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400ccf7	      0xe800000000	                          call 0x400ccfc	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400ccfc	    0x493b85680200	           cmp rax, qword [r13 + 0x268] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400cd03	     0xf85e8fdffff	                           jne 0x400caf1	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400cd09	    0x418bb5740200	           mov esi, dword [r13 + 0x274] 	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400cd10	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x400cd17	      0xba40000000	                           mov edx, 0x40	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400cd1c	          0x4889df	                            mov rdi, rbx	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400cd1f	      0xe800000000	                          call 0x400cd24	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400cd24	    0x488985500300	           mov qword [rbp + 0x350], rax 	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x400cd2b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400cd32	    0x488b88500300	           mov rcx, qword [rax + 0x350] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400cd39	          0x4885c9	                           test rcx, rcx	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400cd3c	     0xf84b6fdffff	                            je 0x400caf8	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400cd42	    0x498b95680200	           mov rdx, qword [r13 + 0x268] 	      8325	elf.c	FUNCTION_97	IF_1
0x400cd49	    0x458b95740200	          mov r10d, dword [r13 + 0x274] 	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd50	      0x498d7417f0	             lea rsi, [r15 + rdx - 0x10]	      8325	elf.c	FUNCTION_97	IF_1
0x400cd55	          0x4585d2	                         test r10d, r10d	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd58	      0x4889742408	                mov qword [rsp + 8], rsi	      8325	elf.c	FUNCTION_97	IF_1
0x400cd5d	     0xf847b060000	                            je 0x400d3de	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd63	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd68	      0x4c897c2420	             mov qword [rsp + 0x20], r15	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd6d	          0x4531f6	                          xor r14d, r14d	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd70	    0xc74424280000	               mov dword [rsp + 0x28], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd78	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd7d	          0x4989cd	                            mov r13, rcx	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd80	      0x4489642438	            mov dword [rsp + 0x38], r12d	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd85	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400cd8a	          0x4c89ea	                            mov rdx, r13	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400cd8d	          0x4889df	                            mov rdi, rbx	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400cd90	      0xe800000000	                          call 0x400cd95	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400cd95	        0x498b5508	                mov rdx, qword [r13 + 8]	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x400cd99	        0x49895d20	             mov qword [r13 + 0x20], rbx	      8336	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cd9d	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400cd9f	     0xf85f0020000	                           jne 0x400d095	       330	elf.c	FUNCTION_17	IF_1
0x400cda5	    0x49c745280000	               mov qword [r13 + 0x28], 0	      8338	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cdad	      0x410fb74502	               movzx eax, word [r13 + 2]	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400cdb2	          0x6685c0	                             test ax, ax	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400cdb5	     0xf8505030000	                           jne 0x400d0c0	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400cdbb	      0x488b442408	                mov rax, qword [rsp + 8]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cdc0	      0x482b442420	             sub rax, qword [rsp + 0x20]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cdc5	        0x49394510	            cmp qword [r13 + 0x10], rax 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cdc9	    0x49c745300000	               mov qword [r13 + 0x30], 0	      8345	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400cdd1	      0x4889442430	             mov qword [rsp + 0x30], rax	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cdd6	     0xf8607010000	                           jbe 0x400cee3	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cddc	         0xf1f4000	                         nop dword [rax]	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cde0	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cde5	      0xe9dcfcffff	                           jmp 0x400cac6	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cdea	    0x660f1f440000	                    nop word [rax + rax]	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cdf0	      0xbe03000000	                              mov esi, 3	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400cdf5	    0x41be03000000	                             mov r14d, 3	      8573	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400cdfb	      0xe9f2fdffff	                           jmp 0x400cbf2	      8573	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_41
0x400ce00	    0x498bb5b00200	           mov rsi, qword [r13 + 0x2b0] 	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ce07	            0x31d2	                            xor edx, edx	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ce09	          0x4889df	                            mov rdi, rbx	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ce0c	      0xe800000000	                          call 0x400ce11	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ce11	            0x85c0	                           test eax, eax	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ce13	     0xf8591fdffff	                           jne 0x400cbaa	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400ce19	    0x498bb5b80200	           mov rsi, qword [r13 + 0x2b8] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400ce20	          0x4889da	                            mov rdx, rbx	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400ce23	          0x4c89ff	                            mov rdi, r15	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400ce26	      0xe800000000	                          call 0x400ce2b	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400ce2b	    0x493b85b80200	           cmp rax, qword [r13 + 0x2b8] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400ce32	      0x4889442410	             mov qword [rsp + 0x10], rax	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400ce37	     0xf856dfdffff	                           jne 0x400cbaa	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400ce3d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8445	elf.c	FUNCTION_97	IF_18
0x400ce42	    0x418bbdc40200	           mov edi, dword [r13 + 0x2c4] 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce49	      0x498d4407ec	             lea rax, [r15 + rax - 0x14]	      8445	elf.c	FUNCTION_97	IF_18
0x400ce4e	            0x85ff	                           test edi, edi	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce50	      0x4889442408	                mov qword [rsp + 8], rax	      8445	elf.c	FUNCTION_97	IF_18
0x400ce55	     0xf8457050000	                            je 0x400d3b2	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce5b	      0x488d442450	                   lea rax, [rsp + 0x50]	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce60	          0x4c89f9	                            mov rcx, r15	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce63	          0x4531db	                          xor r11d, r11d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce66	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce6b	      0x4489742420	            mov dword [rsp + 0x20], r14d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce70	            0x31ed	                            xor ebp, ebp	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce72	      0x4489642428	            mov dword [rsp + 0x28], r12d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce77	          0x4589df	                          mov r15d, r11d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce7a	          0x4989cc	                            mov r12, rcx	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce7d	          0x4989c6	                            mov r14, rax	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce80	            0xeb39	                           jmp 0x400cebb	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce82	    0x660f1f440000	                    nop word [rax + rax]	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ce88	           0xfb7c0	                           movzx eax, ax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400ce8b	            0x39c5	                            cmp ebp, eax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400ce8d	           0xf42e8	                          cmovb ebp, eax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400ce90	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400ce95	          0x4885c0	                           test rax, rax	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400ce98	     0xf8491000000	                            je 0x400cf2f	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400ce9e	      0x488b542408	                mov rdx, qword [rsp + 8]	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400cea3	          0x4c29e2	                            sub rdx, r12	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400cea6	          0x4839d0	                            cmp rax, rdx	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400cea9	            0x7729	                            ja 0x400ced4	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400ceab	          0x4901c4	                            add r12, rax	      8471	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ceae	        0x4183c701	                             add r15d, 1	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ceb2	    0x4539bdc40200	          cmp dword [r13 + 0x2c4], r15d 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400ceb9	            0x7674	                           jbe 0x400cf2f	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400cebb	          0x4c89f2	                            mov rdx, r14	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400cebe	          0x4c89e6	                            mov rsi, r12	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400cec1	          0x4889df	                            mov rdi, rbx	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400cec4	      0xe800000000	                          call 0x400cec9	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400cec9	       0xfb7442454	           movzx eax, word [rsp + 0x54] 	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400cece	        0x6625ff7f	                          and ax, 0x7fff	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400ced2	            0x75b4	                           jne 0x400ce88	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400ced4	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400ced9	      0xe9a1fcffff	                           jmp 0x400cb7f	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400cede	      0x6645896502	                mov word [r13 + 2], r12w	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400cee3	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400cee7	    0x49c745380000	               mov qword [r13 + 0x38], 0	      8392	elf.c	FUNCTION_97	IF_1	FOR_1
0x400ceef	          0x4885c0	                           test rax, rax	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400cef2	     0xf84f6040000	                            je 0x400d3ee	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400cef8	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400cefd	      0x8344242801	               add dword [rsp + 0x28], 1	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400cf02	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400cf06	    0x3b8e74020000	           cmp ecx, dword [rsi + 0x274] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400cf0c	     0xf8356030000	                           jae 0x400d268	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400cf12	        0x4983c540	                           add r13, 0x40	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400cf16	      0x483b442430	            cmp rax, qword [rsp + 0x30] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400cf1b	        0x4d896df8	                mov qword [r13 - 8], r13	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400cf1f	     0xf87bbfeffff	                            ja 0x400cde0	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400cf25	      0x4801442420	            add qword [rsp + 0x20], rax 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cf2a	      0xe956feffff	                           jmp 0x400cd85	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cf2f	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cf34	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cf39	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400cf3e	          0x4585e4	                         test r12d, r12d	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x400cf41	            0x7410	                            je 0x400cf53	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x400cf43	          0x4139ee	                           cmp r14d, ebp	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400cf46	     0xf865a040000	                           jbe 0x400d3a6	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400cf4c	        0x4183c601	                             add r14d, 1	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400cf50	          0x4489f5	                           mov ebp, r14d	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400cf53	    0x488b8bf80000	            mov rcx, qword [rbx + 0xf8] 	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400cf5a	            0x89e8	                            mov eax, ebp	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400cf5c	      0xba48000000	                           mov edx, 0x48	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400cf61	          0x4889c6	                            mov rsi, rax	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400cf64	          0x4889df	                            mov rdi, rbx	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400cf67	      0x4889442448	             mov qword [rsp + 0x48], rax	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400cf6c	      0x48894c2408	                mov qword [rsp + 8], rcx	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400cf71	      0xe800000000	                          call 0x400cf76	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400cf76	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400cf7b	    0x488981480300	            mov qword [rcx + 0x348], rax	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400cf82	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400cf89	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400cf91	     0xf841afcffff	                            je 0x400cbb1	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400cf97	    0x89a840030000	            mov dword [rax + 0x340], ebp	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x400cf9d	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400cfa4	    0x418bb5c40200	           mov esi, dword [r13 + 0x2c4] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400cfab	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400cfb2	            0x85f6	                           test esi, esi	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400cfb4	      0x4889442428	             mov qword [rsp + 0x28], rax	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400cfb9	     0xf848e020000	                            je 0x400d24d	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400cfbf	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8447	elf.c	FUNCTION_97	IF_18
0x400cfc4	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      8447	elf.c	FUNCTION_97	IF_18
0x400cfc9	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400cfce	    0xc74424200000	               mov dword [rsp + 0x20], 0	      8447	elf.c	FUNCTION_97	IF_18
0x400cfd6	      0x4489742440	            mov dword [rsp + 0x40], r14d	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400cfdb	      0x4489642444	            mov dword [rsp + 0x44], r12d	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400cfe0	      0x498d4407f8	                lea rax, [r15 + rax - 8]	      8447	elf.c	FUNCTION_97	IF_18
0x400cfe5	          0x4989df	                            mov r15, rbx	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400cfe8	          0x4c89eb	                            mov rbx, r13	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400cfeb	      0x4889442408	                mov qword [rsp + 8], rax	      8447	elf.c	FUNCTION_97	IF_18
0x400cff0	      0x488d442450	                   lea rax, [rsp + 0x50]	      8447	elf.c	FUNCTION_97	IF_18
0x400cff5	      0x4889442438	             mov qword [rsp + 0x38], rax	      8447	elf.c	FUNCTION_97	IF_18
0x400cffa	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400cfff	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400d004	          0x4c89ff	                            mov rdi, r15	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400d007	          0x4889ea	                            mov rdx, rbp	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400d00a	          0x4c89e6	                            mov rsi, r12	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400d00d	      0xe800000000	                          call 0x400d012	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400d012	       0xfb7442454	           movzx eax, word [rsp + 0x54] 	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400d017	        0x6625ff7f	                          and ax, 0x7fff	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400d01b	            0x746b	                            je 0x400d088	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400d01d	           0xfb7c0	                           movzx eax, ax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d020	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d025	        0x488d04c0	                  lea rax, [rax + rax*8]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d029	    0x488d04c5b8ff	                 lea rax, [rax*8 - 0x48]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d031	          0x4901c6	                            add r14, rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d034	      0x4889442430	             mov qword [rsp + 0x30], rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d039	        0x488b4500	                    mov rax, qword [rbp]	        53	string3.h	FUNCTION_204	CALL_3
0x400d03d	          0x498906	                    mov qword [r14], rax	        53	string3.h	FUNCTION_204	CALL_3
0x400d040	        0x488b4508	                mov rax, qword [rbp + 8]	        53	string3.h	FUNCTION_204	CALL_3
0x400d044	        0x49894608	                mov qword [r14 + 8], rax	        53	string3.h	FUNCTION_204	CALL_3
0x400d048	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        53	string3.h	FUNCTION_204	CALL_3
0x400d04c	        0x49894610	             mov qword [r14 + 0x10], rax	        53	string3.h	FUNCTION_204	CALL_3
0x400d050	        0x488b4518	            mov rax, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_204	CALL_3
0x400d054	        0x4d897e20	             mov qword [r14 + 0x20], r15	      8506	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d058	        0x49894618	             mov qword [r14 + 0x18], rax	        53	string3.h	FUNCTION_204	CALL_3
0x400d05c	      0x410fb74606	               movzx eax, word [r14 + 6]	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400d061	          0x6685c0	                             test ax, ax	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400d064	     0xf8538020000	                           jne 0x400d2a2	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400d06a	      0x488b442408	                mov rax, qword [rsp + 8]	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d06f	    0x49c746380000	               mov qword [r14 + 0x38], 0	      8509	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400d077	          0x4c29e0	                            sub rax, r12	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d07a	        0x493b4610	            cmp rax, qword [r14 + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d07e	     0xf8346010000	                           jae 0x400d1ca	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d084	         0xf1f4000	                         nop dword [rax]	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d088	          0x4c89fb	                            mov rbx, r15	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d08b	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d090	      0xe9eafaffff	                           jmp 0x400cb7f	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d095	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d09a	          0x4889df	                            mov rdi, rbx	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d09d	    0x8bb070020000	           mov esi, dword [rax + 0x270] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d0a3	      0xe89851ffff	call sym.bfd_elf_string_from_elf_section.part.20	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d0a8	          0x4885c0	                           test rax, rax	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400d0ab	        0x49894528	             mov qword [r13 + 0x28], rax	      8338	elf.c	FUNCTION_97	IF_1	FOR_1
0x400d0af	     0xf85f8fcffff	                           jne 0x400cdad	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400d0b5	      0xe926fdffff	                           jmp 0x400cde0	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400d0ba	    0x660f1f440000	                    nop word [rax + rax]	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400d0c0	           0xfb7f0	                           movzx esi, ax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400d0c3	      0xba30000000	                           mov edx, 0x30	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400d0c8	          0x4889df	                            mov rdi, rbx	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400d0cb	      0xe800000000	                          call 0x400d0d0	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400d0d0	          0x4885c0	                           test rax, rax	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x400d0d3	          0x4989c7	                            mov r15, rax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400d0d6	        0x49894530	             mov qword [r13 + 0x30], rax	      8348	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1
0x400d0da	     0xf84ed020000	                            je 0x400d3cd	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x400d0e0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400d0e5	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400d0ea	        0x498b6d10	            mov rbp, qword [r13 + 0x10] 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400d0ee	          0x4829c1	                            sub rcx, rax	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400d0f1	          0x4839cd	                            cmp rbp, rcx	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400d0f4	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400d0f9	     0xf87e1fcffff	                            ja 0x400cde0	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400d0ff	          0x4801c5	                            add rbp, rax	      8359	elf.c	FUNCTION_97	IF_1	FOR_1
0x400d102	    0x6641837d0200	                   cmp word [r13 + 2], 0	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d108	     0xf84d5fdffff	                            je 0x400cee3	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d10e	          0x4531e4	                          xor r12d, r12d	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d111	     0xf1f80000000	                         nop dword [rax]	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d118	          0x4c89fa	                            mov rdx, r15	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400d11b	          0x4889ee	                            mov rsi, rbp	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400d11e	          0x4889df	                            mov rdi, rbx	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400d121	      0xe800000000	                          call 0x400d126	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400d126	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x400d12a	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400d12c	            0x7572	                           jne 0x400d1a0	       330	elf.c	FUNCTION_17	IF_1
0x400d12e	    0x49c747200000	               mov qword [r15 + 0x20], 0	      8366	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d136	      0x410fb7470a	            movzx eax, word [r15 + 0xa] 	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x400d13b	    0x49c747280000	               mov qword [r15 + 0x28], 0	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d143	          0x4139c6	                           cmp r14d, eax	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d146	        0x440f42f0	                         cmovb r14d, eax	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d14a	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400d14e	        0x4183c401	                             add r12d, 1	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400d152	          0x4885c0	                           test rax, rax	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400d155	     0xf8483fdffff	                            je 0x400cede	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400d15b	      0x410fb75502	               movzx edx, word [r13 + 2]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400d160	          0x4139d4	                           cmp r12d, edx	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400d163	            0x7323	                           jae 0x400d188	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400d165	      0x488b542408	                mov rdx, qword [rsp + 8]	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d16a	        0x4983c730	                           add r15, 0x30	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400d16e	        0x4d897ff8	                mov qword [r15 - 8], r15	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400d172	          0x4829ea	                            sub rdx, rbp	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d175	          0x4839d0	                            cmp rax, rdx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d178	     0xf8762fcffff	                            ja 0x400cde0	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d17e	          0x4801c5	                            add rbp, rax	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d181	            0xeb95	                           jmp 0x400d118	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d183	       0xf1f440000	                   nop dword [rax + rax]	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d188	      0x488b542408	                mov rdx, qword [rsp + 8]	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d18d	          0x4829ea	                            sub rdx, rbp	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d190	          0x4839d0	                            cmp rax, rdx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d193	     0xf8747fcffff	                            ja 0x400cde0	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d199	      0xe945fdffff	                           jmp 0x400cee3	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d19e	            0x6690	                                     nop	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d1a0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d1a5	          0x4889df	                            mov rdi, rbx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d1a8	    0x8bb070020000	           mov esi, dword [rax + 0x270] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d1ae	      0xe88d50ffff	call sym.bfd_elf_string_from_elf_section.part.20	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400d1b3	          0x4885c0	                           test rax, rax	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400d1b6	        0x49894720	             mov qword [r15 + 0x20], rax	      8366	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400d1ba	     0xf8576ffffff	                           jne 0x400d136	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400d1c0	      0xe91bfcffff	                           jmp 0x400cde0	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400d1c5	      0x6645896606	                mov word [r14 + 6], r12w	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400d1ca	    0x6641837e0600	                   cmp word [r14 + 6], 0	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400d1d0	    0x49c746280000	               mov qword [r14 + 0x28], 0	      8553	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d1d8	            0x740c	                            je 0x400d1e6	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400d1da	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400d1de	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400d1e2	        0x49894628	             mov qword [r14 + 0x28], rax	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400d1e6	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400d1ea	    0x49c746300000	               mov qword [r14 + 0x30], 0	      8557	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d1f2	          0x4885d2	                           test rdx, rdx	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400d1f5	            0x7444	                            je 0x400d23b	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400d1f7	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d1fc	    0x48b9398ee338	          movabs rcx, 0x8e38e38e38e38e39	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d206	        0x48c1f803	                              sar rax, 3	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d20a	        0x480fafc1	                           imul rax, rcx	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d20e	        0x4883c001	                              add rax, 1	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d212	      0x4839442448	            cmp qword [rsp + 0x48], rax 	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d217	            0x7608	                           jbe 0x400d221	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d219	        0x498d4648	                   lea rax, [r14 + 0x48]	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d21d	        0x49894630	             mov qword [r14 + 0x30], rax	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400d221	      0x8344242001	               add dword [rsp + 0x20], 1	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d226	      0x4801542418	            add qword [rsp + 0x18], rdx 	      8563	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d22b	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d22f	    0x3983c4020000	           cmp dword [rbx + 0x2c4], eax 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d235	     0xf87bffdffff	                            ja 0x400cffa	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d23b	          0x4c89fb	                            mov rbx, r15	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d23e	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d243	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d248	      0x448b642444	           mov r12d, dword [rsp + 0x44] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d24d	          0x4c89ff	                            mov rdi, r15	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x400d250	      0xe800000000	                          call 0x400d255	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x400d255	          0x4585e4	                         test r12d, r12d	      8586	elf.c	FUNCTION_97	IF_43
0x400d258	     0xf8436faffff	                            je 0x400cc94	      8586	elf.c	FUNCTION_97	IF_43
0x400d25e	      0xe9bff9ffff	                           jmp 0x400cc22	      8586	elf.c	FUNCTION_97	IF_43
0x400d263	       0xf1f440000	                   nop dword [rax + rax]	      8586	elf.c	FUNCTION_97	IF_43
0x400d268	      0x483b442430	            cmp rax, qword [rsp + 0x30] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400d26d	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400d272	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400d277	     0xf8749f8ffff	                            ja 0x400cac6	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400d27d	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400d284	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x400d288	          0x4c89ff	                            mov rdi, r15	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400d28b	    0x898844030000	            mov dword [rax + 0x344], ecx	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x400d291	      0xe800000000	                          call 0x400d296	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400d296	    0x4c8babf80000	            mov r13, qword [rbx + 0xf8] 	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400d29d	      0xe9b1f8ffff	                           jmp 0x400cb53	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400d2a2	           0xfb7f0	                           movzx esi, ax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400d2a5	      0xba20000000	                           mov edx, 0x20	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400d2aa	          0x4c89ff	                            mov rdi, r15	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400d2ad	      0xe800000000	                          call 0x400d2b2	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400d2b2	          0x4885c0	                           test rax, rax	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x400d2b5	          0x4989c5	                            mov r13, rax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400d2b8	        0x49894638	             mov qword [r14 + 0x38], rax	      8512	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3
0x400d2bc	     0xf84f7000000	                            je 0x400d3b9	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x400d2c2	      0x488b442408	                mov rax, qword [rsp + 8]	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d2c7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d2cc	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d2d0	          0x4829c8	                            sub rax, rcx	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d2d3	          0x4839c5	                            cmp rbp, rax	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d2d6	     0xf87acfdffff	                            ja 0x400d088	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400d2dc	          0x4801cd	                            add rbp, rcx	      8523	elf.c	FUNCTION_97	IF_18	FOR_4
0x400d2df	    0x6641837e0600	                   cmp word [r14 + 6], 0	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d2e5	     0xf84dffeffff	                            je 0x400d1ca	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d2eb	          0x4531e4	                          xor r12d, r12d	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d2ee	            0x6690	                                     nop	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d2f0	        0x498b4708	                mov rax, qword [r15 + 8]	       103	elf.c	FUNCTION_3	CALL_1
0x400d2f4	          0x4889ef	                            mov rdi, rbp	       103	elf.c	FUNCTION_3	CALL_1
0x400d2f7	    0xff9080000000	                 call qword [rax + 0x80]	       103	elf.c	FUNCTION_3	CALL_1
0x400d2fd	        0x49894500	                    mov qword [r13], rax	       103	elf.c	FUNCTION_3	CALL_1
0x400d301	        0x498b4708	                mov rax, qword [r15 + 8]	       104	elf.c	FUNCTION_3	CALL_2
0x400d305	        0x488d7d04	                      lea rdi, [rbp + 4]	       104	elf.c	FUNCTION_3	CALL_2
0x400d309	    0xff9080000000	                 call qword [rax + 0x80]	       104	elf.c	FUNCTION_3	CALL_2
0x400d30f	        0x498b5500	                    mov rdx, qword [r13]	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x400d313	        0x49894508	                mov qword [r13 + 8], rax	       104	elf.c	FUNCTION_3	CALL_2
0x400d317	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400d319	            0x7565	                           jne 0x400d380	       330	elf.c	FUNCTION_17	IF_1
0x400d31b	    0x49c745100000	               mov qword [r13 + 0x10], 0	      8530	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d323	        0x4183c401	                             add r12d, 1	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400d327	          0x4885c0	                           test rax, rax	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400d32a	    0x49c745180000	               mov qword [r13 + 0x18], 0	      8536	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d332	     0xf848dfeffff	                            je 0x400d1c5	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400d338	      0x410fb75606	               movzx edx, word [r14 + 6]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400d33d	          0x4139d4	                           cmp r12d, edx	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400d340	            0x731e	                           jae 0x400d360	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400d342	      0x488b542408	                mov rdx, qword [rsp + 8]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d347	        0x4983c520	                           add r13, 0x20	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400d34b	        0x4d896df8	                mov qword [r13 - 8], r13	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400d34f	          0x4829ea	                            sub rdx, rbp	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d352	          0x4839d0	                            cmp rax, rdx	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d355	     0xf872dfdffff	                            ja 0x400d088	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d35b	          0x4801c5	                            add rbp, rax	      8549	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d35e	            0xeb90	                           jmp 0x400d2f0	      8549	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d360	      0x488b542408	                mov rdx, qword [rsp + 8]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d365	          0x4829ea	                            sub rdx, rbp	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d368	          0x4839d0	                            cmp rax, rdx	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d36b	     0xf8717fdffff	                            ja 0x400d088	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d371	      0xe954feffff	                           jmp 0x400d1ca	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d376	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d380	    0x8bb3c0020000	           mov esi, dword [rbx + 0x2c0] 	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d386	          0x4c89ff	                            mov rdi, r15	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d389	      0xe8b24effff	call sym.bfd_elf_string_from_elf_section.part.20	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400d38e	          0x4885c0	                           test rax, rax	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400d391	        0x49894510	             mov qword [r13 + 0x10], rax	      8530	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400d395	     0xf84edfcffff	                            je 0x400d088	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400d39b	        0x498b4508	                mov rax, qword [r13 + 8]	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400d39f	            0xeb82	                           jmp 0x400d323	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400d3a1	      0xe800000000	                          call 0x400d3a6	      8619	elf.c	FUNCTION_97
0x400d3a6	        0x448d7501	                     lea r14d, [rbp + 1]	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400d3aa	          0x4489f5	                           mov ebp, r14d	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400d3ad	      0xe9a1fbffff	                           jmp 0x400cf53	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400d3b2	            0x31ed	                            xor ebp, ebp	      8454	elf.c	FUNCTION_97	IF_18
0x400d3b4	      0xe985fbffff	                           jmp 0x400cf3e	      8454	elf.c	FUNCTION_97	IF_18
0x400d3b9	          0x4c89fb	                            mov rbx, r15	      8454	elf.c	FUNCTION_97	IF_18
0x400d3bc	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8454	elf.c	FUNCTION_97	IF_18
0x400d3c1	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8454	elf.c	FUNCTION_97	IF_18
0x400d3c8	      0xe9e4f7ffff	                           jmp 0x400cbb1	      8454	elf.c	FUNCTION_97	IF_18
0x400d3cd	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8454	elf.c	FUNCTION_97	IF_18
0x400d3d2	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8454	elf.c	FUNCTION_97	IF_18
0x400d3d9	      0xe91af7ffff	                           jmp 0x400caf8	      8454	elf.c	FUNCTION_97	IF_18
0x400d3de	    0xc74424280000	               mov dword [rsp + 0x28], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400d3e6	          0x4531f6	                          xor r14d, r14d	      8284	elf.c	FUNCTION_97
0x400d3e9	      0xe996feffff	                           jmp 0x400d284	      8284	elf.c	FUNCTION_97
0x400d3ee	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8284	elf.c	FUNCTION_97
0x400d3f3	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      8284	elf.c	FUNCTION_97
0x400d3f8	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8284	elf.c	FUNCTION_97
0x400d3ff	      0xe980feffff	                           jmp 0x400d284	      8284	elf.c	FUNCTION_97
copy_special_section_fields	SWITCH,0:CALL,12:IF,11:functions,0:ELSE,3:DO,0:WHILE,0:FOR,0	118
0x40007f0	            0x4157	                                push r15	      1358	elf.c	FUNCTION_30
0x40007f2	            0x4156	                                push r14	      1358	elf.c	FUNCTION_30
0x40007f4	            0x4155	                                push r13	      1358	elf.c	FUNCTION_30
0x40007f6	            0x4154	                                push r12	      1358	elf.c	FUNCTION_30
0x40007f8	              0x55	                                push rbp	      1358	elf.c	FUNCTION_30
0x40007f9	              0x53	                                push rbx	      1358	elf.c	FUNCTION_30
0x40007fa	        0x4883ec18	                           sub rsp, 0x18	      1358	elf.c	FUNCTION_30
0x40007fe	        0x83790408	                  cmp dword [rcx + 4], 8	      1364	elf.c	FUNCTION_30	IF_1
0x4000802	     0xf84b8000000	                            je 0x40008c0	      1364	elf.c	FUNCTION_30	IF_1
0x4000808	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1360	elf.c	FUNCTION_30	CALL_2
0x400080f	          0x4589c6	                           mov r14d, r8d	      1360	elf.c	FUNCTION_30	CALL_2
0x4000812	          0x4989cd	                            mov r13, rcx	      1360	elf.c	FUNCTION_30	CALL_2
0x4000815	          0x4889d3	                            mov rbx, rdx	      1360	elf.c	FUNCTION_30	CALL_2
0x4000818	          0x4889f5	                            mov rbp, rsi	      1360	elf.c	FUNCTION_30	CALL_2
0x400081b	          0x4989fc	                            mov r12, rdi	      1360	elf.c	FUNCTION_30	CALL_2
0x400081e	        0x4c8b7858	            mov r15, qword [rax + 0x58] 	      1360	elf.c	FUNCTION_30	CALL_2
0x4000822	        0x488b4608	                mov rax, qword [rsi + 8]	      1359	elf.c	FUNCTION_30	CALL_1
0x4000826	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1390	elf.c	FUNCTION_30	IF_4
0x400082d	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1390	elf.c	FUNCTION_30	IF_4
0x4000834	          0x4885c0	                           test rax, rax	      1390	elf.c	FUNCTION_30	IF_4
0x4000837	            0x7406	                            je 0x400083f	      1390	elf.c	FUNCTION_30	IF_4
0x4000839	            0xffd0	                                call rax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400083b	            0x85c0	                           test eax, eax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400083d	            0x7521	                           jne 0x4000860	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400083f	        0x448b4328	            mov r8d, dword [rbx + 0x28] 	      1399	elf.c	FUNCTION_30	IF_5
0x4000843	          0x4585c0	                           test r8d, r8d	      1399	elf.c	FUNCTION_30	IF_5
0x4000846	            0x7538	                           jne 0x4000880	      1399	elf.c	FUNCTION_30	IF_5
0x4000848	          0x4531e4	                          xor r12d, r12d	      1361	elf.c	FUNCTION_30
0x400084b	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1425	elf.c	FUNCTION_30	IF_8
0x400084e	            0x85c0	                           test eax, eax	      1425	elf.c	FUNCTION_30	IF_8
0x4000850	            0x7414	                            je 0x4000866	      1425	elf.c	FUNCTION_30	IF_8
0x4000852	        0xf6430840	               test byte [rbx + 8], 0x40	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x4000856	     0xf85cc000000	                           jne 0x4000928	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x400085c	        0x4189452c	             mov dword [r13 + 0x2c], eax	      1443	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4000860	    0x41bc01000000	                             mov r12d, 1	      1444	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4000866	        0x4883c418	                           add rsp, 0x18	      1453	elf.c	FUNCTION_30
0x400086a	          0x4489e0	                           mov eax, r12d	      1453	elf.c	FUNCTION_30
0x400086d	              0x5b	                                 pop rbx	      1453	elf.c	FUNCTION_30
0x400086e	              0x5d	                                 pop rbp	      1453	elf.c	FUNCTION_30
0x400086f	            0x415c	                                 pop r12	      1453	elf.c	FUNCTION_30
0x4000871	            0x415d	                                 pop r13	      1453	elf.c	FUNCTION_30
0x4000873	            0x415e	                                 pop r14	      1453	elf.c	FUNCTION_30
0x4000875	            0x415f	                                 pop r15	      1453	elf.c	FUNCTION_30
0x4000877	              0xc3	                                     ret	      1453	elf.c	FUNCTION_30
0x4000878	     0xf1f84000000	                   nop dword [rax + rax]	      1453	elf.c	FUNCTION_30
0x4000880	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x4000888	    0x443b80fc0200	           cmp r8d, dword [rax + 0x2fc] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x400088f	            0x7357	                           jae 0x40008e8	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x4000891	          0x4489c0	                            mov eax, r8d	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x4000894	    0x488dbdf80000	                   lea rdi, [rbp + 0xf8]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x400089b	          0x4489c2	                            mov edx, r8d	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x400089e	        0x498b34c7	            mov rsi, qword [r15 + rax*8]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40008a2	      0xe829feffff	               call sym.find_link.isra.9	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40008a7	            0x85c0	                           test eax, eax	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x40008a9	     0xf84d1000000	                            je 0x4000980	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x40008af	        0x41894528	             mov dword [r13 + 0x28], eax	      1414	elf.c	FUNCTION_30	IF_5	IF_7
0x40008b3	    0x41bc01000000	                             mov r12d, 1	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x40008b9	            0xeb90	                           jmp 0x400084b	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x40008bb	       0xf1f440000	                   nop dword [rax + rax]	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x40008c0	          0x8b7128	            mov esi, dword [rcx + 0x28] 	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x40008c3	            0x85f6	                           test esi, esi	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x40008c5	            0x7506	                           jne 0x40008cd	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x40008c7	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x40008ca	          0x894128	             mov dword [rcx + 0x28], eax	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x40008cd	          0x8b412c	            mov eax, dword [rcx + 0x2c] 	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x40008d0	            0x85c0	                           test eax, eax	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x40008d2	            0x758c	                           jne 0x4000860	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x40008d4	          0x8b422c	            mov eax, dword [rdx + 0x2c] 	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40008d7	    0x41bc01000000	                             mov r12d, 1	      1386	elf.c	FUNCTION_30	IF_1
0x40008dd	          0x89412c	             mov dword [rcx + 0x2c], eax	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40008e0	            0xeb84	                           jmp 0x4000866	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40008e2	    0x660f1f440000	                    nop word [rax + rax]	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x40008e8	      0xba05000000	                              mov edx, 5	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40008ed	      0xbe00000000	                              mov esi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40008f2	      0xbf00000000	                              mov edi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40008f7	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40008fc	      0xe800000000	                          call 0x4000901	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x4000901	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4000906	          0x4c89e6	                            mov rsi, r12	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4000909	          0x4889c7	                            mov rdi, rax	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400090c	          0x4489f1	                           mov ecx, r14d	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400090f	            0x31c0	                            xor eax, eax	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4000911	          0x4531e4	                          xor r12d, r12d	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4000914	          0x4489c2	                            mov edx, r8d	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x4000917	      0xe800000000	                          call 0x400091c	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x400091c	      0xe945ffffff	                           jmp 0x4000866	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4000921	     0xf1f80000000	                         nop dword [rax]	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x4000928	            0x89c2	                            mov edx, eax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400092a	    0x488dbdf80000	                   lea rdi, [rbp + 0xf8]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4000931	        0x498b34d7	            mov rsi, qword [r15 + rdx*8]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4000935	            0x89c2	                            mov edx, eax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4000937	      0xe894fdffff	               call sym.find_link.isra.9	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400093c	            0x85c0	                           test eax, eax	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x400093e	            0x7410	                            je 0x4000950	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4000940	      0x49834d0840	                or qword [r13 + 8], 0x40	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4000945	      0xe912ffffff	                           jmp 0x400085c	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x400094a	    0x660f1f440000	                    nop word [rax + rax]	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4000950	      0xba05000000	                              mov edx, 5	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4000955	      0xbe00000000	                              mov esi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x400095a	      0xbf00000000	                              mov edi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x400095f	      0xe800000000	                          call 0x4000964	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4000964	          0x4489f2	                           mov edx, r14d	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x4000967	          0x4889c7	                            mov rdi, rax	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400096a	          0x4889ee	                            mov rsi, rbp	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400096d	            0x31c0	                            xor eax, eax	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400096f	      0xe800000000	                          call 0x4000974	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x4000974	      0xe9edfeffff	                           jmp 0x4000866	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x4000979	     0xf1f80000000	                         nop dword [rax]	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x4000980	      0xba05000000	                              mov edx, 5	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x4000985	      0xbe00000000	                              mov esi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x400098a	      0xbf00000000	                              mov edi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x400098f	      0xe800000000	                          call 0x4000994	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x4000994	          0x4489f2	                           mov edx, r14d	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x4000997	          0x4889c7	                            mov rdi, rax	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x400099a	          0x4889ee	                            mov rsi, rbp	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x400099d	            0x31c0	                            xor eax, eax	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x400099f	      0xe800000000	                          call 0x40009a4	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x40009a4	      0xe99ffeffff	                           jmp 0x4000848	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
_bfd_elfcore_make_pseudosection	SWITCH,0:CALL,6:IF,2:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	84
0x400e6c0	            0x4157	                                push r15	      9076	elf.c	FUNCTION_114
0x400e6c2	            0x4156	                                push r14	      9076	elf.c	FUNCTION_114
0x400e6c4	          0x4989d6	                            mov r14, rdx	      9076	elf.c	FUNCTION_114
0x400e6c7	            0x4155	                                push r13	      9076	elf.c	FUNCTION_114
0x400e6c9	            0x4154	                                push r12	      9076	elf.c	FUNCTION_114
0x400e6cb	          0x4989cd	                            mov r13, rcx	      9076	elf.c	FUNCTION_114
0x400e6ce	              0x55	                                push rbp	      9076	elf.c	FUNCTION_114
0x400e6cf	              0x53	                                push rbx	      9076	elf.c	FUNCTION_114
0x400e6d0	          0x4889fd	                            mov rbp, rdi	      9076	elf.c	FUNCTION_114
0x400e6d3	          0x4989f4	                            mov r12, rsi	      9076	elf.c	FUNCTION_114
0x400e6d6	        0x4883ec78	                           sub rsp, 0x78	      9076	elf.c	FUNCTION_114
0x400e6da	    0x64488b042528	                mov rax, qword fs:[0x28]	      9076	elf.c	FUNCTION_114
0x400e6e3	      0x4889442468	             mov qword [rsp + 0x68], rax	      9076	elf.c	FUNCTION_114
0x400e6e8	            0x31c0	                            xor eax, eax	      9076	elf.c	FUNCTION_114
0x400e6ea	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9034	elf.c	FUNCTION_112	CALL_1
0x400e6f1	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9034	elf.c	FUNCTION_112	CALL_1
0x400e6f8	        0x448b4808	                mov r9d, dword [rax + 8]	      9034	elf.c	FUNCTION_112	CALL_1
0x400e6fc	          0x4585c9	                           test r9d, r9d	      9035	elf.c	FUNCTION_112	IF_1
0x400e6ff	            0x7504	                           jne 0x400e705	      9035	elf.c	FUNCTION_112	IF_1
0x400e701	        0x448b4804	                mov r9d, dword [rax + 4]	      9036	elf.c	FUNCTION_112	CALL_2
0x400e705	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e70a	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e70d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e712	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e717	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e71a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e71c	      0xe800000000	                          call 0x400e721	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e721	          0x4989e7	                            mov r15, rsp	        33	stdio2.h	FUNCTION_216	CALL_1
0x400e724	          0x4889e2	                            mov rdx, rsp	      9085	elf.c	FUNCTION_114	CALL_2
0x400e727	            0x8b0a	                    mov ecx, dword [rdx]	      9085	elf.c	FUNCTION_114	CALL_2
0x400e729	        0x4883c204	                              add rdx, 4	      9085	elf.c	FUNCTION_114	CALL_2
0x400e72d	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      9085	elf.c	FUNCTION_114	CALL_2
0x400e733	            0xf7d1	                                 not ecx	      9085	elf.c	FUNCTION_114	CALL_2
0x400e735	            0x21c8	                            and eax, ecx	      9085	elf.c	FUNCTION_114	CALL_2
0x400e737	      0x2580808080	                     and eax, 0x80808080	      9085	elf.c	FUNCTION_114	CALL_2
0x400e73c	            0x74e9	                            je 0x400e727	      9085	elf.c	FUNCTION_114	CALL_2
0x400e73e	            0x89c1	                            mov ecx, eax	      9085	elf.c	FUNCTION_114	CALL_2
0x400e740	          0x4889ef	                            mov rdi, rbp	      9086	elf.c	FUNCTION_114	CALL_3
0x400e743	          0xc1e910	                           shr ecx, 0x10	      9085	elf.c	FUNCTION_114	CALL_2
0x400e746	      0xa980800000	                        test eax, 0x8080	      9085	elf.c	FUNCTION_114	CALL_2
0x400e74b	           0xf44c1	                          cmove eax, ecx	      9085	elf.c	FUNCTION_114	CALL_2
0x400e74e	        0x488d4a02	                      lea rcx, [rdx + 2]	      9085	elf.c	FUNCTION_114	CALL_2
0x400e752	            0x89c3	                            mov ebx, eax	      9085	elf.c	FUNCTION_114	CALL_2
0x400e754	        0x480f44d1	                          cmove rdx, rcx	      9085	elf.c	FUNCTION_114	CALL_2
0x400e758	              0xc3	                              add bl, al	      9085	elf.c	FUNCTION_114	CALL_2
0x400e75a	        0x4883da03	                              sbb rdx, 3	      9085	elf.c	FUNCTION_114	CALL_2
0x400e75e	          0x4c29fa	                            sub rdx, r15	      9085	elf.c	FUNCTION_114	CALL_2
0x400e761	        0x488d5a01	                      lea rbx, [rdx + 1]	      9085	elf.c	FUNCTION_114	CALL_2
0x400e765	          0x4889de	                            mov rsi, rbx	      9086	elf.c	FUNCTION_114	CALL_3
0x400e768	      0xe800000000	                          call 0x400e76d	      9086	elf.c	FUNCTION_114	CALL_3
0x400e76d	          0x4885c0	                           test rax, rax	      9087	elf.c	FUNCTION_114	IF_1
0x400e770	            0x7466	                            je 0x400e7d8	      9087	elf.c	FUNCTION_114	IF_1
0x400e772	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_204	CALL_3
0x400e775	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_204	CALL_3
0x400e778	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_204	CALL_3
0x400e77b	      0xe800000000	                          call 0x400e780	        53	string3.h	FUNCTION_204	CALL_3
0x400e780	      0xba00010000	                          mov edx, 0x100	      9091	elf.c	FUNCTION_114	CALL_5
0x400e785	          0x4889c6	                            mov rsi, rax	      9091	elf.c	FUNCTION_114	CALL_5
0x400e788	          0x4889ef	                            mov rdi, rbp	      9091	elf.c	FUNCTION_114	CALL_5
0x400e78b	      0xe800000000	                          call 0x400e790	      9091	elf.c	FUNCTION_114	CALL_5
0x400e790	          0x4885c0	                           test rax, rax	      9093	elf.c	FUNCTION_114	IF_2
0x400e793	            0x7443	                            je 0x400e7d8	      9093	elf.c	FUNCTION_114	IF_2
0x400e795	        0x4c897038	             mov qword [rax + 0x38], r14	      9095	elf.c	FUNCTION_114
0x400e799	    0x4c89a8900000	             mov qword [rax + 0x90], r13	      9096	elf.c	FUNCTION_114
0x400e7a0	          0x4889c2	                            mov rdx, rax	      9099	elf.c	FUNCTION_114	CALL_6
0x400e7a3	    0xc74070020000	               mov dword [rax + 0x70], 2	      9097	elf.c	FUNCTION_114
0x400e7aa	          0x4c89e6	                            mov rsi, r12	      9099	elf.c	FUNCTION_114	CALL_6
0x400e7ad	          0x4889ef	                            mov rdi, rbp	      9099	elf.c	FUNCTION_114	CALL_6
0x400e7b0	      0xe82b29ffff	        call sym.elfcore_maybe_make_sect	      9099	elf.c	FUNCTION_114	CALL_6
0x400e7b5	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	      9100	elf.c	FUNCTION_114
0x400e7ba	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9100	elf.c	FUNCTION_114
0x400e7c3	            0x7517	                           jne 0x400e7dc	      9100	elf.c	FUNCTION_114
0x400e7c5	        0x4883c478	                           add rsp, 0x78	      9100	elf.c	FUNCTION_114
0x400e7c9	              0x5b	                                 pop rbx	      9100	elf.c	FUNCTION_114
0x400e7ca	              0x5d	                                 pop rbp	      9100	elf.c	FUNCTION_114
0x400e7cb	            0x415c	                                 pop r12	      9100	elf.c	FUNCTION_114
0x400e7cd	            0x415d	                                 pop r13	      9100	elf.c	FUNCTION_114
0x400e7cf	            0x415e	                                 pop r14	      9100	elf.c	FUNCTION_114
0x400e7d1	            0x415f	                                 pop r15	      9100	elf.c	FUNCTION_114
0x400e7d3	              0xc3	                                     ret	      9100	elf.c	FUNCTION_114
0x400e7d4	         0xf1f4000	                         nop dword [rax]	      9100	elf.c	FUNCTION_114
0x400e7d8	            0x31c0	                            xor eax, eax	      9088	elf.c	FUNCTION_114	IF_1
0x400e7da	            0xebd9	                           jmp 0x400e7b5	      9088	elf.c	FUNCTION_114	IF_1
0x400e7dc	      0xe800000000	                          call 0x400e7e1	      9100	elf.c	FUNCTION_114
_bfd_elf_write_object_contents	SWITCH,0:CALL,17:IF,11:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1	307
0x400a100	            0x4157	                                push r15	      6381	elf.c	FUNCTION_76
0x400a102	            0x4156	                                push r14	      6381	elf.c	FUNCTION_76
0x400a104	            0x4155	                                push r13	      6381	elf.c	FUNCTION_76
0x400a106	            0x4154	                                push r12	      6381	elf.c	FUNCTION_76
0x400a108	          0x4989fc	                            mov r12, rdi	      6381	elf.c	FUNCTION_76
0x400a10b	              0x55	                                push rbp	      6381	elf.c	FUNCTION_76
0x400a10c	              0x53	                                push rbx	      6381	elf.c	FUNCTION_76
0x400a10d	        0x4883ec38	                           sub rsp, 0x38	      6381	elf.c	FUNCTION_76
0x400a111	    0x64488b042528	                mov rax, qword fs:[0x28]	      6381	elf.c	FUNCTION_76
0x400a11a	      0x4889442428	             mov qword [rsp + 0x28], rax	      6381	elf.c	FUNCTION_76
0x400a11f	            0x31c0	                            xor eax, eax	      6381	elf.c	FUNCTION_76
0x400a121	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      6388	elf.c	FUNCTION_76	IF_1
0x400a125	        0x488b4708	                mov rax, qword [rdi + 8]	      6382	elf.c	FUNCTION_76	CALL_1
0x400a129	    0x4c8ba8680300	           mov r13, qword [rax + 0x368] 	      6382	elf.c	FUNCTION_76	CALL_1
0x400a130	            0x750b	                           jne 0x400a13d	      6388	elf.c	FUNCTION_76	IF_1
0x400a132	            0x31f6	                            xor esi, esi	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400a134	      0xe800000000	                          call 0x400a139	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400a139	            0x85c0	                           test eax, eax	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400a13b	            0x7439	                            je 0x400a176	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400a13d	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400a145	      0x488d542424	                   lea rdx, [rsp + 0x24]	      6395	elf.c	FUNCTION_76	CALL_4
0x400a14a	          0x4c89e7	                            mov rdi, r12	      6395	elf.c	FUNCTION_76	CALL_4
0x400a14d	    0xc74424240000	               mov dword [rsp + 0x24], 0	      6394	elf.c	FUNCTION_76
0x400a155	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400a159	      0x4889442410	             mov qword [rsp + 0x10], rax	      6392	elf.c	FUNCTION_76	CALL_3
0x400a15e	    0x498b85000300	           mov rax, qword [r13 + 0x300] 	      6395	elf.c	FUNCTION_76	CALL_4
0x400a165	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      6395	elf.c	FUNCTION_76	CALL_4
0x400a169	      0xe800000000	                          call 0x400a16e	      6395	elf.c	FUNCTION_76	CALL_4
0x400a16e	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      6396	elf.c	FUNCTION_76	IF_2
0x400a172	            0x85c0	                           test eax, eax	      6396	elf.c	FUNCTION_76	IF_2
0x400a174	            0x742a	                            je 0x400a1a0	      6396	elf.c	FUNCTION_76	IF_2
0x400a176	            0x31c0	                            xor eax, eax	      6400	elf.c	FUNCTION_76	IF_3
0x400a178	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      6440	elf.c	FUNCTION_76
0x400a17d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6440	elf.c	FUNCTION_76
0x400a186	     0xf8589040000	                           jne 0x400a615	      6440	elf.c	FUNCTION_76
0x400a18c	        0x4883c438	                           add rsp, 0x38	      6440	elf.c	FUNCTION_76
0x400a190	              0x5b	                                 pop rbx	      6440	elf.c	FUNCTION_76
0x400a191	              0x5d	                                 pop rbp	      6440	elf.c	FUNCTION_76
0x400a192	            0x415c	                                 pop r12	      6440	elf.c	FUNCTION_76
0x400a194	            0x415d	                                 pop r13	      6440	elf.c	FUNCTION_76
0x400a196	            0x415e	                                 pop r14	      6440	elf.c	FUNCTION_76
0x400a198	            0x415f	                                 pop r15	      6440	elf.c	FUNCTION_76
0x400a19a	              0xc3	                                     ret	      6440	elf.c	FUNCTION_76
0x400a19b	       0xf1f440000	                   nop dword [rax + rax]	      6440	elf.c	FUNCTION_76
0x400a1a0	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400a1a8	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      6295	elf.c	FUNCTION_75	CALL_2
0x400a1ac	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400a1b3	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      6296	elf.c	FUNCTION_75	CALL_3
0x400a1b9	        0x4c8b7a40	            mov r15, qword [rdx + 0x40] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400a1bd	        0x4c8d34c3	                  lea r14, [rbx + rax*8]	      6296	elf.c	FUNCTION_75	CALL_3
0x400a1c1	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1c5	          0x4939de	                            cmp r14, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1c8	            0x7713	                            ja 0x400a1dd	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1ca	      0xe9a0010000	                           jmp 0x400a36f	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1cf	              0x90	                                     nop	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1d0	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1d4	          0x4939de	                            cmp r14, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1d7	     0xf8683010000	                           jbe 0x400a360	      6297	elf.c	FUNCTION_75	FOR_1
0x400a1dd	          0x488b2b	                    mov rbp, qword [rbx]	      6299	elf.c	FUNCTION_75	FOR_1
0x400a1e0	      0x48837d18ff	cmp qword [rbp + 0x18], 0xffffffffffffffff	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400a1e5	            0x75e9	                           jne 0x400a1d0	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x400a1e7	          0x8b4504	                mov eax, dword [rbp + 4]	      6303	elf.c	FUNCTION_75	FOR_1	IF_1
0x400a1ea	        0x4c8b4540	              mov r8, qword [rbp + 0x40]	      6302	elf.c	FUNCTION_75	FOR_1	IF_1
0x400a1ee	          0x83f809	                              cmp eax, 9	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a1f1	     0xf84a9030000	                            je 0x400a5a0	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a1f7	          0x83f804	                              cmp eax, 4	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a1fa	     0xf84a0030000	                            je 0x400a5a0	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a200	          0x4d85c0	                             test r8, r8	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a203	            0x74cb	                            je 0x400a1d0	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a205	      0x41f6402308	                test byte [r8 + 0x23], 8	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a20a	            0x74c4	                            je 0x400a1d0	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x400a20c	          0x498b00	                     mov rax, qword [r8]	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a20f	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400a213	          0x4c89c6	                             mov rsi, r8	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400a216	          0x4c89e7	                            mov rdi, r12	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400a219	      0x4c89442408	                 mov qword [rsp + 8], r8	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400a21e	        0x48890424	                    mov qword [rsp], rax	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a222	      0xe800000000	                          call 0x400a227	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400a227	            0x85c0	                           test eax, eax	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400a229	     0xf8447ffffff	                            je 0x400a176	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400a22f	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a234	      0x410fb64024	            movzx eax, byte [r8 + 0x24] 	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a239	          0x83e030	                           and eax, 0x30	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a23c	            0x3c10	                            cmp al, 0x10	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a23e	     0xf848c030000	                            je 0x400a5d0	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a244	        0x837d00ff	     cmp dword [rbp], 0xffffffffffffffff	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400a248	     0xf85cc030000	                           jne 0x400a61a	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x400a24e	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a256	        0x488b3424	                    mov rsi, qword [rsp]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a25a	            0x31d2	                            xor edx, edx	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a25c	      0x4c89442408	                 mov qword [rsp + 8], r8	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a261	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a268	        0x488b7808	                mov rdi, qword [rax + 8]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a26c	      0xe800000000	                          call 0x400a271	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a271	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x400a276	          0x894500	                    mov dword [rbp], eax	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400a279	    0x4d8b98e00000	              mov r11, qword [r8 + 0xe0]	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x400a280	        0x498b7358	            mov rsi, qword [r11 + 0x58] 	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400a284	          0x4885f6	                           test rsi, rsi	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400a287	            0x742a	                            je 0x400a2b3	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400a289	        0x488b1424	                    mov rdx, qword [rsp]	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a28d	            0x31c9	                            xor ecx, ecx	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a28f	          0x4c89e7	                            mov rdi, r12	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a292	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a297	      0x4c89442408	                 mov qword [rsp + 8], r8	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a29c	      0xe8ef6fffff	call sym._bfd_elf_set_reloc_sh_name.isra.17	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a2a1	            0x85c0	                           test eax, eax	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a2a3	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a2a8	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a2ad	     0xf84c3feffff	                            je 0x400a176	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x400a2b3	        0x498b7370	            mov rsi, qword [r11 + 0x70] 	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400a2b7	          0x4885f6	                           test rsi, rsi	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400a2ba	            0x7423	                            je 0x400a2df	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x400a2bc	        0x488b1424	                    mov rdx, qword [rsp]	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2c0	      0xb901000000	                              mov ecx, 1	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2c5	          0x4c89e7	                            mov rdi, r12	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2c8	      0x4c89442408	                 mov qword [rsp + 8], r8	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2cd	      0xe8be6fffff	call sym._bfd_elf_set_reloc_sh_name.isra.17	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2d2	            0x85c0	                           test eax, eax	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2d4	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2d9	     0xf8497feffff	                            je 0x400a176	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x400a2df	        0x498b4038	              mov rax, qword [r8 + 0x38]	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a2e3	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x400a2e7	        0x48894520	            mov qword [rbp + 0x20], rax 	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a2eb	    0x498b80b00000	              mov rax, qword [r8 + 0xb0]	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a2f2	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400a2f6	        0x4c8b4540	              mov r8, qword [rbp + 0x40]	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a2fa	        0x48894548	            mov qword [rbp + 0x48], rax 	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a2fe	          0x8b4504	                mov eax, dword [rbp + 4]	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a301	    0x49c780b00000	                mov qword [r8 + 0xb0], 0	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x400a30c	     0xf86ee020000	                           jbe 0x400a600	      4200	elf.c	FUNCTION_58	IF_1
0x400a312	      0x4a8d4c3aff	                lea rcx, [rdx + r15 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x400a317	          0x4939cf	                            cmp r15, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a31a	     0xf879c020000	                            ja 0x400a5bc	      4201	elf.c	FUNCTION_58	CALL_1
0x400a320	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a323	          0x4989d1	                             mov r9, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a326	          0x4921c9	                             and r9, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a329	          0x4d89cf	                             mov r15, r9	      4201	elf.c	FUNCTION_58	CALL_1
0x400a32c	          0x4d85c0	                             test r8, r8	      4203	elf.c	FUNCTION_58	IF_2
0x400a32f	        0x4c897d18	            mov qword [rbp + 0x18], r15 	      4202	elf.c	FUNCTION_58
0x400a333	            0x7407	                            je 0x400a33c	      4203	elf.c	FUNCTION_58	IF_2
0x400a335	    0x4d89b8900000	              mov qword [r8 + 0x90], r15	      4204	elf.c	FUNCTION_58	IF_2
0x400a33c	          0x83f808	                              cmp eax, 8	      4205	elf.c	FUNCTION_58	IF_3
0x400a33f	     0xf848bfeffff	                            je 0x400a1d0	      4205	elf.c	FUNCTION_58	IF_3
0x400a345	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x400a349	        0x4c037d20	             add r15, qword [rbp + 0x20]	      4206	elf.c	FUNCTION_58	IF_3
0x400a34d	          0x4939de	                            cmp r14, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x400a350	     0xf8787feffff	                            ja 0x400a1dd	      6297	elf.c	FUNCTION_75	FOR_1
0x400a356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6297	elf.c	FUNCTION_75	FOR_1
0x400a360	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6297	elf.c	FUNCTION_75	FOR_1
0x400a368	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6297	elf.c	FUNCTION_75	FOR_1
0x400a36f	        0x488b7a08	                mov rdi, qword [rdx + 8]	      6363	elf.c	FUNCTION_75	CALL_14
0x400a373	      0xe800000000	                          call 0x400a378	      6363	elf.c	FUNCTION_75	CALL_14
0x400a378	    0x498b9c24f800	            mov rbx, qword [r12 + 0xf8] 	      6364	elf.c	FUNCTION_75	CALL_15
0x400a380	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6365	elf.c	FUNCTION_75	CALL_17
0x400a387	        0x488b7808	                mov rdi, qword [rax + 8]	      6365	elf.c	FUNCTION_75	CALL_17
0x400a38b	      0xe800000000	                          call 0x400a390	      6365	elf.c	FUNCTION_75	CALL_17
0x400a390	    0x488b93e80000	            mov rdx, qword [rbx + 0xe8] 	      4200	elf.c	FUNCTION_58	IF_1
0x400a397	    0x488983d80000	             mov qword [rbx + 0xd8], rax	      6365	elf.c	FUNCTION_75	CALL_17
0x400a39e	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400a3a2	            0x761a	                           jbe 0x400a3be	      4200	elf.c	FUNCTION_58	IF_1
0x400a3a4	      0x4a8d4c3aff	                lea rcx, [rdx + r15 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x400a3a9	          0x4939cf	                            cmp r15, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a3ac	     0xf8757020000	                            ja 0x400a609	      4201	elf.c	FUNCTION_58	CALL_1
0x400a3b2	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a3b5	          0x4989d1	                             mov r9, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a3b8	          0x4921c9	                             and r9, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a3bb	          0x4d89cf	                             mov r15, r9	      4201	elf.c	FUNCTION_58	CALL_1
0x400a3be	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      4203	elf.c	FUNCTION_58	IF_2
0x400a3c5	    0x4c89bbd00000	             mov qword [rbx + 0xd0], r15	      4202	elf.c	FUNCTION_58
0x400a3cc	          0x4885d2	                           test rdx, rdx	      4203	elf.c	FUNCTION_58	IF_2
0x400a3cf	            0x7407	                            je 0x400a3d8	      4203	elf.c	FUNCTION_58	IF_2
0x400a3d1	    0x4c89ba900000	             mov qword [rdx + 0x90], r15	      4204	elf.c	FUNCTION_58	IF_2
0x400a3d8	          0x4c01f8	                            add rax, r15	      4206	elf.c	FUNCTION_58	IF_3
0x400a3db	    0x83bbbc000000	               cmp dword [rbx + 0xbc], 8	      4206	elf.c	FUNCTION_58	IF_3
0x400a3e2	    0x498bb424f800	            mov rsi, qword [r12 + 0xf8] 	      6369	elf.c	FUNCTION_75	CALL_19
0x400a3ea	        0x4c0f45f8	                         cmovne r15, rax	      4206	elf.c	FUNCTION_58	IF_3
0x400a3ee	      0x498b442408	                mov rax, qword [r12 + 8]	      6370	elf.c	FUNCTION_75	CALL_20
0x400a3f3	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400a3fa	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400a401	         0xfb6480b	            movzx ecx, byte [rax + 0xb] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400a405	      0xb801000000	                              mov eax, 1	      6371	elf.c	FUNCTION_75	CALL_21
0x400a40a	            0xd3e0	                             shl eax, cl	      6371	elf.c	FUNCTION_75	CALL_21
0x400a40c	          0x8b4e4c	            mov ecx, dword [rsi + 0x4c] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400a40f	          0x4863d0	                         movsxd rdx, eax	      4189	elf.c	FUNCTION_57
0x400a412	            0xf7d8	                                 neg eax	      4189	elf.c	FUNCTION_57
0x400a414	      0x498d5417ff	                lea rdx, [r15 + rdx - 1]	      4189	elf.c	FUNCTION_57
0x400a419	            0x4898	                                    cdqe	      4189	elf.c	FUNCTION_57
0x400a41b	         0xfaf4e48	            imul ecx, dword [rsi + 0x48]	      6374	elf.c	FUNCTION_75	CALL_22
0x400a41f	          0x4821c2	                            and rdx, rax	      4189	elf.c	FUNCTION_57
0x400a422	        0x48895620	             mov qword [rsi + 0x20], rdx	      6372	elf.c	FUNCTION_75
0x400a426	    0x498b9c24f800	            mov rbx, qword [r12 + 0xf8] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400a42e	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6374	elf.c	FUNCTION_75	CALL_22
0x400a435	          0x4801ca	                            add rdx, rcx	      6374	elf.c	FUNCTION_75	CALL_22
0x400a438	        0x48895040	             mov qword [rax + 0x40], rdx	      6374	elf.c	FUNCTION_75	CALL_22
0x400a43c	    0x8b93fc020000	           mov edx, dword [rbx + 0x2fc] 	      6403	elf.c	FUNCTION_76	CALL_6
0x400a442	          0x83fa01	                              cmp edx, 1	      6404	elf.c	FUNCTION_76	FOR_1
0x400a445	     0xf86ad000000	                           jbe 0x400a4f8	      6404	elf.c	FUNCTION_76	FOR_1
0x400a44b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400a450	          0x83ea02	                              sub edx, 2	      6404	elf.c	FUNCTION_76	FOR_1
0x400a453	        0x488d5908	                      lea rbx, [rcx + 8]	      6404	elf.c	FUNCTION_76	FOR_1
0x400a457	      0x4c8d74d110	          lea r14, [rcx + rdx*8 + 0x10] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400a45c	            0xeb11	                           jmp 0x400a46f	      6404	elf.c	FUNCTION_76	FOR_1
0x400a45e	            0x6690	                                     nop	      6404	elf.c	FUNCTION_76	FOR_1
0x400a460	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400a468	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400a46f	          0x488b2b	                    mov rbp, qword [rbx]	      6408	elf.c	FUNCTION_76	FOR_1
0x400a472	        0x488b7808	                mov rdi, qword [rax + 8]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400a476	          0x8b7500	                    mov esi, dword [rbp]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400a479	      0xe800000000	                          call 0x400a47e	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400a47e	          0x894500	                    mov dword [rbp], eax	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x400a481	    0x498b85880000	            mov rax, qword [r13 + 0x88] 	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400a488	          0x4885c0	                           test rax, rax	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400a48b	            0x7410	                            je 0x400a49d	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x400a48d	          0x488b33	                    mov rsi, qword [rbx]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400a490	          0x4c89e7	                            mov rdi, r12	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400a493	            0xffd0	                                call rax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400a495	            0x85c0	                           test eax, eax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400a497	     0xf84d9fcffff	                            je 0x400a176	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x400a49d	          0x488b03	                    mov rax, qword [rbx]	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400a4a0	      0x4883784800	               cmp qword [rax + 0x48], 0	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400a4a5	            0x7435	                            je 0x400a4dc	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x400a4a7	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400a4ab	            0x31d2	                            xor edx, edx	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400a4ad	          0x4c89e7	                            mov rdi, r12	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400a4b0	        0x488b6820	            mov rbp, qword [rax + 0x20] 	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x400a4b4	      0xe800000000	                          call 0x400a4b9	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400a4b9	            0x85c0	                           test eax, eax	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400a4bb	     0xf85b5fcffff	                           jne 0x400a176	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x400a4c1	          0x488b03	                    mov rax, qword [rbx]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4c4	          0x4c89e2	                            mov rdx, r12	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4c7	          0x4889ee	                            mov rsi, rbp	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4ca	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4ce	      0xe800000000	                          call 0x400a4d3	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4d3	          0x4839c5	                            cmp rbp, rax	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4d6	     0xf859afcffff	                           jne 0x400a176	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4dc	        0x4883c308	                              add rbx, 8	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x400a4e0	          0x4c39f3	                            cmp rbx, r14	      6404	elf.c	FUNCTION_76	FOR_1
0x400a4e3	     0xf8577ffffff	                           jne 0x400a460	      6404	elf.c	FUNCTION_76	FOR_1
0x400a4e9	    0x498b9c24f800	            mov rbx, qword [r12 + 0xf8] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400a4f1	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6404	elf.c	FUNCTION_76	FOR_1
0x400a4f8	      0x4883780800	                  cmp qword [rax + 8], 0	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400a4fd	            0x743c	                            je 0x400a53b	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x400a4ff	    0x488bb3d00000	            mov rsi, qword [rbx + 0xd0] 	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400a506	            0x31d2	                            xor edx, edx	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400a508	          0x4c89e7	                            mov rdi, r12	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400a50b	      0xe800000000	                          call 0x400a510	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400a510	            0x85c0	                           test eax, eax	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400a512	     0xf855efcffff	                           jne 0x400a176	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x400a518	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400a520	          0x4c89e7	                            mov rdi, r12	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400a523	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400a52a	        0x488b7008	                mov rsi, qword [rax + 8]	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400a52e	      0xe800000000	                          call 0x400a533	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400a533	            0x85c0	                           test eax, eax	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400a535	     0xf843bfcffff	                            je 0x400a176	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x400a53b	    0x498b85400100	           mov rax, qword [r13 + 0x140] 	      6429	elf.c	FUNCTION_76	IF_9
0x400a542	          0x4885c0	                           test rax, rax	      6429	elf.c	FUNCTION_76	IF_9
0x400a545	            0x7417	                            je 0x400a55e	      6429	elf.c	FUNCTION_76	IF_9
0x400a547	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	      6430	elf.c	FUNCTION_76	CALL_16
0x400a54f	          0x4c89e7	                            mov rdi, r12	      6430	elf.c	FUNCTION_76	CALL_16
0x400a552	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      6430	elf.c	FUNCTION_76	CALL_16
0x400a559	          0x8b7258	            mov esi, dword [rdx + 0x58] 	      6430	elf.c	FUNCTION_76	CALL_16
0x400a55c	            0xffd0	                                call rax	      6430	elf.c	FUNCTION_76	CALL_16
0x400a55e	    0x498b85000300	           mov rax, qword [r13 + 0x300] 	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400a565	          0x4c89e7	                            mov rdi, r12	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400a568	          0xff5018	                 call qword [rax + 0x18]	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400a56b	            0x85c0	                           test eax, eax	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400a56d	     0xf8403fcffff	                            je 0x400a176	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x400a573	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6436	elf.c	FUNCTION_76	IF_11
0x400a57a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6436	elf.c	FUNCTION_76	IF_11
0x400a57e	      0xb801000000	                              mov eax, 1	      6439	elf.c	FUNCTION_76
0x400a583	          0x4885d2	                           test rdx, rdx	      6436	elf.c	FUNCTION_76	IF_11
0x400a586	     0xf84ecfbffff	                            je 0x400a178	      6436	elf.c	FUNCTION_76	IF_11
0x400a58c	          0x4c89e7	                            mov rdi, r12	      6437	elf.c	FUNCTION_76	IF_11
0x400a58f	            0xffd2	                                call rdx	      6437	elf.c	FUNCTION_76	IF_11
0x400a591	      0xe9e2fbffff	                           jmp 0x400a178	      6437	elf.c	FUNCTION_76	IF_11
0x400a596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6437	elf.c	FUNCTION_76	IF_11
0x400a5a0	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x400a5a4	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400a5a8	     0xf867efdffff	                           jbe 0x400a32c	      4200	elf.c	FUNCTION_58	IF_1
0x400a5ae	      0x4a8d4c3aff	                lea rcx, [rdx + r15 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x400a5b3	          0x4939cf	                            cmp r15, rcx	      4201	elf.c	FUNCTION_58	CALL_1
0x400a5b6	     0xf8664fdffff	                           jbe 0x400a320	      4201	elf.c	FUNCTION_58	CALL_1
0x400a5bc	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400a5c3	      0xe964fdffff	                           jmp 0x400a32c	      4201	elf.c	FUNCTION_58	CALL_1
0x400a5c8	     0xf1f84000000	                   nop dword [rax + rax]	      4201	elf.c	FUNCTION_58	CALL_1
0x400a5d0	    0x41f644244640	           test byte [r12 + 0x46], 0x40 	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a5d6	     0xf8568fcffff	                           jne 0x400a244	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a5dc	        0x488b3424	                    mov rsi, qword [rsp]	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a5e0	          0x4c89e7	                            mov rdi, r12	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a5e3	      0xe8585dffff	        call sym.convert_debug_to_zdebug	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a5e8	          0x4885c0	                           test rax, rax	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400a5eb	        0x48890424	                    mov qword [rsp], rax	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400a5ef	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400a5f4	     0xf854afcffff	                           jne 0x400a244	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400a5fa	      0xe977fbffff	                           jmp 0x400a176	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400a5ff	              0x90	                                     nop	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400a600	        0x4c897d18	            mov qword [rbp + 0x18], r15 	      4202	elf.c	FUNCTION_58
0x400a604	      0xe92cfdffff	                           jmp 0x400a335	      4202	elf.c	FUNCTION_58
0x400a609	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x400a610	      0xe9a9fdffff	                           jmp 0x400a3be	      4201	elf.c	FUNCTION_58	CALL_1
0x400a615	      0xe800000000	                          call 0x400a61a	      6440	elf.c	FUNCTION_76
0x400a61a	      0xba00000000	                              mov edx, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400a61f	      0xbebb180000	                         mov esi, 0x18bb	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400a624	      0xbf00000000	                              mov edi, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400a629	      0xe800000000	                          call 0x400a62e	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
_bfd_elf_init_private_section_data	SWITCH,0:CALL,25:IF,7:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	112
0x400a740	          0x4d85c0	                             test r8, r8	      7495	elf.c	FUNCTION_83	CALL_1
0x400a743	            0x4156	                                push r14	      7492	elf.c	FUNCTION_83
0x400a745	            0x4155	                                push r13	      7492	elf.c	FUNCTION_83
0x400a747	            0x4154	                                push r12	      7492	elf.c	FUNCTION_83
0x400a749	              0x55	                                push rbp	      7492	elf.c	FUNCTION_83
0x400a74a	              0x53	                                push rbx	      7492	elf.c	FUNCTION_83
0x400a74b	     0xf843f010000	                            je 0x400a890	      7495	elf.c	FUNCTION_83	CALL_1
0x400a751	        0x410fb600	                    movzx eax, byte [r8]	      7495	elf.c	FUNCTION_83	CALL_1
0x400a755	            0x31ed	                            xor ebp, ebp	      7495	elf.c	FUNCTION_83	CALL_1
0x400a757	          0x83e003	                              and eax, 3	      7495	elf.c	FUNCTION_83	CALL_1
0x400a75a	            0x3c02	                               cmp al, 2	      7495	elf.c	FUNCTION_83	CALL_1
0x400a75c	        0x400f95c5	                               setne bpl	      7495	elf.c	FUNCTION_83	CALL_1
0x400a760	        0x488b4708	                mov rax, qword [rdi + 8]	      7497	elf.c	FUNCTION_83	IF_1
0x400a764	        0x83780805	                  cmp dword [rax + 8], 5	      7497	elf.c	FUNCTION_83	IF_1
0x400a768	            0x7416	                            je 0x400a780	      7497	elf.c	FUNCTION_83	IF_1
0x400a76a	              0x5b	                                 pop rbx	      7558	elf.c	FUNCTION_83
0x400a76b	      0xb801000000	                              mov eax, 1	      7558	elf.c	FUNCTION_83
0x400a770	              0x5d	                                 pop rbp	      7558	elf.c	FUNCTION_83
0x400a771	            0x415c	                                 pop r12	      7558	elf.c	FUNCTION_83
0x400a773	            0x415d	                                 pop r13	      7558	elf.c	FUNCTION_83
0x400a775	            0x415e	                                 pop r14	      7558	elf.c	FUNCTION_83
0x400a777	              0xc3	                                     ret	      7558	elf.c	FUNCTION_83
0x400a778	     0xf1f84000000	                   nop dword [rax + rax]	      7558	elf.c	FUNCTION_83
0x400a780	        0x488b4208	                mov rax, qword [rdx + 8]	      7498	elf.c	FUNCTION_83	IF_1
0x400a784	        0x83780805	                  cmp dword [rax + 8], 5	      7498	elf.c	FUNCTION_83	IF_1
0x400a788	            0x75e0	                           jne 0x400a76a	      7498	elf.c	FUNCTION_83	IF_1
0x400a78a	    0x488b81e00000	            mov rax, qword [rcx + 0xe0] 	      7501	elf.c	FUNCTION_83	CALL_3
0x400a791	          0x4d89c6	                             mov r14, r8	      7501	elf.c	FUNCTION_83	CALL_3
0x400a794	          0x4989cd	                            mov r13, rcx	      7501	elf.c	FUNCTION_83	CALL_3
0x400a797	          0x4889f3	                            mov rbx, rsi	      7501	elf.c	FUNCTION_83	CALL_3
0x400a79a	          0x4989fc	                            mov r12, rdi	      7501	elf.c	FUNCTION_83	CALL_3
0x400a79d	          0x4885c0	                           test rax, rax	      7501	elf.c	FUNCTION_83	CALL_3
0x400a7a0	     0xf842a010000	                            je 0x400a8d0	      7501	elf.c	FUNCTION_83	CALL_3
0x400a7a6	          0x8b5004	                mov edx, dword [rax + 4]	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x400a7a9	            0x85d2	                           test edx, edx	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x400a7ab	            0x7517	                           jne 0x400a7c4	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x400a7ad	        0x418b7520	            mov esi, dword [r13 + 0x20] 	      7508	elf.c	FUNCTION_83	IF_2
0x400a7b1	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      7508	elf.c	FUNCTION_83	IF_2
0x400a7b4	            0x39d6	                            cmp esi, edx	      7508	elf.c	FUNCTION_83	IF_2
0x400a7b6	     0xf8402010000	                            je 0x400a8be	      7508	elf.c	FUNCTION_83	IF_2
0x400a7bc	            0x85ed	                           test ebp, ebp	      7509	elf.c	FUNCTION_83	IF_2
0x400a7be	     0xf85ec000000	                           jne 0x400a8b0	      7509	elf.c	FUNCTION_83	IF_2
0x400a7c4	    0x488bb3e00000	            mov rsi, qword [rbx + 0xe0] 	      7509	elf.c	FUNCTION_83	IF_2
0x400a7cb	        0x488b5608	                mov rdx, qword [rsi + 8]	      7515	elf.c	FUNCTION_83	CALL_8
0x400a7cf	    0x81e20000f0ff	                     and edx, 0xfff00000	      7515	elf.c	FUNCTION_83	CALL_8
0x400a7d5	        0x480b5008	                 or rdx, qword [rax + 8]	      7515	elf.c	FUNCTION_83	CALL_8
0x400a7d9	        0x48895008	                mov qword [rax + 8], rdx	      7515	elf.c	FUNCTION_83	CALL_8
0x400a7dd	        0x488b7e08	                mov rdi, qword [rsi + 8]	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x400a7e1	    0xf7c700000001	                     test edi, 0x1000000	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x400a7e7	            0x7408	                            je 0x400a7f1	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x400a7e9	        0x448b4e2c	            mov r9d, dword [rsi + 0x2c] 	      7521	elf.c	FUNCTION_83	CALL_11
0x400a7ed	        0x4489482c	             mov dword [rax + 0x2c], r9d	      7521	elf.c	FUNCTION_83	CALL_11
0x400a7f1	          0x4d85f6	                           test r14, r14	      7527	elf.c	FUNCTION_83	IF_4
0x400a7f4	            0x7407	                            je 0x400a7fd	      7527	elf.c	FUNCTION_83	IF_4
0x400a7f6	      0x41f6460110	               test byte [r14 + 1], 0x10	      7528	elf.c	FUNCTION_83	IF_4
0x400a7fb	            0x7542	                           jne 0x400a83f	      7528	elf.c	FUNCTION_83	IF_4
0x400a7fd	    0x4c8b86b80000	              mov r8, qword [rsi + 0xb8]	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x400a804	          0x4d85c0	                             test r8, r8	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x400a807	            0x7407	                            je 0x400a810	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x400a809	      0x41f6402210	            test byte [r8 + 0x22], 0x10 	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x400a80e	            0x752f	                           jne 0x400a83f	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x400a810	    0xf7c700020000	                         test edi, 0x200	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x400a816	            0x740b	                            je 0x400a823	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x400a818	          0x80ce02	                                or dh, 2	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x400a81b	        0x48895008	                mov qword [rax + 8], rdx	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x400a81f	        0x488b7e08	                mov rdi, qword [rsi + 8]	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x400a823	    0x488b96c00000	            mov rdx, qword [rsi + 0xc0] 	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x400a82a	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x400a831	    0x488b96b00000	            mov rdx, qword [rsi + 0xb0] 	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x400a838	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x400a83f	            0x85ed	                           test ebp, ebp	      7539	elf.c	FUNCTION_83	IF_6
0x400a841	            0x7508	                           jne 0x400a84b	      7539	elf.c	FUNCTION_83	IF_6
0x400a843	    0x41f644244610	           test byte [r12 + 0x46], 0x10 	      7539	elf.c	FUNCTION_83	IF_6
0x400a849	            0x7455	                            je 0x400a8a0	      7539	elf.c	FUNCTION_83	IF_6
0x400a84b	    0x81e780000000	                           and edi, 0x80	      7548	elf.c	FUNCTION_83	IF_7
0x400a851	            0x7416	                            je 0x400a869	      7548	elf.c	FUNCTION_83	IF_7
0x400a853	    0x488b96900000	            mov rdx, qword [rsi + 0x90] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x400a85a	    0x488148088000	                or qword [rax + 8], 0x80	      7551	elf.c	FUNCTION_83	IF_7
0x400a862	    0x488990900000	             mov qword [rax + 0x90], rdx	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x400a869	         0xfb64325	           movzx eax, byte [rbx + 0x25] 	      7555	elf.c	FUNCTION_83
0x400a86d	      0x410fb65525	           movzx edx, byte [r13 + 0x25] 	      7555	elf.c	FUNCTION_83
0x400a872	          0x83e004	                              and eax, 4	      7555	elf.c	FUNCTION_83
0x400a875	          0x83e2fb	                     and edx, 0xfffffffb	      7555	elf.c	FUNCTION_83
0x400a878	             0x9d0	                             or eax, edx	      7555	elf.c	FUNCTION_83
0x400a87a	        0x41884525	               mov byte [r13 + 0x25], al	      7555	elf.c	FUNCTION_83
0x400a87e	      0xb801000000	                              mov eax, 1	      7558	elf.c	FUNCTION_83
0x400a883	              0x5b	                                 pop rbx	      7558	elf.c	FUNCTION_83
0x400a884	              0x5d	                                 pop rbp	      7558	elf.c	FUNCTION_83
0x400a885	            0x415c	                                 pop r12	      7558	elf.c	FUNCTION_83
0x400a887	            0x415d	                                 pop r13	      7558	elf.c	FUNCTION_83
0x400a889	            0x415e	                                 pop r14	      7558	elf.c	FUNCTION_83
0x400a88b	              0xc3	                                     ret	      7558	elf.c	FUNCTION_83
0x400a88c	         0xf1f4000	                         nop dword [rax]	      7558	elf.c	FUNCTION_83
0x400a890	            0x31ed	                            xor ebp, ebp	      7495	elf.c	FUNCTION_83	CALL_1
0x400a892	      0xe9c9feffff	                           jmp 0x400a760	      7495	elf.c	FUNCTION_83	CALL_1
0x400a897	    0x660f1f840000	                    nop word [rax + rax]	      7495	elf.c	FUNCTION_83	CALL_1
0x400a8a0	    0x81e700080000	                          and edi, 0x800	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x400a8a6	        0x48097808	                 or qword [rax + 8], rdi	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x400a8aa	        0x488b7e08	                mov rdi, qword [rsi + 8]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x400a8ae	            0xeb9b	                           jmp 0x400a84b	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x400a8b0	            0x31f2	                            xor edx, esi	      7510	elf.c	FUNCTION_83	IF_2
0x400a8b2	    0x81e2fbfff1ff	                     and edx, 0xfff1fffb	      7510	elf.c	FUNCTION_83	IF_2
0x400a8b8	     0xf8506ffffff	                           jne 0x400a7c4	      7510	elf.c	FUNCTION_83	IF_2
0x400a8be	    0x488bb3e00000	            mov rsi, qword [rbx + 0xe0] 	      7512	elf.c	FUNCTION_83	CALL_6
0x400a8c5	          0x8b5604	                mov edx, dword [rsi + 4]	      7512	elf.c	FUNCTION_83	CALL_6
0x400a8c8	          0x895004	                mov dword [rax + 4], edx	      7512	elf.c	FUNCTION_83	CALL_6
0x400a8cb	      0xe9fbfeffff	                           jmp 0x400a7cb	      7512	elf.c	FUNCTION_83	CALL_6
0x400a8d0	      0xbe4d1d0000	                         mov esi, 0x1d4d	      7501	elf.c	FUNCTION_83	CALL_3
0x400a8d5	      0xbf00000000	                              mov edi, 0	      7501	elf.c	FUNCTION_83	CALL_3
0x400a8da	      0xe800000000	                          call 0x400a8df	      7501	elf.c	FUNCTION_83	CALL_3
0x400a8df	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      7501	elf.c	FUNCTION_83	CALL_3
0x400a8e6	      0xe9bbfeffff	                           jmp 0x400a7a6	      7501	elf.c	FUNCTION_83	CALL_3
_bfd_elf_set_arch_mach	SWITCH,0:CALL,3:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	15
0x400e0b0	        0x488b4708	                mov rax, qword [rdi + 8]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400e0b4	            0x85f6	                           test esi, esi	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0b6	        0x410f95c0	                               setne r8b	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0ba	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400e0c1	            0x8b00	                    mov eax, dword [rax]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400e0c3	            0x39f0	                            cmp eax, esi	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0c5	           0xf95c1	                                setne cl	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0c8	          0x4184c8	                            test r8b, cl	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0cb	            0x740b	                            je 0x400e0d8	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0cd	            0x85c0	                           test eax, eax	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0cf	            0x7407	                            je 0x400e0d8	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400e0d1	            0x31c0	                            xor eax, eax	      8732	elf.c	FUNCTION_102
0x400e0d3	              0xc3	                                     ret	      8732	elf.c	FUNCTION_102
0x400e0d4	         0xf1f4000	                         nop dword [rax]	      8732	elf.c	FUNCTION_102
0x400e0d8	      0xe900000000	                           jmp 0x400e0dd	      8731	elf.c	FUNCTION_102	CALL_3
bfd_elf_generic_reloc	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	17
0x4002bf0	          0x4d85c9	                             test r9, r9	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002bf3	      0xb805000000	                              mov eax, 5	      1291	elf.c	ELSE_12	FUNCTION_27
0x4002bf8	            0x742d	                            je 0x4002c27	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002bfa	        0xf6421901	               test byte [rdx + 0x19], 1	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002bfe	            0x7527	                           jne 0x4002c27	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c00	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c04	          0x8b5230	            mov edx, dword [rdx + 0x30] 	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c07	            0x85d2	                           test edx, edx	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c09	            0x7515	                           jne 0x4002c20	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c0b	        0x498b4060	              mov rax, qword [r8 + 0x60]	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c0f	        0x48014608	                add qword [rsi + 8], rax	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c13	      0xb802000000	                              mov eax, 2	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c18	              0xc3	                                     ret	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c19	     0xf1f80000000	                         nop dword [rax]	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c20	      0x48837e1000	               cmp qword [rsi + 0x10], 0	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c25	            0x74e4	                            je 0x4002c0b	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002c27	            0xf3c3	                                     ret	      1292	elf.c	ELSE_12	FUNCTION_27
elfcore_write_prstatus	SWITCH,0:CALL,8:IF,3:functions,0:ELSE,1:DO,0:WHILE,0:FOR,0	101
0x4010610	            0x4157	                                push r15	     10644	elf.c	FUNCTION_165
0x4010612	            0x4156	                                push r14	     10644	elf.c	FUNCTION_165
0x4010614	          0x4989ca	                            mov r10, rcx	     10644	elf.c	FUNCTION_165
0x4010617	            0x4155	                                push r13	     10644	elf.c	FUNCTION_165
0x4010619	            0x4154	                                push r12	     10644	elf.c	FUNCTION_165
0x401061b	          0x4989f5	                            mov r13, rsi	     10644	elf.c	FUNCTION_165
0x401061e	              0x55	                                push rbp	     10644	elf.c	FUNCTION_165
0x401061f	              0x53	                                push rbx	     10644	elf.c	FUNCTION_165
0x4010620	          0x4889fd	                            mov rbp, rdi	     10644	elf.c	FUNCTION_165
0x4010623	          0x4989d6	                            mov r14, rdx	     10644	elf.c	FUNCTION_165
0x4010626	          0x4589c7	                           mov r15d, r8d	     10644	elf.c	FUNCTION_165
0x4010629	          0x4c89cb	                             mov rbx, r9	     10644	elf.c	FUNCTION_165
0x401062c	    0x4881ec780100	                          sub rsp, 0x178	     10644	elf.c	FUNCTION_165
0x4010633	    0x64488b042528	                mov rax, qword fs:[0x28]	     10644	elf.c	FUNCTION_165
0x401063c	    0x488984246801	            mov qword [rsp + 0x168], rax	     10644	elf.c	FUNCTION_165
0x4010644	            0x31c0	                            xor eax, eax	     10644	elf.c	FUNCTION_165
0x4010646	        0x488b4708	                mov rax, qword [rdi + 8]	     10645	elf.c	FUNCTION_165	CALL_1
0x401064a	    0x4c8ba0680300	           mov r12, qword [rax + 0x368] 	     10645	elf.c	FUNCTION_165	CALL_1
0x4010651	    0x4d8b9c242002	           mov r11, qword [r12 + 0x220] 	     10647	elf.c	FUNCTION_165	IF_1
0x4010659	          0x4d85db	                           test r11, r11	     10647	elf.c	FUNCTION_165	IF_1
0x401065c	            0x7452	                            je 0x40106b0	     10647	elf.c	FUNCTION_165	IF_1
0x401065e	        0x4883ec08	                              sub rsp, 8	     10650	elf.c	FUNCTION_165	IF_1
0x4010662	            0x31c0	                            xor eax, eax	     10650	elf.c	FUNCTION_165	IF_1
0x4010664	            0x4151	                                 push r9	     10650	elf.c	FUNCTION_165	IF_1
0x4010666	          0x4589c1	                            mov r9d, r8d	     10650	elf.c	FUNCTION_165	IF_1
0x4010669	          0x4989c8	                             mov r8, rcx	     10650	elf.c	FUNCTION_165	IF_1
0x401066c	      0x48894c2418	             mov qword [rsp + 0x18], rcx	     10650	elf.c	FUNCTION_165	IF_1
0x4010671	      0xb901000000	                              mov ecx, 1	     10650	elf.c	FUNCTION_165	IF_1
0x4010676	          0x41ffd3	                                call r11	     10650	elf.c	FUNCTION_165	IF_1
0x4010679	              0x5e	                                 pop rsi	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x401067a	          0x4885c0	                           test rax, rax	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x401067d	              0x5f	                                 pop rdi	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x401067e	      0x4c8b542408	                mov r10, qword [rsp + 8]	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x4010683	            0x742b	                            je 0x40106b0	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x4010685	    0x488b94246801	           mov rdx, qword [rsp + 0x168] 	     10686	elf.c	FUNCTION_165
0x401068d	    0x644833142528	                xor rdx, qword fs:[0x28]	     10686	elf.c	FUNCTION_165
0x4010696	     0xf850c010000	                           jne 0x40107a8	     10686	elf.c	FUNCTION_165
0x401069c	    0x4881c4780100	                          add rsp, 0x178	     10686	elf.c	FUNCTION_165
0x40106a3	              0x5b	                                 pop rbx	     10686	elf.c	FUNCTION_165
0x40106a4	              0x5d	                                 pop rbp	     10686	elf.c	FUNCTION_165
0x40106a5	            0x415c	                                 pop r12	     10686	elf.c	FUNCTION_165
0x40106a7	            0x415d	                                 pop r13	     10686	elf.c	FUNCTION_165
0x40106a9	            0x415e	                                 pop r14	     10686	elf.c	FUNCTION_165
0x40106ab	            0x415f	                                 pop r15	     10686	elf.c	FUNCTION_165
0x40106ad	              0xc3	                                     ret	     10686	elf.c	FUNCTION_165
0x40106ae	            0x6690	                                     nop	     10686	elf.c	FUNCTION_165
0x40106b0	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	     10659	elf.c	FUNCTION_165	IF_3
0x40106b8	        0x80780c01	                 cmp byte [rax + 0xc], 1	     10659	elf.c	FUNCTION_165	IF_3
0x40106bc	            0x7462	                            je 0x4010720	     10659	elf.c	FUNCTION_165	IF_3
0x40106be	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	        90	string3.h	FUNCTION_207	CALL_6
0x40106c3	      0xb92a000000	                           mov ecx, 0x2a	        90	string3.h	FUNCTION_207	CALL_6
0x40106c8	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_207	CALL_6
0x40106ca	          0x4889de	                            mov rsi, rbx	        90	string3.h	FUNCTION_207	CALL_6
0x40106cd	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_207	CALL_6
0x40106d0	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_207	CALL_6
0x40106d3	      0x4489542430	            mov dword [rsp + 0x30], r10d	     10676	elf.c	FUNCTION_165	ELSE_1
0x40106d8	    0x6644897c241c	             mov word [rsp + 0x1c], r15w	     10677	elf.c	FUNCTION_165	ELSE_1
0x40106de	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	     10677	elf.c	FUNCTION_165	ELSE_1
0x40106e6	        0x4883ec08	                              sub rsp, 8	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x40106ea	      0xb91b000000	                           mov ecx, 0x1b	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x40106ef	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x40106f2	      0x6850010000	                              push 0x150	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x40106f7	      0xb900000000	                              mov ecx, 0	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x40106fc	          0x4c89f2	                            mov rdx, r14	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x40106ff	    0x41b801000000	                              mov r8d, 1	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4010705	          0x4c89ee	                            mov rsi, r13	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4010708	          0x4889ef	                            mov rdi, rbp	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x401070b	      0xe800000000	                          call 0x4010710	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4010710	              0x5a	                                 pop rdx	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4010711	              0x59	                                 pop rcx	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4010712	      0xe96effffff	                           jmp 0x4010685	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4010717	    0x660f1f840000	                    nop word [rax + rax]	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x4010720	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	        90	string3.h	FUNCTION_207	CALL_6
0x4010725	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_207	CALL_6
0x4010727	      0xb912000000	                           mov ecx, 0x12	        90	string3.h	FUNCTION_207	CALL_6
0x401072c	        0x4883ec08	                              sub rsp, 8	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x4010730	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_207	CALL_6
0x4010733	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_207	CALL_6
0x4010736	          0x488b03	                    mov rax, qword [rbx]	        90	string3.h	FUNCTION_207	CALL_6
0x4010739	      0x4489542430	            mov dword [rsp + 0x30], r10d	     10664	elf.c	FUNCTION_165	IF_3
0x401073e	    0x6644897c2424	             mov word [rsp + 0x24], r15w	     10665	elf.c	FUNCTION_165	IF_3
0x4010744	      0x4889442460	             mov qword [rsp + 0x60], rax	     10665	elf.c	FUNCTION_165	IF_3
0x4010749	        0x488b4308	                mov rax, qword [rbx + 8]	     10665	elf.c	FUNCTION_165	IF_3
0x401074d	      0x4889442468	             mov qword [rsp + 0x68], rax	     10665	elf.c	FUNCTION_165	IF_3
0x4010752	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10665	elf.c	FUNCTION_165	IF_3
0x4010756	      0x4889442470	             mov qword [rsp + 0x70], rax	     10665	elf.c	FUNCTION_165	IF_3
0x401075b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10665	elf.c	FUNCTION_165	IF_3
0x401075f	      0x4889442478	             mov qword [rsp + 0x78], rax	     10665	elf.c	FUNCTION_165	IF_3
0x4010764	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10665	elf.c	FUNCTION_165	IF_3
0x4010768	    0x488984248000	             mov qword [rsp + 0x80], rax	     10665	elf.c	FUNCTION_165	IF_3
0x4010770	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10665	elf.c	FUNCTION_165	IF_3
0x4010774	    0x488984248800	             mov qword [rsp + 0x88], rax	     10665	elf.c	FUNCTION_165	IF_3
0x401077c	        0x488b4330	            mov rax, qword [rbx + 0x30] 	     10665	elf.c	FUNCTION_165	IF_3
0x4010780	    0x488984249000	             mov qword [rsp + 0x90], rax	     10665	elf.c	FUNCTION_165	IF_3
0x4010788	        0x488b4338	            mov rax, qword [rbx + 0x38] 	     10665	elf.c	FUNCTION_165	IF_3
0x401078c	    0x488984249800	             mov qword [rsp + 0x98], rax	     10665	elf.c	FUNCTION_165	IF_3
0x4010794	          0x8b4340	            mov eax, dword [rbx + 0x40] 	     10665	elf.c	FUNCTION_165	IF_3
0x4010797	    0x898424a00000	             mov dword [rsp + 0xa0], eax	     10665	elf.c	FUNCTION_165	IF_3
0x401079e	      0x6890000000	                               push 0x90	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x40107a3	      0xe94fffffff	                           jmp 0x40106f7	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x40107a8	      0xe800000000	                          call 0x40107ad	     10686	elf.c	FUNCTION_165
bfd_elf_hash	SWITCH,0:CALL,0:IF,1:functions,0:ELSE,0:DO,0:WHILE,1:FOR,0	20
0x4002080	            0x31c0	                            xor eax, eax	       201	elf.c	FUNCTION_11
0x4002082	    0x660f1f440000	                    nop word [rax + rax]	       201	elf.c	FUNCTION_11
0x4002088	        0x4883c701	                              add rdi, 1	       205	elf.c	FUNCTION_11	WHILE_1
0x400208c	         0xfb657ff	               movzx edx, byte [rdi - 1]	       205	elf.c	FUNCTION_11	WHILE_1
0x4002090	            0x84d2	                             test dl, dl	       205	elf.c	FUNCTION_11	WHILE_1
0x4002092	            0x7428	                            je 0x40020bc	       205	elf.c	FUNCTION_11	WHILE_1
0x4002094	        0x48c1e004	                              shl rax, 4	       207	elf.c	FUNCTION_11	WHILE_1
0x4002098	          0x4801d0	                            add rax, rdx	       207	elf.c	FUNCTION_11	WHILE_1
0x400209b	          0x4889c2	                            mov rdx, rax	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x400209e	    0x81e2000000f0	                     and edx, 0xf0000000	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x40020a4	            0x74e2	                            je 0x4002088	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x40020a6	          0x4831d0	                            xor rax, rdx	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x40020a9	        0x4883c701	                              add rdi, 1	       205	elf.c	FUNCTION_11	WHILE_1
0x40020ad	        0x48c1ea18	                           shr rdx, 0x18	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x40020b1	          0x4831d0	                            xor rax, rdx	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x40020b4	         0xfb657ff	               movzx edx, byte [rdi - 1]	       205	elf.c	FUNCTION_11	WHILE_1
0x40020b8	            0x84d2	                             test dl, dl	       205	elf.c	FUNCTION_11	WHILE_1
0x40020ba	            0x75d8	                           jne 0x4002094	       205	elf.c	FUNCTION_11	WHILE_1
0x40020bc	            0x89c0	                            mov eax, eax	       216	elf.c	FUNCTION_11
0x40020be	              0xc3	                                     ret	       217	elf.c	FUNCTION_11
_bfd_elf_canonicalize_dynamic_reloc	SWITCH,0:CALL,9:IF,3:functions,0:ELSE,0:DO,0:WHILE,0:FOR,2	82
0x400c930	            0x4157	                                push r15	      8241	elf.c	FUNCTION_96
0x400c932	            0x4156	                                push r14	      8241	elf.c	FUNCTION_96
0x400c934	            0x4155	                                push r13	      8241	elf.c	FUNCTION_96
0x400c936	            0x4154	                                push r12	      8241	elf.c	FUNCTION_96
0x400c938	              0x55	                                push rbp	      8241	elf.c	FUNCTION_96
0x400c939	              0x53	                                push rbx	      8241	elf.c	FUNCTION_96
0x400c93a	        0x4883ec08	                              sub rsp, 8	      8241	elf.c	FUNCTION_96
0x400c93e	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400c945	    0x8b887c0c0000	           mov ecx, dword [rax + 0xc7c] 	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400c94b	            0x85c9	                           test ecx, ecx	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400c94d	     0xf84ec000000	                            je 0x400ca3f	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400c953	        0x488b4708	                mov rax, qword [rdi + 8]	      8252	elf.c	FUNCTION_96	CALL_4
0x400c957	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400c95e	          0x4989fd	                            mov r13, rdi	      8254	elf.c	FUNCTION_96	FOR_1
0x400c961	          0x4989f6	                            mov r14, rsi	      8254	elf.c	FUNCTION_96	FOR_1
0x400c964	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400c96b	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400c96e	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400c975	        0x488b6840	            mov rbp, qword [rax + 0x40] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400c979	     0xf84bb000000	                            je 0x400ca3a	      8254	elf.c	FUNCTION_96	FOR_1
0x400c97f	          0x4989d4	                            mov r12, rdx	      8254	elf.c	FUNCTION_96	FOR_1
0x400c982	          0x4531ff	                          xor r15d, r15d	      8254	elf.c	FUNCTION_96	FOR_1
0x400c985	            0xeb1f	                           jmp 0x400c9a6	      8254	elf.c	FUNCTION_96	FOR_1
0x400c987	    0x660f1f840000	                    nop word [rax + rax]	      8254	elf.c	FUNCTION_96	FOR_1
0x400c990	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400c994	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400c997	            0x747f	                            je 0x400ca18	      8254	elf.c	FUNCTION_96	FOR_1
0x400c999	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400c9a0	    0x8b887c0c0000	           mov ecx, dword [rax + 0xc7c] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400c9a6	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400c9ad	          0x394a28	            cmp dword [rdx + 0x28], ecx 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400c9b0	            0x75de	                           jne 0x400c990	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400c9b2	          0x8b4204	                mov eax, dword [rdx + 4]	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400c9b5	          0x83f809	                              cmp eax, 9	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400c9b8	            0x7405	                            je 0x400c9bf	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400c9ba	          0x83f804	                              cmp eax, 4	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400c9bd	            0x75d1	                           jne 0x400c990	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400c9bf	      0xb901000000	                              mov ecx, 1	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400c9c4	          0x4c89e2	                            mov rdx, r12	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400c9c7	          0x4889de	                            mov rsi, rbx	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400c9ca	          0x4c89ef	                            mov rdi, r13	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400c9cd	            0xffd5	                                call rbp	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400c9cf	            0x85c0	                           test eax, eax	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400c9d1	            0x745e	                            je 0x400ca31	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400c9d3	    0x488bbbe00000	            mov rdi, qword [rbx + 0xe0] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400c9da	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400c9de	            0x31d2	                            xor edx, edx	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400c9e0	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      8266	elf.c	FUNCTION_96	FOR_1	IF_2
0x400c9e4	        0x48f77738	                  div qword [rdi + 0x38]	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400c9e8	          0x4885c0	                           test rax, rax	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9eb	            0x7e18	                           jle 0x400ca05	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9ed	            0x31c9	                            xor ecx, ecx	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9ef	              0x90	                                     nop	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9f0	        0x498934ce	            mov qword [r14 + rcx*8], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9f4	        0x4883c101	                              add rcx, 1	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9f8	        0x4883c620	                           add rsi, 0x20	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9fc	          0x4839c8	                            cmp rax, rcx	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400c9ff	            0x75ef	                           jne 0x400c9f0	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400ca01	        0x4d8d34c6	                  lea r14, [r14 + rax*8]	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400ca05	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400ca09	          0x4901c7	                            add r15, rax	      8269	elf.c	FUNCTION_96	FOR_1	IF_2
0x400ca0c	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400ca0f	            0x7588	                           jne 0x400c999	      8254	elf.c	FUNCTION_96	FOR_1
0x400ca11	     0xf1f80000000	                         nop dword [rax]	      8254	elf.c	FUNCTION_96	FOR_1
0x400ca18	    0x49c706000000	                      mov qword [r14], 0	      8273	elf.c	FUNCTION_96
0x400ca1f	          0x4c89f8	                            mov rax, r15	      8275	elf.c	FUNCTION_96
0x400ca22	        0x4883c408	                              add rsp, 8	      8276	elf.c	FUNCTION_96
0x400ca26	              0x5b	                                 pop rbx	      8276	elf.c	FUNCTION_96
0x400ca27	              0x5d	                                 pop rbp	      8276	elf.c	FUNCTION_96
0x400ca28	            0x415c	                                 pop r12	      8276	elf.c	FUNCTION_96
0x400ca2a	            0x415d	                                 pop r13	      8276	elf.c	FUNCTION_96
0x400ca2c	            0x415e	                                 pop r14	      8276	elf.c	FUNCTION_96
0x400ca2e	            0x415f	                                 pop r15	      8276	elf.c	FUNCTION_96
0x400ca30	              0xc3	                                     ret	      8276	elf.c	FUNCTION_96
0x400ca31	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8264	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400ca38	            0xebe8	                           jmp 0x400ca22	      8264	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400ca3a	          0x4531ff	                          xor r15d, r15d	      8253	elf.c	FUNCTION_96
0x400ca3d	            0xebd9	                           jmp 0x400ca18	      8253	elf.c	FUNCTION_96
0x400ca3f	      0xbf05000000	                              mov edi, 5	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x400ca44	      0xe800000000	                          call 0x400ca49	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x400ca49	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8249	elf.c	FUNCTION_96	IF_1
0x400ca50	            0xebd0	                           jmp 0x400ca22	      8249	elf.c	FUNCTION_96	IF_1
_bfd_elf_compute_section_file_positions	SWITCH,0:CALL,21:IF,14:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	3136
0x4006ac0	            0x4157	                                push r15	      4217	elf.c	FUNCTION_59
0x4006ac2	            0x4156	                                push r14	      4217	elf.c	FUNCTION_59
0x4006ac4	            0x4155	                                push r13	      4217	elf.c	FUNCTION_59
0x4006ac6	            0x4154	                                push r12	      4217	elf.c	FUNCTION_59
0x4006ac8	              0x55	                                push rbp	      4217	elf.c	FUNCTION_59
0x4006ac9	              0x53	                                push rbx	      4217	elf.c	FUNCTION_59
0x4006aca	    0x4881ece80000	                           sub rsp, 0xe8	      4217	elf.c	FUNCTION_59
0x4006ad1	    0x64488b042528	                mov rax, qword fs:[0x28]	      4217	elf.c	FUNCTION_59
0x4006ada	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      4217	elf.c	FUNCTION_59
0x4006ae2	            0x31c0	                            xor eax, eax	      4217	elf.c	FUNCTION_59
0x4006ae4	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      4225	elf.c	FUNCTION_59	IF_1
0x4006ae8	      0x4889742408	                mov qword [rsp + 8], rsi	      4217	elf.c	FUNCTION_59
0x4006aed	     0xf852d020000	                           jne 0x4006d20	      4225	elf.c	FUNCTION_59	IF_1
0x4006af3	        0x488b4708	                mov rax, qword [rdi + 8]	      4218	elf.c	FUNCTION_59	CALL_1
0x4006af7	          0x4989ff	                            mov r15, rdi	      4218	elf.c	FUNCTION_59	CALL_1
0x4006afa	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4218	elf.c	FUNCTION_59	CALL_1
0x4006b01	          0x4989c4	                            mov r12, rax	      4218	elf.c	FUNCTION_59	CALL_1
0x4006b04	        0x48890424	                    mov qword [rsp], rax	      4218	elf.c	FUNCTION_59	CALL_1
0x4006b08	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      4229	elf.c	FUNCTION_59	IF_2
0x4006b0f	          0x4885c0	                           test rax, rax	      4229	elf.c	FUNCTION_59	IF_2
0x4006b12	            0x740d	                            je 0x4006b21	      4229	elf.c	FUNCTION_59	IF_2
0x4006b14	            0xffd0	                                call rax	      4230	elf.c	FUNCTION_59	IF_2
0x4006b16	        0x498b4708	                mov rax, qword [r15 + 8]	      4230	elf.c	FUNCTION_59	IF_2
0x4006b1a	    0x4c8ba0680300	           mov r12, qword [rax + 0x368] 	      4230	elf.c	FUNCTION_59	IF_2
0x4006b21	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6200	elf.c	FUNCTION_74	CALL_2
0x4006b28	      0xe800000000	                          call 0x4006b2d	      6202	elf.c	FUNCTION_74	CALL_3
0x4006b2d	          0x4885c0	                           test rax, rax	      6203	elf.c	FUNCTION_74	IF_1
0x4006b30	          0x4889c5	                            mov rbp, rax	      6202	elf.c	FUNCTION_74	CALL_3
0x4006b33	     0xf8482010000	                            je 0x4006cbb	      6203	elf.c	FUNCTION_74	IF_1
0x4006b39	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6206	elf.c	FUNCTION_74	CALL_4
0x4006b40	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6206	elf.c	FUNCTION_74	CALL_4
0x4006b47	        0x48896808	                mov qword [rax + 8], rbp	      6206	elf.c	FUNCTION_74	CALL_4
0x4006b4b	          0xc6037f	                    mov byte [rbx], 0x7f	      6208	elf.c	FUNCTION_74
0x4006b4e	        0xc6430145	                mov byte [rbx + 1], 0x45	      6209	elf.c	FUNCTION_74
0x4006b52	        0xc643024c	                mov byte [rbx + 2], 0x4c	      6210	elf.c	FUNCTION_74
0x4006b56	        0xc6430346	                mov byte [rbx + 3], 0x46	      6211	elf.c	FUNCTION_74
0x4006b5a	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      6213	elf.c	FUNCTION_74
0x4006b62	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      6213	elf.c	FUNCTION_74
0x4006b66	          0x884304	                  mov byte [rbx + 4], al	      6213	elf.c	FUNCTION_74
0x4006b69	        0x498b4708	                mov rax, qword [r15 + 8]	      6215	elf.c	FUNCTION_74	CALL_5
0x4006b6d	        0x83780c01	                cmp dword [rax + 0xc], 1	      6214	elf.c	FUNCTION_74
0x4006b71	            0x19c0	                            sbb eax, eax	      6214	elf.c	FUNCTION_74
0x4006b73	            0xf7d0	                                 not eax	      6214	elf.c	FUNCTION_74
0x4006b75	          0x83c002	                              add eax, 2	      6214	elf.c	FUNCTION_74
0x4006b78	          0x884305	                  mov byte [rbx + 5], al	      6214	elf.c	FUNCTION_74
0x4006b7b	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      6216	elf.c	FUNCTION_74
0x4006b83	         0xfb6400d	            movzx eax, byte [rax + 0xd] 	      6216	elf.c	FUNCTION_74
0x4006b87	          0x884306	                  mov byte [rbx + 6], al	      6216	elf.c	FUNCTION_74
0x4006b8a	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6218	elf.c	FUNCTION_74	IF_2
0x4006b8e	          0xc1e805	                              shr eax, 5	      6218	elf.c	FUNCTION_74	IF_2
0x4006b91	      0x25ffff0f00	                        and eax, 0xfffff	      6218	elf.c	FUNCTION_74	IF_2
0x4006b96	            0xa840	                           test al, 0x40	      6218	elf.c	FUNCTION_74	IF_2
0x4006b98	     0xf8452010000	                            je 0x4006cf0	      6218	elf.c	FUNCTION_74	IF_2
0x4006b9e	    0x41bb03000000	                             mov r11d, 3	      6219	elf.c	FUNCTION_74	IF_2
0x4006ba4	      0x6644895b38	             mov word [rbx + 0x38], r11w	      6219	elf.c	FUNCTION_74	IF_2
0x4006ba9	          0x4c89ff	                            mov rdi, r15	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006bac	      0xe800000000	                          call 0x4006bb1	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006bb1	            0x85c0	                           test eax, eax	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006bb3	     0xf8556010000	                           jne 0x4006d0f	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006bb9	          0x4531c9	                            xor r9d, r9d	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4006bbc	      0x6644894b3a	              mov word [rbx + 0x3a], r9w	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4006bc1	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      6245	elf.c	FUNCTION_74
0x4006bc9	      0xbe00000000	                              mov esi, 0	      6268	elf.c	FUNCTION_74	CALL_10
0x4006bce	          0x4889ef	                            mov rdi, rbp	      6268	elf.c	FUNCTION_74	CALL_10
0x4006bd1	         0xfb6500d	            movzx edx, byte [rax + 0xd] 	      6245	elf.c	FUNCTION_74
0x4006bd5	        0x48895328	             mov qword [rbx + 0x28], rdx	      6245	elf.c	FUNCTION_74
0x4006bd9	           0xfb610	                   movzx edx, byte [rax]	      6246	elf.c	FUNCTION_74
0x4006bdc	    0x48c743180000	               mov qword [rbx + 0x18], 0	      6249	elf.c	FUNCTION_74
0x4006be4	    0xc74340000000	               mov dword [rbx + 0x40], 0	      6250	elf.c	FUNCTION_74
0x4006beb	    0xc74344000000	               mov dword [rbx + 0x44], 0	      6251	elf.c	FUNCTION_74
0x4006bf2	          0x89533c	             mov dword [rbx + 0x3c], edx	      6246	elf.c	FUNCTION_74
0x4006bf5	    0x498b97a80000	            mov rdx, qword [r15 + 0xa8] 	      6254	elf.c	FUNCTION_74	CALL_8
0x4006bfc	        0x48895310	             mov qword [rbx + 0x10], rdx	      6254	elf.c	FUNCTION_74	CALL_8
0x4006c00	         0xfb64002	               movzx eax, byte [rax + 2]	      6255	elf.c	FUNCTION_74
0x4006c04	            0x31d2	                            xor edx, edx	      6268	elf.c	FUNCTION_74	CALL_10
0x4006c06	          0x894348	             mov dword [rbx + 0x48], eax	      6255	elf.c	FUNCTION_74
0x4006c09	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6267	elf.c	FUNCTION_74	CALL_9
0x4006c10	      0xe800000000	                          call 0x4006c15	      6268	elf.c	FUNCTION_74	CALL_10
0x4006c15	            0x31d2	                            xor edx, edx	      6270	elf.c	FUNCTION_74	CALL_12
0x4006c17	      0xbe00000000	                              mov esi, 0	      6270	elf.c	FUNCTION_74	CALL_12
0x4006c1c	          0x4889ef	                            mov rdi, rbp	      6270	elf.c	FUNCTION_74	CALL_12
0x4006c1f	          0x894368	             mov dword [rbx + 0x68], eax	      6267	elf.c	FUNCTION_74	CALL_9
0x4006c22	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6269	elf.c	FUNCTION_74	CALL_11
0x4006c29	      0xe800000000	                          call 0x4006c2e	      6270	elf.c	FUNCTION_74	CALL_12
0x4006c2e	            0x31d2	                            xor edx, edx	      6272	elf.c	FUNCTION_74	CALL_14
0x4006c30	      0xbe00000000	                              mov esi, 0	      6272	elf.c	FUNCTION_74	CALL_14
0x4006c35	          0x4889ef	                            mov rdi, rbp	      6272	elf.c	FUNCTION_74	CALL_14
0x4006c38	    0x898308010000	            mov dword [rbx + 0x108], eax	      6269	elf.c	FUNCTION_74	CALL_11
0x4006c3e	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6271	elf.c	FUNCTION_74	CALL_13
0x4006c45	      0xe800000000	                          call 0x4006c4a	      6272	elf.c	FUNCTION_74	CALL_14
0x4006c4a	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      6271	elf.c	FUNCTION_74	CALL_13
0x4006c50	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6273	elf.c	FUNCTION_74	IF_6	CALL_15
0x4006c57	        0x837868ff	cmp dword [rax + 0x68], 0xffffffffffffffff	      6273	elf.c	FUNCTION_74	IF_6	CALL_15
0x4006c5b	            0x745e	                            je 0x4006cbb	      6273	elf.c	FUNCTION_74	IF_6	CALL_15
0x4006c5d	    0x83b808010000	cmp dword [rax + 0x108], 0xffffffffffffffff	      6274	elf.c	FUNCTION_74	IF_6	CALL_16
0x4006c64	            0x7455	                            je 0x4006cbb	      6274	elf.c	FUNCTION_74	IF_6	CALL_16
0x4006c66	    0x83b8b8000000	cmp dword [rax + 0xb8], 0xffffffffffffffff	      6275	elf.c	FUNCTION_74	IF_6	CALL_17
0x4006c6d	            0x744c	                            je 0x4006cbb	      6275	elf.c	FUNCTION_74	IF_6	CALL_17
0x4006c6f	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4236	elf.c	FUNCTION_59
0x4006c74	        0x488b0424	                    mov rax, qword [rsp]	      4236	elf.c	FUNCTION_59
0x4006c78	          0x4c89ff	                            mov rdi, r15	      4236	elf.c	FUNCTION_59
0x4006c7b	          0x4889de	                            mov rsi, rbx	      4236	elf.c	FUNCTION_59
0x4006c7e	    0xff9088010000	                call qword [rax + 0x188]	      4236	elf.c	FUNCTION_59
0x4006c84	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      4240	elf.c	FUNCTION_59	CALL_3
0x4006c8c	      0xbe00000000	                              mov esi, 0	      4240	elf.c	FUNCTION_59	CALL_3
0x4006c91	          0x4c89ff	                            mov rdi, r15	      4240	elf.c	FUNCTION_59	CALL_3
0x4006c94	    0xc78424a80000	               mov dword [rsp + 0xa8], 0	      4238	elf.c	FUNCTION_59
0x4006c9f	    0x48899c24a000	             mov qword [rsp + 0xa0], rbx	      4239	elf.c	FUNCTION_59
0x4006ca7	      0xe800000000	                          call 0x4006cac	      4240	elf.c	FUNCTION_59	CALL_3
0x4006cac	    0x8b8c24a80000	            mov ecx, dword [rsp + 0xa8] 	      4241	elf.c	FUNCTION_59	IF_4
0x4006cb3	            0x85c9	                           test ecx, ecx	      4241	elf.c	FUNCTION_59	IF_4
0x4006cb5	     0xf8495000000	                            je 0x4006d50	      4241	elf.c	FUNCTION_59	IF_4
0x4006cbb	            0x31c0	                            xor eax, eax	      4282	elf.c	FUNCTION_59	IF_10
0x4006cbd	    0x488bbc24d800	            mov rdi, qword [rsp + 0xd8] 	      4318	elf.c	FUNCTION_59
0x4006cc5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      4318	elf.c	FUNCTION_59
0x4006cce	     0xf8500330000	                           jne 0x4009fd4	      4318	elf.c	FUNCTION_59
0x4006cd4	    0x4881c4e80000	                           add rsp, 0xe8	      4318	elf.c	FUNCTION_59
0x4006cdb	              0x5b	                                 pop rbx	      4318	elf.c	FUNCTION_59
0x4006cdc	              0x5d	                                 pop rbp	      4318	elf.c	FUNCTION_59
0x4006cdd	            0x415c	                                 pop r12	      4318	elf.c	FUNCTION_59
0x4006cdf	            0x415d	                                 pop r13	      4318	elf.c	FUNCTION_59
0x4006ce1	            0x415e	                                 pop r14	      4318	elf.c	FUNCTION_59
0x4006ce3	            0x415f	                                 pop r15	      4318	elf.c	FUNCTION_59
0x4006ce5	              0xc3	                                     ret	      4318	elf.c	FUNCTION_59
0x4006ce6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4318	elf.c	FUNCTION_59
0x4006cf0	            0xa802	                              test al, 2	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x4006cf2	            0x743c	                            je 0x4006d30	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x4006cf4	    0x41ba02000000	                             mov r10d, 2	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x4006cfa	          0x4c89ff	                            mov rdi, r15	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006cfd	      0x6644895338	             mov word [rbx + 0x38], r10w	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x4006d02	      0xe800000000	                          call 0x4006d07	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006d07	            0x85c0	                           test eax, eax	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006d09	     0xf84aafeffff	                            je 0x4006bb9	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_7
0x4006d0f	      0x418b442408	                mov eax, dword [r12 + 8]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4006d14	        0x6689433a	               mov word [rbx + 0x3a], ax	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4006d18	      0xe9a4feffff	                           jmp 0x4006bc1	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4006d1d	           0xf1f00	                         nop dword [rax]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x4006d20	      0xb801000000	                              mov eax, 1	      4226	elf.c	FUNCTION_59	IF_1
0x4006d25	            0xeb96	                           jmp 0x4006cbd	      4226	elf.c	FUNCTION_59	IF_1
0x4006d27	    0x660f1f840000	                    nop word [rax + rax]	      4226	elf.c	FUNCTION_59	IF_1
0x4006d30	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4	CALL_6
0x4006d35	          0x83e007	                              and eax, 7	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4	CALL_6
0x4006d38	            0x3c03	                               cmp al, 3	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006d3a	           0xf94c0	                                 sete al	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006d3d	           0xfb6c0	                           movzx eax, al	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006d40	        0x8d444001	              lea eax, [rax + rax*2 + 1]	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006d44	        0x66894338	               mov word [rbx + 0x38], ax	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006d48	      0xe95cfeffff	                           jmp 0x4006ba9	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006d4d	           0xf1f00	                         nop dword [rax]	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006d50	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3643	elf.c	FUNCTION_52	CALL_1
0x4006d57	      0x4889442410	             mov qword [rsp + 0x10], rax	      3643	elf.c	FUNCTION_52	CALL_1
0x4006d5c	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3652	elf.c	FUNCTION_52	CALL_3
0x4006d63	        0x488b7808	                mov rdi, qword [rax + 8]	      3652	elf.c	FUNCTION_52	CALL_3
0x4006d67	      0xe800000000	                          call 0x4006d6c	      3652	elf.c	FUNCTION_52	CALL_3
0x4006d6c	      0x488b442408	                mov rax, qword [rsp + 8]	      3655	elf.c	FUNCTION_52	IF_1
0x4006d71	          0x4885c0	                           test rax, rax	      3655	elf.c	FUNCTION_52	IF_1
0x4006d74	     0xf84fe000000	                            je 0x4006e78	      3655	elf.c	FUNCTION_52	IF_1
0x4006d7a	        0xf6400110	               test byte [rax + 1], 0x10	      3655	elf.c	FUNCTION_52	IF_1
0x4006d7e	     0xf84f4000000	                            je 0x4006e78	      3655	elf.c	FUNCTION_52	IF_1
0x4006d84	    0x4d8baf900000	            mov r13, qword [r15 + 0x90] 	      3655	elf.c	FUNCTION_52	IF_1
0x4006d8b	      0xb802000000	                              mov eax, 2	      3655	elf.c	FUNCTION_52	IF_1
0x4006d90	    0x41be01000000	                             mov r14d, 1	      3650	elf.c	FUNCTION_52
0x4006d96	          0x4d85ed	                           test r13, r13	      3685	elf.c	FUNCTION_52	FOR_2
0x4006d99	            0x756b	                           jne 0x4006e06	      3685	elf.c	FUNCTION_52	FOR_2
0x4006d9b	      0xe9f7270000	                           jmp 0x4009597	      3685	elf.c	FUNCTION_52	FOR_2
0x4006da0	            0x8b30	                    mov esi, dword [rax]	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x4006da2	        0x448d6501	                     lea r12d, [rbp + 1]	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x4006da6	          0x896b64	             mov dword [rbx + 0x64], ebp	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x4006da9	          0x83feff	             cmp esi, 0xffffffffffffffff	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x4006dac	            0x7417	                            je 0x4006dc5	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x4006dae	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x4006db5	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x4006dbc	        0x488b7808	                mov rdi, qword [rax + 8]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x4006dc0	      0xe800000000	                          call 0x4006dc5	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_10
0x4006dc5	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006dc9	          0x4885c0	                           test rax, rax	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006dcc	     0xf8496000000	                            je 0x4006e68	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006dd2	            0x8b30	                    mov esi, dword [rax]	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4006dd4	      0x458d742401	                     lea r14d, [r12 + 1]	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006dd9	        0x4489637c	            mov dword [rbx + 0x7c], r12d	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006ddd	          0x83feff	             cmp esi, 0xffffffffffffffff	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4006de0	            0x7417	                            je 0x4006df9	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4006de2	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x4006de9	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x4006df0	        0x488b7808	                mov rdi, qword [rax + 8]	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x4006df4	      0xe800000000	                          call 0x4006df9	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_12
0x4006df9	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      3685	elf.c	FUNCTION_52	FOR_2
0x4006dfd	          0x4d85ed	                           test r13, r13	      3685	elf.c	FUNCTION_52	FOR_2
0x4006e00	     0xf8412010000	                            je 0x4006f18	      3685	elf.c	FUNCTION_52	FOR_2
0x4006e06	    0x498b9de00000	            mov rbx, qword [r13 + 0xe0] 	      3687	elf.c	FUNCTION_52	FOR_2	CALL_6
0x4006e0d	          0x4489f5	                           mov ebp, r14d	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x4006e10	        0x837b0411	               cmp dword [rbx + 4], 0x11	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x4006e14	            0x740a	                            je 0x4006e20	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x4006e16	          0x83c501	                              add ebp, 1	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4006e19	    0x4489b3880000	            mov dword [rbx + 0x88], r14d	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x4006e20	            0x8b33	                    mov esi, dword [rbx]	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4006e22	          0x83feff	             cmp esi, 0xffffffffffffffff	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4006e25	            0x7417	                            je 0x4006e3e	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x4006e27	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x4006e2e	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x4006e35	        0x488b7808	                mov rdi, qword [rax + 8]	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x4006e39	      0xe800000000	                          call 0x4006e3e	      3692	elf.c	FUNCTION_52	FOR_2	CALL_8
0x4006e3e	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x4006e42	          0x4885c0	                           test rax, rax	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x4006e45	     0xf8555ffffff	                           jne 0x4006da0	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x4006e4b	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006e4f	    0xc74364000000	               mov dword [rbx + 0x64], 0	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x4006e56	          0x4189ec	                           mov r12d, ebp	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x4006e59	          0x4885c0	                           test rax, rax	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006e5c	     0xf8570ffffff	                           jne 0x4006dd2	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006e62	    0x660f1f440000	                    nop word [rax + rax]	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006e68	    0xc7437c000000	               mov dword [rbx + 0x7c], 0	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x4006e6f	          0x4589e6	                          mov r14d, r12d	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x4006e72	            0xeb85	                           jmp 0x4006df9	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x4006e74	         0xf1f4000	                         nop dword [rax]	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x4006e78	    0x498b87900000	            mov rax, qword [r15 + 0x90] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e7f	          0x4885c0	                           test rax, rax	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e82	            0x746f	                            je 0x4006ef3	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e84	            0x31c9	                            xor ecx, ecx	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e86	    0x41be01000000	                             mov r14d, 1	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e8c	            0xeb1b	                           jmp 0x4006ea9	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e8e	            0x6690	                                     nop	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e90	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e94	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e9a	          0x4801c1	                            add rcx, rax	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006e9d	          0x4885d2	                           test rdx, rdx	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006ea0	          0x4889d0	                            mov rax, rdx	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006ea3	     0xf84a7080000	                            je 0x4007750	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006ea9	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      3662	elf.c	FUNCTION_52	IF_1	FOR_1	CALL_4
0x4006eb0	        0x837a0411	               cmp dword [rdx + 4], 0x11	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4006eb4	            0x75da	                           jne 0x4006e90	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4006eb6	        0xf6402210	           test byte [rax + 0x22], 0x10 	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006eba	     0xf8450060000	                            je 0x4007510	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006ec0	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ec4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ec8	          0x4885f6	                           test rsi, rsi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ecb	          0x4889d7	                            mov rdi, rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ece	     0xf84ed1b0000	                            je 0x4008ac1	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ed4	        0x48895610	             mov qword [rsi + 0x10], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ed8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006edc	          0x4885ff	                           test rdi, rdi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006edf	     0xf84d01b0000	                            je 0x4008ab5	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ee5	        0x48897718	             mov qword [rdi + 0x18], rsi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4006ee9	    0x4183afa00000	               sub dword [r15 + 0xa0], 1	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006ef1	            0xeba1	                           jmp 0x4006e94	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006ef3	      0xb802000000	                              mov eax, 2	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006ef8	          0x4531ed	                          xor r13d, r13d	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006efb	    0x41be01000000	                             mov r14d, 1	      3650	elf.c	FUNCTION_52
0x4006f01	     0xf1f80000000	                         nop dword [rax]	      3650	elf.c	FUNCTION_52
0x4006f08	      0x41836744df	      and dword [r15 + 0x44], 0xffffffdf	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4006f0d	      0xe984feffff	                           jmp 0x4006d96	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4006f12	    0x660f1f440000	                    nop word [rax + rax]	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4006f18	        0x458d6e01	                     lea r13d, [r14 + 1]	      3685	elf.c	FUNCTION_52	FOR_2
0x4006f1c	    0x458b87b80000	            mov r8d, dword [r15 + 0xb8] 	      3713	elf.c	FUNCTION_52
0x4006f23	          0x4585c0	                           test r8d, r8d	      3713	elf.c	FUNCTION_52
0x4006f26	     0xf8554080000	                           jne 0x4007780	      3713	elf.c	FUNCTION_52
0x4006f2c	            0x31db	                            xor ebx, ebx	      3713	elf.c	FUNCTION_52
0x4006f2e	    0x48837c240800	                  cmp qword [rsp + 8], 0	      3713	elf.c	FUNCTION_52
0x4006f34	          0x4589ec	                          mov r12d, r13d	      3713	elf.c	FUNCTION_52
0x4006f37	     0xf842c080000	                            je 0x4007769	      3713	elf.c	FUNCTION_52
0x4006f3d	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3739	elf.c	FUNCTION_52	CALL_26
0x4006f44	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3740	elf.c	FUNCTION_52	CALL_28
0x4006f49	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3739	elf.c	FUNCTION_52	CALL_26
0x4006f50	    0x8bb7b8000000	            mov esi, dword [rdi + 0xb8] 	      3740	elf.c	FUNCTION_52	CALL_28
0x4006f56	        0x488b7808	                mov rdi, qword [rax + 8]	      3740	elf.c	FUNCTION_52	CALL_28
0x4006f5a	        0x4489704c	            mov dword [rax + 0x4c], r14d	      3739	elf.c	FUNCTION_52	CALL_26
0x4006f5e	      0xe800000000	                          call 0x4006f63	      3740	elf.c	FUNCTION_52	CALL_28
0x4006f63	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3741	elf.c	FUNCTION_52	CALL_30
0x4006f6a	    0x4181fcfffeff	                    cmp r12d, 0xfffffeff	      3743	elf.c	FUNCTION_52	IF_14
0x4006f71	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      3741	elf.c	FUNCTION_52	CALL_30
0x4006f78	          0x8b524c	            mov edx, dword [rdx + 0x4c] 	      3741	elf.c	FUNCTION_52	CALL_30
0x4006f7b	          0x895050	             mov dword [rax + 0x50], edx	      3741	elf.c	FUNCTION_52	CALL_30
0x4006f7e	     0xf87e4080000	                            ja 0x4007868	      3743	elf.c	FUNCTION_52	IF_14
0x4006f84	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3751	elf.c	FUNCTION_52	CALL_33
0x4006f8b	          0x4489e6	                           mov esi, r12d	      3756	elf.c	FUNCTION_52	CALL_35
0x4006f8e	      0xba08000000	                              mov edx, 8	      3756	elf.c	FUNCTION_52	CALL_35
0x4006f93	          0x4c89ff	                            mov rdi, r15	      3756	elf.c	FUNCTION_52	CALL_35
0x4006f96	    0x4489a0fc0200	           mov dword [rax + 0x2fc], r12d	      3751	elf.c	FUNCTION_52	CALL_33
0x4006f9d	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3752	elf.c	FUNCTION_52	CALL_34
0x4006fa4	        0x4489604c	            mov dword [rax + 0x4c], r12d	      3752	elf.c	FUNCTION_52	CALL_34
0x4006fa8	      0xe800000000	                          call 0x4006fad	      3756	elf.c	FUNCTION_52	CALL_35
0x4006fad	          0x4885c0	                           test rax, rax	      3758	elf.c	FUNCTION_52	IF_15
0x4006fb0	          0x4989c6	                            mov r14, rax	      3756	elf.c	FUNCTION_52	CALL_35
0x4006fb3	     0xf8402fdffff	                            je 0x4006cbb	      3758	elf.c	FUNCTION_52	IF_15
0x4006fb9	      0xbe50000000	                           mov esi, 0x50	      3761	elf.c	FUNCTION_52	CALL_36
0x4006fbe	          0x4c89ff	                            mov rdi, r15	      3761	elf.c	FUNCTION_52	CALL_36
0x4006fc1	      0xe800000000	                          call 0x4006fc6	      3761	elf.c	FUNCTION_52	CALL_36
0x4006fc6	          0x4885c0	                           test rax, rax	      3763	elf.c	FUNCTION_52	IF_16
0x4006fc9	          0x498906	                    mov qword [r14], rax	      3761	elf.c	FUNCTION_52	CALL_36
0x4006fcc	     0xf841a2e0000	                            je 0x4009dec	      3763	elf.c	FUNCTION_52	IF_16
0x4006fd2	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3769	elf.c	FUNCTION_52	CALL_38
0x4006fd9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3771	elf.c	FUNCTION_52	CALL_39
0x4006fde	            0x85db	                           test ebx, ebx	      3772	elf.c	FUNCTION_52	IF_17
0x4006fe0	        0x4c897058	             mov qword [rax + 0x58], r14	      3769	elf.c	FUNCTION_52	CALL_38
0x4006fe4	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3771	elf.c	FUNCTION_52	CALL_39
0x4006feb	    0x488d97b80000	                   lea rdx, [rdi + 0xb8]	      3771	elf.c	FUNCTION_52	CALL_39
0x4006ff2	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3771	elf.c	FUNCTION_52	CALL_39
0x4006ff9	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      3771	elf.c	FUNCTION_52	CALL_39
0x4006ffc	        0x498914c6	            mov qword [r14 + rax*8], rdx	      3771	elf.c	FUNCTION_52	CALL_39
0x4007000	     0xf8480000000	                            je 0x4007086	      3772	elf.c	FUNCTION_52	IF_17
0x4007006	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x400700d	        0x488d5768	                   lea rdx, [rdi + 0x68]	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x4007011	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x4007017	        0x498914c6	            mov qword [r14 + rax*8], rdx	      3774	elf.c	FUNCTION_52	IF_17	CALL_40
0x400701b	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x4007022	    0x81b8fc020000	        cmp dword [rax + 0x2fc], 0xff00 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x400702c	            0x7627	                           jbe 0x4007055	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x400702e	    0x488b98e80200	           mov rbx, qword [rax + 0x2e8] 	      3777	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x4007035	          0x4885db	                           test rbx, rbx	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4007038	     0xf84452f0000	                            je 0x4009f83	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x400703e	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x4007041	        0x49891cc6	            mov qword [r14 + rax*8], rbx	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x4007045	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_44
0x400704c	    0x8b90780c0000	           mov edx, dword [rax + 0xc78] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_44
0x4007052	          0x895328	             mov dword [rbx + 0x28], edx	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_44
0x4007055	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x400705c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x4007061	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x4007064	    0x488d97080100	                  lea rdx, [rdi + 0x108]	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x400706b	        0x498914c6	            mov qword [r14 + rax*8], rdx	      3782	elf.c	FUNCTION_52	IF_17	CALL_45
0x400706f	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x4007076	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x400707d	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x4007080	    0x898790000000	             mov dword [rdi + 0x90], eax	      3783	elf.c	FUNCTION_52	IF_17	CALL_46
0x4007086	    0x4d8baf900000	            mov r13, qword [r15 + 0x90] 	      3786	elf.c	FUNCTION_52	FOR_3
0x400708d	          0x4d85ed	                           test r13, r13	      3786	elf.c	FUNCTION_52	FOR_3
0x4007090	     0xf840a050000	                            je 0x40075a0	      3786	elf.c	FUNCTION_52	FOR_3
0x4007096	      0xbd00000000	                              mov ebp, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x400709b	          0x4d89f4	                            mov r12, r14	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x400709e	      0xe9ba010000	                           jmp 0x400725d	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x40070a3	       0xf1f440000	                   nop dword [rax + rax]	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x40070a8	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40070ac	        0x49890cc4	            mov qword [r12 + rax*8], rcx	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x40070b0	        0x4863437c	         movsxd rax, dword [rbx + 0x7c] 	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40070b4	            0x85c0	                           test eax, eax	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40070b6	     0xf84e42f0000	                            je 0x400a0a0	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x40070bc	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40070c0	        0x49890cc4	            mov qword [r12 + rax*8], rcx	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40070c4	    0x498b8ff80000	            mov rcx, qword [r15 + 0xf8] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x40070cb	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x40070cf	    0x8bb1780c0000	           mov esi, dword [rcx + 0xc78] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x40070d5	      0x4883480840	                or qword [rax + 8], 0x40	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x40070da	          0x89502c	             mov dword [rax + 0x2c], edx	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x40070dd	          0x897028	             mov dword [rax + 0x28], esi	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x40070e0	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_49
0x40070e4	    0x8b89780c0000	           mov ecx, dword [rcx + 0xc78] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_49
0x40070ea	      0x4883480840	                or qword [rax + 8], 0x40	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x40070ef	          0x89502c	             mov dword [rax + 0x2c], edx	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x40070f2	          0x894828	             mov dword [rax + 0x28], ecx	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_49
0x40070f5	        0xf6430880	               test byte [rbx + 8], 0x80	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x40070f9	            0x7459	                            je 0x4007154	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x40070fb	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_50
0x4007102	    0x4c8bb0900000	            mov r14, qword [rax + 0x90] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_50
0x4007109	          0x4d85f6	                           test r14, r14	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x400710c	     0xf844e030000	                            je 0x4007460	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x4007112	    0x48837c240800	                  cmp qword [rsp + 8], 0	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x4007118	     0xf848a030000	                            je 0x40074a8	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x400711e	    0x4981fe000000	                              cmp r14, 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4007125	     0xf84d5030000	                            je 0x4007500	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400712b	        0x498b4668	            mov rax, qword [r14 + 0x68] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400712f	    0x483d00000000	                              cmp rax, 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4007135	     0xf84e5030000	                            je 0x4007520	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400713b	          0x4885c0	                           test rax, rax	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x400713e	     0xf848c010000	                            je 0x40072d0	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x4007144	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x400714b	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x4007151	          0x894328	             mov dword [rbx + 0x28], eax	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x4007154	          0x8b4304	                mov eax, dword [rbx + 4]	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007157	          0x83f80b	                            cmp eax, 0xb	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x400715a	     0xf8450020000	                            je 0x40073b0	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007160	     0xf873a010000	                            ja 0x40072a0	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007166	          0x83f805	                              cmp eax, 5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007169	     0xf848e020000	                            je 0x40073fd	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x400716f	     0xf877b010000	                            ja 0x40072f0	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007175	          0x83f803	                              cmp eax, 3	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007178	     0xf85c2020000	                           jne 0x4007440	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x400717e	        0x4d8b7500	                    mov r14, qword [r13]	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4007182	      0xbf00000000	                              mov edi, 0	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4007187	      0xb905000000	                              mov ecx, 5	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x400718c	          0x4c89f6	                            mov rsi, r14	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x400718f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4007191	     0xf85b9000000	                           jne 0x4007250	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4007197	          0x4c89f7	                            mov rdi, r14	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x400719a	      0xe800000000	                          call 0x400719f	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x400719f	        0x488d50fd	                      lea rdx, [rax - 3]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071a3	          0x4901d6	                            add r14, rdx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071a6	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071ab	        0x41803e73	                    cmp byte [r14], 0x73	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071af	     0xf859b000000	                           jne 0x4007250	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071b5	      0x41807e0174	                cmp byte [r14 + 1], 0x74	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071ba	     0xf8590000000	                           jne 0x4007250	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071c0	      0x41807e0272	                cmp byte [r14 + 2], 0x72	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071c5	     0xf8585000000	                           jne 0x4007250	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071cb	      0x41807e0300	                   cmp byte [r14 + 3], 0	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071d0	            0x757e	                           jne 0x4007250	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x40071d2	        0x488d78fe	                      lea rdi, [rax - 2]	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x40071d6	      0x4889442418	             mov qword [rsp + 0x18], rax	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x40071db	      0xe800000000	                          call 0x40071e0	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x40071e0	          0x4885c0	                           test rax, rax	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x40071e3	          0x4989c6	                            mov r14, rax	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_72
0x40071e6	     0xf84cffaffff	                            je 0x4006cbb	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x40071ec	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_204	CALL_3
0x40071f1	        0x498b7500	                    mov rsi, qword [r13]	        53	string3.h	FUNCTION_204	CALL_3
0x40071f5	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_204	CALL_3
0x40071f8	      0xe800000000	                          call 0x40071fd	        53	string3.h	FUNCTION_204	CALL_3
0x40071fd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4007202	          0x4c89f6	                            mov rsi, r14	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x4007205	          0x4c89ff	                            mov rdi, r15	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x4007208	    0x41c6440efd00	             mov byte [r14 + rcx - 3], 0	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x400720e	      0xe800000000	                          call 0x4007213	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x4007213	          0x4c89f7	                            mov rdi, r14	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_75
0x4007216	      0x4889442410	             mov qword [rsp + 0x10], rax	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_74
0x400721b	      0xe800000000	                          call 0x4007220	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_75
0x4007220	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x4007225	          0x4885c0	                           test rax, rax	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x4007228	            0x7426	                            je 0x4007250	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x400722a	    0x4c8bb0e00000	            mov r14, qword [rax + 0xe0] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_76
0x4007231	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_76
0x4007237	      0x49837e3800	               cmp qword [r14 + 0x38], 0	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_77
0x400723c	        0x41894628	             mov dword [r14 + 0x28], eax	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_76
0x4007240	     0xf843f270000	                            je 0x4009985	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_77
0x4007246	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_77
0x4007250	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4007254	          0x4d85ed	                           test r13, r13	      3786	elf.c	FUNCTION_52	FOR_3
0x4007257	     0xf8443030000	                            je 0x40075a0	      3786	elf.c	FUNCTION_52	FOR_3
0x400725d	    0x498b9de00000	            mov rbx, qword [r13 + 0xe0] 	      3790	elf.c	FUNCTION_52	FOR_3	CALL_47
0x4007264	    0x486383880000	         movsxd rax, dword [rbx + 0x88] 	      3792	elf.c	FUNCTION_52	FOR_3
0x400726b	          0x4889c2	                            mov rdx, rax	      3792	elf.c	FUNCTION_52	FOR_3
0x400726e	        0x49891cc4	            mov qword [r12 + rax*8], rbx	      3792	elf.c	FUNCTION_52	FOR_3
0x4007272	        0x48634364	         movsxd rax, dword [rbx + 0x64] 	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x4007276	            0x85c0	                           test eax, eax	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x4007278	     0xf852afeffff	                           jne 0x40070a8	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x400727e	        0x4863437c	         movsxd rax, dword [rbx + 0x7c] 	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4007282	            0x85c0	                           test eax, eax	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4007284	     0xf846bfeffff	                            je 0x40070f5	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x400728a	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x400728e	        0x49890cc4	            mov qword [r12 + rax*8], rcx	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4007292	    0x498b8ff80000	            mov rcx, qword [r15 + 0xf8] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4007299	      0xe942feffff	                           jmp 0x40070e0	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x400729e	            0x6690	                                     nop	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x40072a0	      0x3df7ffff6f	                     cmp eax, 0x6ffffff7	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072a5	     0xf846d010000	                            je 0x4007418	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072ab	     0xf872f010000	                            ja 0x40073e0	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072b1	          0x83f811	                           cmp eax, 0x11	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072b4	     0xf8596010000	                           jne 0x4007450	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072ba	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x40072c1	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x40072c7	          0x894328	             mov dword [rbx + 0x28], eax	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x40072ca	      0xe981ffffff	                           jmp 0x4007250	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x40072cf	              0x90	                                     nop	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_86
0x40072d0	      0xbe070f0000	                          mov esi, 0xf07	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x40072d5	      0xbf00000000	                              mov edi, 0	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x40072da	      0xe800000000	                          call 0x40072df	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_56
0x40072df	    0x488b0425e000	                   mov rax, qword [0xe0]	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x40072e7	             0xf0b	                                     ud2	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x40072e9	     0xf1f80000000	                         nop dword [rax]	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_60
0x40072f0	          0x83f806	                              cmp eax, 6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072f3	     0xf84b7000000	                            je 0x40073b0	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072f9	          0x83f809	                              cmp eax, 9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40072fc	     0xf854effffff	                           jne 0x4007250	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007302	      0xbe00000000	                              mov esi, 0	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_64
0x4007307	          0x4c89ff	                            mov rdi, r15	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_64
0x400730a	      0xe800000000	                          call 0x400730f	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_64
0x400730f	          0x4885c0	                           test rax, rax	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4007312	            0x7410	                            je 0x4007324	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4007314	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_65
0x400731b	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_65
0x4007321	          0x894328	             mov dword [rbx + 0x28], eax	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_65
0x4007324	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      3619	elf.c	FUNCTION_51	CALL_1
0x400732b	          0x8b4004	                mov eax, dword [rax + 4]	      3619	elf.c	FUNCTION_51	CALL_1
0x400732e	          0x83f809	                              cmp eax, 9	      3620	elf.c	FUNCTION_51	IF_1
0x4007331	            0x7409	                            je 0x400733c	      3620	elf.c	FUNCTION_51	IF_1
0x4007333	          0x83f804	                              cmp eax, 4	      3620	elf.c	FUNCTION_51	IF_1
0x4007336	     0xf8514ffffff	                           jne 0x4007250	      3620	elf.c	FUNCTION_51	IF_1
0x400733c	        0x498b5500	                    mov rdx, qword [r13]	      3624	elf.c	FUNCTION_51
0x4007340	      0xbf00000000	                              mov edi, 0	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4007345	      0xb904000000	                              mov ecx, 4	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x400734a	          0x4889d6	                            mov rsi, rdx	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x400734d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x400734f	     0xf85fbfeffff	                           jne 0x4007250	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4007355	          0x83f804	                              cmp eax, 4	      3628	elf.c	FUNCTION_51	IF_3
0x4007358	        0x488d7204	                      lea rsi, [rdx + 4]	      3627	elf.c	FUNCTION_51
0x400735c	            0x750e	                           jne 0x400736c	      3628	elf.c	FUNCTION_51	IF_3
0x400735e	        0x807a0461	                cmp byte [rdx + 4], 0x61	      3628	elf.c	FUNCTION_51	IF_3
0x4007362	        0x488d7205	                      lea rsi, [rdx + 5]	      3628	elf.c	FUNCTION_51	IF_3
0x4007366	     0xf85e4feffff	                           jne 0x4007250	      3628	elf.c	FUNCTION_51	IF_3
0x400736c	    0x498bbdf00000	            mov rdi, qword [r13 + 0xf0] 	      3631	elf.c	FUNCTION_51
0x4007373	        0x488b4708	                mov rax, qword [rdi + 8]	      3632	elf.c	FUNCTION_51	CALL_3
0x4007377	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3633	elf.c	FUNCTION_51	CALL_4
0x400737e	    0xff90d8020000	                call qword [rax + 0x2d8]	      3633	elf.c	FUNCTION_51	CALL_4
0x4007384	          0x4885c0	                           test rax, rax	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4007387	     0xf84c3feffff	                            je 0x4007250	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x400738d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x4007394	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x400739a	      0x48834b0840	                or qword [rbx + 8], 0x40	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x400739f	          0x89432c	             mov dword [rbx + 0x2c], eax	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x40073a2	      0xe9a9feffff	                           jmp 0x4007250	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x40073a7	    0x660f1f840000	                    nop word [rax + rax]	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_67
0x40073b0	      0xbe00000000	                              mov esi, 0	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x40073b5	          0x4c89ff	                            mov rdi, r15	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x40073b8	      0xe800000000	                          call 0x40073bd	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x40073bd	          0x4885c0	                           test rax, rax	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x40073c0	     0xf848afeffff	                            je 0x4007250	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x40073c6	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x40073cd	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x40073d3	          0x894328	             mov dword [rbx + 0x28], eax	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x40073d6	      0xe975feffff	                           jmp 0x4007250	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x40073db	       0xf1f440000	                   nop dword [rax + rax]	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_85
0x40073e0	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40073e5	     0xf8265feffff	                            jb 0x4007250	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40073eb	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40073f0	            0x76be	                           jbe 0x40073b0	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40073f2	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40073f7	     0xf8553feffff	                           jne 0x4007250	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x40073fd	      0xbe00000000	                              mov esi, 0	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_84
0x4007402	          0x4c89ff	                            mov rdi, r15	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_84
0x4007405	      0xe800000000	                          call 0x400740a	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_84
0x400740a	          0x4885c0	                           test rax, rax	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x400740d	            0x75b7	                           jne 0x40073c6	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x400740f	      0xe93cfeffff	                           jmp 0x4007250	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x4007414	         0xf1f4000	                         nop dword [rax]	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x4007418	      0x41f6452001	               test byte [r13 + 0x20], 1	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x400741d	      0xbe00000000	                              mov esi, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4007422	          0x4c89ff	                            mov rdi, r15	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4007425	        0x480f44f5	                          cmove rsi, rbp	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x4007429	      0xe800000000	                          call 0x400742e	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x400742e	          0x4885c0	                           test rax, rax	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4007431	            0x7593	                           jne 0x40073c6	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4007433	      0xe918feffff	                           jmp 0x4007250	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4007438	     0xf1f84000000	                   nop dword [rax + rax]	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4007440	          0x83f804	                              cmp eax, 4	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007443	     0xf84b9feffff	                            je 0x4007302	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007449	      0xe902feffff	                           jmp 0x4007250	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x400744e	            0x6690	                                     nop	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007450	      0x3df6ffff6f	                     cmp eax, 0x6ffffff6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007455	            0x74a6	                            je 0x40073fd	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007457	      0xe9f4fdffff	                           jmp 0x4007250	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x400745c	         0xf1f4000	                         nop dword [rax]	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4007460	        0x498b4708	                mov rax, qword [r15 + 8]	      3873	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5
0x4007464	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x400746b	    0x4c8bb0e80200	           mov r14, qword [rax + 0x2e8] 	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4007472	          0x4d85f6	                           test r14, r14	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4007475	     0xf84d9fcffff	                            je 0x4007154	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x400747b	      0xba05000000	                              mov edx, 5	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x4007480	      0xbe00000000	                              mov esi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x4007485	      0xbf00000000	                              mov edi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x400748a	      0xe800000000	                          call 0x400748f	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_63
0x400748f	          0x4c89ea	                            mov rdx, r13	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4007492	          0x4889c7	                            mov rdi, rax	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4007495	          0x4c89fe	                            mov rsi, r15	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x4007498	            0x31c0	                            xor eax, eax	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x400749a	          0x41ffd6	                                call r14	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x400749d	      0xe9b2fcffff	                           jmp 0x4007154	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x40074a2	    0x660f1f440000	                    nop word [rax + rax]	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_62
0x40074a8	        0x498b4668	            mov rax, qword [r14 + 0x68] 	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x40074ac	          0x4885c0	                           test rax, rax	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x40074af	     0xf858ffcffff	                           jne 0x4007144	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x40074b5	    0x498baef00000	            mov rbp, qword [r14 + 0xf0] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074bc	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074c0	      0xba05000000	                              mov edx, 5	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x40074c5	      0xbe00000000	                              mov esi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x40074ca	      0xbf00000000	                              mov edi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x40074cf	      0xe800000000	                          call 0x40074d4	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_58
0x40074d4	          0x4989e8	                             mov r8, rbp	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074d7	          0x4889c7	                            mov rdi, rax	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074da	          0x4c89f1	                            mov rcx, r14	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074dd	          0x4889da	                            mov rdx, rbx	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074e0	          0x4c89fe	                            mov rsi, r15	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074e3	            0x31c0	                            xor eax, eax	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074e5	      0xe800000000	                          call 0x40074ea	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_57
0x40074ea	      0xbf11000000	                           mov edi, 0x11	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x40074ef	      0xe800000000	                          call 0x40074f4	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x40074f4	      0xe9c2f7ffff	                           jmp 0x4006cbb	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x40074f9	     0xf1f80000000	                         nop dword [rax]	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x4007500	    0x488b05000000	            mov rax, qword [0x04007507] 	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x4007507	      0xe92ffcffff	                           jmp 0x400713b	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x400750c	         0xf1f4000	                         nop dword [rax]	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_59
0x4007510	    0x4489b2880000	            mov dword [rdx + 0x88], r14d	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4007517	        0x4183c601	                             add r14d, 1	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x400751b	      0xe970f9ffff	                           jmp 0x4006e90	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4007520	      0x410fb75624	           movzx edx, word [r14 + 0x24] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4007525	      0x6681e28003	                           and dx, 0x380	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400752a	      0x6681ea0001	                           sub dx, 0x100	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400752f	      0x66f7c280fe	                         test dx, 0xfe80	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4007534	     0xf840afcffff	                            je 0x4007144	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x400753a	    0x4d8b86f00000	              mov r8, qword [r14 + 0xf0]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007541	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007545	      0xba05000000	                              mov edx, 5	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x400754a	      0xbe00000000	                              mov esi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x400754f	      0xbf00000000	                              mov edi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x4007554	      0x4c89442418	              mov qword [rsp + 0x18], r8	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007559	      0x4889442410	             mov qword [rsp + 0x10], rax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x400755e	      0xe800000000	                          call 0x4007563	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_53
0x4007563	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007568	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x400756d	          0x4889c7	                            mov rdi, rax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007570	          0x4c89f1	                            mov rcx, r14	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007573	            0x31c0	                            xor eax, eax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007575	          0x4c89fe	                            mov rsi, r15	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x4007578	      0xe800000000	                          call 0x400757d	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_52
0x400757d	      0x488b742408	                mov rsi, qword [rsp + 8]	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_54
0x4007582	          0x4c89f7	                            mov rdi, r14	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_54
0x4007585	      0xe800000000	                          call 0x400758a	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_54
0x400758a	          0x4885c0	                           test rax, rax	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x400758d	     0xf8416130000	                            je 0x40088a9	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4007593	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4007597	      0xe99ffbffff	                           jmp 0x400713b	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x400759c	         0xf1f4000	                         nop dword [rax]	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x40075a0	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4249	elf.c	FUNCTION_59	CALL_5
0x40075a6	     0xf844b160000	                            je 0x4008bf7	      4249	elf.c	FUNCTION_59	CALL_5
0x40075ac	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4269	elf.c	FUNCTION_59	CALL_8
0x40075b3	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4261	elf.c	FUNCTION_59
0x40075be	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4221	elf.c	FUNCTION_59
0x40075c7	    0xc74424740000	               mov dword [rsp + 0x74], 0	      6073	elf.c	FUNCTION_73	IF_1
0x40075cf	          0x4889c7	                            mov rdi, rax	      4269	elf.c	FUNCTION_59	CALL_8
0x40075d2	    0xc780bc000000	               mov dword [rax + 0xbc], 3	      4271	elf.c	FUNCTION_59
0x40075dc	      0x4889442468	             mov qword [rsp + 0x68], rax	      4269	elf.c	FUNCTION_59	CALL_8
0x40075e1	        0x488b0424	                    mov rax, qword [rsp]	      4272	elf.c	FUNCTION_59
0x40075e5	    0x488b80800300	           mov rax, qword [rax + 0x380] 	      4272	elf.c	FUNCTION_59
0x40075ec	    0x48c787c80000	               mov qword [rdi + 0xc8], 0	      4273	elf.c	FUNCTION_59
0x40075f7	    0x48c787f00000	               mov qword [rdi + 0xf0], 0	      4275	elf.c	FUNCTION_59
0x4007602	    0xc787e0000000	               mov dword [rdi + 0xe0], 0	      4276	elf.c	FUNCTION_59
0x400760c	    0xc787e4000000	               mov dword [rdi + 0xe4], 0	      4277	elf.c	FUNCTION_59
0x4007616	    0x48c787e80000	               mov qword [rdi + 0xe8], 1	      4279	elf.c	FUNCTION_59
0x4007621	    0x488987c00000	             mov qword [rdi + 0xc0], rax	      4272	elf.c	FUNCTION_59
0x4007628	        0x498b4708	                mov rax, qword [r15 + 8]	      6071	elf.c	FUNCTION_73	CALL_3
0x400762c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6071	elf.c	FUNCTION_73	CALL_3
0x4007633	      0x4889442440	             mov qword [rsp + 0x40], rax	      6071	elf.c	FUNCTION_73	CALL_3
0x4007638	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6073	elf.c	FUNCTION_73	IF_1
0x400763c	          0xc1e805	                              shr eax, 5	      6073	elf.c	FUNCTION_73	IF_1
0x400763f	            0xa842	                           test al, 0x42	      6073	elf.c	FUNCTION_73	IF_1
0x4007641	     0xf85bc030000	                           jne 0x4007a03	      6073	elf.c	FUNCTION_73	IF_1
0x4007647	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x400764c	          0x83e007	                              and eax, 7	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x400764f	            0x3c03	                               cmp al, 3	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x4007651	     0xf84a0030000	                            je 0x40079f7	      6074	elf.c	FUNCTION_73	IF_1	CALL_4
0x4007657	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_5
0x400765c	    0x448b90fc0200	          mov r10d, dword [rax + 0x2fc] 	      6077	elf.c	FUNCTION_73	IF_1	CALL_6
0x4007663	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_5
0x4007667	        0x448b403c	            mov r8d, dword [rax + 0x3c] 	      6083	elf.c	FUNCTION_73	IF_1
0x400766b	        0x4183fa01	                             cmp r10d, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400766f	        0x488d4d08	                      lea rcx, [rbp + 8]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007673	     0xf8618020000	                           jbe 0x4007891	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007679	    0x4d8b9ff80000	            mov r11, qword [r15 + 0xf8] 	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007680	      0xba01000000	                              mov edx, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007685	    0x498b9b980c00	           mov rbx, qword [r11 + 0xc98] 	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400768c	      0xe97f000000	                           jmp 0x4007710	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007691	     0xf1f80000000	                         nop dword [rax]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007698	    0x413993780c00	           cmp dword [r11 + 0xc78], edx 	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x400769f	     0xf8492000000	                            je 0x4007737	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x40076a5	    0x4d8b8be80200	            mov r9, qword [r11 + 0x2e8] 	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x40076ac	          0x4d85c9	                             test r9, r9	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x40076af	            0x740b	                            je 0x40076bc	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x40076b1	        0x458b4950	              mov r9d, dword [r9 + 0x50]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x40076b5	      0x4a3b44cd00	             cmp rax, qword [rbp + r9*8]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x40076ba	            0x747b	                            je 0x4007737	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x40076bc	          0x395350	            cmp dword [rbx + 0x50], edx 	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x40076bf	            0x7476	                            je 0x4007737	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x40076c1	          0x39534c	            cmp dword [rbx + 0x4c], edx 	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_11
0x40076c4	            0x7471	                            je 0x4007737	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_11
0x40076c6	        0x4c8b4830	              mov r9, qword [rax + 0x30]	      4200	elf.c	FUNCTION_58	IF_1
0x40076ca	        0x4983f901	                               cmp r9, 1	      4200	elf.c	FUNCTION_58	IF_1
0x40076ce	            0x7617	                           jbe 0x40076e7	      4200	elf.c	FUNCTION_58	IF_1
0x40076d0	      0x4f8d6401ff	                  lea r12, [r9 + r8 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x40076d5	          0x4d39e0	                             cmp r8, r12	      4201	elf.c	FUNCTION_58	CALL_1
0x40076d8	     0xf878f130000	                            ja 0x4008a6d	      4201	elf.c	FUNCTION_58	CALL_1
0x40076de	          0x49f7d9	                                  neg r9	      4201	elf.c	FUNCTION_58	CALL_1
0x40076e1	          0x4d89c8	                              mov r8, r9	      4201	elf.c	FUNCTION_58	CALL_1
0x40076e4	          0x4d21e0	                             and r8, r12	      4201	elf.c	FUNCTION_58	CALL_1
0x40076e7	          0x4885f6	                           test rsi, rsi	      4203	elf.c	FUNCTION_58	IF_2
0x40076ea	        0x4c894018	              mov qword [rax + 0x18], r8	      4202	elf.c	FUNCTION_58
0x40076ee	            0x7407	                            je 0x40076f7	      4203	elf.c	FUNCTION_58	IF_2
0x40076f0	    0x4c8986900000	              mov qword [rsi + 0x90], r8	      4204	elf.c	FUNCTION_58	IF_2
0x40076f7	          0x83ff08	                              cmp edi, 8	      4205	elf.c	FUNCTION_58	IF_3
0x40076fa	            0x7404	                            je 0x4007700	      4205	elf.c	FUNCTION_58	IF_3
0x40076fc	        0x4c034020	              add r8, qword [rax + 0x20]	      4206	elf.c	FUNCTION_58	IF_3
0x4007700	          0x83c201	                              add edx, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007703	        0x4883c108	                              add rcx, 8	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007707	          0x4139d2	                           cmp r10d, edx	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x400770a	     0xf8490010000	                            je 0x40078a0	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007710	          0x488b01	                    mov rax, qword [rcx]	      6092	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007713	          0x8b7804	                mov edi, dword [rax + 4]	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007716	        0x488b7040	            mov rsi, qword [rax + 0x40] 	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400771a	          0x83ff09	                              cmp edi, 9	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400771d	            0x7429	                            je 0x4007748	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400771f	          0x83ff04	                              cmp edi, 4	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007722	            0x7424	                            je 0x4007748	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007724	          0x4885f6	                           test rsi, rsi	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007727	     0xf846bffffff	                            je 0x4007698	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400772d	        0xf6462308	               test byte [rsi + 0x23], 8	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007731	     0xf8461ffffff	                            je 0x4007698	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007737	    0x48c74018ffff	mov qword [rax + 0x18], 0xffffffffffffffff	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400773f	            0xebbf	                           jmp 0x4007700	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007741	     0xf1f80000000	                         nop dword [rax]	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007748	          0x4885f6	                           test rsi, rsi	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400774b	            0x75e0	                           jne 0x400772d	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400774d	            0xebe8	                           jmp 0x4007737	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x400774f	              0x90	                                     nop	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007750	          0x4885c9	                           test rcx, rcx	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x4007753	     0xf84dd110000	                            je 0x4008936	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x4007759	        0x418d4601	                      lea eax, [r14 + 1]	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x400775d	    0x4d8baf900000	            mov r13, qword [r15 + 0x90] 	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x4007764	      0xe92df6ffff	                           jmp 0x4006d96	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x4007769	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      3714	elf.c	FUNCTION_52
0x400776d	          0xc1e805	                              shr eax, 5	      3714	elf.c	FUNCTION_52
0x4007770	          0x83e043	                           and eax, 0x43	      3714	elf.c	FUNCTION_52
0x4007773	          0x83f801	                              cmp eax, 1	      3714	elf.c	FUNCTION_52
0x4007776	     0xf85c1f7ffff	                           jne 0x4006f3d	      3714	elf.c	FUNCTION_52
0x400777c	         0xf1f4000	                         nop dword [rax]	      3714	elf.c	FUNCTION_52
0x4007780	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3718	elf.c	FUNCTION_52	IF_11	CALL_14
0x4007787	          0x4589ec	                          mov r12d, r13d	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x400778a	    0x4489b0780c00	           mov dword [rax + 0xc78], r14d	      3718	elf.c	FUNCTION_52	IF_11	CALL_14
0x4007791	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4007796	          0x8b7068	            mov esi, dword [rax + 0x68] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x4007799	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x40077a0	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x40077a7	        0x488b7808	                mov rdi, qword [rax + 8]	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x40077ab	      0xe800000000	                          call 0x40077b0	      3719	elf.c	FUNCTION_52	IF_11	CALL_16
0x40077b0	    0x4181fdfefe00	                        cmp r13d, 0xfefe	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x40077b7	            0x766f	                           jbe 0x4007828	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x40077b9	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40077c0	    0x4883b8e80200	              cmp qword [rax + 0x2e8], 0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40077c8	            0x740f	                            je 0x40077d9	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40077ca	      0xbe8c0e0000	                          mov esi, 0xe8c	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40077cf	      0xbf00000000	                              mov edi, 0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40077d4	      0xe800000000	                          call 0x40077d9	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40077d9	      0xbe60000000	                           mov esi, 0x60	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x40077de	          0x4c89ff	                            mov rdi, r15	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x40077e1	        0x458d6602	                     lea r12d, [r14 + 2]	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40077e5	      0xe800000000	                          call 0x40077ea	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x40077ea	          0x4889c3	                            mov rbx, rax	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_19
0x40077ed	        0x44896850	            mov dword [rax + 0x50], r13d	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40077f1	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40077f8	            0x31d2	                            xor edx, edx	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x40077fa	      0xbe00000000	                              mov esi, 0	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x40077ff	    0x488998e80200	            mov qword [rax + 0x2e8], rbx	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4007806	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x400780d	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4007814	        0x488b7808	                mov rdi, qword [rax + 8]	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4007818	      0xe800000000	                          call 0x400781d	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x400781d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4007820	            0x8903	                    mov dword [rbx], eax	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_22
0x4007822	     0xf8493f4ffff	                            je 0x4006cbb	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4007828	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x400782f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4007834	      0x458d742401	                     lea r14d, [r12 + 1]	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4007839	      0xbb01000000	                              mov ebx, 1	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x400783e	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4007845	    0x8bb708010000	           mov esi, dword [rdi + 0x108] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x400784b	        0x488b7808	                mov rdi, qword [rax + 8]	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x400784f	        0x44896050	            mov dword [rax + 0x50], r12d	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4007853	        0x4183c402	                             add r12d, 2	      3735	elf.c	FUNCTION_52	IF_11	CALL_23
0x4007857	      0xe800000000	                          call 0x400785c	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x400785c	      0xe9dcf6ffff	                           jmp 0x4006f3d	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4007861	     0xf1f80000000	                         nop dword [rax]	      3736	elf.c	FUNCTION_52	IF_11	CALL_25
0x4007868	      0xba05000000	                              mov edx, 5	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x400786d	      0xbe00000000	                              mov esi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4007872	      0xbf00000000	                              mov edi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4007877	      0xe800000000	                          call 0x400787c	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x400787c	          0x4489e2	                           mov edx, r12d	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x400787f	          0x4889c7	                            mov rdi, rax	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4007882	          0x4c89fe	                            mov rsi, r15	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4007885	            0x31c0	                            xor eax, eax	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4007887	      0xe800000000	                          call 0x400788c	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x400788c	      0xe92af4ffff	                           jmp 0x4006cbb	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4007891	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x4007898	    0x488b98980c00	           mov rbx, qword [rax + 0xc98] 	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x400789f	              0x90	                                     nop	      3746	elf.c	FUNCTION_52	IF_14	CALL_32
0x40078a0	        0x4c894340	              mov qword [rbx + 0x40], r8	      6110	elf.c	FUNCTION_73	IF_1	CALL_13
0x40078a4	        0x8b542474	            mov edx, dword [rsp + 0x74] 	      4284	elf.c	FUNCTION_59	IF_11
0x40078a8	            0x85d2	                           test edx, edx	      4284	elf.c	FUNCTION_59	IF_11
0x40078aa	     0xf8438010000	                            je 0x40079e8	      4284	elf.c	FUNCTION_59	IF_11
0x40078b0	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_10
0x40078b7	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      4200	elf.c	FUNCTION_58	IF_1
0x40078be	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_10
0x40078c5	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x40078c9	        0x488b7140	            mov rsi, qword [rcx + 0x40] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_10
0x40078cd	            0x7617	                           jbe 0x40078e6	      4200	elf.c	FUNCTION_58	IF_1
0x40078cf	      0x488d7c16ff	                lea rdi, [rsi + rdx - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x40078d4	          0x4839fe	                            cmp rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x40078d7	     0xf8753220000	                            ja 0x4009b30	      4201	elf.c	FUNCTION_58	CALL_1
0x40078dd	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x40078e0	          0x4889d6	                            mov rsi, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x40078e3	          0x4821fe	                            and rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x40078e6	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      4203	elf.c	FUNCTION_58	IF_2
0x40078ed	    0x4889b0800000	             mov qword [rax + 0x80], rsi	      4202	elf.c	FUNCTION_58
0x40078f4	          0x4885d2	                           test rdx, rdx	      4203	elf.c	FUNCTION_58	IF_2
0x40078f7	            0x7407	                            je 0x4007900	      4203	elf.c	FUNCTION_58	IF_2
0x40078f9	    0x4889b2900000	             mov qword [rdx + 0x90], rsi	      4204	elf.c	FUNCTION_58	IF_2
0x4007900	        0x83786c08	               cmp dword [rax + 0x6c], 8	      4205	elf.c	FUNCTION_58	IF_3
0x4007904	            0x7407	                            je 0x400790d	      4205	elf.c	FUNCTION_58	IF_3
0x4007906	    0x4803b0880000	             add rsi, qword [rax + 0x88]	      4206	elf.c	FUNCTION_58	IF_3
0x400790d	    0x488b90e80200	           mov rdx, qword [rax + 0x2e8] 	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x4007914	          0x4885d2	                           test rdx, rdx	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x4007917	            0x7449	                            je 0x4007962	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_13
0x4007919	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x400791d	          0x4885ff	                           test rdi, rdi	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x4007920	            0x7440	                            je 0x4007962	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x4007922	        0x4c8b4230	              mov r8, qword [rdx + 0x30]	      4200	elf.c	FUNCTION_58	IF_1
0x4007926	        0x4983f801	                               cmp r8, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400792a	            0x7617	                           jbe 0x4007943	      4200	elf.c	FUNCTION_58	IF_1
0x400792c	      0x4e8d4c06ff	                  lea r9, [rsi + r8 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x4007931	          0x4c39ce	                             cmp rsi, r9	      4201	elf.c	FUNCTION_58	CALL_1
0x4007934	     0xf8780230000	                            ja 0x4009cba	      4201	elf.c	FUNCTION_58	CALL_1
0x400793a	          0x4c89c6	                             mov rsi, r8	      4201	elf.c	FUNCTION_58	CALL_1
0x400793d	          0x48f7de	                                 neg rsi	      4201	elf.c	FUNCTION_58	CALL_1
0x4007940	          0x4c21ce	                             and rsi, r9	      4201	elf.c	FUNCTION_58	CALL_1
0x4007943	        0x4c8b4240	              mov r8, qword [rdx + 0x40]	      4203	elf.c	FUNCTION_58	IF_2
0x4007947	        0x48897218	             mov qword [rdx + 0x18], rsi	      4202	elf.c	FUNCTION_58
0x400794b	          0x4d85c0	                             test r8, r8	      4203	elf.c	FUNCTION_58	IF_2
0x400794e	            0x7407	                            je 0x4007957	      4203	elf.c	FUNCTION_58	IF_2
0x4007950	    0x4989b0900000	              mov qword [r8 + 0x90], rsi	      4204	elf.c	FUNCTION_58	IF_2
0x4007957	          0x4801f7	                            add rdi, rsi	      4206	elf.c	FUNCTION_58	IF_3
0x400795a	        0x837a0408	                  cmp dword [rdx + 4], 8	      4206	elf.c	FUNCTION_58	IF_3
0x400795e	        0x480f45f7	                         cmovne rsi, rdi	      4206	elf.c	FUNCTION_58	IF_3
0x4007962	    0x488b90380100	           mov rdx, qword [rax + 0x138] 	      4200	elf.c	FUNCTION_58	IF_1
0x4007969	        0x4883fa01	                              cmp rdx, 1	      4200	elf.c	FUNCTION_58	IF_1
0x400796d	            0x7617	                           jbe 0x4007986	      4200	elf.c	FUNCTION_58	IF_1
0x400796f	      0x488d7c16ff	                lea rdi, [rsi + rdx - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x4007974	          0x4839fe	                            cmp rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x4007977	     0xf87bf210000	                            ja 0x4009b3c	      4201	elf.c	FUNCTION_58	CALL_1
0x400797d	          0x48f7da	                                 neg rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x4007980	          0x4889d6	                            mov rsi, rdx	      4201	elf.c	FUNCTION_58	CALL_1
0x4007983	          0x4821fe	                            and rsi, rdi	      4201	elf.c	FUNCTION_58	CALL_1
0x4007986	    0x488b90480100	           mov rdx, qword [rax + 0x148] 	      4203	elf.c	FUNCTION_58	IF_2
0x400798d	    0x4889b0200100	            mov qword [rax + 0x120], rsi	      4202	elf.c	FUNCTION_58
0x4007994	          0x4885d2	                           test rdx, rdx	      4203	elf.c	FUNCTION_58	IF_2
0x4007997	            0x7407	                            je 0x40079a0	      4203	elf.c	FUNCTION_58	IF_2
0x4007999	    0x4889b2900000	             mov qword [rdx + 0x90], rsi	      4204	elf.c	FUNCTION_58	IF_2
0x40079a0	    0x83b80c010000	              cmp dword [rax + 0x10c], 8	      4205	elf.c	FUNCTION_58	IF_3
0x40079a7	          0x4889f2	                            mov rdx, rsi	      4205	elf.c	FUNCTION_58	IF_3
0x40079aa	            0x7407	                            je 0x40079b3	      4205	elf.c	FUNCTION_58	IF_3
0x40079ac	    0x480390280100	            add rdx, qword [rax + 0x128]	      4206	elf.c	FUNCTION_58	IF_3
0x40079b3	        0x48895140	             mov qword [rcx + 0x40], rdx	      4305	elf.c	FUNCTION_59	IF_11	CALL_18
0x40079b7	          0x4c89ff	                            mov rdi, r15	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x40079ba	            0x31d2	                            xor edx, edx	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x40079bc	      0xe800000000	                          call 0x40079c1	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x40079c1	            0x85c0	                           test eax, eax	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x40079c3	     0xf85f2f2ffff	                           jne 0x4006cbb	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x40079c9	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x40079ce	          0x4c89ff	                            mov rdi, r15	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x40079d1	      0xe800000000	                          call 0x40079d6	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x40079d6	            0x85c0	                           test eax, eax	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x40079d8	     0xf84ddf2ffff	                            je 0x4006cbb	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_20
0x40079de	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4312	elf.c	FUNCTION_59	IF_11	CALL_21
0x40079e3	      0xe800000000	                          call 0x40079e8	      4312	elf.c	FUNCTION_59	IF_11	CALL_21
0x40079e8	      0x41804f4740	              or byte [r15 + 0x47], 0x40	      4315	elf.c	FUNCTION_59
0x40079ed	      0xb801000000	                              mov eax, 1	      4317	elf.c	FUNCTION_59
0x40079f2	      0xe9c6f2ffff	                           jmp 0x4006cbd	      4317	elf.c	FUNCTION_59
0x40079f7	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5262	elf.c	FUNCTION_70	IF_1
0x40079fd	     0xf84e2120000	                            je 0x4008ce5	      5262	elf.c	FUNCTION_70	IF_1
0x4007a03	    0x498bb7f80000	            mov rsi, qword [r15 + 0xf8] 	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a0a	            0x31ed	                            xor ebp, ebp	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a0c	    0x488b86980c00	           mov rax, qword [rsi + 0xc98] 	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a13	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a16	          0x4885c0	                           test rax, rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a19	     0xf8467100000	                            je 0x4008a86	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a1f	            0x31c9	                            xor ecx, ecx	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a21	     0xf1f80000000	                         nop dword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a28	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x4007a2c	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a2f	          0x83c101	                              add ecx, 1	      5269	elf.c	FUNCTION_70	FOR_1
0x4007a32	          0x4885d2	                           test rdx, rdx	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x4007a35	        0x480f45ea	                         cmovne rbp, rdx	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x4007a39	          0x4885c0	                           test rax, rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a3c	            0x75ea	                           jne 0x4007a28	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007a3e	            0x85c9	                           test ecx, ecx	      5274	elf.c	FUNCTION_70	IF_3
0x4007a40	        0x894c2448	             mov dword [rsp + 0x48], ecx	      5274	elf.c	FUNCTION_70	IF_3
0x4007a44	     0xf843c100000	                            je 0x4008a86	      5274	elf.c	FUNCTION_70	IF_3
0x4007a4a	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007a4f	    0x488b88000300	           mov rcx, qword [rax + 0x300] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007a56	           0xfb601	                   movzx eax, byte [rcx]	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007a59	        0x48894618	             mov qword [rsi + 0x18], rax	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007a5d	         0xfb65101	               movzx edx, byte [rcx + 1]	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007a61	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007a68	          0x895040	             mov dword [rax + 0x40], edx	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007a6b	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5286	elf.c	FUNCTION_70	CALL_8
0x4007a72	        0x8b7c2448	            mov edi, dword [rsp + 0x48] 	      5286	elf.c	FUNCTION_70	CALL_8
0x4007a76	          0x897844	             mov dword [rax + 0x44], edi	      5286	elf.c	FUNCTION_70	CALL_8
0x4007a79	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007a80	         0xfb67101	               movzx esi, byte [rcx + 1]	      5289	elf.c	FUNCTION_70	CALL_10
0x4007a84	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007a8b	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007a8f	        0x4883ffff	             cmp rdi, 0xffffffffffffffff	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007a93	     0xf8413200000	                            je 0x4009aac	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007a99	       0xfaf742448	            imul esi, dword [rsp + 0x48]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007a9e	          0x4839f7	                            cmp rdi, rsi	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007aa1	     0xf82a9200000	                            jb 0x4009b50	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007aa7	      0x448b5c2448	           mov r11d, dword [rsp + 0x48] 	      5294	elf.c	FUNCTION_70	IF_5
0x4007aac	          0x4585db	                         test r11d, r11d	      5294	elf.c	FUNCTION_70	IF_5
0x4007aaf	     0xf8435110000	                            je 0x4008bea	      5294	elf.c	FUNCTION_70	IF_5
0x4007ab5	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4007ab9	         0xfb64901	               movzx ecx, byte [rcx + 1]	      5309	elf.c	FUNCTION_70	CALL_15
0x4007abd	            0x31d2	                            xor edx, edx	      5309	elf.c	FUNCTION_70	CALL_15
0x4007abf	          0x4889f0	                            mov rax, rsi	      5309	elf.c	FUNCTION_70	CALL_15
0x4007ac2	          0x48f7f1	                                 div rcx	      5309	elf.c	FUNCTION_70	CALL_15
0x4007ac5	          0x4885d2	                           test rdx, rdx	      5309	elf.c	FUNCTION_70	CALL_15
0x4007ac8	     0xf85c0200000	                           jne 0x4009b8e	      5309	elf.c	FUNCTION_70	CALL_15
0x4007ace	          0x4889f0	                            mov rax, rsi	      5311	elf.c	FUNCTION_70
0x4007ad1	            0x31d2	                            xor edx, edx	      5311	elf.c	FUNCTION_70
0x4007ad3	          0x4c89ff	                            mov rdi, r15	      5311	elf.c	FUNCTION_70
0x4007ad6	          0x48f7f1	                                 div rcx	      5311	elf.c	FUNCTION_70
0x4007ad9	      0xba40000000	                           mov edx, 0x40	      5311	elf.c	FUNCTION_70
0x4007ade	          0x4889c6	                            mov rsi, rax	      5311	elf.c	FUNCTION_70
0x4007ae1	      0xe800000000	                          call 0x4007ae6	      5311	elf.c	FUNCTION_70
0x4007ae6	          0x4889c3	                            mov rbx, rax	      5311	elf.c	FUNCTION_70
0x4007ae9	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5315	elf.c	FUNCTION_70	CALL_18
0x4007af0	          0x4885db	                           test rbx, rbx	      5316	elf.c	FUNCTION_70	IF_6
0x4007af3	        0x48895860	             mov qword [rax + 0x60], rbx	      5315	elf.c	FUNCTION_70	CALL_18
0x4007af7	     0xf84bef1ffff	                            je 0x4006cbb	      5316	elf.c	FUNCTION_70	IF_6
0x4007afd	      0x41f6474520	           test byte [r15 + 0x45], 0x20 	      5320	elf.c	FUNCTION_70	IF_7
0x4007b02	    0x48c744247801	               mov qword [rsp + 0x78], 1	      5319	elf.c	FUNCTION_70
0x4007b0b	            0x740e	                            je 0x4007b1b	      5320	elf.c	FUNCTION_70	IF_7
0x4007b0d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5321	elf.c	FUNCTION_70	IF_7
0x4007b12	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5321	elf.c	FUNCTION_70	IF_7
0x4007b16	      0x4889442478	             mov qword [rsp + 0x78], rax	      5321	elf.c	FUNCTION_70	IF_7
0x4007b1b	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5323	elf.c	FUNCTION_70
0x4007b20	          0x4889e9	                            mov rcx, rbp	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007b23	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5323	elf.c	FUNCTION_70
0x4007b2a	           0xfb610	                   movzx edx, byte [rax]	      5323	elf.c	FUNCTION_70
0x4007b2d	         0xfb64001	               movzx eax, byte [rax + 1]	      5325	elf.c	FUNCTION_70	IF_8
0x4007b31	       0xfaf442448	            imul eax, dword [rsp + 0x48]	      5325	elf.c	FUNCTION_70	IF_8
0x4007b36	          0x4801d0	                            add rax, rdx	      5325	elf.c	FUNCTION_70	IF_8
0x4007b39	      0xba00000000	                              mov edx, 0	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007b3e	          0x4829c1	                            sub rcx, rax	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007b41	          0x4839e8	                            cmp rax, rbp	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007b44	        0x480f46d1	                         cmovbe rdx, rcx	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007b48	          0x4801d0	                            add rax, rdx	      5329	elf.c	FUNCTION_70	ELSE_3
0x4007b4b	    0x488994248000	             mov qword [rsp + 0x80], rdx	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007b53	        0x48890424	                    mov qword [rsp], rax	      5329	elf.c	FUNCTION_70	ELSE_3
0x4007b57	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007b5e	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007b65	          0x4c8b32	                    mov r14, qword [rdx]	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007b68	          0x4d85f6	                           test r14, r14	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007b6b	     0xf84f6050000	                            je 0x4008167	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007b71	    0xc74424580000	               mov dword [rsp + 0x58], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007b79	    0xc78424880000	               mov dword [rsp + 0x88], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007b84	      0x4c897c2410	             mov qword [rsp + 0x10], r15	        64	stdio2.h	FUNCTION_218	CALL_1
0x4007b89	     0xf1f80000000	                         nop dword [rax]	        64	stdio2.h	FUNCTION_218	CALL_1
0x4007b90	        0x458b4644	            mov r8d, dword [r14 + 0x44] 	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4007b94	        0x4183f801	                              cmp r8d, 1	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4007b98	     0xf8682090000	                           jbe 0x4008520	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4007b9e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007ba3	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007baa	      0x6683783804	                cmp word [rax + 0x38], 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007baf	            0x750e	                           jne 0x4007bbf	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007bb1	        0x4d8b5608	                mov r10, qword [r14 + 8]	      5346	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4007bb5	        0x4983fa04	                              cmp r10, 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007bb9	     0xf841e070000	                            je 0x40082dd	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007bbf	        0x498d7e48	                   lea rdi, [r14 + 0x48]	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007bc3	          0x4489c6	                            mov esi, r8d	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007bc6	      0xb900000000	                              mov ecx, 0	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007bcb	      0xba08000000	                              mov edx, 8	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007bd0	      0xe800000000	                          call 0x4007bd5	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007bd5	        0x4d8b5608	                mov r10, qword [r14 + 8]	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007bd9	        0x458b4644	            mov r8d, dword [r14 + 0x44] 	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007bdd	          0x4c8913	                    mov qword [rbx], r10	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007be0	        0x4d8b5e10	            mov r11, qword [r14 + 0x10] 	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007be4	          0x4585c0	                           test r8d, r8d	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x4007be7	        0x4c895b08	                mov qword [rbx + 8], r11	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007beb	     0xf85ff060000	                           jne 0x40082f0	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x4007bf1	    0x48c743180000	               mov qword [rbx + 0x18], 0	      5359	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x4007bf9	      0x450fb64e40	           movzx r9d, byte [r14 + 0x40] 	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007bfe	          0x4589cc	                           mov r12d, r9d	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007c01	        0x4183e402	                             and r12d, 2	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007c05	     0xf85c5060000	                           jne 0x40082d0	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007c0b	    0x48c743200000	               mov qword [rbx + 0x20], 0	      5366	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x4007c13	        0x4983fa01	                              cmp r10, 1	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007c17	     0xf8473070000	                            je 0x4008390	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007c1d	        0x41f6c104	                             test r9b, 4	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007c21	     0xf8401070000	                            je 0x4008328	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007c27	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007c2b	        0x48894338	             mov qword [rbx + 0x38], rax	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007c2f	        0x4983fa01	                              cmp r10, 1	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4007c33	     0xf8486070000	                            je 0x40083bf	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4007c39	        0x4983fa02	                              cmp r10, 2	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x4007c3d	     0xf841d0c0000	                            je 0x4008860	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x4007c43	            0x31c9	                            xor ecx, ecx	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4007c45	        0x4983fa04	                              cmp r10, 4	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x4007c49	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4007c52	     0xf8478080000	                            je 0x40084d0	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x4007c58	          0x4489c8	                            mov eax, r9d	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c5b	    0x48c743100000	               mov qword [rbx + 0x10], 0	      5479	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007c63	    0x48c743280000	               mov qword [rbx + 0x28], 0	      5480	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007c6b	          0x83e010	                           and eax, 0x10	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c6e	    0x48c743300000	               mov qword [rbx + 0x30], 0	      5481	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007c76	            0x7468	                            je 0x4007ce0	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c78	        0x41f6c101	                             test r9b, 1	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4007c7c	            0x7508	                           jne 0x4007c86	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4007c7e	        0x4983cb04	                               or r11, 4	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4007c82	        0x4c895b08	                mov qword [rbx + 8], r11	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4007c86	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c8b	          0x4585c0	                           test r8d, r8d	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4007c8e	    0x488b97000300	           mov rdx, qword [rdi + 0x300] 	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c95	           0xfb632	                   movzx esi, byte [rdx]	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c98	        0x48897328	             mov qword [rbx + 0x28], rsi	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c9c	           0xfb612	                   movzx edx, byte [rdx]	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007c9f	        0x48895330	             mov qword [rbx + 0x30], rdx	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4007ca3	            0x743b	                            je 0x4007ce0	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4007ca5	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007ca9	        0x488b3c24	                    mov rdi, qword [rsp]	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007cad	          0x4839fa	                            cmp rdx, rdi	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007cb0	     0xf828f210000	                            jb 0x4009e45	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007cb6	          0x4584e4	                         test r12b, r12b	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007cb9	     0xf85ba0d0000	                           jne 0x4008a79	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007cbf	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007cc3	          0x4839f7	                            cmp rdi, rsi	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007cc6	     0xf8779210000	                            ja 0x4009e45	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4007ccc	        0x488b3c24	                    mov rdi, qword [rsp]	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4007cd0	          0x4829fa	                            sub rdx, rdi	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4007cd3	          0x4829fe	                            sub rsi, rdi	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x4007cd6	        0x48895318	             mov qword [rbx + 0x18], rdx	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4007cda	        0x48897320	             mov qword [rbx + 0x20], rsi	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x4007cde	            0x6690	                                     nop	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x4007ce0	        0x41f6c120	                          test r9b, 0x20	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007ce4	            0x7477	                            je 0x4007d5d	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007ce6	        0x41f6c101	                             test r9b, 1	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x4007cea	            0x7505	                           jne 0x4007cf1	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x4007cec	      0x48834b0804	                   or qword [rbx + 8], 4	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x4007cf1	            0x84c0	                             test al, al	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4007cf3	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4007cf8	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4007cff	            0x751f	                           jne 0x4007d20	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4007d01	           0xfb610	                   movzx edx, byte [rax]	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4007d04	          0x4585c0	                           test r8d, r8d	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x4007d07	        0x48895310	             mov qword [rbx + 0x10], rdx	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4007d0b	            0x7413	                            je 0x4007d20	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x4007d0d	        0x482b1424	                    sub rdx, qword [rsp]	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x4007d11	        0x48015318	            add qword [rbx + 0x18], rdx 	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x4007d15	          0x4584e4	                         test r12b, r12b	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x4007d18	            0x7506	                           jne 0x4007d20	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x4007d1a	        0x48015320	            add qword [rbx + 0x20], rdx 	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x4007d1e	            0x6690	                                     nop	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x4007d20	         0xfb65001	               movzx edx, byte [rax + 1]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d24	        0x8b7c2448	            mov edi, dword [rsp + 0x48] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d28	           0xfafd7	                           imul edx, edi	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d2b	        0x48035328	             add rdx, qword [rbx + 0x28]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d2f	        0x48895328	             mov qword [rbx + 0x28], rdx	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d33	         0xfb64001	               movzx eax, byte [rax + 1]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d37	           0xfafc7	                           imul eax, edi	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d3a	        0x48034330	             add rax, qword [rbx + 0x30]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d3e	          0x4585c0	                           test r8d, r8d	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4007d41	        0x48894330	             mov qword [rbx + 0x30], rax	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4007d45	            0x7416	                            je 0x4007d5d	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4007d47	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4007d4f	          0x4801fa	                            add rdx, rdi	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4007d52	          0x4801f8	                            add rax, rdi	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4007d55	        0x48895328	             mov qword [rbx + 0x28], rdx	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4007d59	        0x48894330	             mov qword [rbx + 0x30], rax	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4007d5d	        0x4983fa01	                              cmp r10, 1	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4007d61	     0xf8409060000	                            je 0x4008370	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4007d67	        0x4983fa04	                              cmp r10, 4	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4007d6b	     0xf84e7050000	                            je 0x4008358	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4007d71	          0x4585c0	                           test r8d, r8d	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007d74	        0x4d8d7e48	                   lea r15, [r14 + 0x48]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007d78	          0x488b33	                    mov rsi, qword [rbx]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007d7b	     0xf84b2030000	                            je 0x4008133	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007d81	          0x4531ed	                          xor r13d, r13d	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007d84	    0x41bb01000000	                             mov r11d, 1	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4007d8a	          0x4d89f2	                            mov r10, r14	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4007d8d	      0xe993000000	                           jmp 0x4007e25	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4007d92	    0x660f1f440000	                    nop word [rax + rax]	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4007d98	            0x84c0	                             test al, al	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007d9a	     0xf85ac000000	                           jne 0x4007e4c	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007da0	        0x4883fe04	                              cmp rsi, 4	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007da4	     0xf8446010000	                            je 0x4007ef0	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007daa	        0x837d0408	                  cmp dword [rbp + 4], 8	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007dae	     0xf849c010000	                            je 0x4007f50	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007db4	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007db8	        0x48014328	            add qword [rbx + 0x28], rax 	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x4007dbc	        0xf6450802	                  test byte [rbp + 8], 2	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x4007dc0	            0x7404	                            je 0x4007dc6	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x4007dc2	        0x48014330	            add qword [rbx + 0x30], rax 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4007dc6	        0x4c3b7338	            cmp r14, qword [rbx + 0x38] 	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007dca	      0x410fb64240	           movzx eax, byte [r10 + 0x40] 	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007dcf	            0x7612	                           jbe 0x4007de3	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007dd1	            0xa804	                              test al, 4	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007dd3	            0x750e	                           jne 0x4007de3	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007dd5	        0x4883fe01	                              cmp rsi, 1	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007dd9	     0xf84c9020000	                            je 0x40080a8	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007ddf	        0x4c897338	             mov qword [rbx + 0x38], r14	      5676	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x4007de3	            0xa801	                              test al, 1	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4007de5	            0x752a	                           jne 0x4007e11	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4007de7	        0x488b4308	                mov rax, qword [rbx + 8]	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4007deb	          0x4889c2	                            mov rdx, rax	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4007dee	        0x4883ca04	                               or rdx, 4	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4007df2	        0x48895308	                mov qword [rbx + 8], rdx	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x4007df6	        0x488b5508	                mov rdx, qword [rbp + 8]	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4007dfa	          0xf6c204	                              test dl, 4	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4007dfd	            0x7408	                            je 0x4007e07	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4007dff	        0x4883c805	                               or rax, 5	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4007e03	        0x48894308	                mov qword [rbx + 8], rax	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x4007e07	          0x83e201	                              and edx, 1	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4007e0a	            0x7405	                            je 0x4007e11	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4007e0c	      0x48834b0802	                   or qword [rbx + 8], 2	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4007e11	          0x488b33	                    mov rsi, qword [rbx]	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x4007e14	        0x4183c501	                             add r13d, 1	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007e18	        0x4983c708	                              add r15, 8	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007e1c	          0x4539c5	                           cmp r13d, r8d	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007e1f	     0xf830b030000	                           jae 0x4008130	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007e25	          0x4d8b27	                    mov r12, qword [r15]	      5562	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4007e28	          0x4d89de	                            mov r14, r11	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4007e2b	      0x418b4c2470	            mov ecx, dword [r12 + 0x70] 	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4007e30	    0x498bac24e000	            mov rbp, qword [r12 + 0xe0] 	      5563	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_35
0x4007e38	          0x49d3e6	                             shl r14, cl	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_36
0x4007e3b	        0x4883fe07	                              cmp rsi, 7	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e3f	           0xf94c0	                                 sete al	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e42	        0x4883fe01	                              cmp rsi, 1	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e46	     0xf854cffffff	                           jne 0x4007d98	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e4c	          0x8b5504	                mov edx, dword [rbp + 4]	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e4f	          0x83fa08	                              cmp edx, 8	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e52	     0xf8450010000	                            je 0x4007fa8	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e58	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      5573	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e5c	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e60	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	      5575	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e65	        0x4c8d0c06	                     lea r9, [rsi + rax]	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e69	          0x4989c8	                             mov r8, rcx	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4007e6c	          0x4d29c8	                              sub r8, r9	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4007e6f	            0x7412	                            je 0x4007e83	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4007e71	          0x4939c9	                             cmp r9, rcx	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4007e74	     0xf8746020000	                            ja 0x40080c0	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4007e7a	          0x4c39ce	                             cmp rsi, r9	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4007e7d	     0xf873d020000	                            ja 0x40080c0	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4007e83	        0x498d0c00	                     lea rcx, [r8 + rax]	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e87	          0x83fa08	                              cmp edx, 8	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4007e8a	        0x48894b30	             mov qword [rbx + 0x30], rcx	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007e8e	            0x7419	                            je 0x4007ea9	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4007e90	        0x4c8b4b28	              mov r9, qword [rbx + 0x28]	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4007e94	        0x4b8d0408	                      lea rax, [r8 + r9]	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4007e98	          0x4839c1	                            cmp rcx, rax	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4007e9b	     0xf872f010000	                            ja 0x4007fd0	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4007ea1	        0x4c010424	                     add qword [rsp], r8	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4007ea5	        0x48894328	             mov qword [rbx + 0x28], rax	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4007ea9	          0x488b33	                    mov rsi, qword [rbx]	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4007eac	        0x458b4244	            mov r8d, dword [r10 + 0x44] 	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4007eb0	        0x4883fe04	                              cmp rsi, 4	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007eb4	            0x743a	                            je 0x4007ef0	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007eb6	        0x4883fe01	                              cmp rsi, 1	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4007eba	     0xf85eafeffff	                           jne 0x4007daa	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4007ec0	        0x837d0408	                  cmp dword [rbp + 4], 8	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4007ec4	        0x488b3c24	                    mov rdi, qword [rsp]	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4007ec8	    0x4989bc249000	             mov qword [r12 + 0x90], rdi	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4007ed0	        0x48897d18	            mov qword [rbp + 0x18], rdi 	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x4007ed4	     0xf84b6010000	                            je 0x4008090	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4007eda	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4007ede	          0x4801c7	                            add rdi, rax	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4007ee1	        0x48893c24	                    mov qword [rsp], rdi	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4007ee5	      0xe9cefeffff	                           jmp 0x4007db8	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4007eea	    0x660f1f440000	                    nop word [rax + rax]	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4007ef0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007ef5	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007ef9	        0x88442418	               mov byte [rsp + 0x18], al	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007efd	          0x83e007	                              and eax, 7	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007f00	            0x3c03	                               cmp al, 3	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007f02	     0xf85a2feffff	                           jne 0x4007daa	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	CALL_40
0x4007f08	          0x4585ed	                         test r13d, r13d	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f0b	     0xf858f030000	                           jne 0x40082a0	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f11	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f15	        0x488b3c24	                    mov rdi, qword [rsp]	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f19	    0x4989bc249000	             mov qword [r12 + 0x90], rdi	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f21	        0x48897d18	            mov qword [rbp + 0x18], rdi 	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f25	          0x4801c7	                            add rdi, rax	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f28	        0x48894328	             mov qword [rbx + 0x28], rax	      5615	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f2c	    0x48c743300000	               mov qword [rbx + 0x30], 0	      5616	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f34	    0x48c743380100	               mov qword [rbx + 0x38], 1	      5617	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f3c	        0x48893c24	                    mov qword [rsp], rdi	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f40	      0x410fb64240	           movzx eax, byte [r10 + 0x40] 	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f45	      0xe999feffff	                           jmp 0x4007de3	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f4a	    0x660f1f440000	                    nop word [rax + rax]	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4007f50	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f54	          0xf6c504	                              test ch, 4	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f57	            0x742b	                            je 0x4007f84	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f59	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f5e	            0x7524	                           jne 0x4007f84	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f60	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4007f62	          0x4d85f6	                           test r14, r14	      5194	elf.c	FUNCTION_67	IF_1
0x4007f65	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_41
0x4007f69	            0x7409	                            je 0x4007f74	      5194	elf.c	FUNCTION_67	IF_1
0x4007f6b	        0x482b0424	                    sub rax, qword [rsp]	      5194	elf.c	FUNCTION_67	IF_1
0x4007f6f	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4007f71	          0x49f7f6	                                 div r14	      5194	elf.c	FUNCTION_67	IF_1
0x4007f74	        0x48031424	                    add rdx, qword [rsp]	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f78	    0x498994249000	             mov qword [r12 + 0x90], rdx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f80	        0x48895518	            mov qword [rbp + 0x18], rdx 	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4007f84	          0xf6c102	                              test cl, 2	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4007f87	     0xf8439feffff	                            je 0x4007dc6	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4007f8d	        0x4883fe07	                              cmp rsi, 7	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x4007f91	            0x7409	                            je 0x4007f9c	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x4007f93	          0x80e504	                               and ch, 4	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4007f96	     0xf852afeffff	                           jne 0x4007dc6	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4007f9c	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4007fa0	      0xe91dfeffff	                           jmp 0x4007dc2	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4007fa5	           0xf1f00	                         nop dword [rax]	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4007fa8	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fac	          0xf6c102	                              test cl, 2	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007faf	     0xf84fbfeffff	                            je 0x4007eb0	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fb5	          0x80e504	                               and ch, 4	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fb8	     0xf849afeffff	                            je 0x4007e58	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fbe	            0x84c0	                             test al, al	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fc0	     0xf84eafeffff	                            je 0x4007eb0	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fc6	      0xe98dfeffff	                           jmp 0x4007e58	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fcb	       0xf1f440000	                   nop dword [rax + rax]	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4007fd0	        0x488b3424	                    mov rsi, qword [rsp]	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007fd4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007fd9	            0x31d2	                            xor edx, edx	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007fdb	      0x4c89542430	             mov qword [rsp + 0x30], r10	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007fe0	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007fe5	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007fea	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007fef	      0xe800000000	                          call 0x4007ff4	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007ff4	            0x85c0	                           test eax, eax	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007ff6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4007ffb	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008000	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008005	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x400800a	     0xf85abecffff	                           jne 0x4006cbb	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008010	          0x4c29c9	                             sub rcx, r9	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008013	      0x4c89542428	             mov qword [rsp + 0x28], r10	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008018	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400801d	          0x4889cf	                            mov rdi, rcx	      5235	elf.c	FUNCTION_69	CALL_2
0x4008020	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5235	elf.c	FUNCTION_69	CALL_2
0x4008025	      0xe800000000	                          call 0x400802a	      5235	elf.c	FUNCTION_69	CALL_2
0x400802a	          0x4885c0	                           test rax, rax	      5236	elf.c	FUNCTION_69	IF_2
0x400802d	     0xf8488ecffff	                            je 0x4006cbb	      5236	elf.c	FUNCTION_69	IF_2
0x4008033	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      5238	elf.c	FUNCTION_69	CALL_3
0x4008038	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5238	elf.c	FUNCTION_69	CALL_3
0x400803d	          0x4889c7	                            mov rdi, rax	      5238	elf.c	FUNCTION_69	CALL_3
0x4008040	      0x4889442430	             mov qword [rsp + 0x30], rax	      5238	elf.c	FUNCTION_69	CALL_3
0x4008045	          0x4c89c6	                             mov rsi, r8	      5238	elf.c	FUNCTION_69	CALL_3
0x4008048	      0x4c89442460	              mov qword [rsp + 0x60], r8	      5238	elf.c	FUNCTION_69	CALL_3
0x400804d	      0xe800000000	                          call 0x4008052	      5238	elf.c	FUNCTION_69	CALL_3
0x4008052	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      5239	elf.c	FUNCTION_69	CALL_4
0x4008057	      0x4889442418	             mov qword [rsp + 0x18], rax	      5238	elf.c	FUNCTION_69	CALL_3
0x400805c	          0x4889cf	                            mov rdi, rcx	      5239	elf.c	FUNCTION_69	CALL_4
0x400805f	      0xe800000000	                          call 0x4008064	      5239	elf.c	FUNCTION_69	CALL_4
0x4008064	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008069	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x400806e	          0x4939c0	                             cmp r8, rax	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008071	     0xf8544ecffff	                           jne 0x4006cbb	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008077	          0x4c89c0	                             mov rax, r8	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x400807a	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x400807f	        0x48034328	             add rax, qword [rbx + 0x28]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008083	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008088	      0xe914feffff	                           jmp 0x4007ea1	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x400808d	           0xf1f00	                         nop dword [rax]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008090	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_39
0x4008094	          0xf6c102	                              test cl, 2	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008097	     0xf8429fdffff	                            je 0x4007dc6	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400809d	      0xe9f1feffff	                           jmp 0x4007f93	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x40080a2	    0x660f1f440000	                    nop word [rax + rax]	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x40080a8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40080ad	        0xf6474520	           test byte [rdi + 0x45], 0x20 	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40080b1	     0xf852cfdffff	                           jne 0x4007de3	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40080b7	      0xe923fdffff	                           jmp 0x4007ddf	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40080bc	         0xf1f4000	                         nop dword [rax]	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40080c0	      0xba05000000	                              mov edx, 5	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080c5	      0xbe00000000	                              mov esi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080ca	      0xbf00000000	                              mov edi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080cf	      0x4c89542430	             mov qword [rsp + 0x30], r10	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080d4	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080d9	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080de	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080e3	      0xe800000000	                          call 0x40080e8	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_38
0x40080e8	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x40080ed	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x40080f2	          0x4c89e2	                            mov rdx, r12	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x40080f5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x40080fa	          0x4889c7	                            mov rdi, rax	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x40080fd	            0x31c0	                            xor eax, eax	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x40080ff	          0x4d89c8	                              mov r8, r9	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008102	      0xe800000000	                          call 0x4008107	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_37
0x4008107	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400810c	          0x8b5504	                mov edx, dword [rbp + 4]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400810f	          0x4531c0	                            xor r8d, r8d	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008112	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008117	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400811c	      0x4d894c2430	              mov qword [r12 + 0x30], r9	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008121	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008125	      0xe959fdffff	                           jmp 0x4007e83	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400812a	    0x660f1f440000	                    nop word [rax + rax]	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008130	          0x4d89d6	                            mov r14, r10	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008133	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008138	        0x48293c24	                    sub qword [rsp], rdi	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400813c	        0x4883fe01	                              cmp rsi, 1	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008140	     0xf84ea030000	                            je 0x4008530	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008146	          0x4d8b36	                    mov r14, qword [r14]	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008149	        0x4883c340	                           add rbx, 0x40	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400814d	      0x8344245801	               add dword [rsp + 0x58], 1	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008152	          0x4d85f6	                           test r14, r14	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008155	     0xf8535faffff	                           jne 0x4007b90	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x400815b	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008160	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008167	        0x488b0c24	                    mov rcx, qword [rsp]	      5729	elf.c	FUNCTION_70	CALL_53
0x400816b	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5729	elf.c	FUNCTION_70	CALL_53
0x4008172	          0x4989cc	                            mov r12, rcx	      5729	elf.c	FUNCTION_70	CALL_53
0x4008175	        0x48894a40	             mov qword [rdx + 0x40], rcx	      5729	elf.c	FUNCTION_70	CALL_53
0x4008179	    0x8bb0fc020000	           mov esi, dword [rax + 0x2fc] 	      5752	elf.c	FUNCTION_71	CALL_3
0x400817f	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      5751	elf.c	FUNCTION_71	CALL_2
0x4008183	        0x498b4f08	                mov rcx, qword [r15 + 8]	      5739	elf.c	FUNCTION_71	CALL_1
0x4008187	        0x4c8d7308	                      lea r14, [rbx + 8]	      5754	elf.c	FUNCTION_71	FOR_1
0x400818b	    0x488b89680300	           mov rcx, qword [rcx + 0x368] 	      5739	elf.c	FUNCTION_71	CALL_1
0x4008192	        0x488d2cf3	                  lea rbp, [rbx + rsi*8]	      5752	elf.c	FUNCTION_71	CALL_3
0x4008196	          0x4c39f5	                            cmp rbp, r14	      5754	elf.c	FUNCTION_71	FOR_1
0x4008199	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5739	elf.c	FUNCTION_71	CALL_1
0x400819e	     0xf87c5000000	                            ja 0x4008269	      5754	elf.c	FUNCTION_71	FOR_1
0x40081a4	      0xe966090000	                           jmp 0x4008b0f	      5754	elf.c	FUNCTION_71	FOR_1
0x40081a9	     0xf1f80000000	                         nop dword [rax]	      5754	elf.c	FUNCTION_71	FOR_1
0x40081b0	        0x418b5504	                mov edx, dword [r13 + 4]	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x40081b4	          0x83fa08	                              cmp edx, 8	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x40081b7	     0xf8410090000	                            je 0x4008acd	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x40081bd	      0x41f6450802	                  test byte [r13 + 8], 2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x40081c2	     0xf847e070000	                            je 0x4008946	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x40081c8	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40081cd	     0xf8465080000	                            je 0x4008a38	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40081d3	          0x4885c9	                           test rcx, rcx	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x40081d6	     0xf84031c0000	                            je 0x4009ddf	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x40081dc	          0x488b01	                    mov rax, qword [rcx]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x40081df	        0x48890424	                    mov qword [rsp], rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x40081e3	      0xba05000000	                              mov edx, 5	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x40081e8	      0xbe00000000	                              mov esi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x40081ed	      0xbf00000000	                              mov edi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x40081f2	      0xe800000000	                          call 0x40081f7	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x40081f7	        0x488b1424	                    mov rdx, qword [rsp]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x40081fb	          0x4889c7	                            mov rdi, rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x40081fe	          0x4c89fe	                            mov rsi, r15	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008201	            0x31c0	                            xor eax, eax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008203	      0xe800000000	                          call 0x4008208	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008208	      0x41f6474520	           test byte [r15 + 0x45], 0x20 	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400820d	     0xf8421080000	                            je 0x4008a34	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008213	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008218	     0xf8416080000	                            je 0x4008a34	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x400821e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008223	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008225	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008229	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x400822d	          0x4885c9	                           test rcx, rcx	      5194	elf.c	FUNCTION_67	IF_1
0x4008230	            0x7408	                            je 0x400823a	      5194	elf.c	FUNCTION_67	IF_1
0x4008232	          0x4c29e0	                            sub rax, r12	      5194	elf.c	FUNCTION_67	IF_1
0x4008235	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008237	          0x48f7f1	                                 div rcx	      5194	elf.c	FUNCTION_67	IF_1
0x400823a	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5194	elf.c	FUNCTION_67	IF_1
0x400823e	          0x4901d4	                            add r12, rdx	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008241	          0x4885c9	                           test rcx, rcx	      4203	elf.c	FUNCTION_58	IF_2
0x4008244	        0x4d896518	             mov qword [r13 + 0x18], r12	      4202	elf.c	FUNCTION_58
0x4008248	            0x7407	                            je 0x4008251	      4203	elf.c	FUNCTION_58	IF_2
0x400824a	    0x4c89a1900000	             mov qword [rcx + 0x90], r12	      4204	elf.c	FUNCTION_58	IF_2
0x4008251	      0x41837d0408	                  cmp dword [r13 + 4], 8	      4205	elf.c	FUNCTION_58	IF_3
0x4008256	            0x7404	                            je 0x400825c	      4205	elf.c	FUNCTION_58	IF_3
0x4008258	        0x4d036520	             add r12, qword [r13 + 0x20]	      4206	elf.c	FUNCTION_58	IF_3
0x400825c	        0x4983c608	                              add r14, 8	      5754	elf.c	FUNCTION_71	FOR_1
0x4008260	          0x4c39f5	                            cmp rbp, r14	      5754	elf.c	FUNCTION_71	FOR_1
0x4008263	     0xf8698080000	                           jbe 0x4008b01	      5754	elf.c	FUNCTION_71	FOR_1
0x4008269	          0x4d8b2e	                    mov r13, qword [r14]	      5758	elf.c	FUNCTION_71	FOR_1
0x400826c	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008270	          0x4885c9	                           test rcx, rcx	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008273	     0xf8444ffffff	                            je 0x40081bd	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008279	    0x488b81900000	            mov rax, qword [rcx + 0x90] 	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008280	          0x4885c0	                           test rax, rax	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008283	     0xf8427ffffff	                            je 0x40081b0	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008289	        0x493b4518	            cmp rax, qword [r13 + 0x18] 	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400828d	            0x74cd	                            je 0x400825c	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400828f	      0xbe83160000	                         mov esi, 0x1683	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008294	      0xbf00000000	                              mov edi, 0	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008299	      0xe800000000	                          call 0x400829e	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x400829e	            0xebbc	                           jmp 0x400825c	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x40082a0	    0x49c784249000	               mov qword [r12 + 0x90], 0	      5622	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40082ac	    0x49c744243800	               mov qword [r12 + 0x38], 0	      5623	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40082b5	      0xbe04000000	                              mov esi, 4	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40082ba	    0x41c744242000	               mov dword [r12 + 0x20], 0	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40082c3	      0xe94cfbffff	                           jmp 0x4007e14	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40082c8	     0xf1f84000000	                   nop dword [rax + rax]	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40082d0	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x40082d4	        0x48894320	             mov qword [rbx + 0x20], rax	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x40082d8	      0xe936f9ffff	                           jmp 0x4007c13	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x40082dd	    0x48c703040000	                      mov qword [rbx], 4	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40082e4	        0x4d8b5e10	            mov r11, qword [r14 + 0x10] 	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40082e8	        0x4c895b08	                mov qword [rbx + 8], r11	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40082ec	         0xf1f4000	                         nop dword [rax]	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40082f0	        0x498b4e48	            mov rcx, qword [r14 + 0x48] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x40082f4	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x40082f8	        0x488b4128	            mov rax, qword [rcx + 0x28] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x40082fc	          0x4829d0	                            sub rax, rdx	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x40082ff	        0x48894318	             mov qword [rbx + 0x18], rax	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4008303	      0x450fb64e40	           movzx r9d, byte [r14 + 0x40] 	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4008308	          0x4589cc	                           mov r12d, r9d	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400830b	        0x4183e402	                             and r12d, 2	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x400830f	            0x75bf	                           jne 0x40082d0	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4008311	        0x488b4130	            mov rax, qword [rcx + 0x30] 	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4008315	          0x4829d0	                            sub rax, rdx	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4008318	        0x48894320	             mov qword [rbx + 0x20], rax	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x400831c	      0xe9f2f8ffff	                           jmp 0x4007c13	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4008321	     0xf1f80000000	                         nop dword [rax]	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4008328	          0x4585c0	                           test r8d, r8d	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400832b	     0xf858f050000	                           jne 0x40088c0	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4008331	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4008336	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400833d	         0xfb6480b	            movzx ecx, byte [rax + 0xb] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4008341	      0xb801000000	                              mov eax, 1	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4008346	            0xd3e0	                             shl eax, cl	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4008348	            0x4898	                                    cdqe	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400834a	        0x48894338	             mov qword [rbx + 0x38], rax	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x400834e	      0xe9dcf8ffff	                           jmp 0x4007c2f	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4008353	       0xf1f440000	                   nop dword [rax + rax]	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4008358	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x400835d	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4008361	        0x88442418	               mov byte [rsp + 0x18], al	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4008365	          0x83e007	                              and eax, 7	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4008368	            0x3c03	                               cmp al, 3	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x400836a	     0xf8501faffff	                           jne 0x4007d71	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	CALL_34
0x4008370	        0x4183e130	                           and r9d, 0x30	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x4008374	     0xf8586060000	                           jne 0x4008a00	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400837a	        0x488b0424	                    mov rax, qword [rsp]	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400837e	        0x48894310	             mov qword [rbx + 0x10], rax	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x4008382	      0xe9eaf9ffff	                           jmp 0x4007d71	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x4008387	    0x660f1f840000	                    nop word [rax + rax]	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x4008390	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4008395	        0xf6404520	           test byte [rax + 0x45], 0x20 	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4008399	     0xf847ef8ffff	                            je 0x4007c1d	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x400839f	        0x41f6c104	                             test r9b, 4	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40083a3	            0x7409	                            je 0x40083ae	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40083a5	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40083a9	      0x4889442478	             mov qword [rsp + 0x78], rax	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x40083ae	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40083b3	    0x838424880000	               add dword [rsp + 0x88], 1	      5385	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40083bb	        0x48894338	             mov qword [rbx + 0x38], rax	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x40083bf	          0x4585c0	                           test r8d, r8d	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x40083c2	     0xf8442010000	                            je 0x400850a	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x40083c8	        0x41f6c104	                             test r9b, 4	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083cc	     0xf8456150000	                            je 0x4009928	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083d2	        0x4c8b7b38	            mov r15, qword [rbx + 0x38] 	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083d6	        0x498d7e48	                   lea rdi, [r14 + 0x48]	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083da	        0x418d70ff	                       lea esi, [r8 - 1]	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083de	      0x498d4cf650	          lea rcx, [r14 + rsi*8 + 0x50] 	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083e3	          0x4c89fa	                            mov rdx, r15	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x40083f0	          0x488b07	                    mov rax, qword [rdi]	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x40083f3	    0xf74020020100	         test dword [rax + 0x20], 0x102 	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x40083fa	            0x750e	                           jne 0x400840a	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x40083fc	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4008403	    0xc74004080000	                  mov dword [rax + 4], 8	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400840a	        0x4883c708	                              add rdi, 8	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400840e	          0x4839cf	                            cmp rdi, rcx	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x4008411	            0x75dd	                           jne 0x40083f0	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x4008413	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4008417	          0x4989d7	                            mov r15, rdx	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400841a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4008421	        0x83780408	                  cmp dword [rax + 4], 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4008425	     0xf8548150000	                           jne 0x4009973	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400842b	        0x498d4650	                   lea rax, [r14 + 0x50]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400842f	            0xeb1f	                           jmp 0x4008450	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4008431	     0xf1f80000000	                         nop dword [rax]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4008438	          0x488b30	                    mov rsi, qword [rax]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400843b	        0x4883c008	                              add rax, 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400843f	    0x488bb6e00000	            mov rsi, qword [rsi + 0xe0] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4008446	        0x837e0408	                  cmp dword [rsi + 4], 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x400844a	     0xf8520150000	                           jne 0x4009970	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_24
0x4008450	          0x4839c1	                            cmp rcx, rax	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4008453	            0x75e3	                           jne 0x4008438	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4008455	          0x4989d7	                            mov r15, rdx	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4008458	      0xb901000000	                              mov ecx, 1	      5428	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400845d	          0x4d85ff	                           test r15, r15	      5194	elf.c	FUNCTION_67	IF_1
0x4008460	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_25
0x4008464	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5194	elf.c	FUNCTION_67	IF_1
0x400846d	            0x740e	                            je 0x400847d	      5194	elf.c	FUNCTION_67	IF_1
0x400846f	        0x482b0424	                    sub rax, qword [rsp]	      5194	elf.c	FUNCTION_67	IF_1
0x4008473	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008475	          0x49f7f7	                                 div r15	      5194	elf.c	FUNCTION_67	IF_1
0x4008478	      0x4889542438	             mov qword [rsp + 0x38], rdx	      5194	elf.c	FUNCTION_67	IF_1
0x400847d	    0x83bc24880000	               cmp dword [rsp + 0x88], 1	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4008485	     0xf8668060000	                           jbe 0x4008af3	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400848b	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4008490	    0x80b88a030000	               cmp byte [rax + 0x38a], 0	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4008497	     0xf8956060000	                           jns 0x4008af3	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x400849d	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40084a2	        0x488b3c24	                    mov rdi, qword [rsp]	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40084a6	        0x4883e801	                              sub rax, 1	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40084aa	          0x4885c7	                           test rdi, rax	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40084ad	     0xf8511170000	                           jne 0x4009bc4	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40084b3	          0x4889f8	                            mov rax, rdi	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40084b6	      0x4803442438	             add rax, qword [rsp + 0x38]	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40084bb	            0x85c9	                           test ecx, ecx	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40084bd	        0x48890424	                    mov qword [rsp], rax	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x40084c1	            0x7449	                            je 0x400850c	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40084c3	      0xb901000000	                              mov ecx, 1	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40084c8	      0xe98bf7ffff	                           jmp 0x4007c58	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40084cd	           0xf1f00	                         nop dword [rax]	      5447	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_24
0x40084d0	          0x4585c0	                           test r8d, r8d	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084d3	     0xf84e81b0000	                            je 0x400a0c1	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084d9	        0x418d50ff	                       lea edx, [r8 - 1]	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084dd	        0x498d4648	                   lea rax, [r14 + 0x48]	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084e1	      0x498d4cd650	          lea rcx, [r14 + rdx*8 + 0x50] 	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084f0	          0x488b10	                    mov rdx, qword [rax]	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084f3	        0x4883c008	                              add rax, 8	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084f7	          0x4839c8	                            cmp rax, rcx	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40084fa	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4008501	    0xc74204070000	                  mov dword [rdx + 4], 7	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4008508	            0x75e6	                           jne 0x40084f0	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400850a	            0x31c9	                            xor ecx, ecx	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400850c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008515	      0xe93ef7ffff	                           jmp 0x4007c58	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400851a	    0x660f1f440000	                    nop word [rax + rax]	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008520	        0x4d8b5608	                mov r10, qword [r14 + 8]	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008524	      0xe9b4f6ffff	                           jmp 0x4007bdd	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008529	     0xf1f80000000	                         nop dword [rax]	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008530	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008535	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008539	        0x88442418	               mov byte [rsp + 0x18], al	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x400853d	          0x83e007	                              and eax, 7	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008540	            0x3c03	                               cmp al, 3	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008542	     0xf84fefbffff	                            je 0x4008146	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	CALL_42
0x4008548	        0x4183f801	                              cmp r8d, 1	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400854c	     0xf86d7040000	                           jbe 0x4008a29	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008552	        0x418d50fe	                       lea edx, [r8 - 2]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008556	        0x498d4650	                   lea rax, [r14 + 0x50]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400855a	      0x498d7cd658	          lea rdi, [r14 + rdx*8 + 0x58] 	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400855f	            0xeb14	                           jmp 0x4008575	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008561	     0xf1f80000000	                         nop dword [rax]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008568	        0x4883c008	                              add rax, 8	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400856c	          0x4839c7	                            cmp rdi, rax	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400856f	     0xf84b4040000	                            je 0x4008a29	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008575	          0x488b10	                    mov rdx, qword [rax]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008578	        0x488b48f8	                mov rcx, qword [rax - 8]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400857c	        0x4c8b5928	            mov r11, qword [rcx + 0x28] 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008580	        0x4c395a28	            cmp qword [rdx + 0x28], r11 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008584	            0x75e2	                           jne 0x4008568	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008586	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x400858d	        0xf6420904	                  test byte [rdx + 9], 4	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x4008591	            0x7406	                            je 0x4008599	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x4008593	        0x837a0408	                  cmp dword [rdx + 4], 8	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x4008597	            0x74cf	                            je 0x4008568	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_44
0x4008599	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400859e	            0x74c8	                            je 0x4008568	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40085a0	    0x488b91e00000	            mov rdx, qword [rcx + 0xe0] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40085a7	        0xf6420904	                  test byte [rdx + 9], 4	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40085ab	            0x7406	                            je 0x40085b3	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40085ad	        0x837a0408	                  cmp dword [rdx + 4], 8	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40085b1	            0x74b5	                            je 0x4008568	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_46
0x40085b3	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40085b8	            0x74ae	                            je 0x4008568	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40085ba	          0x4531ed	                          xor r13d, r13d	      5705	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40085bd	        0x458b5644	           mov r10d, dword [r14 + 0x44] 	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40085c1	          0x4585d2	                         test r10d, r10d	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40085c4	     0xf847cfbffff	                            je 0x4008146	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40085ca	        0x4183e501	                             and r13d, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085ce	            0x31ed	                            xor ebp, ebp	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40085d0	      0x448b642458	           mov r12d, dword [rsp + 0x58] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085d5	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085da	      0x44886c2420	             mov byte [rsp + 0x20], r13b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085df	      0xe9ac000000	                           jmp 0x4008690	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085e4	         0xf1f4000	                         nop dword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085e8	        0x488d7efa	                      lea rdi, [rsi - 6]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085ec	        0x4883ff01	                              cmp rdi, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085f0	     0xf86eb000000	                           jbe 0x40086e1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085f6	          0x83e002	                              and eax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085f9	     0xf84b1010000	                            je 0x40087b0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40085ff	        0x448b4a04	                mov r9d, dword [rdx + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008603	        0x4183f908	                              cmp r9d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008607	            0x7422	                            je 0x400862b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008609	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400860d	        0x4c8b5310	            mov r10, qword [rbx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008611	          0x4c39d7	                            cmp rdi, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008614	     0xf82c7000000	                            jb 0x40086e1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400861a	        0x48037a20	             add rdi, qword [rdx + 0x20]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400861e	          0x4c29d7	                            sub rdi, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008621	        0x483b7b28	            cmp rdi, qword [rbx + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008625	     0xf87b6000000	                            ja 0x40086e1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400862b	       0xfb67c2420	           movzx edi, byte [rsp + 0x20] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008630	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008633	           0xf95c0	                                setne al	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008636	          0x4020c7	                             and dil, al	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008639	     0xf843c1a0000	                            je 0x400a07b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400863f	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008643	        0x4c8b5318	            mov r10, qword [rbx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008647	          0x4c39d0	                            cmp rax, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400864a	     0xf82f1010000	                            jb 0x4008841	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008650	          0x4c29d0	                            sub rax, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008653	        0x4183f908	                              cmp r9d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008657	            0x7509	                           jne 0x4008662	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008659	          0x4885c9	                           test rcx, rcx	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400865c	     0xf85ef190000	                           jne 0x400a051	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008662	        0x4c8b5220	            mov r10, qword [rdx + 0x20] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008666	          0x4c01d0	                            add rax, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008669	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400866d	     0xf87ce010000	                            ja 0x4008841	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008673	        0x4883fe02	                              cmp rsi, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008677	     0xf8466010000	                            je 0x40087e3	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400867d	           0xf1f00	                         nop dword [rax]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008680	          0x83c501	                              add ebp, 1	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008683	        0x413b6e44	            cmp ebp, dword [r14 + 0x44] 	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008687	     0xf83b9faffff	                           jae 0x4008146	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x400868d	          0x488b33	                    mov rsi, qword [rbx]	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008690	            0x89e8	                            mov eax, ebp	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008692	      0x4d8b6cc648	    mov r13, qword [r14 + rax*8 + 0x48] 	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008697	    0x498b95e00000	            mov rdx, qword [r13 + 0xe0] 	      5715	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	CALL_47
0x400869e	        0x488b4208	                mov rax, qword [rdx + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086a2	          0x4889c1	                            mov rcx, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086a5	    0x81e100040000	                          and ecx, 0x400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086ab	     0xf8437ffffff	                            je 0x40085e8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086b1	        0x4883fe07	                              cmp rsi, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086b5	        0x410f95c1	                               setne r9b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086b9	    0x4881fe52e574	                     cmp rsi, 0x6474e552	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086c0	        0x400f95c7	                               setne dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086c4	          0x4184f9	                           test r9b, dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086c7	     0xf8429ffffff	                            je 0x40085f6	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086cd	        0x4883fe01	                              cmp rsi, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086d1	     0xf841fffffff	                            je 0x40085f6	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40086d7	        0x837a0408	                  cmp dword [rdx + 4], 8	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x40086db	     0xf846f010000	                            je 0x4008850	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x40086e1	      0xba05000000	                              mov edx, 5	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x40086e6	      0xbe00000000	                              mov esi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x40086eb	      0xbf00000000	                              mov edi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x40086f0	      0xe800000000	                          call 0x40086f5	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_51
0x40086f5	          0x4c89ea	                            mov rdx, r13	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x40086f8	          0x4889c7	                            mov rdi, rax	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x40086fb	          0x4489e1	                           mov ecx, r12d	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x40086fe	            0x31c0	                            xor eax, eax	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x4008700	          0x4c89fe	                            mov rsi, r15	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x4008703	      0xe800000000	                          call 0x4008708	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_50
0x4008708	        0x498b4608	                mov rax, qword [r14 + 8]	      5203	elf.c	FUNCTION_68	CALL_1
0x400870c	            0x89c7	                            mov edi, eax	      5203	elf.c	FUNCTION_68	CALL_1
0x400870e	      0x4889442418	             mov qword [rsp + 0x18], rax	      5203	elf.c	FUNCTION_68	CALL_1
0x4008713	      0xe82879ffff	               call sym.get_segment_type	      5203	elf.c	FUNCTION_68	CALL_1
0x4008718	          0x4885c0	                           test rax, rax	      5206	elf.c	FUNCTION_68	IF_1
0x400871b	          0x4989c5	                            mov r13, rax	      5203	elf.c	FUNCTION_68	CALL_1
0x400871e	     0xf84ac010000	                            je 0x40088d0	      5206	elf.c	FUNCTION_68	IF_1
0x4008724	    0x488b3d000000	            mov rdi, qword [0x0400872b] 	      5219	elf.c	FUNCTION_68	CALL_2
0x400872b	      0xe800000000	                          call 0x4008730	      5219	elf.c	FUNCTION_68	CALL_2
0x4008730	    0x488b3d000000	            mov rdi, qword [0x04008737] 	        97	stdio2.h	CALL_66
0x4008737	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_66
0x400873a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400873c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x4008741	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x4008746	          0x4531ed	                          xor r13d, r13d	      5221	elf.c	FUNCTION_68	FOR_1
0x4008749	      0xe800000000	                          call 0x400874e	        97	stdio2.h	CALL_66
0x400874e	        0x458b4e44	            mov r9d, dword [r14 + 0x44] 	      5221	elf.c	FUNCTION_68	FOR_1
0x4008752	          0x4585c9	                           test r9d, r9d	      5221	elf.c	FUNCTION_68	FOR_1
0x4008755	            0x7436	                            je 0x400878d	      5221	elf.c	FUNCTION_68	FOR_1
0x4008757	    0x660f1f840000	                    nop word [rax + rax]	      5221	elf.c	FUNCTION_68	FOR_1
0x4008760	          0x4489e8	                           mov eax, r13d	      5222	elf.c	FUNCTION_68	FOR_1
0x4008763	    0x488b3d000000	            mov rdi, qword [0x0400876a] 	        97	stdio2.h	CALL_66
0x400876a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400876f	      0x498b44c648	    mov rax, qword [r14 + rax*8 + 0x48] 	      5222	elf.c	FUNCTION_68	FOR_1
0x4008774	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x4008779	        0x4183c501	                             add r13d, 1	      5221	elf.c	FUNCTION_68	FOR_1
0x400877d	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_66
0x4008780	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x4008782	      0xe800000000	                          call 0x4008787	        97	stdio2.h	CALL_66
0x4008787	        0x453b6e44	           cmp r13d, dword [r14 + 0x44] 	      5221	elf.c	FUNCTION_68	FOR_1
0x400878b	            0x72d3	                            jb 0x4008760	      5221	elf.c	FUNCTION_68	FOR_1
0x400878d	    0x488b35000000	            mov rsi, qword [0x04008794] 	      5223	elf.c	FUNCTION_68	CALL_3
0x4008794	      0xbf0a000000	                            mov edi, 0xa	      5223	elf.c	FUNCTION_68	CALL_3
0x4008799	      0xe800000000	                          call 0x400879e	      5223	elf.c	FUNCTION_68	CALL_3
0x400879e	    0x488b3d000000	            mov rdi, qword [0x040087a5] 	      5224	elf.c	FUNCTION_68	CALL_4
0x40087a5	      0xe800000000	                          call 0x40087aa	      5224	elf.c	FUNCTION_68	CALL_4
0x40087aa	      0xe9d1feffff	                           jmp 0x4008680	      5224	elf.c	FUNCTION_68	CALL_4
0x40087af	              0x90	                                     nop	      5224	elf.c	FUNCTION_68	CALL_4
0x40087b0	        0x488d7eff	                      lea rdi, [rsi - 1]	      5224	elf.c	FUNCTION_68	CALL_4
0x40087b4	        0x4883ff01	                              cmp rdi, 1	      5224	elf.c	FUNCTION_68	CALL_4
0x40087b8	    0x488dbeb01a8b	             lea rdi, [rsi - 0x6474e550]	      5224	elf.c	FUNCTION_68	CALL_4
0x40087bf	        0x410f96c1	                               setbe r9b	      5224	elf.c	FUNCTION_68	CALL_4
0x40087c3	        0x4883ff02	                              cmp rdi, 2	      5224	elf.c	FUNCTION_68	CALL_4
0x40087c7	        0x400f96c7	                               setbe dil	      5224	elf.c	FUNCTION_68	CALL_4
0x40087cb	          0x4408cf	                             or dil, r9b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087ce	            0x7571	                           jne 0x4008841	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087d0	        0x448b4a04	                mov r9d, dword [rdx + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087d4	        0x4183f908	                              cmp r9d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087d8	     0xf852bfeffff	                           jne 0x4008609	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087de	      0xe990feffff	                           jmp 0x4008673	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087e3	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087e8	     0xf8592feffff	                           jne 0x4008680	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087ee	        0x4c8b5330	            mov r10, qword [rbx + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087f2	          0x4d85d2	                           test r10, r10	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087f5	     0xf8485feffff	                            je 0x4008680	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087fb	        0x4183f908	                              cmp r9d, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x40087ff	            0x741e	                            je 0x400881f	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008801	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008805	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008809	          0x4c39c8	                             cmp rax, r9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400880c	     0xf86cffeffff	                           jbe 0x40086e1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008812	          0x4c29c8	                             sub rax, r9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008815	        0x483b4328	            cmp rax, qword [rbx + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008819	     0xf83c2feffff	                           jae 0x40086e1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400881f	          0x4084ff	                           test dil, dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008822	     0xf8458feffff	                            je 0x4008680	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008828	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400882c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008830	          0x4839f8	                            cmp rax, rdi	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008833	            0x760c	                           jbe 0x4008841	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008835	          0x4829f8	                            sub rax, rdi	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008838	          0x4939c2	                            cmp r10, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400883b	     0xf873ffeffff	                            ja 0x4008680	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x4008841	          0x4885c9	                           test rcx, rcx	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4008844	     0xf858dfeffff	                           jne 0x40086d7	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400884a	      0xe992feffff	                           jmp 0x40086e1	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400884f	              0x90	                                     nop	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4008850	        0x4883fe07	                              cmp rsi, 7	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4008854	     0xf8526feffff	                           jne 0x4008680	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400885a	      0xe982feffff	                           jmp 0x40086e1	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x400885f	              0x90	                                     nop	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_49
0x4008860	        0x4183f801	                              cmp r8d, 1	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x4008864	     0xf86a0fcffff	                           jbe 0x400850a	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400886a	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400886e	      0xbf00000000	                              mov edi, 0	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4008873	      0xb909000000	                              mov ecx, 9	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4008878	          0x488b30	                    mov rsi, qword [rax]	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400887b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400887d	     0xf8487fcffff	                            je 0x400850a	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4008883	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4008888	      0xba05000000	                              mov edx, 5	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x400888d	      0xbe00000000	                              mov esi, 0	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x4008892	      0xbf00000000	                              mov edi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x4008897	      0xe800000000	                          call 0x400889c	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x400889c	          0x4c89fe	                            mov rsi, r15	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400889f	          0x4889c7	                            mov rdi, rax	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x40088a2	            0x31c0	                            xor eax, eax	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x40088a4	      0xe800000000	                          call 0x40088a9	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x40088a9	      0xbf11000000	                           mov edi, 0x11	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_33
0x40088ae	      0xe800000000	                          call 0x40088b3	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_33
0x40088b3	      0xe903e4ffff	                           jmp 0x4006cbb	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_33
0x40088b8	     0xf1f84000000	                   nop dword [rax + rax]	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_33
0x40088c0	    0x48c743380000	               mov qword [rbx + 0x38], 0	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40088c8	      0xe962f3ffff	                           jmp 0x4007c2f	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40088cd	           0xf1f00	                         nop dword [rax]	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40088d0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x40088d5	    0x482d00000070	                     sub rax, 0x70000000	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x40088db	    0x483dffffff0f	                      cmp rax, 0xfffffff	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x40088e1	     0xf86bf100000	                           jbe 0x40099a6	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x40088e7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x40088ec	          0x4889c8	                            mov rax, rcx	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x40088ef	    0x482d00000060	                     sub rax, 0x60000000	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x40088f5	    0x483dffffff0f	                      cmp rax, 0xfffffff	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x40088fb	     0xf87b3020000	                            ja 0x4008bb4	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x4008901	          0x4189c8	                            mov r8d, ecx	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008904	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008909	    0x4181e8000000	                     sub r8d, 0x60000000	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008910	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008918	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_216	CALL_1
0x400891d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008922	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008924	    0x4c8dac24b000	                   lea r13, [rsp + 0xb0]	      5217	elf.c	FUNCTION_68	IF_1
0x400892c	      0xe800000000	                          call 0x4008931	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008931	      0xe9eefdffff	                           jmp 0x4008724	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008936	    0x4d8baf900000	            mov r13, qword [r15 + 0x90] 	        33	stdio2.h	FUNCTION_216	CALL_1
0x400893d	        0x418d4601	                      lea eax, [r14 + 1]	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008941	      0xe9c2e5ffff	                           jmp 0x4006f08	        33	stdio2.h	FUNCTION_216	CALL_1
0x4008946	        0x418b5504	                mov edx, dword [r13 + 4]	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400894a	          0x83fa09	                              cmp edx, 9	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400894d	     0xf8404010000	                            je 0x4008a57	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008953	          0x83fa04	                              cmp edx, 4	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008956	     0xf84fb000000	                            je 0x4008a57	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400895c	          0x4885c9	                           test rcx, rcx	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400895f	            0x740a	                            je 0x400896b	      5786	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008961	        0xf6412308	               test byte [rcx + 0x23], 8	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008965	     0xf85f5000000	                           jne 0x4008a60	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x400896b	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x4008972	    0x8bb0780c0000	           mov esi, dword [rax + 0xc78] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x4008978	        0x4c3b2cf3	            cmp r13, qword [rbx + rsi*8]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x400897c	     0xf84de000000	                            je 0x4008a60	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x4008982	    0x488bb0e80200	           mov rsi, qword [rax + 0x2e8] 	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x4008989	          0x4885f6	                           test rsi, rsi	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x400898c	            0x740d	                            je 0x400899b	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x400898e	          0x8b7650	            mov esi, dword [rsi + 0x50] 	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x4008991	        0x4c3b2cf3	            cmp r13, qword [rbx + rsi*8]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x4008995	     0xf84c5000000	                            je 0x4008a60	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x400899b	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x40089a2	          0x8b7050	            mov esi, dword [rax + 0x50] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x40089a5	        0x4c3b2cf3	            cmp r13, qword [rbx + rsi*8]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x40089a9	     0xf84b1000000	                            je 0x4008a60	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x40089af	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x40089b2	        0x4c3b2cc3	            cmp r13, qword [rbx + rax*8]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x40089b6	     0xf84a4000000	                            je 0x4008a60	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x40089bc	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x40089c0	        0x4883f801	                              cmp rax, 1	      4200	elf.c	FUNCTION_58	IF_1
0x40089c4	            0x7617	                           jbe 0x40089dd	      4200	elf.c	FUNCTION_58	IF_1
0x40089c6	      0x4a8d7420ff	                lea rsi, [rax + r12 - 1]	      4201	elf.c	FUNCTION_58	CALL_1
0x40089cb	          0x4939f4	                            cmp r12, rsi	      4201	elf.c	FUNCTION_58	CALL_1
0x40089ce	     0xf875d120000	                            ja 0x4009c31	      4201	elf.c	FUNCTION_58	CALL_1
0x40089d4	          0x48f7d8	                                 neg rax	      4201	elf.c	FUNCTION_58	CALL_1
0x40089d7	          0x4821f0	                            and rax, rsi	      4201	elf.c	FUNCTION_58	CALL_1
0x40089da	          0x4989c4	                            mov r12, rax	      4201	elf.c	FUNCTION_58	CALL_1
0x40089dd	          0x4885c9	                           test rcx, rcx	      4203	elf.c	FUNCTION_58	IF_2
0x40089e0	        0x4d896518	             mov qword [r13 + 0x18], r12	      4202	elf.c	FUNCTION_58
0x40089e4	            0x7407	                            je 0x40089ed	      4203	elf.c	FUNCTION_58	IF_2
0x40089e6	    0x4c89a1900000	             mov qword [rcx + 0x90], r12	      4204	elf.c	FUNCTION_58	IF_2
0x40089ed	          0x83fa08	                              cmp edx, 8	      4205	elf.c	FUNCTION_58	IF_3
0x40089f0	     0xf8562f8ffff	                           jne 0x4008258	      4205	elf.c	FUNCTION_58	IF_3
0x40089f6	      0xe961f8ffff	                           jmp 0x400825c	      4205	elf.c	FUNCTION_58	IF_3
0x40089fb	       0xf1f440000	                   nop dword [rax + rax]	      4205	elf.c	FUNCTION_58	IF_3
0x4008a00	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a04	        0x488b3c24	                    mov rdi, qword [rsp]	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a08	          0x4889c2	                            mov rdx, rax	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a0b	        0x48035310	             add rdx, qword [rbx + 0x10]	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a0f	          0x4829d7	                            sub rdi, rdx	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a12	            0x85c9	                           test ecx, ecx	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x4008a14	          0x4889fa	                            mov rdx, rdi	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a17	            0x7507	                           jne 0x4008a20	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x4008a19	          0x4801f8	                            add rax, rdi	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x4008a1c	        0x48894328	             mov qword [rbx + 0x28], rax	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x4008a20	        0x48015330	            add qword [rbx + 0x30], rdx 	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a24	      0xe948f3ffff	                           jmp 0x4007d71	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x4008a29	    0x41bd01000000	                             mov r13d, 1	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008a2f	      0xe989fbffff	                           jmp 0x40085bd	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008a34	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008a38	        0x498b7530	            mov rsi, qword [r13 + 0x30] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008a3c	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008a3e	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008a42	          0x4885f6	                           test rsi, rsi	      5194	elf.c	FUNCTION_67	IF_1
0x4008a45	            0x7408	                            je 0x4008a4f	      5194	elf.c	FUNCTION_67	IF_1
0x4008a47	          0x4c29e0	                            sub rax, r12	      5194	elf.c	FUNCTION_67	IF_1
0x4008a4a	            0x31d2	                            xor edx, edx	      5194	elf.c	FUNCTION_67	IF_1
0x4008a4c	          0x48f7f6	                                 div rsi	      5194	elf.c	FUNCTION_67	IF_1
0x4008a4f	          0x4901d4	                            add r12, rdx	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008a52	      0xe9eaf7ffff	                           jmp 0x4008241	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008a57	          0x4885c9	                           test rcx, rcx	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008a5a	     0xf8501ffffff	                           jne 0x4008961	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008a60	    0x49c74518ffff	mov qword [r13 + 0x18], 0xffffffffffffffff	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008a68	      0xe9eff7ffff	                           jmp 0x400825c	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008a6d	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x4008a74	      0xe96eecffff	                           jmp 0x40076e7	      4201	elf.c	FUNCTION_58	CALL_1
0x4008a79	        0x482b1424	                    sub rdx, qword [rsp]	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4008a7d	        0x48895318	             mov qword [rbx + 0x18], rdx	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4008a81	      0xe95af2ffff	                           jmp 0x4007ce0	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4008a86	    0x48c746180000	               mov qword [rsi + 0x18], 0	      5282	elf.c	FUNCTION_70	ELSE_1	CALL_6
0x4008a8e	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4008a95	    0xc74424480000	               mov dword [rsp + 0x48], 0	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4008a9d	    0xc74040000000	               mov dword [rax + 0x40], 0	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4008aa4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4008aa9	    0x488b88000300	           mov rcx, qword [rax + 0x300] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4008ab0	      0xe9b6efffff	                           jmp 0x4007a6b	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4008ab5	    0x4989b7980000	             mov qword [r15 + 0x98], rsi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4008abc	      0xe928e4ffff	                           jmp 0x4006ee9	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4008ac1	    0x498997900000	             mov qword [r15 + 0x90], rdx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4008ac8	      0xe90fe4ffff	                           jmp 0x4006edc	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4008acd	      0x49837d4800	               cmp qword [r13 + 0x48], 0	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008ad2	     0xf84b1f7ffff	                            je 0x4008289	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008ad8	      0x41f6450802	                  test byte [r13 + 8], 2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4008add	     0xf847efeffff	                            je 0x4008961	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4008ae3	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008ae8	     0xf85eef6ffff	                           jne 0x40081dc	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008aee	      0xe945ffffff	                           jmp 0x4008a38	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008af3	        0x488b0424	                    mov rax, qword [rsp]	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008af7	      0x4803442438	             add rax, qword [rsp + 0x38]	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008afc	      0xe9baf9ffff	                           jmp 0x40084bb	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008b01	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008b08	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x4008b0f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5804	elf.c	FUNCTION_71
0x4008b14	          0x488b1a	                    mov rbx, qword [rdx]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b17	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5807	elf.c	FUNCTION_71	CALL_17
0x4008b1b	    0x488b8f000300	           mov rcx, qword [rdi + 0x300] 	      5804	elf.c	FUNCTION_71
0x4008b22	        0x48890424	                    mov qword [rsp], rax	      5807	elf.c	FUNCTION_71	CALL_17
0x4008b26	           0xfb631	                   movzx esi, byte [rcx]	      5804	elf.c	FUNCTION_71
0x4008b29	          0x4889f1	                            mov rcx, rsi	      5804	elf.c	FUNCTION_71
0x4008b2c	        0x48034f10	             add rcx, qword [rdi + 0x10]	      5804	elf.c	FUNCTION_71
0x4008b30	          0x4885db	                           test rbx, rbx	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b33	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5804	elf.c	FUNCTION_71
0x4008b38	     0xf8436140000	                            je 0x4009f74	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b3e	          0x4889da	                            mov rdx, rbx	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b41	    0x48c744242000	               mov qword [rsp + 0x20], 0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b4a	            0x31ff	                            xor edi, edi	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b4c	          0x4531f6	                          xor r14d, r14d	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b4f	            0x31ed	                            xor ebp, ebp	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b51	            0xeb15	                           jmp 0x4008b68	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b53	       0xf1f440000	                   nop dword [rax + rax]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b58	          0x488b12	                    mov rdx, qword [rdx]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b5b	        0x4883c040	                           add rax, 0x40	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b5f	          0x4885d2	                           test rdx, rdx	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b62	     0xf84370a0000	                            je 0x400959f	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008b68	        0x48833801	                      cmp qword [rax], 1	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x4008b6c	            0x75ea	                           jne 0x4008b58	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x4008b6e	         0xfb64a40	           movzx ecx, byte [rdx + 0x40] 	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008b72	          0xf6c110	                           test cl, 0x10	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008b75	            0x7424	                            je 0x4008b9b	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008b77	          0x83e120	                           and ecx, 0x20	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008b7a	        0x4c8b7018	            mov r14, qword [rax + 0x18] 	      5816	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008b7e	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      5817	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008b82	            0x74d4	                            je 0x4008b58	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008b84	        0x4a8d0c36	                    lea rcx, [rsi + r14]	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4008b88	          0x4889d5	                            mov rbp, rdx	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4008b8b	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4008b90	        0x488d0c3e	                    lea rcx, [rsi + rdi]	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4008b94	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4008b99	            0xebbd	                           jmp 0x4008b58	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4008b9b	          0x83e120	                           and ecx, 0x20	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008b9e	            0x74b8	                            je 0x4008b58	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008ba0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008ba4	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008ba9	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008bad	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008bb2	            0xeba4	                           jmp 0x4008b58	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008bb4	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bb9	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bc1	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bc7	      0xb920000000	                           mov ecx, 0x20	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bcc	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bd1	      0xbe20000000	                           mov esi, 0x20	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bd6	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bd8	    0x4c8dac24b000	                   lea r13, [rsp + 0xb0]	      5217	elf.c	FUNCTION_68	IF_1
0x4008be0	      0xe800000000	                          call 0x4008be5	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008be5	      0xe93afbffff	                           jmp 0x4008724	        64	stdio2.h	FUNCTION_218	CALL_1
0x4008bea	        0x440fb621	                  movzx r12d, byte [rcx]	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4008bee	        0x4c896240	             mov qword [rdx + 0x40], r12	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4008bf2	      0xe982f5ffff	                           jmp 0x4008179	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4008bf7	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	      4249	elf.c	FUNCTION_59	CALL_5
0x4008bfe	            0x85c0	                           test eax, eax	      4249	elf.c	FUNCTION_59	CALL_5
0x4008c00	        0x89442420	             mov dword [rsp + 0x20], eax	      4249	elf.c	FUNCTION_59	CALL_5
0x4008c04	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      4249	elf.c	FUNCTION_59	CALL_5
0x4008c08	     0xf85ee000000	                           jne 0x4008cfc	      4249	elf.c	FUNCTION_59	CALL_5
0x4008c0e	          0xc1e805	                              shr eax, 5	      4250	elf.c	FUNCTION_59
0x4008c11	      0x25ffff0f00	                        and eax, 0xfffff	      4250	elf.c	FUNCTION_59
0x4008c16	        0x89442430	             mov dword [rsp + 0x30], eax	      4250	elf.c	FUNCTION_59
0x4008c1a	          0x83e043	                           and eax, 0x43	      4250	elf.c	FUNCTION_59
0x4008c1d	          0x83f801	                              cmp eax, 1	      4250	elf.c	FUNCTION_59
0x4008c20	     0xf84e2000000	                            je 0x4008d08	      4250	elf.c	FUNCTION_59
0x4008c26	    0xc74424740000	               mov dword [rsp + 0x74], 0	      4250	elf.c	FUNCTION_59
0x4008c2e	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4221	elf.c	FUNCTION_59
0x4008c37	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008c3f	      0xbe00000000	                              mov esi, 0	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008c44	          0x4c89ff	                            mov rdi, r15	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008c47	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4261	elf.c	FUNCTION_59
0x4008c52	      0xe800000000	                          call 0x4008c57	      4264	elf.c	FUNCTION_59	IF_8	CALL_7
0x4008c57	    0x8b84249c0000	            mov eax, dword [rsp + 0x9c] 	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x4008c5e	            0x85c0	                           test eax, eax	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x4008c60	     0xf8555e0ffff	                           jne 0x4006cbb	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x4008c66	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4269	elf.c	FUNCTION_59	CALL_8
0x4008c6d	          0x4889c7	                            mov rdi, rax	      4269	elf.c	FUNCTION_59	CALL_8
0x4008c70	    0xc780bc000000	               mov dword [rax + 0xbc], 3	      4271	elf.c	FUNCTION_59
0x4008c7a	      0x4889442468	             mov qword [rsp + 0x68], rax	      4269	elf.c	FUNCTION_59	CALL_8
0x4008c7f	        0x488b0424	                    mov rax, qword [rsp]	      4272	elf.c	FUNCTION_59
0x4008c83	    0x488b80800300	           mov rax, qword [rax + 0x380] 	      4272	elf.c	FUNCTION_59
0x4008c8a	    0x48c787c80000	               mov qword [rdi + 0xc8], 0	      4273	elf.c	FUNCTION_59
0x4008c95	    0x48c787f00000	               mov qword [rdi + 0xf0], 0	      4275	elf.c	FUNCTION_59
0x4008ca0	    0xc787e0000000	               mov dword [rdi + 0xe0], 0	      4276	elf.c	FUNCTION_59
0x4008caa	    0xc787e4000000	               mov dword [rdi + 0xe4], 0	      4277	elf.c	FUNCTION_59
0x4008cb4	    0x48c787e80000	               mov qword [rdi + 0xe8], 1	      4279	elf.c	FUNCTION_59
0x4008cbf	    0x488987c00000	             mov qword [rdi + 0xc0], rax	      4272	elf.c	FUNCTION_59
0x4008cc6	        0x498b4708	                mov rax, qword [r15 + 8]	      6071	elf.c	FUNCTION_73	CALL_3
0x4008cca	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6071	elf.c	FUNCTION_73	CALL_3
0x4008cd1	      0x4889442440	             mov qword [rsp + 0x40], rax	      6071	elf.c	FUNCTION_73	CALL_3
0x4008cd6	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6073	elf.c	FUNCTION_73	IF_1
0x4008cda	          0xc1e805	                              shr eax, 5	      6073	elf.c	FUNCTION_73	IF_1
0x4008cdd	            0xa842	                           test al, 0x42	      6073	elf.c	FUNCTION_73	IF_1
0x4008cdf	     0xf8462e9ffff	                            je 0x4007647	      6073	elf.c	FUNCTION_73	IF_1
0x4008ce5	            0x31f6	                            xor esi, esi	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008ce7	          0x4c89ff	                            mov rdi, r15	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008cea	      0xe800000000	                          call 0x4008cef	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008cef	            0x85c0	                           test eax, eax	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008cf1	     0xf850cedffff	                           jne 0x4007a03	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008cf7	      0xe9bfdfffff	                           jmp 0x4006cbb	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008cfc	          0xc1e805	                              shr eax, 5	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008cff	      0x25ffff0f00	                        and eax, 0xfffff	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008d04	        0x89442430	             mov dword [rsp + 0x30], eax	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4008d08	    0x498b87b00000	            mov rax, qword [r15 + 0xb0] 	      4066	elf.c	FUNCTION_56	CALL_2
0x4008d0f	            0x31d2	                            xor edx, edx	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d11	      0xbe01000000	                              mov esi, 1	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d16	    0x41bc01000000	                             mov r12d, 1	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d1c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4066	elf.c	FUNCTION_56	CALL_2
0x4008d21	    0x498b87900000	            mov rax, qword [r15 + 0x90] 	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d28	          0x4885c0	                           test rax, rax	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d2b	            0x741a	                            je 0x4008d47	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d2d	           0xf1f00	                         nop dword [rax]	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d30	          0x8b480c	              mov ecx, dword [rax + 0xc]	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x4008d33	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d37	            0x39ca	                            cmp edx, ecx	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d39	           0xf42d1	                          cmovb edx, ecx	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d3c	          0x4885c0	                           test rax, rax	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d3f	            0x75ef	                           jne 0x4008d30	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d41	          0x8d7201	                      lea esi, [rdx + 1]	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d44	          0x4989f4	                            mov r12, rsi	      4082	elf.c	FUNCTION_56	FOR_1
0x4008d47	      0xba08000000	                              mov edx, 8	      4089	elf.c	FUNCTION_56	CALL_4
0x4008d4c	          0x4c89ff	                            mov rdi, r15	      4089	elf.c	FUNCTION_56	CALL_4
0x4008d4f	      0xe800000000	                          call 0x4008d54	      4089	elf.c	FUNCTION_56	CALL_4
0x4008d54	          0x4885c0	                           test rax, rax	      4090	elf.c	FUNCTION_56	IF_2
0x4008d57	          0x4889c3	                            mov rbx, rax	      4089	elf.c	FUNCTION_56	CALL_4
0x4008d5a	     0xf845bdfffff	                            je 0x4006cbb	      4090	elf.c	FUNCTION_56	IF_2
0x4008d60	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4092	elf.c	FUNCTION_56	CALL_5
0x4008d67	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4092	elf.c	FUNCTION_56	CALL_5
0x4008d6e	        0x48895810	             mov qword [rax + 0x10], rbx	      4092	elf.c	FUNCTION_56	CALL_5
0x4008d72	        0x44896048	            mov dword [rax + 0x48], r12d	      4093	elf.c	FUNCTION_56	CALL_6
0x4008d76	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d7a	            0x85c0	                           test eax, eax	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d7c	     0xf84af000000	                            je 0x4008e31	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d82	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d87	          0x83e801	                              sub eax, 1	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d8a	      0x4c8d6cc708	              lea r13, [rdi + rax*8 + 8]	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d8f	          0x4989fe	                            mov r14, rdi	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d92	          0x4889fd	                            mov rbp, rdi	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d95	           0xf1f00	                         nop dword [rax]	      4097	elf.c	FUNCTION_56	FOR_2
0x4008d98	        0x4c8b6500	                    mov r12, qword [rbp]	      4099	elf.c	FUNCTION_56	FOR_2
0x4008d9c	    0x41f644241901	               test byte [r12 + 0x19], 1	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008da2	            0x741c	                            je 0x4008dc0	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008da4	    0x49837c241000	               cmp qword [r12 + 0x10], 0	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008daa	            0x7514	                           jne 0x4008dc0	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008dac	          0x4c89e6	                            mov rsi, r12	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008daf	          0x4c89ff	                            mov rdi, r15	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008db2	      0xe88978ffff	      call sym.ignore_section_sym.part.7	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008db7	            0x85c0	                           test eax, eax	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_7
0x4008db9	            0x7453	                            je 0x4008e0e	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_7
0x4008dbb	       0xf1f440000	                   nop dword [rax + rax]	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_7
0x4008dc0	        0x4883c508	                              add rbp, 8	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_7
0x4008dc4	          0x4c39ed	                            cmp rbp, r13	      4097	elf.c	FUNCTION_56	FOR_2
0x4008dc7	            0x75cf	                           jne 0x4008d98	      4097	elf.c	FUNCTION_56	FOR_2
0x4008dc9	          0x4531e4	                          xor r12d, r12d	      4097	elf.c	FUNCTION_56	FOR_2
0x4008dcc	            0x31ed	                            xor ebp, ebp	      4097	elf.c	FUNCTION_56	FOR_2
0x4008dce	            0xeb0c	                           jmp 0x4008ddc	      4097	elf.c	FUNCTION_56	FOR_2
0x4008dd0	          0x83c501	                              add ebp, 1	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x4008dd3	        0x4983c608	                              add r14, 8	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x4008dd7	          0x4d39ee	                            cmp r14, r13	      4116	elf.c	FUNCTION_56	FOR_3
0x4008dda	            0x745a	                            je 0x4008e36	      4116	elf.c	FUNCTION_56	FOR_3
0x4008ddc	          0x498b36	                    mov rsi, qword [r14]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4008ddf	          0x4c89ff	                            mov rdi, r15	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4008de2	      0xe80978ffff	                  call sym.sym_is_global	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4008de7	            0x85c0	                           test eax, eax	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4008de9	            0x75e5	                           jne 0x4008dd0	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_9
0x4008deb	          0x498b36	                    mov rsi, qword [r14]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_10
0x4008dee	          0x4885f6	                           test rsi, rsi	      4039	elf.c	FUNCTION_55	IF_1
0x4008df1	            0x7415	                            je 0x4008e08	      4039	elf.c	FUNCTION_55	IF_1
0x4008df3	        0xf6461901	               test byte [rsi + 0x19], 1	      4042	elf.c	FUNCTION_55	IF_2
0x4008df7	            0x740f	                            je 0x4008e08	      4042	elf.c	FUNCTION_55	IF_2
0x4008df9	          0x4c89ff	                            mov rdi, r15	      4042	elf.c	FUNCTION_55	IF_2
0x4008dfc	      0xe83f78ffff	      call sym.ignore_section_sym.part.7	      4042	elf.c	FUNCTION_55	IF_2
0x4008e01	            0x85c0	                           test eax, eax	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_10
0x4008e03	            0x75ce	                           jne 0x4008dd3	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_10
0x4008e05	           0xf1f00	                         nop dword [rax]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_10
0x4008e08	        0x4183c401	                             add r12d, 1	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x4008e0c	            0xebc5	                           jmp 0x4008dd3	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x4008e0e	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x4008e13	    0x483d00000000	                              cmp rax, 0	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x4008e19	            0x74a5	                            je 0x4008dc0	      4104	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_8
0x4008e1b	    0x4c3bb8f00000	            cmp r15, qword [rax + 0xf0] 	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x4008e22	            0x7404	                            je 0x4008e28	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x4008e24	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4109	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x4008e28	          0x8b400c	              mov eax, dword [rax + 0xc]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008e2b	        0x4c8924c3	            mov qword [rbx + rax*8], r12	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008e2f	            0xeb8f	                           jmp 0x4008dc0	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x4008e31	          0x4531e4	                          xor r12d, r12d	      4097	elf.c	FUNCTION_56	FOR_2
0x4008e34	            0x31ed	                            xor ebp, ebp	      4097	elf.c	FUNCTION_56	FOR_2
0x4008e36	    0x4d8baf900000	            mov r13, qword [r15 + 0x90] 	      4128	elf.c	FUNCTION_56	FOR_4
0x4008e3d	          0x4d85ed	                           test r13, r13	      4128	elf.c	FUNCTION_56	FOR_4
0x4008e40	            0x741e	                            je 0x4008e60	      4128	elf.c	FUNCTION_56	FOR_4
0x4008e42	    0x660f1f440000	                    nop word [rax + rax]	      4128	elf.c	FUNCTION_56	FOR_4
0x4008e48	        0x418b450c	              mov eax, dword [r13 + 0xc]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4008e4c	      0x48833cc300	              cmp qword [rbx + rax*8], 0	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4008e51	     0xf84e4060000	                            je 0x400953b	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4008e57	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      4128	elf.c	FUNCTION_56	FOR_4
0x4008e5b	          0x4d85ed	                           test r13, r13	      4128	elf.c	FUNCTION_56	FOR_4
0x4008e5e	            0x75e8	                           jne 0x4008e48	      4128	elf.c	FUNCTION_56	FOR_4
0x4008e60	        0x418d342c	                    lea esi, [r12 + rbp]	      4140	elf.c	FUNCTION_56	CALL_12
0x4008e64	      0xba08000000	                              mov edx, 8	      4140	elf.c	FUNCTION_56	CALL_12
0x4008e69	          0x4c89ff	                            mov rdi, r15	      4140	elf.c	FUNCTION_56	CALL_12
0x4008e6c	        0x89742428	             mov dword [rsp + 0x28], esi	      4140	elf.c	FUNCTION_56	CALL_12
0x4008e70	      0xe800000000	                          call 0x4008e75	      4140	elf.c	FUNCTION_56	CALL_12
0x4008e75	          0x4885c0	                           test rax, rax	      4143	elf.c	FUNCTION_56	IF_9
0x4008e78	      0x4889442410	             mov qword [rsp + 0x10], rax	      4140	elf.c	FUNCTION_56	CALL_12
0x4008e7d	     0xf8438deffff	                            je 0x4006cbb	      4143	elf.c	FUNCTION_56	IF_9
0x4008e83	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      4146	elf.c	FUNCTION_56	FOR_5
0x4008e87	            0x85c0	                           test eax, eax	      4146	elf.c	FUNCTION_56	FOR_5
0x4008e89	     0xf84a70f0000	                            je 0x4009e36	      4146	elf.c	FUNCTION_56	FOR_5
0x4008e8f	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      4146	elf.c	FUNCTION_56	FOR_5
0x4008e94	          0x83e801	                              sub eax, 1	      4146	elf.c	FUNCTION_56	FOR_5
0x4008e97	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      4146	elf.c	FUNCTION_56	FOR_5
0x4008e9c	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4146	elf.c	FUNCTION_56	FOR_5
0x4008ea4	            0x31ed	                            xor ebp, ebp	      4146	elf.c	FUNCTION_56	FOR_5
0x4008ea6	      0x498d44c508	              lea rax, [r13 + rax*8 + 8]	      4146	elf.c	FUNCTION_56	FOR_5
0x4008eab	          0x4c89eb	                            mov rbx, r13	      4146	elf.c	FUNCTION_56	FOR_5
0x4008eae	          0x4989c6	                            mov r14, rax	      4146	elf.c	FUNCTION_56	FOR_5
0x4008eb1	            0xeb28	                           jmp 0x4008edb	      4146	elf.c	FUNCTION_56	FOR_5
0x4008eb3	       0xf1f440000	                   nop dword [rax + rax]	      4146	elf.c	FUNCTION_56	FOR_5
0x4008eb8	      0x428d442500	                    lea eax, [rbp + r12]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x4008ebd	          0x83c501	                              add ebp, 1	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x4008ec0	          0x8d7001	                      lea esi, [rax + 1]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x4008ec3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4008ec8	        0x4c892cc7	            mov qword [rdi + rax*8], r13	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4008ecc	            0x89f0	                            mov eax, esi	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4008ece	        0x49894528	             mov qword [r13 + 0x28], rax	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4008ed2	        0x4883c308	                              add rbx, 8	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4008ed6	          0x4c39f3	                            cmp rbx, r14	      4146	elf.c	FUNCTION_56	FOR_5
0x4008ed9	            0x7442	                            je 0x4008f1d	      4146	elf.c	FUNCTION_56	FOR_5
0x4008edb	          0x4c8b2b	                    mov r13, qword [rbx]	      4148	elf.c	FUNCTION_56	FOR_5
0x4008ede	          0x4c89ff	                            mov rdi, r15	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_13
0x4008ee1	          0x4c89ee	                            mov rsi, r13	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_13
0x4008ee4	      0xe80777ffff	                  call sym.sym_is_global	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_13
0x4008ee9	            0x85c0	                           test eax, eax	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_13
0x4008eeb	            0x75cb	                           jne 0x4008eb8	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_13
0x4008eed	          0x4d85ed	                           test r13, r13	      4039	elf.c	FUNCTION_55	IF_1
0x4008ef0	            0x741e	                            je 0x4008f10	      4039	elf.c	FUNCTION_55	IF_1
0x4008ef2	      0x41f6451901	               test byte [r13 + 0x19], 1	      4042	elf.c	FUNCTION_55	IF_2
0x4008ef7	            0x7417	                            je 0x4008f10	      4042	elf.c	FUNCTION_55	IF_2
0x4008ef9	          0x4c89ee	                            mov rsi, r13	      4042	elf.c	FUNCTION_55	IF_2
0x4008efc	          0x4c89ff	                            mov rdi, r15	      4042	elf.c	FUNCTION_55	IF_2
0x4008eff	      0xe83c77ffff	      call sym.ignore_section_sym.part.7	      4042	elf.c	FUNCTION_55	IF_2
0x4008f04	            0x85c0	                           test eax, eax	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_14
0x4008f06	            0x75ca	                           jne 0x4008ed2	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_14
0x4008f08	     0xf1f84000000	                   nop dword [rax + rax]	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_14
0x4008f10	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4008f14	          0x8d7001	                      lea esi, [rax + 1]	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4008f17	        0x89742418	             mov dword [rsp + 0x18], esi	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4008f1b	            0xeba6	                           jmp 0x4008ec3	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4008f1d	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x4008f22	    0x4d8bb7900000	            mov r14, qword [r15 + 0x90] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4008f29	          0x4d85f6	                           test r14, r14	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4008f2c	            0x741d	                            je 0x4008f4b	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4008f2e	            0x6690	                                     nop	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4008f30	        0x418b460c	              mov eax, dword [r14 + 0xc]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4008f34	        0x488d04c3	                  lea rax, [rbx + rax*8]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4008f38	        0x48833800	                      cmp qword [rax], 0	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4008f3c	     0xf8419060000	                            je 0x400955b	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4008f42	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4008f46	          0x4d85f6	                           test r14, r14	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4008f49	            0x75e5	                           jne 0x4008f30	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4008f4b	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      4177	elf.c	FUNCTION_56	CALL_16
0x4008f4f	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4177	elf.c	FUNCTION_56	CALL_16
0x4008f54	          0x4c89ff	                            mov rdi, r15	      4177	elf.c	FUNCTION_56	CALL_16
0x4008f57	      0xe800000000	                          call 0x4008f5c	      4177	elf.c	FUNCTION_56	CALL_16
0x4008f5c	      0xe800000000	                          call 0x4008f61	      7772	elf.c	FUNCTION_88	CALL_2
0x4008f61	          0x4885c0	                           test rax, rax	      7773	elf.c	FUNCTION_88	IF_2
0x4008f64	      0x4889442450	             mov qword [rsp + 0x50], rax	      7772	elf.c	FUNCTION_88	CALL_2
0x4008f69	     0xf844cddffff	                            je 0x4006cbb	      7773	elf.c	FUNCTION_88	IF_2
0x4008f6f	        0x498b4708	                mov rax, qword [r15 + 8]	      7776	elf.c	FUNCTION_88	CALL_3
0x4008f73	        0x4183c401	                             add r12d, 1	      7782	elf.c	FUNCTION_88
0x4008f77	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      7776	elf.c	FUNCTION_88	CALL_3
0x4008f7e	          0x4889c1	                            mov rcx, rax	      7776	elf.c	FUNCTION_88	CALL_3
0x4008f81	      0x4889442448	             mov qword [rsp + 0x48], rax	      7776	elf.c	FUNCTION_88	CALL_3
0x4008f86	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	      7777	elf.c	FUNCTION_88	CALL_4
0x4008f8d	    0x488b91000300	           mov rdx, qword [rcx + 0x300] 	      7780	elf.c	FUNCTION_88
0x4008f94	            0x89c6	                            mov esi, eax	      7777	elf.c	FUNCTION_88	CALL_4
0x4008f96	        0x89442474	             mov dword [rsp + 0x74], eax	      7777	elf.c	FUNCTION_88	CALL_4
0x4008f9a	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      7778	elf.c	FUNCTION_88	CALL_5
0x4008fa1	          0x8d5e01	                      lea ebx, [rsi + 1]	      7781	elf.c	FUNCTION_88
0x4008fa4	    0xc7406c020000	               mov dword [rax + 0x6c], 2	      7779	elf.c	FUNCTION_88
0x4008fab	          0x4889c7	                            mov rdi, rax	      7778	elf.c	FUNCTION_88	CALL_5
0x4008fae	    0x488984248000	             mov qword [rsp + 0x80], rax	      7778	elf.c	FUNCTION_88	CALL_5
0x4008fb6	         0xfb64205	               movzx eax, byte [rdx + 5]	      7780	elf.c	FUNCTION_88
0x4008fba	          0x4863db	                         movsxd rbx, ebx	      7781	elf.c	FUNCTION_88
0x4008fbd	    0x4489a7940000	            mov dword [rdi + 0x94], r12d	      7782	elf.c	FUNCTION_88
0x4008fc4	    0x488987a00000	             mov qword [rdi + 0xa0], rax	      7780	elf.c	FUNCTION_88
0x4008fcb	        0x480fafc3	                           imul rax, rbx	      7781	elf.c	FUNCTION_88
0x4008fcf	    0x488987880000	             mov qword [rdi + 0x88], rax	      7781	elf.c	FUNCTION_88
0x4008fd6	         0xfb64a0b	            movzx ecx, byte [rdx + 0xb] 	      7783	elf.c	FUNCTION_88
0x4008fda	      0xb801000000	                              mov eax, 1	      7783	elf.c	FUNCTION_88
0x4008fdf	    0xc7870c010000	              mov dword [rdi + 0x10c], 3	      7786	elf.c	FUNCTION_88
0x4008fe9	          0x48d3e0	                             shl rax, cl	      7783	elf.c	FUNCTION_88
0x4008fec	    0x488987980000	             mov qword [rdi + 0x98], rax	      7783	elf.c	FUNCTION_88
0x4008ff3	        0x488d3c5b	                  lea rdi, [rbx + rbx*2]	      7789	elf.c	FUNCTION_88	CALL_7
0x4008ff7	        0x48c1e704	                              shl rdi, 4	      7789	elf.c	FUNCTION_88	CALL_7
0x4008ffb	      0xe800000000	                          call 0x4009000	      7789	elf.c	FUNCTION_88	CALL_7
0x4009000	          0x4885c0	                           test rax, rax	      7791	elf.c	FUNCTION_88	IF_3
0x4009003	      0x4889442478	             mov qword [rsp + 0x78], rax	      7789	elf.c	FUNCTION_88	CALL_7
0x4009008	     0xf8455100000	                            je 0x400a063	      7791	elf.c	FUNCTION_88	IF_3
0x400900e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7798	elf.c	FUNCTION_88
0x4009013	          0x4889de	                            mov rsi, rbx	      7797	elf.c	FUNCTION_88	CALL_9
0x4009016	          0x4c89ff	                            mov rdi, r15	      7797	elf.c	FUNCTION_88	CALL_9
0x4009019	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      7798	elf.c	FUNCTION_88
0x4009020	         0xfb65005	               movzx edx, byte [rax + 5]	      7797	elf.c	FUNCTION_88	CALL_9
0x4009024	      0xe800000000	                          call 0x4009029	      7797	elf.c	FUNCTION_88	CALL_9
0x4009029	          0x4885c0	                           test rax, rax	      7799	elf.c	FUNCTION_88	IF_4
0x400902c	    0x488984248800	             mov qword [rsp + 0x88], rax	      7797	elf.c	FUNCTION_88	CALL_9
0x4009034	     0xf84460a0000	                            je 0x4009a80	      7799	elf.c	FUNCTION_88	IF_4
0x400903a	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      7806	elf.c	FUNCTION_88
0x4009042	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      7806	elf.c	FUNCTION_88
0x400904a	    0x488988b00000	             mov qword [rax + 0xb0], rcx	      7806	elf.c	FUNCTION_88
0x4009051	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x4009058	    0x488ba8e80200	           mov rbp, qword [rax + 0x2e8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x400905f	          0x4885ed	                           test rbp, rbp	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x4009062	            0x740b	                            je 0x400906f	      7812	elf.c	FUNCTION_88	IF_5	CALL_12
0x4009064	          0x8b7d00	                    mov edi, dword [rbp]	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4009067	            0x85ff	                           test edi, edi	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x4009069	     0xf851b0e0000	                           jne 0x4009e8a	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x400906f	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      7843	elf.c	FUNCTION_88
0x4009074	    0x48c744243800	               mov qword [rsp + 0x38], 0	      7845	elf.c	FUNCTION_88
0x400907d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      7810	elf.c	FUNCTION_88
0x4009086	    0x48c700000000	                      mov qword [rax], 0	      7843	elf.c	FUNCTION_88
0x400908d	    0x48c740080000	                  mov qword [rax + 8], 0	      7843	elf.c	FUNCTION_88
0x4009095	    0x48c740100000	               mov qword [rax + 0x10], 0	      7843	elf.c	FUNCTION_88
0x400909d	        0xc6401800	                mov byte [rax + 0x18], 0	      7843	elf.c	FUNCTION_88
0x40090a1	        0xc6401900	                mov byte [rax + 0x19], 0	      7843	elf.c	FUNCTION_88
0x40090a5	        0xc6401a00	                mov byte [rax + 0x1a], 0	      7843	elf.c	FUNCTION_88
0x40090a9	    0xc7401c000000	               mov dword [rax + 0x1c], 0	      7843	elf.c	FUNCTION_88
0x40090b0	    0x48c740200000	               mov qword [rax + 0x20], 0	      7844	elf.c	FUNCTION_88
0x40090b8	    0x48c740280000	               mov qword [rax + 0x28], 0	      7845	elf.c	FUNCTION_88
0x40090c0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7852	elf.c	FUNCTION_88
0x40090c5	    0xc74424400000	               mov dword [rsp + 0x40], 0	      7853	elf.c	FUNCTION_88	CALL_15
0x40090cd	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      7852	elf.c	FUNCTION_88
0x40090d4	          0x4885c0	                           test rax, rax	      7853	elf.c	FUNCTION_88	CALL_15
0x40090d7	            0x7411	                            je 0x40090ea	      7853	elf.c	FUNCTION_88	CALL_15
0x40090d9	          0x4c89ff	                            mov rdi, r15	      7853	elf.c	FUNCTION_88	CALL_15
0x40090dc	            0xffd0	                                call rax	      7853	elf.c	FUNCTION_88	CALL_15
0x40090de	            0x85c0	                           test eax, eax	      7853	elf.c	FUNCTION_88	CALL_15
0x40090e0	           0xf95c0	                                setne al	      7853	elf.c	FUNCTION_88	CALL_15
0x40090e3	           0xfb6c0	                           movzx eax, al	      7853	elf.c	FUNCTION_88	CALL_15
0x40090e6	        0x89442440	             mov dword [rsp + 0x40], eax	      7853	elf.c	FUNCTION_88	CALL_15
0x40090ea	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      7856	elf.c	FUNCTION_88	FOR_1
0x40090ee	    0x4d8b8fb00000	              mov r9, qword [r15 + 0xb0]	      7855	elf.c	FUNCTION_88	CALL_16
0x40090f5	            0x85c0	                           test eax, eax	      7856	elf.c	FUNCTION_88	FOR_1
0x40090f7	     0xf8e4b0c0000	                           jle 0x4009d48	      7856	elf.c	FUNCTION_88	FOR_1
0x40090fd	          0x83e801	                              sub eax, 1	      7856	elf.c	FUNCTION_88	FOR_1
0x4009100	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      7856	elf.c	FUNCTION_88	FOR_1
0x4009105	          0x4d89cc	                             mov r12, r9	      7856	elf.c	FUNCTION_88	FOR_1
0x4009108	        0x4883c002	                              add rax, 2	      7856	elf.c	FUNCTION_88	FOR_1
0x400910c	      0xbd01000000	                              mov ebp, 1	      7856	elf.c	FUNCTION_88	FOR_1
0x4009111	      0x4c897c2460	             mov qword [rsp + 0x60], r15	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4009116	      0x4889442458	             mov qword [rsp + 0x58], rax	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400911b	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400911f	        0x4c8d6930	                   lea r13, [rcx + 0x30]	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4009123	          0x83e042	                           and eax, 0x42	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4009126	        0x89442468	             mov dword [rsp + 0x68], eax	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400912a	      0xe980010000	                           jmp 0x40092af	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400912f	              0x90	                                     nop	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4009130	        0xf6462110	           test byte [rsi + 0x21], 0x10 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x4009134	     0xf84f0010000	                            je 0x400932a	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x400913a	          0x4d85c0	                             test r8, r8	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400913d	            0x7409	                            je 0x4009148	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400913f	        0x4d8b5830	              mov r11, qword [r8 + 0x30]	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4009143	          0x4d85db	                           test r11, r11	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4009146	            0x7510	                           jne 0x4009158	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4009148	        0x4983fe0f	                            cmp r14, 0xf	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x400914c	    0x41bb10000000	                          mov r11d, 0x10	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009152	     0xf86ae0a0000	                           jbe 0x4009c06	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009158	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400915f	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x4009162	            0x740a	                            je 0x400916e	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x4009164	    0x8b8888000000	            mov ecx, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400916a	            0x85c9	                           test ecx, ecx	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400916c	            0x7532	                           jne 0x40091a0	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400916e	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009173	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009178	      0x4c89442420	              mov qword [rsp + 0x20], r8	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400917d	      0xe81e8affff	call sym._bfd_elf_section_from_bfd_section.part.23	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009182	            0x89c1	                            mov ecx, eax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009184	        0x498b0424	                    mov rax, qword [r12]	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009188	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400918d	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009192	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009196	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x40091a0	    0xf7c300000400	                       test ebx, 0x40000	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x40091a6	      0xb806000000	                              mov eax, 6	      7982	elf.c	FUNCTION_88	FOR_1	IF_20
0x40091ab	            0x7543	                           jne 0x40091f0	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x40091ad	    0xf7c300004000	                      test ebx, 0x400000	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x40091b3	      0xb80a000000	                            mov eax, 0xa	      7984	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x40091b8	            0x7536	                           jne 0x40091f0	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x40091ba	          0xf6c308	                              test bl, 8	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x40091bd	      0xb802000000	                              mov eax, 2	      7986	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x40091c2	            0x752c	                           jne 0x40091f0	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x40091c4	    0xf7c300000100	                       test ebx, 0x10000	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40091ca	      0xb801000000	                              mov eax, 1	      7988	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40091cf	            0x751f	                           jne 0x40091f0	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40091d1	    0xf7c300000800	                       test ebx, 0x80000	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40091d7	      0xb808000000	                              mov eax, 8	      7990	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40091dc	            0x7512	                           jne 0x40091f0	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40091de	            0x89d8	                            mov eax, ebx	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40091e0	          0xc1e00b	                            shl eax, 0xb	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40091e3	          0xc1f81f	                           sar eax, 0x1f	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40091e6	          0x83e009	                              and eax, 9	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40091e9	     0xf1f80000000	                         nop dword [rax]	      7992	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40091f0	        0xf6462104	               test byte [rsi + 0x21], 4	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x40091f4	      0xba06000000	                              mov edx, 6	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x40091f9	           0xf45c2	                         cmovne eax, edx	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x40091fc	          0x4d85c0	                             test r8, r8	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x40091ff	            0x7432	                            je 0x4009233	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009201	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009206	        0x488b5770	            mov rdx, qword [rdi + 0x70] 	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400920a	          0x4885d2	                           test rdx, rdx	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400920d	            0x7424	                            je 0x4009233	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400920f	        0x894c2430	             mov dword [rsp + 0x30], ecx	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009213	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009218	        0x498d7830	                    lea rdi, [r8 + 0x30]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400921c	      0x4c89442420	              mov qword [rsp + 0x20], r8	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009221	            0x89c6	                            mov esi, eax	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009223	            0xffd2	                                call rdx	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009225	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009229	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400922e	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4009233	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x4009237	            0x85d2	                           test edx, edx	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x4009239	     0xf8431020000	                            je 0x4009470	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x400923f	          0x83e302	                              and ebx, 2	      8007	elf.c	FUNCTION_88	FOR_1	IF_28	IF_29
0x4009242	          0x83fb01	                              cmp ebx, 1	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x4009245	            0x19d2	                            sbb edx, edx	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x4009247	          0x83e2f0	                     and edx, 0xfffffff0	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x400924a	          0x83c213	                           add edx, 0x13	      8008	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_35
0x400924d	          0x4d85c0	                             test r8, r8	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x4009250	     0xf84dc020000	                            je 0x4009532	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x4009256	      0x410fb67049	            movzx esi, byte [r8 + 0x49] 	      8050	elf.c	FUNCTION_88	FOR_1	IF_39
0x400925b	      0x410fb6404a	            movzx eax, byte [r8 + 0x4a] 	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x4009260	        0x49896d20	             mov qword [r13 + 0x20], rbp	      8062	elf.c	FUNCTION_88	FOR_1
0x4009264	        0x4883c501	                              add rbp, 1	      8065	elf.c	FUNCTION_88	FOR_1
0x4009268	    0x48837c243801	               cmp qword [rsp + 0x38], 1	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x400926e	        0x4188451a	               mov byte [r13 + 0x1a], al	      8061	elf.c	FUNCTION_88	FOR_1
0x4009272	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8063	elf.c	FUNCTION_88	FOR_1
0x4009277	        0x4d895d00	                    mov qword [r13], r11	      8061	elf.c	FUNCTION_88	FOR_1
0x400927b	        0x4d897508	                mov qword [r13 + 8], r14	      8061	elf.c	FUNCTION_88	FOR_1
0x400927f	        0x4d897d10	             mov qword [r13 + 0x10], r15	      8061	elf.c	FUNCTION_88	FOR_1
0x4009283	        0x41885518	               mov byte [r13 + 0x18], dl	      8061	elf.c	FUNCTION_88	FOR_1
0x4009287	        0x49894528	             mov qword [r13 + 0x28], rax	      8063	elf.c	FUNCTION_88	FOR_1
0x400928b	        0x41887519	              mov byte [r13 + 0x19], sil	      8061	elf.c	FUNCTION_88	FOR_1
0x400928f	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x4009293	        0x41894d1c	             mov dword [r13 + 0x1c], ecx	      8061	elf.c	FUNCTION_88	FOR_1
0x4009297	        0x4983c408	                              add r12, 8	      8061	elf.c	FUNCTION_88	FOR_1
0x400929b	        0x4983c530	                           add r13, 0x30	      8061	elf.c	FUNCTION_88	FOR_1
0x400929f	      0x483b6c2458	            cmp rbp, qword [rsp + 0x58] 	      7856	elf.c	FUNCTION_88	FOR_1
0x40092a4	      0x4889442410	             mov qword [rsp + 0x10], rax	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x40092a9	     0xf84170a0000	                            je 0x4009cc6	      7856	elf.c	FUNCTION_88	FOR_1
0x40092af	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x40092b3	        0x498b0424	                    mov rax, qword [r12]	      7859	elf.c	FUNCTION_88	FOR_1
0x40092b7	            0x85f6	                           test esi, esi	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x40092b9	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      7859	elf.c	FUNCTION_88	FOR_1
0x40092bd	          0x8b5818	            mov ebx, dword [rax + 0x18] 	      7861	elf.c	FUNCTION_88	FOR_1
0x40092c0	            0x7514	                           jne 0x40092d6	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x40092c2	            0x89da	                            mov edx, ebx	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40092c4	    0x81e202010000	                          and edx, 0x102	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40092ca	    0x81fa00010000	                          cmp edx, 0x100	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40092d0	     0xf8448020000	                            je 0x400951e	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40092d6	        0x488b7008	                mov rsi, qword [rax + 8]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x40092da	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x40092df	            0x31d2	                            xor edx, edx	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x40092e1	      0xe800000000	                          call 0x40092e6	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x40092e6	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x40092ea	          0x4989c7	                            mov r15, rax	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_17
0x40092ed	     0xf848d070000	                            je 0x4009a80	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x40092f3	        0x498b0424	                    mov rax, qword [r12]	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x40092f7	          0x488b10	                    mov rdx, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x40092fa	          0x4885d2	                           test rdx, rdx	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x40092fd	     0xf8427020000	                            je 0x400952a	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x4009303	        0x488b4a08	                mov rcx, qword [rdx + 8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x4009307	          0x4531c0	                            xor r8d, r8d	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400930a	        0x83790805	                  cmp dword [rcx + 8], 5	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400930e	     0xf84f9010000	                            je 0x400950d	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x4009314	            0x89df	                            mov edi, ebx	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x4009316	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_19
0x400931a	    0x81e700010000	                          and edi, 0x100	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x4009320	        0x897c2418	             mov dword [rsp + 0x18], edi	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x4009324	     0xf8406feffff	                            je 0x4009130	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x400932a	        0x488b5668	            mov rdx, qword [rsi + 0x68] 	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400932e	          0x4885d2	                           test rdx, rdx	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x4009331	     0xf8443060000	                            je 0x400997a	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x4009337	          0x4d89f3	                            mov r11, r14	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400933a	        0x4c035e60	             add r11, qword [rsi + 0x60]	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400933e	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4009342	            0x85c9	                           test ecx, ecx	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4009344	            0x7404	                            je 0x400934a	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4009346	        0x4c035a28	             add r11, qword [rdx + 0x28]	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x400934a	          0x4d85c0	                             test r8, r8	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x400934d	     0xf84bd000000	                            je 0x4009410	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4009353	    0x4881fa000000	                              cmp rdx, 0	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400935a	        0x4d8b7038	              mov r14, qword [r8 + 0x38]	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x400935e	     0xf85af000000	                           jne 0x4009413	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4009364	        0x418b484c	              mov ecx, dword [r8 + 0x4c]	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4009368	            0x85c9	                           test ecx, ecx	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400936a	     0xf84a3000000	                            je 0x4009413	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4009370	    0x8d81c0000000	                   lea eax, [rcx + 0xc0]	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4009376	          0x83f804	                              cmp eax, 4	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4009379	     0xf87170d0000	                            ja 0x400a096	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400937f	    0xff24c5000000	                       jmp qword [rax*8]	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4009386	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400938b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x4009392	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x4009399	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x400939c	      0xe9fffdffff	                           jmp 0x40091a0	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_26
0x40093a1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x40093a6	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x40093ad	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x40093b4	          0x8b4850	            mov ecx, dword [rax + 0x50] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x40093b7	      0xe9e4fdffff	                           jmp 0x40091a0	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_25
0x40093bc	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x40093c1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x40093c8	    0x8b887c0c0000	           mov ecx, dword [rax + 0xc7c] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x40093ce	      0xe9cdfdffff	                           jmp 0x40091a0	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x40093d3	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x40093d8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x40093df	    0x8b88780c0000	           mov ecx, dword [rax + 0xc78] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x40093e5	      0xe9b6fdffff	                           jmp 0x40091a0	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_23
0x40093ea	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x40093ef	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x40093f6	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x40093fd	          0x4885c0	                           test rax, rax	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x4009400	     0xf849afdffff	                            je 0x40091a0	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_27
0x4009406	          0x8b4850	            mov ecx, dword [rax + 0x50] 	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_28
0x4009409	      0xe992fdffff	                           jmp 0x40091a0	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_28
0x400940e	            0x6690	                                     nop	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_28
0x4009410	          0x4531f6	                          xor r14d, r14d	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4009413	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400941a	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400941d	            0x740a	                            je 0x4009429	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400941f	    0x8b8888000000	            mov ecx, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009425	            0x85c9	                           test ecx, ecx	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009427	            0x752d	                           jne 0x4009456	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009429	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400942e	          0x4889d6	                            mov rsi, rdx	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009431	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009436	      0x4c89442428	              mov qword [rsp + 0x28], r8	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400943b	      0x4889542420	             mov qword [rsp + 0x20], rdx	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009440	      0xe85b87ffff	call sym._bfd_elf_section_from_bfd_section.part.23	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009445	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400944a	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400944f	            0x89c1	                            mov ecx, eax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009451	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009456	    0x81f9fffeffff	                     cmp ecx, 0xfffffeff	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400945c	     0xf845a050000	                            je 0x40099bc	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x4009462	        0x498b0424	                    mov rax, qword [r12]	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x4009466	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400946a	      0xe931fdffff	                           jmp 0x40091a0	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x400946f	              0x90	                                     nop	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x4009470	        0x498b1424	                    mov rdx, qword [r12]	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x4009474	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x4009478	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x400947c	            0x7442	                            je 0x40094c0	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_37
0x400947e	          0x83f806	                              cmp eax, 6	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x4009481	      0xba16000000	                           mov edx, 0x16	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x4009486	     0xf84c1fdffff	                            je 0x400924d	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x400948c	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4009491	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4009494	        0x89442418	             mov dword [rsp + 0x18], eax	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4009498	          0xc1e805	                              shr eax, 5	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400949b	      0x25ffff0f00	                        and eax, 0xfffff	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094a0	      0xa900000400	                       test eax, 0x40000	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094a5	     0xf84ee050000	                            je 0x4009a99	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094ab	      0x2500000800	                        and eax, 0x80000	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094b0	          0x83f801	                              cmp eax, 1	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094b3	            0x19d2	                            sbb edx, edx	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094b5	          0x83e2fc	                     and edx, 0xfffffffc	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094b8	          0x83c215	                           add edx, 0x15	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094bb	      0xe98dfdffff	                           jmp 0x400924d	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x40094c0	    0x4881fa000000	                              cmp rdx, 0	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_39
0x40094c7	     0xf84d3070000	                            je 0x4009ca0	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_39
0x40094cd	          0xf6c740	                           test bh, 0x40	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40094d0	      0xba04000000	                              mov edx, 4	      8031	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40094d5	     0xf8572fdffff	                           jne 0x400924d	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40094db	            0x31d2	                            xor edx, edx	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40094dd	          0xf6c301	                              test bl, 1	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40094e0	            0x7521	                           jne 0x4009503	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40094e2	    0xf7c300008000	                      test ebx, 0x800000	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40094e8	      0xbaa0ffffff	                     mov edx, 0xffffffa0	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40094ed	            0x7514	                           jne 0x4009503	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40094ef	          0xf6c380	                           test bl, 0x80	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40094f2	      0xba20000000	                           mov edx, 0x20	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40094f7	            0x750a	                           jne 0x4009503	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40094f9	            0x89da	                            mov edx, ebx	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40094fb	            0xd1ea	                              shr edx, 1	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40094fd	          0x83e201	                              and edx, 1	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x4009500	          0xc1e204	                              shl edx, 4	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x4009503	          0x83e00f	                            and eax, 0xf	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_42
0x4009506	             0x1c2	                            add edx, eax	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_42
0x4009508	      0xe940fdffff	                           jmp 0x400924d	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_42
0x400950d	    0x4883baf80000	               cmp qword [rdx + 0xf8], 0	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x4009515	        0x4c0f45c0	                          cmovne r8, rax	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x4009519	      0xe9f6fdffff	                           jmp 0x4009314	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400951e	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      7868	elf.c	FUNCTION_88	FOR_1	IF_9
0x4009525	      0xe9cdfdffff	                           jmp 0x40092f7	      7868	elf.c	FUNCTION_88	FOR_1	IF_9
0x400952a	          0x4531c0	                            xor r8d, r8d	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x400952d	      0xe9e2fdffff	                           jmp 0x4009314	      7881	elf.c	FUNCTION_88	FOR_1	CALL_18
0x4009532	            0x31c0	                            xor eax, eax	      8057	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009534	            0x31f6	                            xor esi, esi	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009536	      0xe925fdffff	                           jmp 0x4009260	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x400953b	    0x498bb5f80000	            mov rsi, qword [r13 + 0xf8] 	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x4009542	          0x4c89ff	                            mov rdi, r15	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x4009545	      0xe8a670ffff	                  call sym.sym_is_global	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x400954a	            0x85c0	                           test eax, eax	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x400954c	     0xf85f6050000	                           jne 0x4009b48	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_11
0x4009552	        0x4183c401	                             add r12d, 1	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x4009556	      0xe9fcf8ffff	                           jmp 0x4008e57	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400955b	    0x4d8baef80000	            mov r13, qword [r14 + 0xf8] 	      4164	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009562	          0x4c89ff	                            mov rdi, r15	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x4009565	          0x4c8928	                    mov qword [rax], r13	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009568	          0x4c89ee	                            mov rsi, r13	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x400956b	      0xe88070ffff	                  call sym.sym_is_global	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x4009570	            0x85c0	                           test eax, eax	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x4009572	     0xf8506060000	                           jne 0x4009b7e	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_15
0x4009578	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400957c	          0x8d5001	                      lea edx, [rax + 1]	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400957f	        0x89542418	             mov dword [rsp + 0x18], edx	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x4009583	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009588	        0x4c892cc7	            mov qword [rdi + rax*8], r13	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400958c	            0x89d0	                            mov eax, edx	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400958e	        0x49894528	             mov qword [r13 + 0x28], rax	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009592	      0xe9abf9ffff	                           jmp 0x4008f42	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4009597	          0x4189c5	                           mov r13d, eax	      3685	elf.c	FUNCTION_52	FOR_2
0x400959a	      0xe97dd9ffff	                           jmp 0x4006f1c	      3685	elf.c	FUNCTION_52	FOR_2
0x400959f	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5832	elf.c	FUNCTION_71	IF_10
0x40095a5	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      5832	elf.c	FUNCTION_71	IF_10
0x40095aa	        0x410f95c5	                              setne r13b	      5832	elf.c	FUNCTION_71	IF_10
0x40095ae	          0x4885ed	                           test rbp, rbp	      5832	elf.c	FUNCTION_71	IF_10
0x40095b1	        0x410f95c1	                               setne r9b	      5832	elf.c	FUNCTION_71	IF_10
0x40095b5	          0x4520e9	                           and r9b, r13b	      5832	elf.c	FUNCTION_71	IF_10
0x40095b8	     0xf857f060000	                           jne 0x4009c3d	      5832	elf.c	FUNCTION_71	IF_10
0x40095be	      0x4c89642428	             mov qword [rsp + 0x28], r12	        90	string3.h	FUNCTION_207	CALL_6
0x40095c3	        0x488b2c24	                    mov rbp, qword [rsp]	      5832	elf.c	FUNCTION_71	IF_10
0x40095c7	      0x4c8b642408	                mov r12, qword [rsp + 8]	        90	string3.h	FUNCTION_207	CALL_6
0x40095cc	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_207	CALL_6
0x40095d0	        0x488b5500	                    mov rdx, qword [rbp]	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x40095d4	    0x4881fa52e574	                     cmp rdx, 0x6474e552	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x40095db	     0xf845f010000	                            je 0x4009740	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x40095e1	    0x4881fa51e574	                     cmp rdx, 0x6474e551	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x40095e8	     0xf848a020000	                            je 0x4009878	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x40095ee	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x40095f1	            0x85c0	                           test eax, eax	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x40095f3	     0xf8457020000	                            je 0x4009850	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x40095f9	        0x4883fa01	                              cmp rdx, 1	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x40095fd	            0x7469	                            je 0x4009668	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x40095ff	        0x4883fa04	                              cmp rdx, 4	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009603	     0xf84c5020000	                            je 0x40098ce	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009609	        0x4883fa06	                              cmp rdx, 6	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400960d	     0xf84d1020000	                            je 0x40098e4	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x4009613	        0xf6434030	           test byte [rbx + 0x40], 0x30 	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x4009617	     0xf853c080000	                           jne 0x4009e59	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400961d	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009621	    0x48c745280000	               mov qword [rbp + 0x28], 0	      6008	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009629	          0x83e801	                              sub eax, 1	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400962c	    0x488bb2900000	            mov rsi, qword [rdx + 0x90] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009633	        0x48897510	            mov qword [rbp + 0x10], rsi 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009637	            0xeb09	                           jmp 0x4009642	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009639	     0xf1f80000000	                         nop dword [rax]	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009640	            0x89d0	                            mov eax, edx	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x4009642	            0x89c2	                            mov edx, eax	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x4009644	      0x488b4cd348	    mov rcx, qword [rbx + rdx*8 + 0x48] 	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x4009649	    0x488b91e00000	            mov rdx, qword [rcx + 0xe0] 	      6013	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	CALL_30
0x4009650	        0x837a0408	                  cmp dword [rdx + 4], 8	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x4009654	     0xf855d020000	                           jne 0x40098b7	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x400965a	            0x85c0	                           test eax, eax	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400965c	          0x8d50ff	                      lea edx, [rax - 1]	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400965f	            0x75df	                           jne 0x4009640	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x4009661	     0xf1f80000000	                         nop dword [rax]	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x4009668	          0x488b1b	                    mov rbx, qword [rbx]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400966b	        0x4883c540	                           add rbp, 0x40	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400966f	          0x4885db	                           test rbx, rbx	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009672	     0xf8558ffffff	                           jne 0x40095d0	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009678	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400967d	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6037	elf.c	FUNCTION_71	CALL_31
0x4009684	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x4009689	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6037	elf.c	FUNCTION_71	CALL_31
0x4009690	        0x4c896240	             mov qword [rdx + 0x40], r12	      6037	elf.c	FUNCTION_71	CALL_31
0x4009694	    0x488b91580100	           mov rdx, qword [rcx + 0x158] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400969b	          0x4885d2	                           test rdx, rdx	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400969e	            0x7419	                            je 0x40096b9	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x40096a0	      0x488b742408	                mov rsi, qword [rsp + 8]	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x40096a5	          0x4c89ff	                            mov rdi, r15	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x40096a8	            0xffd2	                                call rdx	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x40096aa	            0x85c0	                           test eax, eax	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x40096ac	     0xf8409d6ffff	                            je 0x4006cbb	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x40096b2	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x40096b9	          0x4584ed	                         test r13b, r13b	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x40096bc	            0x7414	                            je 0x40096d2	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x40096be	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x40096c3	           0xfb611	                   movzx edx, byte [rcx]	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x40096c6	          0x83e203	                              and edx, 3	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x40096c9	          0x80fa01	                               cmp dl, 1	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x40096cc	     0xf844a080000	                            je 0x4009f1c	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x40096d2	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_19
0x40096d5	            0x85db	                           test ebx, ebx	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x40096d7	     0xf84c7e1ffff	                            je 0x40078a4	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x40096dd	          0x83fb01	                              cmp ebx, 1	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40096e0	            0x7613	                           jbe 0x40096f5	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40096e2	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40096e7	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40096eb	        0x48833e06	                      cmp qword [rsi], 6	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40096ef	     0xf84e4080000	                            je 0x4009fd9	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40096f5	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x40096fa	            0x31d2	                            xor edx, edx	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x40096fc	          0x4c89ff	                            mov rdi, r15	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x40096ff	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x4009706	           0xfb630	                   movzx esi, byte [rax]	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x4009709	      0xe800000000	                          call 0x400970e	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400970e	            0x85c0	                           test eax, eax	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x4009710	     0xf85a5d5ffff	                           jne 0x4006cbb	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x4009716	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400971b	            0x89da	                            mov edx, ebx	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400971d	          0x4c89ff	                            mov rdi, r15	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x4009720	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x4009724	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x4009729	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x4009730	          0xff5010	                 call qword [rax + 0x10]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x4009733	            0x85c0	                           test eax, eax	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x4009735	     0xf8580d5ffff	                           jne 0x4006cbb	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x400973b	      0xe964e1ffff	                           jmp 0x40078a4	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_24
0x4009740	          0x4584ed	                         test r13b, r13b	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4009743	     0xf84a7010000	                            je 0x40098f0	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4009749	    0x4d8b9424c800	            mov r10, qword [r12 + 0xc8] 	      5890	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4009751	    0x4d8b8c24d000	              mov r9, qword [r12 + 0xd0]	      5891	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4009759	          0x4d39ca	                             cmp r10, r9	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400975c	     0xf83aa000000	                           jae 0x400980c	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4009762	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009769	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009770	          0x488b00	                    mov rax, qword [rax]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009773	          0x4885c0	                           test rax, rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009776	     0xf848b000000	                            je 0x4009807	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x400977c	        0x488b0c24	                    mov rcx, qword [rsp]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009780	            0xeb12	                           jmp 0x4009794	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009782	    0x660f1f440000	                    nop word [rax + rax]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009788	          0x488b00	                    mov rax, qword [rax]	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400978b	        0x4883c140	                           add rcx, 0x40	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x400978f	          0x4885c0	                           test rax, rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009792	            0x7473	                            je 0x4009807	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4009794	        0x48833901	                      cmp qword [rcx], 1	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4009798	            0x75ee	                           jne 0x4009788	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400979a	        0x448b4044	            mov r8d, dword [rax + 0x44] 	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x400979e	          0x4585c0	                           test r8d, r8d	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097a1	            0x74e5	                            je 0x4009788	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097a3	        0x418d50ff	                       lea edx, [r8 - 1]	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097a7	      0x488b7cd048	    mov rdi, qword [rax + rdx*8 + 0x48] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097ac	            0x31d2	                            xor edx, edx	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097ae	          0x8b7720	            mov esi, dword [rdi + 0x20] 	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097b1	        0x4c8b5f28	            mov r11, qword [rdi + 0x28] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097b5	    0x81e602040000	                          and esi, 0x402	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097bb	    0x81fe00040000	                          cmp esi, 0x400	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097c1	            0x7404	                            je 0x40097c7	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097c3	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097c7	          0x4c01da	                            add rdx, r11	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097ca	          0x4c39d2	                            cmp rdx, r10	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097cd	            0x76b9	                           jbe 0x4009788	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097cf	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097d3	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097d7	          0x4c39ce	                             cmp rsi, r9	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097da	            0x73ac	                           jae 0x4009788	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097dc	            0x31d2	                            xor edx, edx	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097de	            0xeb09	                           jmp 0x40097e9	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097e0	      0x488b7cd048	    mov rdi, qword [rax + rdx*8 + 0x48] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097e5	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x40097e9	          0x4939f1	                             cmp r9, rsi	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x40097ec	            0x7610	                           jbe 0x40097fe	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x40097ee	          0x4939f2	                            cmp r10, rsi	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x40097f1	            0x770b	                            ja 0x40097fe	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x40097f3	      0x48837f3800	               cmp qword [rdi + 0x38], 0	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x40097f8	     0xf85be020000	                           jne 0x4009abc	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x40097fe	        0x4883c201	                              add rdx, 1	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4009802	          0x4139d0	                            cmp r8d, edx	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x4009805	            0x77d9	                            ja 0x40097e0	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x4009807	          0x4584ed	                         test r13b, r13b	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400980a	            0x740f	                            je 0x400981b	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x400980c	      0xbe55170000	                         mov esi, 0x1755	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x4009811	      0xbf00000000	                              mov edi, 0	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x4009816	      0xe800000000	                          call 0x400981b	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x400981b	        0x488d7d08	                      lea rdi, [rbp + 8]	        90	string3.h	FUNCTION_207	CALL_6
0x400981f	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_207	CALL_6
0x4009822	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_207	CALL_6
0x4009824	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_207	CALL_6
0x400982c	    0x48c745380000	               mov qword [rbp + 0x38], 0	        90	string3.h	FUNCTION_207	CALL_6
0x4009834	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_207	CALL_6
0x4009838	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_207	CALL_6
0x400983b	          0x83c140	                           add ecx, 0x40	        90	string3.h	FUNCTION_207	CALL_6
0x400983e	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_207	CALL_6
0x4009841	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_207	CALL_6
0x4009844	      0xe91ffeffff	                           jmp 0x4009668	        90	string3.h	FUNCTION_207	CALL_6
0x4009849	     0xf1f80000000	                         nop dword [rax]	        90	string3.h	FUNCTION_207	CALL_6
0x4009850	         0xfb64340	           movzx eax, byte [rbx + 0x40] 	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x4009854	            0xa810	                           test al, 0x10	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x4009856	            0x7438	                            je 0x4009890	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x4009858	            0xa802	                              test al, 2	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400985a	        0x4c897518	            mov qword [rbp + 0x18], r14 	      6025	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x400985e	     0xf8504feffff	                           jne 0x4009668	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x4009864	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x4009869	        0x48894520	            mov qword [rbp + 0x20], rax 	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x400986d	      0xe9f6fdffff	                           jmp 0x4009668	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x4009872	    0x660f1f440000	                    nop word [rax + rax]	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x4009878	        0xf6434008	               test byte [rbx + 0x40], 8	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400987c	     0xf84e6fdffff	                            je 0x4009668	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4009882	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4009886	        0x48894530	            mov qword [rbp + 0x30], rax 	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400988a	      0xe9d9fdffff	                           jmp 0x4009668	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x400988f	              0x90	                                     nop	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4009890	            0xa820	                           test al, 0x20	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x4009892	     0xf84d0fdffff	                            je 0x4009668	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x4009898	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x400989d	            0xa802	                              test al, 2	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400989f	        0x48894d18	            mov qword [rbp + 0x18], rcx 	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x40098a3	     0xf85bffdffff	                           jne 0x4009668	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x40098a9	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x40098ae	        0x48894520	            mov qword [rbp + 0x20], rax 	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x40098b2	      0xe9b1fdffff	                           jmp 0x4009668	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x40098b7	    0x488b81900000	            mov rax, qword [rcx + 0x90] 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40098be	          0x4829f0	                            sub rax, rsi	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40098c1	        0x48034220	             add rax, qword [rdx + 0x20]	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40098c5	        0x48894528	            mov qword [rbp + 0x28], rax 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40098c9	      0xe99afdffff	                           jmp 0x4009668	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40098ce	      0x410fb65744	           movzx edx, byte [r15 + 0x44] 	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x40098d3	          0x83e207	                              and edx, 7	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x40098d6	          0x80fa03	                               cmp dl, 3	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x40098d9	     0xf8534fdffff	                           jne 0x4009613	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x40098df	      0xe984fdffff	                           jmp 0x4009668	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	CALL_27
0x40098e4	    0xc74344000000	               mov dword [rbx + 0x44], 0	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x40098eb	      0xe978fdffff	                           jmp 0x4009668	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x40098f0	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x40098f3	            0x85f6	                           test esi, esi	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x40098f5	     0xf8420ffffff	                            je 0x400981b	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x40098fb	        0xf6434008	               test byte [rbx + 0x40], 8	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x40098ff	     0xf847d070000	                            je 0x400a082	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x4009905	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4009909	        0x4c8b5028	            mov r10, qword [rax + 0x28] 	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x400990d	          0x4d89d1	                             mov r9, r10	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4009910	        0x4c034b30	              add r9, qword [rbx + 0x30]	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4009914	          0x4d39ca	                             cmp r10, r9	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4009917	     0xf83fefeffff	                           jae 0x400981b	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x400991d	      0xe940feffff	                           jmp 0x4009762	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4009922	    0x660f1f440000	                    nop word [rax + rax]	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4009928	        0x498d7e48	                   lea rdi, [r14 + 0x48]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400992c	        0x418d50ff	                       lea edx, [r8 - 1]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4009930	            0x31c9	                            xor ecx, ecx	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4009932	      0x488d6cd708	              lea rbp, [rdi + rdx*8 + 8]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4009937	          0x4889f8	                            mov rax, rdi	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400993a	          0x4889d6	                            mov rsi, rdx	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400993d	           0xf1f00	                         nop dword [rax]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4009940	          0x488b10	                    mov rdx, qword [rax]	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x4009943	          0x8b5270	            mov edx, dword [rdx + 0x70] 	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x4009946	            0x39d1	                            cmp ecx, edx	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x4009948	           0xf42ca	                          cmovb ecx, edx	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3	CALL_22
0x400994b	        0x4883c008	                              add rax, 8	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x400994f	          0x4839e8	                            cmp rax, rbp	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4009952	            0x75ec	                           jne 0x4009940	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4009954	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4009959	      0xba01000000	                              mov edx, 1	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400995e	          0x48d3e2	                             shl rdx, cl	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4009961	          0x4839c2	                            cmp rdx, rax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4009964	          0x4989c7	                            mov r15, rax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4009967	        0x4c0f43fa	                         cmovae r15, rdx	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x400996b	      0xe96eeaffff	                           jmp 0x40083de	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4009970	          0x4989d7	                            mov r15, rdx	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4009973	            0x31c9	                            xor ecx, ecx	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x4009975	      0xe9e3eaffff	                           jmp 0x400845d	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x400997a	          0x4889f2	                            mov rdx, rsi	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x400997d	          0x4d89f3	                            mov r11, r14	      7859	elf.c	FUNCTION_88	FOR_1
0x4009980	      0xe9b9f9ffff	                           jmp 0x400933e	      7859	elf.c	FUNCTION_88	FOR_1
0x4009985	          0x4c89ff	                            mov rdi, r15	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x4009988	      0xe800000000	                          call 0x400998d	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x400998d	          0x8d5003	                      lea edx, [rax + 3]	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x4009990	            0x85c0	                           test eax, eax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x4009992	           0xf48c2	                          cmovs eax, edx	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x4009995	          0xc1f802	                              sar eax, 2	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x4009998	          0x83c004	                              add eax, 4	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x400999b	            0x4898	                                    cdqe	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x400999d	        0x49894638	             mov qword [r14 + 0x38], rax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40099a1	      0xe9aad8ffff	                           jmp 0x4007250	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_79
0x40099a6	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	        33	stdio2.h	FUNCTION_216	CALL_1
0x40099ab	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x40099b0	    0x4181e8000000	                     sub r8d, 0x70000000	        33	stdio2.h	FUNCTION_216	CALL_1
0x40099b7	      0xe954efffff	                           jmp 0x4008910	        33	stdio2.h	FUNCTION_216	CALL_1
0x40099bc	          0x488b32	                    mov rsi, qword [rdx]	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x40099bf	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x40099c4	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x40099c9	      0x4c89442428	              mov qword [rsp + 0x28], r8	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x40099ce	      0x4889542420	             mov qword [rsp + 0x20], rdx	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x40099d3	      0xe800000000	                          call 0x40099d8	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_30
0x40099d8	          0x4885c0	                           test rax, rax	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x40099db	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x40099e0	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x40099e5	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x40099ea	            0x744f	                            je 0x4009a3b	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x40099ec	    0x488b88e00000	            mov rcx, qword [rax + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x40099f3	          0x4885c9	                           test rcx, rcx	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x40099f6	            0x740a	                            je 0x4009a02	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x40099f8	    0x8b8988000000	            mov ecx, dword [rcx + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x40099fe	            0x85c9	                           test ecx, ecx	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a00	            0x752d	                           jne 0x4009a2f	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a02	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a07	          0x4889c6	                            mov rsi, rax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a0a	      0x4889542430	             mov qword [rsp + 0x30], rdx	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a0f	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a14	      0x4c89442420	              mov qword [rsp + 0x20], r8	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a19	      0xe88281ffff	call sym._bfd_elf_section_from_bfd_section.part.23	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a1e	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a23	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a28	            0x89c1	                            mov ecx, eax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a2a	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x4009a2f	    0x81f9fffeffff	                     cmp ecx, 0xfffffeff	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4009a35	     0xf8527faffff	                           jne 0x4009462	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4009a3b	        0x498b0424	                    mov rax, qword [r12]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4009a3f	          0x488b2a	                    mov rbp, qword [rdx]	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a42	      0xbe00000000	                              mov esi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x4009a47	      0xba05000000	                              mov edx, 5	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x4009a4c	      0xbf00000000	                              mov edi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x4009a51	        0x488b5808	                mov rbx, qword [rax + 8]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4009a55	      0xb800000000	                              mov eax, 0	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a5a	          0x4885db	                           test rbx, rbx	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a5d	        0x480f44d8	                          cmove rbx, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a61	      0xe800000000	                          call 0x4009a66	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_33
0x4009a66	          0x4889ea	                            mov rdx, rbp	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a69	          0x4889c7	                            mov rdi, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a6c	          0x4889de	                            mov rsi, rbx	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a6f	            0x31c0	                            xor eax, eax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a71	      0xe800000000	                          call 0x4009a76	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_32
0x4009a76	      0xbf05000000	                              mov edi, 5	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_34
0x4009a7b	      0xe800000000	                          call 0x4009a80	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_34
0x4009a80	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      7802	elf.c	FUNCTION_88	IF_4	CALL_10
0x4009a85	      0xe800000000	                          call 0x4009a8a	      7802	elf.c	FUNCTION_88	IF_4	CALL_10
0x4009a8a	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      7803	elf.c	FUNCTION_88	IF_4	CALL_11
0x4009a8f	      0xe800000000	                          call 0x4009a94	      7803	elf.c	FUNCTION_88	IF_4	CALL_11
0x4009a94	      0xe922d2ffff	                           jmp 0x4006cbb	      7803	elf.c	FUNCTION_88	IF_4	CALL_11
0x4009a99	          0x83e340	                           and ebx, 0x40	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4009a9c	          0x83fb01	                              cmp ebx, 1	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4009a9f	            0x19d2	                            sbb edx, edx	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4009aa1	          0x83e2fc	                     and edx, 0xfffffffc	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4009aa4	          0x83c215	                           add edx, 0x15	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4009aa7	      0xe9a1f7ffff	                           jmp 0x400924d	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4009aac	       0xfaf742448	            imul esi, dword [rsp + 0x48]	      5289	elf.c	FUNCTION_70	CALL_10
0x4009ab1	            0x89f7	                            mov edi, esi	      5289	elf.c	FUNCTION_70	CALL_10
0x4009ab3	        0x48897a38	             mov qword [rdx + 0x38], rdi	      5289	elf.c	FUNCTION_70	CALL_10
0x4009ab7	      0xe9ebdfffff	                           jmp 0x4007aa7	      5289	elf.c	FUNCTION_70	CALL_10
0x4009abc	          0x4139d0	                            cmp r8d, edx	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009abf	            0x765b	                           jbe 0x4009b1c	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009ac1	        0x48897518	            mov qword [rbp + 0x18], rsi 	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009ac5	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009ac9	          0x4929f1	                             sub r9, rsi	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009acc	        0x48894520	            mov qword [rbp + 0x20], rax 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009ad0	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009ad7	        0x4c894d30	              mov qword [rbp + 0x30], r9	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009adb	        0x4c894d28	              mov qword [rbp + 0x28], r9	      5947	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009adf	        0x48894510	            mov qword [rbp + 0x10], rax 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4009ae3	        0x488b4128	            mov rax, qword [rcx + 0x28] 	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4009ae7	        0x48034118	             add rax, qword [rcx + 0x18]	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4009aeb	          0x4829f0	                            sub rax, rsi	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4009aee	          0x4939c1	                             cmp r9, rax	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4009af1	            0x7604	                           jbe 0x4009af7	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4009af3	        0x48894528	            mov qword [rbp + 0x28], rax 	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4009af7	         0xfb64340	           movzx eax, byte [rbx + 0x40] 	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x4009afb	            0xa804	                              test al, 4	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x4009afd	            0x7508	                           jne 0x4009b07	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x4009aff	    0x48c745380100	               mov qword [rbp + 0x38], 1	      5965	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x4009b07	            0xa801	                              test al, 1	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4009b09	     0xf8559fbffff	                           jne 0x4009668	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4009b0f	    0x48c745080400	                  mov qword [rbp + 8], 4	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4009b17	      0xe94cfbffff	                           jmp 0x4009668	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4009b1c	          0x4584ed	                         test r13b, r13b	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x4009b1f	     0xf84f6fcffff	                            je 0x400981b	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x4009b25	      0xe9e2fcffff	                           jmp 0x400980c	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x4009b2a	    0x660f1f440000	                    nop word [rax + rax]	      5972	elf.c	FUNCTION_71	FOR_4	IF_15	IF_27
0x4009b30	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x4009b37	      0xe9aaddffff	                           jmp 0x40078e6	      4201	elf.c	FUNCTION_58	CALL_1
0x4009b3c	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x4009b43	      0xe93edeffff	                           jmp 0x4007986	      4201	elf.c	FUNCTION_58	CALL_1
0x4009b48	          0x83c501	                              add ebp, 1	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x4009b4b	      0xe907f3ffff	                           jmp 0x4008e57	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x4009b50	      0xbeac140000	                         mov esi, 0x14ac	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b55	      0xbf00000000	                              mov edi, 0	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b5a	      0xe800000000	                          call 0x4009b5f	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b5f	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b66	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b6b	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b72	    0x488b89000300	           mov rcx, qword [rcx + 0x300] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b79	      0xe929dfffff	                           jmp 0x4007aa7	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4009b7e	      0x428d442500	                    lea eax, [rbp + r12]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x4009b83	          0x83c501	                              add ebp, 1	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x4009b86	          0x8d5001	                      lea edx, [rax + 1]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x4009b89	      0xe9f5f9ffff	                           jmp 0x4009583	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x4009b8e	      0xbebe140000	                         mov esi, 0x14be	      5309	elf.c	FUNCTION_70	CALL_15
0x4009b93	      0xbf00000000	                              mov edi, 0	      5309	elf.c	FUNCTION_70	CALL_15
0x4009b98	      0xe800000000	                          call 0x4009b9d	      5309	elf.c	FUNCTION_70	CALL_15
0x4009b9d	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4009ba4	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4009bab	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4009baf	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4009bb4	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4009bbb	         0xfb64801	               movzx ecx, byte [rax + 1]	      5309	elf.c	FUNCTION_70	CALL_15
0x4009bbf	      0xe90adfffff	                           jmp 0x4007ace	      5309	elf.c	FUNCTION_70	CALL_15
0x4009bc4	        0x488b3424	                    mov rsi, qword [rsp]	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bc8	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bcd	      0x488b6c2478	            mov rbp, qword [rsp + 0x78] 	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bd2	          0x4889f0	                            mov rax, rsi	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bd5	          0x4889f7	                            mov rdi, rsi	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bd8	          0x4c01f8	                            add rax, r15	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bdb	          0x4889ea	                            mov rdx, rbp	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bde	          0x4831c6	                            xor rsi, rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009be1	          0x48f7da	                                 neg rdx	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009be4	          0x4885d6	                           test rsi, rdx	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009be7	     0xf85cee8ffff	                           jne 0x40084bb	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bed	          0x4c89f8	                            mov rax, r15	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bf0	          0x4801e8	                            add rax, rbp	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bf3	          0x4889c2	                            mov rdx, rax	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bf6	      0x4889442438	             mov qword [rsp + 0x38], rax	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bfb	          0x4889f8	                            mov rax, rdi	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009bfe	          0x4801d0	                            add rax, rdx	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009c01	      0xe9b5e8ffff	                           jmp 0x40084bb	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x4009c06	          0x4c89f7	                            mov rdi, r14	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c09	      0x4c89442420	              mov qword [rsp + 0x20], r8	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c0e	      0xe800000000	                          call 0x4009c13	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c13	            0x89c1	                            mov ecx, eax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c15	        0x498b0424	                    mov rax, qword [r12]	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c19	      0xba01000000	                              mov edx, 1	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c1e	            0xd3e2	                             shl edx, cl	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c20	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c25	          0x4c63da	                         movsxd r11, edx	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c28	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c2c	      0xe927f5ffff	                           jmp 0x4009158	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_20
0x4009c31	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x4009c38	      0xe9a0edffff	                           jmp 0x40089dd	      4201	elf.c	FUNCTION_58	CALL_1
0x4009c3d	      0x488b442408	                mov rax, qword [rsp + 8]	      5838	elf.c	FUNCTION_71	IF_10
0x4009c42	            0x31c9	                            xor ecx, ecx	      5838	elf.c	FUNCTION_71	IF_10
0x4009c44	    0x41b801000000	                              mov r8d, 1	      5838	elf.c	FUNCTION_71	IF_10
0x4009c4a	      0xbe00000000	                              mov esi, 0	      5838	elf.c	FUNCTION_71	IF_10
0x4009c4f	      0x44884c2428	              mov byte [rsp + 0x28], r9b	      5838	elf.c	FUNCTION_71	IF_10
0x4009c54	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      5838	elf.c	FUNCTION_71	IF_10
0x4009c58	      0xe800000000	                          call 0x4009c5d	      5838	elf.c	FUNCTION_71	IF_10
0x4009c5d	          0x4885c0	                           test rax, rax	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c60	    0x440fb64c2428	           movzx r9d, byte [rsp + 0x28] 	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c66	            0x7416	                            je 0x4009c7e	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c68	         0xfb65018	           movzx edx, byte [rax + 0x18] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c6c	          0x80fa02	                               cmp dl, 2	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c6f	     0xf8687010000	                           jbe 0x4009dfc	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c75	          0x80fa05	                               cmp dl, 5	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c78	     0xf847e010000	                            je 0x4009dfc	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c7e	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c85	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c8c	          0x488b1a	                    mov rbx, qword [rdx]	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4009c8f	          0x4885db	                           test rbx, rbx	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009c92	     0xf8431040000	                            je 0x400a0c9	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009c98	          0x4589cd	                           mov r13d, r9d	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009c9b	      0xe91ef9ffff	                           jmp 0x40095be	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009ca0	    0x81e380000000	                           and ebx, 0x80	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x4009ca6	          0x83fb01	                              cmp ebx, 1	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x4009ca9	            0x19d2	                            sbb edx, edx	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x4009cab	          0x83e00f	                            and eax, 0xf	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x4009cae	          0x83e2f0	                     and edx, 0xfffffff0	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x4009cb1	        0x8d540220	            lea edx, [rdx + rax + 0x20] 	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x4009cb5	      0xe993f5ffff	                           jmp 0x400924d	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_40
0x4009cba	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	CALL_1
0x4009cc1	      0xe97ddcffff	                           jmp 0x4007943	      4201	elf.c	FUNCTION_58	CALL_1
0x4009cc6	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      8071	elf.c	FUNCTION_88	CALL_43
0x4009ccb	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      8071	elf.c	FUNCTION_88	CALL_43
0x4009cd0	      0xe800000000	                          call 0x4009cd5	      8071	elf.c	FUNCTION_88	CALL_43
0x4009cd5	      0x488b6c2478	            mov rbp, qword [rsp + 0x78] 	      8071	elf.c	FUNCTION_88	CALL_43
0x4009cda	            0x31db	                            xor ebx, ebx	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009cdc	      0x4c8b642448	            mov r12, qword [rsp + 0x48] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009ce1	    0x4c8bb4248800	            mov r14, qword [rsp + 0x88] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009ce9	          0x4989ed	                            mov r13, rbp	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009cec	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009cf1	            0xeb3b	                           jmp 0x4009d2e	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4009cf3	    0x49c745100000	               mov qword [r13 + 0x10], 0	      8078	elf.c	FUNCTION_88	FOR_2	IF_41
0x4009cfb	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009cff	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d07	          0x4c89ee	                            mov rsi, r13	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d0a	          0x4c89ff	                            mov rdi, r15	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d0d	          0x83c301	                              add ebx, 1	      8074	elf.c	FUNCTION_88	FOR_2
0x4009d10	        0x4983c530	                           add r13, 0x30	      8074	elf.c	FUNCTION_88	FOR_2
0x4009d14	      0x488d4c9500	                  lea rcx, [rbp + rdx*4]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d19	         0xfb65005	               movzx edx, byte [rax + 5]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d1d	      0x490faf55f0	            imul rdx, qword [r13 - 0x10]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d22	          0x4c01f2	                            add rdx, r14	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d25	          0xff5038	                 call qword [rax + 0x38]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_45
0x4009d28	        0x395c2474	            cmp dword [rsp + 0x74], ebx 	      8074	elf.c	FUNCTION_88	FOR_2
0x4009d2c	            0x7c2f	                            jl 0x4009d5d	      8074	elf.c	FUNCTION_88	FOR_2
0x4009d2e	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4009d32	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4009d36	            0x74bb	                            je 0x4009cf3	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4009d38	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x4009d3d	      0xe800000000	                          call 0x4009d42	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x4009d42	        0x49894510	             mov qword [r13 + 0x10], rax	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x4009d46	            0xebb3	                           jmp 0x4009cfb	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_44
0x4009d48	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      8071	elf.c	FUNCTION_88	CALL_43
0x4009d4d	      0xe800000000	                          call 0x4009d52	      8071	elf.c	FUNCTION_88	CALL_43
0x4009d52	      0x837c247400	               cmp dword [rsp + 0x74], 0	      8074	elf.c	FUNCTION_88	FOR_2
0x4009d57	     0xf8478ffffff	                            je 0x4009cd5	      8074	elf.c	FUNCTION_88	FOR_2
0x4009d5d	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      8090	elf.c	FUNCTION_88	CALL_46
0x4009d62	      0xe800000000	                          call 0x4009d67	      8090	elf.c	FUNCTION_88	CALL_46
0x4009d67	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      8093	elf.c	FUNCTION_88	CALL_47
0x4009d6c	      0xe800000000	                          call 0x4009d71	      8093	elf.c	FUNCTION_88	CALL_47
0x4009d71	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	      8093	elf.c	FUNCTION_88	CALL_47
0x4009d79	    0xc74424740100	               mov dword [rsp + 0x74], 1	      8100	elf.c	FUNCTION_88
0x4009d81	    0x488981280100	            mov qword [rcx + 0x128], rax	      8093	elf.c	FUNCTION_88	CALL_47
0x4009d88	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8095	elf.c	FUNCTION_88
0x4009d8d	    0xc7810c010000	              mov dword [rcx + 0x10c], 3	      8094	elf.c	FUNCTION_88
0x4009d97	    0x488b80800300	           mov rax, qword [rax + 0x380] 	      8095	elf.c	FUNCTION_88
0x4009d9e	    0x48c781180100	              mov qword [rcx + 0x118], 0	      8096	elf.c	FUNCTION_88
0x4009da9	    0x48c781400100	              mov qword [rcx + 0x140], 0	      8097	elf.c	FUNCTION_88
0x4009db4	    0xc78130010000	              mov dword [rcx + 0x130], 0	      8098	elf.c	FUNCTION_88
0x4009dbe	    0xc78134010000	              mov dword [rcx + 0x134], 0	      8099	elf.c	FUNCTION_88
0x4009dc8	    0x48c781380100	              mov qword [rcx + 0x138], 1	      8100	elf.c	FUNCTION_88
0x4009dd3	    0x488981100100	            mov qword [rcx + 0x110], rax	      8095	elf.c	FUNCTION_88
0x4009dda	      0xe958eeffff	                           jmp 0x4008c37	      8095	elf.c	FUNCTION_88
0x4009ddf	    0x48c704240000	                      mov qword [rsp], 0	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4009de7	      0xe9f7e3ffff	                           jmp 0x40081e3	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4009dec	          0x4c89f6	                            mov rsi, r14	      3765	elf.c	FUNCTION_52	IF_16	CALL_37
0x4009def	          0x4c89ff	                            mov rdi, r15	      3765	elf.c	FUNCTION_52	IF_16	CALL_37
0x4009df2	      0xe800000000	                          call 0x4009df7	      3765	elf.c	FUNCTION_52	IF_16	CALL_37
0x4009df7	      0xe9bfceffff	                           jmp 0x4006cbb	      3765	elf.c	FUNCTION_52	IF_16	CALL_37
0x4009dfc	        0x448b4544	            mov r8d, dword [rbp + 0x44] 	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4009e00	          0x4585c0	                           test r8d, r8d	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4009e03	     0xf848e010000	                            je 0x4009f97	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4009e09	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4009e0d	          0x4885d2	                           test rdx, rdx	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4009e10	     0xf84ad010000	                            je 0x4009fc3	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4009e16	          0x4c89f1	                            mov rcx, r14	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4009e19	        0x482b4a28	             sub rcx, qword [rdx + 0x28]	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4009e1d	        0x48895028	             mov qword [rax + 0x28], rdx	      5864	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4009e21	        0x48894830	             mov qword [rax + 0x30], rcx	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4009e25	        0xc6401803	                mov byte [rax + 0x18], 3	      5872	elf.c	FUNCTION_71	IF_10	IF_11
0x4009e29	        0x80486302	                 or byte [rax + 0x63], 2	      5873	elf.c	FUNCTION_71	IF_10	IF_11
0x4009e2d	        0x806064fe	             and byte [rax + 0x64], 0xfe	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x4009e31	      0xe948feffff	                           jmp 0x4009c7e	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x4009e36	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4146	elf.c	FUNCTION_56	FOR_5
0x4009e3e	            0x31ed	                            xor ebp, ebp	      4146	elf.c	FUNCTION_56	FOR_5
0x4009e40	      0xe9ddf0ffff	                           jmp 0x4008f22	      4146	elf.c	FUNCTION_56	FOR_5
0x4009e45	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      4146	elf.c	FUNCTION_56	FOR_5
0x4009e4a	      0xba05000000	                              mov edx, 5	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x4009e4f	      0xbe00000000	                              mov esi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x4009e54	      0xe939eaffff	                           jmp 0x4008892	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x4009e59	      0xba05000000	                              mov edx, 5	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x4009e5e	      0xbe00000000	                              mov esi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x4009e63	      0xbf00000000	                              mov edi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x4009e68	      0xe800000000	                          call 0x4009e6d	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_29
0x4009e6d	          0x4889ea	                            mov rdx, rbp	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e70	        0x482b1424	                    sub rdx, qword [rsp]	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e74	          0x4889c7	                            mov rdi, rax	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e77	          0x4c89fe	                            mov rsi, r15	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e7a	            0x31c0	                            xor eax, eax	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e7c	        0x48c1fa06	                              sar rdx, 6	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e80	      0xe800000000	                          call 0x4009e85	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e85	      0xe931ceffff	                           jmp 0x4006cbb	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009e8a	      0xba04000000	                              mov edx, 4	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4009e8f	          0x4889de	                            mov rsi, rbx	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4009e92	          0x4c89ff	                            mov rdi, r15	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4009e95	      0xe800000000	                          call 0x4009e9a	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4009e9a	          0x4885c0	                           test rax, rax	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x4009e9d	    0x4c8d249d0000	                        lea r12, [rbx*4]	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x4009ea5	      0x4889442438	             mov qword [rsp + 0x38], rax	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x4009eaa	     0xf84d0fbffff	                            je 0x4009a80	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x4009eb0	        0x48894548	            mov qword [rbp + 0x48], rax 	      7823	elf.c	FUNCTION_88	IF_5	IF_6
0x4009eb4	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      7843	elf.c	FUNCTION_88
0x4009eb9	    0xc74504120000	               mov dword [rbp + 4], 0x12	      7824	elf.c	FUNCTION_88	IF_5	IF_6
0x4009ec0	        0x4c896520	            mov qword [rbp + 0x20], r12 	      7825	elf.c	FUNCTION_88	IF_5	IF_6
0x4009ec4	    0x48c745300400	               mov qword [rbp + 0x30], 4	      7826	elf.c	FUNCTION_88	IF_5	IF_6
0x4009ecc	    0x48c745380400	               mov qword [rbp + 0x38], 4	      7827	elf.c	FUNCTION_88	IF_5	IF_6
0x4009ed4	    0x48c744241001	               mov qword [rsp + 0x10], 1	      7848	elf.c	FUNCTION_88	IF_8
0x4009edd	    0x48c700000000	                      mov qword [rax], 0	      7843	elf.c	FUNCTION_88
0x4009ee4	    0x48c740080000	                  mov qword [rax + 8], 0	      7843	elf.c	FUNCTION_88
0x4009eec	    0x48c740100000	               mov qword [rax + 0x10], 0	      7843	elf.c	FUNCTION_88
0x4009ef4	        0xc6401800	                mov byte [rax + 0x18], 0	      7843	elf.c	FUNCTION_88
0x4009ef8	        0xc6401900	                mov byte [rax + 0x19], 0	      7843	elf.c	FUNCTION_88
0x4009efc	        0xc6401a00	                mov byte [rax + 0x1a], 0	      7843	elf.c	FUNCTION_88
0x4009f00	    0xc7401c000000	               mov dword [rax + 0x1c], 0	      7843	elf.c	FUNCTION_88
0x4009f07	    0x48c740200000	               mov qword [rax + 0x20], 0	      7844	elf.c	FUNCTION_88
0x4009f0f	    0x48c740280000	               mov qword [rax + 0x28], 0	      7845	elf.c	FUNCTION_88
0x4009f17	      0xe9a4f1ffff	                           jmp 0x40090c0	      7845	elf.c	FUNCTION_88
0x4009f1c	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x4009f1f	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      6135	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_18
0x4009f23	        0x48c1e106	                              shl rcx, 6	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x4009f27	          0x4801d1	                            add rcx, rdx	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x4009f2a	          0x4839ca	                            cmp rdx, rcx	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009f2d	            0x732e	                           jae 0x4009f5d	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009f2f	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009f36	            0xeb09	                           jmp 0x4009f41	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009f38	        0x4883c240	                           add rdx, 0x40	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009f3c	          0x4839d1	                            cmp rcx, rdx	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009f3f	            0x7613	                           jbe 0x4009f54	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009f41	        0x48833a01	                      cmp qword [rdx], 1	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009f45	            0x75f1	                           jne 0x4009f38	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009f47	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009f4b	          0x4839fe	                            cmp rsi, rdi	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009f4e	        0x480f47f7	                          cmova rsi, rdi	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009f52	            0xebe4	                           jmp 0x4009f38	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009f54	          0x4885f6	                           test rsi, rsi	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x4009f57	     0xf8475f7ffff	                            je 0x40096d2	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x4009f5d	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x4009f62	    0x66c740380200	                mov word [rax + 0x38], 2	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x4009f68	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x4009f6f	      0xe95ef7ffff	                           jmp 0x40096d2	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x4009f74	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5832	elf.c	FUNCTION_71	IF_10
0x4009f7a	        0x410f95c5	                              setne r13b	      5832	elf.c	FUNCTION_71	IF_10
0x4009f7e	      0xe9faf6ffff	                           jmp 0x400967d	      5832	elf.c	FUNCTION_71	IF_10
0x4009f83	      0xbec20e0000	                          mov esi, 0xec2	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4009f88	      0xbf00000000	                              mov edi, 0	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4009f8d	      0xe800000000	                          call 0x4009f92	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4009f92	      0xe9a7d0ffff	                           jmp 0x400703e	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_43
0x4009f97	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4009f9e	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4009fa5	            0xeb14	                           jmp 0x4009fbb	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4009fa7	    0x660f1f840000	                    nop word [rax + rax]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4009fb0	          0x8b7a44	            mov edi, dword [rdx + 0x44] 	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4009fb3	            0x85ff	                           test edi, edi	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4009fb5	     0xf85b7000000	                           jne 0x400a072	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4009fbb	          0x488b12	                    mov rdx, qword [rdx]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4009fbe	          0x4885d2	                           test rdx, rdx	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4009fc1	            0x75ed	                           jne 0x4009fb0	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4009fc3	        0x4c897030	             mov qword [rax + 0x30], r14	      5868	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x4009fc7	    0x48c740280000	               mov qword [rax + 0x28], 0	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x4009fcf	      0xe951feffff	                           jmp 0x4009e25	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x4009fd4	      0xe800000000	                          call 0x4009fd9	      4318	elf.c	FUNCTION_59
0x4009fd9	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009fde	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009fe5	          0x4885c0	                           test rax, rax	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009fe8	            0x7418	                            je 0x400a002	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009fea	            0x89da	                            mov edx, ebx	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x4009fec	          0x4c89ff	                            mov rdi, r15	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x4009fef	            0xffd0	                                call rax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x4009ff1	            0x85c0	                           test eax, eax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x4009ff3	     0xf85fcf6ffff	                           jne 0x40096f5	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x4009ff9	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x4009ffe	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_20
0x400a002	      0x48837e4001	               cmp qword [rsi + 0x40], 1	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a007	     0xf85e8f6ffff	                           jne 0x40096f5	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a00d	        0x488b5658	            mov rdx, qword [rsi + 0x58] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a011	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a015	          0x4839c2	                            cmp rdx, rax	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a018	            0x7711	                            ja 0x400a02b	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a01a	        0x48035670	             add rdx, qword [rsi + 0x70]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a01e	        0x48034630	             add rax, qword [rsi + 0x30]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a022	          0x4839c2	                            cmp rdx, rax	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a025	     0xf83caf6ffff	                           jae 0x40096f5	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400a02b	      0xba05000000	                              mov edx, 5	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a030	      0xbe00000000	                              mov esi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a035	      0xbf00000000	                              mov edi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a03a	      0xe800000000	                          call 0x400a03f	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a03f	          0x4c89fe	                            mov rsi, r15	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a042	          0x4889c7	                            mov rdi, rax	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a045	            0x31c0	                            xor eax, eax	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a047	      0xe800000000	                          call 0x400a04c	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a04c	      0xe96accffff	                           jmp 0x4006cbb	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_22
0x400a051	          0x4531d2	                          xor r10d, r10d	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400a054	        0x4883fe07	                              cmp rsi, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400a058	     0xf8508e6ffff	                           jne 0x4008666	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400a05e	      0xe9ffe5ffff	                           jmp 0x4008662	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400a063	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      7793	elf.c	FUNCTION_88	IF_3	CALL_8
0x400a068	      0xe800000000	                          call 0x400a06d	      7793	elf.c	FUNCTION_88	IF_3	CALL_8
0x400a06d	      0xe949ccffff	                           jmp 0x4006cbb	      7793	elf.c	FUNCTION_88	IF_3	CALL_8
0x400a072	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400a076	      0xe992fdffff	                           jmp 0x4009e0d	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x400a07b	            0x89c7	                            mov edi, eax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400a07d	      0xe9f1e5ffff	                           jmp 0x4008673	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_48
0x400a082	      0xba00000000	                              mov edx, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400a087	      0xbe08170000	                         mov esi, 0x1708	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400a08c	      0xbf00000000	                              mov edi, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400a091	      0xe800000000	                          call 0x400a096	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x400a096	      0xb9f1ffffff	                     mov ecx, 0xfffffff1	      7942	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400a09b	      0xe900f1ffff	                           jmp 0x40091a0	      7942	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400a0a0	    0x498b8ff80000	            mov rcx, qword [r15 + 0xf8] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x400a0a7	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x400a0ab	    0x8b89780c0000	           mov ecx, dword [rcx + 0xc78] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x400a0b1	          0x89502c	             mov dword [rax + 0x2c], edx	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x400a0b4	      0x4883480840	                or qword [rax + 8], 0x40	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x400a0b9	          0x894828	             mov dword [rax + 0x28], ecx	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x400a0bc	      0xe934d0ffff	                           jmp 0x40070f5	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_48
0x400a0c1	          0x4489c1	                            mov ecx, r8d	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400a0c4	      0xe98fdbffff	                           jmp 0x4007c58	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x400a0c9	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6037	elf.c	FUNCTION_71	CALL_31
0x400a0d0	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a0d5	          0x4589cd	                           mov r13d, r9d	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a0d8	        0x4c896240	             mov qword [rdx + 0x40], r12	      6037	elf.c	FUNCTION_71	CALL_31
0x400a0dc	    0x488b91580100	           mov rdx, qword [rcx + 0x158] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a0e3	          0x4885d2	                           test rdx, rdx	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a0e6	     0xf85b4f5ffff	                           jne 0x40096a0	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400a0ec	      0xe9cdf5ffff	                           jmp 0x40096be	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
_bfd_elf_print_private_bfd_data	SWITCH,1:CALL,35:IF,18:functions,0:ELSE,1:DO,0:WHILE,0:FOR,6	645
0x400d410	            0x4157	                                push r15	      1610	elf.c	FUNCTION_33
0x400d412	            0x4156	                                push r14	      1610	elf.c	FUNCTION_33
0x400d414	            0x4155	                                push r13	      1610	elf.c	FUNCTION_33
0x400d416	            0x4154	                                push r12	      1610	elf.c	FUNCTION_33
0x400d418	              0x55	                                push rbp	      1610	elf.c	FUNCTION_33
0x400d419	              0x53	                                push rbx	      1610	elf.c	FUNCTION_33
0x400d41a	          0x4889fd	                            mov rbp, rdi	      1610	elf.c	FUNCTION_33
0x400d41d	          0x4889f3	                            mov rbx, rsi	      1610	elf.c	FUNCTION_33
0x400d420	        0x4883ec58	                           sub rsp, 0x58	      1610	elf.c	FUNCTION_33
0x400d424	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	elf.c	FUNCTION_33
0x400d42d	      0x4889442448	             mov qword [rsp + 0x48], rax	      1610	elf.c	FUNCTION_33
0x400d432	            0x31c0	                            xor eax, eax	      1610	elf.c	FUNCTION_33
0x400d434	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1616	elf.c	FUNCTION_33	CALL_1
0x400d43b	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1614	elf.c	FUNCTION_33
0x400d444	        0x4c8b6060	            mov r12, qword [rax + 0x60] 	      1616	elf.c	FUNCTION_33	CALL_1
0x400d448	          0x4d85e4	                           test r12, r12	      1617	elf.c	FUNCTION_33	IF_1
0x400d44b	     0xf84df010000	                            je 0x400d630	      1617	elf.c	FUNCTION_33	IF_1
0x400d451	      0xba05000000	                              mov edx, 5	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400d456	      0xbe00000000	                              mov esi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400d45b	      0xbf00000000	                              mov edi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400d460	      0xe800000000	                          call 0x400d465	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400d465	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d46a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_66
0x400d46d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d470	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d472	      0xe800000000	                          call 0x400d477	        97	stdio2.h	CALL_66
0x400d477	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_3
0x400d47e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_3
0x400d481	            0x85c0	                           test eax, eax	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d483	     0xf84a7010000	                            je 0x400d630	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d489	        0x448d68ff	                     lea r13d, [rax - 1]	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d48d	        0x4983c501	                              add r13, 1	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d491	        0x49c1e506	                              shl r13, 6	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d495	          0x4d01e5	                            add r13, r12	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d498	            0xeb20	                           jmp 0x400d4ba	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d49a	    0x660f1f440000	                    nop word [rax + rax]	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d4a0	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_66
0x400d4a3	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_66
0x400d4a8	        0x4983c440	                           add r12, 0x40	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d4ac	      0xe800000000	                          call 0x400d4b1	        97	stdio2.h	CALL_66
0x400d4b1	          0x4d39e5	                            cmp r13, r12	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d4b4	     0xf8476010000	                            je 0x400d630	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d4ba	        0x4d8b0424	                     mov r8, qword [r12]	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_4
0x400d4be	          0x4489c7	                            mov edi, r8d	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_4
0x400d4c1	      0xe87a2bffff	               call sym.get_segment_type	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_4
0x400d4c6	          0x4885c0	                           test rax, rax	      1628	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400d4c9	     0xf84b1030000	                            je 0x400d880	      1628	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400d4cf	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_66
0x400d4d2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400d4d7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d4dc	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d4df	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d4e1	      0xe800000000	                          call 0x400d4e6	        97	stdio2.h	CALL_66
0x400d4e6	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400d4eb	          0x4889de	                            mov rsi, rbx	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400d4ee	          0x4889ef	                            mov rdi, rbp	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400d4f1	      0xe800000000	                          call 0x400d4f6	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400d4f6	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x400d4f9	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_66
0x400d4fe	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d503	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x400d508	      0xe800000000	                          call 0x400d50d	        97	stdio2.h	CALL_66
0x400d50d	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400d512	          0x4889de	                            mov rsi, rbx	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400d515	          0x4889ef	                            mov rdi, rbp	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400d518	      0xe800000000	                          call 0x400d51d	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400d51d	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x400d520	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_66
0x400d525	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d52a	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x400d52f	      0xe800000000	                          call 0x400d534	        97	stdio2.h	CALL_66
0x400d534	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400d539	          0x4889de	                            mov rsi, rbx	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400d53c	          0x4889ef	                            mov rdi, rbp	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400d53f	      0xe800000000	                          call 0x400d544	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400d544	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x400d549	      0xe800000000	                          call 0x400d54e	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x400d54e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400d553	            0x89c1	                            mov ecx, eax	        97	stdio2.h	CALL_66
0x400d555	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d55a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d55d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d55f	      0xe800000000	                          call 0x400d564	        97	stdio2.h	CALL_66
0x400d564	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x400d567	      0xba12000000	                           mov edx, 0x12	        97	stdio2.h	CALL_66
0x400d56c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d571	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x400d576	      0xe800000000	                          call 0x400d57b	        97	stdio2.h	CALL_66
0x400d57b	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400d580	          0x4889de	                            mov rsi, rbx	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400d583	          0x4889ef	                            mov rdi, rbp	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400d586	      0xe800000000	                          call 0x400d58b	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400d58b	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x400d58e	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_66
0x400d593	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d598	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x400d59d	      0xe800000000	                          call 0x400d5a2	        97	stdio2.h	CALL_66
0x400d5a2	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400d5a7	          0x4889de	                            mov rsi, rbx	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400d5aa	          0x4889ef	                            mov rdi, rbp	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400d5ad	      0xe800000000	                          call 0x400d5b2	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400d5b2	      0x498b442408	                mov rax, qword [r12 + 8]	      1647	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5b7	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d5ba	          0x4889c2	                            mov rdx, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5bd	          0x83e201	                              and edx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5c0	        0x4883fa01	                              cmp rdx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5c4	          0x4889c2	                            mov rdx, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5c7	            0x19f6	                            sbb esi, esi	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5c9	          0x83e202	                              and edx, 2	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5cc	          0x83e6b5	                     and esi, 0xffffffb5	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5cf	        0x4883fa01	                              cmp rdx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5d3	            0x19d2	                            sbb edx, edx	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5d5	          0x83e004	                              and eax, 4	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5d8	        0x448d4e78	                   lea r9d, [rsi + 0x78]	        97	stdio2.h	CALL_66
0x400d5dc	          0x83e2b6	                     and edx, 0xffffffb6	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5df	        0x4883f801	                              cmp rax, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5e3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d5e8	            0x19c9	                            sbb ecx, ecx	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5ea	        0x448d4277	                   lea r8d, [rdx + 0x77]	        97	stdio2.h	CALL_66
0x400d5ee	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d5f0	          0x83e1bb	                     and ecx, 0xffffffbb	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5f3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400d5f8	          0x83c172	                           add ecx, 0x72	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400d5fb	      0xe800000000	                          call 0x400d600	        97	stdio2.h	CALL_66
0x400d600	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400d605	          0x83e1f8	                     and ecx, 0xfffffff8	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400d608	     0xf8492feffff	                            je 0x400d4a0	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400d60e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400d613	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d618	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d61b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d61d	      0xe800000000	                          call 0x400d622	        97	stdio2.h	CALL_66
0x400d622	      0xe979feffff	                           jmp 0x400d4a0	        97	stdio2.h	CALL_66
0x400d627	    0x660f1f840000	                    nop word [rax + rax]	        97	stdio2.h	CALL_66
0x400d630	      0xbe00000000	                              mov esi, 0	      1654	elf.c	FUNCTION_33	CALL_11
0x400d635	          0x4889ef	                            mov rdi, rbp	      1654	elf.c	FUNCTION_33	CALL_11
0x400d638	      0xe800000000	                          call 0x400d63d	      1654	elf.c	FUNCTION_33	CALL_11
0x400d63d	          0x4885c0	                           test rax, rax	      1655	elf.c	FUNCTION_33	IF_4
0x400d640	          0x4989c7	                            mov r15, rax	      1654	elf.c	FUNCTION_33	CALL_11
0x400d643	     0xf846d020000	                            je 0x400d8b6	      1655	elf.c	FUNCTION_33	IF_4
0x400d649	      0xba05000000	                              mov edx, 5	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400d64e	      0xbe00000000	                              mov esi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400d653	      0xbf00000000	                              mov edi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400d658	      0xe800000000	                          call 0x400d65d	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400d65d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d662	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_66
0x400d665	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d668	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d66a	      0xe800000000	                          call 0x400d66f	        97	stdio2.h	CALL_66
0x400d66f	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400d674	          0x4c89fe	                            mov rsi, r15	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400d677	          0x4889ef	                            mov rdi, rbp	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400d67a	      0xe800000000	                          call 0x400d67f	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400d67f	            0x85c0	                           test eax, eax	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400d681	            0x753d	                           jne 0x400d6c0	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400d683	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400d688	          0x4885ff	                           test rdi, rdi	      1846	elf.c	FUNCTION_33	IF_18
0x400d68b	            0x7405	                            je 0x400d692	      1846	elf.c	FUNCTION_33	IF_18
0x400d68d	      0xe800000000	                          call 0x400d692	      1847	elf.c	FUNCTION_33	CALL_35
0x400d692	            0x31c0	                            xor eax, eax	      1848	elf.c	FUNCTION_33
0x400d694	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1849	elf.c	FUNCTION_33
0x400d699	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1849	elf.c	FUNCTION_33
0x400d6a2	     0xf85d7080000	                           jne 0x400df7f	      1849	elf.c	FUNCTION_33
0x400d6a8	        0x4883c458	                           add rsp, 0x58	      1849	elf.c	FUNCTION_33
0x400d6ac	              0x5b	                                 pop rbx	      1849	elf.c	FUNCTION_33
0x400d6ad	              0x5d	                                 pop rbp	      1849	elf.c	FUNCTION_33
0x400d6ae	            0x415c	                                 pop r12	      1849	elf.c	FUNCTION_33
0x400d6b0	            0x415d	                                 pop r13	      1849	elf.c	FUNCTION_33
0x400d6b2	            0x415e	                                 pop r14	      1849	elf.c	FUNCTION_33
0x400d6b4	            0x415f	                                 pop r15	      1849	elf.c	FUNCTION_33
0x400d6b6	              0xc3	                                     ret	      1849	elf.c	FUNCTION_33
0x400d6b7	    0x660f1f840000	                    nop word [rax + rax]	      1849	elf.c	FUNCTION_33
0x400d6c0	    0x498b87e00000	            mov rax, qword [r15 + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400d6c7	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400d6ca	     0xf8420030000	                            je 0x400d9f0	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x400d6d0	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400d6d6	            0x85c0	                           test eax, eax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400d6d8	     0xf8412030000	                            je 0x400d9f0	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x400d6de	      0x3dfffeffff	                     cmp eax, 0xfffffeff	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400d6e3	            0x749e	                            je 0x400d683	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400d6e5	        0x488b5508	                mov rdx, qword [rbp + 8]	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400d6e9	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      1676	elf.c	FUNCTION_33	IF_4
0x400d6ee	    0x4c8bb2680300	           mov r14, qword [rdx + 0x368] 	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400d6f5	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400d6f9	    0x498b8e000300	           mov rcx, qword [r14 + 0x300] 	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400d700	      0x440fb66906	              movzx r13d, byte [rcx + 6]	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400d705	          0x4939d5	                            cmp r13, rdx	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400d708	     0xf87f2020000	                            ja 0x400da00	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400d70e	          0x4c29ea	                            sub rdx, r13	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d711	          0x4c01e2	                            add rdx, r12	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d714	        0x48891424	                    mov qword [rsp], rdx	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d718	     0xf8259080000	                            jb 0x400df77	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d71e	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d725	            0x89c0	                            mov eax, eax	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d727	        0x4c8b7950	            mov r15, qword [rcx + 0x50] 	      1674	elf.c	FUNCTION_33	IF_4	CALL_17
0x400d72b	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d72f	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d733	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d736	        0x8944240c	              mov dword [rsp + 0xc], eax	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d73a	      0xe9b1000000	                           jmp 0x400d7f0	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d73f	              0x90	                                     nop	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400d740	        0x4883ff0e	                            cmp rdi, 0xe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d744	     0xf8419080000	                            je 0x400df63	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d74a	     0xf8710030000	                            ja 0x400da60	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d750	        0x4883ff07	                              cmp rdi, 7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d754	     0xf84ff070000	                            je 0x400df59	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d75a	     0xf8790030000	                            ja 0x400daf0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d760	        0x4883ff03	                              cmp rdi, 3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d764	     0xf84e5070000	                            je 0x400df4f	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d76a	     0xf86f0060000	                           jbe 0x400de60	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d770	        0x4883ff05	                              cmp rdi, 5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d774	      0xb900000000	                              mov ecx, 0	      1714	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d779	            0x7415	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d77b	      0xb900000000	                              mov ecx, 0	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d780	      0xb800000000	                              mov eax, 0	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d785	        0x480f47c8	                          cmova rcx, rax	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d789	     0xf1f80000000	                         nop dword [rax]	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d790	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400d795	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d79a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d79d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d79f	      0xe800000000	                          call 0x400d7a4	        97	stdio2.h	CALL_66
0x400d7a4	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_66
0x400d7a9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d7ae	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_66
0x400d7b3	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_66
0x400d7b6	      0xe800000000	                          call 0x400d7bb	        97	stdio2.h	CALL_66
0x400d7bb	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d7c0	          0x4889de	                            mov rsi, rbx	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d7c3	          0x4889ef	                            mov rdi, rbp	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d7c6	      0xe800000000	                          call 0x400d7cb	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d7cb	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_66
0x400d7ce	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_66
0x400d7d3	          0x4d01ec	                            add r12, r13	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7d6	      0xe800000000	                          call 0x400d7db	        97	stdio2.h	CALL_66
0x400d7db	        0x4c3b2424	                    cmp r12, qword [rsp]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7df	     0xf87be000000	                            ja 0x400d8a3	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7e5	        0x488b4508	                mov rax, qword [rbp + 8]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7e9	    0x4c8bb0680300	           mov r14, qword [rax + 0x368] 	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7f0	          0x4889ef	                            mov rdi, rbp	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7f3	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7f8	          0x4c89e6	                            mov rsi, r12	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7fb	          0x41ffd7	                                call r15	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400d7fe	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400d803	          0x4885ff	                           test rdi, rdi	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400d806	     0xf8497000000	                            je 0x400d8a3	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400d80c	        0x4883ff1d	                           cmp rdi, 0x1d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d810	     0xf8457070000	                            je 0x400df6d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d816	     0xf8624ffffff	                           jbe 0x400d740	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d81c	    0x4881fffcfeff	                     cmp rdi, 0x6ffffefc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d823	     0xf841c070000	                            je 0x400df45	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d829	     0xf87e1010000	                            ja 0x400da10	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d82f	    0x4881fffbfdff	                     cmp rdi, 0x6ffffdfb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d836	     0xf84ff060000	                            je 0x400df3b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d83c	     0xf8666020000	                           jbe 0x400daa8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d842	    0x4881fffffdff	                     cmp rdi, 0x6ffffdff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d849	     0xf84e2060000	                            je 0x400df31	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d84f	     0xf87fe040000	                            ja 0x400dd53	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d855	    0x4881fffdfdff	                     cmp rdi, 0x6ffffdfd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d85c	      0xb900000000	                              mov ecx, 0	      1747	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d861	     0xf8429ffffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d867	      0xb900000000	                              mov ecx, 0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d86c	      0xb800000000	                              mov eax, 0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d871	        0x480f47c8	                          cmova rcx, rax	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d875	      0xe916ffffff	                           jmp 0x400d790	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d87a	    0x660f1f440000	                    nop word [rax + rax]	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d880	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        33	stdio2.h	FUNCTION_216	CALL_1
0x400d885	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x400d88a	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_216	CALL_1
0x400d88f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x400d894	      0xe800000000	                          call 0x400d899	        33	stdio2.h	FUNCTION_216	CALL_1
0x400d899	      0x488d442430	                   lea rax, [rsp + 0x30]	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400d89e	      0xe92cfcffff	                           jmp 0x400d4cf	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400d8a3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400d8a8	      0xe800000000	                          call 0x400d8ad	      1789	elf.c	FUNCTION_33	IF_4	CALL_22
0x400d8ad	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1790	elf.c	FUNCTION_33	IF_4
0x400d8b6	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400d8bd	    0x8b90840c0000	           mov edx, dword [rax + 0xc84] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400d8c3	            0x85d2	                           test edx, edx	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400d8c5	     0xf8405010000	                            je 0x400d9d0	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400d8cb	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400d8d3	     0xf84c9020000	                            je 0x400dba2	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400d8d9	    0x8b88880c0000	           mov ecx, dword [rax + 0xc88] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d8df	            0x85c9	                           test ecx, ecx	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d8e1	     0xf84e4020000	                            je 0x400dbcb	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d8e7	    0x4883b8500300	              cmp qword [rax + 0x350], 0	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d8ef	     0xf84ad020000	                            je 0x400dba2	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d8f5	            0x85d2	                           test edx, edx	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400d8f7	     0xf85ce020000	                           jne 0x400dbcb	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400d8fd	      0xba05000000	                              mov edx, 5	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400d902	      0xbe00000000	                              mov esi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400d907	      0xbf00000000	                              mov edi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400d90c	      0xe800000000	                          call 0x400d911	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400d911	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d916	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_66
0x400d919	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d91c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d91e	      0xe800000000	                          call 0x400d923	        97	stdio2.h	CALL_66
0x400d923	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d92a	    0x4c8ba8500300	           mov r13, qword [rax + 0x350] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d931	          0x4d85ed	                           test r13, r13	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d934	     0xf84a4000000	                            je 0x400d9de	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d93a	    0x41bc00000000	                             mov r12d, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d940	        0x498b6d28	            mov rbp, qword [r13 + 0x28] 	      1835	elf.c	FUNCTION_33	IF_17	FOR_5
0x400d944	      0xba05000000	                              mov edx, 5	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d949	      0xbe00000000	                              mov esi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d94e	      0xbf00000000	                              mov edi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d953	          0x4885ed	                           test rbp, rbp	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d956	        0x490f44ec	                          cmove rbp, r12	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d95a	      0xe800000000	                          call 0x400d95f	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d95f	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_66
0x400d962	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_66
0x400d965	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d96a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d96c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d96f	      0xe800000000	                          call 0x400d974	        97	stdio2.h	CALL_66
0x400d974	        0x498b6d30	            mov rbp, qword [r13 + 0x30] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d978	          0x4885ed	                           test rbp, rbp	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d97b	            0x7441	                            je 0x400d9be	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d97d	           0xf1f00	                         nop dword [rax]	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d980	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1839	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d984	      0x440fb74508	               movzx r8d, word [rbp + 8]	        97	stdio2.h	CALL_66
0x400d989	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400d98c	      0x440fb74d0a	            movzx r9d, word [rbp + 0xa] 	        97	stdio2.h	CALL_66
0x400d991	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_66
0x400d995	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400d99a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400d99f	          0x4885c0	                           test rax, rax	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d9a2	        0x490f44c4	                          cmove rax, r12	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d9a6	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_66
0x400d9aa	              0x50	                                push rax	        97	stdio2.h	CALL_66
0x400d9ab	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400d9ad	      0xe800000000	                          call 0x400d9b2	        97	stdio2.h	CALL_66
0x400d9b2	        0x488b6d28	            mov rbp, qword [rbp + 0x28] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d9b6	              0x5f	                                 pop rdi	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d9b7	            0x4158	                                  pop r8	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d9b9	          0x4885ed	                           test rbp, rbp	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d9bc	            0x75c2	                           jne 0x400d980	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d9be	        0x4d8b6d38	            mov r13, qword [r13 + 0x38] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d9c2	          0x4d85ed	                           test r13, r13	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d9c5	     0xf8575ffffff	                           jne 0x400d940	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d9cb	            0xeb11	                           jmp 0x400d9de	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d9cd	           0xf1f00	                         nop dword [rax]	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d9d0	    0x8bb0880c0000	           mov esi, dword [rax + 0xc88] 	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d9d6	            0x85f6	                           test esi, esi	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d9d8	     0xf8509ffffff	                           jne 0x400d8e7	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d9de	      0xb801000000	                              mov eax, 1	      1843	elf.c	FUNCTION_33
0x400d9e3	      0xe9acfcffff	                           jmp 0x400d694	      1843	elf.c	FUNCTION_33
0x400d9e8	     0xf1f84000000	                   nop dword [rax + rax]	      1843	elf.c	FUNCTION_33
0x400d9f0	          0x4c89fe	                            mov rsi, r15	      1843	elf.c	FUNCTION_33
0x400d9f3	          0x4889ef	                            mov rdi, rbp	      1843	elf.c	FUNCTION_33
0x400d9f6	      0xe8a541ffff	call sym._bfd_elf_section_from_bfd_section.part.23	      1843	elf.c	FUNCTION_33
0x400d9fb	      0xe9defcffff	                           jmp 0x400d6de	      1843	elf.c	FUNCTION_33
0x400da00	          0x4c89e7	                            mov rdi, r12	      1676	elf.c	FUNCTION_33	IF_4
0x400da03	      0xe980fcffff	                           jmp 0x400d688	      1676	elf.c	FUNCTION_33	IF_4
0x400da08	     0xf1f84000000	                   nop dword [rax + rax]	      1676	elf.c	FUNCTION_33	IF_4
0x400da10	    0x4881fffbffff	                     cmp rdi, 0x6ffffffb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da17	     0xf84ec040000	                            je 0x400df09	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da1d	     0xf8605010000	                           jbe 0x400db28	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da23	    0x4881ffffffff	                     cmp rdi, 0x6fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da2a	     0xf84cf040000	                            je 0x400deff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da30	     0xf87bc020000	                            ja 0x400dcf2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da36	    0x4881fffdffff	                     cmp rdi, 0x6ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da3d	      0xb900000000	                              mov ecx, 0	      1761	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da42	     0xf8448fdffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da48	      0xb900000000	                              mov ecx, 0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da4d	      0xb800000000	                              mov eax, 0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da52	        0x480f47c8	                          cmova rcx, rax	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da56	      0xe935fdffff	                           jmp 0x400d790	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da5b	       0xf1f440000	                   nop dword [rax + rax]	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da60	        0x4883ff15	                           cmp rdi, 0x15	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da64	     0xf848b040000	                            je 0x400def5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da6a	     0xf8600010000	                           jbe 0x400db70	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da70	        0x4883ff19	                           cmp rdi, 0x19	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da74	     0xf8471040000	                            je 0x400deeb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da7a	     0xf8750020000	                            ja 0x400dcd0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da80	        0x4883ff17	                           cmp rdi, 0x17	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da84	      0xb900000000	                              mov ecx, 0	      1732	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da89	     0xf8401fdffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da8f	      0xb900000000	                              mov ecx, 0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da94	      0xb800000000	                              mov eax, 0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da99	        0x480f47c8	                          cmova rcx, rax	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400da9d	      0xe9eefcffff	                           jmp 0x400d790	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400daa2	    0x660f1f440000	                    nop word [rax + rax]	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400daa8	        0x4883ff21	                           cmp rdi, 0x21	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400daac	     0xf8475040000	                            je 0x400df27	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dab2	     0xf8680030000	                           jbe 0x400de38	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dab8	    0x4881fff9fdff	                     cmp rdi, 0x6ffffdf9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dabf	      0xb900000000	                              mov ecx, 0	      1743	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dac4	     0xf84c6fcffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400daca	      0xb900000000	                              mov ecx, 0	      1744	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dacf	     0xf87bbfcffff	                            ja 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dad5	    0x4881fff8fdff	                     cmp rdi, 0x6ffffdf8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dadc	      0xb900000000	                              mov ecx, 0	      1742	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dae1	     0xf84a9fcffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dae7	      0xe98c020000	                           jmp 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400daec	         0xf1f4000	                         nop dword [rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400daf0	        0x4883ff0a	                            cmp rdi, 0xa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400daf4	     0xf8423040000	                            je 0x400df1d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dafa	     0xf8610030000	                           jbe 0x400de10	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db00	        0x4883ff0c	                            cmp rdi, 0xc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db04	      0xb900000000	                              mov ecx, 0	      1721	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db09	     0xf8481fcffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db0f	      0xb900000000	                              mov ecx, 0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db14	      0xb800000000	                              mov eax, 0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db19	        0x480f47c8	                          cmova rcx, rax	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db1d	      0xe96efcffff	                           jmp 0x400d790	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db22	    0x660f1f440000	                    nop word [rax + rax]	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db28	    0x4881fffffeff	                     cmp rdi, 0x6ffffeff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db2f	     0xf84de030000	                            je 0x400df13	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db35	     0xf86a5020000	                           jbe 0x400dde0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db3b	    0x4881fff9ffff	                     cmp rdi, 0x6ffffff9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db42	      0xb900000000	                              mov ecx, 0	      1756	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db47	     0xf8443fcffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db4d	      0xb900000000	                              mov ecx, 0	      1757	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db52	     0xf8738fcffff	                            ja 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db58	    0x4881fff0ffff	                     cmp rdi, 0x6ffffff0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db5f	      0xb900000000	                              mov ecx, 0	      1759	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db64	     0xf8426fcffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db6a	      0xe909020000	                           jmp 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db6f	              0x90	                                     nop	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db70	        0x4883ff11	                           cmp rdi, 0x11	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db74	     0xf8453030000	                            je 0x400decd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db7a	     0xf8641020000	                           jbe 0x400ddc1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db80	        0x4883ff13	                           cmp rdi, 0x13	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db84	      0xb900000000	                              mov ecx, 0	      1728	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db89	     0xf8401fcffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db8f	      0xb900000000	                              mov ecx, 0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db94	      0xb800000000	                              mov eax, 0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db99	        0x480f47c8	                          cmova rcx, rax	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400db9d	      0xe9eefbffff	                           jmp 0x400d790	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dba2	            0x31f6	                            xor esi, esi	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400dba4	          0x4889ef	                            mov rdi, rbp	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400dba7	      0xe800000000	                          call 0x400dbac	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400dbac	            0x85c0	                           test eax, eax	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400dbae	     0xf84defaffff	                            je 0x400d692	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400dbb4	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400dbbb	    0x448ba0840c00	          mov r12d, dword [rax + 0xc84] 	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400dbc2	          0x4585e4	                         test r12d, r12d	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400dbc5	     0xf84f0000000	                            je 0x400dcbb	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400dbcb	      0xba05000000	                              mov edx, 5	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400dbd0	      0xbe00000000	                              mov esi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400dbd5	      0xbf00000000	                              mov edi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400dbda	      0xe800000000	                          call 0x400dbdf	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400dbdf	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400dbe4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_66
0x400dbe7	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400dbea	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400dbec	      0xe800000000	                          call 0x400dbf1	        97	stdio2.h	CALL_66
0x400dbf1	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dbf8	    0x4c8ba8480300	           mov r13, qword [rax + 0x348] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dbff	          0x4d85ed	                           test r13, r13	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dc02	     0xf84b3000000	                            je 0x400dcbb	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dc08	    0x41be00000000	                             mov r14d, 0	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400dc0e	            0x6690	                                     nop	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400dc10	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      1809	elf.c	FUNCTION_33	IF_15	FOR_3
0x400dc14	      0x410fb74d04	               movzx ecx, word [r13 + 4]	        97	stdio2.h	CALL_66
0x400dc19	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400dc1e	      0x450fb74502	               movzx r8d, word [r13 + 2]	        97	stdio2.h	CALL_66
0x400dc23	        0x4d8b4d08	                 mov r9, qword [r13 + 8]	        97	stdio2.h	CALL_66
0x400dc27	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400dc2c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400dc2f	          0x4885c0	                           test rax, rax	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400dc32	        0x490f44c6	                          cmove rax, r14	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400dc36	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_66
0x400dc3a	              0x50	                                push rax	        97	stdio2.h	CALL_66
0x400dc3b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400dc3d	      0xe800000000	                          call 0x400dc42	        97	stdio2.h	CALL_66
0x400dc42	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400dc46	            0x415a	                                 pop r10	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400dc48	            0x415b	                                 pop r11	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400dc4a	          0x4885c0	                           test rax, rax	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400dc4d	            0x7458	                            je 0x400dca7	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400dc4f	      0x4883781800	               cmp qword [rax + 0x18], 0	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400dc54	            0x7451	                            je 0x400dca7	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400dc56	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_66
0x400dc59	      0xbf09000000	                              mov edi, 9	        97	stdio2.h	CALL_66
0x400dc5e	      0xe800000000	                          call 0x400dc63	        97	stdio2.h	CALL_66
0x400dc63	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc67	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc6b	          0x4d85e4	                           test r12, r12	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc6e	            0x742a	                            je 0x400dc9a	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc70	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	      1819	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc75	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400dc7a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400dc7f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400dc82	          0x4885c9	                           test rcx, rcx	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc85	        0x490f44ce	                          cmove rcx, r14	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc89	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400dc8b	      0xe800000000	                          call 0x400dc90	        97	stdio2.h	CALL_66
0x400dc90	      0x4d8b642418	            mov r12, qword [r12 + 0x18] 	      1817	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc95	          0x4d85e4	                           test r12, r12	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc98	            0x75d6	                           jne 0x400dc70	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400dc9a	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_66
0x400dc9d	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_66
0x400dca2	      0xe800000000	                          call 0x400dca7	        97	stdio2.h	CALL_66
0x400dca7	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dcab	          0x4d85ed	                           test r13, r13	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dcae	     0xf855cffffff	                           jne 0x400dc10	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dcb4	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400dcbb	    0x448b88880c00	           mov r9d, dword [rax + 0xc88] 	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400dcc2	          0x4585c9	                           test r9d, r9d	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400dcc5	     0xf8413fdffff	                            je 0x400d9de	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400dccb	      0xe92dfcffff	                           jmp 0x400d8fd	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400dcd0	        0x4883ff1b	                           cmp rdi, 0x1b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dcd4	      0xb900000000	                              mov ecx, 0	      1736	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dcd9	     0xf84b1faffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dcdf	      0xb900000000	                              mov ecx, 0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dce4	      0xb800000000	                              mov eax, 0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dce9	        0x480f47c8	                          cmova rcx, rax	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dced	      0xe99efaffff	                           jmp 0x400d790	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dcf2	    0x4881fffeffff	                     cmp rdi, 0x7ffffffe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dcf9	     0xf84e2010000	                            je 0x400dee1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dcff	    0x4881ffffffff	                     cmp rdi, 0x7fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd06	     0xf8492010000	                            je 0x400de9e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd0c	    0x4881fffdffff	                     cmp rdi, 0x7ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd13	            0x7563	                           jne 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd15	      0xb900000000	                              mov ecx, 0	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd1a	    0x660f1f440000	                    nop word [rax + rax]	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd20	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_66
0x400dd25	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_66
0x400dd28	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_66
0x400dd2a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_66
0x400dd2f	      0xe800000000	                          call 0x400dd34	        97	stdio2.h	CALL_66
0x400dd34	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1779	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1
0x400dd39	      0xbf00000000	                              mov edi, 0	       331	elf.c	FUNCTION_17	IF_1
0x400dd3e	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x400dd40	     0xf856a010000	                           jne 0x400deb0	       330	elf.c	FUNCTION_17	IF_1
0x400dd46	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_66
0x400dd49	      0xe800000000	                          call 0x400dd4e	        97	stdio2.h	CALL_66
0x400dd4e	      0xe978faffff	                           jmp 0x400d7cb	        97	stdio2.h	CALL_66
0x400dd53	    0x4881fffafeff	                     cmp rdi, 0x6ffffefa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd5a	     0xf8477010000	                            je 0x400ded7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd60	     0xf871a010000	                            ja 0x400de80	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd66	    0x4881fff5feff	                     cmp rdi, 0x6ffffef5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd6d	      0xb900000000	                              mov ecx, 0	      1767	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd72	     0xf8418faffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dd78	    0x498b86d00100	           mov rax, qword [r14 + 0x1d0] 	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400dd7f	      0xb900000000	                              mov ecx, 0	      1686	elf.c	FUNCTION_33	IF_4	FOR_2
0x400dd84	          0x4885c0	                           test rax, rax	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400dd87	            0x7405	                            je 0x400dd8e	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400dd89	            0xffd0	                                call rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400dd8b	          0x4889c1	                            mov rcx, rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400dd8e	          0x803900	                       cmp byte [rcx], 0	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_19
0x400dd91	     0xf85f9f9ffff	                           jne 0x400d790	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_19
0x400dd97	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	        33	stdio2.h	FUNCTION_216	CALL_1
0x400dd9c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        33	stdio2.h	FUNCTION_216	CALL_1
0x400dda1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_216	CALL_1
0x400dda6	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_216	CALL_1
0x400ddab	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_216	CALL_1
0x400ddb0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_216	CALL_1
0x400ddb2	      0xe800000000	                          call 0x400ddb7	        33	stdio2.h	FUNCTION_216	CALL_1
0x400ddb7	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400ddbc	      0xe9cff9ffff	                           jmp 0x400d790	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400ddc1	        0x4883ff0f	                            cmp rdi, 0xf	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddc5	     0xf84c9000000	                            je 0x400de94	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddcb	        0x4883ff10	                           cmp rdi, 0x10	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddcf	      0xb900000000	                              mov ecx, 0	      1725	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddd4	     0xf84b6f9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddda	            0xeb9c	                           jmp 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dddc	         0xf1f4000	                         nop dword [rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dde0	    0x4881fffdfeff	                     cmp rdi, 0x6ffffefd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dde7	      0xb900000000	                              mov ecx, 0	      1753	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddec	     0xf849ef9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddf2	    0x4881fffefeff	                     cmp rdi, 0x6ffffefe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddf9	      0xb900000000	                              mov ecx, 0	      1754	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ddfe	     0xf848cf9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de04	      0xe96fffffff	                           jmp 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de09	     0xf1f80000000	                         nop dword [rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de10	        0x4883ff08	                              cmp rdi, 8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de14	      0xb900000000	                              mov ecx, 0	      1717	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de19	     0xf8471f9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de1f	        0x4883ff09	                              cmp rdi, 9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de23	      0xb900000000	                              mov ecx, 0	      1718	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de28	     0xf8462f9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de2e	      0xe945ffffff	                           jmp 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de33	       0xf1f440000	                   nop dword [rax + rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de38	        0x4883ff1e	                           cmp rdi, 0x1e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de3c	      0xb900000000	                              mov ecx, 0	      1739	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de41	     0xf8449f9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de47	        0x4883ff20	                           cmp rdi, 0x20	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de4b	      0xb900000000	                              mov ecx, 0	      1740	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de50	     0xf843af9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de56	      0xe91dffffff	                           jmp 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de5b	       0xf1f440000	                   nop dword [rax + rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de60	        0x4883ff01	                              cmp rdi, 1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de64	            0x7424	                            je 0x400de8a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de66	        0x4883ff02	                              cmp rdi, 2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de6a	      0xb900000000	                              mov ecx, 0	      1711	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de6f	     0xf841bf9ffff	                            je 0x400d790	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de75	      0xe9fefeffff	                           jmp 0x400dd78	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de7a	    0x660f1f440000	                    nop word [rax + rax]	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de80	      0xb900000000	                              mov ecx, 0	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de85	      0xe996feffff	                           jmp 0x400dd20	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de8a	      0xb900000000	                              mov ecx, 0	      1710	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de8f	      0xe98cfeffff	                           jmp 0x400dd20	      1710	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de94	      0xb900000000	                              mov ecx, 0	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de99	      0xe982feffff	                           jmp 0x400dd20	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400de9e	      0xb900000000	                              mov ecx, 0	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dea3	      0xe978feffff	                           jmp 0x400dd20	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dea8	     0xf1f84000000	                   nop dword [rax + rax]	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400deb0	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400deb4	          0x4889ef	                            mov rdi, rbp	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400deb7	      0xe88443ffff	call sym.bfd_elf_string_from_elf_section.part.20	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400debc	          0x4885c0	                           test rax, rax	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400debf	          0x4889c7	                            mov rdi, rax	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400dec2	     0xf857efeffff	                           jne 0x400dd46	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400dec8	      0xe9b6f7ffff	                           jmp 0x400d683	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400decd	      0xb900000000	                              mov ecx, 0	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ded2	      0xe9b9f8ffff	                           jmp 0x400d790	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ded7	      0xb900000000	                              mov ecx, 0	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dedc	      0xe93ffeffff	                           jmp 0x400dd20	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dee1	      0xb900000000	                              mov ecx, 0	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400dee6	      0xe9a5f8ffff	                           jmp 0x400d790	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400deeb	      0xb900000000	                              mov ecx, 0	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400def0	      0xe99bf8ffff	                           jmp 0x400d790	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400def5	      0xb900000000	                              mov ecx, 0	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400defa	      0xe991f8ffff	                           jmp 0x400d790	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400deff	      0xb900000000	                              mov ecx, 0	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df04	      0xe987f8ffff	                           jmp 0x400d790	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df09	      0xb900000000	                              mov ecx, 0	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df0e	      0xe97df8ffff	                           jmp 0x400d790	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df13	      0xb900000000	                              mov ecx, 0	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df18	      0xe973f8ffff	                           jmp 0x400d790	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df1d	      0xb900000000	                              mov ecx, 0	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df22	      0xe969f8ffff	                           jmp 0x400d790	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df27	      0xb900000000	                              mov ecx, 0	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df2c	      0xe95ff8ffff	                           jmp 0x400d790	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df31	      0xb900000000	                              mov ecx, 0	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df36	      0xe955f8ffff	                           jmp 0x400d790	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df3b	      0xb900000000	                              mov ecx, 0	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df40	      0xe94bf8ffff	                           jmp 0x400d790	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df45	      0xb900000000	                              mov ecx, 0	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df4a	      0xe9d1fdffff	                           jmp 0x400dd20	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df4f	      0xb900000000	                              mov ecx, 0	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df54	      0xe937f8ffff	                           jmp 0x400d790	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df59	      0xb900000000	                              mov ecx, 0	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df5e	      0xe92df8ffff	                           jmp 0x400d790	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df63	      0xb900000000	                              mov ecx, 0	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df68	      0xe9b3fdffff	                           jmp 0x400dd20	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df6d	      0xb900000000	                              mov ecx, 0	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df72	      0xe9a9fdffff	                           jmp 0x400dd20	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400df77	          0x4c89e7	                            mov rdi, r12	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400df7a	      0xe929f9ffff	                           jmp 0x400d8a8	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400df7f	      0xe800000000	                          call 0x400df84	      1849	elf.c	FUNCTION_33
_bfd_elf_is_local_label_name	SWITCH,0:CALL,2:IF,7:functions,0:ELSE,0:DO,0:WHILE,0:FOR,1	60
0x400dfc0	           0xfb616	                   movzx edx, byte [rsi]	      8650	elf.c	FUNCTION_100	IF_1
0x400dfc3	          0x80fa2e	                            cmp dl, 0x2e	      8650	elf.c	FUNCTION_100	IF_1
0x400dfc6	            0x7478	                            je 0x400e040	      8650	elf.c	FUNCTION_100	IF_1
0x400dfc8	            0x31c0	                            xor eax, eax	      8708	elf.c	FUNCTION_100
0x400dfca	          0x80fa5f	                            cmp dl, 0x5f	      8664	elf.c	FUNCTION_100	IF_3
0x400dfcd	            0x7461	                            je 0x400e030	      8664	elf.c	FUNCTION_100	IF_3
0x400dfcf	          0x80fa4c	                            cmp dl, 0x4c	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400dfd2	            0x7562	                           jne 0x400e036	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400dfd4	         0xfb65601	               movzx edx, byte [rsi + 1]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400dfd8	    0xf68412000000	                test byte [rdx + rdx], 4	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400dfe0	            0x7454	                            je 0x400e036	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400dfe2	         0xfb65602	               movzx edx, byte [rsi + 2]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400dfe6	        0x488d7e02	                      lea rdi, [rsi + 2]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400dfea	            0x84d2	                             test dl, dl	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400dfec	            0x7448	                            je 0x400e036	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400dfee	          0x4889f9	                            mov rcx, rdi	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400dff1	            0xeb1a	                           jmp 0x400e00d	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400dff3	       0xf1f440000	                   nop dword [rax + rax]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400dff8	    0xf68412000000	                test byte [rdx + rdx], 4	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x400e000	            0x746e	                            je 0x400e070	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x400e002	        0x4883c101	                              add rcx, 1	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400e006	           0xfb611	                   movzx edx, byte [rcx]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400e009	            0x84d2	                             test dl, dl	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400e00b	            0x746b	                            je 0x400e078	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400e00d	          0x8d72ff	                      lea esi, [rdx - 1]	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400e010	        0x4080fe01	                              cmp sil, 1	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400e014	            0x77e2	                            ja 0x400dff8	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400e016	          0x80fa01	                               cmp dl, 1	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400e019	      0xb801000000	                              mov eax, 1	      8651	elf.c	FUNCTION_100	IF_1
0x400e01e	            0x75d8	                           jne 0x400dff8	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400e020	          0x4839cf	                            cmp rdi, rcx	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400e023	            0x75d3	                           jne 0x400dff8	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400e025	            0xf3c3	                                     ret	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400e027	    0x660f1f840000	                    nop word [rax + rax]	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400e030	        0x807e012e	                cmp byte [rsi + 1], 0x2e	      8664	elf.c	FUNCTION_100	IF_3
0x400e034	            0x7422	                            je 0x400e058	      8664	elf.c	FUNCTION_100	IF_3
0x400e036	            0xf3c3	                                     ret	      8709	elf.c	FUNCTION_100
0x400e038	     0xf1f84000000	                   nop dword [rax + rax]	      8709	elf.c	FUNCTION_100
0x400e040	         0xfb64601	               movzx eax, byte [rsi + 1]	      8650	elf.c	FUNCTION_100	IF_1
0x400e044	            0x3c4c	                            cmp al, 0x4c	      8650	elf.c	FUNCTION_100	IF_1
0x400e046	            0x7438	                            je 0x400e080	      8650	elf.c	FUNCTION_100	IF_1
0x400e048	            0x3c2e	                            cmp al, 0x2e	      8651	elf.c	FUNCTION_100	IF_1
0x400e04a	           0xf94c0	                                 sete al	      8651	elf.c	FUNCTION_100	IF_1
0x400e04d	           0xfb6c0	                           movzx eax, al	      8651	elf.c	FUNCTION_100	IF_1
0x400e050	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
0x400e051	     0xf1f80000000	                         nop dword [rax]	      8651	elf.c	FUNCTION_100	IF_1
0x400e058	        0x807e024c	                cmp byte [rsi + 2], 0x4c	      8664	elf.c	FUNCTION_100	IF_3
0x400e05c	            0x75d8	                           jne 0x400e036	      8664	elf.c	FUNCTION_100	IF_3
0x400e05e	            0x31c0	                            xor eax, eax	      8651	elf.c	FUNCTION_100	IF_1
0x400e060	        0x807e035f	                cmp byte [rsi + 3], 0x5f	      8651	elf.c	FUNCTION_100	IF_1
0x400e064	           0xf94c0	                                 sete al	      8651	elf.c	FUNCTION_100	IF_1
0x400e067	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
0x400e068	     0xf1f84000000	                   nop dword [rax + rax]	      8651	elf.c	FUNCTION_100	IF_1
0x400e070	            0x31c0	                            xor eax, eax	      8708	elf.c	FUNCTION_100
0x400e072	              0xc3	                                     ret	      8709	elf.c	FUNCTION_100
0x400e073	       0xf1f440000	                   nop dword [rax + rax]	      8709	elf.c	FUNCTION_100
0x400e078	            0xf3c3	                                     ret	      8709	elf.c	FUNCTION_100
0x400e07a	    0x660f1f440000	                    nop word [rax + rax]	      8709	elf.c	FUNCTION_100
0x400e080	      0xb801000000	                              mov eax, 1	      8651	elf.c	FUNCTION_100	IF_1
0x400e085	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
elfcore_grok_freebsd_note	SWITCH,1:CALL,13:IF,5:functions,0:ELSE,2:DO,0:WHILE,0:FOR,0	269
0x400eec0	            0x4157	                                push r15	     10069	elf.c	FUNCTION_151
0x400eec2	            0x4156	                                push r14	     10069	elf.c	FUNCTION_151
0x400eec4	            0x4155	                                push r13	     10069	elf.c	FUNCTION_151
0x400eec6	            0x4154	                                push r12	     10069	elf.c	FUNCTION_151
0x400eec8	              0x55	                                push rbp	     10069	elf.c	FUNCTION_151
0x400eec9	              0x53	                                push rbx	     10069	elf.c	FUNCTION_151
0x400eeca	        0x4883ec08	                              sub rsp, 8	     10069	elf.c	FUNCTION_151
0x400eece	        0x488b4610	            mov rax, qword [rsi + 0x10] 	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eed2	        0x488b5708	                mov rdx, qword [rdi + 8]	     10070	elf.c	FUNCTION_151	CALL_1
0x400eed6	        0x4883f809	                              cmp rax, 9	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eeda	     0xf84a8010000	                            je 0x400f088	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eee0	          0x4889f3	                            mov rbx, rsi	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eee3	          0x4889fd	                            mov rbp, rdi	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eee6	            0x7758	                            ja 0x400ef40	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eee8	        0x4883f803	                              cmp rax, 3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eeec	     0xf844e010000	                            je 0x400f040	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eef2	     0xf87d8000000	                            ja 0x400efd0	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eef8	        0x4883f801	                              cmp rax, 1	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400eefc	     0xf84d6010000	                            je 0x400f0d8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef02	        0x4883f802	                              cmp rax, 2	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef06	     0xf851e010000	                           jne 0x400f02a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef0c	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400ef10	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400ef14	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400ef19	     0xf1f80000000	                         nop dword [rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400ef20	          0x4889ef	                            mov rdi, rbp	      9192	elf.c	FUNCTION_116	CALL_1
0x400ef23	        0x4883c408	                              add rsp, 8	     10134	elf.c	FUNCTION_151
0x400ef27	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x400ef28	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x400ef29	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x400ef2b	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x400ef2d	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x400ef2f	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x400ef31	      0xe98af7ffff	 jmp sym._bfd_elfcore_make_pseudosection	      9192	elf.c	FUNCTION_116	CALL_1
0x400ef36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400ef40	        0x4883f811	                           cmp rax, 0x11	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef44	     0xf8476010000	                            je 0x400f0c0	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef4a	     0xf87a8000000	                            ja 0x400eff8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef50	        0x4883f80a	                            cmp rax, 0xa	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef54	     0xf8416010000	                            je 0x400f070	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef5a	        0x4883f810	                           cmp rax, 0x10	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef5e	     0xf85c6000000	                           jne 0x400f02a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400ef64	      0xba00010000	                          mov edx, 0x100	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400ef69	      0xbe00000000	                              mov esi, 0	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400ef6e	      0xe800000000	                          call 0x400ef73	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400ef73	          0x4885c0	                           test rax, rax	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x400ef76	          0x4989c4	                            mov r12, rax	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400ef79	     0xf84dc000000	                            je 0x400f05b	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x400ef7f	        0x488b4308	                mov rax, qword [rbx + 8]	     10111	elf.c	FUNCTION_151	SWITCH_1
0x400ef83	          0x4889ef	                            mov rdi, rbp	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400ef86	        0x4883e804	                              sub rax, 4	     10111	elf.c	FUNCTION_151	SWITCH_1
0x400ef8a	      0x4989442438	             mov qword [r12 + 0x38], rax	     10111	elf.c	FUNCTION_151	SWITCH_1
0x400ef8f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10112	elf.c	FUNCTION_151	SWITCH_1
0x400ef93	        0x4883c004	                              add rax, 4	     10112	elf.c	FUNCTION_151	SWITCH_1
0x400ef97	    0x498984249000	             mov qword [r12 + 0x90], rax	     10112	elf.c	FUNCTION_151	SWITCH_1
0x400ef9f	      0xe800000000	                          call 0x400efa4	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400efa4	          0x8d501f	                   lea edx, [rax + 0x1f]	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400efa7	            0x85c0	                           test eax, eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400efa9	           0xf48c2	                          cmovs eax, edx	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400efac	          0xc1f805	                              sar eax, 5	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400efaf	          0x83c001	                              add eax, 1	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400efb2	      0x4189442470	             mov dword [r12 + 0x70], eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400efb7	      0xb801000000	                              mov eax, 1	     10115	elf.c	FUNCTION_151	SWITCH_1
0x400efbc	        0x4883c408	                              add rsp, 8	     10134	elf.c	FUNCTION_151
0x400efc0	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x400efc1	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x400efc2	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x400efc4	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x400efc6	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x400efc8	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x400efca	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
0x400efcb	       0xf1f440000	                   nop dword [rax + rax]	     10134	elf.c	FUNCTION_151
0x400efd0	        0x4883f807	                              cmp rax, 7	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400efd4	     0xf84c6000000	                            je 0x400f0a0	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400efda	        0x4883f808	                              cmp rax, 8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400efde	            0x754a	                           jne 0x400f02a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400efe0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400efe4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400efe8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400efed	      0xe92effffff	                           jmp 0x400ef20	      9192	elf.c	FUNCTION_116	CALL_1
0x400eff2	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400eff8	    0x483d02020000	                          cmp rax, 0x202	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400effe	            0x7420	                            je 0x400f020	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400f000	    0x483d00040000	                          cmp rax, 0x400	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400f006	            0x7522	                           jne 0x400f02a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400f008	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f00c	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f010	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f015	      0xe906ffffff	                           jmp 0x400ef20	      9192	elf.c	FUNCTION_116	CALL_1
0x400f01a	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f020	        0x48833e08	                      cmp qword [rsi], 8	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x400f024	     0xf8486020000	                            je 0x400f2b0	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x400f02a	        0x4883c408	                              add rsp, 8	     10134	elf.c	FUNCTION_151
0x400f02e	      0xb801000000	                              mov eax, 1	     10132	elf.c	FUNCTION_151	SWITCH_1
0x400f033	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x400f034	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x400f035	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x400f037	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x400f039	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x400f03b	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x400f03d	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
0x400f03e	            0x6690	                                     nop	     10134	elf.c	FUNCTION_151
0x400f040	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400f047	         0xfb64004	               movzx eax, byte [rax + 4]	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400f04b	            0x3c01	                               cmp al, 1	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400f04d	     0xf8475020000	                            je 0x400f2c8	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400f053	            0x3c02	                               cmp al, 2	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400f055	     0xf8475010000	                            je 0x400f1d0	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400f05b	            0x31c0	                            xor eax, eax	      9954	elf.c	FUNCTION_149	SWITCH_1
0x400f05d	        0x4883c408	                              add rsp, 8	     10134	elf.c	FUNCTION_151
0x400f061	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x400f062	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x400f063	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x400f065	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x400f067	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x400f069	            0x415f	                                 pop r15	     10134	elf.c	FUNCTION_151
0x400f06b	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
0x400f06c	         0xf1f4000	                         nop dword [rax]	     10134	elf.c	FUNCTION_151
0x400f070	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f074	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f078	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f07d	      0xe99efeffff	                           jmp 0x400ef20	      9192	elf.c	FUNCTION_116	CALL_1
0x400f082	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f088	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f08c	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f090	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f095	      0xe989feffff	                           jmp 0x400ef23	      9192	elf.c	FUNCTION_116	CALL_1
0x400f09a	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0a0	        0x48833e08	                      cmp qword [rsi], 8	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x400f0a4	     0xf8580ffffff	                           jne 0x400f02a	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x400f0aa	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0ae	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0b2	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0b7	      0xe964feffff	                           jmp 0x400ef20	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0bc	         0xf1f4000	                         nop dword [rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0c0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0c4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0c8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0cd	      0xe94efeffff	                           jmp 0x400ef20	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0d2	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f0d8	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400f0df	    0x488b80180200	           mov rax, qword [rax + 0x218] 	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400f0e6	          0x4885c0	                           test rax, rax	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400f0e9	            0x740a	                            je 0x400f0f5	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400f0eb	            0xffd0	                                call rax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400f0ed	            0x85c0	                           test eax, eax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400f0ef	     0xf8535ffffff	                           jne 0x400f02a	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400f0f5	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400f0fc	         0xfb64004	               movzx eax, byte [rax + 4]	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400f100	            0x3c01	                               cmp al, 1	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400f102	     0xf84d8010000	                            je 0x400f2e0	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400f108	            0x3c02	                               cmp al, 2	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400f10a	     0xf854bffffff	                           jne 0x400f05b	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400f110	      0xb830000000	                           mov eax, 0x30	     10013	elf.c	FUNCTION_150	SWITCH_1
0x400f115	    0x41bc10000000	                          mov r12d, 0x10	     10012	elf.c	FUNCTION_150	SWITCH_1
0x400f11b	        0x48394308	                cmp qword [rbx + 8], rax	     10020	elf.c	FUNCTION_150	IF_1
0x400f11f	     0xf8236ffffff	                            jb 0x400f05b	     10020	elf.c	FUNCTION_150	IF_1
0x400f125	        0x488b4508	                mov rax, qword [rbp + 8]	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x400f129	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x400f12d	    0xff9080000000	                 call qword [rax + 0x80]	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x400f133	        0x4883f801	                              cmp rax, 1	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x400f137	     0xf851effffff	                           jne 0x400f05b	     10024	elf.c	FUNCTION_150	IF_2	CALL_2
0x400f13d	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10029	elf.c	FUNCTION_150	IF_3	CALL_3
0x400f144	          0x4c89e7	                            mov rdi, r12	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x400f147	        0x80780401	                   cmp byte [rax + 4], 1	     10029	elf.c	FUNCTION_150	IF_3	CALL_3
0x400f14b	     0xf84c8010000	                            je 0x400f319	     10029	elf.c	FUNCTION_150	IF_3	CALL_3
0x400f151	        0x488b4508	                mov rax, qword [rbp + 8]	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x400f155	        0x48037b20	             add rdi, qword [rbx + 0x20]	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x400f159	        0x4983c410	                           add r12, 0x10	     10037	elf.c	FUNCTION_150	ELSE_1
0x400f15d	          0xff5068	                 call qword [rax + 0x68]	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x400f160	          0x4989c5	                            mov r13, rax	     10036	elf.c	FUNCTION_150	ELSE_1	CALL_5
0x400f163	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x400f16a	    0x4c8bb0900c00	           mov r14, qword [rax + 0xc90] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x400f171	          0x418b06	                    mov eax, dword [r14]	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x400f174	            0x85c0	                           test eax, eax	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x400f176	     0xf8474010000	                            je 0x400f2f0	     10044	elf.c	FUNCTION_150	IF_4	CALL_6
0x400f17c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10051	elf.c	FUNCTION_150	CALL_10
0x400f180	      0x4a8d7c2008	                lea rdi, [rax + r12 + 8]	     10051	elf.c	FUNCTION_150	CALL_10
0x400f185	        0x488b4508	                mov rax, qword [rbp + 8]	     10051	elf.c	FUNCTION_150	CALL_10
0x400f189	    0xff9080000000	                 call qword [rax + 0x80]	     10051	elf.c	FUNCTION_150	CALL_10
0x400f18f	        0x41894608	                mov dword [r14 + 8], eax	     10051	elf.c	FUNCTION_150	CALL_10
0x400f193	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	     10055	elf.c	FUNCTION_150	IF_5	CALL_11
0x400f19a	      0x498d44240c	                    lea rax, [r12 + 0xc]	     10052	elf.c	FUNCTION_150
0x400f19f	        0x4983c410	                           add r12, 0x10	     10052	elf.c	FUNCTION_150
0x400f1a3	        0x807a0402	                   cmp byte [rdx + 4], 2	     10052	elf.c	FUNCTION_150
0x400f1a7	        0x488b5308	                mov rdx, qword [rbx + 8]	     10059	elf.c	FUNCTION_150	IF_6
0x400f1ab	        0x490f44c4	                          cmove rax, r12	     10052	elf.c	FUNCTION_150
0x400f1af	          0x4829c2	                            sub rdx, rax	     10059	elf.c	FUNCTION_150	IF_6
0x400f1b2	          0x4c39ea	                            cmp rdx, r13	     10059	elf.c	FUNCTION_150	IF_6
0x400f1b5	     0xf82a0feffff	                            jb 0x400f05b	     10059	elf.c	FUNCTION_150	IF_6
0x400f1bb	        0x48034328	             add rax, qword [rbx + 0x28]	     10063	elf.c	FUNCTION_150	CALL_12
0x400f1bf	          0x4c89ea	                            mov rdx, r13	     10063	elf.c	FUNCTION_150	CALL_12
0x400f1c2	      0xbe00000000	                              mov esi, 0	     10063	elf.c	FUNCTION_150	CALL_12
0x400f1c7	          0x4889c1	                            mov rcx, rax	     10063	elf.c	FUNCTION_150	CALL_12
0x400f1ca	      0xe951fdffff	                           jmp 0x400ef20	     10063	elf.c	FUNCTION_150	CALL_12
0x400f1cf	              0x90	                                     nop	     10063	elf.c	FUNCTION_150	CALL_12
0x400f1d0	      0x48837e0877	               cmp qword [rsi + 8], 0x77	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x400f1d5	     0xf8680feffff	                           jbe 0x400f05b	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x400f1db	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x400f1df	    0xff9280000000	                 call qword [rdx + 0x80]	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x400f1e5	        0x4883f801	                              cmp rax, 1	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x400f1e9	     0xf856cfeffff	                           jne 0x400f05b	      9958	elf.c	FUNCTION_149	IF_3	CALL_2
0x400f1ef	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f1f6	          0x4531f6	                          xor r14d, r14d	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f1f9	          0x4889ef	                            mov rdi, rbp	      9974	elf.c	FUNCTION_149	CALL_5
0x400f1fc	        0x80780401	                   cmp byte [rax + 4], 1	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f200	    0x4c8bb8900c00	           mov r15, qword [rax + 0xc90] 	      9973	elf.c	FUNCTION_149	CALL_4
0x400f207	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9974	elf.c	FUNCTION_149	CALL_5
0x400f20b	        0x410f95c4	                              setne r12b	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f20f	           0xf95c2	                                setne dl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f212	        0x410f95c6	                              setne r14b	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f216	           0xfb6d2	                           movzx edx, dl	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f219	        0x450fb6e4	                        movzx r12d, r12b	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f21d	        0x410f95c5	                              setne r13b	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f221	      0x488d74d008	              lea rsi, [rax + rdx*8 + 8]	      9974	elf.c	FUNCTION_149	CALL_5
0x400f226	    0x4e8d24e51900	                 lea r12, [r12*8 + 0x19]	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f22e	      0xba11000000	                           mov edx, 0x11	      9974	elf.c	FUNCTION_149	CALL_5
0x400f233	    0x4e8d34f57000	                 lea r14, [r14*8 + 0x70]	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f23b	        0x450fb6ed	                        movzx r13d, r13b	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f23f	      0xe800000000	                          call 0x400f244	      9974	elf.c	FUNCTION_149	CALL_5
0x400f244	          0x4c89e6	                            mov rsi, r12	      9979	elf.c	FUNCTION_149	CALL_7
0x400f247	        0x49894710	             mov qword [r15 + 0x10], rax	      9974	elf.c	FUNCTION_149	CALL_5
0x400f24b	        0x48037320	             add rsi, qword [rbx + 0x20]	      9979	elf.c	FUNCTION_149	CALL_7
0x400f24f	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9978	elf.c	FUNCTION_149	CALL_6
0x400f256	      0xba51000000	                           mov edx, 0x51	      9979	elf.c	FUNCTION_149	CALL_7
0x400f25b	          0x4889ef	                            mov rdi, rbp	      9979	elf.c	FUNCTION_149	CALL_7
0x400f25e	    0x4e8d2ced6c00	                 lea r13, [r13*8 + 0x6c]	      9964	elf.c	FUNCTION_149	IF_4	CALL_3
0x400f266	    0x4c8bb8900c00	           mov r15, qword [rax + 0xc90] 	      9978	elf.c	FUNCTION_149	CALL_6
0x400f26d	      0xe800000000	                          call 0x400f272	      9979	elf.c	FUNCTION_149	CALL_7
0x400f272	        0x4c397308	                cmp qword [rbx + 8], r14	      9986	elf.c	FUNCTION_149	IF_5
0x400f276	        0x49894718	             mov qword [r15 + 0x18], rax	      9979	elf.c	FUNCTION_149	CALL_7
0x400f27a	     0xf82aafdffff	                            jb 0x400f02a	      9986	elf.c	FUNCTION_149	IF_5
0x400f280	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9989	elf.c	FUNCTION_149	CALL_8
0x400f287	          0x4c89ef	                            mov rdi, r13	      9990	elf.c	FUNCTION_149	CALL_9
0x400f28a	        0x48037b20	             add rdi, qword [rbx + 0x20]	      9990	elf.c	FUNCTION_149	CALL_9
0x400f28e	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	      9989	elf.c	FUNCTION_149	CALL_8
0x400f295	        0x488b4508	                mov rax, qword [rbp + 8]	      9990	elf.c	FUNCTION_149	CALL_9
0x400f299	    0xff9080000000	                 call qword [rax + 0x80]	      9990	elf.c	FUNCTION_149	CALL_9
0x400f29f	      0x4189442404	                mov dword [r12 + 4], eax	      9990	elf.c	FUNCTION_149	CALL_9
0x400f2a4	      0xb801000000	                              mov eax, 1	      9992	elf.c	FUNCTION_149
0x400f2a9	      0xe90efdffff	                           jmp 0x400efbc	      9992	elf.c	FUNCTION_149
0x400f2ae	            0x6690	                                     nop	      9992	elf.c	FUNCTION_149
0x400f2b0	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400f2b4	        0x488b5608	                mov rdx, qword [rsi + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f2b8	      0xbe00000000	                              mov esi, 0	      9192	elf.c	FUNCTION_116	CALL_1
0x400f2bd	      0xe95efcffff	                           jmp 0x400ef20	      9192	elf.c	FUNCTION_116	CALL_1
0x400f2c2	    0x660f1f440000	                    nop word [rax + rax]	      9192	elf.c	FUNCTION_116	CALL_1
0x400f2c8	      0x48837e086b	               cmp qword [rsi + 8], 0x6b	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x400f2cd	     0xf8708ffffff	                            ja 0x400f1db	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x400f2d3	            0x31c0	                            xor eax, eax	      9954	elf.c	FUNCTION_149	SWITCH_1
0x400f2d5	      0xe983fdffff	                           jmp 0x400f05d	      9954	elf.c	FUNCTION_149	SWITCH_1
0x400f2da	    0x660f1f440000	                    nop word [rax + rax]	      9954	elf.c	FUNCTION_149	SWITCH_1
0x400f2e0	      0xb81c000000	                           mov eax, 0x1c	     10008	elf.c	FUNCTION_150	SWITCH_1
0x400f2e5	    0x41bc08000000	                             mov r12d, 8	     10007	elf.c	FUNCTION_150	SWITCH_1
0x400f2eb	      0xe92bfeffff	                           jmp 0x400f11b	     10007	elf.c	FUNCTION_150	SWITCH_1
0x400f2f0	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10046	elf.c	FUNCTION_150	CALL_8
0x400f2f4	      0x4a8d7c2004	                lea rdi, [rax + r12 + 4]	     10046	elf.c	FUNCTION_150	CALL_8
0x400f2f9	        0x488b4508	                mov rax, qword [rbp + 8]	     10046	elf.c	FUNCTION_150	CALL_8
0x400f2fd	    0xff9080000000	                 call qword [rax + 0x80]	     10046	elf.c	FUNCTION_150	CALL_8
0x400f303	          0x418906	                    mov dword [r14], eax	     10046	elf.c	FUNCTION_150	CALL_8
0x400f306	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10046	elf.c	FUNCTION_150	CALL_8
0x400f30d	    0x4c8bb0900c00	           mov r14, qword [rax + 0xc90] 	     10046	elf.c	FUNCTION_150	CALL_8
0x400f314	      0xe963feffff	                           jmp 0x400f17c	     10046	elf.c	FUNCTION_150	CALL_8
0x400f319	        0x488b4508	                mov rax, qword [rbp + 8]	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x400f31d	        0x48037b20	             add rdi, qword [rbx + 0x20]	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x400f321	        0x4983c408	                              add r12, 8	     10032	elf.c	FUNCTION_150	IF_3
0x400f325	    0xff9080000000	                 call qword [rax + 0x80]	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x400f32b	          0x4989c5	                            mov r13, rax	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
0x400f32e	      0xe930feffff	                           jmp 0x400f163	     10031	elf.c	FUNCTION_150	IF_3	CALL_4
elf_sort_sections	SWITCH,0:CALL,0:IF,10:functions,0:ELSE,4:DO,0:WHILE,0:FOR,0	55
0x4000100	          0x488b0f	                    mov rcx, qword [rdi]	      5114	elf.c	FUNCTION_66
0x4000103	          0x488b16	                    mov rdx, qword [rsi]	      5115	elf.c	FUNCTION_66
0x4000106	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      5120	elf.c	FUNCTION_66	IF_1
0x400010a	        0x48394130	            cmp qword [rcx + 0x30], rax 	      5120	elf.c	FUNCTION_66	IF_1
0x400010e	     0xf829c000000	                            jb 0x40001b0	      5120	elf.c	FUNCTION_66	IF_1
0x4000114	      0xb801000000	                              mov eax, 1	      5123	elf.c	FUNCTION_66	ELSE_1	IF_2
0x4000119	            0x774c	                            ja 0x4000167	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x400011b	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      5127	elf.c	FUNCTION_66	IF_3
0x400011f	        0x48397128	            cmp qword [rcx + 0x28], rsi 	      5127	elf.c	FUNCTION_66	IF_3
0x4000123	     0xf8287000000	                            jb 0x40001b0	      5127	elf.c	FUNCTION_66	IF_3
0x4000129	            0x773c	                            ja 0x4000167	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400012b	          0x8b7920	            mov edi, dword [rcx + 0x20] 	      5136	elf.c	FUNCTION_66	IF_5
0x400012e	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x4000131	    0xf7c702040000	                         test edi, 0x402	      5136	elf.c	FUNCTION_66	IF_5
0x4000137	            0x7437	                            je 0x4000170	      5136	elf.c	FUNCTION_66	IF_5
0x4000139	    0xf7c602040000	                         test esi, 0x402	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400013f	            0x746f	                            je 0x40001b0	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x4000141	          0x83e702	                              and edi, 2	      5156	elf.c	FUNCTION_66
0x4000144	            0x744a	                            je 0x4000190	      5156	elf.c	FUNCTION_66
0x4000146	          0x83e602	                              and esi, 2	      5157	elf.c	FUNCTION_66
0x4000149	        0x488b7938	            mov rdi, qword [rcx + 0x38] 	      5156	elf.c	FUNCTION_66
0x400014d	            0x7471	                            je 0x40001c0	      5157	elf.c	FUNCTION_66
0x400014f	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      5157	elf.c	FUNCTION_66
0x4000153	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x4000158	          0x4839f7	                            cmp rdi, rsi	      5159	elf.c	FUNCTION_66	IF_9
0x400015b	            0x7267	                            jb 0x40001c4	      5159	elf.c	FUNCTION_66	IF_9
0x400015d	          0x4839f7	                            cmp rdi, rsi	      5161	elf.c	FUNCTION_66	IF_10
0x4000160	      0xb801000000	                              mov eax, 1	      5123	elf.c	FUNCTION_66	ELSE_1	IF_2
0x4000165	            0x763a	                           jbe 0x40001a1	      5161	elf.c	FUNCTION_66	IF_10
0x4000167	            0xf3c3	                                     ret	      5165	elf.c	FUNCTION_66
0x4000169	     0xf1f80000000	                         nop dword [rax]	      5165	elf.c	FUNCTION_66
0x4000170	    0xf7c602040000	                         test esi, 0x402	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x4000176	            0x75ef	                           jne 0x4000167	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x4000178	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400017e	    0x448b82d80000	            mov r8d, dword [rdx + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x4000185	          0x4439c0	                            cmp eax, r8d	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x4000188	            0x74b7	                            je 0x4000141	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400018a	          0x4429c0	                            sub eax, r8d	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400018d	              0xc3	                                     ret	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400018e	            0x6690	                                     nop	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x4000190	          0x83e602	                              and esi, 2	      5157	elf.c	FUNCTION_66
0x4000193	            0x740c	                            je 0x40001a1	      5157	elf.c	FUNCTION_66
0x4000195	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      5159	elf.c	FUNCTION_66	IF_9
0x400019a	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x400019f	            0x75c6	                           jne 0x4000167	      5159	elf.c	FUNCTION_66	IF_9
0x40001a1	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      5164	elf.c	FUNCTION_66
0x40001a7	    0x2b82d8000000	             sub eax, dword [rdx + 0xd8]	      5164	elf.c	FUNCTION_66
0x40001ad	              0xc3	                                     ret	      5164	elf.c	FUNCTION_66
0x40001ae	            0x6690	                                     nop	      5164	elf.c	FUNCTION_66
0x40001b0	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x40001b5	              0xc3	                                     ret	      5121	elf.c	FUNCTION_66	IF_1
0x40001b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5121	elf.c	FUNCTION_66	IF_1
0x40001c0	            0x31f6	                            xor esi, esi	      5157	elf.c	FUNCTION_66
0x40001c2	            0xeb99	                           jmp 0x400015d	      5157	elf.c	FUNCTION_66
0x40001c4	            0xf3c3	                                     ret	      5157	elf.c	FUNCTION_66
_bfd_elf_reloc_type_class	SWITCH,0:CALL,0:IF,0:functions,0:ELSE,0:DO,0:WHILE,0:FOR,0	2
0x4010f30	            0x31c0	                            xor eax, eax	     11263	elf.c	FUNCTION_195
0x4010f32	              0xc3	                                     ret	     11263	elf.c	FUNCTION_195
elfcore_write_linux_prpsinfo64	SWITCH,0:CALL,5:IF,1:functions,0:ELSE,1:DO,0:WHILE,0:FOR,0	116
0x4010430	            0x4155	                                push r13	     10618	elf.c	FUNCTION_164
0x4010432	            0x4154	                                push r12	     10618	elf.c	FUNCTION_164
0x4010434	          0x4989d5	                            mov r13, rdx	     10618	elf.c	FUNCTION_164
0x4010437	              0x55	                                push rbp	     10618	elf.c	FUNCTION_164
0x4010438	              0x53	                                push rbx	     10618	elf.c	FUNCTION_164
0x4010439	          0x4889fd	                            mov rbp, rdi	     10618	elf.c	FUNCTION_164
0x401043c	          0x4989f4	                            mov r12, rsi	     10618	elf.c	FUNCTION_164
0x401043f	          0x4889cb	                            mov rbx, rcx	     10618	elf.c	FUNCTION_164
0x4010442	    0x4881ec980000	                           sub rsp, 0x98	     10618	elf.c	FUNCTION_164
0x4010449	    0x64488b042528	                mov rax, qword fs:[0x28]	     10618	elf.c	FUNCTION_164
0x4010452	    0x488984248800	             mov qword [rsp + 0x88], rax	     10618	elf.c	FUNCTION_164
0x401045a	            0x31c0	                            xor eax, eax	     10618	elf.c	FUNCTION_164
0x401045c	        0x488b4708	                mov rax, qword [rdi + 8]	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x4010460	      0x488d742408	                      lea rsi, [rsp + 8]	       223	elf-linux-core.h	FUNCTION_236	CALL_5
0x4010465	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x401046c	    0xf6828b030000	          test byte [rdx + 0x38b], 0x20 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x4010473	           0xfb611	                   movzx edx, byte [rcx]	       219	elf-linux-core.h	FUNCTION_236	CALL_1
0x4010476	          0x881424	                      mov byte [rsp], dl	       219	elf-linux-core.h	FUNCTION_236	CALL_1
0x4010479	         0xfb65101	               movzx edx, byte [rcx + 1]	       220	elf-linux-core.h	FUNCTION_236	CALL_2
0x401047d	        0x88542401	                  mov byte [rsp + 1], dl	       220	elf-linux-core.h	FUNCTION_236	CALL_2
0x4010481	         0xfb65102	               movzx edx, byte [rcx + 2]	       221	elf-linux-core.h	FUNCTION_236	CALL_3
0x4010485	        0x88542402	                  mov byte [rsp + 2], dl	       221	elf-linux-core.h	FUNCTION_236	CALL_3
0x4010489	         0xfb65103	               movzx edx, byte [rcx + 3]	       222	elf-linux-core.h	FUNCTION_236	CALL_4
0x401048d	        0x88542403	                  mov byte [rsp + 3], dl	       222	elf-linux-core.h	FUNCTION_236	CALL_4
0x4010491	        0x488b7908	                mov rdi, qword [rcx + 8]	       223	elf-linux-core.h	FUNCTION_236	CALL_5
0x4010495	     0xf85d5000000	                           jne 0x4010570	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x401049b	          0xff5030	                 call qword [rax + 0x30]	       170	elf-linux-core.h	FUNCTION_235	CALL_5
0x401049e	        0x488b4508	                mov rax, qword [rbp + 8]	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x40104a2	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x40104a5	      0x488d742410	                   lea rsi, [rsp + 0x10]	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x40104aa	          0xff5048	                 call qword [rax + 0x48]	       171	elf-linux-core.h	FUNCTION_235	CALL_6
0x40104ad	        0x488b4508	                mov rax, qword [rbp + 8]	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x40104b1	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x40104b4	      0x488d742414	                   lea rsi, [rsp + 0x14]	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x40104b9	          0xff5048	                 call qword [rax + 0x48]	       172	elf-linux-core.h	FUNCTION_235	CALL_7
0x40104bc	        0x488b4508	                mov rax, qword [rbp + 8]	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x40104c0	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x40104c4	      0x488d742418	                   lea rsi, [rsp + 0x18]	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x40104c9	          0xff5048	                 call qword [rax + 0x48]	       173	elf-linux-core.h	FUNCTION_235	CALL_8
0x40104cc	        0x488b4508	                mov rax, qword [rbp + 8]	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x40104d0	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x40104d4	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x40104d9	          0xff5048	                 call qword [rax + 0x48]	       174	elf-linux-core.h	FUNCTION_235	CALL_9
0x40104dc	        0x488b4508	                mov rax, qword [rbp + 8]	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x40104e0	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x40104e4	      0x488d742420	                   lea rsi, [rsp + 0x20]	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x40104e9	          0xff5048	                 call qword [rax + 0x48]	       175	elf-linux-core.h	FUNCTION_235	CALL_10
0x40104ec	        0x488b4508	                mov rax, qword [rbp + 8]	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x40104f0	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x40104f4	      0x488d742424	                   lea rsi, [rsp + 0x24]	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x40104f9	          0xff5048	                 call qword [rax + 0x48]	       176	elf-linux-core.h	FUNCTION_235	CALL_11
0x40104fc	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       126	string3.h	FUNCTION_212	CALL_3
0x4010501	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_212	CALL_3
0x4010505	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_212	CALL_3
0x401050a	      0xe800000000	                          call 0x401050f	       126	string3.h	FUNCTION_212	CALL_3
0x401050f	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       126	string3.h	FUNCTION_212	CALL_3
0x4010514	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_212	CALL_3
0x4010518	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_212	CALL_3
0x401051d	      0xe800000000	                          call 0x4010522	       126	string3.h	FUNCTION_212	CALL_3
0x4010522	        0x4883ec08	                              sub rsp, 8	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4010526	      0x6888000000	                               push 0x88	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401052b	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4010530	      0xb900000000	                              mov ecx, 0	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4010535	          0x4c89ea	                            mov rdx, r13	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4010538	    0x41b803000000	                              mov r8d, 3	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401053e	          0x4c89e6	                            mov rsi, r12	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4010541	          0x4889ef	                            mov rdi, rbp	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4010544	      0xe800000000	                          call 0x4010549	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x4010549	              0x5a	                                 pop rdx	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401054a	              0x59	                                 pop rcx	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x401054b	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	     10635	elf.c	FUNCTION_164
0x4010553	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10635	elf.c	FUNCTION_164
0x401055c	     0xf85a3000000	                           jne 0x4010605	     10635	elf.c	FUNCTION_164
0x4010562	    0x4881c4980000	                           add rsp, 0x98	     10635	elf.c	FUNCTION_164
0x4010569	              0x5b	                                 pop rbx	     10635	elf.c	FUNCTION_164
0x401056a	              0x5d	                                 pop rbp	     10635	elf.c	FUNCTION_164
0x401056b	            0x415c	                                 pop r12	     10635	elf.c	FUNCTION_164
0x401056d	            0x415d	                                 pop r13	     10635	elf.c	FUNCTION_164
0x401056f	              0xc3	                                     ret	     10635	elf.c	FUNCTION_164
0x4010570	          0xff5030	                 call qword [rax + 0x30]	       223	elf-linux-core.h	FUNCTION_236	CALL_5
0x4010573	        0x488b4508	                mov rax, qword [rbp + 8]	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x4010577	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x401057a	      0x488d742410	                   lea rsi, [rsp + 0x10]	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x401057f	          0xff5060	                 call qword [rax + 0x60]	       224	elf-linux-core.h	FUNCTION_236	CALL_6
0x4010582	        0x488b4508	                mov rax, qword [rbp + 8]	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x4010586	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x4010589	      0x488d742412	                   lea rsi, [rsp + 0x12]	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x401058e	          0xff5060	                 call qword [rax + 0x60]	       225	elf-linux-core.h	FUNCTION_236	CALL_7
0x4010591	        0x488b4508	                mov rax, qword [rbp + 8]	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x4010595	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x4010599	      0x488d742414	                   lea rsi, [rsp + 0x14]	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x401059e	          0xff5048	                 call qword [rax + 0x48]	       226	elf-linux-core.h	FUNCTION_236	CALL_8
0x40105a1	        0x488b4508	                mov rax, qword [rbp + 8]	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x40105a5	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x40105a9	      0x488d742418	                   lea rsi, [rsp + 0x18]	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x40105ae	          0xff5048	                 call qword [rax + 0x48]	       227	elf-linux-core.h	FUNCTION_236	CALL_9
0x40105b1	        0x488b4508	                mov rax, qword [rbp + 8]	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x40105b5	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x40105b9	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x40105be	          0xff5048	                 call qword [rax + 0x48]	       228	elf-linux-core.h	FUNCTION_236	CALL_10
0x40105c1	        0x488b4508	                mov rax, qword [rbp + 8]	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x40105c5	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x40105c9	      0x488d742420	                   lea rsi, [rsp + 0x20]	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x40105ce	          0xff5048	                 call qword [rax + 0x48]	       229	elf-linux-core.h	FUNCTION_236	CALL_11
0x40105d1	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	       126	string3.h	FUNCTION_212	CALL_3
0x40105d6	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_212	CALL_3
0x40105da	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_212	CALL_3
0x40105df	      0xe800000000	                          call 0x40105e4	       126	string3.h	FUNCTION_212	CALL_3
0x40105e4	      0x488d7c2434	                   lea rdi, [rsp + 0x34]	       126	string3.h	FUNCTION_212	CALL_3
0x40105e9	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_212	CALL_3
0x40105ed	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_212	CALL_3
0x40105f2	      0xe800000000	                          call 0x40105f7	       126	string3.h	FUNCTION_212	CALL_3
0x40105f7	        0x4883ec08	                              sub rsp, 8	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x40105fb	      0x6884000000	                               push 0x84	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4010600	      0xe926ffffff	                           jmp 0x401052b	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x4010605	      0xe800000000	                          call 0x401060a	     10635	elf.c	FUNCTION_164
