start_dependencies	IF,0:CALL,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0:functions,0	2
0x4000200	    0x48893d000000	            mov qword [0x04000207], rdi 	        51	depend.c	FUNCTION_1
0x4000207	              0xc3	                                     ret	        51	depend.c	FUNCTION_1
quote_string_for_make	IF,5:CALL,4:WHILE,0:FOR,2:SWITCH,1:DO,0:ELSE,0:functions,0	71
0x4000040	            0x4157	                                push r15	        84	depend.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	        84	depend.c	FUNCTION_3
0x4000044	          0x4989f7	                            mov r15, rsi	        84	depend.c	FUNCTION_3
0x4000047	            0x4155	                                push r13	        84	depend.c	FUNCTION_3
0x4000049	            0x4154	                                push r12	        84	depend.c	FUNCTION_3
0x400004b	          0x4989f6	                            mov r14, rsi	        84	depend.c	FUNCTION_3
0x400004e	              0x55	                                push rbp	        84	depend.c	FUNCTION_3
0x400004f	              0x53	                                push rbx	        84	depend.c	FUNCTION_3
0x4000050	          0x4989fc	                            mov r12, rdi	        84	depend.c	FUNCTION_3
0x4000053	            0x31ed	                            xor ebp, ebp	        86	depend.c	FUNCTION_3
0x4000055	        0x4883ec08	                              sub rsp, 8	        84	depend.c	FUNCTION_3
0x4000059	            0xeb3e	                           jmp 0x4000099	        84	depend.c	FUNCTION_3
0x400005b	       0xf1f440000	                   nop dword [rax + rax]	        84	depend.c	FUNCTION_3
0x4000060	        0x4180fd20	                          cmp r13b, 0x20	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000064	            0x7447	                            je 0x40000ad	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000066	        0x4180fd24	                          cmp r13b, 0x24	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400006a	            0x7515	                           jne 0x4000081	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x400006c	          0x4d85e4	                           test r12, r12	       121	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x400006f	            0x740d	                            je 0x400007e	       121	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x4000071	          0x4c89e6	                            mov rsi, r12	       122	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000074	      0xbf24000000	                           mov edi, 0x24	       122	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000079	      0xe800000000	                          call 0x400007e	       122	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400007e	          0x83c501	                              add ebp, 1	       123	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000081	          0x4d85e4	                           test r12, r12	       133	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x4000084	            0x740c	                            je 0x4000092	       133	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x4000086	        0x410fbefd	                         movsx edi, r13b	       134	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x400008a	          0x4c89e6	                            mov rsi, r12	       134	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x400008d	      0xe800000000	                          call 0x4000092	       134	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_4
0x4000092	          0x83c501	                              add ebp, 1	       135	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000095	        0x4983c601	                              add r14, 1	       135	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000099	        0x450fb62e	                  movzx r13d, byte [r14]	        90	depend.c	FUNCTION_3	FOR_1
0x400009d	          0x4c89f3	                            mov rbx, r14	        90	depend.c	FUNCTION_3	FOR_1
0x40000a0	        0x4180fd09	                             cmp r13b, 9	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000a4	            0x7407	                            je 0x40000ad	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000a6	            0x7fb8	                            jg 0x4000060	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000a8	          0x4584ed	                         test r13b, r13b	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000ab	            0x75d4	                           jne 0x4000081	        92	depend.c	FUNCTION_3	FOR_1	SWITCH_1
0x40000ad	          0x4d39fe	                            cmp r14, r15	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000b0	            0x7632	                           jbe 0x40000e4	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000b2	      0x41807eff5c	                cmp byte [r14 - 1], 0x5c	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000b7	            0x740d	                            je 0x40000c6	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000b9	            0xeb29	                           jmp 0x40000e4	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000bb	       0xf1f440000	                   nop dword [rax + rax]	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000c0	        0x807bff5c	                cmp byte [rbx - 1], 0x5c	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000c4	            0x751e	                           jne 0x40000e4	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000c6	          0x4d85e4	                           test r12, r12	       108	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	IF_1
0x40000c9	            0x740d	                            je 0x40000d8	       108	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	IF_1
0x40000cb	          0x4c89e6	                            mov rsi, r12	       109	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	CALL_1
0x40000ce	      0xbf5c000000	                           mov edi, 0x5c	       109	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	CALL_1
0x40000d3	      0xe800000000	                          call 0x40000d8	       109	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2	CALL_1
0x40000d8	        0x4883eb01	                              sub rbx, 1	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000dc	          0x83c501	                              add ebp, 1	       110	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000df	          0x4939df	                            cmp r15, rbx	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000e2	            0x75dc	                           jne 0x40000c0	       106	depend.c	FUNCTION_3	FOR_1	SWITCH_1	FOR_2
0x40000e4	          0x4584ed	                         test r13b, r13b	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40000e7	            0x7414	                            je 0x40000fd	       113	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x40000e9	          0x4d85e4	                           test r12, r12	       115	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40000ec	            0x7490	                            je 0x400007e	       115	depend.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40000ee	          0x4c89e6	                            mov rsi, r12	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x40000f1	      0xbf5c000000	                           mov edi, 0x5c	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x40000f6	      0xe800000000	                          call 0x40000fb	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x40000fb	            0xeb81	                           jmp 0x400007e	       116	depend.c	FUNCTION_3	FOR_1	SWITCH_1	CALL_2
0x40000fd	        0x4883c408	                              add rsp, 8	       139	depend.c	FUNCTION_3
0x4000101	            0x89e8	                            mov eax, ebp	       139	depend.c	FUNCTION_3
0x4000103	              0x5b	                                 pop rbx	       139	depend.c	FUNCTION_3
0x4000104	              0x5d	                                 pop rbp	       139	depend.c	FUNCTION_3
0x4000105	            0x415c	                                 pop r12	       139	depend.c	FUNCTION_3
0x4000107	            0x415d	                                 pop r13	       139	depend.c	FUNCTION_3
0x4000109	            0x415e	                                 pop r14	       139	depend.c	FUNCTION_3
0x400010b	            0x415f	                                 pop r15	       139	depend.c	FUNCTION_3
0x400010d	              0xc3	                                     ret	       139	depend.c	FUNCTION_3
print_dependencies	IF,3:CALL,9:WHILE,0:FOR,1:SWITCH,0:DO,0:ELSE,0:functions,0	54
0x40002a0	    0x488b3d000000	            mov rdi, qword [0x040002a7] 	       188	depend.c	FUNCTION_5	IF_1
0x40002a7	          0x4885ff	                           test rdi, rdi	       188	depend.c	FUNCTION_5	IF_1
0x40002aa	     0xf8498000000	                            je 0x4000348	       188	depend.c	FUNCTION_5	IF_1
0x40002b0	              0x55	                                push rbp	       184	depend.c	FUNCTION_5
0x40002b1	              0x53	                                push rbx	       184	depend.c	FUNCTION_5
0x40002b2	      0xbe00000000	                              mov esi, 0	       191	depend.c	FUNCTION_5	CALL_1
0x40002b7	        0x4883ec08	                              sub rsp, 8	       184	depend.c	FUNCTION_5
0x40002bb	      0xe800000000	                          call 0x40002c0	       191	depend.c	FUNCTION_5	CALL_1
0x40002c0	          0x4885c0	                           test rax, rax	       192	depend.c	FUNCTION_5	IF_2
0x40002c3	          0x4889c5	                            mov rbp, rax	       191	depend.c	FUNCTION_5	CALL_1
0x40002c6	    0x488b1d000000	            mov rbx, qword [0x040002cd] 	       194	depend.c	FUNCTION_5	IF_2	CALL_3
0x40002cd	      0xba05000000	                              mov edx, 5	       194	depend.c	FUNCTION_5	IF_2	CALL_3
0x40002d2	      0xbe00000000	                              mov esi, 0	       194	depend.c	FUNCTION_5	IF_2	CALL_3
0x40002d7	     0xf8484000000	                            je 0x4000361	       192	depend.c	FUNCTION_5	IF_2
0x40002dd	    0x488b35000000	            mov rsi, qword [0x040002e4] 	       199	depend.c	FUNCTION_5	CALL_4
0x40002e4	      0xba3a000000	                           mov edx, 0x3a	       199	depend.c	FUNCTION_5	CALL_4
0x40002e9	          0x4889c7	                            mov rdi, rax	       199	depend.c	FUNCTION_5	CALL_4
0x40002ec	    0xc70500000000	               mov dword [0x040002f6], 0	       198	depend.c	FUNCTION_5
0x40002f6	      0xe815feffff	                    call sym.wrap_output	       199	depend.c	FUNCTION_5	CALL_4
0x40002fb	    0x488b1d000000	            mov rbx, qword [0x04000302] 	       200	depend.c	FUNCTION_5	FOR_1
0x4000302	          0x4885db	                           test rbx, rbx	       200	depend.c	FUNCTION_5	FOR_1
0x4000305	            0x7422	                            je 0x4000329	       200	depend.c	FUNCTION_5	FOR_1
0x4000307	    0x660f1f840000	                    nop word [rax + rax]	       200	depend.c	FUNCTION_5	FOR_1
0x4000310	          0x488b33	                    mov rsi, qword [rbx]	       201	depend.c	FUNCTION_5	CALL_5
0x4000313	      0xba20000000	                           mov edx, 0x20	       201	depend.c	FUNCTION_5	CALL_5
0x4000318	          0x4889ef	                            mov rdi, rbp	       201	depend.c	FUNCTION_5	CALL_5
0x400031b	      0xe8f0fdffff	                    call sym.wrap_output	       201	depend.c	FUNCTION_5	CALL_5
0x4000320	        0x488b5b08	                mov rbx, qword [rbx + 8]	       200	depend.c	FUNCTION_5	FOR_1
0x4000324	          0x4885db	                           test rbx, rbx	       200	depend.c	FUNCTION_5	FOR_1
0x4000327	            0x75e7	                           jne 0x4000310	       200	depend.c	FUNCTION_5	FOR_1
0x4000329	          0x4889ee	                            mov rsi, rbp	       203	depend.c	FUNCTION_5	CALL_6
0x400032c	      0xbf0a000000	                            mov edi, 0xa	       203	depend.c	FUNCTION_5	CALL_6
0x4000331	      0xe800000000	                          call 0x4000336	       203	depend.c	FUNCTION_5	CALL_6
0x4000336	          0x4889ef	                            mov rdi, rbp	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x4000339	      0xe800000000	                          call 0x400033e	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x400033e	            0x85c0	                           test eax, eax	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x4000340	            0x750e	                           jne 0x4000350	       205	depend.c	FUNCTION_5	IF_3	CALL_7
0x4000342	        0x4883c408	                              add rsp, 8	       207	depend.c	FUNCTION_5
0x4000346	              0x5b	                                 pop rbx	       207	depend.c	FUNCTION_5
0x4000347	              0x5d	                                 pop rbp	       207	depend.c	FUNCTION_5
0x4000348	            0xf3c3	                                     ret	       207	depend.c	FUNCTION_5
0x400034a	    0x660f1f440000	                    nop word [rax + rax]	       207	depend.c	FUNCTION_5
0x4000350	    0x488b1d000000	            mov rbx, qword [0x04000357] 	       206	depend.c	FUNCTION_5	CALL_9
0x4000357	      0xba05000000	                              mov edx, 5	       206	depend.c	FUNCTION_5	CALL_9
0x400035c	      0xbe00000000	                              mov esi, 0	       206	depend.c	FUNCTION_5	CALL_9
0x4000361	            0x31ff	                            xor edi, edi	       206	depend.c	FUNCTION_5	CALL_9
0x4000363	      0xe800000000	                          call 0x4000368	       206	depend.c	FUNCTION_5	CALL_9
0x4000368	        0x4883c408	                              add rsp, 8	       207	depend.c	FUNCTION_5
0x400036c	          0x4889de	                            mov rsi, rbx	       206	depend.c	FUNCTION_5	CALL_9
0x400036f	          0x4889c7	                            mov rdi, rax	       206	depend.c	FUNCTION_5	CALL_9
0x4000372	              0x5b	                                 pop rbx	       207	depend.c	FUNCTION_5
0x4000373	              0x5d	                                 pop rbp	       207	depend.c	FUNCTION_5
0x4000374	            0x31c0	                            xor eax, eax	       206	depend.c	FUNCTION_5	CALL_9
0x4000376	      0xe900000000	                   jmp section_end..data	       206	depend.c	FUNCTION_5	CALL_9
wrap_output	IF,5:CALL,4:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0:functions,0	68
0x4000110	            0x4155	                                push r13	       146	depend.c	FUNCTION_4
0x4000112	            0x4154	                                push r12	       146	depend.c	FUNCTION_4
0x4000114	          0x4989fd	                            mov r13, rdi	       146	depend.c	FUNCTION_4
0x4000117	              0x55	                                push rbp	       146	depend.c	FUNCTION_4
0x4000118	              0x53	                                push rbx	       146	depend.c	FUNCTION_4
0x4000119	            0x31ff	                            xor edi, edi	       147	depend.c	FUNCTION_4	CALL_1
0x400011b	          0x4889f5	                            mov rbp, rsi	       146	depend.c	FUNCTION_4
0x400011e	          0x4189d4	                           mov r12d, edx	       146	depend.c	FUNCTION_4
0x4000121	        0x4883ec08	                              sub rsp, 8	       146	depend.c	FUNCTION_4
0x4000125	      0xe816ffffff	          call sym.quote_string_for_make	       147	depend.c	FUNCTION_4	CALL_1
0x400012a	            0x85c0	                           test eax, eax	       149	depend.c	FUNCTION_4	IF_1
0x400012c	            0x7434	                            je 0x4000162	       149	depend.c	FUNCTION_4	IF_1
0x400012e	            0x89c3	                            mov ebx, eax	       149	depend.c	FUNCTION_4	IF_1
0x4000130	    0x8b0500000000	            mov eax, dword [0x04000136] 	       152	depend.c	FUNCTION_4	IF_2
0x4000136	            0x85c0	                           test eax, eax	       152	depend.c	FUNCTION_4	IF_2
0x4000138	            0x7407	                            je 0x4000141	       152	depend.c	FUNCTION_4	IF_2
0x400013a	             0x1d8	                            add eax, ebx	       153	depend.c	FUNCTION_4	IF_2
0x400013c	          0x83f845	                           cmp eax, 0x45	       153	depend.c	FUNCTION_4	IF_2
0x400013f	            0x7f4f	                            jg 0x4000190	       153	depend.c	FUNCTION_4	IF_2
0x4000141	        0x4183fc20	                          cmp r12d, 0x20	       164	depend.c	FUNCTION_4	IF_4
0x4000145	     0xf8485000000	                            je 0x40001d0	       164	depend.c	FUNCTION_4	IF_4
0x400014b	          0x4889ee	                            mov rsi, rbp	       170	depend.c	FUNCTION_4	CALL_3
0x400014e	          0x4c89ef	                            mov rdi, r13	       170	depend.c	FUNCTION_4	CALL_3
0x4000151	      0xe8eafeffff	          call sym.quote_string_for_make	       170	depend.c	FUNCTION_4	CALL_3
0x4000156	     0x11d00000000	             add dword [0x0400015c], ebx	       171	depend.c	FUNCTION_4
0x400015c	        0x4183fc3a	                          cmp r12d, 0x3a	       173	depend.c	FUNCTION_4	IF_5
0x4000160	            0x740e	                            je 0x4000170	       173	depend.c	FUNCTION_4	IF_5
0x4000162	        0x4883c408	                              add rsp, 8	       178	depend.c	FUNCTION_4
0x4000166	              0x5b	                                 pop rbx	       178	depend.c	FUNCTION_4
0x4000167	              0x5d	                                 pop rbp	       178	depend.c	FUNCTION_4
0x4000168	            0x415c	                                 pop r12	       178	depend.c	FUNCTION_4
0x400016a	            0x415d	                                 pop r13	       178	depend.c	FUNCTION_4
0x400016c	              0xc3	                                     ret	       178	depend.c	FUNCTION_4
0x400016d	           0xf1f00	                         nop dword [rax]	       178	depend.c	FUNCTION_4
0x4000170	          0x4c89ee	                            mov rsi, r13	       175	depend.c	FUNCTION_4	IF_5	CALL_4
0x4000173	      0xbf3a000000	                           mov edi, 0x3a	       175	depend.c	FUNCTION_4	IF_5	CALL_4
0x4000178	      0xe800000000	                          call 0x400017d	       175	depend.c	FUNCTION_4	IF_5	CALL_4
0x400017d	    0x830500000000	               add dword [0x04000184], 1	       176	depend.c	FUNCTION_4	IF_5
0x4000184	        0x4883c408	                              add rsp, 8	       178	depend.c	FUNCTION_4
0x4000188	              0x5b	                                 pop rbx	       178	depend.c	FUNCTION_4
0x4000189	              0x5d	                                 pop rbp	       178	depend.c	FUNCTION_4
0x400018a	            0x415c	                                 pop r12	       178	depend.c	FUNCTION_4
0x400018c	            0x415d	                                 pop r13	       178	depend.c	FUNCTION_4
0x400018e	              0xc3	                                     ret	       178	depend.c	FUNCTION_4
0x400018f	              0x90	                                     nop	       178	depend.c	FUNCTION_4
0x4000190	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_11
0x4000193	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_11
0x4000198	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x400019d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x40001a2	      0xe800000000	                          call 0x40001a7	        97	stdio2.h	CALL_11
0x40001a7	        0x4183fc20	                          cmp r12d, 0x20	       160	depend.c	FUNCTION_4	IF_2	IF_3
0x40001ab	    0xc70500000000	               mov dword [0x040001b5], 0	       159	depend.c	FUNCTION_4	IF_2
0x40001b5	            0x7594	                           jne 0x400014b	       160	depend.c	FUNCTION_4	IF_2	IF_3
0x40001b7	          0x4889ee	                            mov rsi, rbp	       170	depend.c	FUNCTION_4	CALL_3
0x40001ba	          0x4c89ef	                            mov rdi, r13	       170	depend.c	FUNCTION_4	CALL_3
0x40001bd	      0xe87efeffff	          call sym.quote_string_for_make	       170	depend.c	FUNCTION_4	CALL_3
0x40001c2	     0x11d00000000	             add dword [0x040001c8], ebx	       171	depend.c	FUNCTION_4
0x40001c8	            0xeb98	                           jmp 0x4000162	       171	depend.c	FUNCTION_4
0x40001ca	    0x660f1f440000	                    nop word [rax + rax]	       171	depend.c	FUNCTION_4
0x40001d0	          0x4c89ee	                            mov rsi, r13	       166	depend.c	FUNCTION_4	IF_4	CALL_2
0x40001d3	      0xbf20000000	                           mov edi, 0x20	       166	depend.c	FUNCTION_4	IF_4	CALL_2
0x40001d8	      0xe800000000	                          call 0x40001dd	       166	depend.c	FUNCTION_4	IF_4	CALL_2
0x40001dd	          0x4889ee	                            mov rsi, rbp	       170	depend.c	FUNCTION_4	CALL_3
0x40001e0	          0x4c89ef	                            mov rdi, r13	       170	depend.c	FUNCTION_4	CALL_3
0x40001e3	    0x830500000000	               add dword [0x040001ea], 1	       167	depend.c	FUNCTION_4	IF_4
0x40001ea	      0xe851feffff	          call sym.quote_string_for_make	       170	depend.c	FUNCTION_4	CALL_3
0x40001ef	     0x11d00000000	             add dword [0x040001f5], ebx	       171	depend.c	FUNCTION_4
0x40001f5	      0xe968ffffff	                           jmp 0x4000162	       171	depend.c	FUNCTION_4
register_dependency	IF,2:CALL,3:WHILE,0:FOR,1:SWITCH,0:DO,0:ELSE,0:functions,0	37
0x4000210	    0x48833d000000	               cmp qword [0x04000218], 0	        61	depend.c	FUNCTION_2	IF_1
0x4000218	            0x743c	                            je 0x4000256	        61	depend.c	FUNCTION_2	IF_1
0x400021a	              0x55	                                push rbp	        58	depend.c	FUNCTION_2
0x400021b	              0x53	                                push rbx	        58	depend.c	FUNCTION_2
0x400021c	          0x4889fd	                            mov rbp, rdi	        58	depend.c	FUNCTION_2
0x400021f	        0x4883ec08	                              sub rsp, 8	        58	depend.c	FUNCTION_2
0x4000223	    0x488b1d000000	            mov rbx, qword [0x0400022a] 	        64	depend.c	FUNCTION_2	FOR_1
0x400022a	          0x4885db	                           test rbx, rbx	        64	depend.c	FUNCTION_2	FOR_1
0x400022d	            0x7512	                           jne 0x4000241	        64	depend.c	FUNCTION_2	FOR_1
0x400022f	            0xeb2f	                           jmp 0x4000260	        64	depend.c	FUNCTION_2	FOR_1
0x4000231	     0xf1f80000000	                         nop dword [rax]	        64	depend.c	FUNCTION_2	FOR_1
0x4000238	        0x488b5b08	                mov rbx, qword [rbx + 8]	        64	depend.c	FUNCTION_2	FOR_1
0x400023c	          0x4885db	                           test rbx, rbx	        64	depend.c	FUNCTION_2	FOR_1
0x400023f	            0x741f	                            je 0x4000260	        64	depend.c	FUNCTION_2	FOR_1
0x4000241	          0x488b33	                    mov rsi, qword [rbx]	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000244	          0x4889ef	                            mov rdi, rbp	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000247	      0xe800000000	                          call 0x400024c	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400024c	            0x85c0	                           test eax, eax	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400024e	            0x75e8	                           jne 0x4000238	        66	depend.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000250	        0x4883c408	                              add rsp, 8	        74	depend.c	FUNCTION_2
0x4000254	              0x5b	                                 pop rbx	        74	depend.c	FUNCTION_2
0x4000255	              0x5d	                                 pop rbp	        74	depend.c	FUNCTION_2
0x4000256	            0xf3c3	                                     ret	        74	depend.c	FUNCTION_2
0x4000258	     0xf1f84000000	                   nop dword [rax + rax]	        74	depend.c	FUNCTION_2
0x4000260	      0xbf10000000	                           mov edi, 0x10	        70	depend.c	FUNCTION_2	CALL_2
0x4000265	      0xe800000000	                          call 0x400026a	        70	depend.c	FUNCTION_2	CALL_2
0x400026a	          0x4889ef	                            mov rdi, rbp	        71	depend.c	FUNCTION_2	CALL_3
0x400026d	          0x4889c3	                            mov rbx, rax	        70	depend.c	FUNCTION_2	CALL_2
0x4000270	      0xe800000000	                          call 0x4000275	        71	depend.c	FUNCTION_2	CALL_3
0x4000275	          0x488903	                    mov qword [rbx], rax	        71	depend.c	FUNCTION_2	CALL_3
0x4000278	    0x488b05000000	            mov rax, qword [0x0400027f] 	        72	depend.c	FUNCTION_2
0x400027f	    0x48891d000000	            mov qword [0x04000286], rbx 	        73	depend.c	FUNCTION_2
0x4000286	        0x48894308	                mov qword [rbx + 8], rax	        72	depend.c	FUNCTION_2
0x400028a	        0x4883c408	                              add rsp, 8	        74	depend.c	FUNCTION_2
0x400028e	              0x5b	                                 pop rbx	        74	depend.c	FUNCTION_2
0x400028f	              0x5d	                                 pop rbp	        74	depend.c	FUNCTION_2
0x4000290	            0xebc4	                           jmp 0x4000256	        74	depend.c	FUNCTION_2
