rl_discard_keymap	FOR,1:ELSE,0:SWITCH,1:functions,0:DO,0:WHILE,0:IF,1:CALL,3	30
0x4000140	          0x4885ff	                           test rdi, rdi	       133	keymaps.c	FUNCTION_4	IF_1
0x4000143	            0x7458	                            je 0x400019d	       133	keymaps.c	FUNCTION_4	IF_1
0x4000145	              0x55	                                push rbp	       130	keymaps.c	FUNCTION_4
0x4000146	              0x53	                                push rbx	       130	keymaps.c	FUNCTION_4
0x4000147	    0x488daf181000	                 lea rbp, [rdi + 0x1018]	       130	keymaps.c	FUNCTION_4
0x400014e	        0x488d5f08	                      lea rbx, [rdi + 8]	       130	keymaps.c	FUNCTION_4
0x4000152	        0x4883ec08	                              sub rsp, 8	       130	keymaps.c	FUNCTION_4
0x4000156	            0xeb1d	                           jmp 0x4000175	       130	keymaps.c	FUNCTION_4
0x4000158	     0xf1f84000000	                   nop dword [rax + rax]	       130	keymaps.c	FUNCTION_4
0x4000160	            0x3c02	                               cmp al, 2	       138	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000162	            0x7508	                           jne 0x400016c	       138	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000164	          0x488b3b	                    mov rdi, qword [rbx]	       149	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_3
0x4000167	      0xe800000000	                          call 0x400016c	       149	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_3
0x400016c	        0x4883c310	                           add rbx, 0x10	       149	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_3
0x4000170	          0x4839eb	                            cmp rbx, rbp	       136	keymaps.c	FUNCTION_4	FOR_1
0x4000173	            0x7422	                            je 0x4000197	       136	keymaps.c	FUNCTION_4	FOR_1
0x4000175	         0xfb643f8	               movzx eax, byte [rbx - 8]	       138	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000179	            0x3c01	                               cmp al, 1	       138	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1
0x400017b	            0x75e3	                           jne 0x4000160	       138	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1
0x400017d	          0x488b3b	                    mov rdi, qword [rbx]	       144	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_1
0x4000180	        0x4883c310	                           add rbx, 0x10	       144	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_1
0x4000184	      0xe800000000	                          call 0x4000189	       144	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_1
0x4000189	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	       145	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_2
0x400018d	      0xe800000000	                          call 0x4000192	       145	keymaps.c	FUNCTION_4	FOR_1	SWITCH_1	CALL_2
0x4000192	          0x4839eb	                            cmp rbx, rbp	       136	keymaps.c	FUNCTION_4	FOR_1
0x4000195	            0x75de	                           jne 0x4000175	       136	keymaps.c	FUNCTION_4	FOR_1
0x4000197	        0x4883c408	                              add rsp, 8	       153	keymaps.c	FUNCTION_4
0x400019b	              0x5b	                                 pop rbx	       153	keymaps.c	FUNCTION_4
0x400019c	              0x5d	                                 pop rbp	       153	keymaps.c	FUNCTION_4
0x400019d	            0xf3c3	                                     ret	       153	keymaps.c	FUNCTION_4
rl_free_keymap	FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:IF,0:CALL,2	6
0x40001a0	              0x53	                                push rbx	       159	keymaps.c	FUNCTION_5
0x40001a1	          0x4889fb	                            mov rbx, rdi	       159	keymaps.c	FUNCTION_5
0x40001a4	      0xe800000000	                          call 0x40001a9	       160	keymaps.c	FUNCTION_5	CALL_1
0x40001a9	          0x4889df	                            mov rdi, rbx	       161	keymaps.c	FUNCTION_5	CALL_2
0x40001ac	              0x5b	                                 pop rbx	       162	keymaps.c	FUNCTION_5
0x40001ad	      0xe900000000	                   jmp section_end..text	       161	keymaps.c	FUNCTION_5	CALL_2
rl_make_keymap	FOR,2:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:IF,0:CALL,2	21
0x40000c0	        0x4883ec08	                              sub rsp, 8	       103	keymaps.c	FUNCTION_3
0x40000c4	      0xe800000000	                          call 0x40000c9	       107	keymaps.c	FUNCTION_3	CALL_1
0x40000c9	    0x488d90080200	                  lea rdx, [rax + 0x208]	       107	keymaps.c	FUNCTION_3	CALL_1
0x40000d0	    0x488d88f80700	                  lea rcx, [rax + 0x7f8]	       107	keymaps.c	FUNCTION_3	CALL_1
0x40000d7	    0x660f1f840000	                    nop word [rax + rax]	       107	keymaps.c	FUNCTION_3	CALL_1
0x40000e0	    0x48c702000000	                      mov qword [rdx], 0	       111	keymaps.c	FUNCTION_3	FOR_1
0x40000e7	        0x4883c210	                           add rdx, 0x10	       111	keymaps.c	FUNCTION_3	FOR_1
0x40000eb	          0x4839ca	                            cmp rdx, rcx	       110	keymaps.c	FUNCTION_3	FOR_1
0x40000ee	            0x75f0	                           jne 0x40000e0	       110	keymaps.c	FUNCTION_3	FOR_1
0x40000f0	    0x488d90080800	                  lea rdx, [rax + 0x808]	       110	keymaps.c	FUNCTION_3	FOR_1
0x40000f7	    0x488d88081000	                 lea rcx, [rax + 0x1008]	       110	keymaps.c	FUNCTION_3	FOR_1
0x40000fe	    0x48c780980000	               mov qword [rax + 0x98], 0	       113	keymaps.c	FUNCTION_3
0x4000109	    0x48c780f80700	              mov qword [rax + 0x7f8], 0	       114	keymaps.c	FUNCTION_3
0x4000114	    0x48c780880000	               mov qword [rax + 0x88], 0	       115	keymaps.c	FUNCTION_3	CALL_2
0x400011f	              0x90	                                     nop	       115	keymaps.c	FUNCTION_3	CALL_2
0x4000120	    0x48c702000000	                      mov qword [rdx], 0	       120	keymaps.c	FUNCTION_3	FOR_2
0x4000127	        0x4883c210	                           add rdx, 0x10	       120	keymaps.c	FUNCTION_3	FOR_2
0x400012b	          0x4839ca	                            cmp rdx, rcx	       119	keymaps.c	FUNCTION_3	FOR_2
0x400012e	            0x75f0	                           jne 0x4000120	       119	keymaps.c	FUNCTION_3	FOR_2
0x4000130	        0x4883c408	                              add rsp, 8	       124	keymaps.c	FUNCTION_3
0x4000134	              0xc3	                                     ret	       124	keymaps.c	FUNCTION_3
rl_make_bare_keymap	FOR,2:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:IF,0:CALL,1	13
0x4000040	        0x4883ec08	                              sub rsp, 8	        58	keymaps.c	FUNCTION_1
0x4000044	      0xbf10100000	                         mov edi, 0x1010	        62	keymaps.c	FUNCTION_1	CALL_1
0x4000049	      0xe800000000	                          call 0x400004e	        62	keymaps.c	FUNCTION_1	CALL_1
0x400004e	    0x488d88101000	                 lea rcx, [rax + 0x1010]	        62	keymaps.c	FUNCTION_1	CALL_1
0x4000055	          0x4889c2	                            mov rdx, rax	        62	keymaps.c	FUNCTION_1	CALL_1
0x4000058	     0xf1f84000000	                   nop dword [rax + rax]	        62	keymaps.c	FUNCTION_1	CALL_1
0x4000060	          0xc60200	                       mov byte [rdx], 0	        65	keymaps.c	FUNCTION_1	FOR_1
0x4000063	    0x48c742080000	                  mov qword [rdx + 8], 0	        66	keymaps.c	FUNCTION_1	FOR_1
0x400006b	        0x4883c210	                           add rdx, 0x10	        66	keymaps.c	FUNCTION_1	FOR_1
0x400006f	          0x4839ca	                            cmp rdx, rcx	        63	keymaps.c	FUNCTION_1	FOR_1
0x4000072	            0x75ec	                           jne 0x4000060	        63	keymaps.c	FUNCTION_1	FOR_1
0x4000074	        0x4883c408	                              add rsp, 8	        78	keymaps.c	FUNCTION_1
0x4000078	              0xc3	                                     ret	        78	keymaps.c	FUNCTION_1
rl_copy_keymap	FOR,1:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:IF,0:CALL,1	17
0x4000080	              0x53	                                push rbx	        85	keymaps.c	FUNCTION_2
0x4000081	          0x4889fb	                            mov rbx, rdi	        85	keymaps.c	FUNCTION_2
0x4000084	      0xe800000000	                          call 0x4000089	        89	keymaps.c	FUNCTION_2	CALL_1
0x4000089	        0x488d5308	                      lea rdx, [rbx + 8]	        89	keymaps.c	FUNCTION_2	CALL_1
0x400008d	        0x488d4808	                      lea rcx, [rax + 8]	        89	keymaps.c	FUNCTION_2	CALL_1
0x4000091	    0x488dbb181000	                 lea rdi, [rbx + 0x1018]	        89	keymaps.c	FUNCTION_2	CALL_1
0x4000098	     0xf1f84000000	                   nop dword [rax + rax]	        89	keymaps.c	FUNCTION_2	CALL_1
0x40000a0	         0xfb672f8	               movzx esi, byte [rdx - 8]	        92	keymaps.c	FUNCTION_2	FOR_1
0x40000a4	        0x4883c210	                           add rdx, 0x10	        92	keymaps.c	FUNCTION_2	FOR_1
0x40000a8	        0x4883c110	                           add rcx, 0x10	        92	keymaps.c	FUNCTION_2	FOR_1
0x40000ac	        0x408871e8	              mov byte [rcx - 0x18], sil	        92	keymaps.c	FUNCTION_2	FOR_1
0x40000b0	        0x488b72f0	             mov rsi, qword [rdx - 0x10]	        93	keymaps.c	FUNCTION_2	FOR_1
0x40000b4	        0x488971f0	             mov qword [rcx - 0x10], rsi	        93	keymaps.c	FUNCTION_2	FOR_1
0x40000b8	          0x4839fa	                            cmp rdx, rdi	        90	keymaps.c	FUNCTION_2	FOR_1
0x40000bb	            0x75e3	                           jne 0x40000a0	        90	keymaps.c	FUNCTION_2	FOR_1
0x40000bd	              0x5b	                                 pop rbx	        96	keymaps.c	FUNCTION_2
0x40000be	              0xc3	                                     ret	        96	keymaps.c	FUNCTION_2
