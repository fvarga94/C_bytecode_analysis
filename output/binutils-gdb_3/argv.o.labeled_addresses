buildargv	IF,12:SWITCH,0:ELSE,10:FOR,0:WHILE,1:CALL,9:functions,0:DO,1	146
0x4000120	            0x4157	                                push r15	       177	argv.c	FUNCTION_5
0x4000122	            0x4156	                                push r14	       177	argv.c	FUNCTION_5
0x4000124	            0x4155	                                push r13	       177	argv.c	FUNCTION_5
0x4000126	            0x4154	                                push r12	       177	argv.c	FUNCTION_5
0x4000128	              0x55	                                push rbp	       177	argv.c	FUNCTION_5
0x4000129	              0x53	                                push rbx	       177	argv.c	FUNCTION_5
0x400012a	        0x4883ec28	                           sub rsp, 0x28	       177	argv.c	FUNCTION_5
0x400012e	          0x4885ff	                           test rdi, rdi	       188	argv.c	FUNCTION_5	IF_1
0x4000131	     0xf840a020000	                            je 0x4000341	       188	argv.c	FUNCTION_5	IF_1
0x4000137	          0x4889fb	                            mov rbx, rdi	       188	argv.c	FUNCTION_5	IF_1
0x400013a	          0x4531e4	                          xor r12d, r12d	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x400013d	          0x4531ed	                          xor r13d, r13d	       185	argv.c	FUNCTION_5
0x4000140	      0xe800000000	                          call 0x4000145	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000145	        0x488d7801	                      lea rdi, [rax + 1]	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000149	            0x31ed	                            xor ebp, ebp	       182	argv.c	FUNCTION_5
0x400014b	          0x4531ff	                          xor r15d, r15d	       181	argv.c	FUNCTION_5
0x400014e	          0x4531f6	                          xor r14d, r14d	       180	argv.c	FUNCTION_5
0x4000151	      0xe800000000	                          call 0x4000156	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000156	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       184	argv.c	FUNCTION_5
0x400015e	      0x4889442410	             mov qword [rsp + 0x10], rax	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000163	       0xf1f440000	                   nop dword [rax + rax]	       190	argv.c	FUNCTION_5	IF_1	CALL_2
0x4000168	           0xfb603	                   movzx eax, byte [rbx]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400016b	          0x4489e2	                           mov edx, r12d	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400016e	    0xf68400000000	            test byte [rax + rax], 0x40 	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000176	            0x7419	                            je 0x4000191	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000178	     0xf1f84000000	                   nop dword [rax + rax]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000180	        0x4883c301	                              add rbx, 1	       123	argv.c	FUNCTION_3	WHILE_1
0x4000184	           0xfb603	                   movzx eax, byte [rbx]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000187	    0xf68400000000	            test byte [rax + rax], 0x40 	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400018f	            0x75ef	                           jne 0x4000180	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000191	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x4000195	            0x85c0	                           test eax, eax	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x4000197	            0x740c	                            je 0x40001a5	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x4000199	          0x83e801	                              sub eax, 1	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x400019c	      0x4b8d74e500	                  lea rsi, [r13 + r12*8]	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001a1	            0x39c2	                            cmp edx, eax	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001a3	            0x7c2d	                            jl 0x40001d2	       198	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001a5	          0x4d85ed	                           test r13, r13	       201	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x40001a8	     0xf8479010000	                            je 0x4000327	       201	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x40001ae	        0xd164240c	                shl dword [rsp + 0xc], 1	       208	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1
0x40001b2	          0x4c89ef	                            mov rdi, r13	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001b5	      0x486374240c	          movsxd rsi, dword [rsp + 0xc] 	       208	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1
0x40001ba	        0x48c1e603	                              shl rsi, 3	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001be	      0xe800000000	                          call 0x40001c3	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001c3	          0x4989c5	                            mov r13, rax	       209	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	ELSE_1	CALL_5
0x40001c6	      0x4b8d74e500	                  lea rsi, [r13 + r12*8]	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001cb	    0x48c706000000	                      mov qword [rsi], 0	       212	argv.c	FUNCTION_5	IF_1	DO_1	IF_2
0x40001d2	           0xfb603	                   movzx eax, byte [rbx]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001d5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001da	            0x84c0	                             test al, al	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001dc	            0x7515	                           jne 0x40001f3	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001de	            0xeb60	                           jmp 0x4000240	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001e0	            0x8802	                      mov byte [rdx], al	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x40001e2	            0x31ed	                            xor ebp, ebp	       226	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x40001e4	        0x4883c201	                              add rdx, 1	       227	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x40001e8	        0x4883c301	                              add rbx, 1	       270	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2
0x40001ec	           0xfb603	                   movzx eax, byte [rbx]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001ef	            0x84c0	                             test al, al	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001f1	            0x744d	                            je 0x4000240	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x40001f3	           0xfb6c8	                           movzx ecx, al	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x40001f6	    0xf68409000000	            test byte [rcx + rcx], 0x40 	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x40001fe	            0x740e	                            je 0x400020e	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000200	          0x4489f1	                           mov ecx, r14d	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000203	          0x4409f9	                            or ecx, r15d	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000206	             0x9e9	                             or ecx, ebp	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x4000208	     0xf8412010000	                            je 0x4000320	       218	argv.c	FUNCTION_5	IF_1	DO_1	IF_4	CALL_6
0x400020e	            0x85ed	                           test ebp, ebp	       224	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000210	            0x75ce	                           jne 0x40001e0	       224	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	IF_5
0x4000212	            0x3c5c	                            cmp al, 0x5c	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x4000214	     0xf84be000000	                            je 0x40002d8	       229	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x400021a	          0x4585f6	                         test r14d, r14d	       233	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7
0x400021d	     0xf849d000000	                            je 0x40002c0	       233	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7
0x4000223	            0x3c27	                            cmp al, 0x27	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000225	     0xf84d5000000	                            je 0x4000300	       235	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x400022b	        0x4883c301	                              add rbx, 1	       270	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2
0x400022f	            0x8802	                      mov byte [rdx], al	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x4000231	        0x4883c201	                              add rdx, 1	       267	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_10
0x4000235	           0xfb603	                   movzx eax, byte [rbx]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000238	            0x84c0	                             test al, al	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x400023a	            0x75b7	                           jne 0x40001f3	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x400023c	         0xf1f4000	                         nop dword [rax]	       216	argv.c	FUNCTION_5	IF_1	DO_1
0x4000240	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000245	          0xc60200	                       mov byte [rdx], 0	       273	argv.c	FUNCTION_5	IF_1	DO_1
0x4000248	      0x4889742418	             mov qword [rsp + 0x18], rsi	       273	argv.c	FUNCTION_5	IF_1	DO_1
0x400024d	      0xe800000000	                          call 0x4000252	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000252	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x4000257	      0x4d8d4c2401	                       lea r9, [r12 + 1]	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400025c	          0x488906	                    mov qword [rsi], rax	       274	argv.c	FUNCTION_5	IF_1	DO_1	CALL_7
0x400025f	    0x4bc744cd0000	               mov qword [r13 + r9*8], 0	       276	argv.c	FUNCTION_5	IF_1	DO_1
0x4000268	           0xfb613	                   movzx edx, byte [rbx]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400026b	    0xf68412000000	            test byte [rdx + rdx], 0x40 	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000273	          0x4889d0	                            mov rax, rdx	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000276	            0x741c	                            je 0x4000294	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000278	     0xf1f84000000	                   nop dword [rax + rax]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000280	        0x4883c301	                              add rbx, 1	       123	argv.c	FUNCTION_3	WHILE_1
0x4000284	           0xfb613	                   movzx edx, byte [rbx]	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000287	    0xf68412000000	            test byte [rdx + rdx], 0x40 	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x400028f	          0x4889d0	                            mov rax, rdx	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000292	            0x75ec	                           jne 0x4000280	       121	argv.c	FUNCTION_3	WHILE_1	CALL_1
0x4000294	            0x84c0	                             test al, al	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x4000296	          0x4d89cc	                             mov r12, r9	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x4000299	     0xf85c9feffff	                           jne 0x4000168	       280	argv.c	FUNCTION_5	IF_1	WHILE_1
0x400029f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       282	argv.c	FUNCTION_5	IF_1	CALL_9
0x40002a4	      0xe800000000	                          call 0x40002a9	       282	argv.c	FUNCTION_5	IF_1	CALL_9
0x40002a9	        0x4883c428	                           add rsp, 0x28	       285	argv.c	FUNCTION_5
0x40002ad	          0x4c89e8	                            mov rax, r13	       285	argv.c	FUNCTION_5
0x40002b0	              0x5b	                                 pop rbx	       285	argv.c	FUNCTION_5
0x40002b1	              0x5d	                                 pop rbp	       285	argv.c	FUNCTION_5
0x40002b2	            0x415c	                                 pop r12	       285	argv.c	FUNCTION_5
0x40002b4	            0x415d	                                 pop r13	       285	argv.c	FUNCTION_5
0x40002b6	            0x415e	                                 pop r14	       285	argv.c	FUNCTION_5
0x40002b8	            0x415f	                                 pop r15	       285	argv.c	FUNCTION_5
0x40002ba	              0xc3	                                     ret	       285	argv.c	FUNCTION_5
0x40002bb	       0xf1f440000	                   nop dword [rax + rax]	       285	argv.c	FUNCTION_5
0x40002c0	          0x4585ff	                         test r15d, r15d	       244	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9
0x40002c3	            0x7423	                            je 0x40002e8	       244	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9
0x40002c5	            0x3c22	                            cmp al, 0x22	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002c7	     0xf855effffff	                           jne 0x400022b	       246	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002cd	          0x4531ff	                          xor r15d, r15d	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002d0	      0xe913ffffff	                           jmp 0x40001e8	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002d5	           0xf1f00	                         nop dword [rax]	       248	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_6	IF_9	IF_10
0x40002d8	      0xbd01000000	                              mov ebp, 1	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x40002dd	      0xe906ffffff	                           jmp 0x40001e8	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x40002e2	    0x660f1f440000	                    nop word [rax + rax]	       231	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_3	IF_6
0x40002e8	            0x3c27	                            cmp al, 0x27	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40002ea	            0x7424	                            je 0x4000310	       257	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x40002ec	            0x3c22	                            cmp al, 0x22	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002ee	     0xf8537ffffff	                           jne 0x400022b	       261	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002f4	    0x41bf01000000	                             mov r15d, 1	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002fa	      0xe9e9feffff	                           jmp 0x40001e8	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x40002ff	              0x90	                                     nop	       263	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	ELSE_9	IF_12
0x4000300	          0x4531f6	                          xor r14d, r14d	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000303	      0xe9e0feffff	                           jmp 0x40001e8	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000308	     0xf1f84000000	                   nop dword [rax + rax]	       237	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_4	IF_7	IF_8
0x4000310	    0x41be01000000	                             mov r14d, 1	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000316	      0xe9cdfeffff	                           jmp 0x40001e8	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x400031b	       0xf1f440000	                   nop dword [rax + rax]	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000320	            0x31ed	                            xor ebp, ebp	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000322	      0xe919ffffff	                           jmp 0x4000240	       259	argv.c	FUNCTION_5	IF_1	DO_1	ELSE_2	ELSE_8	IF_11
0x4000327	      0xbf40000000	                           mov edi, 0x40	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400032c	      0xe800000000	                          call 0x4000331	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000331	    0xc744240c0800	                mov dword [rsp + 0xc], 8	       203	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3
0x4000339	          0x4989c5	                            mov r13, rax	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x400033c	      0xe985feffff	                           jmp 0x40001c6	       204	argv.c	FUNCTION_5	IF_1	DO_1	IF_2	IF_3	CALL_4
0x4000341	          0x4531ed	                          xor r13d, r13d	       185	argv.c	FUNCTION_5
0x4000344	      0xe960ffffff	                           jmp 0x40002a9	       185	argv.c	FUNCTION_5
countargv	IF,1:SWITCH,0:ELSE,0:FOR,1:WHILE,0:CALL,0:functions,0:DO,0	15
0x4000790	          0x4885ff	                           test rdi, rdi	       501	argv.c	FUNCTION_8	IF_1
0x4000793	            0x742b	                            je 0x40007c0	       501	argv.c	FUNCTION_8	IF_1
0x4000795	        0x48833f00	                      cmp qword [rdi], 0	       503	argv.c	FUNCTION_8	FOR_1
0x4000799	            0x7425	                            je 0x40007c0	       503	argv.c	FUNCTION_8	FOR_1
0x400079b	        0x4883c708	                              add rdi, 8	       503	argv.c	FUNCTION_8	FOR_1
0x400079f	            0x31c0	                            xor eax, eax	       503	argv.c	FUNCTION_8	FOR_1
0x40007a1	     0xf1f80000000	                         nop dword [rax]	       503	argv.c	FUNCTION_8	FOR_1
0x40007a8	        0x4883c708	                              add rdi, 8	       503	argv.c	FUNCTION_8	FOR_1
0x40007ac	          0x83c001	                              add eax, 1	       503	argv.c	FUNCTION_8	FOR_1
0x40007af	      0x48837ff800	                  cmp qword [rdi - 8], 0	       503	argv.c	FUNCTION_8	FOR_1
0x40007b4	            0x75f2	                           jne 0x40007a8	       503	argv.c	FUNCTION_8	FOR_1
0x40007b6	            0xf3c3	                                     ret	       503	argv.c	FUNCTION_8	FOR_1
0x40007b8	     0xf1f84000000	                   nop dword [rax + rax]	       503	argv.c	FUNCTION_8	FOR_1
0x40007c0	            0x31c0	                            xor eax, eax	       502	argv.c	FUNCTION_8	IF_1
0x40007c2	              0xc3	                                     ret	       506	argv.c	FUNCTION_8
dupargv	IF,1:SWITCH,0:ELSE,0:FOR,2:WHILE,0:CALL,2:functions,0:DO,0	44
0x4000040	          0x4885ff	                           test rdi, rdi	        77	argv.c	FUNCTION_1	IF_1
0x4000043	            0x4154	                                push r12	        73	argv.c	FUNCTION_1
0x4000045	              0x55	                                push rbp	        73	argv.c	FUNCTION_1
0x4000046	              0x53	                                push rbx	        73	argv.c	FUNCTION_1
0x4000047	            0x747d	                            je 0x40000c6	        77	argv.c	FUNCTION_1	IF_1
0x4000049	        0x48833f00	                      cmp qword [rdi], 0	        81	argv.c	FUNCTION_1	FOR_1
0x400004d	            0x7470	                            je 0x40000bf	        81	argv.c	FUNCTION_1	FOR_1
0x400004f	        0x488d4708	                      lea rax, [rdi + 8]	        81	argv.c	FUNCTION_1	FOR_1
0x4000053	            0x31d2	                            xor edx, edx	        81	argv.c	FUNCTION_1	FOR_1
0x4000055	            0xeb0b	                           jmp 0x4000062	        81	argv.c	FUNCTION_1	FOR_1
0x4000057	    0x660f1f840000	                    nop word [rax + rax]	        81	argv.c	FUNCTION_1	FOR_1
0x4000060	            0x89ca	                            mov edx, ecx	        81	argv.c	FUNCTION_1	FOR_1
0x4000062	        0x4883c008	                              add rax, 8	        81	argv.c	FUNCTION_1	FOR_1
0x4000066	          0x8d4a01	                      lea ecx, [rdx + 1]	        81	argv.c	FUNCTION_1	FOR_1
0x4000069	      0x488378f800	                  cmp qword [rax - 8], 0	        81	argv.c	FUNCTION_1	FOR_1
0x400006e	            0x75f0	                           jne 0x4000060	        81	argv.c	FUNCTION_1	FOR_1
0x4000070	          0x83c202	                              add edx, 2	        81	argv.c	FUNCTION_1	FOR_1
0x4000073	          0x4863d2	                         movsxd rdx, edx	        81	argv.c	FUNCTION_1	FOR_1
0x4000076	        0x48c1e203	                              shl rdx, 3	        81	argv.c	FUNCTION_1	FOR_1
0x400007a	          0x4889fd	                            mov rbp, rdi	        81	argv.c	FUNCTION_1	FOR_1
0x400007d	          0x4889d7	                            mov rdi, rdx	        82	argv.c	FUNCTION_1	CALL_1
0x4000080	            0x31db	                            xor ebx, ebx	        85	argv.c	FUNCTION_1	FOR_2
0x4000082	      0xe800000000	                          call 0x4000087	        82	argv.c	FUNCTION_1	CALL_1
0x4000087	        0x488b7d00	                    mov rdi, qword [rbp]	        85	argv.c	FUNCTION_1	FOR_2
0x400008b	          0x4989c4	                            mov r12, rax	        82	argv.c	FUNCTION_1	CALL_1
0x400008e	          0x4885ff	                           test rdi, rdi	        85	argv.c	FUNCTION_1	FOR_2
0x4000091	            0x741c	                            je 0x40000af	        85	argv.c	FUNCTION_1	FOR_2
0x4000093	       0xf1f440000	                   nop dword [rax + rax]	        85	argv.c	FUNCTION_1	FOR_2
0x4000098	      0xe800000000	                          call 0x400009d	        86	argv.c	FUNCTION_1	CALL_2
0x400009d	        0x4989041c	              mov qword [r12 + rbx], rax	        86	argv.c	FUNCTION_1	CALL_2
0x40000a1	        0x4883c308	                              add rbx, 8	        85	argv.c	FUNCTION_1	FOR_2
0x40000a5	      0x488b7c1d00	              mov rdi, qword [rbp + rbx]	        85	argv.c	FUNCTION_1	FOR_2
0x40000aa	          0x4885ff	                           test rdi, rdi	        85	argv.c	FUNCTION_1	FOR_2
0x40000ad	            0x75e9	                           jne 0x4000098	        85	argv.c	FUNCTION_1	FOR_2
0x40000af	    0x49c7041c0000	                mov qword [r12 + rbx], 0	        87	argv.c	FUNCTION_1
0x40000b7	          0x4c89e0	                            mov rax, r12	        82	argv.c	FUNCTION_1	CALL_1
0x40000ba	              0x5b	                                 pop rbx	        89	argv.c	FUNCTION_1
0x40000bb	              0x5d	                                 pop rbp	        89	argv.c	FUNCTION_1
0x40000bc	            0x415c	                                 pop r12	        89	argv.c	FUNCTION_1
0x40000be	              0xc3	                                     ret	        89	argv.c	FUNCTION_1
0x40000bf	      0xba08000000	                              mov edx, 8	        81	argv.c	FUNCTION_1	FOR_1
0x40000c4	            0xebb4	                           jmp 0x400007a	        81	argv.c	FUNCTION_1	FOR_1
0x40000c6	            0x31c0	                            xor eax, eax	        78	argv.c	FUNCTION_1	IF_1
0x40000c8	            0xebf0	                           jmp 0x40000ba	        78	argv.c	FUNCTION_1	IF_1
freeargv	IF,1:SWITCH,0:ELSE,0:FOR,1:WHILE,0:CALL,2:functions,0:DO,0	23
0x40000d0	          0x4885ff	                           test rdi, rdi	       108	argv.c	FUNCTION_2	IF_1
0x40000d3	            0x743b	                            je 0x4000110	       108	argv.c	FUNCTION_2	IF_1
0x40000d5	              0x55	                                push rbp	       105	argv.c	FUNCTION_2
0x40000d6	              0x53	                                push rbx	       105	argv.c	FUNCTION_2
0x40000d7	          0x4889fd	                            mov rbp, rdi	       105	argv.c	FUNCTION_2
0x40000da	          0x4889eb	                            mov rbx, rbp	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000dd	        0x4883ec08	                              sub rsp, 8	       105	argv.c	FUNCTION_2
0x40000e1	          0x488b3f	                    mov rdi, qword [rdi]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000e4	          0x4885ff	                           test rdi, rdi	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000e7	            0x7418	                            je 0x4000101	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000e9	     0xf1f80000000	                         nop dword [rax]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000f0	        0x4883c308	                              add rbx, 8	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000f4	      0xe800000000	                          call 0x40000f9	       112	argv.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40000f9	          0x488b3b	                    mov rdi, qword [rbx]	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000fc	          0x4885ff	                           test rdi, rdi	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x40000ff	            0x75ef	                           jne 0x40000f0	       110	argv.c	FUNCTION_2	IF_1	FOR_1
0x4000101	        0x4883c408	                              add rsp, 8	       116	argv.c	FUNCTION_2
0x4000105	          0x4889ef	                            mov rdi, rbp	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x4000108	              0x5b	                                 pop rbx	       116	argv.c	FUNCTION_2
0x4000109	              0x5d	                                 pop rbp	       116	argv.c	FUNCTION_2
0x400010a	      0xe900000000	                           jmp 0x400010f	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x400010f	              0x90	                                     nop	       114	argv.c	FUNCTION_2	IF_1	CALL_2
0x4000110	            0xf3c3	                                     ret	       114	argv.c	FUNCTION_2	IF_1	CALL_2
writeargv	IF,5:SWITCH,0:ELSE,0:FOR,0:WHILE,2:CALL,4:functions,0:DO,0	59
0x4000350	          0x4885f6	                           test rsi, rsi	       304	argv.c	FUNCTION_6	IF_1
0x4000353	     0xf84a5000000	                            je 0x40003fe	       304	argv.c	FUNCTION_6	IF_1
0x4000359	            0x4156	                                push r14	       301	argv.c	FUNCTION_6
0x400035b	            0x4155	                                push r13	       301	argv.c	FUNCTION_6
0x400035d	          0x4989fd	                            mov r13, rdi	       301	argv.c	FUNCTION_6
0x4000360	            0x4154	                                push r12	       301	argv.c	FUNCTION_6
0x4000362	              0x55	                                push rbp	       301	argv.c	FUNCTION_6
0x4000363	    0x49bc21000000	          movabs r12, 0x400000000000021 	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400036d	              0x53	                                push rbx	       301	argv.c	FUNCTION_6
0x400036e	          0x488b1f	                    mov rbx, qword [rdi]	       307	argv.c	FUNCTION_6	WHILE_1
0x4000371	          0x4889f5	                            mov rbp, rsi	       307	argv.c	FUNCTION_6	WHILE_1
0x4000374	          0x4885db	                           test rbx, rbx	       307	argv.c	FUNCTION_6	WHILE_1
0x4000377	            0x754b	                           jne 0x40003c4	       307	argv.c	FUNCTION_6	WHILE_1
0x4000379	            0xeb6f	                           jmp 0x40003ea	       307	argv.c	FUNCTION_6	WHILE_1
0x400037b	       0xf1f440000	                   nop dword [rax + rax]	       307	argv.c	FUNCTION_6	WHILE_1
0x4000380	           0xfb6d0	                           movzx edx, al	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000383	        0x440fbef0	                          movsx r14d, al	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000387	    0xf68412000000	            test byte [rdx + rdx], 0x40 	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400038f	            0x750d	                           jne 0x400039e	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000391	          0x83e822	                           sub eax, 0x22	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000394	            0x3c3a	                            cmp al, 0x3a	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000396	            0x7718	                            ja 0x40003b0	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x4000398	        0x490fa3c4	                             bt r12, rax	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400039c	            0x7312	                           jae 0x40003b0	       315	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	CALL_1
0x400039e	          0x4889ee	                            mov rsi, rbp	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003a1	      0xbf5c000000	                           mov edi, 0x5c	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003a6	      0xe800000000	                          call 0x40003ab	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003ab	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003ae	            0x7440	                            je 0x40003f0	       316	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_2	IF_3	CALL_2
0x40003b0	          0x4889ee	                            mov rsi, rbp	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003b3	          0x4489f7	                           mov edi, r14d	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003b6	      0xe800000000	                          call 0x40003bb	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003bb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003be	            0x7430	                            je 0x40003f0	       322	argv.c	FUNCTION_6	WHILE_1	WHILE_2	IF_4	CALL_3
0x40003c0	        0x4883c301	                              add rbx, 1	       327	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003c4	           0xfb603	                   movzx eax, byte [rbx]	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003c7	            0x84c0	                             test al, al	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003c9	            0x75b5	                           jne 0x4000380	       311	argv.c	FUNCTION_6	WHILE_1	WHILE_2
0x40003cb	          0x4889ee	                            mov rsi, rbp	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003ce	      0xbf0a000000	                            mov edi, 0xa	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003d3	      0xe800000000	                          call 0x40003d8	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003d8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003db	            0x7413	                            je 0x40003f0	       330	argv.c	FUNCTION_6	WHILE_1	IF_5	CALL_4
0x40003dd	        0x4983c508	                              add r13, 8	       335	argv.c	FUNCTION_6	WHILE_1
0x40003e1	        0x498b5d00	                    mov rbx, qword [r13]	       307	argv.c	FUNCTION_6	WHILE_1
0x40003e5	          0x4885db	                           test rbx, rbx	       307	argv.c	FUNCTION_6	WHILE_1
0x40003e8	            0x75da	                           jne 0x40003c4	       307	argv.c	FUNCTION_6	WHILE_1
0x40003ea	            0x31c0	                            xor eax, eax	       302	argv.c	FUNCTION_6
0x40003ec	            0xeb07	                           jmp 0x40003f5	       302	argv.c	FUNCTION_6
0x40003ee	            0x6690	                                     nop	       302	argv.c	FUNCTION_6
0x40003f0	      0xb801000000	                              mov eax, 1	       305	argv.c	FUNCTION_6	IF_1
0x40003f5	              0x5b	                                 pop rbx	       340	argv.c	FUNCTION_6
0x40003f6	              0x5d	                                 pop rbp	       340	argv.c	FUNCTION_6
0x40003f7	            0x415c	                                 pop r12	       340	argv.c	FUNCTION_6
0x40003f9	            0x415d	                                 pop r13	       340	argv.c	FUNCTION_6
0x40003fb	            0x415e	                                 pop r14	       340	argv.c	FUNCTION_6
0x40003fd	              0xc3	                                     ret	       340	argv.c	FUNCTION_6
0x40003fe	      0xb801000000	                              mov eax, 1	       305	argv.c	FUNCTION_6	IF_1
0x4000403	              0xc3	                                     ret	       340	argv.c	FUNCTION_6
