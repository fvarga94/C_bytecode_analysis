binary_get_symbol_info	WHILE,0:SWITCH,0:CALL,1:functions,0:ELSE,0:DO,0:FOR,0:IF,0	3
0x4000070	          0x4889f7	                            mov rdi, rsi	       202	binary.c	FUNCTION_7
0x4000073	          0x4889d6	                            mov rsi, rdx	       203	binary.c	FUNCTION_7	CALL_1
0x4000076	      0xe900000000	                           jmp 0x400007b	       203	binary.c	FUNCTION_7	CALL_1
binary_object_p	WHILE,0:SWITCH,0:CALL,4:functions,0:ELSE,0:DO,0:FOR,0:IF,3	45
0x4000210	              0x53	                                push rbx	        58	binary.c	FUNCTION_2
0x4000211	    0x4881eca00000	                           sub rsp, 0xa0	        58	binary.c	FUNCTION_2
0x4000218	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	binary.c	FUNCTION_2
0x4000221	    0x488984249800	             mov qword [rsp + 0x98], rax	        58	binary.c	FUNCTION_2
0x4000229	            0x31c0	                            xor eax, eax	        58	binary.c	FUNCTION_2
0x400022b	        0xf6474704	               test byte [rdi + 0x47], 4	        63	binary.c	FUNCTION_2	IF_1
0x400022f	            0x7577	                           jne 0x40002a8	        63	binary.c	FUNCTION_2	IF_1
0x4000231	    0xc787b8000000	               mov dword [rdi + 0xb8], 3	        69	binary.c	FUNCTION_2
0x400023b	          0x4889e6	                            mov rsi, rsp	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x400023e	          0x4889fb	                            mov rbx, rdi	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x4000241	      0xe800000000	                          call 0x4000246	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x4000246	            0x85c0	                           test eax, eax	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x4000248	            0x7876	                            js 0x40002c0	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x400024a	      0xba23010000	                          mov edx, 0x123	        80	binary.c	FUNCTION_2	CALL_4
0x400024f	      0xbe00000000	                              mov esi, 0	        80	binary.c	FUNCTION_2	CALL_4
0x4000254	          0x4889df	                            mov rdi, rbx	        80	binary.c	FUNCTION_2	CALL_4
0x4000257	      0xe800000000	                          call 0x400025c	        80	binary.c	FUNCTION_2	CALL_4
0x400025c	          0x4885c0	                           test rax, rax	        81	binary.c	FUNCTION_2	IF_3
0x400025f	            0x746f	                            je 0x40002d0	        81	binary.c	FUNCTION_2	IF_3
0x4000261	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        84	binary.c	FUNCTION_2
0x4000266	    0x48c740280000	               mov qword [rax + 0x28], 0	        83	binary.c	FUNCTION_2
0x400026e	    0x48c780900000	               mov qword [rax + 0x90], 0	        85	binary.c	FUNCTION_2
0x4000279	        0x48895038	             mov qword [rax + 0x38], rdx	        84	binary.c	FUNCTION_2
0x400027d	    0x488983f80000	             mov qword [rbx + 0xf8], rax	        87	binary.c	FUNCTION_2
0x4000284	        0x488b4308	                mov rax, qword [rbx + 8]	        89	binary.c	FUNCTION_2
0x4000288	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	        90	binary.c	FUNCTION_2
0x4000290	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        90	binary.c	FUNCTION_2
0x4000299	            0x7539	                           jne 0x40002d4	        90	binary.c	FUNCTION_2
0x400029b	    0x4881c4a00000	                           add rsp, 0xa0	        90	binary.c	FUNCTION_2
0x40002a2	              0x5b	                                 pop rbx	        90	binary.c	FUNCTION_2
0x40002a3	              0xc3	                                     ret	        90	binary.c	FUNCTION_2
0x40002a4	         0xf1f4000	                         nop dword [rax]	        90	binary.c	FUNCTION_2
0x40002a8	      0xbf03000000	                              mov edi, 3	        65	binary.c	FUNCTION_2	IF_1	CALL_1
0x40002ad	      0xe800000000	                          call 0x40002b2	        65	binary.c	FUNCTION_2	IF_1	CALL_1
0x40002b2	            0x31c0	                            xor eax, eax	        66	binary.c	FUNCTION_2	IF_1
0x40002b4	            0xebd2	                           jmp 0x4000288	        66	binary.c	FUNCTION_2	IF_1
0x40002b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        66	binary.c	FUNCTION_2	IF_1
0x40002c0	      0xbf01000000	                              mov edi, 1	        74	binary.c	FUNCTION_2	IF_2	CALL_3
0x40002c5	      0xe800000000	                          call 0x40002ca	        74	binary.c	FUNCTION_2	IF_2	CALL_3
0x40002ca	            0x31c0	                            xor eax, eax	        75	binary.c	FUNCTION_2	IF_2
0x40002cc	            0xebba	                           jmp 0x4000288	        75	binary.c	FUNCTION_2	IF_2
0x40002ce	            0x6690	                                     nop	        75	binary.c	FUNCTION_2	IF_2
0x40002d0	            0x31c0	                            xor eax, eax	        82	binary.c	FUNCTION_2	IF_3
0x40002d2	            0xebb4	                           jmp 0x4000288	        82	binary.c	FUNCTION_2	IF_3
0x40002d4	      0xe800000000	                          call 0x40002d9	        90	binary.c	FUNCTION_2
binary_canonicalize_symtab	WHILE,0:SWITCH,0:CALL,4:functions,0:ELSE,0:DO,0:FOR,1:IF,1	57
0x4000110	            0x4155	                                push r13	       150	binary.c	FUNCTION_6
0x4000112	            0x4154	                                push r12	       150	binary.c	FUNCTION_6
0x4000114	          0x4989f4	                            mov r12, rsi	       150	binary.c	FUNCTION_6
0x4000117	              0x55	                                push rbp	       150	binary.c	FUNCTION_6
0x4000118	              0x53	                                push rbx	       150	binary.c	FUNCTION_6
0x4000119	      0xbe90000000	                           mov esi, 0x90	       156	binary.c	FUNCTION_6	CALL_1
0x400011e	          0x4889fd	                            mov rbp, rdi	       150	binary.c	FUNCTION_6
0x4000121	        0x4883ec08	                              sub rsp, 8	       150	binary.c	FUNCTION_6
0x4000125	    0x4c8baff80000	            mov r13, qword [rdi + 0xf8] 	       151	binary.c	FUNCTION_6
0x400012c	      0xe800000000	                          call 0x4000131	       156	binary.c	FUNCTION_6	CALL_1
0x4000131	          0x4885c0	                           test rax, rax	       157	binary.c	FUNCTION_6	IF_1
0x4000134	     0xf84cb000000	                            je 0x4000205	       157	binary.c	FUNCTION_6	IF_1
0x400013a	          0x4889c3	                            mov rbx, rax	       157	binary.c	FUNCTION_6	IF_1
0x400013d	      0xbe00000000	                              mov esi, 0	       162	binary.c	FUNCTION_6	CALL_2
0x4000142	          0x4889ef	                            mov rdi, rbp	       162	binary.c	FUNCTION_6	CALL_2
0x4000145	          0x488928	                    mov qword [rax], rbp	       161	binary.c	FUNCTION_6
0x4000148	      0xe833ffffff	                    call sym.mangle_name	       162	binary.c	FUNCTION_6	CALL_2
0x400014d	    0x48c743100000	               mov qword [rbx + 0x10], 0	       163	binary.c	FUNCTION_6
0x4000155	        0x48894308	                mov qword [rbx + 8], rax	       162	binary.c	FUNCTION_6	CALL_2
0x4000159	      0xbe00000000	                              mov esi, 0	       170	binary.c	FUNCTION_6	CALL_3
0x400015e	    0xc74318020000	               mov dword [rbx + 0x18], 2	       164	binary.c	FUNCTION_6
0x4000165	        0x4c896b20	             mov qword [rbx + 0x20], r13	       165	binary.c	FUNCTION_6
0x4000169	          0x4889ef	                            mov rdi, rbp	       170	binary.c	FUNCTION_6	CALL_3
0x400016c	    0x48c743280000	               mov qword [rbx + 0x28], 0	       166	binary.c	FUNCTION_6
0x4000174	        0x48896b30	             mov qword [rbx + 0x30], rbp	       169	binary.c	FUNCTION_6
0x4000178	      0xe803ffffff	                    call sym.mangle_name	       170	binary.c	FUNCTION_6	CALL_3
0x400017d	        0x48894338	             mov qword [rbx + 0x38], rax	       170	binary.c	FUNCTION_6	CALL_3
0x4000181	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       171	binary.c	FUNCTION_6
0x4000185	      0xbe00000000	                              mov esi, 0	       178	binary.c	FUNCTION_6	CALL_4
0x400018a	    0xc74348020000	               mov dword [rbx + 0x48], 2	       172	binary.c	FUNCTION_6
0x4000191	        0x4c896b50	             mov qword [rbx + 0x50], r13	       173	binary.c	FUNCTION_6
0x4000195	          0x4889ef	                            mov rdi, rbp	       178	binary.c	FUNCTION_6	CALL_4
0x4000198	    0x48c743580000	               mov qword [rbx + 0x58], 0	       174	binary.c	FUNCTION_6
0x40001a0	        0x48896b60	             mov qword [rbx + 0x60], rbp	       177	binary.c	FUNCTION_6
0x40001a4	        0x48894340	             mov qword [rbx + 0x40], rax	       171	binary.c	FUNCTION_6
0x40001a8	      0xe8d3feffff	                    call sym.mangle_name	       178	binary.c	FUNCTION_6	CALL_4
0x40001ad	        0x48894368	             mov qword [rbx + 0x68], rax	       178	binary.c	FUNCTION_6	CALL_4
0x40001b1	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       179	binary.c	FUNCTION_6
0x40001b5	    0xc74378020000	               mov dword [rbx + 0x78], 2	       180	binary.c	FUNCTION_6
0x40001bc	    0x48c783800000	               mov qword [rbx + 0x80], 0	       181	binary.c	FUNCTION_6
0x40001c7	    0x48c783880000	               mov qword [rbx + 0x88], 0	       182	binary.c	FUNCTION_6
0x40001d2	        0x48894370	             mov qword [rbx + 0x70], rax	       179	binary.c	FUNCTION_6
0x40001d6	        0x488d4330	                   lea rax, [rbx + 0x30]	       185	binary.c	FUNCTION_6	FOR_1
0x40001da	        0x49891c24	                    mov qword [r12], rbx	       185	binary.c	FUNCTION_6	FOR_1
0x40001de	        0x4883c360	                           add rbx, 0x60	       185	binary.c	FUNCTION_6	FOR_1
0x40001e2	    0x49c744241800	               mov qword [r12 + 0x18], 0	       186	binary.c	FUNCTION_6
0x40001eb	      0x4989442408	                mov qword [r12 + 8], rax	       185	binary.c	FUNCTION_6	FOR_1
0x40001f0	      0x49895c2410	             mov qword [r12 + 0x10], rbx	       185	binary.c	FUNCTION_6	FOR_1
0x40001f5	      0xb803000000	                              mov eax, 3	       188	binary.c	FUNCTION_6
0x40001fa	        0x4883c408	                              add rsp, 8	       189	binary.c	FUNCTION_6
0x40001fe	              0x5b	                                 pop rbx	       189	binary.c	FUNCTION_6
0x40001ff	              0x5d	                                 pop rbp	       189	binary.c	FUNCTION_6
0x4000200	            0x415c	                                 pop r12	       189	binary.c	FUNCTION_6
0x4000202	            0x415d	                                 pop r13	       189	binary.c	FUNCTION_6
0x4000204	              0xc3	                                     ret	       189	binary.c	FUNCTION_6
0x4000205	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       158	binary.c	FUNCTION_6	IF_1
0x400020c	            0xebec	                           jmp 0x40001fa	       158	binary.c	FUNCTION_6	IF_1
binary_get_symtab_upper_bound	WHILE,0:SWITCH,0:CALL,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0	2
0x4000050	      0xb820000000	                           mov eax, 0x20	       117	binary.c	FUNCTION_4
0x4000055	              0xc3	                                     ret	       117	binary.c	FUNCTION_4
mangle_name	WHILE,0:SWITCH,0:CALL,6:functions,0:ELSE,0:DO,0:FOR,1:IF,2	42
0x4000080	            0x4154	                                push r12	       123	binary.c	FUNCTION_5
0x4000082	              0x55	                                push rbp	       123	binary.c	FUNCTION_5
0x4000083	          0x4889fd	                            mov rbp, rdi	       123	binary.c	FUNCTION_5
0x4000086	              0x53	                                push rbx	       123	binary.c	FUNCTION_5
0x4000087	          0x488b3f	                    mov rdi, qword [rdi]	       128	binary.c	FUNCTION_5	CALL_2
0x400008a	          0x4989f4	                            mov r12, rsi	       123	binary.c	FUNCTION_5
0x400008d	      0xe800000000	                          call 0x4000092	       128	binary.c	FUNCTION_5	CALL_2
0x4000092	          0x4c89e7	                            mov rdi, r12	       129	binary.c	FUNCTION_5	CALL_3
0x4000095	          0x4889c3	                            mov rbx, rax	       128	binary.c	FUNCTION_5	CALL_2
0x4000098	      0xe800000000	                          call 0x400009d	       129	binary.c	FUNCTION_5	CALL_3
0x400009d	      0x488d74030a	              lea rsi, [rbx + rax + 0xa]	       132	binary.c	FUNCTION_5	CALL_4
0x40000a2	          0x4889ef	                            mov rdi, rbp	       132	binary.c	FUNCTION_5	CALL_4
0x40000a5	      0xe800000000	                          call 0x40000aa	       132	binary.c	FUNCTION_5	CALL_4
0x40000aa	          0x4889c3	                            mov rbx, rax	       132	binary.c	FUNCTION_5	CALL_4
0x40000ad	      0xb800000000	                              mov eax, 0	       134	binary.c	FUNCTION_5	IF_1
0x40000b2	          0x4885db	                           test rbx, rbx	       133	binary.c	FUNCTION_5	IF_1
0x40000b5	            0x744c	                            je 0x4000103	       133	binary.c	FUNCTION_5	IF_1
0x40000b7	        0x4c8b4500	                     mov r8, qword [rbp]	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000bd	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000c0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000c5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000cc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000d1	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000d4	      0xe800000000	                          call 0x40000d9	        33	stdio2.h	FUNCTION_10	CALL_1
0x40000d9	           0xfb603	                   movzx eax, byte [rbx]	       139	binary.c	FUNCTION_5	FOR_1
0x40000dc	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x40000de	            0x7420	                            je 0x4000100	       139	binary.c	FUNCTION_5	FOR_1
0x40000e0	          0x4889da	                            mov rdx, rbx	       139	binary.c	FUNCTION_5	FOR_1
0x40000e3	       0xf1f440000	                   nop dword [rax + rax]	       139	binary.c	FUNCTION_5	FOR_1
0x40000e8	    0xf68400000000	            test byte [rax + rax], 0x8c 	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40000f0	            0x7503	                           jne 0x40000f5	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40000f2	          0xc6025f	                    mov byte [rdx], 0x5f	       141	binary.c	FUNCTION_5	FOR_1	IF_2
0x40000f5	        0x4883c201	                              add rdx, 1	       139	binary.c	FUNCTION_5	FOR_1
0x40000f9	           0xfb602	                   movzx eax, byte [rdx]	       139	binary.c	FUNCTION_5	FOR_1
0x40000fc	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x40000fe	            0x75e8	                           jne 0x40000e8	       139	binary.c	FUNCTION_5	FOR_1
0x4000100	          0x4889d8	                            mov rax, rbx	       139	binary.c	FUNCTION_5	FOR_1
0x4000103	              0x5b	                                 pop rbx	       144	binary.c	FUNCTION_5
0x4000104	              0x5d	                                 pop rbp	       144	binary.c	FUNCTION_5
0x4000105	            0x415c	                                 pop r12	       144	binary.c	FUNCTION_5
0x4000107	              0xc3	                                     ret	       144	binary.c	FUNCTION_5
binary_mkobject	WHILE,0:SWITCH,0:CALL,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0	2
0x4000040	      0xb801000000	                              mov eax, 1	        50	binary.c	FUNCTION_1
0x4000045	              0xc3	                                     ret	        50	binary.c	FUNCTION_1
binary_sizeof_headers	WHILE,0:SWITCH,0:CALL,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0	2
0x4000060	            0x31c0	                            xor eax, eax	       302	binary.c	FUNCTION_9
0x4000062	              0xc3	                                     ret	       302	binary.c	FUNCTION_9
