lang_startup	CALL,2:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,0	18
0x4008620	    0x488b05000000	            mov rax, qword [0x04008627] 	      7600	ldlang.c	FUNCTION_175	IF_1
0x4008627	              0x53	                                push rbx	      7599	ldlang.c	FUNCTION_175
0x4008628	          0x4889fb	                            mov rbx, rdi	      7599	ldlang.c	FUNCTION_175
0x400862b	      0x4883781000	               cmp qword [rax + 0x10], 0	      7600	ldlang.c	FUNCTION_175	IF_1
0x4008630	            0x7422	                            je 0x4008654	      7600	ldlang.c	FUNCTION_175	IF_1
0x4008632	      0xba05000000	                              mov edx, 5	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4008637	      0xbe00000000	                              mov esi, 0	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400863c	            0x31ff	                            xor edi, edi	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400863e	      0xe800000000	                          call 0x4008643	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4008643	          0x4889c7	                            mov rdi, rax	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4008646	            0x31c0	                            xor eax, eax	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4008648	      0xe800000000	                          call 0x400864d	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x400864d	    0x488b05000000	            mov rax, qword [0x04008654] 	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4008654	        0x80484904	                 or byte [rax + 0x49], 4	      7606	ldlang.c	FUNCTION_175
0x4008658	        0x48895810	             mov qword [rax + 0x10], rbx	      7604	ldlang.c	FUNCTION_175
0x400865c	        0x48895818	             mov qword [rax + 0x18], rbx	      7605	ldlang.c	FUNCTION_175
0x4008660	              0x5b	                                 pop rbx	      7607	ldlang.c	FUNCTION_175
0x4008661	              0xc3	                                     ret	      7607	ldlang.c	FUNCTION_175
add_excluded_libs	CALL,4:functions,0:WHILE,1:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,0	62
0x4005c90	           0xfbe07	                   movsx eax, byte [rdi]	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005c93	            0x84c0	                             test al, al	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005c95	     0xf84cd000000	                            je 0x4005d68	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005c9b	            0x4155	                                push r13	      2689	ldlang.c	FUNCTION_64
0x4005c9d	            0x4154	                                push r12	      2689	ldlang.c	FUNCTION_64
0x4005c9f	              0x55	                                push rbp	      2689	ldlang.c	FUNCTION_64
0x4005ca0	              0x53	                                push rbx	      2689	ldlang.c	FUNCTION_64
0x4005ca1	          0x4889fd	                            mov rbp, rdi	      2689	ldlang.c	FUNCTION_64
0x4005ca4	        0x4883ec08	                              sub rsp, 8	      2689	ldlang.c	FUNCTION_64
0x4005ca8	     0xf1f84000000	                   nop dword [rax + rax]	      2689	ldlang.c	FUNCTION_64
0x4005cb0	          0x83f82c	                           cmp eax, 0x2c	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cb3	     0xf84a5000000	                            je 0x4005d5e	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cb9	          0x83f83a	                           cmp eax, 0x3a	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cbc	     0xf849c000000	                            je 0x4005d5e	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cc2	          0x4889eb	                            mov rbx, rbp	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cc5	            0xeb13	                           jmp 0x4005cda	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cc7	    0x660f1f840000	                    nop word [rax + rax]	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cd0	          0x83f83a	                           cmp eax, 0x3a	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cd3	            0x7423	                            je 0x4005cf8	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cd5	          0x83f82c	                           cmp eax, 0x2c	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cd8	            0x741e	                            je 0x4005cf8	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005cda	        0x4883c301	                              add rbx, 1	      1104	string2.h	FUNCTION_222	WHILE_1
0x4005cde	           0xfbe03	                   movsx eax, byte [rbx]	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005ce1	            0x84c0	                             test al, al	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005ce3	            0x75eb	                           jne 0x4005cd0	      1103	string2.h	FUNCTION_222	WHILE_1
0x4005ce5	          0x4889ef	                            mov rdi, rbp	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005ce8	      0xe800000000	                          call 0x4005ced	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005ced	      0x488d5c0500	                    lea rbx, [rbp + rax]	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005cf2	    0x660f1f440000	                    nop word [rax + rax]	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005cf8	      0xbf10000000	                           mov edi, 0x10	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x4005cfd	          0x4989dd	                            mov r13, rbx	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005d00	      0xe800000000	                          call 0x4005d05	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x4005d05	          0x4929ed	                            sub r13, rbp	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005d08	          0x4989c4	                            mov r12, rax	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x4005d0b	    0x488b05000000	            mov rax, qword [0x04005d12] 	      2699	ldlang.c	FUNCTION_64	WHILE_1
0x4005d12	        0x498d7d01	                      lea rdi, [r13 + 1]	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005d16	      0x4989442408	                mov qword [r12 + 8], rax	      2699	ldlang.c	FUNCTION_64	WHILE_1
0x4005d1b	      0xe800000000	                          call 0x4005d20	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005d20	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_228	CALL_3
0x4005d23	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_228	CALL_3
0x4005d26	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_228	CALL_3
0x4005d29	        0x49890424	                    mov qword [r12], rax	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005d2d	      0xe800000000	                          call 0x4005d32	        53	string3.h	FUNCTION_228	CALL_3
0x4005d32	          0x803b00	                       cmp byte [rbx], 0	      2704	ldlang.c	FUNCTION_64	WHILE_1	IF_2
0x4005d35	      0x42c6042800	                 mov byte [rax + r13], 0	      2702	ldlang.c	FUNCTION_64	WHILE_1
0x4005d3a	    0x4c8925000000	            mov qword [0x04005d41], r12 	      2703	ldlang.c	FUNCTION_64	WHILE_1
0x4005d41	            0x7410	                            je 0x4005d53	      2704	ldlang.c	FUNCTION_64	WHILE_1	IF_2
0x4005d43	         0xfbe4301	               movsx eax, byte [rbx + 1]	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005d47	        0x488d6b01	                      lea rbp, [rbx + 1]	      2706	ldlang.c	FUNCTION_64	WHILE_1
0x4005d4b	            0x84c0	                             test al, al	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005d4d	     0xf855dffffff	                           jne 0x4005cb0	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005d53	        0x4883c408	                              add rsp, 8	      2708	ldlang.c	FUNCTION_64
0x4005d57	              0x5b	                                 pop rbx	      2708	ldlang.c	FUNCTION_64
0x4005d58	              0x5d	                                 pop rbp	      2708	ldlang.c	FUNCTION_64
0x4005d59	            0x415c	                                 pop r12	      2708	ldlang.c	FUNCTION_64
0x4005d5b	            0x415d	                                 pop r13	      2708	ldlang.c	FUNCTION_64
0x4005d5d	              0xc3	                                     ret	      2708	ldlang.c	FUNCTION_64
0x4005d5e	          0x4885ed	                           test rbp, rbp	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4005d61	            0x7482	                            je 0x4005ce5	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4005d63	          0x4889eb	                            mov rbx, rbp	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4005d66	            0xeb90	                           jmp 0x4005cf8	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x4005d68	            0xf3c3	                                     ret	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
lang_clear_os_map	CALL,0:functions,0:WHILE,0:FOR,1:IF,3:DO,0:SWITCH,0:ELSE,0	22
0x4006200	    0x8b0d00000000	            mov ecx, dword [0x04006206] 	      3955	ldlang.c	FUNCTION_89	IF_1
0x4006206	            0x85c9	                           test ecx, ecx	      3955	ldlang.c	FUNCTION_89	IF_1
0x4006208	            0x7556	                           jne 0x4006260	      3955	ldlang.c	FUNCTION_89	IF_1
0x400620a	    0x488b05000000	            mov rax, qword [0x04006211] 	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4006211	          0x4885c0	                           test rax, rax	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4006214	            0x743c	                            je 0x4006252	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4006216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4006220	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x4006226	            0x85d2	                           test edx, edx	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x4006228	            0x781f	                            js 0x4006249	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x400622a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3967	ldlang.c	FUNCTION_89	FOR_1
0x400622e	          0x4885d2	                           test rdx, rdx	      3968	ldlang.c	FUNCTION_89	FOR_1	IF_3
0x4006231	            0x7416	                            je 0x4006249	      3968	ldlang.c	FUNCTION_89	FOR_1	IF_3
0x4006233	    0x48c782080100	              mov qword [rdx + 0x108], 0	      3972	ldlang.c	FUNCTION_89	FOR_1
0x400623e	    0x48c782100100	              mov qword [rdx + 0x110], 0	      3973	ldlang.c	FUNCTION_89	FOR_1
0x4006249	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3960	ldlang.c	FUNCTION_89	FOR_1
0x400624d	          0x4885c0	                           test rax, rax	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4006250	            0x75ce	                           jne 0x4006220	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4006252	    0xc70500000000	               mov dword [0x0400625c], 1	      3978	ldlang.c	FUNCTION_89
0x400625c	              0xc3	                                     ret	      3978	ldlang.c	FUNCTION_89
0x400625d	           0xf1f00	                         nop dword [rax]	      3978	ldlang.c	FUNCTION_89
0x4006260	            0xf3c3	                                     ret	      3978	ldlang.c	FUNCTION_89
lang_add_unique	CALL,2:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,0:ELSE,0	35
0x400b870	              0x55	                                push rbp	      8647	ldlang.c	FUNCTION_203
0x400b871	              0x53	                                push rbx	      8647	ldlang.c	FUNCTION_203
0x400b872	          0x4889fd	                            mov rbp, rdi	      8647	ldlang.c	FUNCTION_203
0x400b875	        0x4883ec08	                              sub rsp, 8	      8647	ldlang.c	FUNCTION_203
0x400b879	    0x488b1d000000	            mov rbx, qword [0x0400b880] 	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b880	          0x4885db	                           test rbx, rbx	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b883	            0x7513	                           jne 0x400b898	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b885	            0xeb29	                           jmp 0x400b8b0	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b887	    0x660f1f840000	                    nop word [rax + rax]	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b890	          0x488b1b	                    mov rbx, qword [rbx]	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b893	          0x4885db	                           test rbx, rbx	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b896	            0x7418	                            je 0x400b8b0	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400b898	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400b89c	          0x4889ee	                            mov rsi, rbp	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400b89f	      0xe800000000	                          call 0x400b8a4	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400b8a4	            0x85c0	                           test eax, eax	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400b8a6	            0x75e8	                           jne 0x400b890	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400b8a8	        0x4883c408	                              add rsp, 8	      8658	ldlang.c	FUNCTION_203
0x400b8ac	              0x5b	                                 pop rbx	      8658	ldlang.c	FUNCTION_203
0x400b8ad	              0x5d	                                 pop rbp	      8658	ldlang.c	FUNCTION_203
0x400b8ae	              0xc3	                                     ret	      8658	ldlang.c	FUNCTION_203
0x400b8af	              0x90	                                     nop	      8658	ldlang.c	FUNCTION_203
0x400b8b0	      0xbf10000000	                           mov edi, 0x10	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400b8b5	      0xe800000000	                          call 0x400b8ba	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400b8ba	          0x4889ef	                            mov rdi, rbp	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400b8bd	          0x4889c3	                            mov rbx, rax	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400b8c0	      0xe800000000	                          call 0x400b8c5	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400b8c5	        0x48894308	                mov qword [rbx + 8], rax	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400b8c9	    0x488b05000000	            mov rax, qword [0x0400b8d0] 	      8656	ldlang.c	FUNCTION_203
0x400b8d0	    0x48891d000000	            mov qword [0x0400b8d7], rbx 	      8657	ldlang.c	FUNCTION_203
0x400b8d7	          0x488903	                    mov qword [rbx], rax	      8656	ldlang.c	FUNCTION_203
0x400b8da	        0x4883c408	                              add rsp, 8	      8658	ldlang.c	FUNCTION_203
0x400b8de	              0x5b	                                 pop rbx	      8658	ldlang.c	FUNCTION_203
0x400b8df	              0x5d	                                 pop rbp	      8658	ldlang.c	FUNCTION_203
0x400b8e0	              0xc3	                                     ret	      8658	ldlang.c	FUNCTION_203
ldlang_override_segment_assignment	CALL,2:functions,0:WHILE,0:FOR,0:IF,4:DO,0:SWITCH,0:ELSE,0	46
0x4006300	              0x55	                                push rbp	      5561	ldlang.c	FUNCTION_116
0x4006301	              0x53	                                push rbx	      5561	ldlang.c	FUNCTION_116
0x4006302	      0xb801000000	                              mov eax, 1	      5568	ldlang.c	FUNCTION_116	IF_1
0x4006307	        0x4883ec08	                              sub rsp, 8	      5561	ldlang.c	FUNCTION_116
0x400630b	          0x4585c0	                           test r8d, r8d	      5567	ldlang.c	FUNCTION_116	IF_1
0x400630e	            0x7558	                           jne 0x4006368	      5567	ldlang.c	FUNCTION_116	IF_1
0x4006310	          0x4885d2	                           test rdx, rdx	      5571	ldlang.c	FUNCTION_116	IF_2
0x4006313	            0x745b	                            je 0x4006370	      5571	ldlang.c	FUNCTION_116	IF_2
0x4006315	          0x4885c9	                           test rcx, rcx	      5571	ldlang.c	FUNCTION_116	IF_2
0x4006318	            0x7456	                            je 0x4006370	      5571	ldlang.c	FUNCTION_116	IF_2
0x400631a	    0x8b3500000000	            mov esi, dword [0x04006320] 	      5576	ldlang.c	FUNCTION_116	IF_3
0x4006320	            0x85f6	                           test esi, esi	      5576	ldlang.c	FUNCTION_116	IF_3
0x4006322	            0x740b	                            je 0x400632f	      5576	ldlang.c	FUNCTION_116	IF_3
0x4006324	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      5577	ldlang.c	FUNCTION_116	IF_3
0x4006327	          0x337120	             xor esi, dword [rcx + 0x20]	      5577	ldlang.c	FUNCTION_116	IF_3
0x400632a	          0x83e610	                           and esi, 0x10	      5577	ldlang.c	FUNCTION_116	IF_3
0x400632d	            0x7539	                           jne 0x4006368	      5577	ldlang.c	FUNCTION_116	IF_3
0x400632f	          0x4889d0	                            mov rax, rdx	      5577	ldlang.c	FUNCTION_116	IF_3
0x4006332	          0x4889cb	                            mov rbx, rcx	      5577	ldlang.c	FUNCTION_116	IF_3
0x4006335	            0x31d2	                            xor edx, edx	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4006337	          0x488b38	                    mov rdi, qword [rax]	      5584	ldlang.c	FUNCTION_116	CALL_1
0x400633a	            0x31f6	                            xor esi, esi	      5584	ldlang.c	FUNCTION_116	CALL_1
0x400633c	      0xe800000000	                          call 0x4006341	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4006341	          0x488b3b	                    mov rdi, qword [rbx]	      5585	ldlang.c	FUNCTION_116	CALL_2
0x4006344	          0x4889c5	                            mov rbp, rax	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4006347	            0x31d2	                            xor edx, edx	      5585	ldlang.c	FUNCTION_116	CALL_2
0x4006349	            0x31f6	                            xor esi, esi	      5585	ldlang.c	FUNCTION_116	CALL_2
0x400634b	      0xe800000000	                          call 0x4006350	      5585	ldlang.c	FUNCTION_116	CALL_2
0x4006350	          0x4885ed	                           test rbp, rbp	      5588	ldlang.c	FUNCTION_116	IF_4
0x4006353	            0x741b	                            je 0x4006370	      5588	ldlang.c	FUNCTION_116	IF_4
0x4006355	          0x4885c0	                           test rax, rax	      5588	ldlang.c	FUNCTION_116	IF_4
0x4006358	            0x7416	                            je 0x4006370	      5588	ldlang.c	FUNCTION_116	IF_4
0x400635a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5595	ldlang.c	FUNCTION_116
0x400635e	        0x48394540	            cmp qword [rbp + 0x40], rax 	      5595	ldlang.c	FUNCTION_116
0x4006362	           0xf95c0	                                setne al	      5595	ldlang.c	FUNCTION_116
0x4006365	           0xfb6c0	                           movzx eax, al	      5595	ldlang.c	FUNCTION_116
0x4006368	        0x4883c408	                              add rsp, 8	      5596	ldlang.c	FUNCTION_116
0x400636c	              0x5b	                                 pop rbx	      5596	ldlang.c	FUNCTION_116
0x400636d	              0x5d	                                 pop rbp	      5596	ldlang.c	FUNCTION_116
0x400636e	              0xc3	                                     ret	      5596	ldlang.c	FUNCTION_116
0x400636f	              0x90	                                     nop	      5596	ldlang.c	FUNCTION_116
0x4006370	        0x4883c408	                              add rsp, 8	      5596	ldlang.c	FUNCTION_116
0x4006374	            0x31c0	                            xor eax, eax	      5568	ldlang.c	FUNCTION_116	IF_1
0x4006376	              0x5b	                                 pop rbx	      5596	ldlang.c	FUNCTION_116
0x4006377	              0x5d	                                 pop rbp	      5596	ldlang.c	FUNCTION_116
0x4006378	              0xc3	                                     ret	      5596	ldlang.c	FUNCTION_116
section_for_dot	CALL,0:functions,0:WHILE,4:FOR,1:IF,7:DO,0:SWITCH,0:ELSE,1	122
0x4006430	    0x488b35000000	            mov rsi, qword [0x04006437] 	      5943	ldlang.c	FUNCTION_124	IF_1
0x4006437	          0x4885f6	                           test rsi, rsi	      5943	ldlang.c	FUNCTION_124	IF_1
0x400643a	     0xf84a0000000	                            je 0x40064e0	      5943	ldlang.c	FUNCTION_124	IF_1
0x4006440	    0x8b1500000000	            mov edx, dword [0x04006446] 	      5943	ldlang.c	FUNCTION_124	IF_1
0x4006446	            0x85d2	                           test edx, edx	      5943	ldlang.c	FUNCTION_124	IF_1
0x4006448	     0xf8592000000	                           jne 0x40064e0	      5943	ldlang.c	FUNCTION_124	IF_1
0x400644e	    0x488b3d000000	            mov rdi, qword [0x04006455] 	      5943	ldlang.c	FUNCTION_124	IF_1
0x4006455	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      5980	ldlang.c	FUNCTION_124
0x4006459	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x400645c	            0x7517	                           jne 0x4006475	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x400645e	      0xe96d010000	                           jmp 0x40065d0	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4006463	       0xf1f440000	                   nop dword [rax + rax]	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4006468	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5988	ldlang.c	FUNCTION_124	WHILE_3
0x400646c	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x400646f	     0xf845b010000	                            je 0x40065d0	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4006475	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4006478	    0x81e201840000	                         and edx, 0x8401	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x400647e	          0x83fa01	                              cmp edx, 1	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4006481	            0x75e5	                           jne 0x4006468	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4006483	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4006487	          0x4885d2	                           test rdx, rdx	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x400648a	     0xf8420010000	                            je 0x40065b0	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4006490	        0x48394218	            cmp qword [rdx + 0x18], rax 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4006494	            0x75d2	                           jne 0x4006468	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4006496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x40064a0	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064a3	    0x81e201040000	                          and edx, 0x401	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064a9	          0x83fa01	                              cmp edx, 1	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064ac	            0x751c	                           jne 0x40064ca	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064ae	      0xe9f9000000	                           jmp 0x40065ac	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064b3	       0xf1f440000	                   nop dword [rax + rax]	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064b8	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064bb	    0x81e201040000	                          and edx, 0x401	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064c1	          0x83fa01	                              cmp edx, 1	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064c4	     0xf841e010000	                            je 0x40065e8	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x40064ca	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5994	ldlang.c	FUNCTION_124	WHILE_4
0x40064ce	          0x4885c0	                           test rax, rax	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40064d1	            0x75e5	                           jne 0x40064b8	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40064d3	      0xb800000000	                              mov eax, 0	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x40064d8	              0xc3	                                     ret	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x40064d9	     0xf1f80000000	                         nop dword [rax]	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x40064e0	    0x488b15000000	            mov rdx, qword [0x040064e7] 	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064e7	          0x4885d2	                           test rdx, rdx	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064ea	            0x750c	                           jne 0x40064f8	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064ec	            0xeb11	                           jmp 0x40064ff	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064ee	            0x6690	                                     nop	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064f0	          0x488b12	                    mov rdx, qword [rdx]	      5950	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064f3	          0x4885d2	                           test rdx, rdx	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064f6	            0x7407	                            je 0x40064ff	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x40064f8	          0x8b4208	                mov eax, dword [rdx + 8]	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x40064fb	            0x85c0	                           test eax, eax	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x40064fd	            0x75f1	                           jne 0x40064f0	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x40064ff	          0x4885d2	                           test rdx, rdx	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006502	    0x488b3d000000	            mov rdi, qword [0x04006509] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006509	     0xf84f9000000	                            je 0x4006608	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400650f	    0xf68290000000	           test byte [rdx + 0x90], 0x20 	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006516	            0x7428	                            je 0x4006540	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006518	      0xe9f7000000	                           jmp 0x4006614	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400651d	           0xf1f00	                         nop dword [rax]	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006520	        0x483b4118	            cmp rax, qword [rcx + 0x18] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006524	            0x743b	                            je 0x4006561	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006526	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      5961	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400652a	          0x4885d2	                           test rdx, rdx	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400652d	     0xf84d5000000	                            je 0x4006608	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006533	    0xf68290000000	           test byte [rdx + 0x90], 0x20 	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400653a	     0xf85b0000000	                           jne 0x40065f0	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006540	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006544	          0x4885c0	                           test rax, rax	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006547	            0x74dd	                            je 0x4006526	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006549	        0xf6402180	           test byte [rax + 0x21], 0x80 	      5958	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400654d	            0x75d7	                           jne 0x4006526	      5958	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400654f	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006553	          0x4885c9	                           test rcx, rcx	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006556	            0x75c8	                           jne 0x4006520	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006558	    0x483b87980000	            cmp rax, qword [rdi + 0x98] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x400655f	            0x75c5	                           jne 0x4006526	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4006561	          0x4885f6	                           test rsi, rsi	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006564	            0x741a	                            je 0x4006580	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006566	    0xf68290000000	           test byte [rdx + 0x90], 0x20 	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x400656d	     0xf85dbfeffff	                           jne 0x400644e	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006573	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006577	          0x4885c0	                           test rax, rax	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x400657a	     0xf8453ffffff	                            je 0x40064d3	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4006580	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4006583	    0x81e201040000	                          and edx, 0x401	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4006589	          0x83fa01	                              cmp edx, 1	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x400658c	            0x7510	                           jne 0x400659e	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x400658e	            0xeb1c	                           jmp 0x40065ac	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4006590	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4006593	    0x81e201040000	                          and edx, 0x401	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4006599	          0x83fa01	                              cmp edx, 1	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x400659c	            0x7462	                            je 0x4006600	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x400659e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5972	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x40065a2	          0x4885c0	                           test rax, rax	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x40065a5	            0x75e9	                           jne 0x4006590	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x40065a7	      0xe927ffffff	                           jmp 0x40064d3	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x40065ac	            0xf3c3	                                     ret	      5999	ldlang.c	FUNCTION_124
0x40065ae	            0x6690	                                     nop	      5999	ldlang.c	FUNCTION_124
0x40065b0	    0x483987980000	            cmp qword [rdi + 0x98], rax 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x40065b7	     0xf84e3feffff	                            je 0x40064a0	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x40065bd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5988	ldlang.c	FUNCTION_124	WHILE_3
0x40065c1	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x40065c4	     0xf85abfeffff	                           jne 0x4006475	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x40065ca	    0x660f1f440000	                    nop word [rax + rax]	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x40065d0	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	      5990	ldlang.c	FUNCTION_124	IF_6
0x40065d7	          0x4885c0	                           test rax, rax	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40065da	     0xf85c0feffff	                           jne 0x40064a0	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40065e0	      0xe9eefeffff	                           jmp 0x40064d3	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40065e5	           0xf1f00	                         nop dword [rax]	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40065e8	            0xf3c3	                                     ret	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40065ea	    0x660f1f440000	                    nop word [rax + rax]	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x40065f0	          0x4885f6	                           test rsi, rsi	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x40065f3	     0xf855cfeffff	                           jne 0x4006455	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x40065f9	      0xe975ffffff	                           jmp 0x4006573	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x40065fe	            0x6690	                                     nop	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006600	            0xf3c3	                                     ret	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006602	    0x660f1f440000	                    nop word [rax + rax]	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006608	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	      5968	ldlang.c	FUNCTION_124	IF_1	IF_3	ELSE_1
0x400660f	      0xe963ffffff	                           jmp 0x4006577	      5968	ldlang.c	FUNCTION_124	IF_1	IF_3	ELSE_1
0x4006614	          0x4885f6	                           test rsi, rsi	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4006617	     0xf8549ffffff	                           jne 0x4006566	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x400661d	      0xe951ffffff	                           jmp 0x4006573	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
lang_add_output	CALL,0:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,0	9
0x4007750	    0x8b0500000000	            mov eax, dword [0x04007756] 	      6668	ldlang.c	FUNCTION_144	IF_1
0x4007756	            0x85c0	                           test eax, eax	      6668	ldlang.c	FUNCTION_144	IF_1
0x4007758	            0x7406	                            je 0x4007760	      6668	ldlang.c	FUNCTION_144	IF_1
0x400775a	            0x85f6	                           test esi, esi	      6668	ldlang.c	FUNCTION_144	IF_1
0x400775c	            0x7402	                            je 0x4007760	      6668	ldlang.c	FUNCTION_144	IF_1
0x400775e	            0xf3c3	                                     ret	      6668	ldlang.c	FUNCTION_144	IF_1
0x4007760	    0x48893d000000	            mov qword [0x04007767], rdi 	      6670	ldlang.c	FUNCTION_144	IF_1
0x4007767	    0xc70500000000	               mov dword [0x04007771], 1	      6671	ldlang.c	FUNCTION_144	IF_1
0x4007771	              0xc3	                                     ret	      6671	ldlang.c	FUNCTION_144	IF_1
lang_leave_group	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	10
0x4008ca0	    0x488b05000000	            mov rax, qword [0x04008ca7] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x4008ca7	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x4008cad	            0x7617	                           jbe 0x4008cc6	      1025	ldlang.c	FUNCTION_32	IF_1
0x4008caf	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x4008cb3	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x4008cb7	    0x488915000000	            mov qword [0x04008cbe], rdx 	      1027	ldlang.c	FUNCTION_32
0x4008cbe	    0x488905000000	            mov qword [0x04008cc5], rax 	      1027	ldlang.c	FUNCTION_32
0x4008cc5	              0xc3	                                     ret	      1027	ldlang.c	FUNCTION_32
0x4008cc6	              0x50	                                push rax	      7729	ldlang.c	FUNCTION_183
0x4008cc7	      0xe800000000	                          call 0x4008ccc	      7729	ldlang.c	FUNCTION_183
lang_finish	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	2
0x4003920	      0xbf00000000	                              mov edi, 0	      1240	ldlang.c	FUNCTION_38	CALL_1
0x4003925	      0xe900000000	                           jmp 0x400392a	      1240	ldlang.c	FUNCTION_38	CALL_1
lang_init	CALL,8:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	47
0x4004b90	        0x4883ec08	                              sub rsp, 8	      1247	ldlang.c	FUNCTION_39
0x4004b94	            0x31d2	                            xor edx, edx	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004b96	    0x41b800000000	                              mov r8d, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004b9c	      0xb900000000	                              mov ecx, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004ba1	      0xbee8030000	                          mov esi, 0x3e8	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004ba6	      0xbf00000000	                              mov edi, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004bab	      0xe800000000	                          call 0x4004bb0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004bb0	      0xb93d000000	                           mov ecx, 0x3d	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004bb5	      0xbab0000000	                           mov edx, 0xb0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004bba	      0xbe00000000	                              mov esi, 0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004bbf	      0xbf00000000	                              mov edi, 0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004bc4	    0x48c705000000	               mov qword [0x04004bcf], 0	      1250	ldlang.c	FUNCTION_39
0x4004bcf	      0xe800000000	                          call 0x4004bd4	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004bd4	            0x85c0	                           test eax, eax	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004bd6	            0x751b	                           jne 0x4004bf3	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004bd8	            0x31ff	                            xor edi, edi	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004bda	      0xba05000000	                              mov edx, 5	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004bdf	      0xbe00000000	                              mov esi, 0	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004be4	      0xe800000000	                          call 0x4004be9	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004be9	          0x4889c7	                            mov rdi, rax	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004bec	            0x31c0	                            xor eax, eax	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004bee	      0xe800000000	                          call 0x4004bf3	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004bf3	    0x488b05000000	            mov rax, qword [0x04004bfa] 	      1254	ldlang.c	FUNCTION_39	CALL_3
0x4004bfa	      0xb901000000	                              mov ecx, 1	      1163	ldlang.c	FUNCTION_35	CALL_4
0x4004bff	            0x31d2	                            xor edx, edx	      1163	ldlang.c	FUNCTION_35	CALL_4
0x4004c01	      0xbe02000000	                              mov esi, 2	      1163	ldlang.c	FUNCTION_35	CALL_4
0x4004c06	            0x31ff	                            xor edi, edi	      1163	ldlang.c	FUNCTION_35	CALL_4
0x4004c08	    0x48c700000000	                      mov qword [rax], 0	      1009	ldlang.c	FUNCTION_30
0x4004c0f	        0x48894008	                mov qword [rax + 8], rax	      1010	ldlang.c	FUNCTION_30
0x4004c13	    0x48c705000000	               mov qword [0x04004c1e], 0	      1009	ldlang.c	FUNCTION_30
0x4004c1e	    0x48c705000000	               mov qword [0x04004c29], 0	      1010	ldlang.c	FUNCTION_30
0x4004c29	    0x48c705000000	               mov qword [0x04004c34], 0	      1009	ldlang.c	FUNCTION_30
0x4004c34	    0x48c705000000	               mov qword [0x04004c3f], 0	      1010	ldlang.c	FUNCTION_30
0x4004c3f	    0x48c705000000	               mov qword [0x04004c4a], 0	      1009	ldlang.c	FUNCTION_30
0x4004c4a	    0x48c705000000	               mov qword [0x04004c55], 0	      1010	ldlang.c	FUNCTION_30
0x4004c55	      0xe8d6e8ffff	                      call sym.new_afile	      1163	ldlang.c	FUNCTION_35	CALL_4
0x4004c5a	      0xba01000000	                              mov edx, 1	      1262	ldlang.c	FUNCTION_39	CALL_8
0x4004c5f	            0x31f6	                            xor esi, esi	      1262	ldlang.c	FUNCTION_39	CALL_8
0x4004c61	      0xbf00000000	                              mov edi, 0	      1262	ldlang.c	FUNCTION_39	CALL_8
0x4004c66	    0x488905000000	            mov qword [0x04004c6d], rax 	      1259	ldlang.c	FUNCTION_39	CALL_7
0x4004c6d	      0xe800000000	                          call 0x4004c72	      1262	ldlang.c	FUNCTION_39	CALL_8
0x4004c72	    0x48c705000000	               mov qword [0x04004c7d], 0	      1266	ldlang.c	FUNCTION_39
0x4004c7d	    0x488905000000	            mov qword [0x04004c84], rax 	      1261	ldlang.c	FUNCTION_39
0x4004c84	    0x48c740380000	               mov qword [rax + 0x38], 0	      1264	ldlang.c	FUNCTION_39
0x4004c8c	    0x48c705000000	               mov qword [0x04004c97], 0	      1267	ldlang.c	FUNCTION_39
0x4004c97	        0x4883c408	                              add rsp, 8	      1268	ldlang.c	FUNCTION_39
0x4004c9b	              0xc3	                                     ret	      1268	ldlang.c	FUNCTION_39
insert_os_after	CALL,0:functions,0:WHILE,0:FOR,1:IF,4:DO,0:SWITCH,1:ELSE,0	55
0x4000060	          0x4531c0	                            xor r8d, r8d	      1764	ldlang.c	FUNCTION_49
0x4000063	    0x48393d000000	            cmp qword [0x0400006a], rdi 	      1764	ldlang.c	FUNCTION_49
0x400006a	          0x488b17	                    mov rdx, qword [rdi]	      1766	ldlang.c	FUNCTION_49	FOR_1
0x400006d	          0x4889f8	                            mov rax, rdi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000070	        0x410f94c0	                                sete r8b	      1764	ldlang.c	FUNCTION_49
0x4000074	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000077	            0x744a	                            je 0x40000c3	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000079	            0x31f6	                            xor esi, esi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x400007b	        0x837a080f	                cmp dword [rdx + 8], 0xf	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x400007f	            0x7742	                            ja 0x40000c3	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000081	          0x8b4a08	                mov ecx, dword [rdx + 8]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000084	    0xff24cd000000	                       jmp qword [rcx*8]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x400008b	       0xf1f440000	                   nop dword [rax + rax]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000090	          0x4885f6	                           test rsi, rsi	      1773	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1
0x4000093	            0x745b	                            je 0x40000f0	      1773	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1
0x4000095	          0x4531c0	                            xor r8d, r8d	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000098	          0x4889d0	                            mov rax, rdx	      1768	ldlang.c	FUNCTION_49	FOR_1
0x400009b	          0x488b12	                    mov rdx, qword [rdx]	      1768	ldlang.c	FUNCTION_49	FOR_1
0x400009e	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a1	            0x75d8	                           jne 0x400007b	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a3	            0xf3c3	                                     ret	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a5	           0xf1f00	                         nop dword [rax]	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000a8	          0x4889d0	                            mov rax, rdx	      1768	ldlang.c	FUNCTION_49	FOR_1
0x40000ab	          0x488b12	                    mov rdx, qword [rdx]	      1768	ldlang.c	FUNCTION_49	FOR_1
0x40000ae	            0x31f6	                            xor esi, esi	      1794	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x40000b0	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000b3	            0x75c6	                           jne 0x400007b	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000b5	            0xebec	                           jmp 0x40000a3	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000b7	    0x660f1f840000	                    nop word [rax + rax]	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000c0	          0x4889f0	                            mov rax, rsi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000c3	            0xf3c3	                                     ret	      1819	ldlang.c	FUNCTION_49
0x40000c5	           0xf1f00	                         nop dword [rax]	      1819	ldlang.c	FUNCTION_49
0x40000c8	          0x4885f6	                           test rsi, rsi	      1797	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x40000cb	            0x74f6	                            je 0x40000c3	      1797	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x40000cd	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1799	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x40000d1	          0x4885d2	                           test rdx, rdx	      1801	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000d4	            0x74ea	                            je 0x40000c0	      1801	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000d6	    0x4883ba080100	              cmp qword [rdx + 0x108], 0	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000de	            0x74e0	                            je 0x40000c0	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e0	        0xf6422001	               test byte [rdx + 0x20], 1	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e4	        0x480f45c6	                         cmovne rax, rsi	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e8	              0xc3	                                     ret	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000e9	     0xf1f80000000	                         nop dword [rax]	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x40000f0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000f4	        0x83791008	               cmp dword [rcx + 0x10], 8	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000f8	            0x749b	                            je 0x4000095	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000fa	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x40000fe	          0x80392e	                    cmp byte [rcx], 0x2e	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000101	            0x7592	                           jne 0x4000095	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000103	        0x80790100	                   cmp byte [rcx + 1], 0	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000107	            0x758c	                           jne 0x4000095	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000109	          0x4585c0	                           test r8d, r8d	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400010c	            0x7587	                           jne 0x4000095	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400010e	          0x4889c6	                            mov rsi, rax	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000111	            0xeb82	                           jmp 0x4000095	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
lang_for_each_statement_worker	CALL,6:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,1:ELSE,0	51
0x4003730	          0x4885f6	                           test rsi, rsi	       956	ldlang.c	FUNCTION_28	FOR_1
0x4003733	            0x7448	                            je 0x400377d	       956	ldlang.c	FUNCTION_28	FOR_1
0x4003735	              0x55	                                push rbp	       955	ldlang.c	FUNCTION_28
0x4003736	              0x53	                                push rbx	       955	ldlang.c	FUNCTION_28
0x4003737	          0x4889fd	                            mov rbp, rdi	       955	ldlang.c	FUNCTION_28
0x400373a	          0x4889f3	                            mov rbx, rsi	       955	ldlang.c	FUNCTION_28
0x400373d	        0x4883ec08	                              sub rsp, 8	       955	ldlang.c	FUNCTION_28
0x4003741	     0xf1f80000000	                         nop dword [rax]	       955	ldlang.c	FUNCTION_28
0x4003748	          0x4889df	                            mov rdi, rbx	       958	ldlang.c	FUNCTION_28	FOR_1	CALL_1
0x400374b	            0xffd5	                                call rbp	       958	ldlang.c	FUNCTION_28	FOR_1	CALL_1
0x400374d	        0x837b080f	                cmp dword [rbx + 8], 0xf	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x4003751	            0x776d	                            ja 0x40037c0	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x4003753	          0x8b4308	                mov eax, dword [rbx + 8]	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x4003756	    0xff24c5000000	                       jmp qword [rax*8]	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x400375d	           0xf1f00	                         nop dword [rax]	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x4003760	    0x488b35000000	            mov rsi, qword [0x04003767] 	       963	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_2
0x4003767	          0x4889ef	                            mov rdi, rbp	       963	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_2
0x400376a	      0xe800000000	                          call 0x400376f	       963	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_2
0x400376f	          0x488b1b	                    mov rbx, qword [rbx]	       956	ldlang.c	FUNCTION_28	FOR_1
0x4003772	          0x4885db	                           test rbx, rbx	       956	ldlang.c	FUNCTION_28	FOR_1
0x4003775	            0x75d1	                           jne 0x4003748	       956	ldlang.c	FUNCTION_28	FOR_1
0x4003777	        0x4883c408	                              add rsp, 8	       996	ldlang.c	FUNCTION_28
0x400377b	              0x5b	                                 pop rbx	       996	ldlang.c	FUNCTION_28
0x400377c	              0x5d	                                 pop rbp	       996	ldlang.c	FUNCTION_28
0x400377d	            0xf3c3	                                     ret	       996	ldlang.c	FUNCTION_28
0x400377f	              0x90	                                     nop	       996	ldlang.c	FUNCTION_28
0x4003780	    0x83bb84000000	cmp dword [rbx + 0x84], 0xffffffffffffffff	       966	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1
0x4003787	            0x74e6	                            je 0x400376f	       966	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1
0x4003789	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       975	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_5
0x400378d	          0x4889ef	                            mov rdi, rbp	       975	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_5
0x4003790	      0xe800000000	                          call 0x4003795	       975	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_5
0x4003795	          0x488b1b	                    mov rbx, qword [rbx]	       956	ldlang.c	FUNCTION_28	FOR_1
0x4003798	          0x4885db	                           test rbx, rbx	       956	ldlang.c	FUNCTION_28	FOR_1
0x400379b	            0x75ab	                           jne 0x4003748	       956	ldlang.c	FUNCTION_28	FOR_1
0x400379d	            0xebd8	                           jmp 0x4003777	       956	ldlang.c	FUNCTION_28	FOR_1
0x400379f	              0x90	                                     nop	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037a0	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       971	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_4
0x40037a4	          0x4889ef	                            mov rdi, rbp	       971	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_4
0x40037a7	      0xe800000000	                          call 0x40037ac	       971	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_4
0x40037ac	          0x488b1b	                    mov rbx, qword [rbx]	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037af	          0x4885db	                           test rbx, rbx	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037b2	            0x7594	                           jne 0x4003748	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037b4	            0xebc1	                           jmp 0x4003777	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037c0	      0xbee0030000	                          mov esi, 0x3e0	       992	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_6
0x40037c5	      0xbf00000000	                              mov edi, 0	       992	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_6
0x40037ca	      0xe800000000	                          call 0x40037cf	       992	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_6
0x40037cf	          0x488b1b	                    mov rbx, qword [rbx]	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037d2	          0x4885db	                           test rbx, rbx	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037d5	     0xf856dffffff	                           jne 0x4003748	       956	ldlang.c	FUNCTION_28	FOR_1
0x40037db	            0xeb9a	                           jmp 0x4003777	       956	ldlang.c	FUNCTION_28	FOR_1
lang_output_section_statement_lookup	CALL,6:functions,0:WHILE,0:FOR,0:IF,7:DO,1:SWITCH,0:ELSE,1	96
0x4004a50	            0x4157	                                push r15	      1429	ldlang.c	FUNCTION_45
0x4004a52	            0x4156	                                push r14	      1429	ldlang.c	FUNCTION_45
0x4004a54	            0x31c9	                            xor ecx, ecx	      1432	ldlang.c	FUNCTION_45
0x4004a56	            0x4155	                                push r13	      1429	ldlang.c	FUNCTION_45
0x4004a58	            0x4154	                                push r12	      1429	ldlang.c	FUNCTION_45
0x4004a5a	          0x4989fe	                            mov r14, rdi	      1429	ldlang.c	FUNCTION_45
0x4004a5d	              0x55	                                push rbp	      1429	ldlang.c	FUNCTION_45
0x4004a5e	              0x53	                                push rbx	      1429	ldlang.c	FUNCTION_45
0x4004a5f	            0x89f5	                            mov ebp, esi	      1429	ldlang.c	FUNCTION_45
0x4004a61	          0x4889fe	                            mov rsi, rdi	      1432	ldlang.c	FUNCTION_45
0x4004a64	      0xbf00000000	                              mov edi, 0	      1432	ldlang.c	FUNCTION_45
0x4004a69	          0x4189d7	                           mov r15d, edx	      1429	ldlang.c	FUNCTION_45
0x4004a6c	        0x4883ec08	                              sub rsp, 8	      1429	ldlang.c	FUNCTION_45
0x4004a70	      0xe800000000	                          call 0x4004a75	      1432	ldlang.c	FUNCTION_45
0x4004a75	          0x4885c0	                           test rax, rax	      1435	ldlang.c	FUNCTION_45	IF_1
0x4004a78	     0xf84b2000000	                            je 0x4004b30	      1435	ldlang.c	FUNCTION_45	IF_1
0x4004a7e	        0x4c8b6048	            mov r12, qword [rax + 0x48] 	      1442	ldlang.c	FUNCTION_45	IF_3
0x4004a82	          0x4889c3	                            mov rbx, rax	      1442	ldlang.c	FUNCTION_45	IF_3
0x4004a85	          0x4d85e4	                           test r12, r12	      1442	ldlang.c	FUNCTION_45	IF_3
0x4004a88	     0xf84d2000000	                            je 0x4004b60	      1442	ldlang.c	FUNCTION_45	IF_3
0x4004a8e	          0x4585ff	                         test r15d, r15d	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004a91	            0x7476	                            je 0x4004b09	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004a93	    0x81fd7e010000	                          cmp ebp, 0x17e	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004a99	            0x756e	                           jne 0x4004b09	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004a9b	            0x31ff	                            xor edi, edi	      1471	ldlang.c	FUNCTION_45	IF_3
0x4004a9d	          0x4c89e2	                            mov rdx, r12	      1471	ldlang.c	FUNCTION_45	IF_3
0x4004aa0	      0xbe00000000	                              mov esi, 0	      1471	ldlang.c	FUNCTION_45	IF_3
0x4004aa5	      0xe886b7ffff	call sym.output_section_statement_newfunc	      1471	ldlang.c	FUNCTION_45	IF_3
0x4004aaa	          0x4885c0	                           test rax, rax	      1475	ldlang.c	FUNCTION_45	IF_3	IF_7
0x4004aad	     0xf84b5000000	                            je 0x4004b68	      1475	ldlang.c	FUNCTION_45	IF_3	IF_7
0x4004ab3	          0x488b13	                    mov rdx, qword [rbx]	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004ab6	          0x488910	                    mov qword [rax], rdx	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004ab9	        0x488b5308	                mov rdx, qword [rbx + 8]	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004abd	        0x48895008	                mov qword [rax + 8], rdx	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004ac1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004ac5	        0x48895010	             mov qword [rax + 0x10], rdx	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004ac9	          0x488903	                    mov qword [rbx], rax	      1481	ldlang.c	FUNCTION_45	IF_3
0x4004acc	        0x4c8d6818	                   lea r13, [rax + 0x18]	      1486	ldlang.c	FUNCTION_45
0x4004ad0	        0x4c896048	             mov qword [rax + 0x48], r12	      1484	ldlang.c	FUNCTION_45
0x4004ad4	    0x89a89c000000	             mov dword [rax + 0x9c], ebp	      1485	ldlang.c	FUNCTION_45
0x4004ada	        0x4883c408	                              add rsp, 8	      1487	ldlang.c	FUNCTION_45
0x4004ade	          0x4c89e8	                            mov rax, r13	      1487	ldlang.c	FUNCTION_45
0x4004ae1	              0x5b	                                 pop rbx	      1487	ldlang.c	FUNCTION_45
0x4004ae2	              0x5d	                                 pop rbp	      1487	ldlang.c	FUNCTION_45
0x4004ae3	            0x415c	                                 pop r12	      1487	ldlang.c	FUNCTION_45
0x4004ae5	            0x415d	                                 pop r13	      1487	ldlang.c	FUNCTION_45
0x4004ae7	            0x415e	                                 pop r14	      1487	ldlang.c	FUNCTION_45
0x4004ae9	            0x415f	                                 pop r15	      1487	ldlang.c	FUNCTION_45
0x4004aeb	              0xc3	                                     ret	      1487	ldlang.c	FUNCTION_45
0x4004aec	         0xf1f4000	                         nop dword [rax]	      1487	ldlang.c	FUNCTION_45
0x4004af0	            0x85ed	                           test ebp, ebp	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004af2	            0x7504	                           jne 0x4004af8	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004af4	            0x85c0	                           test eax, eax	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004af6	            0x791b	                           jns 0x4004b13	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004af8	          0x488b03	                    mov rax, qword [rbx]	      1462	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1
0x4004afb	          0x4885c0	                           test rax, rax	      1465	ldlang.c	FUNCTION_45	IF_3
0x4004afe	            0x7420	                            je 0x4004b20	      1465	ldlang.c	FUNCTION_45	IF_3
0x4004b00	        0x4c3b6048	            cmp r12, qword [rax + 0x48] 	      1465	ldlang.c	FUNCTION_45	IF_3
0x4004b04	            0x751a	                           jne 0x4004b20	      1465	ldlang.c	FUNCTION_45	IF_3
0x4004b06	          0x4889c3	                            mov rbx, rax	      1465	ldlang.c	FUNCTION_45	IF_3
0x4004b09	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1457	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004b0f	            0x39c5	                            cmp ebp, eax	      1457	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004b11	            0x75dd	                           jne 0x4004af0	      1457	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004b13	        0x4c8d6b18	                   lea r13, [rbx + 0x18]	      1460	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004b17	            0xebc1	                           jmp 0x4004ada	      1460	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004b19	     0xf1f80000000	                         nop dword [rax]	      1460	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x4004b20	          0x4531ed	                          xor r13d, r13d	      1439	ldlang.c	FUNCTION_45	IF_1
0x4004b23	          0x4585ff	                         test r15d, r15d	      1467	ldlang.c	FUNCTION_45	IF_3	IF_6
0x4004b26	            0x74b2	                            je 0x4004ada	      1467	ldlang.c	FUNCTION_45	IF_3	IF_6
0x4004b28	      0xe96effffff	                           jmp 0x4004a9b	      1467	ldlang.c	FUNCTION_45	IF_3	IF_6
0x4004b2d	           0xf1f00	                         nop dword [rax]	      1467	ldlang.c	FUNCTION_45	IF_3	IF_6
0x4004b30	          0x4531ed	                          xor r13d, r13d	      1439	ldlang.c	FUNCTION_45	IF_1
0x4004b33	          0x4585ff	                         test r15d, r15d	      1437	ldlang.c	FUNCTION_45	IF_1	IF_2
0x4004b36	            0x74a2	                            je 0x4004ada	      1437	ldlang.c	FUNCTION_45	IF_1	IF_2
0x4004b38	            0x31ff	                            xor edi, edi	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b3a	      0xba05000000	                              mov edx, 5	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b3f	      0xbe00000000	                              mov esi, 0	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b44	      0xe800000000	                          call 0x4004b49	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b49	          0x4c89f6	                            mov rsi, r14	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b4c	          0x4889c7	                            mov rdi, rax	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b4f	            0x31c0	                            xor eax, eax	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b51	      0xe800000000	                          call 0x4004b56	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b56	            0xeb82	                           jmp 0x4004ada	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b58	     0xf1f84000000	                   nop dword [rax + rax]	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b60	          0x4d89f4	                            mov r12, r14	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b63	      0xe964ffffff	                           jmp 0x4004acc	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004b68	      0xba05000000	                              mov edx, 5	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b6d	      0xbe00000000	                              mov esi, 0	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b72	            0x31ff	                            xor edi, edi	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b74	      0xe800000000	                          call 0x4004b79	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b79	          0x4c89e6	                            mov rsi, r12	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b7c	          0x4889c7	                            mov rdi, rax	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b7f	            0x31c0	                            xor eax, eax	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b81	      0xe800000000	                          call 0x4004b86	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004b86	          0x4531ed	                          xor r13d, r13d	      1478	ldlang.c	FUNCTION_45	IF_3	IF_7
0x4004b89	      0xe94cffffff	                           jmp 0x4004ada	      1478	ldlang.c	FUNCTION_45	IF_3	IF_7
lang_print_memory_usage	CALL,2:functions,0:WHILE,0:FOR,1:IF,0:DO,0:SWITCH,0:ELSE,0	63
0x400ba90	              0x55	                                push rbp	      8774	ldlang.c	FUNCTION_209
0x400ba91	              0x53	                                push rbx	      8774	ldlang.c	FUNCTION_209
0x400ba92	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_48
0x400ba94	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_48
0x400ba99	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_48
0x400ba9e	        0x4883ec08	                              sub rsp, 8	      8774	ldlang.c	FUNCTION_209
0x400baa2	      0xe800000000	                          call 0x400baa7	       104	stdio2.h	CALL_48
0x400baa7	    0x488b2d000000	            mov rbp, qword [0x0400baae] 	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400baae	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400bab3	            0x7555	                           jne 0x400bb0a	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400bab5	      0xe9c6000000	                           jmp 0x400bb80	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400baba	    0x660f1f440000	                    nop word [rax + rax]	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400bac0	        0x660fefc0	                         pxor xmm0, xmm0	       104	stdio2.h	CALL_48
0x400bac4	      0xf2480f2ac3	                      cvtsi2sd xmm0, rbx	       104	stdio2.h	CALL_48
0x400bac9	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       104	stdio2.h	CALL_48
0x400bacd	    0xf20f59050000	          mulsd xmm0, qword [0x0400bad5]	       104	stdio2.h	CALL_48
0x400bad5	          0x4885c0	                           test rax, rax	       104	stdio2.h	CALL_48
0x400bad8	     0xf8882000000	                            js 0x400bb60	       104	stdio2.h	CALL_48
0x400bade	        0x660fefc9	                         pxor xmm1, xmm1	       104	stdio2.h	CALL_48
0x400bae2	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	       104	stdio2.h	CALL_48
0x400bae7	        0xf20f5ec1	                        divsd xmm0, xmm1	       104	stdio2.h	CALL_48
0x400baeb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_48
0x400baf0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_48
0x400baf5	      0xb801000000	                              mov eax, 1	       104	stdio2.h	CALL_48
0x400bafa	      0xe800000000	                          call 0x400baff	       104	stdio2.h	CALL_48
0x400baff	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400bb03	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400bb08	            0x7476	                            je 0x400bb80	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400bb0a	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	      8780	ldlang.c	FUNCTION_209	FOR_1
0x400bb0e	        0x482b5d20	             sub rbx, qword [rbp + 0x20]	      8780	ldlang.c	FUNCTION_209	FOR_1
0x400bb12	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_48
0x400bb17	        0x488b5500	                    mov rdx, qword [rbp]	       104	stdio2.h	CALL_48
0x400bb1b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_48
0x400bb20	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_48
0x400bb22	      0xe800000000	                          call 0x400bb27	       104	stdio2.h	CALL_48
0x400bb27	          0x4889df	                            mov rdi, rbx	      8784	ldlang.c	FUNCTION_209	FOR_1	CALL_1
0x400bb2a	      0xe8f156ffff	         call sym.lang_print_memory_size	      8784	ldlang.c	FUNCTION_209	FOR_1	CALL_1
0x400bb2f	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      8785	ldlang.c	FUNCTION_209	FOR_1	CALL_2
0x400bb33	      0xe8e856ffff	         call sym.lang_print_memory_size	      8785	ldlang.c	FUNCTION_209	FOR_1	CALL_2
0x400bb38	          0x4885db	                           test rbx, rbx	       104	stdio2.h	CALL_48
0x400bb3b	            0x7983	                           jns 0x400bac0	       104	stdio2.h	CALL_48
0x400bb3d	          0x4889d8	                            mov rax, rbx	       104	stdio2.h	CALL_48
0x400bb40	        0x660fefc0	                         pxor xmm0, xmm0	       104	stdio2.h	CALL_48
0x400bb44	          0x48d1e8	                              shr rax, 1	       104	stdio2.h	CALL_48
0x400bb47	          0x83e301	                              and ebx, 1	       104	stdio2.h	CALL_48
0x400bb4a	          0x4809d8	                             or rax, rbx	       104	stdio2.h	CALL_48
0x400bb4d	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       104	stdio2.h	CALL_48
0x400bb52	        0xf20f58c0	                        addsd xmm0, xmm0	       104	stdio2.h	CALL_48
0x400bb56	      0xe96effffff	                           jmp 0x400bac9	       104	stdio2.h	CALL_48
0x400bb5b	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_48
0x400bb60	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_48
0x400bb63	        0x660fefc9	                         pxor xmm1, xmm1	       104	stdio2.h	CALL_48
0x400bb67	          0x48d1ea	                              shr rdx, 1	       104	stdio2.h	CALL_48
0x400bb6a	          0x83e001	                              and eax, 1	       104	stdio2.h	CALL_48
0x400bb6d	          0x4809c2	                             or rdx, rax	       104	stdio2.h	CALL_48
0x400bb70	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       104	stdio2.h	CALL_48
0x400bb75	        0xf20f58c9	                        addsd xmm1, xmm1	       104	stdio2.h	CALL_48
0x400bb79	      0xe969ffffff	                           jmp 0x400bae7	       104	stdio2.h	CALL_48
0x400bb7e	            0x6690	                                     nop	       104	stdio2.h	CALL_48
0x400bb80	        0x4883c408	                              add rsp, 8	      8791	ldlang.c	FUNCTION_209
0x400bb84	              0x5b	                                 pop rbx	      8791	ldlang.c	FUNCTION_209
0x400bb85	              0x5d	                                 pop rbp	      8791	ldlang.c	FUNCTION_209
0x400bb86	              0xc3	                                     ret	      8791	ldlang.c	FUNCTION_209
one_lang_size_sections_pass	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	8
0x4006380	    0x830500000000	               add dword [0x04006387], 1	      5601	ldlang.c	FUNCTION_117
0x4006387	          0x4189f1	                            mov r9d, esi	      5600	ldlang.c	FUNCTION_117
0x400638a	    0x488b35000000	            mov rsi, qword [0x04006391] 	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4006391	          0x4989f8	                             mov r8, rdi	      5600	ldlang.c	FUNCTION_117
0x4006394	            0x31c9	                            xor ecx, ecx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4006396	            0x31d2	                            xor edx, edx	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4006398	      0xbf00000000	                              mov edi, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x400639d	      0xe9fed6ffff	            jmp sym.lang_size_sections_1	      5602	ldlang.c	FUNCTION_117	CALL_1
lang_section_start	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	25
0x4008390	            0x4155	                                push r13	      7475	ldlang.c	FUNCTION_165
0x4008392	            0x4154	                                push r12	      7475	ldlang.c	FUNCTION_165
0x4008394	          0x4989fd	                            mov r13, rdi	      7475	ldlang.c	FUNCTION_165
0x4008397	              0x55	                                push rbp	      7475	ldlang.c	FUNCTION_165
0x4008398	              0x53	                                push rbx	      7475	ldlang.c	FUNCTION_165
0x4008399	      0xbf28000000	                           mov edi, 0x28	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400839e	          0x4889d5	                            mov rbp, rdx	      7475	ldlang.c	FUNCTION_165
0x40083a1	          0x4989f4	                            mov r12, rsi	      7475	ldlang.c	FUNCTION_165
0x40083a4	        0x4883ec08	                              sub rsp, 8	      7475	ldlang.c	FUNCTION_165
0x40083a8	    0x488b1d000000	            mov rbx, qword [0x040083af] 	      7478	ldlang.c	FUNCTION_165
0x40083af	      0xe800000000	                          call 0x40083b4	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40083b4	    0xc74008030000	                  mov dword [rax + 8], 3	      1040	ldlang.c	FUNCTION_33
0x40083bb	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x40083c2	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x40083c6	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x40083c9	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x40083cd	        0x4c896810	             mov qword [rax + 0x10], r13	      7479	ldlang.c	FUNCTION_165
0x40083d1	        0x4c896018	             mov qword [rax + 0x18], r12	      7480	ldlang.c	FUNCTION_165
0x40083d5	        0x48896820	             mov qword [rax + 0x20], rbp	      7481	ldlang.c	FUNCTION_165
0x40083d9	        0x4883c408	                              add rsp, 8	      7482	ldlang.c	FUNCTION_165
0x40083dd	              0x5b	                                 pop rbx	      7482	ldlang.c	FUNCTION_165
0x40083de	              0x5d	                                 pop rbp	      7482	ldlang.c	FUNCTION_165
0x40083df	            0x415c	                                 pop r12	      7482	ldlang.c	FUNCTION_165
0x40083e1	            0x415d	                                 pop r13	      7482	ldlang.c	FUNCTION_165
0x40083e3	              0xc3	                                     ret	      7482	ldlang.c	FUNCTION_165
lang_set_flags	CALL,2:functions,0:WHILE,1:FOR,0:IF,0:DO,0:SWITCH,1:ELSE,0	69
0x4006630	            0x4156	                                push r14	      6561	ldlang.c	FUNCTION_140
0x4006632	            0x4155	                                push r13	      6561	ldlang.c	FUNCTION_140
0x4006634	        0x488d4748	                   lea rax, [rdi + 0x48]	      6564	ldlang.c	FUNCTION_140
0x4006638	            0x4154	                                push r12	      6561	ldlang.c	FUNCTION_140
0x400663a	              0x55	                                push rbp	      6561	ldlang.c	FUNCTION_140
0x400663b	          0x4889f5	                            mov rbp, rsi	      6561	ldlang.c	FUNCTION_140
0x400663e	              0x53	                                push rbx	      6561	ldlang.c	FUNCTION_140
0x400663f	           0xfb636	                   movzx esi, byte [rsi]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4006642	        0x4c8d674c	                   lea r12, [rdi + 0x4c]	      6564	ldlang.c	FUNCTION_140
0x4006646	            0x85d2	                           test edx, edx	      6564	ldlang.c	FUNCTION_140
0x4006648	        0x4c0f44e0	                          cmove r12, rax	      6564	ldlang.c	FUNCTION_140
0x400664c	          0x4084f6	                           test sil, sil	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x400664f	            0x743c	                            je 0x400668d	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4006651	          0x4989fe	                            mov r14, rdi	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4006654	          0x4189d5	                           mov r13d, edx	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4006657	    0x660f1f840000	                    nop word [rax + rax]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4006660	          0x8d46df	                   lea eax, [rsi - 0x21]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006663	            0x3c57	                            cmp al, 0x57	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006665	     0xf878d000000	                            ja 0x40066f8	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x400666b	           0xfb6c0	                           movzx eax, al	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x400666e	    0xff24c5000000	                       jmp qword [rax*8]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006675	           0xf1f00	                         nop dword [rax]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006678	      0x41830c2410	                    or dword [r12], 0x10	      6590	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x400667d	           0xf1f00	                         nop dword [rax]	      6590	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006680	        0x4883c501	                              add rbp, 1	      6603	ldlang.c	FUNCTION_140	WHILE_1
0x4006684	         0xfb67500	                   movzx esi, byte [rbp]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4006688	          0x4084f6	                           test sil, sil	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x400668b	            0x75d3	                           jne 0x4006660	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x400668d	              0x5b	                                 pop rbx	      6605	ldlang.c	FUNCTION_140
0x400668e	              0x5d	                                 pop rbp	      6605	ldlang.c	FUNCTION_140
0x400668f	            0x415c	                                 pop r12	      6605	ldlang.c	FUNCTION_140
0x4006691	            0x415d	                                 pop r13	      6605	ldlang.c	FUNCTION_140
0x4006693	            0x415e	                                 pop r14	      6605	ldlang.c	FUNCTION_140
0x4006695	              0xc3	                                     ret	      6605	ldlang.c	FUNCTION_140
0x4006696	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6605	ldlang.c	FUNCTION_140
0x40066a0	      0x41830c2420	                    or dword [r12], 0x20	      6586	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066a5	            0xebd9	                           jmp 0x4006680	      6587	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066a7	    0x660f1f840000	                    nop word [rax + rax]	      6587	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066b0	      0x41830c2408	                       or dword [r12], 8	      6582	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066b5	            0xebc9	                           jmp 0x4006680	      6583	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066b7	    0x660f1f840000	                    nop word [rax + rax]	      6583	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066c0	      0x41830c2402	                       or dword [r12], 2	      6595	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066c5	            0xebb9	                           jmp 0x4006680	      6596	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066c7	    0x660f1f840000	                    nop word [rax + rax]	      6596	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066d0	      0x41830c2401	                       or dword [r12], 1	      6578	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066d5	            0xeba9	                           jmp 0x4006680	      6579	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066d7	    0x660f1f840000	                    nop word [rax + rax]	      6579	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066e0	            0x31c0	                            xor eax, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066e2	          0x4585ed	                         test r13d, r13d	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066e5	           0xf94c0	                                 sete al	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066e8	            0x7536	                           jne 0x4006720	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066ea	        0x4d8d664c	                   lea r12, [r14 + 0x4c]	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066ee	          0x4189c5	                           mov r13d, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066f1	            0xeb8d	                           jmp 0x4006680	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066f3	       0xf1f440000	                   nop dword [rax + rax]	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x40066f8	        0x400fbede	                          movsx ebx, sil	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x40066fc	            0x31ff	                            xor edi, edi	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x40066fe	      0xba05000000	                              mov edx, 5	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4006703	      0xbe00000000	                              mov esi, 0	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4006708	      0xe800000000	                          call 0x400670d	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x400670d	            0x89da	                            mov edx, ebx	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x400670f	          0x4889c7	                            mov rdi, rax	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4006712	            0x89de	                            mov esi, ebx	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4006714	            0x31c0	                            xor eax, eax	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4006716	      0xe800000000	                          call 0x400671b	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x400671b	      0xe960ffffff	                           jmp 0x4006680	      6601	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006720	        0x4d8d6648	                   lea r12, [r14 + 0x48]	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006724	          0x4189c5	                           mov r13d, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4006727	      0xe954ffffff	                           jmp 0x4006680	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
lang_add_entry	CALL,0:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,0	10
0x40083f0	    0x48833d000000	               cmp qword [0x040083f8], 0	      7493	ldlang.c	FUNCTION_166	IF_1
0x40083f8	            0x740e	                            je 0x4008408	      7493	ldlang.c	FUNCTION_166	IF_1
0x40083fa	            0x85f6	                           test esi, esi	      7493	ldlang.c	FUNCTION_166	IF_1
0x40083fc	            0x750a	                           jne 0x4008408	      7493	ldlang.c	FUNCTION_166	IF_1
0x40083fe	    0x8b0500000000	            mov eax, dword [0x04008404] 	      7494	ldlang.c	FUNCTION_166	IF_1
0x4008404	            0x85c0	                           test eax, eax	      7494	ldlang.c	FUNCTION_166	IF_1
0x4008406	            0x750d	                           jne 0x4008415	      7494	ldlang.c	FUNCTION_166	IF_1
0x4008408	    0x48893d000000	            mov qword [0x0400840f], rdi 	      7496	ldlang.c	FUNCTION_166	IF_1
0x400840f	    0x893500000000	            mov dword [0x04008415], esi 	      7497	ldlang.c	FUNCTION_166	IF_1
0x4008415	            0xf3c3	                                     ret	      7497	ldlang.c	FUNCTION_166	IF_1
strcut	CALL,1:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,0:ELSE,0	26
0x4000a10	              0x55	                                push rbp	      2958	ldlang.c	FUNCTION_70
0x4000a11	              0x53	                                push rbx	      2958	ldlang.c	FUNCTION_70
0x4000a12	          0x4889f5	                            mov rbp, rsi	      2958	ldlang.c	FUNCTION_70
0x4000a15	        0x4883ec08	                              sub rsp, 8	      2958	ldlang.c	FUNCTION_70
0x4000a19	      0xe800000000	                          call 0x4000a1e	      2959	ldlang.c	FUNCTION_70
0x4000a1e	          0x4885c0	                           test rax, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4000a21	            0x7432	                            je 0x4000a55	      2961	ldlang.c	FUNCTION_70	IF_1
0x4000a23	          0x4889c3	                            mov rbx, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4000a26	          0x4889ef	                            mov rdi, rbp	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a29	      0xe800000000	                          call 0x4000a2e	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a2e	          0x4801d8	                            add rax, rbx	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a31	           0xfb610	                   movzx edx, byte [rax]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a34	            0x84d2	                             test dl, dl	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a36	            0x741a	                            je 0x4000a52	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a38	     0xf1f84000000	                   nop dword [rax + rax]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a40	        0x4883c301	                              add rbx, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4000a44	        0x4883c001	                              add rax, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4000a48	          0x8853ff	                  mov byte [rbx - 1], dl	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4000a4b	           0xfb610	                   movzx edx, byte [rax]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a4e	            0x84d2	                             test dl, dl	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a50	            0x75ee	                           jne 0x4000a40	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4000a52	          0xc60300	                       mov byte [rbx], 0	      2968	ldlang.c	FUNCTION_70	IF_1
0x4000a55	        0x4883c408	                              add rsp, 8	      2970	ldlang.c	FUNCTION_70
0x4000a59	              0x5b	                                 pop rbx	      2970	ldlang.c	FUNCTION_70
0x4000a5a	              0x5d	                                 pop rbp	      2970	ldlang.c	FUNCTION_70
0x4000a5b	              0xc3	                                     ret	      2970	ldlang.c	FUNCTION_70
lang_final	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	13
0x4007910	              0x53	                                push rbx	      6740	ldlang.c	FUNCTION_147
0x4007911	    0x488b1d000000	            mov rbx, qword [0x04007918] 	      6743	ldlang.c	FUNCTION_147
0x4007918	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400791d	      0xe800000000	                          call 0x4007922	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4007922	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4007929	    0xc740080b0000	                mov dword [rax + 8], 0xb	      1040	ldlang.c	FUNCTION_33
0x4007930	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x4007934	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x4007937	    0x488b15000000	            mov rdx, qword [0x0400793e] 	      6744	ldlang.c	FUNCTION_147
0x400793e	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x4007942	        0x48895010	             mov qword [rax + 0x10], rdx	      6744	ldlang.c	FUNCTION_147
0x4007946	              0x5b	                                 pop rbx	      6745	ldlang.c	FUNCTION_147
0x4007947	              0xc3	                                     ret	      6745	ldlang.c	FUNCTION_147
lang_gc_sections_1	CALL,4:functions,0:WHILE,0:FOR,1:IF,0:DO,0:SWITCH,1:ELSE,0	33
0x4006f90	          0x4885ff	                           test rdi, rdi	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006f93	            0x7449	                            je 0x4006fde	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006f95	              0x53	                                push rbx	      6799	ldlang.c	FUNCTION_150
0x4006f96	          0x4889fb	                            mov rbx, rdi	      6799	ldlang.c	FUNCTION_150
0x4006f99	            0xeb23	                           jmp 0x4006fbe	      6799	ldlang.c	FUNCTION_150
0x4006f9b	       0xf1f440000	                   nop dword [rax + rax]	      6799	ldlang.c	FUNCTION_150
0x4006fa0	          0x83f80d	                            cmp eax, 0xd	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fa3	            0x7427	                            je 0x4006fcc	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fa5	          0x83f80f	                            cmp eax, 0xf	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fa8	            0x750c	                           jne 0x4006fb6	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006faa	    0x488b3d000000	            mov rdi, qword [0x04006fb1] 	      6808	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_2
0x4006fb1	      0xe8daffffff	             call sym.lang_gc_sections_1	      6808	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_2
0x4006fb6	          0x488b1b	                    mov rbx, qword [rbx]	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006fb9	          0x4885db	                           test rbx, rbx	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006fbc	            0x741f	                            je 0x4006fdd	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006fbe	          0x8b4308	                mov eax, dword [rbx + 8]	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fc1	          0x83f804	                              cmp eax, 4	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fc4	            0x741a	                            je 0x4006fe0	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fc6	            0x77d8	                            ja 0x4006fa0	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fc8	            0x85c0	                           test eax, eax	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fca	            0x75ea	                           jne 0x4006fb6	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x4006fcc	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      6814	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_4
0x4006fd0	      0xe8bbffffff	             call sym.lang_gc_sections_1	      6814	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_4
0x4006fd5	          0x488b1b	                    mov rbx, qword [rbx]	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006fd8	          0x4885db	                           test rbx, rbx	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006fdb	            0x75e1	                           jne 0x4006fbe	      6800	ldlang.c	FUNCTION_150	FOR_1
0x4006fdd	              0x5b	                                 pop rbx	      6820	ldlang.c	FUNCTION_150
0x4006fde	            0xf3c3	                                     ret	      6820	ldlang.c	FUNCTION_150
0x4006fe0	            0x31d2	                            xor edx, edx	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x4006fe2	      0xbe00000000	                              mov esi, 0	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x4006fe7	          0x4889df	                            mov rdi, rbx	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x4006fea	      0xe8f1fdffff	                      call sym.walk_wild	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x4006fef	            0xebc5	                           jmp 0x4006fb6	      6806	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
lang_add_fill	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	17
0x4008490	              0x55	                                push rbp	      7537	ldlang.c	FUNCTION_170
0x4008491	              0x53	                                push rbx	      7537	ldlang.c	FUNCTION_170
0x4008492	          0x4889fd	                            mov rbp, rdi	      7537	ldlang.c	FUNCTION_170
0x4008495	      0xbf28000000	                           mov edi, 0x28	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400849a	        0x4883ec08	                              sub rsp, 8	      7537	ldlang.c	FUNCTION_170
0x400849e	    0x488b1d000000	            mov rbx, qword [0x040084a5] 	      7540	ldlang.c	FUNCTION_170
0x40084a5	      0xe800000000	                          call 0x40084aa	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40084aa	    0xc74008070000	                  mov dword [rax + 8], 7	      1040	ldlang.c	FUNCTION_33
0x40084b1	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x40084b8	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x40084bc	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x40084bf	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x40084c3	        0x48896810	             mov qword [rax + 0x10], rbp	      7541	ldlang.c	FUNCTION_170
0x40084c7	        0x4883c408	                              add rsp, 8	      7542	ldlang.c	FUNCTION_170
0x40084cb	              0x5b	                                 pop rbx	      7542	ldlang.c	FUNCTION_170
0x40084cc	              0x5d	                                 pop rbp	      7542	ldlang.c	FUNCTION_170
0x40084cd	              0xc3	                                     ret	      7542	ldlang.c	FUNCTION_170
lang_size_sections_1	CALL,43:functions,0:WHILE,0:FOR,1:IF,49:DO,0:SWITCH,2:ELSE,12	810
0x4003aa0	            0x4157	                                push r15	      5011	ldlang.c	FUNCTION_115
0x4003aa2	            0x4156	                                push r14	      5011	ldlang.c	FUNCTION_115
0x4003aa4	            0x4155	                                push r13	      5011	ldlang.c	FUNCTION_115
0x4003aa6	            0x4154	                                push r12	      5011	ldlang.c	FUNCTION_115
0x4003aa8	              0x55	                                push rbp	      5011	ldlang.c	FUNCTION_115
0x4003aa9	              0x53	                                push rbx	      5011	ldlang.c	FUNCTION_115
0x4003aaa	        0x4883ec38	                           sub rsp, 0x38	      5011	ldlang.c	FUNCTION_115
0x4003aae	          0x488b1f	                    mov rbx, qword [rdi]	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003ab1	    0x64488b042528	                mov rax, qword fs:[0x28]	      5011	ldlang.c	FUNCTION_115
0x4003aba	      0x4889442428	             mov qword [rsp + 0x28], rax	      5011	ldlang.c	FUNCTION_115
0x4003abf	            0x31c0	                            xor eax, eax	      5011	ldlang.c	FUNCTION_115
0x4003ac1	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5011	ldlang.c	FUNCTION_115
0x4003ac6	      0x44894c2404	                mov dword [rsp + 4], r9d	      5011	ldlang.c	FUNCTION_115
0x4003acb	          0x4885db	                           test rbx, rbx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003ace	     0xf8423010000	                            je 0x4003bf7	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003ad4	          0x4989fe	                            mov r14, rdi	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003ad7	          0x4989d4	                            mov r12, rdx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003ada	          0x4c89c5	                             mov rbp, r8	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003add	          0x4989f7	                            mov r15, rsi	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x4003ae0	        0x837b080f	                cmp dword [rbx + 8], 0xf	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ae4	     0xf879e060000	                            ja 0x4004188	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003aea	          0x8b4308	                mov eax, dword [rbx + 8]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003aed	    0xff24c5000000	                       jmp qword [rax*8]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003af4	         0xf1f4000	                         nop dword [rax]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003af8	          0x4885ed	                           test rbp, rbp	      5430	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42
0x4003afb	            0x7436	                            je 0x4003b33	      5430	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42
0x4003afd	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      5429	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003b01	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4003b06	      0xba00000000	                              mov edx, 0	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4003b0b	    0x488bbef00000	            mov rdi, qword [rsi + 0xf0] 	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4003b12	        0x488b4708	                mov rax, qword [rdi + 8]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4003b16	    0xff90b0020000	                call qword [rax + 0x2b0]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4003b1c	            0x85c0	                           test eax, eax	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4003b1e	     0xf848c070000	                            je 0x40042b0	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4003b24	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4003b28	            0x85c0	                           test eax, eax	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4003b2a	            0x7407	                            je 0x4003b33	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4003b2c	    0xc74500010000	                      mov dword [rbp], 1	      5437	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4003b33	          0x498b06	                    mov rax, qword [r14]	      4691	ldlang.c	FUNCTION_109
0x4003b36	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      5439	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_37
0x4003b3b	        0x4d8b4f38	              mov r9, qword [r15 + 0x38]	      4692	ldlang.c	FUNCTION_109
0x4003b3f	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      4691	ldlang.c	FUNCTION_109
0x4003b43	      0x410fb74524	           movzx eax, word [r13 + 0x24] 	      4694	ldlang.c	FUNCTION_109	IF_1
0x4003b48	        0x66258003	                           and ax, 0x380	      4694	ldlang.c	FUNCTION_109	IF_1
0x4003b4c	        0x663d0002	                           cmp ax, 0x200	      4694	ldlang.c	FUNCTION_109	IF_1
0x4003b50	     0xf8492070000	                            je 0x40042e8	      4694	ldlang.c	FUNCTION_109	IF_1
0x4003b56	      0x41f6452180	           test byte [r13 + 0x21], 0x80 	      4696	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4003b5b	     0xf850f060000	                           jne 0x4004170	      4696	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4003b61	    0x41f687900000	               test byte [r15 + 0x90], 8	      4697	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4003b69	     0xf8501060000	                           jne 0x4004170	      4697	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4003b6f	        0x418b4f7c	            mov ecx, dword [r15 + 0x7c] 	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x4003b73	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x4003b76	     0xf8477090000	                            je 0x40044f3	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x4003b7c	        0x41894d70	             mov dword [r13 + 0x70], ecx	      4709	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x4003b80	        0x41394970	              cmp dword [r9 + 0x70], ecx	      4711	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x4003b84	            0x7308	                           jae 0x4003b8e	      4711	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x4003b86	        0x41894970	              mov dword [r9 + 0x70], ecx	      4712	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x4003b8a	        0x418b4d70	            mov ecx, dword [r13 + 0x70] 	      4712	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x4003b8e	      0xba01000000	                              mov edx, 1	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4003b93	          0x48d3e2	                             shl rdx, cl	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4003b96	      0x498d4410ff	                 lea rax, [r8 + rdx - 1]	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4003b9b	          0x48f7da	                                 neg rdx	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4003b9e	          0x4821d0	                            and rax, rdx	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x4003ba1	          0x4889c2	                            mov rdx, rax	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4003ba4	          0x4c29c2	                             sub rdx, r8	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4003ba7	     0xf8513090000	                           jne 0x40044c0	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x4003bad	        0x498b5128	              mov rdx, qword [r9 + 0x28]	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4003bb1	          0x4c89c0	                             mov rax, r8	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4003bb4	    0x8b0d00000000	            mov ecx, dword [0x04003bba] 	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x4003bba	          0x4829d0	                            sub rax, rdx	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4003bbd	        0x49894560	             mov qword [r13 + 0x60], rax	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4003bc1	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x4003bc5	          0x48d3e8	                             shr rax, cl	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x4003bc8	          0x4901c0	                             add r8, rax	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x4003bcb	      0x41f6412108	                test byte [r9 + 0x21], 8	      4727	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4003bd0	            0x750d	                           jne 0x4003bdf	      4727	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4003bd2	          0x4c89c0	                             mov rax, r8	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4003bd5	          0x4829d0	                            sub rax, rdx	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4003bd8	          0x48d3e0	                             shl rax, cl	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4003bdb	        0x49894138	              mov qword [r9 + 0x38], rax	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4003bdf	      0x4c89442418	              mov qword [rsp + 0x18], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4003be4	         0xf1f4000	                         nop dword [rax]	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4003be8	          0x4989de	                            mov r14, rbx	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4003beb	          0x488b1b	                    mov rbx, qword [rbx]	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003bee	          0x4885db	                           test rbx, rbx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003bf1	     0xf85e9feffff	                           jne 0x4003ae0	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003bf7	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5548	ldlang.c	FUNCTION_115
0x4003bfc	    0x644833342528	                xor rsi, qword fs:[0x28]	      5548	ldlang.c	FUNCTION_115
0x4003c05	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5548	ldlang.c	FUNCTION_115
0x4003c0a	     0xf850f0c0000	                           jne 0x400481f	      5548	ldlang.c	FUNCTION_115
0x4003c10	        0x4883c438	                           add rsp, 0x38	      5548	ldlang.c	FUNCTION_115
0x4003c14	              0x5b	                                 pop rbx	      5548	ldlang.c	FUNCTION_115
0x4003c15	              0x5d	                                 pop rbp	      5548	ldlang.c	FUNCTION_115
0x4003c16	            0x415c	                                 pop r12	      5548	ldlang.c	FUNCTION_115
0x4003c18	            0x415d	                                 pop r13	      5548	ldlang.c	FUNCTION_115
0x4003c1a	            0x415e	                                 pop r14	      5548	ldlang.c	FUNCTION_115
0x4003c1c	            0x415f	                                 pop r15	      5548	ldlang.c	FUNCTION_115
0x4003c1e	              0xc3	                                     ret	      5548	ldlang.c	FUNCTION_115
0x4003c1f	              0x90	                                     nop	      5548	ldlang.c	FUNCTION_115
0x4003c20	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5398	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c24	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c29	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5401	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_33
0x4003c2d	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c31	        0x48894348	             mov qword [rbx + 0x48], rax	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c35	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5400	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c39	        0x48894340	             mov qword [rbx + 0x40], rax	      5399	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c3d	      0xe800000000	                          call 0x4003c42	      5401	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_33
0x4003c42	    0x8b0d00000000	            mov ecx, dword [0x04003c48] 	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c48	            0xd3f8	                             sar eax, cl	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c4a	            0x4898	                                    cdqe	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c4c	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c50	      0x4803442418	             add rax, qword [rsp + 0x18]	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c55	        0xf6422108	               test byte [rdx + 0x21], 8	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c59	      0x4889442418	             mov qword [rsp + 0x18], rax	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c5e	            0x7588	                           jne 0x4003be8	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c60	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c64	          0x4989de	                            mov r14, rbx	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c67	          0x48d3e0	                             shl rax, cl	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c6a	        0x48894238	             mov qword [rdx + 0x38], rax	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c6e	      0xe978ffffff	                           jmp 0x4003beb	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c73	       0xf1f440000	                   nop dword [rax + rax]	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003c78	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5356	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c7c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c81	      0xbe00000000	                              mov esi, 0	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003c86	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003c8a	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c8e	      0x488d542418	                   lea rdx, [rsp + 0x18]	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003c93	        0x48894330	             mov qword [rbx + 0x30], rax	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c97	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5358	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c9b	        0x48894328	             mov qword [rbx + 0x28], rax	      5357	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003c9f	      0xe800000000	                          call 0x4003ca4	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003ca4	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003ca7	      0x2d1a010000	                          sub eax, 0x11a	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003cac	          0x83f804	                              cmp eax, 4	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003caf	     0xf871b060000	                            ja 0x40042d0	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003cb5	    0xff24c5000000	                       jmp qword [rax*8]	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003cbc	         0xf1f4000	                         nop dword [rax]	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003cc0	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5449	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003cc4	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      5451	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003cc8	          0x4989de	                            mov r14, rbx	      5452	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ccb	        0x48894320	             mov qword [rbx + 0x20], rax	      5448	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ccf	      0xe917ffffff	                           jmp 0x4003beb	      5452	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003cd4	         0xf1f4000	                         nop dword [rax]	      5452	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003cd8	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5417	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003cdc	          0x4989de	                            mov r14, rbx	      5419	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003cdf	    0x488905000000	            mov qword [0x04003ce6], rax 	      5417	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ce6	      0xe900ffffff	                           jmp 0x4003beb	      5419	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ceb	       0xf1f440000	                   nop dword [rax + rax]	      5419	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003cf0	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003cf4	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4003cf9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4003cfe	          0x4989e8	                             mov r8, rbp	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4003d01	          0x4c89e2	                            mov rdx, r12	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4003d04	          0x4c89fe	                            mov rsi, r15	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4003d07	          0x4989de	                            mov r14, rbx	      5532	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003d0a	      0xe891fdffff	           call sym.lang_size_sections_1	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4003d0f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4003d14	      0xe9d2feffff	                           jmp 0x4003beb	      5532	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003d19	     0xf1f80000000	                         nop dword [rax]	      5532	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003d20	    0x83bb84000000	cmp dword [rbx + 0x84], 0xffffffffffffffff	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x4003d27	          0x4989de	                            mov r14, rbx	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x4003d2a	     0xf84bbfeffff	                            je 0x4003beb	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x4003d30	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4003d34	          0x4885ff	                           test rdi, rdi	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4003d37	     0xf843c070000	                            je 0x4004479	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4003d3d	    0x80a390000000	             and byte [rbx + 0x90], 0xfe	      5040	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x4003d44	      0x488d542418	                   lea rdx, [rsp + 0x18]	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x4003d49	      0xbe00000000	                              mov esi, 0	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x4003d4e	      0xe800000000	                          call 0x4003d53	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x4003d53	    0x448b05000000	            mov r8d, dword [0x04003d5a] 	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4003d5a	          0x4585c0	                           test r8d, r8d	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4003d5d	     0xf843d040000	                            je 0x40041a0	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4003d63	    0x488b15000000	            mov rdx, qword [0x04003d6a] 	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4003d6a	    0x488b05000000	            mov rax, qword [0x04003d71] 	      5045	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4003d71	          0x4885d2	                           test rdx, rdx	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4003d74	      0x4889442418	             mov qword [rsp + 0x18], rax	      5045	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x4003d79	            0x7409	                            je 0x4003d84	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4003d7b	        0x48034228	             add rax, qword [rdx + 0x28]	      5047	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4003d7f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5047	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4003d84	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4003d88	          0x4885c0	                           test rax, rax	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4003d8b	          0x4889c2	                            mov rdx, rax	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4003d8e	     0xf8454feffff	                            je 0x4003be8	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4003d94	    0x488b0d000000	            mov rcx, qword [0x04003d9b] 	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003d9b	        0x488b4908	                mov rcx, qword [rcx + 8]	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003d9f	          0x8b4908	                mov ecx, dword [rcx + 8]	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003da2	          0x83e902	                              sub ecx, 2	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003da5	          0x83f901	                              cmp ecx, 1	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003da8	     0xf8652050000	                           jbe 0x4004300	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003dae	    0x4881fa000000	                              cmp rdx, 0	      5089	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11
0x4003db5	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003dba	     0xf843c070000	                            je 0x40044fc	      5089	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11
0x4003dc0	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      5096	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003dc5	     0xf8453070000	                            je 0x400451e	      5096	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003dcb	    0x448bb3800000	           mov r14d, dword [rbx + 0x80] 	      5149	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4
0x4003dd2	          0x4585f6	                         test r14d, r14d	      5152	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003dd5	     0xf8e8d060000	                           jle 0x4004468	      5152	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003ddb	      0xb801000000	                              mov eax, 1	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003de0	          0x4489f1	                           mov ecx, r14d	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003de3	          0x48d3e0	                             shl rax, cl	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003de6	      0x4d8d5c05ff	                lea r11, [r13 + rax - 1]	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003deb	          0x48f7d8	                                 neg rax	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003dee	          0x4921c3	                            and r11, rax	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003df1	          0x4c89d8	                            mov rax, r11	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003df4	          0x4c29e8	                            sub rax, r13	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003df7	      0x4889442408	                mov qword [rsp + 8], rax	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003dfc	            0x745a	                            je 0x4003e58	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003dfe	    0x8b3500000000	            mov esi, dword [0x04003e04] 	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003e04	            0x85f6	                           test esi, esi	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003e06	     0xf84eb050000	                            je 0x40043f7	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003e0c	    0x833d00000000	               cmp dword [0x04003e13], 1	      5161	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003e13	            0x7443	                            je 0x4003e58	      5161	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003e15	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e1a	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e1e	    0x41b805000000	                              mov r8d, 5	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e24	      0xba00000000	                              mov edx, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e29	      0xbe00000000	                              mov esi, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e2e	            0x31ff	                            xor edi, edi	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e30	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e35	      0xe800000000	                          call 0x4003e3a	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e3a	      0x488b542408	                mov rdx, qword [rsp + 8]	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e3f	          0x4889c7	                            mov rdi, rax	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e42	          0x4c89ee	                            mov rsi, r13	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e45	            0x31c0	                            xor eax, eax	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e47	      0xe800000000	                          call 0x4003e4c	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e4c	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e50	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e55	           0xf1f00	                         nop dword [rax]	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003e58	        0x804a2401	                 or byte [rdx + 0x24], 1	      1688	bfd.h	FUNCTION_258
0x4003e5c	        0x4c895a30	             mov qword [rdx + 0x30], r11	      1687	bfd.h	FUNCTION_258
0x4003e60	        0x4c895a28	             mov qword [rdx + 0x28], r11	      1687	bfd.h	FUNCTION_258
0x4003e64	    0x48c742600000	               mov qword [rdx + 0x60], 0	      5172	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2
0x4003e6c	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003e70	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003e75	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003e79	          0x4989e8	                             mov r8, rbp	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003e7c	          0x4c89d9	                            mov rcx, r11	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003e7f	          0x4889de	                            mov rsi, rbx	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003e82	      0xe819fcffff	           call sym.lang_size_sections_1	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003e87	     0xfb683900000	           movzx eax, byte [rbx + 0x90] 	      5178	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003e8e	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003e92	          0x83c801	                               or eax, 1	      5178	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003e95	    0x4881fa000000	                              cmp rdx, 0	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003e9c	    0x888390000000	               mov byte [rbx + 0x90], al	      5178	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ea2	     0xf8488030000	                            je 0x4004230	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003ea8	            0xa808	                              test al, 8	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003eaa	     0xf8580030000	                           jne 0x4004230	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003eb0	        0xf6422108	               test byte [rdx + 0x21], 8	      5198	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003eb4	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      5189	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4003eb8	      0x4889742418	             mov qword [rsp + 0x18], rsi	      5189	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4003ebd	     0xf84cc040000	                            je 0x400438f	      5198	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003ec3	        0x4c8b6b40	            mov r13, qword [rbx + 0x40] 	      5204	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ec7	          0x4d85ed	                           test r13, r13	      5205	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_20
0x4003eca	     0xf84d0070000	                            je 0x40046a0	      5205	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_20
0x4003ed0	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003ed4	          0x4885ff	                           test rdi, rdi	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003ed7	     0xf8463050000	                            je 0x4004440	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003edd	      0xba00000000	                              mov edx, 0	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x4003ee2	            0x31f6	                            xor esi, esi	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x4003ee4	      0xe800000000	                          call 0x4003ee9	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x4003ee9	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003eed	        0x48894230	             mov qword [rdx + 0x30], rax	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003ef1	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003ef4	            0x89c1	                            mov ecx, eax	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003ef6	          0x83e101	                              and ecx, 1	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003ef9	    0x808b90000000	                 or byte [rbx + 0x90], 2	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f00	            0x85c9	                           test ecx, ecx	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f02	            0x743c	                            je 0x4003f40	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f04	            0x89c1	                            mov ecx, eax	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f06	    0x81e102040000	                          and ecx, 0x402	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f0c	    0x81f900040000	                          cmp ecx, 0x400	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f12	            0x742c	                            je 0x4003f40	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f14	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      5293	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f19	     0xf85b1040000	                           jne 0x40043d0	      5293	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f1f	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f23	          0x4885c9	                           test rcx, rcx	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f26	     0xf8490040000	                            je 0x40043bc	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f2c	        0x488b4938	            mov rcx, qword [rcx + 0x38] 	      5298	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f30	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f35	        0x48397128	            cmp qword [rcx + 0x28], rsi 	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f39	     0xf8691040000	                           jbe 0x40043d0	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f3f	              0x90	                                     nop	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003f40	    0x4881fa000000	                              cmp rdx, 0	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003f47	          0x4989de	                            mov r14, rbx	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003f4a	     0xf849bfcffff	                            je 0x4003beb	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003f50	    0xf68390000000	               test byte [rbx + 0x90], 8	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003f57	     0xf858efcffff	                           jne 0x4003beb	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003f5d	      0x2502040000	                          and eax, 0x402	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003f62	      0x3d00040000	                          cmp eax, 0x400	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003f67	     0xf849a040000	                            je 0x4004407	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003f6d	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003f71	    0x8b0d00000000	            mov ecx, dword [0x04003f77] 	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003f77	          0x48d3e8	                             shr rax, cl	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003f7a	          0x4989c5	                            mov r13, rax	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003f7d	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4003f81	      0x4c016c2418	            add qword [rsp + 0x18], r13 	      5312	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f86	          0x4885ff	                           test rdi, rdi	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4003f89	            0x740f	                            je 0x4003f9a	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4003f8b	      0x488d542418	                   lea rdx, [rsp + 0x18]	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4003f90	      0xbe00000000	                              mov esi, 0	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4003f95	      0xe800000000	                          call 0x4003f9a	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4003f9a	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003f9e	          0x4885f6	                           test rsi, rsi	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fa1	     0xf8441fcffff	                            je 0x4003be8	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fa7	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fab	          0x4989de	                            mov r14, rbx	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fae	        0xf6402003	               test byte [rax + 0x20], 3	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fb2	     0xf8433fcffff	                            je 0x4003beb	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fb8	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x4003fbc	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5324	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fc1	            0x85c9	                           test ecx, ecx	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x4003fc3	        0x48895638	             mov qword [rsi + 0x38], rdx	      5324	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003fc7	     0xf8519070000	                           jne 0x40046e6	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x4003fcd	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003fd1	          0x4885f6	                           test rsi, rsi	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003fd4	     0xf840efcffff	                            je 0x4003be8	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003fda	        0x483b7340	            cmp rsi, qword [rbx + 0x40] 	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003fde	     0xf8404fcffff	                            je 0x4003be8	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003fe4	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003fe8	        0xf6402002	               test byte [rax + 0x20], 2	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003fec	     0xf8499060000	                            je 0x400468b	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003ff2	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003ff6	        0x8b542404	                mov edx, dword [rsp + 4]	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x4003ffa	          0x4989de	                            mov r14, rbx	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x4003ffd	      0x498d440d00	                    lea rax, [r13 + rcx]	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004002	            0x85d2	                           test edx, edx	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x4004004	        0x48894638	             mov qword [rsi + 0x38], rax	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004008	     0xf84ddfbffff	                            je 0x4003beb	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x400400e	        0x488d7b38	                   lea rdi, [rbx + 0x38]	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x4004012	            0x31d2	                            xor edx, edx	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4004014	      0xe887d2ffff	        call sym.os_region_check.isra.12	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4004019	      0xe9cdfbffff	                           jmp 0x4003beb	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x400401e	            0x6690	                                     nop	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4004020	    0x48c743180000	               mov qword [rbx + 0x18], 0	      5517	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004028	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400402c	          0x4989de	                            mov r14, rbx	      5526	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400402f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004034	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004038	        0x48894310	             mov qword [rbx + 0x10], rax	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400403c	      0xe9aafbffff	                           jmp 0x4003beb	      5526	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004041	     0xf1f80000000	                         nop dword [rax]	      5526	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004048	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x400404d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4004052	          0x4989e8	                             mov r8, rbp	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4004055	          0x4c89e2	                            mov rdx, r12	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4004058	          0x4c89fe	                            mov rsi, r15	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x400405b	      0xbf00000000	                              mov edi, 0	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4004060	          0x4989de	                            mov r14, rbx	      5349	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004063	      0xe838faffff	           call sym.lang_size_sections_1	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4004068	      0x4889442418	             mov qword [rsp + 0x18], rax	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x400406d	      0xe979fbffff	                           jmp 0x4003beb	      5349	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004072	    0x660f1f440000	                    nop word [rax + rax]	      5349	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004078	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5456	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400407d	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x4004081	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x4004086	      0x4889442420	             mov qword [rsp + 0x20], rax	      5456	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400408b	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      5457	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400408f	    0xc70500000000	               mov dword [0x04004099], 0	      5459	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004099	          0x4c89ef	                            mov rdi, r13	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x400409c	      0xe800000000	                          call 0x40040a1	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x40040a1	    0x8b0500000000	            mov eax, dword [0x040040a7] 	      4981	ldlang.c	FUNCTION_114	IF_1
0x40040a7	          0x83f801	                              cmp eax, 1	      4981	ldlang.c	FUNCTION_114	IF_1
0x40040aa	     0xf84a0010000	                            je 0x4004250	      4981	ldlang.c	FUNCTION_114	IF_1
0x40040b0	          0x83f802	                              cmp eax, 2	      4990	ldlang.c	FUNCTION_114	ELSE_2	IF_3
0x40040b3	     0xf84c7010000	                            je 0x4004280	      4990	ldlang.c	FUNCTION_114	ELSE_2	IF_3
0x40040b9	    0xc70500000000	               mov dword [0x040040c3], 0	      5467	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40040c3	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040c7	          0x83e0fd	                     and eax, 0xfffffffd	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040ca	          0x83f804	                              cmp eax, 4	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040cd	            0x7515	                           jne 0x40040e4	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040cf	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040d3	          0x80382e	                    cmp byte [rax], 0x2e	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040d6	     0xf84a4020000	                            je 0x4004380	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040dc	    0x41808f900000	              or byte [r15 + 0x90], 0x10	      5474	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40040e4	    0x41f687900000	               test byte [r15 + 0x90], 8	      5476	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40040ec	     0xf85f6faffff	                           jne 0x4003be8	      5476	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40040f2	    0x4c3b3d000000	            cmp r15, qword [0x040040f9] 	      5478	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x40040f9	     0xf84b5050000	                            je 0x40046b4	      5478	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x40040ff	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004104	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004109	          0x4c39c2	                             cmp rdx, r8	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x400410c	     0xf84cdfaffff	                            je 0x4003bdf	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004112	    0x8b0d00000000	            mov ecx, dword [0x04004118] 	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004118	          0x4c29c2	                             sub rdx, r8	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400411b	          0x4889df	                            mov rdi, rbx	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400411e	          0x4c89e6	                            mov rsi, r12	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004121	          0x48d3e2	                             shl rdx, cl	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004124	        0x498b4f38	            mov rcx, qword [r15 + 0x38] 	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004128	      0xe833f3ffff	                     call sym.insert_pad	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400412d	    0x418b878c0000	            mov eax, dword [r15 + 0x8c] 	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004134	          0x488b1b	                    mov rbx, qword [rbx]	      5494	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004137	          0x83f803	                              cmp eax, 3	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400413a	            0x7411	                            je 0x400414d	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400413c	          0x83f802	                              cmp eax, 2	      5501	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400413f	     0xf84dc020000	                            je 0x4004421	      5501	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004145	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004149	        0x83482001	                or dword [rax + 0x20], 1	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400414d	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004152	      0x4c89442418	              mov qword [rsp + 0x18], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4004157	      0xe98cfaffff	                           jmp 0x4003be8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x400415c	         0xf1f4000	                         nop dword [rax]	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4004160	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4004164	      0xe98bfbffff	                           jmp 0x4003cf4	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4004169	     0xf1f80000000	                         nop dword [rax]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x4004170	          0x4c89c0	                             mov rax, r8	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004173	        0x492b4128	              sub rax, qword [r9 + 0x28]	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004177	      0x4c89442418	              mov qword [rsp + 0x18], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x400417c	        0x49894560	             mov qword [r13 + 0x60], rax	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004180	      0xe963faffff	                           jmp 0x4003be8	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004185	           0xf1f00	                         nop dword [rax]	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004188	      0xbea6150000	                         mov esi, 0x15a6	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x400418d	      0xbf00000000	                              mov edi, 0	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x4004192	          0x4989de	                            mov r14, rbx	      5543	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004195	      0xe800000000	                          call 0x400419a	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x400419a	      0xe94cfaffff	                           jmp 0x4003beb	      5543	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400419f	              0x90	                                     nop	      5543	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40041a0	    0x833d00000000	               cmp dword [0x040041a7], 1	      5049	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6
0x40041a7	     0xf84d7fbffff	                            je 0x4003d84	      5049	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6
0x40041ad	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041b1	        0x4c8b7358	            mov r14, qword [rbx + 0x58] 	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041b5	            0x31ff	                            xor edi, edi	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041b7	      0xba05000000	                              mov edx, 5	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041bc	      0xbe00000000	                              mov esi, 0	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041c1	      0xe800000000	                          call 0x40041c6	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041c6	          0x4c89ea	                            mov rdx, r13	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041c9	          0x4889c7	                            mov rdi, rax	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041cc	          0x4c89f6	                            mov rsi, r14	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041cf	            0x31c0	                            xor eax, eax	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041d1	      0xe800000000	                          call 0x40041d6	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041d6	      0xe9a9fbffff	                           jmp 0x4003d84	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041db	       0xf1f440000	                   nop dword [rax + rax]	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40041e0	      0xb804000000	                              mov eax, 4	      5373	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x40041e5	    0x8b0d00000000	            mov ecx, dword [0x040041eb] 	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x40041eb	      0xba01000000	                              mov edx, 1	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x40041f0	            0xd3e2	                             shl edx, cl	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x40041f2	            0x39d0	                            cmp eax, edx	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40041f4	           0xf42c2	                          cmovb eax, edx	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40041f7	            0xd3e8	                             shr eax, cl	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40041f9	      0xe94efaffff	                           jmp 0x4003c4c	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40041fe	            0x6690	                                     nop	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004200	      0xb808000000	                              mov eax, 8	      5370	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004205	            0xebde	                           jmp 0x40041e5	      5370	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004207	    0x660f1f840000	                    nop word [rax + rax]	      5370	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004210	      0xb801000000	                              mov eax, 1	      5379	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004215	            0xebce	                           jmp 0x40041e5	      5380	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004217	    0x660f1f840000	                    nop word [rax + rax]	      5380	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004220	      0xb802000000	                              mov eax, 2	      5376	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004225	            0xebbe	                           jmp 0x40041e5	      5377	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004227	    0x660f1f840000	                    nop word [rax + rax]	      5377	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4004230	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004235	     0xf8488fcffff	                            je 0x4003ec3	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x400423b	      0xbe42140000	                         mov esi, 0x1442	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004240	      0xbf00000000	                              mov edi, 0	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004245	      0xe800000000	                          call 0x400424a	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x400424a	      0xe974fcffff	                           jmp 0x4003ec3	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x400424f	              0x90	                                     nop	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4004250	    0x488b05000000	            mov rax, qword [0x04004257] 	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004257	          0x4885c0	                           test rax, rax	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x400425a	     0xf846e040000	                            je 0x40046ce	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004260	          0x4839d8	                            cmp rax, rbx	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004263	     0xf8450feffff	                            je 0x40040b9	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004269	      0xbe7b130000	                         mov esi, 0x137b	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x400426e	      0xbf00000000	                              mov edi, 0	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004273	      0xe800000000	                          call 0x4004278	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004278	      0xe93cfeffff	                           jmp 0x40040b9	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x400427d	           0xf1f00	                         nop dword [rax]	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004280	    0x488b05000000	            mov rax, qword [0x04004287] 	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x4004287	          0x4885c0	                           test rax, rax	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x400428a	     0xf844a040000	                            je 0x40046da	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x4004290	          0x4839d8	                            cmp rax, rbx	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004293	     0xf8420feffff	                            je 0x40040b9	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004299	      0xbe84130000	                         mov esi, 0x1384	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x400429e	      0xbf00000000	                              mov edi, 0	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40042a3	      0xe800000000	                          call 0x40042a8	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40042a8	      0xe90cfeffff	                           jmp 0x40040b9	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40042ad	           0xf1f00	                         nop dword [rax]	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40042b0	            0x31ff	                            xor edi, edi	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042b2	      0xba05000000	                              mov edx, 5	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042b7	      0xbe00000000	                              mov esi, 0	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042bc	      0xe800000000	                          call 0x40042c1	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042c1	          0x4889c7	                            mov rdi, rax	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042c4	            0x31c0	                            xor eax, eax	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042c6	      0xe800000000	                          call 0x40042cb	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042cb	      0xe954f8ffff	                           jmp 0x4003b24	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x40042d0	      0xba00000000	                              mov edx, 0	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x40042d5	      0xbef7140000	                         mov esi, 0x14f7	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x40042da	      0xbf00000000	                              mov edi, 0	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x40042df	      0xe800000000	                          call 0x40042e4	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x40042e4	         0xf1f4000	                         nop dword [rax]	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x40042e8	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      4695	ldlang.c	FUNCTION_109	IF_1
0x40042ec	        0x492b4128	              sub rax, qword [r9 + 0x28]	      4695	ldlang.c	FUNCTION_109	IF_1
0x40042f0	      0x4c89442418	              mov qword [rsp + 0x18], r8	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x40042f5	        0x49894560	             mov qword [r13 + 0x60], rax	      4695	ldlang.c	FUNCTION_109	IF_1
0x40042f9	      0xe9eaf8ffff	                           jmp 0x4003be8	      4695	ldlang.c	FUNCTION_109	IF_1
0x40042fe	            0x6690	                                     nop	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004300	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004303	    0xf7c100000004	test ecx, obj.lang_output_section_statement 	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004309	     0xf849ffaffff	                            je 0x4003dae	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400430f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004313	          0x4885d2	                           test rdx, rdx	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004316	            0x740a	                            je 0x4004322	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004318	        0x48833a00	                      cmp qword [rdx], 0	      5072	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x400431c	     0xf8489040000	                            je 0x40047ab	      5072	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4004322	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004326	      0xba05000000	                              mov edx, 5	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400432b	      0xbe00000000	                              mov esi, 0	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004330	            0x31ff	                            xor edi, edi	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004332	      0xe800000000	                          call 0x4004337	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004337	          0x4c89ee	                            mov rsi, r13	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400433a	          0x4889c7	                            mov rdi, rax	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400433d	            0x31c0	                            xor eax, eax	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400433f	      0xe800000000	                          call 0x4004344	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004344	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4004348	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400434c	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400434f	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      5078	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004353	          0x4989de	                            mov r14, rbx	      5078	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4004356	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      5079	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	CALL_8
0x400435a	        0x80482401	                 or byte [rax + 0x24], 1	      1688	bfd.h	FUNCTION_258
0x400435e	          0x80e508	                               and ch, 8	      5082	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004361	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_258
0x4004365	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_258
0x4004369	     0xf857cf8ffff	                           jne 0x4003beb	      5082	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x400436f	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004373	        0x48895038	             mov qword [rax + 0x38], rdx	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004377	      0xe96ff8ffff	                           jmp 0x4003beb	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x400437c	         0xf1f4000	                         nop dword [rax]	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x4004380	        0x80780100	                   cmp byte [rax + 1], 0	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004384	     0xf845afdffff	                            je 0x40040e4	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x400438a	      0xe94dfdffff	                           jmp 0x40040dc	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x400438f	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      5195	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4004392	    0x8b0d00000000	            mov ecx, dword [0x04004398] 	      5194	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4004398	        0x4c8b4238	              mov r8, qword [rdx + 0x38]	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x400439c	      0x488d7c06ff	                lea rdi, [rsi + rax - 1]	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043a1	          0x49d3e8	                              shr r8, cl	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043a4	          0x48f7d8	                                 neg rax	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043a7	          0x4c01c7	                             add rdi, r8	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043aa	          0x4821f8	                            and rax, rdi	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043ad	          0x4829f0	                            sub rax, rsi	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043b0	          0x48d3e0	                             shl rax, cl	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043b3	        0x48894238	             mov qword [rdx + 0x38], rax	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043b7	      0xe907fbffff	                           jmp 0x4003ec3	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x40043bc	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043c0	        0x48397228	            cmp qword [rdx + 0x28], rsi 	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043c4	     0xf8476fbffff	                            je 0x4003f40	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043ca	    0x660f1f440000	                    nop word [rax + rax]	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043d0	      0x48837b4800	               cmp qword [rbx + 0x48], 0	      5299	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043d5	     0xf8565fbffff	                           jne 0x4003f40	      5299	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043db	     0xfb60d000000	           movzx ecx, byte [0x040043e2] 	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x40043e2	          0x83e103	                              and ecx, 3	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x40043e5	          0x80f902	                               cmp cl, 2	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x40043e8	     0xf8452fbffff	                            je 0x4003f40	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x40043ee	        0x49895d40	             mov qword [r13 + 0x40], rbx	      5301	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043f2	      0xe949fbffff	                           jmp 0x4003f40	      5301	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x40043f7	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x40043fc	     0xf850afaffff	                           jne 0x4003e0c	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4004402	      0xe951faffff	                           jmp 0x4003e58	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4004407	     0xfb605000000	           movzx eax, byte [0x0400440e] 	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x400440e	          0x4531ed	                          xor r13d, r13d	      5311	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_11
0x4004411	          0x83e003	                              and eax, 3	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004414	            0x3c02	                               cmp al, 2	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004416	     0xf8561fbffff	                           jne 0x4003f7d	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x400441c	      0xe94cfbffff	                           jmp 0x4003f6d	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4004421	    0x488b05000000	            mov rax, qword [0x04004428] 	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004428	        0x488b4008	                mov rax, qword [rax + 8]	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400442c	        0x83780805	                  cmp dword [rax + 8], 5	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004430	     0xf8517fdffff	                           jne 0x400414d	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004436	      0xe90afdffff	                           jmp 0x4004145	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400443b	       0xf1f440000	                   nop dword [rax + rax]	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004440	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4004444	          0x4885d2	                           test rdx, rdx	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4004447	     0xf84af020000	                            je 0x40046fc	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x400444d	    0xf68390000000	           test byte [rbx + 0x90], 0x40 	      5217	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004454	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5215	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4004458	     0xf84f9010000	                            je 0x4004657	      5217	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x400445e	      0x4803442408	                add rax, qword [rsp + 8]	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004463	      0xe981faffff	                           jmp 0x4003ee9	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4004468	          0x4d89eb	                            mov r11, r13	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x400446b	    0x48c744240800	                  mov qword [rsp + 8], 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004474	      0xe9dff9ffff	                           jmp 0x4003e58	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004479	     0xfb605000000	           movzx eax, byte [0x04004480] 	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4004480	          0x83e003	                              and eax, 3	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4004483	            0x3c02	                               cmp al, 2	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4004485	     0xf85f9f8ffff	                           jne 0x4003d84	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x400448b	    0x488b05000000	            mov rax, qword [0x04004492] 	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004492	        0x488b4008	                mov rax, qword [rax + 8]	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4004496	        0x83780802	                  cmp dword [rax + 8], 2	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x400449a	     0xf85e4f8ffff	                           jne 0x4003d84	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x40044a0	      0xe800000000	                          call 0x40044a5	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x40044a5	          0x4885c0	                           test rax, rax	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x40044a8	          0x4889c7	                            mov rdi, rax	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x40044ab	        0x48894358	             mov qword [rbx + 0x58], rax	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x40044af	     0xf84cff8ffff	                            je 0x4003d84	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x40044b5	      0xe983f8ffff	                           jmp 0x4003d3d	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x40044ba	    0x660f1f440000	                    nop word [rax + rax]	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x40044c0	    0x8b0d00000000	            mov ecx, dword [0x040044c6] 	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044c6	          0x4c89e6	                            mov rsi, r12	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044c9	          0x4c89f7	                            mov rdi, r14	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044cc	      0x4889442410	             mov qword [rsp + 0x10], rax	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044d1	      0x4c894c2408	                 mov qword [rsp + 8], r9	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044d6	          0x48d3e2	                             shl rdx, cl	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044d9	          0x4c89c9	                             mov rcx, r9	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044dc	      0xe87fefffff	                     call sym.insert_pad	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40044e1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40044e6	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40044eb	          0x4989c0	                             mov r8, rax	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40044ee	      0xe9baf6ffff	                           jmp 0x4003bad	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40044f3	        0x418b4d70	            mov ecx, dword [r13 + 0x70] 	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40044f7	      0xe984f6ffff	                           jmp 0x4003b80	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40044fc	    0x48833d000000	               cmp qword [0x04004504], 0	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x4004504	     0xf857e020000	                           jne 0x4004788	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x400450a	          0x4d89eb	                            mov r11, r13	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400450d	          0x4531f6	                          xor r14d, r14d	      5024	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004510	    0x48c744240800	                  mov qword [rsp + 8], 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004519	      0xe94ef9ffff	                           jmp 0x4003e6c	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400451e	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004522	          0x4885c0	                           test rax, rax	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004525	     0xf84d9020000	                            je 0x4004804	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400452b	        0x448b4220	            mov r8d, dword [rdx + 0x20] 	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400452f	        0x41f6c003	                             test r8b, 3	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004533	            0x745c	                            je 0x4004591	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004535	          0x488b30	                    mov rsi, qword [rax]	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004538	          0x803e2a	                    cmp byte [rsi], 0x2a	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400453b	            0x7554	                           jne 0x4004591	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400453d	      0xbf00000000	                              mov edi, 0	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004542	      0xb90a000000	                            mov ecx, 0xa	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004547	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4004549	            0x7546	                           jne 0x4004591	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400454b	          0x4489c1	                            mov ecx, r8d	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400454e	            0x89ce	                            mov esi, ecx	      1398	ldlang.c	FUNCTION_43	IF_1
0x4004550	            0x89c8	                            mov eax, ecx	      1399	ldlang.c	FUNCTION_43	IF_1
0x4004552	          0x83e619	                           and esi, 0x19	      1398	ldlang.c	FUNCTION_43	IF_1
0x4004555	          0x83c820	                            or eax, 0x20	      1399	ldlang.c	FUNCTION_43	IF_1
0x4004558	          0x83fe01	                              cmp esi, 1	      1399	ldlang.c	FUNCTION_43	IF_1
0x400455b	           0xf44c8	                          cmove ecx, eax	      1399	ldlang.c	FUNCTION_43	IF_1
0x400455e	    0x488b05000000	            mov rax, qword [0x04004565] 	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004565	          0x4885c0	                           test rax, rax	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004568	            0x7413	                            je 0x400457d	      1401	ldlang.c	FUNCTION_43	FOR_1
0x400456a	          0x854848	           test dword [rax + 0x48], ecx 	      1403	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x400456d	            0x7405	                            je 0x4004574	      1403	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x400456f	          0x85484c	           test dword [rax + 0x4c], ecx 	      1404	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x4004572	            0x7419	                            je 0x400458d	      1404	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x4004574	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4004578	          0x4885c0	                           test rax, rax	      1401	ldlang.c	FUNCTION_43	FOR_1
0x400457b	            0x75ed	                           jne 0x400456a	      1401	ldlang.c	FUNCTION_43	FOR_1
0x400457d	            0x31f6	                            xor esi, esi	      1409	ldlang.c	FUNCTION_43	CALL_1
0x400457f	      0xbf00000000	                              mov edi, 0	      1409	ldlang.c	FUNCTION_43	CALL_1
0x4004584	      0xe800000000	                          call 0x4004589	      1409	ldlang.c	FUNCTION_43	CALL_1
0x4004589	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1409	ldlang.c	FUNCTION_43	CALL_1
0x400458d	        0x48894340	             mov qword [rbx + 0x40], rax	      5106	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13	CALL_10
0x4004591	    0xf68390000000	               test byte [rbx + 0x90], 8	      5112	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004598	     0xf85ac000000	                           jne 0x400464a	      5112	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x400459e	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045a1	          0xf6c101	                              test cl, 1	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045a4	     0xf84a0000000	                            je 0x400464a	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045aa	    0x81e102040000	                          and ecx, 0x402	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045b0	    0x81f900040000	                          cmp ecx, 0x400	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045b6	     0xf848e000000	                            je 0x400464a	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045bc	     0xfb60d000000	           movzx ecx, byte [0x040045c3] 	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045c3	          0x83e103	                              and ecx, 3	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045c6	          0x80f902	                               cmp cl, 2	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045c9	            0x747f	                            je 0x400464a	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045cb	        0x8b7c2404	                mov edi, dword [rsp + 4]	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045cf	            0x85ff	                           test edi, edi	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045d1	            0x7477	                            je 0x400464a	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045d3	          0x488b30	                    mov rsi, qword [rax]	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045d6	    0x41b900000000	                              mov r9d, 0	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045dc	      0xb90a000000	                            mov ecx, 0xa	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045e1	          0x4c89cf	                             mov rdi, r9	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045e4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045e6	            0x7562	                           jne 0x400464a	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045e8	    0x4c8b05000000	              mov r8, qword [0x040045ef]	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045ef	          0x4d85c0	                             test r8, r8	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045f2	            0x7456	                            je 0x400464a	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045f4	          0x498b30	                     mov rsi, qword [r8]	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045f7	      0xb90a000000	                            mov ecx, 0xa	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045fc	          0x4c89cf	                             mov rdi, r9	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40045ff	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004601	            0x7507	                           jne 0x400460a	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004603	      0x4983781000	                cmp qword [r8 + 0x10], 0	      5121	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004608	            0x7440	                            je 0x400464a	      5121	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x400460a	    0x833d00000000	               cmp dword [0x04004611], 1	      5122	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004611	            0x7437	                            je 0x400464a	      5122	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4004613	    0x803d00000000	                cmp byte [0x0400461a], 0	      5133	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15
0x400461a	          0x4c8b2a	                    mov r13, qword [rdx]	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x400461d	      0xbe00000000	                              mov esi, 0	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4004622	      0xba05000000	                              mov edx, 5	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4004627	            0x7505	                           jne 0x400462e	      5133	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15
0x4004629	      0xbe00000000	                              mov esi, 0	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x400462e	            0x31ff	                            xor edi, edi	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004630	      0xe800000000	                          call 0x4004635	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004635	          0x4c89ee	                            mov rsi, r13	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004638	          0x4889c7	                            mov rdi, rax	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x400463b	            0x31c0	                            xor eax, eax	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x400463d	      0xe800000000	                          call 0x4004642	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004642	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4004646	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x400464a	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      5145	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x400464e	        0x448b7270	           mov r14d, dword [rdx + 0x70] 	      5146	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4004652	      0xe97bf7ffff	                           jmp 0x4003dd2	      5146	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4004657	        0x483b5340	            cmp rdx, qword [rbx + 0x40] 	      5226	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x400465b	            0x7407	                            je 0x4004664	      5226	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x400465d	    0x448bb3800000	           mov r14d, dword [rbx + 0x80] 	      5227	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x4004664	          0x4585f6	                         test r14d, r14d	      5228	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004667	     0xf8e7cf8ffff	                           jle 0x4003ee9	      5228	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x400466d	      0xbe01000000	                              mov esi, 1	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004672	          0x4489f1	                           mov ecx, r14d	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004675	          0x48d3e6	                             shl rsi, cl	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004678	      0x488d5430ff	                lea rdx, [rax + rsi - 1]	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x400467d	          0x4889f0	                            mov rax, rsi	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004680	          0x48f7d8	                                 neg rax	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004683	          0x4821d0	                            and rax, rdx	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4004686	      0xe95ef8ffff	                           jmp 0x4003ee9	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x400468b	    0xf68390000000	           test byte [rbx + 0x90], 0x40 	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004692	          0x4989de	                            mov r14, rbx	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4004695	     0xf8450f5ffff	                            je 0x4003beb	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x400469b	      0xe952f9ffff	                           jmp 0x4003ff2	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x40046a0	            0x31f6	                            xor esi, esi	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x40046a2	      0xbf00000000	                              mov edi, 0	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x40046a7	      0xe800000000	                          call 0x40046ac	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x40046ac	          0x4989c5	                            mov r13, rax	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x40046af	      0xe91cf8ffff	                           jmp 0x4003ed0	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x40046b4	            0x31f6	                            xor esi, esi	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x40046b6	      0xbf00000000	                              mov edi, 0	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x40046bb	      0xe800000000	                          call 0x40046c0	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x40046c0	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x40046c5	        0x4c894038	              mov qword [rax + 0x38], r8	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x40046c9	      0xe911f5ffff	                           jmp 0x4003bdf	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x40046ce	    0x48891d000000	            mov qword [0x040046d5], rbx 	      4984	ldlang.c	FUNCTION_114	IF_1	IF_2
0x40046d5	      0xe9dff9ffff	                           jmp 0x40040b9	      4984	ldlang.c	FUNCTION_114	IF_1	IF_2
0x40046da	    0x48891d000000	            mov qword [0x040046e1], rbx 	      4993	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x40046e1	      0xe9d3f9ffff	                           jmp 0x40040b9	      4993	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x40046e6	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x40046ea	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x40046ee	        0x488d7b38	                   lea rdi, [rbx + 0x38]	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x40046f2	      0xe8a9cbffff	        call sym.os_region_check.isra.12	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x40046f7	      0xe9d1f8ffff	                           jmp 0x4003fcd	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x40046fc	        0x498b4d40	            mov rcx, qword [r13 + 0x40] 	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004700	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004704	          0x4885c9	                           test rcx, rcx	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004707	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x400470a	            0x7472	                            je 0x400477e	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x400470c	            0xa801	                              test al, 1	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x400470e	     0xf84a6000000	                            je 0x40047ba	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004714	        0x4c8b4938	              mov r9, qword [rcx + 0x38]	      5239	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4004718	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400471d	        0x4d8b5928	              mov r11, qword [r9 + 0x28]	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004721	          0x4939f3	                            cmp r11, rsi	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004724	     0xf869c000000	                           jbe 0x40047c6	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400472a	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400472e	          0x4885ff	                           test rdi, rdi	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004731	     0xf848f000000	                            je 0x40047c6	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004737	    0x8b0d00000000	            mov ecx, dword [0x0400473d] 	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400473d	          0x48d3ef	                             shr rdi, cl	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004740	          0x4889f9	                            mov rcx, rdi	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004743	          0x4801f1	                            add rcx, rsi	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004746	          0x4939cb	                            cmp r11, rcx	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4004749	            0x727b	                            jb 0x40047c6	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x400474b	        0x4d3b5930	              cmp r11, qword [r9 + 0x30]	      5255	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28
0x400474f	     0xf84a3000000	                            je 0x40047f8	      5255	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28
0x4004755	        0x4c8b7330	            mov r14, qword [rbx + 0x30] 	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004759	      0xba05000000	                              mov edx, 5	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400475e	      0xbe00000000	                              mov esi, 0	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004763	            0x31ff	                            xor edi, edi	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004765	      0xe800000000	                          call 0x400476a	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400476a	          0x4c89f6	                            mov rsi, r14	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400476d	          0x4889c7	                            mov rdi, rax	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004770	            0x31c0	                            xor eax, eax	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004772	      0xe800000000	                          call 0x4004777	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004777	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400477b	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x400477e	            0x89c1	                            mov ecx, eax	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004780	          0x83e101	                              and ecx, 1	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004783	      0xe971f7ffff	                           jmp 0x4003ef9	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4004788	      0xbee4130000	                         mov esi, 0x13e4	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x400478d	      0xbf00000000	                              mov edi, 0	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x4004792	          0x4531f6	                          xor r14d, r14d	      5024	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004795	      0xe800000000	                          call 0x400479a	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x400479a	          0x4d89eb	                            mov r11, r13	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400479d	    0x48c744240800	                  mov qword [rsp + 8], 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40047a6	      0xe9c1f6ffff	                           jmp 0x4003e6c	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40047ab	        0x837a0805	                  cmp dword [rdx + 8], 5	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x40047af	     0xf856dfbffff	                           jne 0x4004322	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x40047b5	      0xe995fbffff	                           jmp 0x400434f	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x40047ba	    0x808b90000000	                 or byte [rbx + 0x90], 2	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40047c1	      0xe97af7ffff	                           jmp 0x4003f40	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40047c6	    0x83bb8c000000	               cmp dword [rbx + 0x8c], 1	      5263	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x40047cd	            0x743d	                            je 0x400480c	      5263	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x40047cf	        0x49037130	              add rsi, qword [r9 + 0x30]	      5269	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	ELSE_10
0x40047d3	          0x4c29de	                            sub rsi, r11	      5269	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	ELSE_10
0x40047d6	          0x4585f6	                         test r14d, r14d	      5271	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047d9	            0x7e19	                           jle 0x40047f4	      5271	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047db	          0x4489f1	                           mov ecx, r14d	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047de	      0xbf01000000	                              mov edi, 1	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047e3	          0x48d3e7	                             shl rdi, cl	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047e6	      0x488d4c3eff	                lea rcx, [rsi + rdi - 1]	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047eb	          0x4889fe	                            mov rsi, rdi	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047ee	          0x48f7de	                                 neg rsi	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047f1	          0x4821ce	                            and rsi, rcx	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x40047f4	        0x48897230	             mov qword [rdx + 0x30], rsi	      5273	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9
0x40047f8	    0x808b90000000	                 or byte [rbx + 0x90], 2	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40047ff	      0xe900f7ffff	                           jmp 0x4003f04	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004804	          0x8b4a20	            mov ecx, dword [rdx + 0x20] 	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004807	      0xe942fdffff	                           jmp 0x400454e	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400480c	    0x8b0d00000000	            mov ecx, dword [0x04004812] 	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4004812	        0x498b7138	              mov rsi, qword [r9 + 0x38]	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4004816	          0x48d3ee	                             shr rsi, cl	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4004819	        0x49037130	              add rsi, qword [r9 + 0x30]	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x400481d	            0xebb7	                           jmp 0x40047d6	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x400481f	      0xe800000000	                          call 0x4004824	      5548	ldlang.c	FUNCTION_115
ignore_bfd_errors	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	1
0x40001c0	            0xf3c3	                                     ret	      6260	ldlang.c	FUNCTION_134
lang_enter_group	CALL,2:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	23
0x4008c30	              0x53	                                push rbx	      7714	ldlang.c	FUNCTION_182
0x4008c31	    0x488b1d000000	            mov rbx, qword [0x04008c38] 	      7717	ldlang.c	FUNCTION_182
0x4008c38	      0xbf20000000	                           mov edi, 0x20	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4008c3d	      0xe800000000	                          call 0x4008c42	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4008c42	    0xc740080d0000	                mov dword [rax + 8], 0xd	      1040	ldlang.c	FUNCTION_33
0x4008c49	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4008c50	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x4008c54	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x4008c57	        0x488d5010	                   lea rdx, [rax + 0x10]	      1010	ldlang.c	FUNCTION_30
0x4008c5b	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x4008c5f	    0x48c740100000	               mov qword [rax + 0x10], 0	      1009	ldlang.c	FUNCTION_30
0x4008c67	        0x48895018	             mov qword [rax + 0x18], rdx	      1010	ldlang.c	FUNCTION_30
0x4008c6b	    0x488b05000000	            mov rax, qword [0x04008c72] 	      1016	ldlang.c	FUNCTION_31	IF_1
0x4008c72	    0x483d00000000	                              cmp rax, 0	      1016	ldlang.c	FUNCTION_31	IF_1
0x4008c78	            0x731e	                           jae 0x4008c98	      1016	ldlang.c	FUNCTION_31	IF_1
0x4008c7a	        0x488d4808	                      lea rcx, [rax + 8]	      1018	ldlang.c	FUNCTION_31
0x4008c7e	    0x48890d000000	            mov qword [0x04008c85], rcx 	      1018	ldlang.c	FUNCTION_31
0x4008c85	    0x488b0d000000	            mov rcx, qword [0x04008c8c] 	      1018	ldlang.c	FUNCTION_31
0x4008c8c	          0x488908	                    mov qword [rax], rcx	      1018	ldlang.c	FUNCTION_31
0x4008c8f	    0x488915000000	            mov qword [0x04008c96], rdx 	      1019	ldlang.c	FUNCTION_31
0x4008c96	              0x5b	                                 pop rbx	      7720	ldlang.c	FUNCTION_182
0x4008c97	              0xc3	                                     ret	      7720	ldlang.c	FUNCTION_182
0x4008c98	      0xe800000000	                          call 0x4008c9d	      7720	ldlang.c	FUNCTION_182
sort_sections_by_vma	CALL,0:functions,0:WHILE,0:FOR,0:IF,4:DO,0:SWITCH,0:ELSE,3	17
0x4000180	          0x488b0f	                    mov rcx, qword [rdi]	      4761	ldlang.c	FUNCTION_111
0x4000183	          0x488b16	                    mov rdx, qword [rsi]	      4762	ldlang.c	FUNCTION_111
0x4000186	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      4764	ldlang.c	FUNCTION_111	IF_1
0x400018a	        0x48394128	            cmp qword [rcx + 0x28], rax 	      4764	ldlang.c	FUNCTION_111	IF_1
0x400018e	            0x7220	                            jb 0x40001b0	      4764	ldlang.c	FUNCTION_111	IF_1
0x4000190	      0xb801000000	                              mov eax, 1	      4767	ldlang.c	FUNCTION_111	ELSE_1	IF_2
0x4000195	            0x771e	                            ja 0x40001b5	      4766	ldlang.c	FUNCTION_111	ELSE_1	IF_2
0x4000197	          0x8b4208	                mov eax, dword [rdx + 8]	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x400019a	          0x394108	                cmp dword [rcx + 8], eax	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x400019d	      0xbaffffffff	                     mov edx, 0xffffffff	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001a2	           0xf97c0	                                 seta al	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001a5	           0xfb6c0	                           movzx eax, al	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001a8	           0xf42c2	                          cmovb eax, edx	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001ab	              0xc3	                                     ret	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001ac	         0xf1f4000	                         nop dword [rax]	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001b0	      0xb8ffffffff	                     mov eax, 0xffffffff	      4765	ldlang.c	FUNCTION_111	IF_1
0x40001b5	            0xf3c3	                                     ret	      4774	ldlang.c	FUNCTION_111
lang_do_assignments_1	CALL,16:functions,0:WHILE,1:FOR,1:IF,16:DO,0:SWITCH,2:ELSE,3	269
0x40004f0	            0x4155	                                push r13	      5750	ldlang.c	FUNCTION_122
0x40004f2	            0x4154	                                push r12	      5750	ldlang.c	FUNCTION_122
0x40004f4	              0x55	                                push rbp	      5750	ldlang.c	FUNCTION_122
0x40004f5	              0x53	                                push rbx	      5750	ldlang.c	FUNCTION_122
0x40004f6	        0x4883ec18	                           sub rsp, 0x18	      5750	ldlang.c	FUNCTION_122
0x40004fa	          0x4885ff	                           test rdi, rdi	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40004fd	      0x48894c2408	                mov qword [rsp + 8], rcx	      5750	ldlang.c	FUNCTION_122
0x4000502	     0xf84f4000000	                            je 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000508	          0x4889fb	                            mov rbx, rdi	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400050b	          0x4989f4	                            mov r12, rsi	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400050e	          0x4989d5	                            mov r13, rdx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000511	          0x4c89c5	                             mov rbp, r8	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000514	         0xf1f4000	                         nop dword [rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000518	        0x837b080f	                cmp dword [rbx + 8], 0xf	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400051c	     0xf8716030000	                            ja 0x4000838	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000522	          0x8b4308	                mov eax, dword [rbx + 8]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000525	    0xff24c5000000	                       jmp qword [rax*8]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400052c	         0xf1f4000	                         nop dword [rax]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000530	         0xfb64500	                   movzx eax, byte [rbp]	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000534	     0xfb693900000	           movzx edx, byte [rbx + 0x90] 	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400053b	          0x83e001	                              and eax, 1	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400053e	          0x83e2df	                     and edx, 0xffffffdf	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000541	          0xc1e005	                              shl eax, 5	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000544	             0x9d0	                             or eax, edx	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000546	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x400054a	    0x888390000000	               mov byte [rbx + 0x90], al	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000550	          0x4885d2	                           test rdx, rdx	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000553	     0xf8407030000	                            je 0x4000860	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000559	            0xa808	                              test al, 8	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x400055b	     0xf85ff020000	                           jne 0x4000860	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000561	        0xf6422001	               test byte [rdx + 0x20], 1	      5769	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x4000565	            0x7411	                            je 0x4000578	      5769	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x4000567	    0x48891d000000	            mov qword [0x0400056e], rbx 	      5771	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x400056e	    0xc70500000000	               mov dword [0x04000578], 0	      5772	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x4000578	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      5774	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x400057c	      0x48894c2408	                mov qword [rsp + 8], rcx	      5774	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000581	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000585	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000589	          0x4989e8	                             mov r8, rbp	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x400058c	          0x4889de	                            mov rsi, rbx	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x400058f	      0xe85cffffff	          call sym.lang_do_assignments_1	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000594	    0xf68390000000	               test byte [rbx + 0x90], 8	      5778	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3
0x400059b	            0x7553	                           jne 0x40005f0	      5778	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3
0x400059d	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x40005a1	          0x4885d2	                           test rdx, rdx	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x40005a4	     0xf84ad000000	                            je 0x4000657	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x40005aa	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005ad	      0x2502040000	                          and eax, 0x402	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005b2	      0x3d00040000	                          cmp eax, 0x400	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005b7	     0xf8487030000	                            je 0x4000944	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005bd	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005c1	    0x8b0d00000000	            mov ecx, dword [0x040005c7] 	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005c7	          0x48d3e8	                             shr rax, cl	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005ca	      0x4801442408	                add qword [rsp + 8], rax	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40005cf	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x40005d3	          0x4885ff	                           test rdi, rdi	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x40005d6	            0x7418	                            je 0x40005f0	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x40005d8	      0x488d542408	                      lea rdx, [rsp + 8]	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x40005dd	      0xbe00000000	                              mov esi, 0	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x40005e2	      0xe800000000	                          call 0x40005e7	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x40005e7	    0x660f1f840000	                    nop word [rax + rax]	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x40005f0	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005f3	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005f6	     0xf851cffffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40005fc	      0x488b442408	                mov rax, qword [rsp + 8]	      5910	ldlang.c	FUNCTION_122
0x4000601	        0x4883c418	                           add rsp, 0x18	      5911	ldlang.c	FUNCTION_122
0x4000605	              0x5b	                                 pop rbx	      5911	ldlang.c	FUNCTION_122
0x4000606	              0x5d	                                 pop rbp	      5911	ldlang.c	FUNCTION_122
0x4000607	            0x415c	                                 pop r12	      5911	ldlang.c	FUNCTION_122
0x4000609	            0x415d	                                 pop r13	      5911	ldlang.c	FUNCTION_122
0x400060b	              0xc3	                                     ret	      5911	ldlang.c	FUNCTION_122
0x400060c	         0xf1f4000	                         nop dword [rax]	      5911	ldlang.c	FUNCTION_122
0x4000610	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5856	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000614	        0xf6402180	           test byte [rax + 0x21], 0x80 	      5858	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000618	            0x75d6	                           jne 0x40005f0	      5858	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x400061a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x400061e	    0x8b0d00000000	            mov ecx, dword [0x04000624] 	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000624	          0x48d3e8	                             shr rax, cl	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000627	      0x4801442408	                add qword [rsp + 8], rax	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x400062c	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400062f	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000632	     0xf85e0feffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000638	            0xebc2	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400063a	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000640	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000644	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000649	          0x4989e8	                             mov r8, rbp	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x400064c	          0x4c89ea	                            mov rdx, r13	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x400064f	          0x4c89e6	                            mov rsi, r12	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000652	      0xe899feffff	          call sym.lang_do_assignments_1	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000657	      0x4889442408	                mov qword [rsp + 8], rax	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x400065c	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400065f	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000662	     0xf85b0feffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000668	            0xeb92	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400066a	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000670	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000674	            0xebce	                           jmp 0x4000644	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000676	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000680	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000685	    0x488b3d000000	            mov rdi, qword [0x0400068c] 	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400068c	          0x4989e8	                             mov r8, rbp	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400068f	          0x4c89ea	                            mov rdx, r13	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000692	          0x4c89e6	                            mov rsi, r12	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000695	      0xe856feffff	          call sym.lang_do_assignments_1	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400069a	      0x4889442408	                mov qword [rsp + 8], rax	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x400069f	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006a2	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006a5	     0xf856dfeffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006ab	      0xe94cffffff	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40006b0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x40006b4	    0x48891d000000	            mov qword [0x040006bb], rbx 	      5871	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40006bb	        0x837f1008	               cmp dword [rdi + 0x10], 8	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x40006bf	            0x744d	                            je 0x400070e	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x40006c1	    0x4c3b25000000	            cmp r12, qword [0x040006c8] 	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40006c8	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      5874	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x40006cc	           0xfb610	                   movzx edx, byte [rax]	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40006cf	            0x7516	                           jne 0x40006e7	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40006d1	      0xe985020000	                           jmp 0x400095b	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40006d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x40006e0	        0x4883c001	                              add rax, 1	      5880	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x40006e4	           0xfb610	                   movzx edx, byte [rax]	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x40006e7	          0x80fa5f	                            cmp dl, 0x5f	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x40006ea	            0x74f4	                            je 0x40006e0	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x40006ec	          0x80fa65	                            cmp dl, 0x65	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x40006ef	            0x751d	                           jne 0x400070e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x40006f1	        0x8078016e	                cmp byte [rax + 1], 0x6e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x40006f5	            0x7517	                           jne 0x400070e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x40006f7	        0x80780264	                cmp byte [rax + 2], 0x64	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x40006fb	            0x7511	                           jne 0x400070e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x40006fd	        0x80780300	                   cmp byte [rax + 3], 0	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000701	            0x750b	                           jne 0x400070e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000703	    0xc74500010000	                      mov dword [rbp], 1	      5882	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x400070a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5882	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x400070e	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      5885	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000713	      0xb800000000	                              mov eax, 0	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000718	      0x488d542408	                      lea rdx, [rsp + 8]	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x400071d	          0x4885f6	                           test rsi, rsi	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000720	        0x480f44f0	                          cmove rsi, rax	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000724	      0xe800000000	                          call 0x4000729	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000729	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400072c	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400072f	     0xf85e3fdffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000735	      0xe9c2feffff	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400073a	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000740	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000744	    0x8b0d00000000	            mov ecx, dword [0x0400074a] 	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400074a	          0x48d3e8	                             shr rax, cl	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x400074d	      0x4801442408	                add qword [rsp + 8], rax	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000752	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000755	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000758	     0xf85bafdffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400075e	      0xe999feffff	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000763	       0xf1f440000	                   nop dword [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000768	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x400076c	      0x488d542408	                      lea rdx, [rsp + 8]	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x4000771	      0xbe00000000	                              mov esi, 0	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x4000776	      0xe800000000	                          call 0x400077b	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x400077b	    0x8b0500000000	            mov eax, dword [0x04000781] 	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000781	            0x85c0	                           test eax, eax	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000783	     0xf8417010000	                            je 0x40008a0	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000789	    0x488b05000000	            mov rax, qword [0x04000790] 	      5848	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000790	        0x48894338	             mov qword [rbx + 0x38], rax	      5848	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000794	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000798	      0xe800000000	                          call 0x400079d	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x400079d	    0x8b0d00000000	            mov ecx, dword [0x040007a3] 	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x40007a3	            0xd3e8	                             shr eax, cl	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x40007a5	      0x4801442408	                add qword [rsp + 8], rax	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x40007aa	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007ad	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007b0	     0xf8562fdffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007b6	      0xe941feffff	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007bb	       0xf1f440000	                   nop dword [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40007c0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x40007c4	      0x488d542408	                      lea rdx, [rsp + 8]	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x40007c9	      0xbe00000000	                              mov esi, 0	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x40007ce	      0xe800000000	                          call 0x40007d3	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x40007d3	    0x8b1500000000	            mov edx, dword [0x040007d9] 	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x40007d9	            0x85d2	                           test edx, edx	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x40007db	     0xf848f000000	                            je 0x4000870	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x40007e1	    0x488b05000000	            mov rax, qword [0x040007e8] 	      5812	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x40007e8	        0x48894320	             mov qword [rbx + 0x20], rax	      5812	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x40007ec	    0x488b15000000	            mov rdx, qword [0x040007f3] 	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x40007f3	          0x4885d2	                           test rdx, rdx	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x40007f6	            0x7408	                            je 0x4000800	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x40007f8	        0x48034228	             add rax, qword [rdx + 0x28]	      5814	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x40007fc	        0x48894320	             mov qword [rbx + 0x20], rax	      5814	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000800	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000803	      0x2d1a010000	                          sub eax, 0x11a	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000808	          0x83f804	                              cmp eax, 4	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x400080b	     0xf871f010000	                            ja 0x4000930	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000811	    0xff24c5000000	                       jmp qword [rax*8]	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000818	     0xf1f84000000	                   nop dword [rax + rax]	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000820	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      5867	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000824	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000827	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400082a	     0xf85e8fcffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000830	      0xe9c7fdffff	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000835	           0xf1f00	                         nop dword [rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000838	      0xbe12170000	                         mov esi, 0x1712	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x400083d	      0xbf00000000	                              mov edi, 0	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x4000842	      0xe800000000	                          call 0x4000847	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x4000847	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400084a	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400084d	     0xf85c5fcffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000853	      0xe9a4fdffff	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000858	     0xf1f84000000	                   nop dword [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000860	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000865	      0xe917fdffff	                           jmp 0x4000581	      5751	ldlang.c	FUNCTION_122	FOR_1
0x400086a	    0x660f1f440000	                    nop word [rax + rax]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000870	    0x833d00000000	               cmp dword [0x04000877], 4	      5816	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000877	            0x7587	                           jne 0x4000800	      5816	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000879	            0x31ff	                            xor edi, edi	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x400087b	      0xba05000000	                              mov edx, 5	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000880	      0xbe00000000	                              mov esi, 0	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000885	      0xe800000000	                          call 0x400088a	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x400088a	          0x4889c7	                            mov rdi, rax	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x400088d	            0x31c0	                            xor eax, eax	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x400088f	      0xe800000000	                          call 0x4000894	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000894	      0xe967ffffff	                           jmp 0x4000800	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000899	     0xf1f80000000	                         nop dword [rax]	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x40008a0	    0x833d00000000	               cmp dword [0x040008a7], 4	      5849	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008a7	     0xf85e7feffff	                           jne 0x4000794	      5849	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008ad	            0x31ff	                            xor edi, edi	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008af	      0xba05000000	                              mov edx, 5	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008b4	      0xbe00000000	                              mov esi, 0	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008b9	      0xe800000000	                          call 0x40008be	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008be	          0x4889c7	                            mov rdi, rax	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008c1	            0x31c0	                            xor eax, eax	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008c3	      0xe800000000	                          call 0x40008c8	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008c8	      0xe9c7feffff	                           jmp 0x4000794	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008cd	           0xf1f00	                         nop dword [rax]	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x40008d0	      0xb804000000	                              mov eax, 4	      5829	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x40008d5	    0x8b0d00000000	            mov ecx, dword [0x040008db] 	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x40008db	      0xba01000000	                              mov edx, 1	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x40008e0	            0xd3e2	                             shl edx, cl	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x40008e2	            0x39d0	                            cmp eax, edx	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40008e4	           0xf42c2	                          cmovb eax, edx	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40008e7	            0xd3e8	                             shr eax, cl	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40008e9	      0x4801442408	                add qword [rsp + 8], rax	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x40008ee	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40008f1	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40008f4	     0xf851efcffff	                           jne 0x4000518	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40008fa	      0xe9fdfcffff	                           jmp 0x40005fc	      5751	ldlang.c	FUNCTION_122	FOR_1
0x40008ff	              0x90	                                     nop	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000900	      0xb808000000	                              mov eax, 8	      5826	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000905	            0xebce	                           jmp 0x40008d5	      5826	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000907	    0x660f1f840000	                    nop word [rax + rax]	      5826	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000910	      0xb801000000	                              mov eax, 1	      5835	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000915	            0xebbe	                           jmp 0x40008d5	      5836	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000917	    0x660f1f840000	                    nop word [rax + rax]	      5836	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000920	      0xb802000000	                              mov eax, 2	      5832	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000925	            0xebae	                           jmp 0x40008d5	      5833	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000927	    0x660f1f840000	                    nop word [rax + rax]	      5833	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000930	      0xba00000000	                              mov edx, 0	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x4000935	      0xbebf160000	                         mov esi, 0x16bf	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x400093a	      0xbf00000000	                              mov edi, 0	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x400093f	      0xe800000000	                          call 0x4000944	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x4000944	     0xfb605000000	           movzx eax, byte [0x0400094b] 	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400094b	          0x83e003	                              and eax, 3	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400094e	            0x3c02	                               cmp al, 2	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000950	     0xf8579fcffff	                           jne 0x40005cf	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000956	      0xe962fcffff	                           jmp 0x40005bd	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400095b	          0x80fa2e	                            cmp dl, 0x2e	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x400095e	     0xf8583fdffff	                           jne 0x40006e7	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000964	        0x80780100	                   cmp byte [rax + 1], 0	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000968	     0xf85a0fdffff	                           jne 0x400070e	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x400096e	    0xc70500000000	               mov dword [0x04000978], 1	      5877	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000978	      0xe991fdffff	                           jmp 0x400070e	      5877	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
walk_wild_section_specs3_wild2	CALL,7:functions,0:WHILE,0:FOR,1:IF,4:DO,0:SWITCH,0:ELSE,2	96
0x4002ab0	            0x4157	                                push r15	       649	ldlang.c	FUNCTION_21
0x4002ab2	            0x4156	                                push r14	       649	ldlang.c	FUNCTION_21
0x4002ab4	            0x4155	                                push r13	       649	ldlang.c	FUNCTION_21
0x4002ab6	            0x4154	                                push r12	       649	ldlang.c	FUNCTION_21
0x4002ab8	          0x4989f5	                            mov r13, rsi	       649	ldlang.c	FUNCTION_21
0x4002abb	              0x55	                                push rbp	       649	ldlang.c	FUNCTION_21
0x4002abc	              0x53	                                push rbx	       649	ldlang.c	FUNCTION_21
0x4002abd	          0x4989fc	                            mov r12, rdi	       649	ldlang.c	FUNCTION_21
0x4002ac0	        0x4883ec48	                           sub rsp, 0x48	       649	ldlang.c	FUNCTION_21
0x4002ac4	        0x488b5f58	            mov rbx, qword [rdi + 0x58] 	       652	ldlang.c	FUNCTION_21
0x4002ac8	        0x4c8b7f60	            mov r15, qword [rdi + 0x60] 	       653	ldlang.c	FUNCTION_21
0x4002acc	    0x64488b042528	                mov rax, qword fs:[0x28]	       649	ldlang.c	FUNCTION_21
0x4002ad5	      0x4889442438	             mov qword [rsp + 0x38], rax	       649	ldlang.c	FUNCTION_21
0x4002ada	            0x31c0	                            xor eax, eax	       649	ldlang.c	FUNCTION_21
0x4002adc	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       651	ldlang.c	FUNCTION_21
0x4002ae0	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       651	ldlang.c	FUNCTION_21
0x4002ae4	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       649	ldlang.c	FUNCTION_21
0x4002ae9	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002aee	      0x4889542408	                mov qword [rsp + 8], rdx	       649	ldlang.c	FUNCTION_21
0x4002af3	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002af8	    0x48c744242000	               mov qword [rsp + 0x20], 0	       348	ldlang.c	FUNCTION_10
0x4002b01	        0x488b7008	                mov rsi, qword [rax + 8]	       348	ldlang.c	FUNCTION_10
0x4002b05	      0x4889442418	             mov qword [rsp + 0x18], rax	       651	ldlang.c	FUNCTION_21
0x4002b0a	    0xc74424280000	               mov dword [rsp + 0x28], 0	       348	ldlang.c	FUNCTION_10
0x4002b12	      0xe800000000	                          call 0x4002b17	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002b17	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       657	ldlang.c	FUNCTION_21	IF_1
0x4002b1b	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       353	ldlang.c	FUNCTION_10
0x4002b20	            0x85c0	                           test eax, eax	       657	ldlang.c	FUNCTION_21	IF_1
0x4002b22	     0xf85d0000000	                           jne 0x4002bf8	       657	ldlang.c	FUNCTION_21	IF_1
0x4002b28	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b2c	    0x4c8bb0900000	            mov r14, qword [rax + 0x90] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b33	          0x4d85f6	                           test r14, r14	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b36	            0x752c	                           jne 0x4002b64	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b38	            0xeb76	                           jmp 0x4002bb0	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b3a	    0x660f1f440000	                    nop word [rax + rax]	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b40	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002b45	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002b4a	          0x4889d9	                            mov rcx, rbx	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002b4d	          0x4c89f2	                            mov rdx, r14	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002b50	          0x4c89ee	                            mov rsi, r13	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002b53	          0x4c89e7	                            mov rdi, r12	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002b56	      0xe8a5fbffff	     call sym.walk_wild_consider_section	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002b5b	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b5f	          0x4d85f6	                           test r14, r14	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b62	            0x744c	                            je 0x4002bb0	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002b64	          0x4c39f5	                            cmp rbp, r14	       665	ldlang.c	FUNCTION_21	FOR_1	IF_2
0x4002b67	            0x7467	                            je 0x4002bd0	       665	ldlang.c	FUNCTION_21	FOR_1	IF_2
0x4002b69	          0x4d8b06	                     mov r8, qword [r14]	       669	ldlang.c	FUNCTION_21	FOR_1	ELSE_1
0x4002b6c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       670	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_4
0x4002b70	          0x4c89c6	                             mov rsi, r8	       670	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_4
0x4002b73	      0xe828e5ffff	              call sym.match_simple_wild	       670	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_4
0x4002b78	            0x85c0	                           test eax, eax	       672	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	IF_3
0x4002b7a	            0x75c4	                           jne 0x4002b40	       672	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	IF_3
0x4002b7c	        0x498b7f08	                mov rdi, qword [r15 + 8]	       676	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	CALL_6
0x4002b80	          0x4c89c6	                             mov rsi, r8	       676	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	CALL_6
0x4002b83	      0xe818e5ffff	              call sym.match_simple_wild	       676	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	CALL_6
0x4002b88	            0x85c0	                           test eax, eax	       677	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4
0x4002b8a	            0x74cf	                            je 0x4002b5b	       677	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4
0x4002b8c	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002b91	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002b96	          0x4c89f2	                            mov rdx, r14	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002b99	          0x4c89f9	                            mov rcx, r15	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002b9c	          0x4c89ee	                            mov rsi, r13	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002b9f	          0x4c89e7	                            mov rdi, r12	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002ba2	      0xe859fbffff	     call sym.walk_wild_consider_section	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002ba7	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002bab	          0x4d85f6	                           test r14, r14	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002bae	            0x75b4	                           jne 0x4002b64	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002bb0	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       683	ldlang.c	FUNCTION_21
0x4002bb5	    0x644833042528	                xor rax, qword fs:[0x28]	       683	ldlang.c	FUNCTION_21
0x4002bbe	            0x754f	                           jne 0x4002c0f	       683	ldlang.c	FUNCTION_21
0x4002bc0	        0x4883c448	                           add rsp, 0x48	       683	ldlang.c	FUNCTION_21
0x4002bc4	              0x5b	                                 pop rbx	       683	ldlang.c	FUNCTION_21
0x4002bc5	              0x5d	                                 pop rbp	       683	ldlang.c	FUNCTION_21
0x4002bc6	            0x415c	                                 pop r12	       683	ldlang.c	FUNCTION_21
0x4002bc8	            0x415d	                                 pop r13	       683	ldlang.c	FUNCTION_21
0x4002bca	            0x415e	                                 pop r14	       683	ldlang.c	FUNCTION_21
0x4002bcc	            0x415f	                                 pop r15	       683	ldlang.c	FUNCTION_21
0x4002bce	              0xc3	                                     ret	       683	ldlang.c	FUNCTION_21
0x4002bcf	              0x90	                                     nop	       683	ldlang.c	FUNCTION_21
0x4002bd0	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002bd5	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002bda	          0x4889ea	                            mov rdx, rbp	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002bdd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002be2	          0x4c89ee	                            mov rsi, r13	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002be5	          0x4c89e7	                            mov rdi, r12	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002be8	      0xe813fbffff	     call sym.walk_wild_consider_section	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002bed	      0xe969ffffff	                           jmp 0x4002b5b	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002bf2	    0x660f1f440000	                    nop word [rax + rax]	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002bf8	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002bfd	      0x488b542408	                mov rdx, qword [rsp + 8]	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002c02	          0x4c89ee	                            mov rsi, r13	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002c05	          0x4c89e7	                            mov rdi, r12	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002c08	      0xe8e3fbffff	      call sym.walk_wild_section_general	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002c0d	            0xeba1	                           jmp 0x4002bb0	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002c0f	      0xe800000000	                          call 0x4002c14	       683	ldlang.c	FUNCTION_21
lang_define_start_stop	CALL,1:functions,0:WHILE,0:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,0	29
0x4000d30	    0x488b05000000	            mov rax, qword [0x04000d37] 	      6015	ldlang.c	FUNCTION_125
0x4000d37	              0x53	                                push rbx	      6012	ldlang.c	FUNCTION_125
0x4000d38	          0x4889f2	                            mov rdx, rsi	      6012	ldlang.c	FUNCTION_125
0x4000d3b	          0x4889fe	                            mov rsi, rdi	      6015	ldlang.c	FUNCTION_125
0x4000d3e	      0xbf00000000	                              mov edi, 0	      6015	ldlang.c	FUNCTION_125
0x4000d43	        0x488b4008	                mov rax, qword [rax + 8]	      6015	ldlang.c	FUNCTION_125
0x4000d47	    0xff9030030000	                call qword [rax + 0x330]	      6015	ldlang.c	FUNCTION_125
0x4000d4d	          0x4885c0	                           test rax, rax	      6016	ldlang.c	FUNCTION_125	IF_1
0x4000d50	            0x7429	                            je 0x4000d7b	      6016	ldlang.c	FUNCTION_125	IF_1
0x4000d52	    0x488b35000000	            mov rsi, qword [0x04000d59] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d59	    0x483b35000000	            cmp rsi, qword [0x04000d60] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d60	          0x4889c3	                            mov rbx, rax	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d63	            0x741b	                            je 0x4000d80	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d65	    0x488b05000000	            mov rax, qword [0x04000d6c] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d6c	        0x488d5601	                      lea rdx, [rsi + 1]	      6025	ldlang.c	FUNCTION_125	IF_1
0x4000d70	        0x48891cf0	            mov qword [rax + rsi*8], rbx	      6025	ldlang.c	FUNCTION_125	IF_1
0x4000d74	    0x488915000000	            mov qword [0x04000d7b], rdx 	      6025	ldlang.c	FUNCTION_125	IF_1
0x4000d7b	              0x5b	                                 pop rbx	      6027	ldlang.c	FUNCTION_125
0x4000d7c	              0xc3	                                     ret	      6027	ldlang.c	FUNCTION_125
0x4000d7d	           0xf1f00	                         nop dword [rax]	      6027	ldlang.c	FUNCTION_125
0x4000d80	        0x4883c605	                              add rsi, 5	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d84	    0x488b3d000000	            mov rdi, qword [0x04000d8b] 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4000d8b	        0x488d0436	                    lea rax, [rsi + rsi]	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d8f	        0x48c1e604	                              shl rsi, 4	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4000d93	    0x488905000000	            mov qword [0x04000d9a], rax 	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4000d9a	      0xe800000000	                          call 0x4000d9f	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4000d9f	    0x488b35000000	            mov rsi, qword [0x04000da6] 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4000da6	    0x488905000000	            mov qword [0x04000dad], rax 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4000dad	            0xebbd	                           jmp 0x4000d6c	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
next_matching_output_section_statement	CALL,1:functions,0:WHILE,0:FOR,0:IF,1:DO,1:SWITCH,0:ELSE,0	36
0x4004e70	            0x4154	                                push r12	      1496	ldlang.c	FUNCTION_46
0x4004e72	              0x55	                                push rbp	      1496	ldlang.c	FUNCTION_46
0x4004e73	            0x89f5	                            mov ebp, esi	      1496	ldlang.c	FUNCTION_46
0x4004e75	              0x53	                                push rbx	      1496	ldlang.c	FUNCTION_46
0x4004e76	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	      1502	ldlang.c	FUNCTION_46
0x4004e7a	        0x488d5fe8	                   lea rbx, [rdi - 0x18]	      1499	ldlang.c	FUNCTION_46
0x4004e7e	        0x4c3b67f0	             cmp r12, qword [rdi - 0x10]	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004e82	            0x7414	                            je 0x4004e98	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004e84	      0xbee0050000	                          mov esi, 0x5e0	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004e89	      0xbf00000000	                              mov edi, 0	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004e8e	      0xe800000000	                          call 0x4004e93	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004e93	       0xf1f440000	                   nop dword [rax + rax]	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004e98	          0x488b1b	                    mov rbx, qword [rbx]	      1507	ldlang.c	FUNCTION_46	DO_1
0x4004e9b	          0x4885db	                           test rbx, rbx	      1508	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004e9e	            0x7428	                            je 0x4004ec8	      1508	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004ea0	        0x4c3b6348	            cmp r12, qword [rbx + 0x48] 	      1509	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004ea4	            0x7522	                           jne 0x4004ec8	      1509	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004ea6	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1512	ldlang.c	FUNCTION_46
0x4004eac	            0x39e8	                            cmp eax, ebp	      1514	ldlang.c	FUNCTION_46
0x4004eae	            0x740b	                            je 0x4004ebb	      1514	ldlang.c	FUNCTION_46
0x4004eb0	          0xc1e81f	                           shr eax, 0x1f	      1514	ldlang.c	FUNCTION_46
0x4004eb3	            0x84c0	                             test al, al	      1514	ldlang.c	FUNCTION_46
0x4004eb5	            0x75e1	                           jne 0x4004e98	      1514	ldlang.c	FUNCTION_46
0x4004eb7	            0x85ed	                           test ebp, ebp	      1514	ldlang.c	FUNCTION_46
0x4004eb9	            0x75dd	                           jne 0x4004e98	      1514	ldlang.c	FUNCTION_46
0x4004ebb	        0x488d4318	                   lea rax, [rbx + 0x18]	      1516	ldlang.c	FUNCTION_46
0x4004ebf	              0x5b	                                 pop rbx	      1517	ldlang.c	FUNCTION_46
0x4004ec0	              0x5d	                                 pop rbp	      1517	ldlang.c	FUNCTION_46
0x4004ec1	            0x415c	                                 pop r12	      1517	ldlang.c	FUNCTION_46
0x4004ec3	              0xc3	                                     ret	      1517	ldlang.c	FUNCTION_46
0x4004ec4	         0xf1f4000	                         nop dword [rax]	      1517	ldlang.c	FUNCTION_46
0x4004ec8	              0x5b	                                 pop rbx	      1517	ldlang.c	FUNCTION_46
0x4004ec9	            0x31c0	                            xor eax, eax	      1510	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004ecb	              0x5d	                                 pop rbp	      1517	ldlang.c	FUNCTION_46
0x4004ecc	            0x415c	                                 pop r12	      1517	ldlang.c	FUNCTION_46
0x4004ece	              0xc3	                                     ret	      1517	ldlang.c	FUNCTION_46
get_target	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	8
0x4000330	        0x4883ec08	                              sub rsp, 8	      2934	ldlang.c	FUNCTION_68
0x4000334	          0x488b3f	                    mov rdi, qword [rdi]	      2937	ldlang.c	FUNCTION_68
0x4000337	      0xe800000000	                          call 0x400033c	      2937	ldlang.c	FUNCTION_68
0x400033c	            0x85c0	                           test eax, eax	      2937	ldlang.c	FUNCTION_68
0x400033e	           0xf94c0	                                 sete al	      2937	ldlang.c	FUNCTION_68
0x4000341	        0x4883c408	                              add rsp, 8	      2938	ldlang.c	FUNCTION_68
0x4000345	           0xfb6c0	                           movzx eax, al	      2937	ldlang.c	FUNCTION_68
0x4000348	              0xc3	                                     ret	      2938	ldlang.c	FUNCTION_68
lang_leave_output_section_statement	CALL,2:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	32
0x4008680	              0x55	                                push rbp	      7656	ldlang.c	FUNCTION_178
0x4008681	              0x53	                                push rbx	      7656	ldlang.c	FUNCTION_178
0x4008682	          0x4889fd	                            mov rbp, rdi	      7656	ldlang.c	FUNCTION_178
0x4008685	          0x4531c9	                            xor r9d, r9d	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4008688	          0x4889f0	                            mov rax, rsi	      7656	ldlang.c	FUNCTION_178
0x400868b	          0x4889d3	                            mov rbx, rdx	      7656	ldlang.c	FUNCTION_178
0x400868e	        0x4883ec08	                              sub rsp, 8	      7656	ldlang.c	FUNCTION_178
0x4008692	    0x488b3d000000	            mov rdi, qword [0x04008699] 	      7661	ldlang.c	FUNCTION_178
0x4008699	          0x4889c2	                            mov rdx, rax	      7657	ldlang.c	FUNCTION_178	CALL_1
0x400869c	      0x48837f5800	               cmp qword [rdi + 0x58], 0	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086a1	        0x488d7748	                   lea rsi, [rdi + 0x48]	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086a5	        0x410f95c1	                               setne r9b	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086a9	          0x4531c0	                            xor r8d, r8d	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086ac	      0x48837f6000	               cmp qword [rdi + 0x60], 0	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086b1	        0x410f95c0	                               setne r8b	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086b5	        0x4883c740	                           add rdi, 0x40	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086b9	      0xe872c1ffff	               call sym.lang_get_regions	      7657	ldlang.c	FUNCTION_178	CALL_1
0x40086be	    0x488b05000000	            mov rax, qword [0x040086c5] 	      7663	ldlang.c	FUNCTION_178
0x40086c5	        0x48896850	             mov qword [rax + 0x50], rbp	      7663	ldlang.c	FUNCTION_178
0x40086c9	        0x48895870	             mov qword [rax + 0x70], rbx	      7664	ldlang.c	FUNCTION_178
0x40086cd	    0x488b05000000	            mov rax, qword [0x040086d4] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x40086d4	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x40086da	            0x761d	                           jbe 0x40086f9	      1025	ldlang.c	FUNCTION_32	IF_1
0x40086dc	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x40086e0	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x40086e4	    0x488915000000	            mov qword [0x040086eb], rdx 	      1027	ldlang.c	FUNCTION_32
0x40086eb	    0x488905000000	            mov qword [0x040086f2], rax 	      1027	ldlang.c	FUNCTION_32
0x40086f2	        0x4883c408	                              add rsp, 8	      7666	ldlang.c	FUNCTION_178
0x40086f6	              0x5b	                                 pop rbx	      7666	ldlang.c	FUNCTION_178
0x40086f7	              0x5d	                                 pop rbp	      7666	ldlang.c	FUNCTION_178
0x40086f8	              0xc3	                                     ret	      7666	ldlang.c	FUNCTION_178
0x40086f9	      0xe800000000	                          call 0x40086fe	      7666	ldlang.c	FUNCTION_178
lang_vers_match	CALL,12:functions,0:WHILE,3:FOR,1:IF,21:DO,0:SWITCH,1:ELSE,6	206
0x4000db0	            0x4157	                                push r15	      8126	ldlang.c	FUNCTION_192
0x4000db2	            0x4156	                                push r14	      8126	ldlang.c	FUNCTION_192
0x4000db4	          0x4989fe	                            mov r14, rdi	      8126	ldlang.c	FUNCTION_192
0x4000db7	            0x4155	                                push r13	      8126	ldlang.c	FUNCTION_192
0x4000db9	            0x4154	                                push r12	      8126	ldlang.c	FUNCTION_192
0x4000dbb	      0xbfffffffff	                     mov edi, 0xffffffff	      8134	ldlang.c	FUNCTION_192	CALL_1
0x4000dc0	              0x55	                                push rbp	      8126	ldlang.c	FUNCTION_192
0x4000dc1	              0x53	                                push rbx	      8126	ldlang.c	FUNCTION_192
0x4000dc2	          0x4989d5	                            mov r13, rdx	      8126	ldlang.c	FUNCTION_192
0x4000dc5	          0x4d89ec	                            mov r12, r13	      8126	ldlang.c	FUNCTION_192
0x4000dc8	        0x4883ec38	                           sub rsp, 0x38	      8126	ldlang.c	FUNCTION_192
0x4000dcc	    0x8b1d00000000	            mov ebx, dword [0x04000dd2] 	      8133	ldlang.c	FUNCTION_192
0x4000dd2	      0x4889742408	                mov qword [rsp + 8], rsi	      8126	ldlang.c	FUNCTION_192
0x4000dd7	    0x64488b042528	                mov rax, qword fs:[0x28]	      8126	ldlang.c	FUNCTION_192
0x4000de0	      0x4889442428	             mov qword [rsp + 0x28], rax	      8126	ldlang.c	FUNCTION_192
0x4000de5	            0x31c0	                            xor eax, eax	      8126	ldlang.c	FUNCTION_192
0x4000de7	      0xe800000000	                          call 0x4000dec	      8134	ldlang.c	FUNCTION_192	CALL_1
0x4000dec	    0x488b3d000000	            mov rdi, qword [0x04000df3] 	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000df3	            0x31d2	                            xor edx, edx	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000df5	          0x4c89ee	                            mov rsi, r13	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000df8	      0xe800000000	                          call 0x4000dfd	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000dfd	            0x89df	                            mov edi, ebx	      8138	ldlang.c	FUNCTION_192	CALL_3
0x4000dff	          0x4885c0	                           test rax, rax	      8138	ldlang.c	FUNCTION_192	CALL_3
0x4000e02	          0x4889c5	                            mov rbp, rax	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000e05	        0x490f44ed	                          cmove rbp, r13	      8135	ldlang.c	FUNCTION_192	CALL_2
0x4000e09	      0xe800000000	                          call 0x4000e0e	      8138	ldlang.c	FUNCTION_192	CALL_3
0x4000e0e	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8140	ldlang.c	FUNCTION_192	IF_2
0x4000e12	            0xa802	                              test al, 2	      8140	ldlang.c	FUNCTION_192	IF_2
0x4000e14	     0xf8596010000	                           jne 0x4000fb0	      8140	ldlang.c	FUNCTION_192	IF_2
0x4000e1a	            0xa804	                              test al, 4	      8147	ldlang.c	FUNCTION_192	IF_4
0x4000e1c	     0xf8566010000	                           jne 0x4000f88	      8147	ldlang.c	FUNCTION_192	IF_4
0x4000e22	          0x4c89eb	                            mov rbx, r13	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000e25	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e29	          0x4885ff	                           test rdi, rdi	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e2c	     0xf848e000000	                            je 0x4000ec0	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e32	      0x488b442408	                mov rax, qword [rsp + 8]	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e37	          0x4885c0	                           test rax, rax	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e3a	     0xf84a0010000	                            je 0x4000fe0	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e40	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e44	            0xa801	                              test al, 1	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e46	     0xf8424010000	                            je 0x4000f70	      8154	ldlang.c	FUNCTION_192	IF_6
0x4000e4c	          0xc0e803	                               shr al, 3	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e4f	          0x83e007	                              and eax, 7	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e52	            0x3c01	                               cmp al, 1	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e54	     0xf84d6010000	                            je 0x4001030	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e5a	     0xf8280010000	                            jb 0x4000fe0	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e60	            0x3c02	                               cmp al, 2	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e62	            0x755c	                           jne 0x4000ec0	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e64	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4000e68	            0xa804	                              test al, 4	      8187	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000e6a	            0x7454	                            je 0x4000ec0	      8187	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000e6c	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000e70	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000e75	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      8189	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000e7a	      0xe800000000	                          call 0x4000e7f	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000e7f	          0x4885c0	                           test rax, rax	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000e82	          0x4989c7	                            mov r15, rax	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4000e85	            0x7521	                           jne 0x4000ea8	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000e87	            0xeb37	                           jmp 0x4000ec0	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000e89	     0xf1f80000000	                         nop dword [rax]	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000e90	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000e95	          0x83e038	                           and eax, 0x38	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000e98	            0x3c20	                            cmp al, 0x20	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000e9a	     0xf8480000000	                            je 0x4000f20	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4000ea0	          0x4d8b3f	                    mov r15, qword [r15]	      8196	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	ELSE_3
0x4000ea3	          0x4d85ff	                           test r15, r15	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000ea6	            0x7418	                            je 0x4000ec0	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000ea8	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000eac	          0x4889de	                            mov rsi, rbx	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000eaf	      0xe800000000	                          call 0x4000eb4	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000eb4	            0x85c0	                           test eax, eax	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000eb6	            0x74d8	                            je 0x4000e90	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000eb8	     0xf1f84000000	                   nop dword [rax + rax]	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4000ec0	      0x488b442408	                mov rax, qword [rsp + 8]	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000ec5	          0x4885c0	                           test rax, rax	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000ec8	            0x740a	                            je 0x4000ed4	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000eca	        0xf6401001	               test byte [rax + 0x10], 1	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000ece	     0xf849c000000	                            je 0x4000f70	      8205	ldlang.c	FUNCTION_192	IF_13
0x4000ed4	        0x4d8b7e10	            mov r15, qword [r14 + 0x10] 	      8206	ldlang.c	FUNCTION_192	IF_13
0x4000ed8	            0xeb2c	                           jmp 0x4000f06	      8206	ldlang.c	FUNCTION_192	IF_13
0x4000eda	    0x660f1f440000	                    nop word [rax + rax]	      8206	ldlang.c	FUNCTION_192	IF_13
0x4000ee0	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000ee5	          0x4889de	                            mov rsi, rbx	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000ee8	          0x83e038	                           and eax, 0x38	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000eeb	            0x3c20	                            cmp al, 0x20	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000eed	            0x7409	                            je 0x4000ef8	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4000eef	            0x3c10	                            cmp al, 0x10	      8221	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_5	IF_17
0x4000ef1	          0x4c89e6	                            mov rsi, r12	      8221	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_5	IF_17
0x4000ef4	        0x480f45f5	                         cmovne rsi, rbp	      8221	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_5	IF_17
0x4000ef8	            0x31d2	                            xor edx, edx	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000efa	      0xe800000000	                          call 0x4000eff	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000eff	            0x85c0	                           test eax, eax	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000f01	            0x741d	                            je 0x4000f20	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4000f03	          0x4d8b3f	                    mov r15, qword [r15]	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f06	          0x4d85ff	                           test r15, r15	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f09	            0x7475	                            je 0x4000f80	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f0b	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4000f0f	          0x4885ff	                           test rdi, rdi	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4000f12	            0x74ef	                            je 0x4000f03	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4000f14	          0x803f2a	                    cmp byte [rdi], 0x2a	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000f17	            0x75c7	                           jne 0x4000ee0	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000f19	        0x807f0100	                   cmp byte [rdi + 1], 0	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000f1d	            0x75c1	                           jne 0x4000ee0	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000f1f	              0x90	                                     nop	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4000f20	          0x4c39ed	                            cmp rbp, r13	      8230	ldlang.c	FUNCTION_192	IF_19
0x4000f23	            0x7408	                            je 0x4000f2d	      8230	ldlang.c	FUNCTION_192	IF_19
0x4000f25	          0x4889ef	                            mov rdi, rbp	      8231	ldlang.c	FUNCTION_192	CALL_10
0x4000f28	      0xe800000000	                          call 0x4000f2d	      8231	ldlang.c	FUNCTION_192	CALL_10
0x4000f2d	          0x4d39ec	                            cmp r12, r13	      8232	ldlang.c	FUNCTION_192	IF_20
0x4000f30	            0x7408	                            je 0x4000f3a	      8232	ldlang.c	FUNCTION_192	IF_20
0x4000f32	          0x4c89e7	                            mov rdi, r12	      8233	ldlang.c	FUNCTION_192	CALL_11
0x4000f35	      0xe800000000	                          call 0x4000f3a	      8233	ldlang.c	FUNCTION_192	CALL_11
0x4000f3a	          0x4c39eb	                            cmp rbx, r13	      8234	ldlang.c	FUNCTION_192	IF_21
0x4000f3d	            0x7408	                            je 0x4000f47	      8234	ldlang.c	FUNCTION_192	IF_21
0x4000f3f	          0x4889df	                            mov rdi, rbx	      8235	ldlang.c	FUNCTION_192	CALL_12
0x4000f42	      0xe800000000	                          call 0x4000f47	      8235	ldlang.c	FUNCTION_192	CALL_12
0x4000f47	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8237	ldlang.c	FUNCTION_192
0x4000f4c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8237	ldlang.c	FUNCTION_192
0x4000f55	          0x4c89f8	                            mov rax, r15	      8237	ldlang.c	FUNCTION_192
0x4000f58	     0xf8533010000	                           jne 0x4001091	      8237	ldlang.c	FUNCTION_192
0x4000f5e	        0x4883c438	                           add rsp, 0x38	      8237	ldlang.c	FUNCTION_192
0x4000f62	              0x5b	                                 pop rbx	      8237	ldlang.c	FUNCTION_192
0x4000f63	              0x5d	                                 pop rbp	      8237	ldlang.c	FUNCTION_192
0x4000f64	            0x415c	                                 pop r12	      8237	ldlang.c	FUNCTION_192
0x4000f66	            0x415d	                                 pop r13	      8237	ldlang.c	FUNCTION_192
0x4000f68	            0x415e	                                 pop r14	      8237	ldlang.c	FUNCTION_192
0x4000f6a	            0x415f	                                 pop r15	      8237	ldlang.c	FUNCTION_192
0x4000f6c	              0xc3	                                     ret	      8237	ldlang.c	FUNCTION_192
0x4000f6d	           0xf1f00	                         nop dword [rax]	      8237	ldlang.c	FUNCTION_192
0x4000f70	      0x488b442408	                mov rax, qword [rsp + 8]	      8208	ldlang.c	FUNCTION_192	ELSE_4
0x4000f75	          0x4c8b38	                    mov r15, qword [rax]	      8208	ldlang.c	FUNCTION_192	ELSE_4
0x4000f78	          0x4d85ff	                           test r15, r15	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f7b	            0x758e	                           jne 0x4000f0b	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f7d	           0xf1f00	                         nop dword [rax]	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f80	          0x4531ff	                          xor r15d, r15d	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f83	            0xeb9b	                           jmp 0x4000f20	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f85	           0xf1f00	                         nop dword [rax]	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4000f88	    0x488b3d000000	            mov rdi, qword [0x04000f8f] 	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000f8f	      0xba04000000	                              mov edx, 4	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000f94	          0x4c89ee	                            mov rsi, r13	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000f97	      0xe800000000	                          call 0x4000f9c	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000f9c	          0x4885c0	                           test rax, rax	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000f9f	          0x4889c3	                            mov rbx, rax	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4000fa2	     0xf857dfeffff	                           jne 0x4000e25	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000fa8	      0xe975feffff	                           jmp 0x4000e22	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000fad	           0xf1f00	                         nop dword [rax]	      8150	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4000fb0	    0x488b3d000000	            mov rdi, qword [0x04000fb7] 	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000fb7	      0xba03000000	                              mov edx, 3	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000fbc	          0x4c89ee	                            mov rsi, r13	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000fbf	      0xe800000000	                          call 0x4000fc4	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000fc4	          0x4989c4	                            mov r12, rax	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000fc7	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x4000fcb	          0x4d85e4	                           test r12, r12	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000fce	     0xf8546feffff	                           jne 0x4000e1a	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000fd4	          0x4d89ec	                            mov r12, r13	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000fd7	      0xe93efeffff	                           jmp 0x4000e1a	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000fdc	         0xf1f4000	                         nop dword [rax]	      8144	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4000fe0	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000fe4	            0xa801	                              test al, 1	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000fe6	            0x744c	                            je 0x4001034	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000fe8	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000fed	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      8163	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000ff2	      0xe800000000	                          call 0x4000ff7	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000ff7	          0x4885c0	                           test rax, rax	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000ffa	          0x4989c7	                            mov r15, rax	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4000ffd	            0x7521	                           jne 0x4001020	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4000fff	            0xeb2f	                           jmp 0x4001030	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4001001	     0xf1f80000000	                         nop dword [rax]	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4001008	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x400100d	          0x83e038	                           and eax, 0x38	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4001010	            0x3c08	                               cmp al, 8	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4001012	     0xf8408ffffff	                            je 0x4000f20	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4001018	          0x4d8b3f	                    mov r15, qword [r15]	      8170	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	ELSE_1
0x400101b	          0x4d85ff	                           test r15, r15	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x400101e	            0x7410	                            je 0x4001030	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4001020	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4001024	          0x4889ee	                            mov rsi, rbp	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4001027	      0xe800000000	                          call 0x400102c	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x400102c	            0x85c0	                           test eax, eax	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x400102e	            0x74d8	                            je 0x4001008	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4001030	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4001034	            0xa802	                              test al, 2	      8174	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4001036	     0xf842cfeffff	                            je 0x4000e68	      8174	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x400103c	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4001040	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4001045	      0x4c89642418	             mov qword [rsp + 0x18], r12	      8176	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x400104a	      0xe800000000	                          call 0x400104f	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x400104f	          0x4885c0	                           test rax, rax	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001052	          0x4989c7	                            mov r15, rax	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x4001055	            0x7525	                           jne 0x400107c	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001057	      0xe908feffff	                           jmp 0x4000e64	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x400105c	         0xf1f4000	                         nop dword [rax]	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001060	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x4001065	          0x83e038	                           and eax, 0x38	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x4001068	            0x3c10	                            cmp al, 0x10	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x400106a	     0xf84b0feffff	                            je 0x4000f20	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x4001070	          0x4d8b3f	                    mov r15, qword [r15]	      8183	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	ELSE_2
0x4001073	          0x4d85ff	                           test r15, r15	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001076	     0xf84e8fdffff	                            je 0x4000e64	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x400107c	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001080	          0x4c89e6	                            mov rsi, r12	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001083	      0xe800000000	                          call 0x4001088	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001088	            0x85c0	                           test eax, eax	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x400108a	            0x74d4	                            je 0x4001060	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x400108c	      0xe9d3fdffff	                           jmp 0x4000e64	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x4001091	      0xe800000000	                          call 0x4001096	      8237	ldlang.c	FUNCTION_192
section_iterator_callback	CALL,0:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,0	9
0x4000040	        0x48833a00	                      cmp qword [rdx], 0	       333	ldlang.c	FUNCTION_9	IF_1
0x4000044	            0x7412	                            je 0x4000058	       333	ldlang.c	FUNCTION_9	IF_1
0x4000046	    0xc74208010000	                  mov dword [rdx + 8], 1	       335	ldlang.c	FUNCTION_9	IF_1
0x400004d	      0xb801000000	                              mov eax, 1	       336	ldlang.c	FUNCTION_9	IF_1
0x4000052	              0xc3	                                     ret	       336	ldlang.c	FUNCTION_9	IF_1
0x4000053	       0xf1f440000	                   nop dword [rax + rax]	       336	ldlang.c	FUNCTION_9	IF_1
0x4000058	          0x488932	                    mov qword [rdx], rsi	       339	ldlang.c	FUNCTION_9
0x400005b	            0x31c0	                            xor eax, eax	       340	ldlang.c	FUNCTION_9
0x400005d	              0xc3	                                     ret	       341	ldlang.c	FUNCTION_9
lang_add_output_format	CALL,0:functions,0:WHILE,0:FOR,0:IF,3:DO,0:SWITCH,0:ELSE,1	18
0x4008ba0	    0x48833d000000	               cmp qword [0x04008ba8], 0	      7685	ldlang.c	FUNCTION_180	IF_1
0x4008ba8	            0x7406	                            je 0x4008bb0	      7685	ldlang.c	FUNCTION_180	IF_1
0x4008baa	            0x85c9	                           test ecx, ecx	      7685	ldlang.c	FUNCTION_180	IF_1
0x4008bac	            0x7402	                            je 0x4008bb0	      7685	ldlang.c	FUNCTION_180	IF_1
0x4008bae	            0xf3c3	                                     ret	      7685	ldlang.c	FUNCTION_180	IF_1
0x4008bb0	    0x8b0500000000	            mov eax, dword [0x04008bb6] 	      7687	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4008bb6	          0x83f801	                              cmp eax, 1	      7687	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4008bb9	            0x7415	                            je 0x4008bd0	      7687	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4008bbb	          0x83f802	                              cmp eax, 2	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4008bbe	            0x7507	                           jne 0x4008bc7	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4008bc0	          0x4885d2	                           test rdx, rdx	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4008bc3	        0x480f45fa	                         cmovne rdi, rdx	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4008bc7	    0x48893d000000	            mov qword [0x04008bce], rdi 	      7694	ldlang.c	FUNCTION_180	IF_1
0x4008bce	              0xc3	                                     ret	      7694	ldlang.c	FUNCTION_180	IF_1
0x4008bcf	              0x90	                                     nop	      7694	ldlang.c	FUNCTION_180	IF_1
0x4008bd0	          0x4885f6	                           test rsi, rsi	      7694	ldlang.c	FUNCTION_180	IF_1
0x4008bd3	        0x480f45fe	                         cmovne rdi, rsi	      7694	ldlang.c	FUNCTION_180	IF_1
0x4008bd7	            0xebee	                           jmp 0x4008bc7	      7694	ldlang.c	FUNCTION_180	IF_1
lang_add_map	CALL,0:functions,0:WHILE,1:FOR,0:IF,0:DO,0:SWITCH,1:ELSE,0	6
0x4008470	            0xeb0a	                           jmp 0x400847c	      7522	ldlang.c	FUNCTION_169
0x4008472	    0x660f1f440000	                    nop word [rax + rax]	      7522	ldlang.c	FUNCTION_169
0x4008478	        0x4883c701	                              add rdi, 1	      7531	ldlang.c	FUNCTION_169	WHILE_1
0x400847c	          0x803f00	                       cmp byte [rdi], 0	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x400847f	            0x75f7	                           jne 0x4008478	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x4008481	            0xf3c3	                                     ret	      7523	ldlang.c	FUNCTION_169	WHILE_1
name_compare	CALL,12:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,0:ELSE,0	91
0x4000a60	            0x4155	                                push r13	      2977	ldlang.c	FUNCTION_71
0x4000a62	            0x4154	                                push r12	      2977	ldlang.c	FUNCTION_71
0x4000a64	          0x4989fd	                            mov r13, rdi	      2977	ldlang.c	FUNCTION_71
0x4000a67	              0x55	                                push rbp	      2977	ldlang.c	FUNCTION_71
0x4000a68	              0x53	                                push rbx	      2977	ldlang.c	FUNCTION_71
0x4000a69	          0x4889f5	                            mov rbp, rsi	      2977	ldlang.c	FUNCTION_71
0x4000a6c	        0x4883ec08	                              sub rsp, 8	      2977	ldlang.c	FUNCTION_71
0x4000a70	      0xe800000000	                          call 0x4000a75	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000a75	        0x488d7801	                      lea rdi, [rax + 1]	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000a79	      0xe800000000	                          call 0x4000a7e	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000a7e	          0x4889ef	                            mov rdi, rbp	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4000a81	          0x4889c3	                            mov rbx, rax	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000a84	      0xe800000000	                          call 0x4000a89	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4000a89	        0x488d7801	                      lea rdi, [rax + 1]	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4000a8d	      0xe800000000	                          call 0x4000a92	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4000a92	      0x410fb65500	                   movzx edx, byte [r13]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000a97	          0x4989c4	                            mov r12, rax	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4000a9a	            0x84d2	                             test dl, dl	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000a9c	     0xf84e6000000	                            je 0x4000b88	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000aa2	        0x498d7d01	                      lea rdi, [r13 + 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000aa6	          0x4889d9	                            mov rcx, rbx	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000aa9	     0xf1f80000000	                         nop dword [rax]	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000ab0	        0x4883c701	                              add rdi, 1	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ab4	     0xfb682000000	                   movzx eax, byte [rdx]	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4000abb	        0x4883c101	                              add rcx, 1	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4000abf	         0xfb657ff	               movzx edx, byte [rdi - 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ac3	          0x8841ff	                  mov byte [rcx - 1], al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4000ac6	            0x84d2	                             test dl, dl	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ac8	            0x75e6	                           jne 0x4000ab0	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000aca	         0xfb65500	                   movzx edx, byte [rbp]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ace	          0xc60100	                       mov byte [rcx], 0	      2950	ldlang.c	FUNCTION_69
0x4000ad1	        0x488d7d01	                      lea rdi, [rbp + 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ad5	          0x4c89e1	                            mov rcx, r12	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4000ad8	            0x84d2	                             test dl, dl	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ada	            0x741e	                            je 0x4000afa	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000adc	         0xf1f4000	                         nop dword [rax]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ae0	        0x4883c701	                              add rdi, 1	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000ae4	     0xfb682000000	                   movzx eax, byte [rdx]	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4000aeb	        0x4883c101	                              add rcx, 1	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4000aef	         0xfb657ff	               movzx edx, byte [rdi - 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000af3	          0x8841ff	                  mov byte [rcx - 1], al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4000af6	            0x84d2	                             test dl, dl	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000af8	            0x75e6	                           jne 0x4000ae0	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4000afa	          0xc60100	                       mov byte [rcx], 0	      2950	ldlang.c	FUNCTION_69
0x4000afd	      0xbe00000000	                              mov esi, 0	      2990	ldlang.c	FUNCTION_71	CALL_7
0x4000b02	          0x4889df	                            mov rdi, rbx	      2990	ldlang.c	FUNCTION_71	CALL_7
0x4000b05	      0xe806ffffff	                         call sym.strcut	      2990	ldlang.c	FUNCTION_71	CALL_7
0x4000b0a	      0xbe00000000	                              mov esi, 0	      2991	ldlang.c	FUNCTION_71	CALL_8
0x4000b0f	          0x4889df	                            mov rdi, rbx	      2991	ldlang.c	FUNCTION_71	CALL_8
0x4000b12	      0xe8f9feffff	                         call sym.strcut	      2991	ldlang.c	FUNCTION_71	CALL_8
0x4000b17	      0xbe00000000	                              mov esi, 0	      2992	ldlang.c	FUNCTION_71	CALL_9
0x4000b1c	          0x4c89e7	                            mov rdi, r12	      2992	ldlang.c	FUNCTION_71	CALL_9
0x4000b1f	      0xe8ecfeffff	                         call sym.strcut	      2992	ldlang.c	FUNCTION_71	CALL_9
0x4000b24	      0xbe00000000	                              mov esi, 0	      2993	ldlang.c	FUNCTION_71	CALL_10
0x4000b29	          0x4c89e7	                            mov rdi, r12	      2993	ldlang.c	FUNCTION_71	CALL_10
0x4000b2c	      0xe8dffeffff	                         call sym.strcut	      2993	ldlang.c	FUNCTION_71	CALL_10
0x4000b31	           0xfb603	                   movzx eax, byte [rbx]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b34	        0x413a0424	                      cmp al, byte [r12]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b38	            0x7556	                           jne 0x4000b90	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b3a	            0x84c0	                             test al, al	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b3c	            0x7452	                            je 0x4000b90	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b3e	            0x31d2	                            xor edx, edx	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b40	            0x31ed	                            xor ebp, ebp	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b42	            0xeb0c	                           jmp 0x4000b50	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b44	         0xf1f4000	                         nop dword [rax]	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b48	        0x4883c201	                              add rdx, 1	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b4c	            0x84c9	                             test cl, cl	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b4e	            0x7430	                            je 0x4000b80	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b50	       0xfb64c1301	        movzx ecx, byte [rbx + rdx + 1] 	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b55	          0x83c501	                              add ebp, 1	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b58	      0x413a4c1401	           cmp cl, byte [r12 + rdx + 1] 	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b5d	            0x74e9	                            je 0x4000b48	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b5f	          0x4889df	                            mov rdi, rbx	      3005	ldlang.c	FUNCTION_71	CALL_11
0x4000b62	      0xe800000000	                          call 0x4000b67	      3005	ldlang.c	FUNCTION_71	CALL_11
0x4000b67	          0x4c89e7	                            mov rdi, r12	      3006	ldlang.c	FUNCTION_71	CALL_12
0x4000b6a	      0xe800000000	                          call 0x4000b6f	      3006	ldlang.c	FUNCTION_71	CALL_12
0x4000b6f	        0x4883c408	                              add rsp, 8	      3009	ldlang.c	FUNCTION_71
0x4000b73	            0x89e8	                            mov eax, ebp	      3009	ldlang.c	FUNCTION_71
0x4000b75	              0x5b	                                 pop rbx	      3009	ldlang.c	FUNCTION_71
0x4000b76	              0x5d	                                 pop rbp	      3009	ldlang.c	FUNCTION_71
0x4000b77	            0x415c	                                 pop r12	      3009	ldlang.c	FUNCTION_71
0x4000b79	            0x415d	                                 pop r13	      3009	ldlang.c	FUNCTION_71
0x4000b7b	              0xc3	                                     ret	      3009	ldlang.c	FUNCTION_71
0x4000b7c	         0xf1f4000	                         nop dword [rax]	      3009	ldlang.c	FUNCTION_71
0x4000b80	        0x8d6cad00	                  lea ebp, [rbp + rbp*4]	      3009	ldlang.c	FUNCTION_71
0x4000b84	             0x1ed	                            add ebp, ebp	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b86	            0xebd7	                           jmp 0x4000b5f	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4000b88	          0x4889d9	                            mov rcx, rbx	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000b8b	      0xe93affffff	                           jmp 0x4000aca	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4000b90	            0x31ed	                            xor ebp, ebp	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4000b92	            0xebcb	                           jmp 0x4000b5f	      2998	ldlang.c	FUNCTION_71	FOR_1
open_input_bfds	CALL,13:functions,0:WHILE,0:FOR,1:IF,9:DO,1:SWITCH,1:ELSE,1	202
0x4007400	            0x4157	                                push r15	      3253	ldlang.c	FUNCTION_78
0x4007402	            0x4156	                                push r14	      3253	ldlang.c	FUNCTION_78
0x4007404	            0x4155	                                push r13	      3253	ldlang.c	FUNCTION_78
0x4007406	            0x4154	                                push r12	      3253	ldlang.c	FUNCTION_78
0x4007408	              0x55	                                push rbp	      3253	ldlang.c	FUNCTION_78
0x4007409	              0x53	                                push rbx	      3253	ldlang.c	FUNCTION_78
0x400740a	        0x4883ec28	                           sub rsp, 0x28	      3253	ldlang.c	FUNCTION_78
0x400740e	    0x64488b042528	                mov rax, qword fs:[0x28]	      3253	ldlang.c	FUNCTION_78
0x4007417	      0x4889442418	             mov qword [rsp + 0x18], rax	      3253	ldlang.c	FUNCTION_78
0x400741c	            0x31c0	                            xor eax, eax	      3253	ldlang.c	FUNCTION_78
0x400741e	          0x4885ff	                           test rdi, rdi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4007421	            0x7455	                            je 0x4007478	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4007423	          0x4189f7	                           mov r15d, esi	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007426	          0x4189f4	                           mov r12d, esi	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007429	          0x4889fb	                            mov rbx, rdi	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x400742c	          0x4189f5	                           mov r13d, esi	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x400742f	        0x4183e702	                             and r15d, 2	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007433	        0x4183cc01	                              or r12d, 1	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007437	    0x49be01002000	             movabs r14, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007441	     0xf1f80000000	                         nop dword [rax]	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007448	        0x837b080f	                cmp dword [rbx + 8], 0xf	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x400744c	            0x7722	                            ja 0x4007470	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x400744e	          0x8b4308	                mov eax, dword [rbx + 8]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4007451	    0xff24c5000000	                       jmp qword [rax*8]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4007458	     0xf1f84000000	                   nop dword [rax + rax]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4007460	    0x488b3d000000	            mov rdi, qword [0x04007467] 	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4007467	          0x4489ee	                           mov esi, r13d	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x400746a	      0xe891ffffff	                call sym.open_input_bfds	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x400746f	              0x90	                                     nop	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4007470	          0x488b1b	                    mov rbx, qword [rbx]	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4007473	          0x4885db	                           test rbx, rbx	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4007476	            0x75d0	                           jne 0x4007448	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4007478	    0xf60500000000	               test byte [0x0400747f], 8	      3372	ldlang.c	FUNCTION_78	IF_9
0x400747f	            0x740c	                            je 0x400748d	      3372	ldlang.c	FUNCTION_78	IF_9
0x4007481	      0xbf00000000	                              mov edi, 0	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4007486	            0x31c0	                            xor eax, eax	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4007488	      0xe800000000	                          call 0x400748d	      3373	ldlang.c	FUNCTION_78	CALL_13
0x400748d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3374	ldlang.c	FUNCTION_78
0x4007492	    0x644833042528	                xor rax, qword fs:[0x28]	      3374	ldlang.c	FUNCTION_78
0x400749b	     0xf85a9020000	                           jne 0x400774a	      3374	ldlang.c	FUNCTION_78
0x40074a1	        0x4883c428	                           add rsp, 0x28	      3374	ldlang.c	FUNCTION_78
0x40074a5	              0x5b	                                 pop rbx	      3374	ldlang.c	FUNCTION_78
0x40074a6	              0x5d	                                 pop rbp	      3374	ldlang.c	FUNCTION_78
0x40074a7	            0x415c	                                 pop r12	      3374	ldlang.c	FUNCTION_78
0x40074a9	            0x415d	                                 pop r13	      3374	ldlang.c	FUNCTION_78
0x40074ab	            0x415e	                                 pop r14	      3374	ldlang.c	FUNCTION_78
0x40074ad	            0x415f	                                 pop r15	      3374	ldlang.c	FUNCTION_78
0x40074af	              0xc3	                                     ret	      3374	ldlang.c	FUNCTION_78
0x40074b0	    0x488b05000000	            mov rax, qword [0x040074b7] 	      3374	ldlang.c	FUNCTION_78
0x40074b7	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      3374	ldlang.c	FUNCTION_78
0x40074bb	            0xeb06	                           jmp 0x40074c3	      3374	ldlang.c	FUNCTION_78
0x40074bd	           0xf1f00	                         nop dword [rax]	      3374	ldlang.c	FUNCTION_78
0x40074c0	          0x4889c5	                            mov rbp, rax	      3374	ldlang.c	FUNCTION_78
0x40074c3	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x40074c7	          0x4489e6	                           mov esi, r12d	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x40074ca	      0xe831ffffff	                call sym.open_input_bfds	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x40074cf	    0x488b05000000	            mov rax, qword [0x040074d6] 	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074d6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074da	          0x4839e8	                            cmp rax, rbp	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074dd	            0x75e1	                           jne 0x40074c0	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074df	            0xeb8f	                           jmp 0x4007470	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074e1	     0xf1f80000000	                         nop dword [rax]	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074e8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3291	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074ec	    0x488905000000	            mov qword [0x040074f3], rax 	      3291	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074f3	      0xe978ffffff	                           jmp 0x4007470	      3292	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x40074f8	     0xf1f84000000	                   nop dword [rax + rax]	      3292	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4007500	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4007504	        0x837f1008	               cmp dword [rdi + 0x10], 8	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4007508	     0xf8462ffffff	                            je 0x4007470	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x400750e	      0xe800000000	                          call 0x4007513	      3364	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_12
0x4007513	      0xe958ffffff	                           jmp 0x4007470	      3364	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_12
0x4007518	     0xf1f84000000	                   nop dword [rax + rax]	      3364	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_12
0x4007520	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4007524	          0x4489ee	                           mov esi, r13d	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4007527	      0xe8d4feffff	                call sym.open_input_bfds	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x400752c	      0xe93fffffff	                           jmp 0x4007470	      3263	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4007531	     0xf1f80000000	                         nop dword [rax]	      3263	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4007538	          0x4585ff	                         test r15d, r15d	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x400753b	            0x753f	                           jne 0x400757c	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x400753d	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4007541	          0x4885ed	                           test rbp, rbp	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4007544	            0x7436	                            je 0x400757c	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4007546	         0xfb64500	                   movzx eax, byte [rbp]	      1114	string2.h	FUNCTION_223	WHILE_1
0x400754a	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400754c	     0xf84d1010000	                            je 0x4007723	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007552	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007555	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007557	     0xf8623010000	                           jbe 0x4007680	      1114	string2.h	FUNCTION_223	WHILE_1
0x400755d	          0x4889ea	                            mov rdx, rbp	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007560	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4007564	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007567	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007569	     0xf84b4010000	                            je 0x4007723	      1114	string2.h	FUNCTION_223	WHILE_1
0x400756f	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007572	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007574	            0x77ea	                            ja 0x4007560	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007576	        0x490fa3c6	                             bt r14, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400757a	            0x73e4	                           jae 0x4007560	      1115	string2.h	FUNCTION_223	WHILE_1
0x400757c	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4007580	          0x4489ee	                           mov esi, r13d	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4007583	      0xe878feffff	                call sym.open_input_bfds	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4007588	      0xe9e3feffff	                           jmp 0x4007470	      3272	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x400758d	           0xf1f00	                         nop dword [rax]	      3272	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4007590	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4007594	            0xa804	                              test al, 4	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4007596	     0xf84c3000000	                            je 0x400765f	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x400759c	    0x488b15000000	            mov rdx, qword [0x040075a3] 	      3300	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x40075a3	          0x4585ed	                         test r13d, r13d	      3307	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075a6	        0x48895340	             mov qword [rbx + 0x40], rdx	      3300	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x40075aa	            0x7434	                            je 0x40075e0	      3307	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075ac	          0x4585ff	                         test r15d, r15d	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075af	     0xf8513010000	                           jne 0x40076c8	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075b5	            0xa802	                              test al, 2	      3312	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075b7	            0x7427	                            je 0x40075e0	      3312	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075b9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075bd	          0x4885c9	                           test rcx, rcx	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075c0	            0x741e	                            je 0x40075e0	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075c2	         0xfb65144	           movzx edx, byte [rcx + 0x44] 	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075c6	          0x83e207	                              and edx, 7	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075c9	          0x80fa02	                               cmp dl, 2	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075cc	     0xf846f010000	                            je 0x4007741	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075d2	          0x80fa01	                               cmp dl, 1	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075d5	     0xf8400010000	                            je 0x40076db	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075db	       0xf1f440000	                   nop dword [rax + rax]	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40075e0	          0x4889e6	                            mov rsi, rsp	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x40075e3	          0x4889df	                            mov rdi, rbx	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x40075e6	    0x488b2d000000	            mov rbp, qword [0x040075ed] 	      3326	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x40075ed	    0x48c704240000	                      mov qword [rsp], 0	      1009	ldlang.c	FUNCTION_30
0x40075f5	      0x4889642408	                mov qword [rsp + 8], rsp	      1010	ldlang.c	FUNCTION_30
0x40075fa	      0xe800000000	                          call 0x40075ff	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x40075ff	            0x85c0	                           test eax, eax	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4007601	     0xf8489000000	                            je 0x4007690	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4007607	      0x48833c2400	                      cmp qword [rsp], 0	      3332	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5
0x400760c	            0x7451	                            je 0x400765f	      3332	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5
0x400760e	    0x483b2d000000	            cmp rbp, qword [0x04007615] 	      3340	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4007615	     0xf8485000000	                            je 0x40076a0	      3340	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x400761b	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x400761f	      0xba05000000	                              mov edx, 5	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4007624	      0xbe00000000	                              mov esi, 0	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4007629	            0x31ff	                            xor edi, edi	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x400762b	      0xe800000000	                          call 0x4007630	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4007630	          0x4889ee	                            mov rsi, rbp	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4007633	          0x4889c7	                            mov rdi, rax	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4007636	            0x31c0	                            xor eax, eax	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4007638	      0xe800000000	                          call 0x400763d	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x400763d	    0x488b05000000	            mov rax, qword [0x04007644] 	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4007644	        0x488b1424	                    mov rdx, qword [rsp]	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4007648	        0x488b4008	                mov rax, qword [rax + 8]	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x400764c	          0x488910	                    mov qword [rax], rdx	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x400764f	    0x488b05000000	            mov rax, qword [0x04007656] 	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4007656	      0x488b542408	                mov rdx, qword [rsp + 8]	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x400765b	        0x48895008	                mov qword [rax + 8], rdx	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x400765f	    0x48391d000000	            cmp qword [0x04007666], rbx 	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4007666	     0xf8504feffff	                           jne 0x4007470	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x400766c	    0x48c705000000	               mov qword [0x04007677], 0	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4007677	      0xe9f4fdffff	                           jmp 0x4007470	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x400767c	         0xf1f4000	                         nop dword [rax]	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4007680	        0x490fa3c6	                             bt r14, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007684	     0xf83d3feffff	                           jae 0x400755d	      1115	string2.h	FUNCTION_223	WHILE_1
0x400768a	      0xe9edfeffff	                           jmp 0x400757c	      1115	string2.h	FUNCTION_223	WHILE_1
0x400768f	              0x90	                                     nop	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007690	    0xc70500000000	               mov dword [0x0400769a], 0	      3330	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4
0x400769a	      0xe968ffffff	                           jmp 0x4007607	      3330	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4
0x400769f	              0x90	                                     nop	      3330	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4
0x40076a0	      0x488b442408	                mov rax, qword [rsp + 8]	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x40076a5	          0x488b13	                    mov rdx, qword [rbx]	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x40076a8	    0x48391d000000	            cmp qword [0x040076af], rbx 	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x40076af	          0x488910	                    mov qword [rax], rdx	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x40076b2	        0x488b0424	                    mov rax, qword [rsp]	      3351	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x40076b6	          0x488903	                    mov qword [rbx], rax	      3351	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x40076b9	     0xf85b1fdffff	                           jne 0x4007470	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x40076bf	            0xebab	                           jmp 0x400766c	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x40076c1	     0xf1f80000000	                         nop dword [rax]	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x40076c8	    0x48833d000000	               cmp qword [0x040076d0], 0	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076d0	     0xf850affffff	                           jne 0x40075e0	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076d6	      0xe9dafeffff	                           jmp 0x40075b5	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076db	        0xf6414508	               test byte [rcx + 0x45], 8	      3317	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076df	     0xf84fbfeffff	                            je 0x40075e0	      3317	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076e5	        0x807b4800	                cmp byte [rbx + 0x48], 0	      3318	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076e9	     0xf89f1feffff	                           jns 0x40075e0	      3318	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076ef	        0x488b4108	                mov rax, qword [rcx + 8]	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076f3	        0x83780805	                  cmp dword [rax + 8], 5	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076f7	     0xf85e3feffff	                           jne 0x40075e0	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x40076fd	    0x488b81f80000	            mov rax, qword [rcx + 0xf8] 	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4007704	    0xf6808c0c0000	          test byte [rax + 0xc8c], 0x40 	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x400770b	     0xf84cffeffff	                            je 0x40075e0	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4007711	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      3322	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007715	          0x83e0fd	                     and eax, 0xfffffffd	      3322	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007718	          0x83c810	                            or eax, 0x10	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x400771b	          0x884349	               mov byte [rbx + 0x49], al	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x400771e	      0xe9bdfeffff	                           jmp 0x40075e0	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007723	          0x4889ef	                            mov rdi, rbp	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4007726	      0xe8e595ffff	                   call sym.archive_path	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x400772b	          0x4885c0	                           test rax, rax	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x400772e	     0xf8548feffff	                           jne 0x400757c	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4007734	          0x4889ef	                            mov rdi, rbp	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x4007737	      0xe814f6ffff	                    call sym.lookup_name	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x400773c	      0xe93bfeffff	                           jmp 0x400757c	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x4007741	            0xa801	                              test al, 1	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007743	            0x74cc	                            je 0x4007711	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4007745	      0xe996feffff	                           jmp 0x40075e0	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x400774a	      0xe800000000	                          call 0x400774f	      3374	ldlang.c	FUNCTION_78
lang_leave_overlay	CALL,6:functions,0:WHILE,1:FOR,0:IF,6:DO,0:SWITCH,0:ELSE,0	114
0x40090c0	            0x4157	                                push r15	      8048	ldlang.c	FUNCTION_191
0x40090c2	            0x4156	                                push r14	      8048	ldlang.c	FUNCTION_191
0x40090c4	            0x4155	                                push r13	      8048	ldlang.c	FUNCTION_191
0x40090c6	            0x4154	                                push r12	      8048	ldlang.c	FUNCTION_191
0x40090c8	          0x4189f5	                           mov r13d, esi	      8048	ldlang.c	FUNCTION_191
0x40090cb	              0x55	                                push rbp	      8048	ldlang.c	FUNCTION_191
0x40090cc	              0x53	                                push rbx	      8048	ldlang.c	FUNCTION_191
0x40090cd	          0x4d89c4	                             mov r12, r8	      8048	ldlang.c	FUNCTION_191
0x40090d0	          0x4531c0	                            xor r8d, r8d	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40090d3	          0x4889d5	                            mov rbp, rdx	      8048	ldlang.c	FUNCTION_191
0x40090d6	          0x4889ca	                            mov rdx, rcx	      8048	ldlang.c	FUNCTION_191
0x40090d9	        0x4883ec38	                           sub rsp, 0x38	      8048	ldlang.c	FUNCTION_191
0x40090dd	          0x4c89c9	                             mov rcx, r9	      8048	ldlang.c	FUNCTION_191
0x40090e0	    0x64488b342528	                mov rsi, qword fs:[0x28]	      8048	ldlang.c	FUNCTION_191
0x40090e9	      0x4889742428	             mov qword [rsp + 0x28], rsi	      8048	ldlang.c	FUNCTION_191
0x40090ee	            0x31f6	                            xor esi, esi	      8048	ldlang.c	FUNCTION_191
0x40090f0	      0x48897c2408	                mov qword [rsp + 8], rdi	      8048	ldlang.c	FUNCTION_191
0x40090f5	          0x4885ff	                           test rdi, rdi	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40090f8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40090fd	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      8054	ldlang.c	FUNCTION_191	CALL_1
0x4009102	        0x410f95c0	                               setne r8b	      8054	ldlang.c	FUNCTION_191	CALL_1
0x4009106	          0x4531c9	                            xor r9d, r9d	      8054	ldlang.c	FUNCTION_191	CALL_1
0x4009109	      0xe822b7ffff	               call sym.lang_get_regions	      8054	ldlang.c	FUNCTION_191	CALL_1
0x400910e	    0x488b05000000	            mov rax, qword [0x04009115] 	      8062	ldlang.c	FUNCTION_191	IF_1
0x4009115	          0x4885c0	                           test rax, rax	      8062	ldlang.c	FUNCTION_191	IF_1
0x4009118	     0xf8407010000	                            je 0x4009225	      8062	ldlang.c	FUNCTION_191	IF_1
0x400911e	        0x488b5808	                mov rbx, qword [rax + 8]	      8064	ldlang.c	FUNCTION_191	IF_1
0x4009122	    0x488b15000000	            mov rdx, qword [0x04009129] 	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4009129	      0xbf2b000000	                           mov edi, 0x2b	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400912e	    0x488b35000000	            mov rsi, qword [0x04009135] 	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4009135	    0x808b90000000	              or byte [rbx + 0x90], 0x10	      8064	ldlang.c	FUNCTION_191	IF_1
0x400913c	      0xe800000000	                          call 0x4009141	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4009141	            0x31d2	                            xor edx, edx	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4009143	          0x4889c6	                            mov rsi, rax	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4009146	      0xbf00000000	                              mov edi, 0	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400914b	      0xe800000000	                          call 0x4009150	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4009150	    0x4c8b3d000000	            mov r15, qword [0x04009157] 	      8069	ldlang.c	FUNCTION_191
0x4009157	        0x48894368	             mov qword [rbx + 0x68], rax	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400915b	          0x4d85ff	                           test r15, r15	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400915e	     0xf84c1000000	                            je 0x4009225	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4009164	          0x4531f6	                          xor r14d, r14d	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4009167	            0xeb17	                           jmp 0x4009180	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4009169	     0xf1f80000000	                         nop dword [rax]	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4009170	          0x4c89ff	                            mov rdi, r15	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x4009173	      0xe800000000	                          call 0x4009178	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x4009178	          0x4885db	                           test rbx, rbx	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400917b	            0x7476	                            je 0x40091f3	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400917d	          0x4989df	                            mov r15, rbx	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4009180	          0x4885ed	                           test rbp, rbp	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4009183	        0x498b4708	                mov rax, qword [r15 + 8]	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4009187	            0x740b	                            je 0x4009194	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4009189	      0x4883785000	               cmp qword [rax + 0x50], 0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400918e	     0xf840c010000	                            je 0x40092a0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4009194	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x4009199	          0x498b1f	                    mov rbx, qword [r15]	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400919c	        0x48894840	             mov qword [rax + 0x40], rcx	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x40091a0	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x40091a5	          0x4885db	                           test rbx, rbx	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x40091a8	        0x48894848	             mov qword [rax + 0x48], rcx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x40091ac	     0xf84be000000	                            je 0x4009270	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x40091b2	          0x4d85e4	                           test r12, r12	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40091b5	            0x740b	                            je 0x40091c2	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40091b7	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40091bc	     0xf84ce000000	                            je 0x4009290	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40091c2	          0x4585ed	                         test r13d, r13d	      8092	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091c5	            0x74a9	                            je 0x4009170	      8092	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091c7	      0xbf10000000	                           mov edi, 0x10	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x40091cc	      0xe800000000	                          call 0x40091d1	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x40091d1	        0x498b4f08	                mov rcx, qword [r15 + 8]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091d5	          0x498b1f	                    mov rbx, qword [r15]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091d8	          0x4c89ff	                            mov rdi, r15	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x40091db	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091df	          0x4c8930	                    mov qword [rax], r14	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091e2	          0x4989c6	                            mov r14, rax	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091e5	        0x48894808	                mov qword [rax + 8], rcx	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40091e9	      0xe800000000	                          call 0x40091ee	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x40091ee	          0x4885db	                           test rbx, rbx	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x40091f1	            0x758a	                           jne 0x400917d	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x40091f3	          0x4d85f6	                           test r14, r14	      8107	ldlang.c	FUNCTION_191	IF_6
0x40091f6	            0x742d	                            je 0x4009225	      8107	ldlang.c	FUNCTION_191	IF_6
0x40091f8	      0xbf18000000	                           mov edi, 0x18	      7906	ldlang.c	FUNCTION_186	CALL_1
0x40091fd	      0xe800000000	                          call 0x4009202	      7906	ldlang.c	FUNCTION_186	CALL_1
0x4009202	    0x488b15000000	            mov rdx, qword [0x04009209] 	      7907	ldlang.c	FUNCTION_186
0x4009209	    0x800d00000000	                 or byte [0x04009210], 1	      7913	ldlang.c	FUNCTION_186
0x4009210	        0x4c897008	                mov qword [rax + 8], r14	      7908	ldlang.c	FUNCTION_186
0x4009214	    0xc74010000000	               mov dword [rax + 0x10], 0	      7909	ldlang.c	FUNCTION_186
0x400921b	    0x488905000000	            mov qword [0x04009222], rax 	      7910	ldlang.c	FUNCTION_186
0x4009222	          0x488910	                    mov qword [rax], rdx	      7907	ldlang.c	FUNCTION_186
0x4009225	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8114	ldlang.c	FUNCTION_191
0x400922a	    0x644833042528	                xor rax, qword fs:[0x28]	      8114	ldlang.c	FUNCTION_191
0x4009233	    0x48c705000000	               mov qword [0x0400923e], 0	      8110	ldlang.c	FUNCTION_191
0x400923e	    0x48c705000000	               mov qword [0x04009249], 0	      8111	ldlang.c	FUNCTION_191
0x4009249	    0x48c705000000	               mov qword [0x04009254], 0	      8112	ldlang.c	FUNCTION_191
0x4009254	    0x48c705000000	               mov qword [0x0400925f], 0	      8113	ldlang.c	FUNCTION_191
0x400925f	            0x7548	                           jne 0x40092a9	      8114	ldlang.c	FUNCTION_191
0x4009261	        0x4883c438	                           add rsp, 0x38	      8114	ldlang.c	FUNCTION_191
0x4009265	              0x5b	                                 pop rbx	      8114	ldlang.c	FUNCTION_191
0x4009266	              0x5d	                                 pop rbp	      8114	ldlang.c	FUNCTION_191
0x4009267	            0x415c	                                 pop r12	      8114	ldlang.c	FUNCTION_191
0x4009269	            0x415d	                                 pop r13	      8114	ldlang.c	FUNCTION_191
0x400926b	            0x415e	                                 pop r14	      8114	ldlang.c	FUNCTION_191
0x400926d	            0x415f	                                 pop r15	      8114	ldlang.c	FUNCTION_191
0x400926f	              0xc3	                                     ret	      8114	ldlang.c	FUNCTION_191
0x4009270	      0x488b742408	                mov rsi, qword [rsp + 8]	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4009275	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400927f	        0x48897060	             mov qword [rax + 0x60], rsi	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4009283	      0xe92affffff	                           jmp 0x40091b2	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4009288	     0xf1f84000000	                   nop dword [rax + rax]	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4009290	        0x4c896070	             mov qword [rax + 0x70], r12	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x4009294	      0xe929ffffff	                           jmp 0x40091c2	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x4009299	     0xf1f80000000	                         nop dword [rax]	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40092a0	        0x48896850	             mov qword [rax + 0x50], rbp	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x40092a4	      0xe9ebfeffff	                           jmp 0x4009194	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x40092a9	      0xe800000000	                          call 0x40092ae	      8114	ldlang.c	FUNCTION_191
lang_register_vers_node	CALL,17:functions,0:WHILE,2:FOR,8:IF,12:DO,0:SWITCH,0:ELSE,3	262
0x40094c0	            0x4157	                                push r15	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094c2	            0x4156	                                push r14	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094c4	      0xb800000000	                              mov eax, 0	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x40094c9	            0x4155	                                push r13	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094cb	            0x4154	                                push r12	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094cd	          0x4989f4	                            mov r12, rsi	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094d0	              0x55	                                push rbp	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094d1	              0x53	                                push rbx	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094d2	          0x4889fd	                            mov rbp, rdi	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094d5	        0x4883ec18	                           sub rsp, 0x18	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094d9	    0x488b1d000000	            mov rbx, qword [0x040094e0] 	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x40094e0	          0x4885ff	                           test rdi, rdi	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x40094e3	        0x480f44e8	                          cmove rbp, rax	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x40094e7	      0x4889542408	                mov qword [rsp + 8], rdx	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x40094ec	          0x4885db	                           test rbx, rbx	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x40094ef	            0x747e	                            je 0x400956f	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x40094f1	        0x807d0000	                       cmp byte [rbp], 0	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x40094f5	            0x7409	                            je 0x4009500	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x40094f7	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x40094fb	          0x803f00	                       cmp byte [rdi], 0	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x40094fe	            0x755b	                           jne 0x400955b	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4009500	      0xba05000000	                              mov edx, 5	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4009505	      0xbe00000000	                              mov esi, 0	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400950a	            0x31ff	                            xor edi, edi	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400950c	      0xe800000000	                          call 0x4009511	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4009511	          0x4889c7	                            mov rdi, rax	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4009514	            0x31c0	                            xor eax, eax	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4009516	      0xe800000000	                          call 0x400951b	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400951b	        0x4883c418	                           add rsp, 0x18	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400951f	          0x4c89e7	                            mov rdi, r12	      8464	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_3
0x4009522	              0x5b	                                 pop rbx	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009523	              0x5d	                                 pop rbp	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009524	            0x415c	                                 pop r12	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009526	            0x415d	                                 pop r13	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009528	            0x415e	                                 pop r14	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400952a	            0x415f	                                 pop r15	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400952c	      0xe900000000	                           jmp 0x4009531	      8464	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_3
0x4009531	            0x31ff	                            xor edi, edi	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009533	      0xba05000000	                              mov edx, 5	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009538	      0xbe00000000	                              mov esi, 0	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400953d	      0xe800000000	                          call 0x4009542	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009542	          0x4889ee	                            mov rsi, rbp	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009545	          0x4889c7	                            mov rdi, rax	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009548	            0x31c0	                            xor eax, eax	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400954a	      0xe800000000	                          call 0x400954f	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400954f	          0x488b1b	                    mov rbx, qword [rbx]	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x4009552	          0x4885db	                           test rbx, rbx	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x4009555	            0x7418	                            je 0x400956f	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x4009557	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400955b	          0x4889ee	                            mov rsi, rbp	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400955e	      0xe800000000	                          call 0x4009563	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009563	            0x85c0	                           test eax, eax	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009565	            0x74ca	                            je 0x4009531	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4009567	          0x488b1b	                    mov rbx, qword [rbx]	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400956a	          0x4885db	                           test rbx, rbx	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400956d	            0x75e8	                           jne 0x4009557	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x400956f	      0x498d7c2418	                   lea rdi, [r12 + 0x18]	      8473	ldlang.c	ELSE_4	FUNCTION_199	CALL_6
0x4009574	      0xe82776ffff	call sym.lang_finalize_version_expr_head	      8473	ldlang.c	ELSE_4	FUNCTION_199	CALL_6
0x4009579	      0x498d7c2438	                   lea rdi, [r12 + 0x38]	      8474	ldlang.c	ELSE_4	FUNCTION_199	CALL_7
0x400957e	      0xe81d76ffff	call sym.lang_finalize_version_expr_head	      8474	ldlang.c	ELSE_4	FUNCTION_199	CALL_7
0x4009583	      0x4d8b6c2418	            mov r13, qword [r12 + 0x18] 	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x4009588	          0x4d85ed	                           test r13, r13	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x400958b	     0xf84b8000000	                            je 0x4009649	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x4009591	     0xf1f80000000	                         nop dword [rax]	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x4009598	    0x4c8b35000000	            mov r14, qword [0x0400959f] 	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400959f	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40095a2	     0xf8494000000	                            je 0x400963c	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40095a8	     0xf1f84000000	                   nop dword [rax + rax]	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40095b0	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40095b4	          0x4885ff	                           test rdi, rdi	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40095b7	     0xf84a3020000	                            je 0x4009860	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40095bd	      0x41f6451001	               test byte [r13 + 0x10], 1	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40095c2	     0xf8508020000	                           jne 0x40097d0	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40095c8	        0x498b5e48	            mov rbx, qword [r14 + 0x48] 	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095cc	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095cf	            0x750f	                           jne 0x40095e0	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095d1	            0xeb5d	                           jmp 0x4009630	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095d3	       0xf1f440000	                   nop dword [rax + rax]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095d8	          0x488b1b	                    mov rbx, qword [rbx]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095db	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095de	            0x7450	                            je 0x4009630	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40095e0	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095e4	        0x488b7308	                mov rsi, qword [rbx + 8]	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095e8	          0x4c89ff	                            mov rdi, r15	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095eb	      0xe800000000	                          call 0x40095f0	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095f0	            0x85c0	                           test eax, eax	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095f2	            0x75e4	                           jne 0x40095d8	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095f4	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095f9	          0x324310	               xor al, byte [rbx + 0x10]	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095fc	            0xa838	                           test al, 0x38	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x40095fe	            0x75d8	                           jne 0x40095d8	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x4009600	            0x31ff	                            xor edi, edi	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x4009602	      0xba05000000	                              mov edx, 5	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x4009607	      0xbe00000000	                              mov esi, 0	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400960c	      0xe800000000	                          call 0x4009611	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x4009611	          0x4c89fe	                            mov rsi, r15	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x4009614	          0x4889c7	                            mov rdi, rax	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x4009617	            0x31c0	                            xor eax, eax	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x4009619	      0xe800000000	                          call 0x400961e	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400961e	          0x488b1b	                    mov rbx, qword [rbx]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x4009621	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x4009624	            0x75ba	                           jne 0x40095e0	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x4009626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x4009630	          0x4d8b36	                    mov r14, qword [r14]	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x4009633	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x4009636	     0xf8574ffffff	                           jne 0x40095b0	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400963c	        0x4d8b6d00	                    mov r13, qword [r13]	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x4009640	          0x4d85ed	                           test r13, r13	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x4009643	     0xf854fffffff	                           jne 0x4009598	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x4009649	      0x4d8b6c2438	            mov r13, qword [r12 + 0x38] 	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x400964e	          0x4d85ed	                           test r13, r13	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x4009651	     0xf84b2000000	                            je 0x4009709	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x4009657	    0x660f1f840000	                    nop word [rax + rax]	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x4009660	    0x4c8b35000000	            mov r14, qword [0x04009667] 	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x4009667	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400966a	     0xf848c000000	                            je 0x40096fc	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x4009670	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4009674	          0x4885ff	                           test rdi, rdi	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4009677	     0xf84c3010000	                            je 0x4009840	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400967d	      0x41f6451001	               test byte [r13 + 0x10], 1	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4009682	     0xf85d8000000	                           jne 0x4009760	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4009688	        0x498b5e28	            mov rbx, qword [r14 + 0x28] 	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400968c	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400968f	            0x750f	                           jne 0x40096a0	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x4009691	            0xeb5d	                           jmp 0x40096f0	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x4009693	       0xf1f440000	                   nop dword [rax + rax]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x4009698	          0x488b1b	                    mov rbx, qword [rbx]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400969b	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x400969e	            0x7450	                            je 0x40096f0	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40096a0	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096a4	        0x488b7308	                mov rsi, qword [rbx + 8]	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096a8	          0x4c89ff	                            mov rdi, r15	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096ab	      0xe800000000	                          call 0x40096b0	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096b0	            0x85c0	                           test eax, eax	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096b2	            0x75e4	                           jne 0x4009698	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096b4	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096b9	          0x324310	               xor al, byte [rbx + 0x10]	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096bc	            0xa838	                           test al, 0x38	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096be	            0x75d8	                           jne 0x4009698	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x40096c0	            0x31ff	                            xor edi, edi	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096c2	      0xba05000000	                              mov edx, 5	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096c7	      0xbe00000000	                              mov esi, 0	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096cc	      0xe800000000	                          call 0x40096d1	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096d1	          0x4c89fe	                            mov rsi, r15	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096d4	          0x4889c7	                            mov rdi, rax	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096d7	            0x31c0	                            xor eax, eax	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096d9	      0xe800000000	                          call 0x40096de	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40096de	          0x488b1b	                    mov rbx, qword [rbx]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40096e1	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40096e4	            0x75ba	                           jne 0x40096a0	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40096e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40096f0	          0x4d8b36	                    mov r14, qword [r14]	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40096f3	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40096f6	     0xf8574ffffff	                           jne 0x4009670	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40096fc	        0x4d8b6d00	                    mov r13, qword [r13]	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x4009700	          0x4d85ed	                           test r13, r13	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x4009703	     0xf8557ffffff	                           jne 0x4009660	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x4009709	      0x488b442408	                mov rax, qword [rsp + 8]	      8534	ldlang.c	ELSE_4	FUNCTION_199
0x400970e	      0x49896c2408	                mov qword [r12 + 8], rbp	      8535	ldlang.c	ELSE_4	FUNCTION_199
0x4009713	      0x4989442458	             mov qword [r12 + 0x58], rax	      8534	ldlang.c	ELSE_4	FUNCTION_199
0x4009718	        0x807d0000	                       cmp byte [rbp], 0	      8536	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400971c	     0xf855a010000	                           jne 0x400987c	      8536	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4009722	    0x41c744241000	               mov dword [r12 + 0x10], 0	      8542	ldlang.c	ELSE_4	FUNCTION_199	ELSE_3
0x400972b	    0x488b15000000	            mov rdx, qword [0x04009732] 	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4009732	          0x4885d2	                           test rdx, rdx	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4009735	            0x750c	                           jne 0x4009743	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4009737	      0xe959010000	                           jmp 0x4009895	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400973c	         0xf1f4000	                         nop dword [rax]	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4009740	          0x4889c2	                            mov rdx, rax	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4009743	          0x488b02	                    mov rax, qword [rdx]	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4009746	          0x4885c0	                           test rax, rax	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4009749	            0x75f5	                           jne 0x4009740	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400974b	          0x4c8922	                    mov qword [rdx], r12	      8546	ldlang.c	ELSE_4	FUNCTION_199
0x400974e	        0x4883c418	                           add rsp, 0x18	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009752	              0x5b	                                 pop rbx	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009753	              0x5d	                                 pop rbp	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009754	            0x415c	                                 pop r12	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009756	            0x415d	                                 pop r13	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009758	            0x415e	                                 pop r14	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400975a	            0x415f	                                 pop r15	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400975c	              0xc3	                                     ret	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x400975d	           0xf1f00	                         nop dword [rax]	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4009760	          0x4c89ee	                            mov rsi, r13	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4009763	      0xe800000000	                          call 0x4009768	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4009768	          0x4885c0	                           test rax, rax	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400976b	          0x4889c3	                            mov rbx, rax	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400976e	            0x7514	                           jne 0x4009784	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4009770	      0xe97bffffff	                           jmp 0x40096f0	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4009775	           0xf1f00	                         nop dword [rax]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4009778	          0x488b1b	                    mov rbx, qword [rbx]	      8522	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400977b	          0x4885db	                           test rbx, rbx	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400977e	     0xf846cffffff	                            je 0x40096f0	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4009784	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4009788	        0x488b7308	                mov rsi, qword [rbx + 8]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400978c	          0x4c89ff	                            mov rdi, r15	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400978f	      0xe800000000	                          call 0x4009794	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4009794	            0x85c0	                           test eax, eax	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4009796	     0xf8554ffffff	                           jne 0x40096f0	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400979c	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x40097a1	          0x324310	               xor al, byte [rbx + 0x10]	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x40097a4	            0xa838	                           test al, 0x38	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x40097a6	            0x75d0	                           jne 0x4009778	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x40097a8	            0x31ff	                            xor edi, edi	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097aa	      0xba05000000	                              mov edx, 5	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097af	      0xbe00000000	                              mov esi, 0	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097b4	      0xe800000000	                          call 0x40097b9	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097b9	          0x4c89fe	                            mov rsi, r15	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097bc	          0x4889c7	                            mov rdi, rax	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097bf	            0x31c0	                            xor eax, eax	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097c1	      0xe800000000	                          call 0x40097c6	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097c6	            0xebb0	                           jmp 0x4009778	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097c8	     0xf1f84000000	                   nop dword [rax + rax]	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x40097d0	          0x4c89ee	                            mov rsi, r13	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40097d3	      0xe800000000	                          call 0x40097d8	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40097d8	          0x4885c0	                           test rax, rax	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097db	          0x4889c3	                            mov rbx, rax	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40097de	            0x7514	                           jne 0x40097f4	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097e0	      0xe94bfeffff	                           jmp 0x4009630	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097e5	           0xf1f00	                         nop dword [rax]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097e8	          0x488b1b	                    mov rbx, qword [rbx]	      8494	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097eb	          0x4885db	                           test rbx, rbx	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097ee	     0xf843cfeffff	                            je 0x4009630	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097f4	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097f8	        0x488b7308	                mov rsi, qword [rbx + 8]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097fc	          0x4c89ff	                            mov rdi, r15	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x40097ff	      0xe800000000	                          call 0x4009804	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4009804	            0x85c0	                           test eax, eax	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4009806	     0xf8524feffff	                           jne 0x4009630	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400980c	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x4009811	          0x324310	               xor al, byte [rbx + 0x10]	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x4009814	            0xa838	                           test al, 0x38	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x4009816	            0x75d0	                           jne 0x40097e8	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x4009818	            0x31ff	                            xor edi, edi	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400981a	      0xba05000000	                              mov edx, 5	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400981f	      0xbe00000000	                              mov esi, 0	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4009824	      0xe800000000	                          call 0x4009829	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4009829	          0x4c89fe	                            mov rsi, r15	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400982c	          0x4889c7	                            mov rdi, rax	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400982f	            0x31c0	                            xor eax, eax	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4009831	      0xe800000000	                          call 0x4009836	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4009836	            0xebb0	                           jmp 0x40097e8	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4009838	     0xf1f84000000	                   nop dword [rax + rax]	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4009840	      0x41f6451001	               test byte [r13 + 0x10], 1	      8525	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10
0x4009845	     0xf843dfeffff	                            je 0x4009688	      8525	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10
0x400984b	          0x4d8b36	                    mov r14, qword [r14]	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400984e	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x4009851	     0xf8519feffff	                           jne 0x4009670	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x4009857	      0xe9a0feffff	                           jmp 0x40096fc	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x400985c	         0xf1f4000	                         nop dword [rax]	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x4009860	      0x41f6451001	               test byte [r13 + 0x10], 1	      8497	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6
0x4009865	     0xf845dfdffff	                            je 0x40095c8	      8497	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6
0x400986b	          0x4d8b36	                    mov r14, qword [r14]	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400986e	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x4009871	     0xf8539fdffff	                           jne 0x40095b0	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x4009877	      0xe9c0fdffff	                           jmp 0x400963c	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x400987c	    0x8b0500000000	            mov eax, dword [0x04009882] 	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4009882	          0x83c001	                              add eax, 1	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4009885	    0x890500000000	            mov dword [0x0400988b], eax 	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x400988b	      0x4189442410	             mov dword [r12 + 0x10], eax	      8539	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4009890	      0xe996feffff	                           jmp 0x400972b	      8539	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4009895	      0xba00000000	                              mov edx, 0	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x400989a	      0xe9acfeffff	                           jmp 0x400974b	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
dprint_statement	CALL,2:functions,0:WHILE,1:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,1	46
0x4006270	    0x488b05000000	            mov rax, qword [0x04006277] 	      4620	ldlang.c	FUNCTION_107
0x4006277	            0x85f6	                           test esi, esi	      4622	ldlang.c	FUNCTION_107	IF_1
0x4006279	            0x4154	                                push r12	      4617	ldlang.c	FUNCTION_107
0x400627b	    0x4c8b25000000	            mov r12, qword [0x04006282] 	      4618	ldlang.c	FUNCTION_107
0x4006282	              0x55	                                push rbp	      4617	ldlang.c	FUNCTION_107
0x4006283	              0x53	                                push rbx	      4617	ldlang.c	FUNCTION_107
0x4006284	          0x4889fb	                            mov rbx, rdi	      4617	ldlang.c	FUNCTION_107
0x4006287	    0x488905000000	            mov qword [0x0400628e], rax 	      4620	ldlang.c	FUNCTION_107
0x400628e	            0x7840	                            js 0x40062d0	      4622	ldlang.c	FUNCTION_107	IF_1
0x4006290	          0x4885ff	                           test rdi, rdi	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4006293	            0x742a	                            je 0x40062bf	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4006295	          0x8d6eff	                      lea ebp, [rsi - 1]	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4006298	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400629b	            0x750b	                           jne 0x40062a8	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400629d	            0xeb20	                           jmp 0x40062bf	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x400629f	              0x90	                                     nop	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x40062a0	          0x83ed01	                              sub ebp, 1	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x40062a3	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x40062a6	            0x7417	                            je 0x40062bf	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x40062a8	    0x488b35000000	            mov rsi, qword [0x040062af] 	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x40062af	          0x4889df	                            mov rdi, rbx	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x40062b2	      0xe8c9b4ffff	                call sym.print_statement	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x40062b7	          0x488b1b	                    mov rbx, qword [rbx]	      4629	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x40062ba	          0x4885db	                           test rbx, rbx	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x40062bd	            0x75e1	                           jne 0x40062a0	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x40062bf	              0x5b	                                 pop rbx	      4634	ldlang.c	FUNCTION_107
0x40062c0	    0x4c8925000000	            mov qword [0x040062c7], r12 	      4633	ldlang.c	FUNCTION_107
0x40062c7	              0x5d	                                 pop rbp	      4634	ldlang.c	FUNCTION_107
0x40062c8	            0x415c	                                 pop r12	      4634	ldlang.c	FUNCTION_107
0x40062ca	              0xc3	                                     ret	      4634	ldlang.c	FUNCTION_107
0x40062cb	       0xf1f440000	                   nop dword [rax + rax]	      4634	ldlang.c	FUNCTION_107
0x40062d0	          0x4885ff	                           test rdi, rdi	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40062d3	    0x488b2d000000	            mov rbp, qword [0x040062da] 	      4623	ldlang.c	FUNCTION_107	CALL_1
0x40062da	            0x74e3	                            je 0x40062bf	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40062dc	         0xf1f4000	                         nop dword [rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40062e0	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40062e3	          0x4889ee	                            mov rsi, rbp	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40062e6	      0xe895b4ffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40062eb	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x40062ee	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40062f1	            0x75ed	                           jne 0x40062e0	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40062f3	              0x5b	                                 pop rbx	      4634	ldlang.c	FUNCTION_107
0x40062f4	    0x4c8925000000	            mov qword [0x040062fb], r12 	      4633	ldlang.c	FUNCTION_107
0x40062fb	              0x5d	                                 pop rbp	      4634	ldlang.c	FUNCTION_107
0x40062fc	            0x415c	                                 pop r12	      4634	ldlang.c	FUNCTION_107
0x40062fe	              0xc3	                                     ret	      4634	ldlang.c	FUNCTION_107
lang_add_attribute	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	16
0x40085e0	              0x55	                                push rbp	      7593	ldlang.c	FUNCTION_174
0x40085e1	              0x53	                                push rbx	      7593	ldlang.c	FUNCTION_174
0x40085e2	            0x89fd	                            mov ebp, edi	      7593	ldlang.c	FUNCTION_174
0x40085e4	      0xbf10000000	                           mov edi, 0x10	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40085e9	        0x4883ec08	                              sub rsp, 8	      7593	ldlang.c	FUNCTION_174
0x40085ed	    0x488b1d000000	            mov rbx, qword [0x040085f4] 	      7594	ldlang.c	FUNCTION_174	CALL_1
0x40085f4	      0xe800000000	                          call 0x40085f9	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40085f9	          0x896808	                mov dword [rax + 8], ebp	      1040	ldlang.c	FUNCTION_33
0x40085fc	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4008603	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x4008607	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400860a	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400860e	        0x4883c408	                              add rsp, 8	      7595	ldlang.c	FUNCTION_174
0x4008612	              0x5b	                                 pop rbx	      7595	ldlang.c	FUNCTION_174
0x4008613	              0x5d	                                 pop rbp	      7595	ldlang.c	FUNCTION_174
0x4008614	              0xc3	                                     ret	      7595	ldlang.c	FUNCTION_174
lang_enter_overlay_section	CALL,5:functions,0:WHILE,0:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,1	39
0x4008ea0	    0x4c8b05000000	              mov r8, qword [0x04008ea7]	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008ea7	    0x488b35000000	            mov rsi, qword [0x04008eae] 	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008eae	          0x4531c9	                            xor r9d, r9d	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008eb1	              0x53	                                push rbx	      7964	ldlang.c	FUNCTION_189
0x4008eb2	            0x6a00	                                  push 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008eb4	            0x31c9	                            xor ecx, ecx	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008eb6	            0x6a00	                                  push 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008eb8	      0xba01000000	                              mov edx, 1	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008ebd	          0x4889fb	                            mov rbx, rdi	      7964	ldlang.c	FUNCTION_189
0x4008ec0	      0xe800000000	                          call 0x4008ec5	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008ec5	    0x48833d000000	               cmp qword [0x04008ecd], 0	      7974	ldlang.c	FUNCTION_189	IF_1
0x4008ecd	              0x58	                                 pop rax	      7974	ldlang.c	FUNCTION_189	IF_1
0x4008ece	              0x5a	                                 pop rdx	      7974	ldlang.c	FUNCTION_189	IF_1
0x4008ecf	            0x745f	                            je 0x4008f30	      7974	ldlang.c	FUNCTION_189	IF_1
0x4008ed1	      0xbf10000000	                           mov edi, 0x10	      7978	ldlang.c	FUNCTION_189	CALL_3
0x4008ed6	      0xe800000000	                          call 0x4008edb	      7978	ldlang.c	FUNCTION_189	CALL_3
0x4008edb	    0x488b15000000	            mov rdx, qword [0x04008ee2] 	      7979	ldlang.c	FUNCTION_189
0x4008ee2	          0x4889de	                            mov rsi, rbx	      7983	ldlang.c	FUNCTION_189	CALL_4
0x4008ee5	      0xbf41010000	                          mov edi, 0x141	      7983	ldlang.c	FUNCTION_189	CALL_4
0x4008eea	        0x48895008	                mov qword [rax + 8], rdx	      7979	ldlang.c	FUNCTION_189
0x4008eee	    0x488b15000000	            mov rdx, qword [0x04008ef5] 	      7980	ldlang.c	FUNCTION_189
0x4008ef5	    0x488905000000	            mov qword [0x04008efc], rax 	      7981	ldlang.c	FUNCTION_189
0x4008efc	          0x488910	                    mov qword [rax], rdx	      7980	ldlang.c	FUNCTION_189
0x4008eff	      0xe800000000	                          call 0x4008f04	      7983	ldlang.c	FUNCTION_189	CALL_4
0x4008f04	    0x488b35000000	            mov rsi, qword [0x04008f0b] 	      7986	ldlang.c	FUNCTION_189	IF_2
0x4008f0b	          0x4885f6	                           test rsi, rsi	      7986	ldlang.c	FUNCTION_189	IF_2
0x4008f0e	            0x740d	                            je 0x4008f1d	      7986	ldlang.c	FUNCTION_189	IF_2
0x4008f10	          0x4889c2	                            mov rdx, rax	      7989	ldlang.c	FUNCTION_189	CALL_5
0x4008f13	      0xbf45010000	                          mov edi, 0x145	      7989	ldlang.c	FUNCTION_189	CALL_5
0x4008f18	      0xe800000000	                          call 0x4008f1d	      7989	ldlang.c	FUNCTION_189	CALL_5
0x4008f1d	    0x488905000000	            mov qword [0x04008f24], rax 	      7989	ldlang.c	FUNCTION_189	CALL_5
0x4008f24	              0x5b	                                 pop rbx	      7990	ldlang.c	FUNCTION_189
0x4008f25	              0xc3	                                     ret	      7990	ldlang.c	FUNCTION_189
0x4008f26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7990	ldlang.c	FUNCTION_189
0x4008f30	          0x4889de	                            mov rsi, rbx	      7975	ldlang.c	FUNCTION_189	CALL_2
0x4008f33	      0xbf43010000	                          mov edi, 0x143	      7975	ldlang.c	FUNCTION_189	CALL_2
0x4008f38	      0xe800000000	                          call 0x4008f3d	      7975	ldlang.c	FUNCTION_189	CALL_2
0x4008f3d	    0x488905000000	            mov qword [0x04008f44], rax 	      7975	ldlang.c	FUNCTION_189	CALL_2
0x4008f44	            0xeb8b	                           jmp 0x4008ed1	      7975	ldlang.c	FUNCTION_189	CALL_2
lang_append_dynamic_list_cpp_new	CALL,3:functions,0:WHILE,0:FOR,1:IF,0:DO,0:SWITCH,0:ELSE,0	14
0x400b990	        0x4883ec08	                              sub rsp, 8	      8710	ldlang.c	FUNCTION_206
0x400b994	            0x31c9	                            xor ecx, ecx	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b996	      0xba00000000	                              mov edx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b99b	      0xbe00000000	                              mov esi, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9a0	            0x31ff	                            xor edi, edi	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9a2	      0xe800000000	                          call 0x400b9a7	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9a7	            0x31c9	                            xor ecx, ecx	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9a9	          0x4889c7	                            mov rdi, rax	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9ac	      0xba00000000	                              mov edx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9b1	      0xbe00000000	                              mov esi, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9b6	      0xe800000000	                          call 0x400b9bb	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400b9bb	        0x4883c408	                              add rsp, 8	      8724	ldlang.c	FUNCTION_206
0x400b9bf	          0x4889c7	                            mov rdi, rax	      8723	ldlang.c	FUNCTION_206	CALL_3
0x400b9c2	      0xe929ffffff	        jmp sym.lang_append_dynamic_list	      8723	ldlang.c	FUNCTION_206	CALL_3
lang_reset_memory_regions	CALL,0:functions,0:WHILE,0:FOR,3:IF,1:DO,0:SWITCH,0:ELSE,0	33
0x4007950	    0x488b05000000	            mov rax, qword [0x04007957] 	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4007957	          0x4885c0	                           test rax, rax	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400795a	            0x741d	                            je 0x4007979	      6756	ldlang.c	FUNCTION_148	FOR_1
0x400795c	         0xf1f4000	                         nop dword [rax]	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4007960	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6758	ldlang.c	FUNCTION_148	FOR_1
0x4007964	    0x48c740400000	               mov qword [rax + 0x40], 0	      6759	ldlang.c	FUNCTION_148	FOR_1
0x400796c	        0x48895038	             mov qword [rax + 0x38], rdx	      6758	ldlang.c	FUNCTION_148	FOR_1
0x4007970	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4007974	          0x4885c0	                           test rax, rax	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4007977	            0x75e7	                           jne 0x4007960	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4007979	    0x488b05000000	            mov rax, qword [0x04007980] 	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4007980	          0x4885c0	                           test rax, rax	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4007983	            0x7413	                            je 0x4007998	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4007985	           0xf1f00	                         nop dword [rax]	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4007988	    0x80a090000000	             and byte [rax + 0x90], 0xfc	      6767	ldlang.c	FUNCTION_148	FOR_2
0x400798f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6764	ldlang.c	FUNCTION_148	FOR_2
0x4007993	          0x4885c0	                           test rax, rax	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4007996	            0x75f0	                           jne 0x4007988	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4007998	    0x488b05000000	            mov rax, qword [0x0400799f] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x400799f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079a6	          0x4885c0	                           test rax, rax	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079a9	            0x7426	                            je 0x40079d1	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079ab	       0xf1f440000	                   nop dword [rax + rax]	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079b0	        0xf6402108	               test byte [rax + 0x21], 8	      6774	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x40079b4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6773	ldlang.c	FUNCTION_148	FOR_3
0x40079b8	        0x48895040	             mov qword [rax + 0x40], rdx	      6773	ldlang.c	FUNCTION_148	FOR_3
0x40079bc	            0x7508	                           jne 0x40079c6	      6774	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x40079be	    0x48c740380000	               mov qword [rax + 0x38], 0	      6775	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x40079c6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079ca	          0x4885c0	                           test rax, rax	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079cd	            0x75e1	                           jne 0x40079b0	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079cf	            0xf3c3	                                     ret	      6770	ldlang.c	FUNCTION_148	FOR_3
0x40079d1	            0xf3c3	                                     ret	      6770	ldlang.c	FUNCTION_148	FOR_3
lang_list_remove_tail	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	22
0x40001e0	              0x55	                                push rbp	      7083	ldlang.c	FUNCTION_159
0x40001e1	              0x53	                                push rbx	      7083	ldlang.c	FUNCTION_159
0x40001e2	          0x4889fd	                            mov rbp, rdi	      7083	ldlang.c	FUNCTION_159
0x40001e5	          0x4889f3	                            mov rbx, rsi	      7083	ldlang.c	FUNCTION_159
0x40001e8	        0x4883ec08	                              sub rsp, 8	      7083	ldlang.c	FUNCTION_159
0x40001ec	          0x488b07	                    mov rax, qword [rdi]	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40001ef	          0x483906	                    cmp qword [rsi], rax	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40001f2	            0x740f	                            je 0x4000203	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40001f4	      0xbeae1b0000	                         mov esi, 0x1bae	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40001f9	      0xbf00000000	                              mov edi, 0	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40001fe	      0xe800000000	                          call 0x4000203	      7086	ldlang.c	FUNCTION_159	CALL_1
0x4000203	        0x488b4308	                mov rax, qword [rbx + 8]	      7087	ldlang.c	FUNCTION_159
0x4000207	          0x488b10	                    mov rdx, qword [rax]	      7088	ldlang.c	FUNCTION_159
0x400020a	          0x488913	                    mov qword [rbx], rdx	      7088	ldlang.c	FUNCTION_159
0x400020d	        0x488b5508	                mov rdx, qword [rbp + 8]	      7089	ldlang.c	FUNCTION_159
0x4000211	        0x48895308	                mov qword [rbx + 8], rdx	      7089	ldlang.c	FUNCTION_159
0x4000215	        0x48894508	                mov qword [rbp + 8], rax	      7090	ldlang.c	FUNCTION_159
0x4000219	    0x48c700000000	                      mov qword [rax], 0	      7091	ldlang.c	FUNCTION_159
0x4000220	        0x4883c408	                              add rsp, 8	      7092	ldlang.c	FUNCTION_159
0x4000224	              0x5b	                                 pop rbx	      7092	ldlang.c	FUNCTION_159
0x4000225	              0x5d	                                 pop rbp	      7092	ldlang.c	FUNCTION_159
0x4000226	              0xc3	                                     ret	      7092	ldlang.c	FUNCTION_159
walk_wild_section_general	CALL,2:functions,0:WHILE,1:FOR,1:IF,3:DO,0:SWITCH,0:ELSE,0	63
0x40027f0	            0x4157	                                push r15	       290	ldlang.c	FUNCTION_8
0x40027f2	            0x4156	                                push r14	       290	ldlang.c	FUNCTION_8
0x40027f4	            0x4155	                                push r13	       290	ldlang.c	FUNCTION_8
0x40027f6	            0x4154	                                push r12	       290	ldlang.c	FUNCTION_8
0x40027f8	              0x55	                                push rbp	       290	ldlang.c	FUNCTION_8
0x40027f9	              0x53	                                push rbx	       290	ldlang.c	FUNCTION_8
0x40027fa	        0x4883ec08	                              sub rsp, 8	       290	ldlang.c	FUNCTION_8
0x40027fe	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002802	    0x488ba8900000	            mov rbp, qword [rax + 0x90] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002809	          0x4885ed	                           test rbp, rbp	       294	ldlang.c	FUNCTION_8	FOR_1
0x400280c	            0x7468	                            je 0x4002876	       294	ldlang.c	FUNCTION_8	FOR_1
0x400280e	          0x4989fc	                            mov r12, rdi	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002811	          0x4989f5	                            mov r13, rsi	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002814	          0x4989d7	                            mov r15, rdx	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002817	          0x4989ce	                            mov r14, rcx	       294	ldlang.c	FUNCTION_8	FOR_1
0x400281a	    0x660f1f440000	                    nop word [rax + rax]	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002820	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       296	ldlang.c	FUNCTION_8	FOR_1
0x4002825	          0x4885db	                           test rbx, rbx	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002828	            0x751b	                           jne 0x4002845	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400282a	            0xeb59	                           jmp 0x4002885	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400282c	         0xf1f4000	                         nop dword [rax]	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002830	        0x488b7500	                    mov rsi, qword [rbp]	       308	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2	CALL_1
0x4002834	      0xe817fdffff	                     call sym.name_match	       308	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2	CALL_1
0x4002839	            0x85c0	                           test eax, eax	       311	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_3
0x400283b	            0x7411	                            je 0x400284e	       311	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_3
0x400283d	          0x488b1b	                    mov rbx, qword [rbx]	       314	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x4002840	          0x4885db	                           test rbx, rbx	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x4002843	            0x7428	                            je 0x400286d	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x4002845	        0x488b7b08	                mov rdi, qword [rbx + 8]	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x4002849	          0x4885ff	                           test rdi, rdi	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x400284c	            0x75e2	                           jne 0x4002830	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x400284e	          0x4889d9	                            mov rcx, rbx	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002851	          0x4d89f1	                             mov r9, r14	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002854	          0x4d89f8	                             mov r8, r15	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002857	          0x4889ea	                            mov rdx, rbp	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x400285a	          0x4c89ee	                            mov rsi, r13	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x400285d	          0x4c89e7	                            mov rdi, r12	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002860	      0xe89bfeffff	     call sym.walk_wild_consider_section	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002865	          0x488b1b	                    mov rbx, qword [rbx]	       314	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x4002868	          0x4885db	                           test rbx, rbx	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x400286b	            0x75d8	                           jne 0x4002845	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x400286d	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002871	          0x4885ed	                           test rbp, rbp	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002874	            0x75aa	                           jne 0x4002820	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002876	        0x4883c408	                              add rsp, 8	       317	ldlang.c	FUNCTION_8
0x400287a	              0x5b	                                 pop rbx	       317	ldlang.c	FUNCTION_8
0x400287b	              0x5d	                                 pop rbp	       317	ldlang.c	FUNCTION_8
0x400287c	            0x415c	                                 pop r12	       317	ldlang.c	FUNCTION_8
0x400287e	            0x415d	                                 pop r13	       317	ldlang.c	FUNCTION_8
0x4002880	            0x415e	                                 pop r14	       317	ldlang.c	FUNCTION_8
0x4002882	            0x415f	                                 pop r15	       317	ldlang.c	FUNCTION_8
0x4002884	              0xc3	                                     ret	       317	ldlang.c	FUNCTION_8
0x4002885	          0x4889ea	                            mov rdx, rbp	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002888	            0x31f6	                            xor esi, esi	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400288a	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400288f	          0x4d89f1	                             mov r9, r14	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002892	          0x4d89e8	                             mov r8, r13	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002895	          0x4c89e7	                            mov rdi, r12	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002898	          0x41ffd7	                                call r15	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400289b	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x400289f	          0x4885ed	                           test rbp, rbp	       294	ldlang.c	FUNCTION_8	FOR_1
0x40028a2	     0xf8578ffffff	                           jne 0x4002820	       294	ldlang.c	FUNCTION_8	FOR_1
0x40028a8	            0xebcc	                           jmp 0x4002876	       294	ldlang.c	FUNCTION_8	FOR_1
lang_finalize_version_expr_head	CALL,3:functions,0:WHILE,0:FOR,2:IF,6:DO,1:SWITCH,0:ELSE,4	104
0x4000ba0	          0x4c8b0f	                     mov r9, qword [rdi]	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000ba3	          0x4d85c9	                             test r9, r9	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000ba6	            0x7433	                            je 0x4000bdb	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000ba8	          0x8b7718	            mov esi, dword [rdi + 0x18] 	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000bab	          0x4c89ca	                             mov rdx, r9	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000bae	            0x31c9	                            xor ecx, ecx	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000bb0	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000bb4	          0x488b12	                    mov rdx, qword [rdx]	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000bb7	          0x4189c0	                            mov r8d, eax	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000bba	        0x4183e001	                              and r8d, 1	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000bbe	        0x4180f801	                              cmp r8b, 1	      8376	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000bc2	        0x4883d9ff	             sbb rcx, 0xffffffffffffffff	      8376	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4000bc6	          0xc0e803	                               shr al, 3	      8377	ldlang.c	FUNCTION_198	FOR_1
0x4000bc9	          0x83e007	                              and eax, 7	      8377	ldlang.c	FUNCTION_198	FOR_1
0x4000bcc	             0x9c6	                             or esi, eax	      8377	ldlang.c	FUNCTION_198	FOR_1
0x4000bce	          0x4885d2	                           test rdx, rdx	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000bd1	            0x75dd	                           jne 0x4000bb0	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4000bd3	          0x4885c9	                           test rcx, rcx	      8380	ldlang.c	FUNCTION_198	IF_2
0x4000bd6	          0x897718	             mov dword [rdi + 0x18], esi	      8380	ldlang.c	FUNCTION_198	IF_2
0x4000bd9	            0x7505	                           jne 0x4000be0	      8380	ldlang.c	FUNCTION_198	IF_2
0x4000bdb	        0x4c894f10	              mov qword [rdi + 0x10], r9	      8442	ldlang.c	FUNCTION_198	ELSE_4
0x4000bdf	              0xc3	                                     ret	      8442	ldlang.c	FUNCTION_198	ELSE_4
0x4000be0	            0x4157	                                push r15	      8368	ldlang.c	FUNCTION_198
0x4000be2	            0x4156	                                push r14	      8368	ldlang.c	FUNCTION_198
0x4000be4	      0xba00000000	                              mov edx, 0	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000be9	            0x4155	                                push r13	      8368	ldlang.c	FUNCTION_198
0x4000beb	            0x4154	                                push r12	      8368	ldlang.c	FUNCTION_198
0x4000bed	      0xbe00000000	                              mov esi, 0	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000bf2	              0x55	                                push rbp	      8368	ldlang.c	FUNCTION_198
0x4000bf3	              0x53	                                push rbx	      8368	ldlang.c	FUNCTION_198
0x4000bf4	          0x4889fb	                            mov rbx, rdi	      8368	ldlang.c	FUNCTION_198
0x4000bf7	        0x4c8d7310	                   lea r14, [rbx + 0x10]	      8385	ldlang.c	FUNCTION_198	IF_2
0x4000bfb	        0x4883ec18	                           sub rsp, 0x18	      8368	ldlang.c	FUNCTION_198
0x4000bff	        0x48893c24	                    mov qword [rsp], rdi	      8368	ldlang.c	FUNCTION_198
0x4000c03	        0x488d3c09	                    lea rdi, [rcx + rcx]	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000c07	            0x31c9	                            xor ecx, ecx	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000c09	      0xe800000000	                          call 0x4000c0e	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000c0e	          0x4c8b3b	                    mov r15, qword [rbx]	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c11	        0x48894308	                mov qword [rbx + 8], rax	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4000c15	      0x48895c2408	                mov qword [rsp + 8], rbx	      8384	ldlang.c	FUNCTION_198	IF_2
0x4000c1a	          0x4d85ff	                           test r15, r15	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c1d	            0x7517	                           jne 0x4000c36	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c1f	      0xe984000000	                           jmp 0x4000ca8	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c24	         0xf1f4000	                         nop dword [rax]	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c28	          0x4d893e	                    mov qword [r14], r15	      8391	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x4000c2b	          0x4d89fe	                            mov r14, r15	      8392	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x4000c2e	          0x4d85ed	                           test r13, r13	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c31	          0x4d89ef	                            mov r15, r13	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c34	            0x7472	                            je 0x4000ca8	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c36	      0x41f6471001	               test byte [r15 + 0x10], 1	      8389	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x4000c3b	          0x4d8b2f	                    mov r13, qword [r15]	      8388	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000c3e	            0x74e8	                            je 0x4000c28	      8389	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x4000c40	        0x488b0424	                    mov rax, qword [rsp]	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x4000c44	      0xba01000000	                              mov edx, 1	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x4000c49	          0x4c89fe	                            mov rsi, r15	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x4000c4c	        0x488b7808	                mov rdi, qword [rax + 8]	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x4000c50	      0xe800000000	                          call 0x4000c55	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x4000c55	          0x4c8b20	                    mov r12, qword [rax]	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c58	          0x4d85e4	                           test r12, r12	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c5b	     0xf847f000000	                            je 0x4000ce0	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c61	      0x410fb66f10	           movzx ebp, byte [r15 + 0x10] 	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c66	            0xeb25	                           jmp 0x4000c8d	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c68	     0xf1f84000000	                   nop dword [rax + rax]	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c70	        0x498b1c24	                    mov rbx, qword [r12]	      8412	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1
0x4000c74	          0x4885db	                           test rbx, rbx	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c77	            0x7457	                            je 0x4000cd0	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c79	        0x498b7708	                mov rsi, qword [r15 + 8]	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c7d	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c81	      0xe800000000	                          call 0x4000c86	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c86	            0x85c0	                           test eax, eax	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c88	            0x7546	                           jne 0x4000cd0	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c8a	          0x4989dc	                            mov r12, rbx	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4000c8d	            0x89e8	                            mov eax, ebp	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4000c8f	      0x4132442410	               xor al, byte [r12 + 0x10]	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4000c94	            0xa838	                           test al, 0x38	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4000c96	            0x75d8	                           jne 0x4000c70	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4000c98	          0x4c89ff	                            mov rdi, r15	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x4000c9b	          0x4d89ef	                            mov r15, r13	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x4000c9e	      0xe800000000	                          call 0x4000ca3	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x4000ca3	          0x4d85ed	                           test r13, r13	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000ca6	            0x758e	                           jne 0x4000c36	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4000ca8	        0x488b0424	                    mov rax, qword [rsp]	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000cac	    0x49c706000000	                      mov qword [r14], 0	      8438	ldlang.c	FUNCTION_198	IF_2
0x4000cb3	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000cb8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000cbc	          0x488901	                    mov qword [rcx], rax	      8439	ldlang.c	FUNCTION_198	IF_2
0x4000cbf	        0x4883c418	                           add rsp, 0x18	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000cc3	              0x5b	                                 pop rbx	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000cc4	              0x5d	                                 pop rbp	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000cc5	            0x415c	                                 pop r12	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000cc7	            0x415d	                                 pop r13	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000cc9	            0x415e	                                 pop r14	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000ccb	            0x415f	                                 pop r15	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000ccd	              0xc3	                                     ret	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000cce	            0x6690	                                     nop	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4000cd0	          0x49891f	                    mov qword [r15], rbx	      8426	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000cd3	        0x4d893c24	                    mov qword [r12], r15	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000cd7	      0xe952ffffff	                           jmp 0x4000c2e	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000cdc	         0xf1f4000	                         nop dword [rax]	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4000ce0	          0x4c8938	                    mov qword [rax], r15	      8432	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000ce3	      0x488b442408	                mov rax, qword [rsp + 8]	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000ce8	      0x4c897c2408	                mov qword [rsp + 8], r15	      8434	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000ced	          0x4c8938	                    mov qword [rax], r15	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4000cf0	      0xe939ffffff	                           jmp 0x4000c2e	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
lang_enter_overlay	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	22
0x4008e40	              0x55	                                push rbp	      7948	ldlang.c	FUNCTION_188
0x4008e41	              0x53	                                push rbx	      7948	ldlang.c	FUNCTION_188
0x4008e42	          0x4889fd	                            mov rbp, rdi	      7948	ldlang.c	FUNCTION_188
0x4008e45	          0x4889f3	                            mov rbx, rsi	      7948	ldlang.c	FUNCTION_188
0x4008e48	        0x4883ec08	                              sub rsp, 8	      7948	ldlang.c	FUNCTION_188
0x4008e4c	    0x48833d000000	               cmp qword [0x04008e54], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e54	            0x742a	                            je 0x4008e80	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e56	      0xbe101f0000	                         mov esi, 0x1f10	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e5b	      0xbf00000000	                              mov edi, 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e60	      0xe800000000	                          call 0x4008e65	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e65	    0x48892d000000	            mov qword [0x04008e6c], rbp 	      7954	ldlang.c	FUNCTION_188
0x4008e6c	    0x48891d000000	            mov qword [0x04008e73], rbx 	      7955	ldlang.c	FUNCTION_188
0x4008e73	        0x4883c408	                              add rsp, 8	      7956	ldlang.c	FUNCTION_188
0x4008e77	              0x5b	                                 pop rbx	      7956	ldlang.c	FUNCTION_188
0x4008e78	              0x5d	                                 pop rbp	      7956	ldlang.c	FUNCTION_188
0x4008e79	              0xc3	                                     ret	      7956	ldlang.c	FUNCTION_188
0x4008e7a	    0x660f1f440000	                    nop word [rax + rax]	      7956	ldlang.c	FUNCTION_188
0x4008e80	    0x48833d000000	               cmp qword [0x04008e88], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e88	            0x75cc	                           jne 0x4008e56	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e8a	    0x48833d000000	               cmp qword [0x04008e92], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e92	            0x75c2	                           jne 0x4008e56	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008e94	            0xebcf	                           jmp 0x4008e65	      7950	ldlang.c	FUNCTION_188	CALL_1
lang_do_assignments	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	21
0x40063b0	        0x4883ec18	                           sub rsp, 0x18	      5915	ldlang.c	FUNCTION_123
0x40063b4	    0x893d00000000	            mov dword [0x040063ba], edi 	      5920	ldlang.c	FUNCTION_123
0x40063ba	    0x488b35000000	            mov rsi, qword [0x040063c1] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x40063c1	    0x488b3d000000	            mov rdi, qword [0x040063c8] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x40063c8	      0x4c8d442404	                       lea r8, [rsp + 4]	      5922	ldlang.c	FUNCTION_123	CALL_1
0x40063cd	            0x31c9	                            xor ecx, ecx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x40063cf	            0x31d2	                            xor edx, edx	      5922	ldlang.c	FUNCTION_123	CALL_1
0x40063d1	    0x830500000000	               add dword [0x040063d8], 1	      5921	ldlang.c	FUNCTION_123
0x40063d8	    0xc74424040000	                  mov dword [rsp + 4], 0	      5916	ldlang.c	FUNCTION_123
0x40063e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      5915	ldlang.c	FUNCTION_123
0x40063e9	      0x4889442408	                mov qword [rsp + 8], rax	      5915	ldlang.c	FUNCTION_123
0x40063ee	            0x31c0	                            xor eax, eax	      5915	ldlang.c	FUNCTION_123
0x40063f0	    0x48c705000000	               mov qword [0x040063fb], 0	      5918	ldlang.c	FUNCTION_123
0x40063fb	    0xc70500000000	               mov dword [0x04006405], 0	      5919	ldlang.c	FUNCTION_123
0x4006405	      0xe8e6a0ffff	          call sym.lang_do_assignments_1	      5922	ldlang.c	FUNCTION_123	CALL_1
0x400640a	      0x488b442408	                mov rax, qword [rsp + 8]	      5924	ldlang.c	FUNCTION_123
0x400640f	    0x644833042528	                xor rax, qword fs:[0x28]	      5924	ldlang.c	FUNCTION_123
0x4006418	            0x7505	                           jne 0x400641f	      5924	ldlang.c	FUNCTION_123
0x400641a	        0x4883c418	                           add rsp, 0x18	      5924	ldlang.c	FUNCTION_123
0x400641e	              0xc3	                                     ret	      5924	ldlang.c	FUNCTION_123
0x400641f	      0xe800000000	                          call 0x4006424	      5924	ldlang.c	FUNCTION_123
lang_default_entry	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	2
0x4008420	    0x48893d000000	            mov qword [0x04008427], rdi 	      7508	ldlang.c	FUNCTION_167
0x4008427	              0xc3	                                     ret	      7508	ldlang.c	FUNCTION_167
init_os	CALL,9:functions,0:WHILE,0:FOR,0:IF,7:DO,0:SWITCH,0:ELSE,0	74
0x4004d40	            0x4154	                                push r12	      2165	ldlang.c	FUNCTION_55
0x4004d42	              0x55	                                push rbp	      2165	ldlang.c	FUNCTION_55
0x4004d43	            0x89f5	                            mov ebp, esi	      2165	ldlang.c	FUNCTION_55
0x4004d45	              0x53	                                push rbx	      2165	ldlang.c	FUNCTION_55
0x4004d46	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004d4a	          0x4889fb	                            mov rbx, rdi	      2165	ldlang.c	FUNCTION_55
0x4004d4d	      0xb90a000000	                            mov ecx, 0xa	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004d52	      0xbf00000000	                              mov edi, 0	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004d57	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004d59	     0xf8481000000	                            je 0x4004de0	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004d5f	    0x81bb84000000	          cmp dword [rbx + 0x84], 0x17e 	      2169	ldlang.c	FUNCTION_55	IF_2
0x4004d69	            0x7465	                            je 0x4004dd0	      2169	ldlang.c	FUNCTION_55	IF_2
0x4004d6b	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4004d6f	    0x488b3d000000	            mov rdi, qword [0x04004d76] 	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4004d76	      0xe800000000	                          call 0x4004d7b	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4004d7b	        0x48894338	             mov qword [rbx + 0x38], rax	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4004d7f	          0x4885c0	                           test rax, rax	      2171	ldlang.c	FUNCTION_55	IF_3
0x4004d82	     0xf8480000000	                            je 0x4004e08	      2171	ldlang.c	FUNCTION_55	IF_3
0x4004d88	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2189	ldlang.c	FUNCTION_55	IF_5
0x4004d8c	        0x48894068	             mov qword [rax + 0x68], rax	      2180	ldlang.c	FUNCTION_55
0x4004d90	    0x48c740600000	               mov qword [rax + 0x60], 0	      2181	ldlang.c	FUNCTION_55
0x4004d98	    0x488998a80000	             mov qword [rax + 0xa8], rbx	      2185	ldlang.c	FUNCTION_55	CALL_7
0x4004d9f	          0x4885ff	                           test rdi, rdi	      2189	ldlang.c	FUNCTION_55	IF_5
0x4004da2	            0x7405	                            je 0x4004da9	      2189	ldlang.c	FUNCTION_55	IF_5
0x4004da4	      0xe8f7feffff	                    call sym.exp_init_os	      2190	ldlang.c	FUNCTION_55	CALL_8
0x4004da9	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      2192	ldlang.c	FUNCTION_55	IF_6
0x4004dad	          0x4885ff	                           test rdi, rdi	      2192	ldlang.c	FUNCTION_55	IF_6
0x4004db0	            0x7405	                            je 0x4004db7	      2192	ldlang.c	FUNCTION_55	IF_6
0x4004db2	      0xe8e9feffff	                    call sym.exp_init_os	      2193	ldlang.c	FUNCTION_55	CALL_9
0x4004db7	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      2196	ldlang.c	FUNCTION_55	IF_7
0x4004dbd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2196	ldlang.c	FUNCTION_55	IF_7
0x4004dc0	            0x7407	                            je 0x4004dc9	      2196	ldlang.c	FUNCTION_55	IF_7
0x4004dc2	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2197	ldlang.c	FUNCTION_55	IF_7
0x4004dc6	          0x894270	             mov dword [rdx + 0x70], eax	      2197	ldlang.c	FUNCTION_55	IF_7
0x4004dc9	              0x5b	                                 pop rbx	      2198	ldlang.c	FUNCTION_55
0x4004dca	              0x5d	                                 pop rbp	      2198	ldlang.c	FUNCTION_55
0x4004dcb	            0x415c	                                 pop r12	      2198	ldlang.c	FUNCTION_55
0x4004dcd	              0xc3	                                     ret	      2198	ldlang.c	FUNCTION_55
0x4004dce	            0x6690	                                     nop	      2198	ldlang.c	FUNCTION_55
0x4004dd0	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2198	ldlang.c	FUNCTION_55
0x4004dd4	            0xeba9	                           jmp 0x4004d7f	      2198	ldlang.c	FUNCTION_55
0x4004dd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2198	ldlang.c	FUNCTION_55
0x4004de0	            0x31ff	                            xor edi, edi	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004de2	      0xba05000000	                              mov edx, 5	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004de7	      0xbe00000000	                              mov esi, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004dec	      0xe800000000	                          call 0x4004df1	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004df1	      0xbe00000000	                              mov esi, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004df6	          0x4889c7	                            mov rdi, rax	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004df9	            0x31c0	                            xor eax, eax	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004dfb	      0xe800000000	                          call 0x4004e00	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004e00	      0xe95affffff	                           jmp 0x4004d5f	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004e05	           0xf1f00	                         nop dword [rax]	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004e08	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004e0c	    0x488b3d000000	            mov rdi, qword [0x04004e13] 	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004e13	            0x89ea	                            mov edx, ebp	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004e15	      0xe800000000	                          call 0x4004e1a	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004e1a	          0x4885c0	                           test rax, rax	      2174	ldlang.c	FUNCTION_55	IF_4
0x4004e1d	        0x48894338	             mov qword [rbx + 0x38], rax	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004e21	     0xf8561ffffff	                           jne 0x4004d88	      2174	ldlang.c	FUNCTION_55	IF_4
0x4004e27	    0x488b05000000	            mov rax, qword [0x04004e2e] 	      2178	ldlang.c	FUNCTION_55	IF_4
0x4004e2e	        0x4c8b6330	            mov r12, qword [rbx + 0x30] 	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e32	      0xba05000000	                              mov edx, 5	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e37	      0xbe00000000	                              mov esi, 0	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e3c	            0x31ff	                            xor edi, edi	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e3e	        0x488b4008	                mov rax, qword [rax + 8]	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e42	          0x488b28	                    mov rbp, qword [rax]	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e45	      0xe800000000	                          call 0x4004e4a	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e4a	          0x4c89e2	                            mov rdx, r12	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e4d	          0x4889c7	                            mov rdi, rax	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e50	            0x31c0	                            xor eax, eax	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e52	          0x4889ee	                            mov rsi, rbp	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e55	      0xe800000000	                          call 0x4004e5a	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e5a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x4004e5e	      0xe925ffffff	                           jmp 0x4004d88	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
lang_process	CALL,66:functions,0:WHILE,1:FOR,1:IF,21:DO,0:SWITCH,0:ELSE,2	1908
0x40098a0	            0x4157	                                push r15	      7157	ldlang.c	FUNCTION_163
0x40098a2	            0x4156	                                push r14	      7157	ldlang.c	FUNCTION_163
0x40098a4	            0x4155	                                push r13	      7157	ldlang.c	FUNCTION_163
0x40098a6	            0x4154	                                push r12	      7157	ldlang.c	FUNCTION_163
0x40098a8	              0x55	                                push rbp	      7157	ldlang.c	FUNCTION_163
0x40098a9	              0x53	                                push rbx	      7157	ldlang.c	FUNCTION_163
0x40098aa	        0x4883ec78	                           sub rsp, 0x78	      7157	ldlang.c	FUNCTION_163
0x40098ae	    0x488b3d000000	            mov rdi, qword [0x040098b5] 	      7159	ldlang.c	FUNCTION_163	IF_1
0x40098b5	    0x64488b042528	                mov rax, qword fs:[0x28]	      7157	ldlang.c	FUNCTION_163
0x40098be	      0x4889442468	             mov qword [rsp + 0x68], rax	      7157	ldlang.c	FUNCTION_163
0x40098c3	            0x31c0	                            xor eax, eax	      7157	ldlang.c	FUNCTION_163
0x40098c5	          0x4885ff	                           test rdi, rdi	      7159	ldlang.c	FUNCTION_163	IF_1
0x40098c8	            0x7405	                            je 0x40098cf	      7159	ldlang.c	FUNCTION_163	IF_1
0x40098ca	      0xe8d172ffff	call sym.lang_finalize_version_expr_head	      7160	ldlang.c	FUNCTION_163	CALL_1
0x40098cf	    0x488b05000000	            mov rax, qword [0x040098d6] 	      7162	ldlang.c	FUNCTION_163
0x40098d6	    0x488b35000000	            mov rsi, qword [0x040098dd] 	      1001	ldlang.c	FUNCTION_29	CALL_1
0x40098dd	      0xbf00000000	                              mov edi, 0	      1001	ldlang.c	FUNCTION_29	CALL_1
0x40098e2	    0x488905000000	            mov qword [0x040098e9], rax 	      7162	ldlang.c	FUNCTION_163
0x40098e9	      0xe800000000	                          call 0x40098ee	      1001	ldlang.c	FUNCTION_29	CALL_1
0x40098ee	      0xe82d7bffff	                       call sym.init_opb	      7166	ldlang.c	FUNCTION_163	CALL_3
0x40098f3	      0xe800000000	                          call 0x40098f8	      7168	ldlang.c	FUNCTION_163	CALL_4
0x40098f8	    0x488b1d000000	            mov rbx, qword [0x040098ff] 	      3431	ldlang.c	FUNCTION_81	FOR_1
0x40098ff	          0x4885db	                           test rbx, rbx	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4009902	            0x7415	                            je 0x4009919	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4009904	         0xf1f4000	                         nop dword [rax]	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4009908	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3432	ldlang.c	FUNCTION_81	CALL_1
0x400990c	      0xe86f70ffff	               call sym.insert_undefined	      3432	ldlang.c	FUNCTION_81	CALL_1
0x4009911	          0x488b1b	                    mov rbx, qword [rbx]	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4009914	          0x4885db	                           test rbx, rbx	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4009917	            0x75ef	                           jne 0x4009908	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4009919	      0xe800000000	                          call 0x400991e	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x400991e	            0x85c0	                           test eax, eax	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x4009920	     0xf8480190000	                            je 0x400b2a6	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x4009926	    0x488b05000000	            mov rax, qword [0x0400992d] 	      7177	ldlang.c	FUNCTION_163
0x400992d	    0x488b3d000000	            mov rdi, qword [0x04009934] 	      7179	ldlang.c	FUNCTION_163	CALL_9
0x4009934	            0x31f6	                            xor esi, esi	      7179	ldlang.c	FUNCTION_163	CALL_9
0x4009936	    0x830500000000	               add dword [0x0400993d], 1	      7178	ldlang.c	FUNCTION_163
0x400993d	    0x488905000000	            mov qword [0x04009944], rax 	      7177	ldlang.c	FUNCTION_163
0x4009944	      0xe8b7daffff	                call sym.open_input_bfds	      7179	ldlang.c	FUNCTION_163	CALL_9
0x4009949	    0xf60500000000	               test byte [0x04009950], 2	      7182	ldlang.c	FUNCTION_163	IF_3
0x4009950	     0xf857e160000	                           jne 0x400afd4	      7182	ldlang.c	FUNCTION_163	IF_3
0x4009956	    0x48833d000000	               cmp qword [0x0400995e], 0	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400995e	            0x740f	                            je 0x400996f	      7270	ldlang.c	FUNCTION_163	CALL_27
0x4009960	      0xbe661c0000	                         mov esi, 0x1c66	      7270	ldlang.c	FUNCTION_163	CALL_27
0x4009965	      0xbf00000000	                              mov edi, 0	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400996a	      0xe800000000	                          call 0x400996f	      7270	ldlang.c	FUNCTION_163	CALL_27
0x400996f	    0x48833d000000	               cmp qword [0x04009977], 0	      7274	ldlang.c	FUNCTION_163	IF_11
0x4009977	    0x48c705000000	               mov qword [0x04009982], 0	      7272	ldlang.c	FUNCTION_163
0x4009982	     0xf84b01b0000	                            je 0x400b538	      7274	ldlang.c	FUNCTION_163	IF_11
0x4009988	    0x488b1d000000	            mov rbx, qword [0x0400998f] 	      7289	ldlang.c	FUNCTION_163	CALL_29
0x400998f	          0x4885db	                           test rbx, rbx	      7102	ldlang.c	FUNCTION_160	IF_1
0x4009992	            0x741f	                            je 0x40099b3	      7102	ldlang.c	FUNCTION_160	IF_1
0x4009994	      0xbf10000000	                           mov edi, 0x10	      7105	ldlang.c	FUNCTION_160	CALL_1
0x4009999	      0xe800000000	                          call 0x400999e	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400999e	    0x488b15000000	            mov rdx, qword [0x040099a5] 	      7107	ldlang.c	FUNCTION_160
0x40099a5	        0x48895808	                mov qword [rax + 8], rbx	      7108	ldlang.c	FUNCTION_160
0x40099a9	          0x488910	                    mov qword [rax], rdx	      7107	ldlang.c	FUNCTION_160
0x40099ac	    0x488905000000	            mov qword [0x040099b3], rax 	      7109	ldlang.c	FUNCTION_160
0x40099b3	    0x488b1d000000	            mov rbx, qword [0x040099ba] 	      7290	ldlang.c	FUNCTION_163	CALL_30
0x40099ba	          0x4885db	                           test rbx, rbx	      7102	ldlang.c	FUNCTION_160	IF_1
0x40099bd	            0x741f	                            je 0x40099de	      7102	ldlang.c	FUNCTION_160	IF_1
0x40099bf	      0xbf10000000	                           mov edi, 0x10	      7105	ldlang.c	FUNCTION_160	CALL_1
0x40099c4	      0xe800000000	                          call 0x40099c9	      7105	ldlang.c	FUNCTION_160	CALL_1
0x40099c9	    0x488b15000000	            mov rdx, qword [0x040099d0] 	      7107	ldlang.c	FUNCTION_160
0x40099d0	        0x48895808	                mov qword [rax + 8], rbx	      7108	ldlang.c	FUNCTION_160
0x40099d4	          0x488910	                    mov qword [rax], rdx	      7107	ldlang.c	FUNCTION_160
0x40099d7	    0x488905000000	            mov qword [0x040099de], rax 	      7109	ldlang.c	FUNCTION_160
0x40099de	      0xe800000000	                          call 0x40099e3	      7292	ldlang.c	FUNCTION_163	CALL_31
0x40099e3	    0x48833d000000	               cmp qword [0x040099eb], 0	      7293	ldlang.c	FUNCTION_163	IF_12
0x40099eb	     0xf849c000000	                            je 0x4009a8d	      7293	ldlang.c	FUNCTION_163	IF_12
0x40099f1	    0x48833d000000	               cmp qword [0x040099f9], 0	      1995	ldlang.c	FUNCTION_51	IF_1
0x40099f9	     0xf848e000000	                            je 0x4009a8d	      1995	ldlang.c	FUNCTION_51	IF_1
0x40099ff	            0x31ff	                            xor edi, edi	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4009a01	      0xba05000000	                              mov edx, 5	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4009a06	      0xbe00000000	                              mov esi, 0	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4009a0b	      0xe800000000	                          call 0x4009a10	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4009a10	          0x4889c7	                            mov rdi, rax	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4009a13	            0x31c0	                            xor eax, eax	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4009a15	      0xe800000000	                          call 0x4009a1a	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4009a1a	    0x488b2d000000	            mov rbp, qword [0x04009a21] 	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4009a21	          0x4885ed	                           test rbp, rbp	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4009a24	            0x7467	                            je 0x4009a8d	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4009a26	        0x488b7508	                mov rsi, qword [rbp + 8]	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4009a2a	            0x31c0	                            xor eax, eax	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4009a2c	      0xbf00000000	                              mov edi, 0	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4009a31	      0xe800000000	                          call 0x4009a36	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4009a36	        0x488b7d08	                mov rdi, qword [rbp + 8]	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4009a3a	      0xe800000000	                          call 0x4009a3f	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4009a3f	        0x4883f81c	                           cmp rax, 0x1c	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4009a43	          0x4889c3	                            mov rbx, rax	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4009a46	     0xf8784030000	                            ja 0x4009dd0	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4009a4c	         0xf1f4000	                         nop dword [rax]	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4009a50	        0x4883c301	                              add rbx, 1	      2015	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4009a54	      0xe800000000	                          call 0x4009a59	      2014	ldlang.c	FUNCTION_51	FOR_1	WHILE_1	CALL_6
0x4009a59	        0x4883fb1e	                           cmp rbx, 0x1e	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4009a5d	            0x75f1	                           jne 0x4009a50	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4009a5f	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x4009a63	          0x4885f6	                           test rsi, rsi	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x4009a66	            0x740c	                            je 0x4009a74	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x4009a68	      0xbf00000000	                              mov edi, 0	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x4009a6d	            0x31c0	                            xor eax, eax	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x4009a6f	      0xe800000000	                          call 0x4009a74	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x4009a74	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4009a78	            0x31c0	                            xor eax, eax	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4009a7a	      0xbf00000000	                              mov edi, 0	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4009a7f	      0xe800000000	                          call 0x4009a84	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4009a84	        0x488b6d00	                    mov rbp, qword [rbp]	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4009a88	          0x4885ed	                           test rbp, rbp	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4009a8b	            0x7599	                           jne 0x4009a26	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4009a8d	      0xe800000000	                          call 0x4009a92	      7296	ldlang.c	FUNCTION_163	CALL_33
0x4009a92	    0x488b1d000000	            mov rbx, qword [0x04009a99] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009a99	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009a9c	            0x7517	                           jne 0x4009ab5	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009a9e	      0xe9c1000000	                           jmp 0x4009b64	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009aa3	       0xf1f440000	                   nop dword [rax + rax]	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009aa8	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009aac	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009aaf	     0xf84af000000	                            je 0x4009b64	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009ab5	        0xf6434920	           test byte [rbx + 0x49], 0x20 	      6279	ldlang.c	FUNCTION_135	FOR_1	IF_1
0x4009ab9	            0x75ed	                           jne 0x4009aa8	      6279	ldlang.c	FUNCTION_135	FOR_1	IF_1
0x4009abb	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      6282	ldlang.c	FUNCTION_135	FOR_1
0x4009abf	    0x8b1500000000	            mov edx, dword [0x04009ac5] 	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4009ac5	    0x488b35000000	            mov rsi, qword [0x04009acc] 	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4009acc	          0x4889ef	                            mov rdi, rbp	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4009acf	      0xe800000000	                          call 0x4009ad4	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4009ad4	          0x4989c4	                            mov r12, rax	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4009ad7	     0xfb605000000	           movzx eax, byte [0x04009ade] 	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4009ade	          0x83e003	                              and eax, 3	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4009ae1	            0x3c02	                               cmp al, 2	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4009ae3	     0xf8427020000	                            je 0x4009d10	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4009ae9	    0xf60500000000	               test byte [0x04009af0], 8	      6294	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009af0	     0xf851a020000	                           jne 0x4009d10	      6294	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009af6	          0x4d85e4	                           test r12, r12	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x4009af9	     0xf8475020000	                            je 0x4009d74	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x4009aff	    0x448bb5a00000	           mov r14d, dword [rbp + 0xa0] 	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x4009b06	          0x4585f6	                         test r14d, r14d	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x4009b09	            0x749d	                            je 0x4009aa8	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x4009b0b	    0x448b2d000000	           mov r13d, dword [0x04009b12] 	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x4009b12	          0x4531e4	                          xor r12d, r12d	      6320	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x4009b15	          0x4585ed	                         test r13d, r13d	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x4009b18	     0xf842a100000	                            je 0x400ab48	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x4009b1e	    0x488b05000000	            mov rax, qword [0x04009b25] 	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x4009b25	      0xbe00000000	                              mov esi, 0	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x4009b2a	          0x4889ef	                            mov rdi, rbp	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x4009b2d	        0x488b4008	                mov rax, qword [rax + 8]	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x4009b31	    0xff9040010000	                call qword [rax + 0x140]	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x4009b37	            0x85c0	                           test eax, eax	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x4009b39	     0xf85be0e0000	                           jne 0x400a9fd	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x4009b3f	    0x448b1d000000	           mov r11d, dword [0x04009b46] 	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x4009b46	          0x4585db	                         test r11d, r11d	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x4009b49	     0xf85900e0000	                           jne 0x400a9df	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x4009b4f	          0x4c89e7	                            mov rdi, r12	      6336	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_12
0x4009b52	      0xe800000000	                          call 0x4009b57	      6336	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_12
0x4009b57	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009b5b	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009b5e	     0xf8551ffffff	                           jne 0x4009ab5	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009b64	    0x48833d000000	               cmp qword [0x04009b6c], 0	      7306	ldlang.c	FUNCTION_163	IF_13
0x4009b6c	     0xf84ea000000	                            je 0x4009c5c	      7306	ldlang.c	FUNCTION_163	IF_13
0x4009b72	    0x4c8b2d000000	            mov r13, qword [0x04009b79] 	      8580	ldlang.c	FUNCTION_201
0x4009b79	            0x31ed	                            xor ebp, ebp	      8580	ldlang.c	FUNCTION_201
0x4009b7b	          0x4d85ed	                           test r13, r13	      8580	ldlang.c	FUNCTION_201
0x4009b7e	     0xf848e000000	                            je 0x4009c12	      8580	ldlang.c	FUNCTION_201
0x4009b84	         0xf1f4000	                         nop dword [rax]	      8580	ldlang.c	FUNCTION_201
0x4009b88	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x4009b8c	      0xbe00000000	                              mov esi, 0	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x4009b91	      0xe800000000	                          call 0x4009b96	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x4009b96	          0x4885c0	                           test rax, rax	      8586	ldlang.c	FUNCTION_201	FUNCTION_1	IF_1
0x4009b99	          0x4989c6	                            mov r14, rax	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x4009b9c	            0x7467	                            je 0x4009c05	      8586	ldlang.c	FUNCTION_201	FUNCTION_1	IF_1
0x4009b9e	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      8589	ldlang.c	FUNCTION_201	FUNCTION_1
0x4009ba2	          0x4c89e7	                            mov rdi, r12	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x4009ba5	      0xe800000000	                          call 0x4009baa	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x4009baa	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bae	            0x31c9	                            xor ecx, ecx	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bb0	          0x4d89e0	                             mov r8, r12	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bb3	          0x4889c2	                            mov rdx, rax	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bb6	          0x4c89f6	                            mov rsi, r14	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bb9	          0x4889c3	                            mov rbx, rax	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x4009bbc	      0xe800000000	                          call 0x4009bc1	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bc1	            0x85c0	                           test eax, eax	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bc3	     0xf84d7040000	                            je 0x400a0a0	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009bc9	          0x4901dc	                            add r12, rbx	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bcc	          0x4939dc	                            cmp r12, rbx	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bcf	            0x762c	                           jbe 0x4009bfd	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bd1	     0xf1f80000000	                         nop dword [rax]	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bd8	            0x31c9	                            xor ecx, ecx	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x4009bda	            0x31d2	                            xor edx, edx	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x4009bdc	          0x4889de	                            mov rsi, rbx	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x4009bdf	          0x4889ef	                            mov rdi, rbp	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x4009be2	      0xe800000000	                          call 0x4009be7	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x4009be7	            0x31f6	                            xor esi, esi	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009be9	          0x4889df	                            mov rdi, rbx	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bec	          0x4889c5	                            mov rbp, rax	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x4009bef	      0xe800000000	                          call 0x4009bf4	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bf4	        0x488d5801	                      lea rbx, [rax + 1]	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bf8	          0x4939dc	                            cmp r12, rbx	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bfb	            0x77db	                            ja 0x4009bd8	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009bfd	    0x41814e200080	         or dword [r14 + 0x20], 0x208000	      8604	ldlang.c	FUNCTION_201	FUNCTION_1
0x4009c05	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      8580	ldlang.c	FUNCTION_201
0x4009c09	          0x4d85ed	                           test r13, r13	      8580	ldlang.c	FUNCTION_201
0x4009c0c	     0xf8576ffffff	                           jne 0x4009b88	      8580	ldlang.c	FUNCTION_201
0x4009c12	            0x31d2	                            xor edx, edx	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009c14	            0x31c9	                            xor ecx, ecx	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009c16	      0xbe00000000	                              mov esi, 0	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009c1b	            0x31ff	                            xor edi, edi	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009c1d	      0xe800000000	                          call 0x4009c22	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009c22	      0xbe70000000	                           mov esi, 0x70	      8334	ldlang.c	FUNCTION_195	CALL_1
0x4009c27	      0xbf01000000	                              mov edi, 1	      8334	ldlang.c	FUNCTION_195	CALL_1
0x4009c2c	          0x4889c3	                            mov rbx, rax	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009c2f	      0xe800000000	                          call 0x4009c34	      8334	ldlang.c	FUNCTION_195	CALL_1
0x4009c34	    0x488b3d000000	            mov rdi, qword [0x04009c3b] 	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009c3b	        0x48896818	             mov qword [rax + 0x18], rbp	      8335	ldlang.c	FUNCTION_195
0x4009c3f	            0x31d2	                            xor edx, edx	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009c41	        0x48895838	             mov qword [rax + 0x38], rbx	      8336	ldlang.c	FUNCTION_195
0x4009c45	    0x48c740680000	               mov qword [rax + 0x68], 0	      8337	ldlang.c	FUNCTION_195
0x4009c4d	          0x4889c6	                            mov rsi, rax	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009c50	    0xc74060ffffff	     mov dword [rax + 0x60], 0xffffffff 	      8338	ldlang.c	FUNCTION_195
0x4009c57	      0xe800000000	                          call 0x4009c5c	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009c5c	      0xe800000000	                          call 0x4009c61	      7311	ldlang.c	FUNCTION_163	CALL_36
0x4009c61	    0x448b0d000000	            mov r9d, dword [0x04009c68] 	      7316	ldlang.c	FUNCTION_163	IF_14
0x4009c68	          0x4585c9	                           test r9d, r9d	      7316	ldlang.c	FUNCTION_163	IF_14
0x4009c6b	     0xf8540120000	                           jne 0x400aeb1	      7316	ldlang.c	FUNCTION_163	IF_14
0x4009c71	      0xbf01000000	                              mov edi, 1	      7321	ldlang.c	FUNCTION_163	CALL_38
0x4009c76	      0xe800000000	                          call 0x4009c7b	      7321	ldlang.c	FUNCTION_163	CALL_38
0x4009c7b	    0x488b1d000000	            mov rbx, qword [0x04009c82] 	      8617	ldlang.c	FUNCTION_202
0x4009c82	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009c85	            0x754c	                           jne 0x4009cd3	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009c87	      0xe97e010000	                           jmp 0x4009e0a	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009c8c	         0xf1f4000	                         nop dword [rax]	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009c90	    0x488b05000000	            mov rax, qword [0x04009c97] 	      8626	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009c97	        0x48894320	             mov qword [rbx + 0x20], rax	      8626	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009c9b	        0x48894338	             mov qword [rbx + 0x38], rax	      8627	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009c9f	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x4009ca3	          0x4885ff	                           test rdi, rdi	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x4009ca6	            0x741e	                            je 0x4009cc6	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x4009ca8	      0xe800000000	                          call 0x4009cad	      8635	ldlang.c	FUNCTION_202	FOR_1	IF_3	CALL_4
0x4009cad	    0x8b3d00000000	            mov edi, dword [0x04009cb3] 	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009cb3	            0x85ff	                           test edi, edi	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009cb5	     0xf8421010000	                            je 0x4009ddc	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009cbb	    0x488b05000000	            mov rax, qword [0x04009cc2] 	      8637	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009cc2	        0x48894328	             mov qword [rbx + 0x28], rax	      8637	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009cc6	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009cca	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009ccd	     0xf8437010000	                            je 0x4009e0a	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009cd3	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x4009cd7	          0x4885ff	                           test rdi, rdi	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x4009cda	            0x74c3	                            je 0x4009c9f	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x4009cdc	      0xe800000000	                          call 0x4009ce1	      8623	ldlang.c	FUNCTION_202	FOR_1	IF_1	CALL_1
0x4009ce1	    0x448b05000000	            mov r8d, dword [0x04009ce8] 	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009ce8	          0x4585c0	                           test r8d, r8d	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009ceb	            0x75a3	                           jne 0x4009c90	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009ced	          0x488b2b	                    mov rbp, qword [rbx]	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009cf0	            0x31ff	                            xor edi, edi	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009cf2	      0xba05000000	                              mov edx, 5	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009cf7	      0xbe00000000	                              mov esi, 0	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009cfc	      0xe800000000	                          call 0x4009d01	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009d01	          0x4889ee	                            mov rsi, rbp	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009d04	          0x4889c7	                            mov rdi, rax	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009d07	            0x31c0	                            xor eax, eax	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009d09	      0xe800000000	                          call 0x4009d0e	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009d0e	            0xeb8f	                           jmp 0x4009c9f	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009d10	          0x4d85e4	                           test r12, r12	      6295	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d13	     0xf847a110000	                            je 0x400ae93	      6295	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d19	    0x4c8b2d000000	            mov r13, qword [0x04009d20] 	      6297	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d20	        0x488b5508	                mov rdx, qword [rbp + 8]	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d24	        0x498b4508	                mov rax, qword [r13 + 8]	      6297	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d28	          0x8b4808	                mov ecx, dword [rax + 8]	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d2b	          0x394a08	                cmp dword [rdx + 8], ecx	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d2e	     0xf84cbfdffff	                            je 0x4009aff	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d34	        0xf6454420	           test byte [rbp + 0x44], 0x20 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d38	     0xf84c1fdffff	                            je 0x4009aff	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009d3e	          0x4c8b32	                    mov r14, qword [rdx]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d41	          0x4c8b38	                    mov r15, qword [rax]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d44	            0x31ff	                            xor edi, edi	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d46	      0xba05000000	                              mov edx, 5	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d4b	      0xbe00000000	                              mov esi, 0	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d50	      0xe800000000	                          call 0x4009d55	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d55	          0x4d89e8	                             mov r8, r13	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d58	          0x4889c7	                            mov rdi, rax	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d5b	          0x4c89f9	                            mov rcx, r15	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d5e	            0x31c0	                            xor eax, eax	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d60	          0x4889ea	                            mov rdx, rbp	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d63	          0x4c89f6	                            mov rsi, r14	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d66	      0xe800000000	                          call 0x4009d6b	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009d6b	          0x4d85e4	                           test r12, r12	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x4009d6e	     0xf858bfdffff	                           jne 0x4009aff	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x4009d74	    0x448b3d000000	           mov r15d, dword [0x04009d7b] 	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x4009d7b	          0x4585ff	                         test r15d, r15d	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x4009d7e	     0xf8424fdffff	                            je 0x4009aa8	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x4009d84	    0x488b3d000000	            mov rdi, qword [0x04009d8b] 	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009d8b	      0xe800000000	                          call 0x4009d90	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009d90	          0x4889ef	                            mov rdi, rbp	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009d93	          0x4989c5	                            mov r13, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009d96	      0xe800000000	                          call 0x4009d9b	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009d9b	            0x31ff	                            xor edi, edi	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009d9d	          0x4989c4	                            mov r12, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009da0	      0xba05000000	                              mov edx, 5	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009da5	      0xbe00000000	                              mov esi, 0	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009daa	      0xe800000000	                          call 0x4009daf	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009daf	          0x4c89e9	                            mov rcx, r13	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009db2	          0x4889c7	                            mov rdi, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009db5	          0x4889ea	                            mov rdx, rbp	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009db8	          0x4c89e6	                            mov rsi, r12	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009dbb	            0x31c0	                            xor eax, eax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009dbd	      0xe800000000	                          call 0x4009dc2	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009dc2	      0xe9e1fcffff	                           jmp 0x4009aa8	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009dc7	    0x660f1f840000	                    nop word [rax + rax]	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009dd0	      0xe800000000	                          call 0x4009dd5	      2009	ldlang.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4009dd5	            0x31db	                            xor ebx, ebx	      2010	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4009dd7	      0xe974fcffff	                           jmp 0x4009a50	      2010	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4009ddc	          0x488b2b	                    mov rbp, qword [rbx]	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009ddf	            0x31ff	                            xor edi, edi	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009de1	      0xba05000000	                              mov edx, 5	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009de6	      0xbe00000000	                              mov esi, 0	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009deb	      0xe800000000	                          call 0x4009df0	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009df0	          0x4889ee	                            mov rsi, rbp	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009df3	          0x4889c7	                            mov rdi, rax	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009df6	            0x31c0	                            xor eax, eax	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009df8	      0xe800000000	                          call 0x4009dfd	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x4009dfd	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009e01	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009e04	     0xf85c9feffff	                           jne 0x4009cd3	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009e0a	    0xf60500000000	           test byte [0x04009e11], 0x20 	      6348	ldlang.c	FUNCTION_136	IF_1
0x4009e11	    0xc70500000000	               mov dword [0x04009e1b], 0	      7324	ldlang.c	FUNCTION_163
0x4009e1b	            0x7576	                           jne 0x4009e93	      6348	ldlang.c	FUNCTION_136	IF_1
0x4009e1d	     0xfb605000000	           movzx eax, byte [0x04009e24] 	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x4009e24	          0x83e003	                              and eax, 3	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x4009e27	            0x3c02	                               cmp al, 2	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x4009e29	     0xf848b0c0000	                            je 0x400aaba	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x4009e2f	    0x8b0500000000	            mov eax, dword [0x04009e35] 	      6354	ldlang.c	FUNCTION_136	IF_3
0x4009e35	            0x85c0	                           test eax, eax	      6354	ldlang.c	FUNCTION_136	IF_3
0x4009e37	     0xf8449160000	                            je 0x400b486	      6354	ldlang.c	FUNCTION_136	IF_3
0x4009e3d	          0x83f802	                              cmp eax, 2	      6360	ldlang.c	FUNCTION_136	ELSE_1	IF_4
0x4009e40	     0xf8436180000	                            je 0x400b67c	      6360	ldlang.c	FUNCTION_136	ELSE_1	IF_4
0x4009e46	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      6360	ldlang.c	FUNCTION_136	ELSE_1	IF_4
0x4009e4b	    0xc74424500000	               mov dword [rsp + 0x50], 0	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009e53	    0x488b3d000000	            mov rdi, qword [0x04009e5a] 	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x4009e5a	          0x4889da	                            mov rdx, rbx	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x4009e5d	      0xbe00000000	                              mov esi, 0	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x4009e62	      0xe800000000	                          call 0x4009e67	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x4009e67	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009e6b	          0x83c001	                              add eax, 1	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009e6e	          0x83f804	                              cmp eax, 4	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009e71	        0x89442450	             mov dword [rsp + 0x50], eax	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009e75	            0x76dc	                           jbe 0x4009e53	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009e77	    0xc7442450ffff	     mov dword [rsp + 0x50], 0xffffffff 	      6373	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2
0x4009e7f	    0x488b3d000000	            mov rdi, qword [0x04009e86] 	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x4009e86	          0x4889da	                            mov rdx, rbx	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x4009e89	      0xbe00000000	                              mov esi, 0	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x4009e8e	      0xe800000000	                          call 0x4009e93	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x4009e93	    0x488b3d000000	            mov rdi, qword [0x04009e9a] 	      6826	ldlang.c	FUNCTION_151	CALL_1
0x4009e9a	      0xe8f1d0ffff	             call sym.lang_gc_sections_1	      6826	ldlang.c	FUNCTION_151	CALL_1
0x4009e9f	     0xfb635000000	           movzx esi, byte [0x04009ea6] 	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x4009ea6	            0x89f0	                            mov eax, esi	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x4009ea8	          0x83e003	                              and eax, 3	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x4009eab	            0x3c02	                               cmp al, 2	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x4009ead	     0xf842d0c0000	                            je 0x400aae0	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x4009eb3	          0x83e640	                           and esi, 0x40	      6846	ldlang.c	FUNCTION_151	IF_2
0x4009eb6	            0x7416	                            je 0x4009ece	      6846	ldlang.c	FUNCTION_151	IF_2
0x4009eb8	    0x488b3d000000	            mov rdi, qword [0x04009ebf] 	      6847	ldlang.c	FUNCTION_151	IF_2
0x4009ebf	      0xbe00000000	                              mov esi, 0	      6847	ldlang.c	FUNCTION_151	IF_2
0x4009ec4	        0x488b4708	                mov rax, qword [rdi + 8]	      6847	ldlang.c	FUNCTION_151	IF_2
0x4009ec8	    0xff90f0020000	                call qword [rax + 0x2f0]	      6847	ldlang.c	FUNCTION_151	IF_2
0x4009ece	    0xf60500000000	           test byte [0x04009ed5], 0x20 	      7117	ldlang.c	FUNCTION_161	IF_1
0x4009ed5	            0x7438	                            je 0x4009f0f	      7117	ldlang.c	FUNCTION_161	IF_1
0x4009ed7	    0x488b1d000000	            mov rbx, qword [0x04009ede] 	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009ede	          0x4885db	                           test rbx, rbx	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009ee1	            0x742c	                            je 0x4009f0f	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009ee3	       0xf1f440000	                   nop dword [rax + rax]	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009ee8	      0xbe00000000	                              mov esi, 0	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009eed	          0x4889df	                            mov rdi, rbx	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009ef0	      0xe800000000	                          call 0x4009ef5	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009ef5	            0x85c0	                           test eax, eax	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009ef7	            0x750a	                           jne 0x4009f03	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009ef9	    0xc70500000000	               mov dword [0x04009f03], 0	      7126	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2
0x4009f03	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      7122	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009f0a	          0x4885db	                           test rbx, rbx	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009f0d	            0x75d9	                           jne 0x4009ee8	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009f0f	      0xe800000000	                          call 0x4009f14	      7335	ldlang.c	FUNCTION_163	CALL_43
0x4009f14	    0x488b3d000000	            mov rdi, qword [0x04009f1b] 	      7338	ldlang.c	FUNCTION_163	CALL_44
0x4009f1b	          0x4531e4	                          xor r12d, r12d	      3728	ldlang.c	FUNCTION_87
0x4009f1e	            0x31db	                            xor ebx, ebx	      3727	ldlang.c	FUNCTION_87
0x4009f20	    0x41bffeffffff	                    mov r15d, 0xfffffffe	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x4009f26	      0xe84564ffff	         call sym.update_wild_statements	      7338	ldlang.c	FUNCTION_163	CALL_44
0x4009f2b	    0x488b3d000000	            mov rdi, qword [0x04009f32] 	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009f32	            0x31d2	                            xor edx, edx	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009f34	            0x31f6	                            xor esi, esi	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009f36	    0x830500000000	               add dword [0x04009f3d], 1	      7342	ldlang.c	FUNCTION_163
0x4009f3d	      0xe85ed1ffff	   call sym.map_input_to_output_sections	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009f42	    0x4c8b35000000	            mov r14, qword [0x04009f49] 	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009f49	     0xf1f80000000	                         nop dword [rax]	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009f50	          0x498b2e	                    mov rbp, qword [r14]	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009f53	          0x4885ed	                           test rbp, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009f56	          0x4989ed	                            mov r13, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009f59	            0x7453	                            je 0x4009fae	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009f5b	          0x8b4508	                mov eax, dword [rbp + 8]	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009f5e	            0x85c0	                           test eax, eax	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009f60	     0xf8562010000	                           jne 0x400a0c8	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009f66	          0x4d85e4	                           test r12, r12	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f69	            0x7419	                            je 0x4009f84	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f6b	      0x493b6c2420	            cmp rbp, qword [r12 + 0x20] 	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f70	            0x7412	                            je 0x4009f84	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f72	      0xbe9f0e0000	                          mov esi, 0xe9f	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f77	      0xbf00000000	                              mov edi, 0	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f7c	      0xe800000000	                          call 0x4009f81	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f81	          0x498b2e	                    mov rbp, qword [r14]	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x4009f84	          0x4489f8	                           mov eax, r15d	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009f87	    0x412b85840000	             sub eax, dword [r13 + 0x84]	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009f8e	          0x4885db	                           test rbx, rbx	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x4009f91	          0x4989ee	                            mov r14, rbp	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x4009f94	          0x4d89ec	                            mov r12, r13	      3741	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009f97	    0x418985840000	             mov dword [r13 + 0x84], eax	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009f9e	            0x75b0	                           jne 0x4009f50	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x4009fa0	          0x498b2e	                    mov rbp, qword [r14]	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009fa3	          0x4c89eb	                            mov rbx, r13	      3741	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x4009fa6	          0x4885ed	                           test rbp, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009fa9	          0x4989ed	                            mov r13, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009fac	            0x75ad	                           jne 0x4009f5b	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009fae	          0x4885db	                           test rbx, rbx	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009fb1	     0xf84ba020000	                            je 0x400a271	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009fb7	      0xbafeffffff	                     mov edx, 0xfffffffe	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009fbc	            0xeb0f	                           jmp 0x4009fcd	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009fbe	            0x6690	                                     nop	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009fc0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009fc4	          0x4885db	                           test rbx, rbx	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009fc7	     0xf84a4020000	                            je 0x400a271	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009fcd	            0x89d0	                            mov eax, edx	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009fcf	    0x2b8384000000	             sub eax, dword [rbx + 0x84]	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009fd5	          0x4939dc	                            cmp r12, rbx	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x4009fd8	    0x898384000000	             mov dword [rbx + 0x84], eax	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009fde	            0x75e0	                           jne 0x4009fc0	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x4009fe0	    0x488b2d000000	            mov rbp, qword [0x04009fe7] 	      6521	ldlang.c	FUNCTION_139
0x4009fe7	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x4009fea	     0xf8598020000	                           jne 0x400a288	      6521	ldlang.c	FUNCTION_139
0x4009ff0	     0xfb62d000000	           movzx ebp, byte [0x04009ff7] 	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x4009ff7	          0x83e503	                              and ebp, 3	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x4009ffa	        0x4080fd02	                              cmp bpl, 2	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x4009ffe	            0x744e	                            je 0x400a04e	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x400a000	    0x488b3d000000	            mov rdi, qword [0x0400a007] 	      7358	ldlang.c	FUNCTION_163	IF_15
0x400a007	      0xbe00000000	                              mov esi, 0	      7358	ldlang.c	FUNCTION_163	IF_15
0x400a00c	        0x488b4708	                mov rax, qword [rdi + 8]	      7358	ldlang.c	FUNCTION_163	IF_15
0x400a010	    0xff9000030000	                call qword [rax + 0x300]	      7358	ldlang.c	FUNCTION_163	IF_15
0x400a016	    0x488b3d000000	            mov rdi, qword [0x0400a01d] 	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x400a01d	      0xbe00000000	                              mov esi, 0	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x400a022	      0xe800000000	                          call 0x400a027	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x400a027	          0x4885c0	                           test rax, rax	      7363	ldlang.c	FUNCTION_163	IF_15	IF_16
0x400a02a	     0xf84090b0000	                            je 0x400ab39	      7363	ldlang.c	FUNCTION_163	IF_15	IF_16
0x400a030	    0x448b15000000	           mov r10d, dword [0x0400a037] 	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400a037	          0x4585d2	                         test r10d, r10d	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400a03a	     0xf84f50a0000	                            je 0x400ab35	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400a040	     0xfb62d000000	           movzx ebp, byte [0x0400a047] 	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400a047	        0x83482008	                or dword [rax + 0x20], 8	      7366	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400a04b	          0x83e503	                              and ebp, 3	      7366	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x400a04e	    0x488b05000000	            mov rax, qword [0x0400a055] 	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400a055	          0x4885c0	                           test rax, rax	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400a058	            0x7513	                           jne 0x400a06d	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400a05a	      0xe9b4030000	                           jmp 0x400a413	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400a05f	              0x90	                                     nop	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400a060	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7144	ldlang.c	FUNCTION_162	FOR_1
0x400a064	          0x4885c0	                           test rax, rax	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400a067	     0xf84a6030000	                            je 0x400a413	      7142	ldlang.c	FUNCTION_162	FOR_1
0x400a06d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a071	          0x4885d2	                           test rdx, rdx	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a074	            0x74ea	                            je 0x400a060	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a076	      0x4883784800	               cmp qword [rax + 0x48], 0	      7147	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a07b	            0x75e3	                           jne 0x400a060	      7147	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a07d	      0x4883786000	               cmp qword [rax + 0x60], 0	      7148	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a082	            0x75dc	                           jne 0x400a060	      7148	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a084	      0x4883785800	               cmp qword [rax + 0x58], 0	      7149	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a089	            0x75d5	                           jne 0x400a060	      7149	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a08b	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a08f	        0x48394840	            cmp qword [rax + 0x40], rcx 	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a093	            0x75cb	                           jne 0x400a060	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a095	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a099	        0x48895048	             mov qword [rax + 0x48], rdx	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a09d	            0xebc1	                           jmp 0x400a060	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a09f	              0x90	                                     nop	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x400a0a0	            0x31ff	                            xor edi, edi	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0a2	      0xba05000000	                              mov edx, 5	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0a7	      0xbe00000000	                              mov esi, 0	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0ac	      0xe800000000	                          call 0x400a0b1	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0b1	          0x4c89f6	                            mov rsi, r14	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0b4	          0x4889c7	                            mov rdi, rax	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0b7	            0x31c0	                            xor eax, eax	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0b9	      0xe800000000	                          call 0x400a0be	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0be	      0xe906fbffff	                           jmp 0x4009bc9	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0c3	       0xf1f440000	                   nop dword [rax + rax]	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x400a0c8	          0x83f80e	                            cmp eax, 0xe	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a0cb	            0x7408	                            je 0x400a0d5	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a0cd	          0x4989ee	                            mov r14, rbp	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a0d0	      0xe97bfeffff	                           jmp 0x4009f50	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a0d5	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400a0d9	            0x31d2	                            xor edx, edx	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400a0db	            0x31f6	                            xor esi, esi	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400a0dd	      0xe800000000	                          call 0x400a0e2	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400a0e2	          0x4885c0	                           test rax, rax	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a0e5	     0xf8464010000	                            je 0x400a24f	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a0eb	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a0ee	            0x85c9	                           test ecx, ecx	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a0f0	     0xf8550010000	                           jne 0x400a246	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a0f6	          0x4d85e4	                           test r12, r12	      3775	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a0f9	     0xf84f7000000	                            je 0x400a1f6	      3775	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a0ff	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a104	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a108	        0x48894a20	             mov qword [rdx + 0x20], rcx	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a10c	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400a111	          0x4885c9	                           test rcx, rcx	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400a114	     0xf84e9120000	                            je 0x400b403	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400a11a	        0x48895128	             mov qword [rcx + 0x28], rdx	      3789	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x400a11e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3791	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x400a122	      0x4989542420	             mov qword [r12 + 0x20], rdx	      3791	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x400a127	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400a12b	          0x4885d2	                           test rdx, rdx	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400a12e	     0xf84be120000	                            je 0x400b3f2	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400a134	        0x4c896228	             mov qword [rdx + 0x28], r12	      3799	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400a138	        0x48894328	             mov qword [rbx + 0x28], rax	      3800	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400a13c	            0x31c9	                            xor ecx, ecx	      3805	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400a13e	        0x48895820	             mov qword [rax + 0x20], rbx	      3801	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400a142	            0x31f6	                            xor esi, esi	      3804	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400a144	            0xeb18	                           jmp 0x400a15e	      3804	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400a146	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3804	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x400a150	          0x4939dc	                            cmp r12, rbx	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400a153	            0x743b	                            je 0x400a190	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400a155	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400a159	          0x4885db	                           test rbx, rbx	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400a15c	            0x7432	                            je 0x400a190	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400a15e	          0x4489fa	                           mov edx, r15d	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400a161	    0x2b9384000000	             sub edx, dword [rbx + 0x84]	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400a167	    0x899384000000	             mov dword [rbx + 0x84], edx	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x400a16d	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400a171	          0x4885d2	                           test rdx, rdx	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400a174	            0x74da	                            je 0x400a150	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400a176	    0x4883baf00000	               cmp qword [rdx + 0xf0], 0	      3810	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400a17e	            0x74d0	                            je 0x400a150	      3810	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x400a180	          0x4885f6	                           test rsi, rsi	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400a183	          0x4889d1	                            mov rcx, rdx	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400a186	            0x75c8	                           jne 0x400a150	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400a188	          0x4939dc	                            cmp r12, rbx	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400a18b	          0x4889d6	                            mov rsi, rdx	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x400a18e	            0x75c5	                           jne 0x400a155	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x400a190	          0x4885c9	                           test rcx, rcx	      3819	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400a193	     0xf8452120000	                            je 0x400b3eb	      3819	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400a199	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3821	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400a19d	          0x4885ff	                           test rdi, rdi	      3822	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_13
0x400a1a0	     0xf8410120000	                            je 0x400b3b6	      3822	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_13
0x400a1a6	            0x31db	                            xor ebx, ebx	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a1a8	          0x4839cf	                            cmp rdi, rcx	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400a1ab	            0x7449	                            je 0x400a1f6	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400a1ad	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400a1b1	        0x4c8b4110	              mov r8, qword [rcx + 0x10]	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400a1b5	          0x4885d2	                           test rdx, rdx	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400a1b8	     0xf84e0120000	                            je 0x400b49e	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400a1be	        0x4c894210	              mov qword [rdx + 0x10], r8	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400a1c2	        0x4c8b4110	              mov r8, qword [rcx + 0x10]	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400a1c6	          0x4d85c0	                             test r8, r8	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400a1c9	     0xf84e6120000	                            je 0x400b4b5	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400a1cf	        0x49895018	              mov qword [r8 + 0x18], rdx	      3837	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400a1d3	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      3841	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400a1d7	        0x48895110	             mov qword [rcx + 0x10], rdx	      3841	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400a1db	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400a1df	          0x4885d2	                           test rdx, rdx	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400a1e2	     0xf8453150000	                            je 0x400b73b	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400a1e8	        0x48894a18	             mov qword [rdx + 0x18], rcx	      3843	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400a1ec	        0x48897e18	             mov qword [rsi + 0x18], rdi	      3846	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400a1f0	            0x31db	                            xor ebx, ebx	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a1f2	        0x48897710	             mov qword [rdi + 0x10], rsi	      3847	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400a1f6	          0x4889c7	                            mov rdi, rax	      3855	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_6
0x400a1f9	      0xe8625effff	                call sym.insert_os_after	      3855	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_6
0x400a1fe	          0x498b36	                    mov rsi, qword [r14]	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a201	    0x488b15000000	            mov rdx, qword [0x0400a208] 	      3859	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a208	          0x488b36	                    mov rsi, qword [rsi]	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a20b	          0x488b0a	                    mov rcx, qword [rdx]	      3859	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a20e	          0x488932	                    mov qword [rdx], rsi	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a211	          0x488b10	                    mov rdx, qword [rax]	      3862	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a214	          0x4885d2	                           test rdx, rdx	      3863	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400a217	          0x498916	                    mov qword [r14], rdx	      3862	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a21a	     0xf8420120000	                            je 0x400b440	      3863	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400a220	          0x488908	                    mov qword [rax], rcx	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a223	          0x4531e4	                          xor r12d, r12d	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a226	    0x4c8b35000000	            mov r14, qword [0x0400a22d] 	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a22d	      0xe91efdffff	                           jmp 0x4009f50	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a232	    0x660f1f440000	                    nop word [rax + rax]	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400a238	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a23e	            0x85d2	                           test edx, edx	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a240	     0xf89b0feffff	                           jns 0x400a0f6	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a246	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3765	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4	DO_1
0x400a24a	          0x4885c0	                           test rax, rax	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a24d	            0x75e9	                           jne 0x400a238	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400a24f	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a253	      0xbe00000000	                              mov esi, 0	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a258	            0x31ff	                            xor edi, edi	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a25a	      0xba05000000	                              mov edx, 5	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a25f	      0xe800000000	                          call 0x400a264	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a264	          0x4889de	                            mov rsi, rbx	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a267	          0x4889c7	                            mov rdi, rax	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a26a	            0x31c0	                            xor eax, eax	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a26c	      0xe800000000	                          call 0x400a271	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a271	    0x488b2d000000	            mov rbp, qword [0x0400a278] 	      6521	ldlang.c	FUNCTION_139
0x400a278	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x400a27b	     0xf846ffdffff	                            je 0x4009ff0	      6521	ldlang.c	FUNCTION_139
0x400a281	     0xf1f80000000	                         nop dword [rax]	      6521	ldlang.c	FUNCTION_139
0x400a288	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a28c	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a293	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a296	            0x7511	                           jne 0x400a2a9	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a298	            0xeb3e	                           jmp 0x400a2d8	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a29a	    0x660f1f440000	                    nop word [rax + rax]	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2a0	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2a4	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2a7	            0x742f	                            je 0x400a2d8	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2a9	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      6527	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1
0x400a2ae	            0x75f0	                           jne 0x400a2a0	      6527	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1
0x400a2b0	        0xf6454810	           test byte [rbp + 0x48], 0x10 	      6532	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a2b4	            0x7579	                           jne 0x400a32f	      6532	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a2b6	          0x8b7b20	            mov edi, dword [rbx + 0x20] 	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x400a2b9	      0xe8d26effff	  call sym.lang_discard_section_p.isra.5	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x400a2be	            0x85c0	                           test eax, eax	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x400a2c0	            0x7424	                            je 0x400a2e6	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x400a2c2	    0x48c743680000	               mov qword [rbx + 0x68], 0	      6535	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3
0x400a2ca	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2ce	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2d1	            0x75d6	                           jne 0x400a2a9	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2d3	       0xf1f440000	                   nop dword [rax + rax]	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400a2d8	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	      6521	ldlang.c	FUNCTION_139
0x400a2dc	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x400a2df	            0x75a7	                           jne 0x400a288	      6521	ldlang.c	FUNCTION_139
0x400a2e1	      0xe90afdffff	                           jmp 0x4009ff0	      6521	ldlang.c	FUNCTION_139
0x400a2e6	          0x4c8b23	                    mov r12, qword [rbx]	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400a2e9	      0xbf00000000	                              mov edi, 0	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400a2ee	      0xb907000000	                              mov ecx, 7	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400a2f3	          0x4c89e6	                            mov rsi, r12	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400a2f6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400a2f8	            0x7550	                           jne 0x400a34a	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x400a2fa	     0xfb605000000	           movzx eax, byte [0x0400a301] 	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400a301	          0x83e003	                              and eax, 3	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400a304	            0x3c02	                               cmp al, 2	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400a306	     0xf84c7000000	                            je 0x400a3d3	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x400a30c	    0x488b0d000000	            mov rcx, qword [0x0400a313] 	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400a313	          0x4885c9	                           test rcx, rcx	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400a316	     0xf84d7000000	                            je 0x400a3f3	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400a31c	        0x488d7910	                   lea rdi, [rcx + 0x10]	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400a320	            0x31d2	                            xor edx, edx	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400a322	          0x4889de	                            mov rsi, rbx	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400a325	      0xe800000000	                          call 0x400a32a	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400a32a	      0xe971ffffff	                           jmp 0x400a2a0	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400a32f	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a333	      0xbe00000000	                              mov esi, 0	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a338	          0x4889df	                            mov rdi, rbx	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a33b	        0x488b4008	                mov rax, qword [rax + 8]	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a33f	    0xff90c8020000	                call qword [rax + 0x2c8]	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a345	      0xe956ffffff	                           jmp 0x400a2a0	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400a34a	    0x8b0500000000	            mov eax, dword [0x0400a350] 	      6472	ldlang.c	FUNCTION_138	IF_1
0x400a350	          0x83f801	                              cmp eax, 1	      6472	ldlang.c	FUNCTION_138	IF_1
0x400a353	     0xf84f3100000	                            je 0x400b44c	      6472	ldlang.c	FUNCTION_138	IF_1
0x400a359	          0x83f803	                              cmp eax, 3	      6489	ldlang.c	FUNCTION_138	ELSE_1	IF_3
0x400a35c	     0xf84b1100000	                            je 0x400b413	      6489	ldlang.c	FUNCTION_138	ELSE_1	IF_3
0x400a362	    0x448b1d000000	           mov r11d, dword [0x0400a369] 	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400a369	          0x4585db	                         test r11d, r11d	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400a36c	     0xf84e8070000	                            je 0x400ab5a	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400a372	    0x41be7e010000	                         mov r14d, 0x17e	      6494	ldlang.c	FUNCTION_138	ELSE_1	IF_4
0x400a378	          0x4489f2	                           mov edx, r14d	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400a37b	          0x4c89e6	                            mov rsi, r12	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400a37e	          0x4889df	                            mov rdi, rbx	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400a381	      0xe800000000	                          call 0x400a386	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400a386	          0x4885c0	                           test rax, rax	      6497	ldlang.c	FUNCTION_138	ELSE_1	IF_5
0x400a389	          0x4989c5	                            mov r13, rax	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x400a38c	     0xf8424130000	                            je 0x400b6b6	      6497	ldlang.c	FUNCTION_138	ELSE_1	IF_5
0x400a392	    0x833d00000000	               cmp dword [0x0400a399], 2	      6507	ldlang.c	FUNCTION_138	ELSE_1	IF_7
0x400a399	     0xf8501ffffff	                           jne 0x400a2a0	      6507	ldlang.c	FUNCTION_138	ELSE_1	IF_7
0x400a39f	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3a3	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3aa	            0x31ff	                            xor edi, edi	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3ac	      0xba05000000	                              mov edx, 5	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3b1	      0xbe00000000	                              mov esi, 0	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3b6	      0xe800000000	                          call 0x400a3bb	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3bb	          0x4c89e9	                            mov rcx, r13	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3be	          0x4889c7	                            mov rdi, rax	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3c1	          0x4c89e2	                            mov rdx, r12	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3c4	          0x4889de	                            mov rsi, rbx	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3c7	            0x31c0	                            xor eax, eax	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3c9	      0xe800000000	                          call 0x400a3ce	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3ce	      0xe9cdfeffff	                           jmp 0x400a2a0	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x400a3d3	    0x448b25000000	           mov r12d, dword [0x0400a3da] 	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x400a3da	          0x4585e4	                         test r12d, r12d	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x400a3dd	     0xf84bdfeffff	                            je 0x400a2a0	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x400a3e3	    0x488b0d000000	            mov rcx, qword [0x0400a3ea] 	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400a3ea	          0x4885c9	                           test rcx, rcx	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400a3ed	     0xf8529ffffff	                           jne 0x400a31c	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400a3f3	      0xba01000000	                              mov edx, 1	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400a3f8	            0x31f6	                            xor esi, esi	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400a3fa	      0xbf00000000	                              mov edi, 0	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400a3ff	      0xe800000000	                          call 0x400a404	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400a404	          0x4889c1	                            mov rcx, rax	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400a407	    0x488905000000	            mov qword [0x0400a40e], rax 	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400a40e	      0xe909ffffff	                           jmp 0x400a31c	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400a413	    0x448b0d000000	            mov r9d, dword [0x0400a41a] 	      7378	ldlang.c	FUNCTION_163	IF_18
0x400a41a	          0x4585c9	                           test r9d, r9d	      7378	ldlang.c	FUNCTION_163	IF_18
0x400a41d	     0xf85fd090000	                           jne 0x400ae20	      7378	ldlang.c	FUNCTION_163	IF_18
0x400a423	        0x4080fd02	                              cmp bpl, 2	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x400a427	            0x747b	                            je 0x400a4a4	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x400a429	    0x488b05000000	            mov rax, qword [0x0400a430] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400a430	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400a437	          0x4885db	                           test rbx, rbx	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400a43a	            0x7468	                            je 0x400a4a4	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400a43c	          0x4c8b23	                    mov r12, qword [rbx]	      6116	ldlang.c	FUNCTION_130	FOR_1
0x400a43f	          0x4c89e7	                            mov rdi, r12	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400a442	      0xe800000000	                          call 0x400a447	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400a447	        0x488d780a	                    lea rdi, [rax + 0xa]	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400a44b	      0xe800000000	                          call 0x400a450	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400a450	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_240	CALL_1
0x400a453	          0x4889c5	                            mov rbp, rax	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x400a456	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_240	CALL_1
0x400a45b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_240	CALL_1
0x400a462	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_240	CALL_1
0x400a465	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_240	CALL_1
0x400a46a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_240	CALL_1
0x400a46c	      0xe800000000	                          call 0x400a471	        33	stdio2.h	FUNCTION_240	CALL_1
0x400a471	          0x4889de	                            mov rsi, rbx	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x400a474	          0x4889ef	                            mov rdi, rbp	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x400a477	      0xe8b468ffff	         call sym.lang_define_start_stop	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x400a47c	        0x488d7d01	                      lea rdi, [rbp + 1]	      6122	ldlang.c	FUNCTION_130	FOR_1	CALL_4
0x400a480	          0x4889de	                            mov rsi, rbx	      6123	ldlang.c	FUNCTION_130	FOR_1	CALL_5
0x400a483	    0xc745012e7369	         mov dword [rbp + 1], 0x7a69732e	        53	string3.h	FUNCTION_228	CALL_3
0x400a48a	        0xc6470465	                mov byte [rdi + 4], 0x65	        53	string3.h	FUNCTION_228	CALL_3
0x400a48e	      0xe89d68ffff	         call sym.lang_define_start_stop	      6123	ldlang.c	FUNCTION_130	FOR_1	CALL_5
0x400a493	          0x4889ef	                            mov rdi, rbp	      6124	ldlang.c	FUNCTION_130	FOR_1	CALL_6
0x400a496	      0xe800000000	                          call 0x400a49b	      6124	ldlang.c	FUNCTION_130	FOR_1	CALL_6
0x400a49b	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400a49f	          0x4885db	                           test rbx, rbx	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400a4a2	            0x7598	                           jne 0x400a43c	      6114	ldlang.c	FUNCTION_130	FOR_1
0x400a4a4	      0xe800000000	                          call 0x400a4a9	      7388	ldlang.c	FUNCTION_163	CALL_54
0x400a4a9	      0xbf50000000	                           mov edi, 0x50	      7784	ldlang.c	FUNCTION_185	CALL_1
0x400a4ae	    0x41bd0a000000	                           mov r13d, 0xa	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a4b4	      0xe800000000	                          call 0x400a4b9	      7784	ldlang.c	FUNCTION_185	CALL_1
0x400a4b9	    0x4c8b25000000	            mov r12, qword [0x0400a4c0] 	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a4c0	          0x4531d2	                          xor r10d, r10d	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a4c3	          0x4989c6	                            mov r14, rax	      7784	ldlang.c	FUNCTION_185	CALL_1
0x400a4c6	          0x4d85e4	                           test r12, r12	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a4c9	     0xf8454010000	                            je 0x400a623	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a4cf	              0x90	                                     nop	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a4d0	    0x488b2d000000	            mov rbp, qword [0x0400a4d7] 	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a4d7	            0x31db	                            xor ebx, ebx	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a4d9	          0x4885ed	                           test rbp, rbp	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a4dc	     0xf8498000000	                            je 0x400a57a	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a4e2	    0x660f1f440000	                    nop word [rax + rax]	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a4e8	    0x448b85840000	            mov r8d, dword [rbp + 0x84] 	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x400a4ef	          0x4585c0	                           test r8d, r8d	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x400a4f2	            0x7879	                            js 0x400a56d	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x400a4f4	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      7803	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a4f8	          0x4885c0	                           test rax, rax	      7804	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_2
0x400a4fb	      0x4889442408	                mov qword [rsp + 8], rax	      7803	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a500	     0xf844a040000	                            je 0x400a950	      7804	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_2
0x400a506	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a50b	            0x745b	                            je 0x400a568	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a50d	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400a512	            0xeb21	                           jmp 0x400a535	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400a514	         0xf1f4000	                         nop dword [rax]	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400a518	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a51c	            0x89d8	                            mov eax, ebx	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a51e	          0x83c301	                              add ebx, 1	      7855	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a521	        0x49890cc6	            mov qword [r14 + rax*8], rcx	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a525	    0x41c747100100	               mov dword [r15 + 0x10], 1	      7856	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a52d	          0x4d8b3f	                    mov r15, qword [r15]	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x400a530	          0x4d85ff	                           test r15, r15	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x400a533	            0x7433	                            je 0x400a568	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x400a535	      0x498b742408	                mov rsi, qword [r12 + 8]	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a53a	        0x498b7f08	                mov rdi, qword [r15 + 8]	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a53e	      0xe800000000	                          call 0x400a543	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a543	            0x85c0	                           test eax, eax	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a545	            0x75e6	                           jne 0x400a52d	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x400a547	          0x4439eb	                           cmp ebx, r13d	      7848	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400a54a	            0x72cc	                            jb 0x400a518	      7848	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400a54c	      0x438d742d00	                    lea esi, [r13 + r13]	      7850	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400a551	          0x4c89f7	                            mov rdi, r14	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400a554	          0x4989f5	                            mov r13, rsi	      7850	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x400a557	        0x48c1e603	                              shl rsi, 3	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400a55b	      0xe800000000	                          call 0x400a560	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400a560	          0x4989c6	                            mov r14, rax	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400a563	            0xebb3	                           jmp 0x400a518	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400a565	           0xf1f00	                         nop dword [rax]	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x400a568	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a56d	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      7796	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a571	          0x4885ed	                           test rbp, rbp	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a574	     0xf856effffff	                           jne 0x400a4e8	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400a57a	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400a57f	            0x31ed	                            xor ebp, ebp	      7862	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400a581	          0x4885ff	                           test rdi, rdi	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400a584	            0x7418	                            je 0x400a59e	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x400a586	      0xba00000000	                              mov edx, 0	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400a58b	            0x31f6	                            xor esi, esi	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400a58d	      0x4c89542408	                mov qword [rsp + 8], r10	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400a592	      0xe800000000	                          call 0x400a597	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400a597	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400a59c	            0x89c5	                            mov ebp, eax	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x400a59e	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400a5a3	          0x4531c9	                            xor r9d, r9d	      7867	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400a5a6	          0x4885ff	                           test rdi, rdi	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400a5a9	            0x741e	                            je 0x400a5c9	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x400a5ab	      0xba00000000	                              mov edx, 0	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400a5b0	            0x31f6	                            xor esi, esi	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400a5b2	      0x4c89542408	                mov qword [rsp + 8], r10	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400a5b7	      0xe800000000	                          call 0x400a5bc	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400a5bc	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400a5c1	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400a5c6	          0x4989c1	                             mov r9, rax	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x400a5c9	          0x4531c0	                            xor r8d, r8d	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5cc	          0x4885ff	                           test rdi, rdi	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5cf	      0x4c89542408	                mov qword [rsp + 8], r10	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5d4	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5d9	        0x410f95c0	                               setne r8b	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5dd	            0x31d2	                            xor edx, edx	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5df	    0x49837c242800	               cmp qword [r12 + 0x28], 0	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5e5	            0x4156	                                push r14	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5e7	            0x89e9	                            mov ecx, ebp	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5e9	              0x53	                                push rbx	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5ea	      0x418b44241c	            mov eax, dword [r12 + 0x1c] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5ef	    0x488b3d000000	            mov rdi, qword [0x0400a5f6] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5f6	              0x50	                                push rax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5f7	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5fc	           0xf95c2	                                setne dl	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a5ff	              0x50	                                push rax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a600	      0xe800000000	                          call 0x400a605	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a605	        0x4883c420	                           add rsp, 0x20	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a609	            0x85c0	                           test eax, eax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a60b	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a610	     0xf847d030000	                            je 0x400a993	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x400a616	        0x4d8b2424	                    mov r12, qword [r12]	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a61a	          0x4d85e4	                           test r12, r12	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a61d	     0xf85adfeffff	                           jne 0x400a4d0	      7787	ldlang.c	FUNCTION_185	FOR_1
0x400a623	          0x4c89f7	                            mov rdi, r14	      7877	ldlang.c	FUNCTION_185	CALL_10
0x400a626	      0xe800000000	                          call 0x400a62b	      7877	ldlang.c	FUNCTION_185	CALL_10
0x400a62b	    0x4c8b25000000	            mov r12, qword [0x0400a632] 	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400a632	          0x4d85e4	                           test r12, r12	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400a635	     0xf848b000000	                            je 0x400a6c6	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400a63b	       0xf1f440000	                   nop dword [rax + rax]	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400a640	    0x418bbc248400	            mov edi, dword [r12 + 0x84] 	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400a648	            0x85ff	                           test edi, edi	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400a64a	            0x786c	                            js 0x400a6b8	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400a64c	    0x49837c243800	               cmp qword [r12 + 0x38], 0	      7887	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400a652	            0x7464	                            je 0x400a6b8	      7887	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x400a654	      0x498b5c2470	            mov rbx, qword [r12 + 0x70] 	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a659	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a65c	            0x750a	                           jne 0x400a668	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a65e	            0xeb58	                           jmp 0x400a6b8	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a660	          0x488b1b	                    mov rbx, qword [rbx]	      7892	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a663	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a666	            0x7450	                            je 0x400a6b8	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a668	          0x8b7310	            mov esi, dword [rbx + 0x10] 	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a66b	            0x85f6	                           test esi, esi	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a66d	            0x75f1	                           jne 0x400a660	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a66f	        0x488b6b08	                mov rbp, qword [rbx + 8]	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a673	      0xbf00000000	                              mov edi, 0	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a678	      0xb905000000	                              mov ecx, 5	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a67d	          0x4889ee	                            mov rsi, rbp	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a680	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a682	            0x74dc	                            je 0x400a660	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x400a684	      0x4d8b6c2430	            mov r13, qword [r12 + 0x30] 	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a689	            0x31ff	                            xor edi, edi	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a68b	      0xba05000000	                              mov edx, 5	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a690	      0xbe00000000	                              mov esi, 0	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a695	      0xe800000000	                          call 0x400a69a	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a69a	          0x4889ea	                            mov rdx, rbp	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a69d	          0x4889c7	                            mov rdi, rax	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a6a0	          0x4c89ee	                            mov rsi, r13	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a6a3	            0x31c0	                            xor eax, eax	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a6a5	      0xe800000000	                          call 0x400a6aa	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x400a6aa	          0x488b1b	                    mov rbx, qword [rbx]	      7892	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a6ad	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a6b0	            0x75b6	                           jne 0x400a668	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a6b2	    0x660f1f440000	                    nop word [rax + rax]	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x400a6b8	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      7882	ldlang.c	FUNCTION_185	FOR_5
0x400a6bd	          0x4d85e4	                           test r12, r12	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400a6c0	     0xf857affffff	                           jne 0x400a640	      7880	ldlang.c	FUNCTION_185	FOR_5
0x400a6c6	    0xf60500000000	           test byte [0x0400a6cd], 0x10 	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400a6cd	            0x7436	                            je 0x400a705	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400a6cf	     0xfb605000000	           movzx eax, byte [0x0400a6d6] 	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400a6d6	          0x83e003	                              and eax, 3	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400a6d9	            0x3c02	                               cmp al, 2	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400a6db	            0x7428	                            je 0x400a705	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x400a6dd	    0x488b3d000000	            mov rdi, qword [0x0400a6e4] 	      6920	ldlang.c	FUNCTION_154	CALL_1
0x400a6e4	      0x488d742450	                   lea rsi, [rsp + 0x50]	      6920	ldlang.c	FUNCTION_154	CALL_1
0x400a6e9	    0xc74424500000	               mov dword [rsp + 0x50], 0	      6916	ldlang.c	FUNCTION_154
0x400a6f1	      0xe86accffff	call sym.lang_find_relro_sections_1.constprop.50	      6920	ldlang.c	FUNCTION_154	CALL_1
0x400a6f6	        0x8b4c2450	            mov ecx, dword [rsp + 0x50] 	      6923	ldlang.c	FUNCTION_154	IF_1
0x400a6fa	            0x85c9	                           test ecx, ecx	      6923	ldlang.c	FUNCTION_154	IF_1
0x400a6fc	            0x7507	                           jne 0x400a705	      6923	ldlang.c	FUNCTION_154	IF_1
0x400a6fe	    0x802500000000	             and byte [0x0400a705], 0xef	      6924	ldlang.c	FUNCTION_154	IF_1
0x400a705	            0x31f6	                            xor esi, esi	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400a707	    0x833d00000000	               cmp dword [0x0400a70e], 1	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400a70e	        0x400f97c6	                                seta sil	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400a712	            0x31ff	                            xor edi, edi	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400a714	      0xe800000000	                          call 0x400a719	      7399	ldlang.c	FUNCTION_163	CALL_58
0x400a719	      0xe800000000	                          call 0x400a71e	      7403	ldlang.c	FUNCTION_163	CALL_59
0x400a71e	    0x488b15000000	            mov rdx, qword [0x0400a725] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a725	          0x4885d2	                           test rdx, rdx	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a728	     0xf8486000000	                            je 0x400a7b4	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a72e	    0x488b05000000	            mov rax, qword [0x0400a735] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a735	    0x8b0d00000000	            mov ecx, dword [0x0400a73b] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a73b	    0x4c8b15000000	            mov r10, qword [0x0400a742] 	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a742	        0x488d3cd0	                  lea rdi, [rax + rdx*8]	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a746	            0xeb11	                           jmp 0x400a759	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a748	     0xf1f84000000	                   nop dword [rax + rax]	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a750	        0x4883c008	                              add rax, 8	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a754	          0x4839f8	                            cmp rax, rdi	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a757	            0x745b	                            je 0x400a7b4	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a759	          0x488b30	                    mov rsi, qword [rax]	      6074	ldlang.c	FUNCTION_127	CALL_1
0x400a75c	         0xfb75618	           movzx edx, word [rsi + 0x18] 	      6133	ldlang.c	FUNCTION_131	IF_1
0x400a760	      0x6681e2ff08	                           and dx, 0x8ff	      6133	ldlang.c	FUNCTION_131	IF_1
0x400a765	        0x6683fa03	                               cmp dx, 3	      6133	ldlang.c	FUNCTION_131	IF_1
0x400a769	            0x75e5	                           jne 0x400a750	      6133	ldlang.c	FUNCTION_131	IF_1
0x400a76b	        0x4c8b4608	                 mov r8, qword [rsi + 8]	      6137	ldlang.c	FUNCTION_131	IF_2
0x400a76f	        0x4180382e	                     cmp byte [r8], 0x2e	      6137	ldlang.c	FUNCTION_131	IF_2
0x400a773	     0xf843f020000	                            je 0x400a9b8	      6137	ldlang.c	FUNCTION_131	IF_2
0x400a779	        0x498b5208	                mov rdx, qword [r10 + 8]	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a77d	        0x4c8b4e28	              mov r9, qword [rsi + 0x28]	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x400a781	        0x807a1c00	                cmp byte [rdx + 0x1c], 0	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a785	        0x4d8b4968	               mov r9, qword [r9 + 0x68]	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x400a789	        0x4c894e28	              mov qword [rsi + 0x28], r9	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x400a78d	           0xf95c2	                                setne dl	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a790	           0xfb6d2	                           movzx edx, dl	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400a793	          0x83c204	                              add edx, 4	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a796	          0x4863d2	                         movsxd rdx, edx	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a799	      0x41803c106f	               cmp byte [r8 + rdx], 0x6f	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a79e	            0x75b0	                           jne 0x400a750	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a7a0	        0x498b5138	              mov rdx, qword [r9 + 0x38]	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a7a4	        0x4883c008	                              add rax, 8	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a7a8	          0x48d3ea	                             shr rdx, cl	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a7ab	          0x4839f8	                            cmp rax, rdi	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a7ae	        0x48895630	             mov qword [rsi + 0x30], rdx	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400a7b2	            0x75a5	                           jne 0x400a759	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400a7b4	      0xbf04000000	                              mov edi, 4	      7410	ldlang.c	FUNCTION_163	CALL_61
0x400a7b9	      0xe800000000	                          call 0x400a7be	      7410	ldlang.c	FUNCTION_163	CALL_61
0x400a7be	      0xe800000000	                          call 0x400a7c3	      7412	ldlang.c	FUNCTION_163	CALL_62
0x400a7c3	      0xe800000000	                          call 0x400a7c8	      7415	ldlang.c	FUNCTION_163	CALL_63
0x400a7c8	    0x803d00000000	                cmp byte [0x0400a7cf], 0	      7418	ldlang.c	FUNCTION_163	IF_21
0x400a7cf	     0xf85fb030000	                           jne 0x400abd0	      7418	ldlang.c	FUNCTION_163	IF_21
0x400a7d5	    0x488b1d000000	            mov rbx, qword [0x0400a7dc] 	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a7dc	          0x4885db	                           test rbx, rbx	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a7df	            0x745a	                            je 0x400a83b	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a7e1	     0xf1f80000000	                         nop dword [rax]	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a7e8	          0x488b33	                    mov rsi, qword [rbx]	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a7eb	    0x488b3d000000	            mov rdi, qword [0x0400a7f2] 	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a7f2	            0x31c9	                            xor ecx, ecx	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a7f4	            0x31d2	                            xor edx, edx	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a7f6	    0x41b801000000	                              mov r8d, 1	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a7fc	      0xe800000000	                          call 0x400a801	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a801	          0x4885c0	                           test rax, rax	      3477	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a804	            0x740b	                            je 0x400a811	      3477	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a806	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a80a	          0x83e803	                              sub eax, 3	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a80d	            0x3c01	                               cmp al, 1	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a80f	            0x7621	                           jbe 0x400a832	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a811	          0x488b2b	                    mov rbp, qword [rbx]	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a814	      0xbe00000000	                              mov esi, 0	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a819	            0x31ff	                            xor edi, edi	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a81b	      0xba05000000	                              mov edx, 5	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a820	      0xe800000000	                          call 0x400a825	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a825	          0x4889ee	                            mov rsi, rbp	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a828	          0x4889c7	                            mov rdi, rax	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a82b	            0x31c0	                            xor eax, eax	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a82d	      0xe800000000	                          call 0x400a832	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a832	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a836	          0x4885db	                           test rbx, rbx	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a839	            0x75ad	                           jne 0x400a7e8	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a83b	     0xfb605000000	           movzx eax, byte [0x0400a842] 	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a842	            0x89c2	                            mov edx, eax	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a844	          0x83e243	                           and edx, 0x43	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a847	          0x80fa02	                               cmp dl, 2	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a84a	     0xf84c8010000	                            je 0x400aa18	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a850	          0x83e003	                              and eax, 3	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400a853	      0xbb01000000	                              mov ebx, 1	      6178	ldlang.c	FUNCTION_133	ELSE_1
0x400a858	            0x3c03	                               cmp al, 3	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400a85a	     0xf84b8010000	                            je 0x400aa18	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400a860	          0x80fa42	                            cmp dl, 0x42	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400a863	     0xf84be010000	                            je 0x400aa27	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400a869	    0x488b35000000	            mov rsi, qword [0x0400a870] 	      6187	ldlang.c	FUNCTION_133	IF_3
0x400a870	          0x4885f6	                           test rsi, rsi	      6187	ldlang.c	FUNCTION_133	IF_3
0x400a873	     0xf84f5010000	                            je 0x400aa6e	      6187	ldlang.c	FUNCTION_133	IF_3
0x400a879	    0x488b3d000000	            mov rdi, qword [0x0400a880] 	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a880	            0x31c9	                            xor ecx, ecx	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a882	            0x31d2	                            xor edx, edx	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a884	    0x41b801000000	                              mov r8d, 1	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a88a	      0xe800000000	                          call 0x400a88f	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a88f	          0x4885c0	                           test rax, rax	      6197	ldlang.c	FUNCTION_133	IF_4
0x400a892	            0x7410	                            je 0x400a8a4	      6197	ldlang.c	FUNCTION_133	IF_4
0x400a894	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a898	          0x8d51fd	                      lea edx, [rcx - 3]	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a89b	          0x80fa01	                               cmp dl, 1	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a89e	     0xf86b70a0000	                           jbe 0x400b35b	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a8a4	    0x488b3d000000	            mov rdi, qword [0x0400a8ab] 	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a8ab	      0x488d742450	                   lea rsi, [rsp + 0x50]	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a8b0	            0x31d2	                            xor edx, edx	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a8b2	      0xe800000000	                          call 0x400a8b7	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a8b7	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400a8bc	          0x803a00	                       cmp byte [rdx], 0	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400a8bf	     0xf84be010000	                            je 0x400aa83	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400a8c5	    0x488b35000000	            mov rsi, qword [0x0400a8cc] 	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a8cc	    0x488b3d000000	            mov rdi, qword [0x0400a8d3] 	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a8d3	      0xe800000000	                          call 0x400a8d8	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a8d8	          0x4885c0	                           test rax, rax	      6231	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8
0x400a8db	          0x4889c5	                            mov rbp, rax	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a8de	     0xf84060e0000	                            je 0x400b6ea	      6231	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8
0x400a8e4	            0x85db	                           test ebx, ebx	      6233	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9
0x400a8e6	            0x742c	                            je 0x400a914	      6233	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9
0x400a8e8	        0x4c8b6028	            mov r12, qword [rax + 0x28] 	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a8ec	    0x488b1d000000	            mov rbx, qword [0x0400a8f3] 	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a8f3	      0xba05000000	                              mov edx, 5	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a8f8	      0xbe00000000	                              mov esi, 0	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a8fd	            0x31ff	                            xor edi, edi	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a8ff	      0xe800000000	                          call 0x400a904	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a904	          0x4c89e2	                            mov rdx, r12	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a907	          0x4889c7	                            mov rdi, rax	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a90a	          0x4889de	                            mov rsi, rbx	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a90d	            0x31c0	                            xor eax, eax	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a90f	      0xe800000000	                          call 0x400a914	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a914	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a918	    0x488b3d000000	            mov rdi, qword [0x0400a91f] 	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a91f	      0xe800000000	                          call 0x400a924	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a924	            0x85c0	                           test eax, eax	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a926	     0xf846e010000	                            je 0x400aa9a	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a92c	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      7425	ldlang.c	FUNCTION_163
0x400a931	    0x644833042528	                xor rax, qword fs:[0x28]	      7425	ldlang.c	FUNCTION_163
0x400a93a	     0xf856a0e0000	                           jne 0x400b7aa	      7425	ldlang.c	FUNCTION_163
0x400a940	        0x4883c478	                           add rsp, 0x78	      7425	ldlang.c	FUNCTION_163
0x400a944	              0x5b	                                 pop rbx	      7425	ldlang.c	FUNCTION_163
0x400a945	              0x5d	                                 pop rbp	      7425	ldlang.c	FUNCTION_163
0x400a946	            0x415c	                                 pop r12	      7425	ldlang.c	FUNCTION_163
0x400a948	            0x415d	                                 pop r13	      7425	ldlang.c	FUNCTION_163
0x400a94a	            0x415e	                                 pop r14	      7425	ldlang.c	FUNCTION_163
0x400a94c	            0x415f	                                 pop r15	      7425	ldlang.c	FUNCTION_163
0x400a94e	              0xc3	                                     ret	      7425	ldlang.c	FUNCTION_163
0x400a94f	              0x90	                                     nop	      7425	ldlang.c	FUNCTION_163
0x400a950	    0x83bd8c000000	               cmp dword [rbp + 0x8c], 2	      7808	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400a957	     0xf8410fcffff	                            je 0x400a56d	      7808	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400a95d	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400a961	          0x4885c0	                           test rax, rax	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400a964	     0xf8403fcffff	                            je 0x400a56d	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400a96a	        0xf6402001	               test byte [rax + 0x20], 1	      7810	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400a96e	     0xf84f9fbffff	                            je 0x400a56d	      7810	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x400a974	    0x49837c241003	               cmp qword [r12 + 0x10], 3	      7814	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_4
0x400a97a	     0xf84edfbffff	                            je 0x400a56d	      7814	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_4
0x400a980	          0x4d85d2	                           test r10, r10	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400a983	     0xf84eb010000	                            je 0x400ab74	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400a989	      0x4c89542408	                mov qword [rsp + 8], r10	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400a98e	      0xe97afbffff	                           jmp 0x400a50d	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400a993	      0xba05000000	                              mov edx, 5	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a998	      0xbe00000000	                              mov esi, 0	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a99d	            0x31ff	                            xor edi, edi	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a99f	      0xe800000000	                          call 0x400a9a4	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a9a4	          0x4889c7	                            mov rdi, rax	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a9a7	            0x31c0	                            xor eax, eax	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a9a9	      0xe800000000	                          call 0x400a9ae	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a9ae	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a9b3	      0xe95efcffff	                           jmp 0x400a616	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x400a9b8	      0x4180780269	                 cmp byte [r8 + 2], 0x69	      6141	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9bd	     0xf858dfdffff	                           jne 0x400a750	      6141	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9c3	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9c7	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9cb	    0x48c746280000	               mov qword [rsi + 0x28], 0	      6145	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9d3	          0x48d3ea	                             shr rdx, cl	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9d6	        0x48895630	             mov qword [rsi + 0x30], rdx	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9da	      0xe971fdffff	                           jmp 0x400a750	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400a9df	      0xbe00000000	                              mov esi, 0	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9e4	            0x31ff	                            xor edi, edi	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9e6	      0xba05000000	                              mov edx, 5	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9eb	      0xe800000000	                          call 0x400a9f0	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9f0	          0x4889ee	                            mov rsi, rbp	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9f3	          0x4889c7	                            mov rdi, rax	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9f6	            0x31c0	                            xor eax, eax	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9f8	      0xe800000000	                          call 0x400a9fd	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400a9fd	    0x448b15000000	           mov r10d, dword [0x0400aa04] 	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400aa04	          0x4585d2	                         test r10d, r10d	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400aa07	     0xf859bf0ffff	                           jne 0x4009aa8	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400aa0d	      0xe93df1ffff	                           jmp 0x4009b4f	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400aa12	    0x660f1f440000	                    nop word [rax + rax]	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400aa18	          0x80fa42	                            cmp dl, 0x42	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400aa1b	    0x8b1d00000000	            mov ebx, dword [0x0400aa21] 	      6176	ldlang.c	FUNCTION_133	IF_1
0x400aa21	     0xf8542feffff	                           jne 0x400a869	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400aa27	    0x8b3500000000	            mov esi, dword [0x0400aa2d] 	      6183	ldlang.c	FUNCTION_133	IF_2
0x400aa2d	            0x85f6	                           test esi, esi	      6183	ldlang.c	FUNCTION_133	IF_2
0x400aa2f	     0xf8534feffff	                           jne 0x400a869	      6183	ldlang.c	FUNCTION_133	IF_2
0x400aa35	    0x8b0d00000000	            mov ecx, dword [0x0400aa3b] 	      6183	ldlang.c	FUNCTION_133	IF_2
0x400aa3b	            0x85c9	                           test ecx, ecx	      6183	ldlang.c	FUNCTION_133	IF_2
0x400aa3d	     0xf8526feffff	                           jne 0x400a869	      6183	ldlang.c	FUNCTION_133	IF_2
0x400aa43	      0xbe00000000	                              mov esi, 0	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400aa48	            0x31ff	                            xor edi, edi	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400aa4a	      0xba05000000	                              mov edx, 5	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400aa4f	      0xe800000000	                          call 0x400aa54	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400aa54	          0x4889c7	                            mov rdi, rax	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400aa57	            0x31c0	                            xor eax, eax	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400aa59	      0xe800000000	                          call 0x400aa5e	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400aa5e	    0x488b35000000	            mov rsi, qword [0x0400aa65] 	      6187	ldlang.c	FUNCTION_133	IF_3
0x400aa65	          0x4885f6	                           test rsi, rsi	      6187	ldlang.c	FUNCTION_133	IF_3
0x400aa68	     0xf850bfeffff	                           jne 0x400a879	      6187	ldlang.c	FUNCTION_133	IF_3
0x400aa6e	    0x488b35000000	            mov rsi, qword [0x0400aa75] 	      6191	ldlang.c	FUNCTION_133	IF_3
0x400aa75	            0x31db	                            xor ebx, ebx	      6192	ldlang.c	FUNCTION_133	IF_3
0x400aa77	    0x488935000000	            mov qword [0x0400aa7e], rsi 	      6191	ldlang.c	FUNCTION_133	IF_3
0x400aa7e	      0xe9f6fdffff	                           jmp 0x400a879	      6191	ldlang.c	FUNCTION_133	IF_3
0x400aa83	    0x488b3d000000	            mov rdi, qword [0x0400aa8a] 	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400aa8a	          0x4889c6	                            mov rsi, rax	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400aa8d	      0xe800000000	                          call 0x400aa92	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400aa92	            0x85c0	                           test eax, eax	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400aa94	     0xf8592feffff	                           jne 0x400a92c	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400aa9a	            0x31ff	                            xor edi, edi	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aa9c	      0xba05000000	                              mov edx, 5	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aaa1	      0xbe00000000	                              mov esi, 0	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aaa6	      0xe800000000	                          call 0x400aaab	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aaab	          0x4889c7	                            mov rdi, rax	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aaae	            0x31c0	                            xor eax, eax	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aab0	      0xe800000000	                          call 0x400aab5	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aab5	      0xe972feffff	                           jmp 0x400a92c	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400aaba	    0x8b3500000000	            mov esi, dword [0x0400aac0] 	      6351	ldlang.c	FUNCTION_136	IF_2
0x400aac0	            0x85f6	                           test esi, esi	      6351	ldlang.c	FUNCTION_136	IF_2
0x400aac2	     0xf84cbf3ffff	                            je 0x4009e93	      6351	ldlang.c	FUNCTION_136	IF_2
0x400aac8	    0x8b0500000000	            mov eax, dword [0x0400aace] 	      6354	ldlang.c	FUNCTION_136	IF_3
0x400aace	            0x85c0	                           test eax, eax	      6354	ldlang.c	FUNCTION_136	IF_3
0x400aad0	     0xf8567f3ffff	                           jne 0x4009e3d	      6354	ldlang.c	FUNCTION_136	IF_3
0x400aad6	      0xe9ab090000	                           jmp 0x400b486	      6354	ldlang.c	FUNCTION_136	IF_3
0x400aadb	       0xf1f440000	                   nop dword [rax + rax]	      6354	ldlang.c	FUNCTION_136	IF_3
0x400aae0	    0x488b0d000000	            mov rcx, qword [0x0400aae7] 	      6833	ldlang.c	FUNCTION_151	IF_1
0x400aae7	          0x4885c9	                           test rcx, rcx	      6833	ldlang.c	FUNCTION_151	IF_1
0x400aaea	     0xf84c3f3ffff	                            je 0x4009eb3	      6833	ldlang.c	FUNCTION_151	IF_1
0x400aaf0	        0xf6414920	           test byte [rcx + 0x49], 0x20 	      6837	ldlang.c	FUNCTION_151	IF_1	FUNCTION_1
0x400aaf4	            0x7531	                           jne 0x400ab27	      6837	ldlang.c	FUNCTION_151	IF_1	FUNCTION_1
0x400aaf6	        0x488b4120	            mov rax, qword [rcx + 0x20] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400aafa	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400ab01	          0x4885c0	                           test rax, rax	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400ab04	            0x7421	                            je 0x400ab27	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400ab06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400ab10	          0x8b5020	            mov edx, dword [rax + 0x20] 	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400ab13	          0xf6c620	                           test dh, 0x20	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400ab16	            0x7506	                           jne 0x400ab1e	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400ab18	          0x80e67f	                            and dh, 0x7f	      6842	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400ab1b	          0x895020	             mov dword [rax + 0x20], edx	      6842	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400ab1e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400ab22	          0x4885c0	                           test rax, rax	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400ab25	            0x75e9	                           jne 0x400ab10	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x400ab27	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	      6833	ldlang.c	FUNCTION_151	IF_1
0x400ab2b	          0x4885c9	                           test rcx, rcx	      6833	ldlang.c	FUNCTION_151	IF_1
0x400ab2e	            0x75c0	                           jne 0x400aaf0	      6833	ldlang.c	FUNCTION_151	IF_1
0x400ab30	      0xe97ef3ffff	                           jmp 0x4009eb3	      6833	ldlang.c	FUNCTION_151	IF_1
0x400ab35	        0x836020f7	      and dword [rax + 0x20], 0xfffffff7	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400ab39	     0xfb62d000000	           movzx ebp, byte [0x0400ab40] 	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400ab40	          0x83e503	                              and ebp, 3	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400ab43	      0xe906f5ffff	                           jmp 0x400a04e	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x400ab48	      0xbf00000000	                              mov edi, 0	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400ab4d	      0xe800000000	                          call 0x400ab52	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400ab52	          0x4989c4	                            mov r12, rax	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400ab55	      0xe9c4efffff	                           jmp 0x4009b1e	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x400ab5a	            0x31f6	                            xor esi, esi	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400ab5c	          0x4889df	                            mov rdi, rbx	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400ab5f	          0x4531f6	                          xor r14d, r14d	      6487	ldlang.c	FUNCTION_138	ELSE_1
0x400ab62	      0xe89982ffff	               call sym.unique_section_p	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400ab67	            0x85c0	                           test eax, eax	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400ab69	     0xf8409f8ffff	                            je 0x400a378	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400ab6f	      0xe9fef7ffff	                           jmp 0x400a372	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x400ab74	          0x4889e8	                            mov rax, rbp	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400ab77	            0xeb0d	                           jmp 0x400ab86	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x400ab79	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400ab7d	          0x4885d2	                           test rdx, rdx	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400ab80	     0xf85f8080000	                           jne 0x400b47e	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400ab86	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x400ab8a	          0x4885c0	                           test rax, rax	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x400ab8d	            0x75ea	                           jne 0x400ab79	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x400ab8f	            0x31ff	                            xor edi, edi	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400ab91	      0xba05000000	                              mov edx, 5	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400ab96	      0xbe00000000	                              mov esi, 0	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400ab9b	      0x4c89542408	                mov qword [rsp + 8], r10	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400aba0	      0xe800000000	                          call 0x400aba5	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400aba5	          0x4889c7	                            mov rdi, rax	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400aba8	            0x31c0	                            xor eax, eax	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400abaa	      0xe800000000	                          call 0x400abaf	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400abaf	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      7796	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400abb3	      0x4c8b542408	                mov r10, qword [rsp + 8]	      7796	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400abb8	          0x4885ed	                           test rbp, rbp	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400abbb	     0xf8527f9ffff	                           jne 0x400a4e8	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400abc1	      0xe9b4f9ffff	                           jmp 0x400a57a	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400abc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x400abd0	    0x488b3d000000	            mov rdi, qword [0x0400abd7] 	      4803	ldlang.c	FUNCTION_112	CALL_1
0x400abd7	      0xe800000000	                          call 0x400abdc	      4803	ldlang.c	FUNCTION_112	CALL_1
0x400abdc	          0x8d48ff	                      lea ecx, [rax - 1]	      4804	ldlang.c	FUNCTION_112
0x400abdf	      0xb801000000	                              mov eax, 1	      4804	ldlang.c	FUNCTION_112
0x400abe4	          0x48d3e0	                             shl rax, cl	      4804	ldlang.c	FUNCTION_112
0x400abe7	      0x488d6c00ff	                lea rbp, [rax + rax - 1]	      4804	ldlang.c	FUNCTION_112
0x400abec	    0x488b05000000	            mov rax, qword [0x0400abf3] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400abf3	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400abfa	          0x4885db	                           test rbx, rbx	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400abfd	            0x744b	                            je 0x400ac4a	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400abff	        0xf6432001	               test byte [rbx + 0x20], 1	      4806	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400ac03	            0x7435	                            je 0x400ac3a	      4806	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400ac05	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400ac09	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400ac0d	        0x488d1401	                    lea rdx, [rcx + rax]	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x400ac11	          0x4821ea	                            and rdx, rbp	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400ac14	            0x740c	                            je 0x400ac22	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400ac16	          0x4821e9	                            and rcx, rbp	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400ac19	          0x4839ca	                            cmp rdx, rcx	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400ac1c	     0xf82d8010000	                            jb 0x400adfa	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x400ac22	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      4814	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1
0x400ac26	          0x4801d0	                            add rax, rdx	      4814	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1
0x400ac29	          0x4821e8	                            and rax, rbp	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ac2c	            0x740c	                            je 0x400ac3a	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ac2e	          0x4821ea	                            and rdx, rbp	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ac31	          0x4839d0	                            cmp rax, rdx	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ac34	     0xf828c060000	                            jb 0x400b2c6	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x400ac3a	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400ac3e	          0x4885db	                           test rbx, rbx	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400ac41	            0x75bc	                           jne 0x400abff	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400ac43	    0x488b05000000	            mov rax, qword [0x0400ac4a] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x400ac4a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4821	ldlang.c	FUNCTION_112	IF_4
0x400ac50	          0x83f801	                              cmp eax, 1	      4821	ldlang.c	FUNCTION_112	IF_4
0x400ac53	     0xf867cfbffff	                           jbe 0x400a7d5	      4821	ldlang.c	FUNCTION_112	IF_4
0x400ac59	        0x48c1e004	                              shl rax, 4	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400ac5d	            0x31db	                            xor ebx, ebx	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400ac5f	          0x4889c7	                            mov rdi, rax	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400ac62	      0xe800000000	                          call 0x400ac67	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400ac67	          0x4989c5	                            mov r13, rax	      4825	ldlang.c	FUNCTION_112	CALL_6
0x400ac6a	    0x488b05000000	            mov rax, qword [0x0400ac71] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400ac71	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400ac78	          0x4885c0	                           test rax, rax	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400ac7b	     0xf84280a0000	                            je 0x400b6a9	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400ac81	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac84	          0xf6c201	                              test dl, 1	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac87	            0x742d	                            je 0x400acb6	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac89	    0x81e202040000	                          and edx, 0x402	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac8f	    0x81fa00040000	                          cmp edx, 0x400	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac95	            0x741f	                            je 0x400acb6	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac97	      0x4883783800	               cmp qword [rax + 0x38], 0	      4832	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac9c	            0x7418	                            je 0x400acb6	      4832	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400ac9e	          0x4889da	                            mov rdx, rbx	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400aca1	        0x4883c301	                              add rbx, 1	      4837	ldlang.c	FUNCTION_112	FOR_2
0x400aca5	        0x48c1e204	                              shl rdx, 4	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400aca9	          0x4c01ea	                            add rdx, r13	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400acac	          0x488902	                    mov qword [rdx], rax	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400acaf	    0xc74208000000	                  mov dword [rdx + 8], 0	      4836	ldlang.c	FUNCTION_112	FOR_2
0x400acb6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400acba	          0x4885c0	                           test rax, rax	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400acbd	            0x75c2	                           jne 0x400ac81	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400acbf	        0x4883fb01	                              cmp rbx, 1	      4840	ldlang.c	FUNCTION_112	IF_6
0x400acc3	     0xf86e0090000	                           jbe 0x400b6a9	      4840	ldlang.c	FUNCTION_112	IF_6
0x400acc9	      0xb900000000	                              mov ecx, 0	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400acce	      0xba10000000	                           mov edx, 0x10	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400acd3	          0x4889de	                            mov rsi, rbx	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400acd6	          0x4c89ef	                            mov rdi, r13	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400acd9	          0x4d89ec	                            mov r12, r13	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400acdc	          0x4531f6	                          xor r14d, r14d	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400acdf	      0xe800000000	                          call 0x400ace4	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400ace4	          0x4531c9	                            xor r9d, r9d	      4796	ldlang.c	FUNCTION_112
0x400ace7	          0x4531db	                          xor r11d, r11d	      4797	ldlang.c	FUNCTION_112
0x400acea	            0x31c0	                            xor eax, eax	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400acec	        0x498b2c24	                    mov rbp, qword [r12]	      4852	ldlang.c	FUNCTION_112	FOR_3
0x400acf0	        0xf6452002	               test byte [rbp + 0x20], 2	      4853	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400acf4	            0x7436	                            je 0x400ad2c	      4853	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400acf6	    0x8b0d00000000	            mov ecx, dword [0x0400acfc] 	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400acfc	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400ad00	        0x4c8b7d30	            mov r15, qword [rbp + 0x30] 	      4855	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400ad04	          0x48d3ea	                             shr rdx, cl	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400ad07	          0x4885c0	                           test rax, rax	      4863	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad0a	      0x4d8d5417ff	                lea r10, [r15 + rdx - 1]	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400ad0f	            0x7412	                            je 0x400ad23	      4863	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad11	          0x4d39df	                            cmp r15, r11	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad14	     0xf86be050000	                           jbe 0x400b2d8	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad1a	          0x4d39d9	                             cmp r9, r11	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad1d	     0xf87b5050000	                            ja 0x400b2d8	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad23	          0x4d89d3	                            mov r11, r10	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400ad26	          0x4d89f9	                             mov r9, r15	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad29	          0x4889e8	                            mov rax, rbp	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400ad2c	        0x4983c601	                              add r14, 1	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400ad30	        0x4983c410	                           add r12, 0x10	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400ad34	          0x4939de	                            cmp r14, rbx	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400ad37	            0x75b3	                           jne 0x400acec	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400ad39	      0xba10000000	                           mov edx, 0x10	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400ad3e	          0x4889de	                            mov rsi, rbx	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400ad41	          0x4c89ef	                            mov rdi, r13	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400ad44	      0xb900000000	                              mov ecx, 0	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400ad49	      0xe800000000	                          call 0x400ad4e	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400ad4e	        0x498b7d00	                    mov rdi, qword [r13]	      4885	ldlang.c	FUNCTION_112
0x400ad52	        0x498d5510	                   lea rdx, [r13 + 0x10]	      4885	ldlang.c	FUNCTION_112
0x400ad56	      0xb801000000	                              mov eax, 1	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400ad5b	        0x4c8b4f28	              mov r9, qword [rdi + 0x28]	      4885	ldlang.c	FUNCTION_112
0x400ad5f	          0x4c89ce	                             mov rsi, r9	      4885	ldlang.c	FUNCTION_112
0x400ad62	            0xeb18	                           jmp 0x400ad7c	      4885	ldlang.c	FUNCTION_112
0x400ad64	         0xf1f4000	                         nop dword [rax]	      4885	ldlang.c	FUNCTION_112
0x400ad68	        0x4883c001	                              add rax, 1	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400ad6c	        0x4883c210	                           add rdx, 0x10	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400ad70	          0x4889ce	                            mov rsi, rcx	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400ad73	          0x4839d8	                            cmp rax, rbx	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400ad76	     0xf8434080000	                            je 0x400b5b0	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400ad7c	          0x488b0a	                    mov rcx, qword [rdx]	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400ad7f	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400ad83	          0x4839f1	                            cmp rcx, rsi	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400ad86	            0x75e0	                           jne 0x400ad68	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400ad88	          0x4c89ef	                            mov rdi, r13	      4919	ldlang.c	FUNCTION_112	CALL_14
0x400ad8b	      0xe800000000	                          call 0x400ad90	      4919	ldlang.c	FUNCTION_112	CALL_14
0x400ad90	    0x488b1d000000	            mov rbx, qword [0x0400ad97] 	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400ad97	          0x4885db	                           test rbx, rbx	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400ad9a	            0x7519	                           jne 0x400adb5	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400ad9c	      0xe934faffff	                           jmp 0x400a7d5	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400ada1	     0xf1f80000000	                         nop dword [rax]	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400ada8	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400adac	          0x4885db	                           test rbx, rbx	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400adaf	     0xf8420faffff	                            je 0x400a7d5	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400adb5	          0x8b7b50	            mov edi, dword [rbx + 0x50] 	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400adb8	            0x85ff	                           test edi, edi	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400adba	            0x74ec	                            je 0x400ada8	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400adbc	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400adc0	        0x48034320	             add rax, qword [rbx + 0x20]	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400adc4	            0x31ff	                            xor edi, edi	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adc6	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400adca	          0x4c8b23	                    mov r12, qword [rbx]	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adcd	    0x41b805000000	                              mov r8d, 5	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400add3	      0xba00000000	                              mov edx, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400add8	      0xbe00000000	                              mov esi, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400addd	          0x4829c5	                            sub rbp, rax	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400ade0	          0x4889e9	                            mov rcx, rbp	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400ade3	      0xe800000000	                          call 0x400ade8	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400ade8	          0x4889ea	                            mov rdx, rbp	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adeb	          0x4889c7	                            mov rdi, rax	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adee	          0x4c89e6	                            mov rsi, r12	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adf1	            0x31c0	                            xor eax, eax	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adf3	      0xe800000000	                          call 0x400adf8	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adf8	            0xebae	                           jmp 0x400ada8	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400adfa	          0x4c8b23	                    mov r12, qword [rbx]	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400adfd	      0xba05000000	                              mov edx, 5	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400ae02	      0xbe00000000	                              mov esi, 0	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x400ae07	            0x31ff	                            xor edi, edi	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400ae09	      0xe800000000	                          call 0x400ae0e	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400ae0e	          0x4c89e6	                            mov rsi, r12	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400ae11	          0x4889c7	                            mov rdi, rax	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400ae14	            0x31c0	                            xor eax, eax	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400ae16	      0xe800000000	                          call 0x400ae1b	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400ae1b	      0xe91afeffff	                           jmp 0x400ac3a	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400ae20	    0x488b05000000	            mov rax, qword [0x0400ae27] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400ae27	          0x4885c0	                           test rax, rax	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400ae2a	     0xf84f3f5ffff	                            je 0x400a423	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400ae30	    0x488b1d000000	            mov rbx, qword [0x0400ae37] 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400ae37	    0x4c8b35000000	            mov r14, qword [0x0400ae3e] 	      6090	ldlang.c	FUNCTION_128	IF_2
0x400ae3e	        0x4c8d2cc3	                  lea r13, [rbx + rax*8]	      6090	ldlang.c	FUNCTION_128	IF_2
0x400ae42	            0xeb1c	                           jmp 0x400ae60	      6090	ldlang.c	FUNCTION_128	IF_2
0x400ae44	    0x41c644241801	                mov byte [r12 + 0x18], 1	      6094	ldlang.c	FUNCTION_128	IF_2
0x400ae4a	    0x49c744242800	               mov qword [r12 + 0x28], 0	      6095	ldlang.c	FUNCTION_128	IF_2
0x400ae53	        0x4883c308	                              add rbx, 8	      6095	ldlang.c	FUNCTION_128	IF_2
0x400ae57	          0x4c39eb	                            cmp rbx, r13	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400ae5a	     0xf84c3f5ffff	                            je 0x400a423	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400ae60	          0x4c8b23	                    mov r12, qword [rbx]	      6074	ldlang.c	FUNCTION_127	CALL_1
0x400ae63	    0x41f644241908	               test byte [r12 + 0x19], 8	      6086	ldlang.c	FUNCTION_128	IF_1
0x400ae69	            0x75e8	                           jne 0x400ae53	      6086	ldlang.c	FUNCTION_128	IF_1
0x400ae6b	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      6089	ldlang.c	FUNCTION_128	IF_2
0x400ae70	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      6089	ldlang.c	FUNCTION_128	IF_2
0x400ae74	          0x4885c0	                           test rax, rax	      6089	ldlang.c	FUNCTION_128	IF_2
0x400ae77	            0x74cb	                            je 0x400ae44	      6089	ldlang.c	FUNCTION_128	IF_2
0x400ae79	    0x4c39b0f00000	            cmp qword [rax + 0xf0], r14 	      6090	ldlang.c	FUNCTION_128	IF_2
0x400ae80	            0x75c2	                           jne 0x400ae44	      6090	ldlang.c	FUNCTION_128	IF_2
0x400ae82	          0x488b30	                    mov rsi, qword [rax]	      6091	ldlang.c	FUNCTION_128	IF_2
0x400ae85	          0x488b3a	                    mov rdi, qword [rdx]	      6091	ldlang.c	FUNCTION_128	IF_2
0x400ae88	      0xe800000000	                          call 0x400ae8d	      6091	ldlang.c	FUNCTION_128	IF_2
0x400ae8d	            0x85c0	                           test eax, eax	      6091	ldlang.c	FUNCTION_128	IF_2
0x400ae8f	            0x75b3	                           jne 0x400ae44	      6091	ldlang.c	FUNCTION_128	IF_2
0x400ae91	            0xebc0	                           jmp 0x400ae53	      6091	ldlang.c	FUNCTION_128	IF_2
0x400ae93	        0xf6454420	           test byte [rbp + 0x44], 0x20 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400ae97	     0xf84d7eeffff	                            je 0x4009d74	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400ae9d	    0x4c8b2d000000	            mov r13, qword [0x0400aea4] 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400aea4	        0x488b5508	                mov rdx, qword [rbp + 8]	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400aea8	        0x498b4508	                mov rax, qword [r13 + 8]	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400aeac	      0xe98deeffff	                           jmp 0x4009d3e	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400aeb1	    0x488b05000000	            mov rax, qword [0x0400aeb8] 	      6038	ldlang.c	FUNCTION_126
0x400aeb8	    0x4c8b25000000	            mov r12, qword [0x0400aebf] 	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400aebf	        0x488b4008	                mov rax, qword [rax + 8]	      6038	ldlang.c	FUNCTION_126
0x400aec3	          0x4d85e4	                           test r12, r12	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400aec6	         0xfb6581c	           movzx ebx, byte [rax + 0x1c] 	      6038	ldlang.c	FUNCTION_126
0x400aeca	     0xf84a1edffff	                            je 0x4009c71	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400aed0	          0x80fb01	                               cmp bl, 1	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400aed3	          0x4819ed	                            sbb rbp, rbp	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400aed6	        0x4883c502	                              add rbp, 2	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400aeda	    0x4d8bac249000	            mov r13, qword [r12 + 0x90] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400aee2	          0x4d85ed	                           test r13, r13	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400aee5	            0x744e	                            je 0x400af35	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400aee7	    0x660f1f840000	                    nop word [rax + rax]	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400aef0	        0x4d8b7d00	                    mov r15, qword [r13]	      6044	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400aef4	        0x410fb607	                   movzx eax, byte [r15]	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400aef8	            0x84c0	                             test al, al	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400aefa	            0x7454	                            je 0x400af50	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400aefc	           0xfb6d0	                           movzx edx, al	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400aeff	    0xf68412000000	            test byte [rdx + rdx], 0x8c 	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af07	            0x7504	                           jne 0x400af0d	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af09	            0x3c5f	                            cmp al, 0x5f	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af0b	            0x751f	                           jne 0x400af2c	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af0d	          0x4c89fa	                            mov rdx, r15	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af10	        0x4883c201	                              add rdx, 1	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400af14	           0xfb602	                   movzx eax, byte [rdx]	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400af17	            0x84c0	                             test al, al	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400af19	            0x7435	                            je 0x400af50	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x400af1b	           0xfb6c8	                           movzx ecx, al	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af1e	    0xf68409000000	            test byte [rcx + rcx], 0x8c 	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af26	            0x75e8	                           jne 0x400af10	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af28	            0x3c5f	                            cmp al, 0x5f	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af2a	            0x74e4	                            je 0x400af10	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x400af2c	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400af30	          0x4d85ed	                           test r13, r13	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400af33	            0x75bb	                           jne 0x400aef0	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400af35	    0x4d8ba424f000	            mov r12, qword [r12 + 0xf0] 	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400af3d	          0x4d85e4	                           test r12, r12	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400af40	            0x7598	                           jne 0x400aeda	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400af42	      0xe92aedffff	                           jmp 0x4009c71	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400af47	    0x660f1f840000	                    nop word [rax + rax]	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400af50	          0x4c89ff	                            mov rdi, r15	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400af53	      0xe800000000	                          call 0x400af58	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400af58	        0x488d780a	                    lea rdi, [rax + 0xa]	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400af5c	      0xe800000000	                          call 0x400af61	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400af61	            0x31ff	                            xor edi, edi	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af63	            0x84db	                             test bl, bl	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af65	          0x4989c6	                            mov r14, rax	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400af68	        0x400f95c7	                               setne dil	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af6c	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af6f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af74	          0x4801c7	                            add rdi, rax	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af77	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af7e	            0x8818	                      mov byte [rax], bl	      6053	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x400af80	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af85	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af87	      0xe800000000	                          call 0x400af8c	        33	stdio2.h	FUNCTION_240	CALL_1
0x400af8c	          0x4c89ee	                            mov rsi, r13	      6055	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_4
0x400af8f	          0x4c89f7	                            mov rdi, r14	      6055	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_4
0x400af92	      0xe8995dffff	         call sym.lang_define_start_stop	      6055	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_4
0x400af97	        0x498d042e	                    lea rax, [r14 + rbp]	        53	string3.h	FUNCTION_228	CALL_3
0x400af9b	      0xba6f700000	                         mov edx, 0x706f	        53	string3.h	FUNCTION_228	CALL_3
0x400afa0	        0x498d7e01	                      lea rdi, [r14 + 1]	      6059	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_6
0x400afa4	        0x41885e01	                  mov byte [r14 + 1], bl	      6057	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x400afa8	          0x4c89ee	                            mov rsi, r13	      6059	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_6
0x400afab	    0xc7005f5f7374	            mov dword [rax], 0x74735f5f 	        53	string3.h	FUNCTION_228	CALL_3
0x400afb1	        0x66895004	                  mov word [rax + 4], dx	        53	string3.h	FUNCTION_228	CALL_3
0x400afb5	      0xe8765dffff	         call sym.lang_define_start_stop	      6059	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_6
0x400afba	          0x4c89f7	                            mov rdi, r14	      6061	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_7
0x400afbd	      0xe800000000	                          call 0x400afc2	      6061	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_7
0x400afc2	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400afc6	          0x4d85ed	                           test r13, r13	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400afc9	     0xf8521ffffff	                           jne 0x400aef0	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400afcf	      0xe961ffffff	                           jmp 0x400af35	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x400afd4	    0x488b05000000	            mov rax, qword [0x0400afdb] 	      7193	ldlang.c	FUNCTION_163	IF_3
0x400afdb	        0x488b5008	                mov rdx, qword [rax + 8]	      7193	ldlang.c	FUNCTION_163	IF_3
0x400afdf	          0x488b00	                    mov rax, qword [rax]	      7193	ldlang.c	FUNCTION_163	IF_3
0x400afe2	      0x4889542438	             mov qword [rsp + 0x38], rdx	      7193	ldlang.c	FUNCTION_163	IF_3
0x400afe7	      0x4889442430	             mov qword [rsp + 0x30], rax	      7193	ldlang.c	FUNCTION_163	IF_3
0x400afec	    0x488b15000000	            mov rdx, qword [0x0400aff3] 	      7195	ldlang.c	FUNCTION_163	IF_3
0x400aff3	    0x488b05000000	            mov rax, qword [0x0400affa] 	      7195	ldlang.c	FUNCTION_163	IF_3
0x400affa	      0x4889542448	             mov qword [rsp + 0x48], rdx	      7195	ldlang.c	FUNCTION_163	IF_3
0x400afff	      0x4889442440	             mov qword [rsp + 0x40], rax	      7195	ldlang.c	FUNCTION_163	IF_3
0x400b004	    0x488b15000000	            mov rdx, qword [0x0400b00b] 	      7196	ldlang.c	FUNCTION_163	IF_3
0x400b00b	    0x488b05000000	            mov rax, qword [0x0400b012] 	      7196	ldlang.c	FUNCTION_163	IF_3
0x400b012	      0x4889542458	             mov qword [rsp + 0x58], rdx	      7196	ldlang.c	FUNCTION_163	IF_3
0x400b017	      0x4889442450	             mov qword [rsp + 0x50], rax	      7196	ldlang.c	FUNCTION_163	IF_3
0x400b01c	      0xe800000000	                          call 0x400b021	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x400b021	            0x85c0	                           test eax, eax	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x400b023	     0xf85e7060000	                           jne 0x400b710	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x400b029	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x400b02e	            0x31f6	                            xor esi, esi	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x400b030	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      7206	ldlang.c	FUNCTION_163	IF_3	CALL_17
0x400b035	          0x488b38	                    mov rdi, qword [rax]	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x400b038	      0xe8c3c3ffff	                call sym.open_input_bfds	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x400b03d	    0x488b3d000000	            mov rdi, qword [0x0400b044] 	      7203	ldlang.c	FUNCTION_163	IF_3	CALL_15
0x400b044	      0x488d742430	                   lea rsi, [rsp + 0x30]	      7203	ldlang.c	FUNCTION_163	IF_3	CALL_15
0x400b049	      0xe89251ffff	          call sym.lang_list_remove_tail	      7203	ldlang.c	FUNCTION_163	IF_3	CALL_15
0x400b04e	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7205	ldlang.c	FUNCTION_163	IF_3	CALL_16
0x400b053	      0xbf00000000	                              mov edi, 0	      7205	ldlang.c	FUNCTION_163	IF_3	CALL_16
0x400b058	      0xe88351ffff	          call sym.lang_list_remove_tail	      7205	ldlang.c	FUNCTION_163	IF_3	CALL_16
0x400b05d	          0x4889de	                            mov rsi, rbx	      7206	ldlang.c	FUNCTION_163	IF_3	CALL_17
0x400b060	      0xbf00000000	                              mov edi, 0	      7206	ldlang.c	FUNCTION_163	IF_3	CALL_17
0x400b065	      0xe87651ffff	          call sym.lang_list_remove_tail	      7206	ldlang.c	FUNCTION_163	IF_3	CALL_17
0x400b06a	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      7208	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b070	     0xf84e0e8ffff	                            je 0x4009956	      7208	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b076	    0x488b05000000	            mov rax, qword [0x0400b07d] 	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400b07d	    0x488b0d000000	            mov rcx, qword [0x0400b084] 	      6999	ldlang.c	FUNCTION_156
0x400b084	          0x4885c0	                           test rax, rax	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400b087	            0x7529	                           jne 0x400b0b2	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400b089	      0xe9ec040000	                           jmp 0x400b57a	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400b08e	            0x6690	                                     nop	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400b090	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400b094	          0x4885d2	                           test rdx, rdx	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400b097	            0x740c	                            je 0x400b0a5	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400b099	    0x4883bad00000	               cmp qword [rdx + 0xd0], 0	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400b0a1	        0x480f44c8	                          cmove rcx, rax	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x400b0a5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7002	ldlang.c	FUNCTION_156	FOR_1
0x400b0a9	          0x4885c0	                           test rax, rax	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400b0ac	     0xf84c8040000	                            je 0x400b57a	      7000	ldlang.c	FUNCTION_156	FOR_1
0x400b0b2	         0xfb65049	           movzx edx, byte [rax + 0x49] 	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400b0b6	          0xf6c220	                           test dl, 0x20	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400b0b9	            0x74d5	                            je 0x400b090	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400b0bb	          0x83e240	                           and edx, 0x40	      7005	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400b0be	     0xf85b6040000	                           jne 0x400b57a	      7005	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400b0c4	    0x488905000000	            mov qword [0x0400b0cb], rax 	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400b0cb	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      7071	ldlang.c	FUNCTION_158
0x400b0d0	          0x488b30	                    mov rsi, qword [rax]	      7071	ldlang.c	FUNCTION_158
0x400b0d3	    0x488b15000000	            mov rdx, qword [0x0400b0da] 	      7219	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_20
0x400b0da	          0x488931	                    mov qword [rcx], rsi	      7071	ldlang.c	FUNCTION_158
0x400b0dd	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      7072	ldlang.c	FUNCTION_158
0x400b0e2	          0x488908	                    mov qword [rax], rcx	      7072	ldlang.c	FUNCTION_158
0x400b0e5	        0x483b4208	                cmp rax, qword [rdx + 8]	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b0e9	     0xf849c060000	                            je 0x400b78b	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b0ef	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      7071	ldlang.c	FUNCTION_158
0x400b0f4	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      7071	ldlang.c	FUNCTION_158
0x400b0f8	          0x48890a	                    mov qword [rdx], rcx	      7071	ldlang.c	FUNCTION_158
0x400b0fb	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      7072	ldlang.c	FUNCTION_158
0x400b100	        0x48895038	             mov qword [rax + 0x38], rdx	      7072	ldlang.c	FUNCTION_158
0x400b104	        0x488d5038	                   lea rdx, [rax + 0x38]	      7223	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b108	    0x483915000000	            cmp qword [0x0400b10f], rdx 	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b10f	     0xf8484060000	                            je 0x400b799	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b115	      0x4883781000	               cmp qword [rax + 0x10], 0	      7227	ldlang.c	FUNCTION_163	IF_3	IF_5	IF_6
0x400b11a	     0xf842e060000	                            je 0x400b74e	      7227	ldlang.c	FUNCTION_163	IF_3	IF_5	IF_6
0x400b120	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      7071	ldlang.c	FUNCTION_158
0x400b124	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      7071	ldlang.c	FUNCTION_158
0x400b129	        0x4883c030	                           add rax, 0x30	      7228	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_22
0x400b12d	          0x48890a	                    mov qword [rdx], rcx	      7071	ldlang.c	FUNCTION_158
0x400b130	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      7072	ldlang.c	FUNCTION_158
0x400b135	          0x488910	                    mov qword [rax], rdx	      7072	ldlang.c	FUNCTION_158
0x400b138	    0x483905000000	            cmp qword [0x0400b13f], rax 	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b13f	     0xf8435060000	                            je 0x400b77a	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b145	    0x488b05000000	            mov rax, qword [0x0400b14c] 	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b14c	    0x488b15000000	            mov rdx, qword [0x0400b153] 	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b153	      0xbe02000000	                              mov esi, 2	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x400b158	    0x488b3d000000	            mov rdi, qword [0x0400b15f] 	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x400b15f	    0x830500000000	               add dword [0x0400b166], 1	      7234	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b166	      0x4889442440	             mov qword [rsp + 0x40], rax	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b16b	      0x4889542448	             mov qword [rsp + 0x48], rdx	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x400b170	      0xe88bc2ffff	                call sym.open_input_bfds	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x400b175	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7236	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_25
0x400b17a	      0xbf00000000	                              mov edi, 0	      7236	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_25
0x400b17f	      0xe85c50ffff	          call sym.lang_list_remove_tail	      7236	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_25
0x400b184	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      7236	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_25
0x400b189	          0x4d85c9	                             test r9, r9	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b18c	     0xf84c4e7ffff	                            je 0x4009956	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b192	        0x498b7920	              mov rdi, qword [r9 + 0x20]	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b196	    0x488b05000000	            mov rax, qword [0x0400b19d] 	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b19d	    0x4c8b87d00000	              mov r8, qword [rdi + 0xd0]	      7028	ldlang.c	FUNCTION_157	IF_1
0x400b1a4	          0x4d85c0	                             test r8, r8	      7028	ldlang.c	FUNCTION_157	IF_1
0x400b1a7	        0x490f45f8	                          cmovne rdi, r8	      7028	ldlang.c	FUNCTION_157	IF_1
0x400b1ab	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1ae	     0xf8474030000	                            je 0x400b528	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1b4	            0x31c9	                            xor ecx, ecx	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1b6	            0x31f6	                            xor esi, esi	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1b8	            0xeb1d	                           jmp 0x400b1d7	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1ba	    0x660f1f440000	                    nop word [rax + rax]	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1c0	          0x4885d2	                           test rdx, rdx	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400b1c3	            0x7409	                            je 0x400b1ce	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400b1c5	      0x4883783000	               cmp qword [rax + 0x30], 0	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400b1ca	        0x480f45c8	                         cmovne rcx, rax	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x400b1ce	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7040	ldlang.c	FUNCTION_157	FOR_1
0x400b1d2	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1d5	            0x7422	                            je 0x400b1f9	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1d7	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x400b1db	          0x4839fa	                            cmp rdx, rdi	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x400b1de	            0x75e0	                           jne 0x400b1c0	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x400b1e0	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400b1e4	          0x4885d2	                           test rdx, rdx	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400b1e7	     0xf852e030000	                           jne 0x400b51b	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400b1ed	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7040	ldlang.c	FUNCTION_157	FOR_1
0x400b1f1	          0x4889ce	                            mov rsi, rcx	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400b1f4	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1f7	            0x75de	                           jne 0x400b1d7	      7038	ldlang.c	FUNCTION_157	FOR_1
0x400b1f9	          0x4885f6	                           test rsi, rsi	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b1fc	     0xf8426030000	                            je 0x400b528	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b202	        0x488d5630	                   lea rdx, [rsi + 0x30]	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b206	          0x488b02	                    mov rax, qword [rdx]	      7053	ldlang.c	FUNCTION_157	FOR_2
0x400b209	          0x4885c0	                           test rax, rax	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b20c	            0x7427	                            je 0x400b235	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b20e	            0x6690	                                     nop	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b210	        0xf6404940	           test byte [rax + 0x49], 0x40 	      7055	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400b214	            0x7512	                           jne 0x400b228	      7055	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400b216	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400b21a	    0x4883b9d00000	               cmp qword [rcx + 0xd0], 0	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400b222	     0xf84c8020000	                            je 0x400b4f0	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400b228	        0x488d5030	                   lea rdx, [rax + 0x30]	      7054	ldlang.c	FUNCTION_157	FOR_2
0x400b22c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7053	ldlang.c	FUNCTION_157	FOR_2
0x400b230	          0x4885c0	                           test rax, rax	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b233	            0x75db	                           jne 0x400b210	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b235	          0x4889d1	                            mov rcx, rdx	      7054	ldlang.c	FUNCTION_157	FOR_2
0x400b238	          0x4d85c0	                             test r8, r8	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x400b23b	        0x498d7930	                    lea rdi, [r9 + 0x30]	      7245	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b23f	     0xf84be020000	                            je 0x400b503	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x400b245	        0x498b5130	              mov rdx, qword [r9 + 0x30]	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400b249	          0x4885d2	                           test rdx, rdx	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400b24c	            0x742c	                            je 0x400b27a	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400b24e	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b252	    0x4c3b86d00000	              cmp r8, qword [rsi + 0xd0]	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b259	            0x7412	                            je 0x400b26d	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b25b	            0xeb1d	                           jmp 0x400b27a	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b25d	           0xf1f00	                         nop dword [rax]	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b260	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b264	    0x4c3986d00000	              cmp qword [rsi + 0xd0], r8	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b26b	            0x750d	                           jne 0x400b27a	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x400b26d	        0x488d7a30	                   lea rdi, [rdx + 0x30]	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400b271	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400b275	          0x4885d2	                           test rdx, rdx	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400b278	            0x75e6	                           jne 0x400b260	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400b27a	          0x4c8909	                     mov qword [rcx], r9	      7252	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b27d	          0x488b17	                    mov rdx, qword [rdi]	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b280	      0x4889542440	             mov qword [rsp + 0x40], rdx	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b285	          0x488907	                    mov qword [rdi], rax	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b288	    0x498b80000100	            mov rax, qword [r8 + 0x100] 	      7257	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9
0x400b28f	          0x4885c0	                           test rax, rax	      7258	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400b292	            0x7408	                            je 0x400b29c	      7258	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400b294	        0x4883ef30	                           sub rdi, 0x30	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400b298	        0x48897830	             mov qword [rax + 0x30], rdi	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400b29c	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400b2a1	      0xe9e3feffff	                           jmp 0x400b189	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x400b2a6	            0x31ff	                            xor edi, edi	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2a8	      0xba05000000	                              mov edx, 5	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2ad	      0xbe00000000	                              mov esi, 0	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2b2	      0xe800000000	                          call 0x400b2b7	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2b7	          0x4889c7	                            mov rdi, rax	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2ba	            0x31c0	                            xor eax, eax	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2bc	      0xe800000000	                          call 0x400b2c1	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2c1	      0xe960e6ffff	                           jmp 0x4009926	      7174	ldlang.c	FUNCTION_163	CALL_8
0x400b2c6	          0x4c8b23	                    mov r12, qword [rbx]	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400b2c9	      0xba05000000	                              mov edx, 5	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400b2ce	      0xbe00000000	                              mov esi, 0	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400b2d3	      0xe92ffbffff	                           jmp 0x400ae07	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x400b2d8	          0x4c8b00	                     mov r8, qword [rax]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2db	        0x488b4500	                    mov rax, qword [rbp]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2df	      0xba05000000	                              mov edx, 5	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2e4	      0xbe00000000	                              mov esi, 0	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2e9	            0x31ff	                            xor edi, edi	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2eb	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2f0	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2f5	      0x4c89542418	             mov qword [rsp + 0x18], r10	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2fa	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b2ff	      0x4889442408	                mov qword [rsp + 8], rax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b304	      0xe800000000	                          call 0x400b309	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b309	        0x4883ec08	                              sub rsp, 8	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b30d	          0x4c89fa	                            mov rdx, r15	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b310	          0x4889c7	                            mov rdi, rax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b313	      0x4c8b5c2430	            mov r11, qword [rsp + 0x30] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b318	            0x31c0	                            xor eax, eax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b31a	            0x4153	                                push r11	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b31c	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b321	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b326	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b32b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b330	          0x4c89d1	                            mov rcx, r10	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b333	      0x4c89542420	             mov qword [rsp + 0x20], r10	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b338	      0xe800000000	                          call 0x400b33d	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400b33d	    0x41c744240801	                  mov dword [r12 + 8], 1	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400b346	          0x4d89f9	                             mov r9, r15	      4855	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400b349	              0x58	                                 pop rax	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400b34a	              0x5a	                                 pop rdx	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400b34b	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400b350	          0x4889e8	                            mov rax, rbp	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400b353	          0x4d89d3	                            mov r11, r10	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400b356	      0xe9d1f9ffff	                           jmp 0x400ad2c	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400b35b	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6200	ldlang.c	FUNCTION_133	IF_4
0x400b35f	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      6200	ldlang.c	FUNCTION_133	IF_4
0x400b363	          0x4885c9	                           test rcx, rcx	      6200	ldlang.c	FUNCTION_133	IF_4
0x400b366	     0xf8438f5ffff	                            je 0x400a8a4	      6200	ldlang.c	FUNCTION_133	IF_4
0x400b36c	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400b370	        0x48037030	             add rsi, qword [rax + 0x30]	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400b374	        0x48037260	             add rsi, qword [rdx + 0x60]	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400b378	    0x488b3d000000	            mov rdi, qword [0x0400b37f] 	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400b37f	      0xe800000000	                          call 0x400b384	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400b384	            0x85c0	                           test eax, eax	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400b386	     0xf85a0f5ffff	                           jne 0x400a92c	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400b38c	    0x488b1d000000	            mov rbx, qword [0x0400b393] 	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400b393	      0xba05000000	                              mov edx, 5	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400b398	      0xbe00000000	                              mov esi, 0	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400b39d	            0x31ff	                            xor edi, edi	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b39f	      0xe800000000	                          call 0x400b3a4	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b3a4	          0x4889de	                            mov rsi, rbx	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b3a7	          0x4889c7	                            mov rdi, rax	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b3aa	            0x31c0	                            xor eax, eax	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b3ac	      0xe800000000	                          call 0x400b3b1	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b3b1	      0xe976f5ffff	                           jmp 0x400a92c	      7425	ldlang.c	FUNCTION_163
0x400b3b6	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7425	ldlang.c	FUNCTION_163
0x400b3ba	          0x4885d2	                           test rdx, rdx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b3bd	            0x742c	                            je 0x400b3eb	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b3bf	    0x448baa840000	           mov r13d, dword [rdx + 0x84] 	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400b3c6	          0x4585ed	                         test r13d, r13d	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400b3c9	            0x7817	                            js 0x400b3e2	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x400b3cb	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b3cf	          0x4885ff	                           test rdi, rdi	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b3d2	            0x740e	                            je 0x400b3e2	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b3d4	    0x4883bff00000	               cmp qword [rdi + 0xf0], 0	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b3dc	     0xf85c4edffff	                           jne 0x400a1a6	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x400b3e2	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b3e6	          0x4885d2	                           test rdx, rdx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b3e9	            0x75d4	                           jne 0x400b3bf	      1733	ldlang.c	FUNCTION_48	FOR_1
0x400b3eb	            0x31db	                            xor ebx, ebx	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400b3ed	      0xe904eeffff	                           jmp 0x400a1f6	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400b3f2	      0x498d542420	                   lea rdx, [r12 + 0x20]	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400b3f7	    0x488915000000	            mov qword [0x0400b3fe], rdx 	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400b3fe	      0xe935edffff	                           jmp 0x400a138	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400b403	        0x4883c220	                           add rdx, 0x20	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400b407	    0x488915000000	            mov qword [0x0400b40e], rdx 	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400b40e	      0xe90bedffff	                           jmp 0x400a11e	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400b413	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b41a	            0x31ff	                            xor edi, edi	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b41c	      0xba05000000	                              mov edx, 5	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b421	      0xbe00000000	                              mov esi, 0	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b426	      0xe800000000	                          call 0x400b42b	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b42b	          0x4c89ea	                            mov rdx, r13	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b42e	          0x4889c7	                            mov rdi, rax	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b431	          0x4889de	                            mov rsi, rbx	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b434	            0x31c0	                            xor eax, eax	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b436	      0xe800000000	                          call 0x400b43b	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b43b	      0xe922efffff	                           jmp 0x400a362	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x400b440	    0x4c8935000000	            mov qword [0x0400b447], r14 	      3864	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400b447	      0xe9d4edffff	                           jmp 0x400a220	      3864	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x400b44c	            0x31f6	                            xor esi, esi	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400b44e	      0xba01000000	                              mov edx, 1	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400b453	      0xbf00000000	                              mov edi, 0	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400b458	      0xe800000000	                          call 0x400b45d	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400b45d	      0x4883785800	               cmp qword [rax + 0x58], 0	      6477	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400b462	          0x4989c4	                            mov r12, rax	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400b465	            0x7461	                            je 0x400b4c8	      6477	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400b467	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400b46c	          0x4c89e1	                            mov rcx, r12	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400b46f	            0x31d2	                            xor edx, edx	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400b471	          0x4889de	                            mov rsi, rbx	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400b474	      0xe800000000	                          call 0x400b479	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400b479	      0xe922eeffff	                           jmp 0x400a2a0	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400b47e	          0x4989d2	                            mov r10, rdx	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400b481	      0xe903f5ffff	                           jmp 0x400a989	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x400b486	    0x488b3d000000	            mov rdi, qword [0x0400b48d] 	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400b48d	            0x31d2	                            xor edx, edx	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400b48f	      0xbe00000000	                              mov esi, 0	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400b494	      0xe800000000	                          call 0x400b499	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400b499	      0xe9f5e9ffff	                           jmp 0x4009e93	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400b49e	    0x4c8b0d000000	              mov r9, qword [0x0400b4a5]	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x400b4a5	          0x4d85c0	                             test r8, r8	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400b4a8	    0x4d8981900000	               mov qword [r9 + 0x90], r8	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x400b4af	     0xf851aedffff	                           jne 0x400a1cf	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400b4b5	    0x4c8b05000000	              mov r8, qword [0x0400b4bc]	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x400b4bc	    0x498990980000	              mov qword [r8 + 0x98], rdx	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x400b4c3	      0xe90bedffff	                           jmp 0x400a1d3	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x400b4c8	     0xfb605000000	           movzx eax, byte [0x0400b4cf] 	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400b4cf	          0x83e003	                              and eax, 3	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400b4d2	            0x3c02	                               cmp al, 2	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400b4d4	            0x7406	                            je 0x400b4dc	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400b4d6	        0xf6432003	               test byte [rbx + 0x20], 3	      6479	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400b4da	            0x758b	                           jne 0x400b467	      6479	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400b4dc	            0x31ff	                            xor edi, edi	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400b4de	      0xe800000000	                          call 0x400b4e3	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400b4e3	      0x4989442458	             mov qword [r12 + 0x58], rax	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400b4e8	      0xe97affffff	                           jmp 0x400b467	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400b4ed	           0xf1f00	                         nop dword [rax]	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400b4f0	          0x4d85c0	                             test r8, r8	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x400b4f3	          0x488b02	                    mov rax, qword [rdx]	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x400b4f6	          0x4889d1	                            mov rcx, rdx	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x400b4f9	        0x498d7930	                    lea rdi, [r9 + 0x30]	      7245	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b4fd	     0xf8542fdffff	                           jne 0x400b245	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x400b503	          0x4c8909	                     mov qword [rcx], r9	      7252	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b506	        0x498b5130	              mov rdx, qword [r9 + 0x30]	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b50a	        0x49894130	              mov qword [r9 + 0x30], rax	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b50e	      0x4889542440	             mov qword [rsp + 0x40], rdx	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b513	          0x4989d1	                             mov r9, rdx	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b516	      0xe96efcffff	                           jmp 0x400b189	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400b51b	        0x488d4a30	                   lea rcx, [rdx + 0x30]	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400b51f	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400b523	      0xe910fdffff	                           jmp 0x400b238	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x400b528	    0x488b05000000	            mov rax, qword [0x0400b52f] 	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b52f	        0x488d5030	                   lea rdx, [rax + 0x30]	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b533	      0xe9cefcffff	                           jmp 0x400b206	      7052	ldlang.c	FUNCTION_157	FOR_2
0x400b538	    0x488b1d000000	            mov rbx, qword [0x0400b53f] 	      7286	ldlang.c	FUNCTION_163	IF_11	CALL_28
0x400b53f	    0x488b05000000	            mov rax, qword [0x0400b546] 	      7276	ldlang.c	FUNCTION_163	IF_11
0x400b546	          0x4885db	                           test rbx, rbx	      7102	ldlang.c	FUNCTION_160	IF_1
0x400b549	    0x488905000000	            mov qword [0x0400b550], rax 	      7276	ldlang.c	FUNCTION_163	IF_11
0x400b550	     0xf8432e4ffff	                            je 0x4009988	      7102	ldlang.c	FUNCTION_160	IF_1
0x400b556	      0xbf10000000	                           mov edi, 0x10	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400b55b	      0xe800000000	                          call 0x400b560	      7105	ldlang.c	FUNCTION_160	CALL_1
0x400b560	    0x488b15000000	            mov rdx, qword [0x0400b567] 	      7107	ldlang.c	FUNCTION_160
0x400b567	        0x48895808	                mov qword [rax + 8], rbx	      7108	ldlang.c	FUNCTION_160
0x400b56b	          0x488910	                    mov qword [rax], rdx	      7107	ldlang.c	FUNCTION_160
0x400b56e	    0x488905000000	            mov qword [0x0400b575], rax 	      7109	ldlang.c	FUNCTION_160
0x400b575	      0xe90ee4ffff	                           jmp 0x4009988	      7109	ldlang.c	FUNCTION_160
0x400b57a	          0x4885c9	                           test rcx, rcx	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b57d	    0x48890d000000	            mov qword [0x0400b584], rcx 	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400b584	          0x4889c8	                            mov rax, rcx	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400b587	     0xf853efbffff	                           jne 0x400b0cb	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b58d	      0xbe311c0000	                         mov esi, 0x1c31	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b592	      0xbf00000000	                              mov edi, 0	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b597	      0xe800000000	                          call 0x400b59c	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b59c	    0x488b05000000	            mov rax, qword [0x0400b5a3] 	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b5a3	      0xe923fbffff	                           jmp 0x400b0cb	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b5a8	     0xf1f84000000	                   nop dword [rax + rax]	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x400b5b0	    0x8b0d00000000	            mov ecx, dword [0x0400b5b6] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5b6	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5ba	        0x498d6d18	                   lea rbp, [r13 + 0x18]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5be	          0x4531d2	                          xor r10d, r10d	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5c1	          0x48d3e8	                             shr rax, cl	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5c4	      0x4d8d5c01ff	                 lea r11, [r9 + rax - 1]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5c9	            0xeb3a	                           jmp 0x400b605	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5cb	        0x4c8b65f8	                mov r12, qword [rbp - 8]	      4902	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5cf	    0x8b0d00000000	            mov ecx, dword [0x0400b5d5] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5d5	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5da	      0x4d8b742428	            mov r14, qword [r12 + 0x28] 	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5df	          0x48d3e8	                             shr rax, cl	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5e2	      0x4d8d7c06ff	                lea r15, [r14 + rax - 1]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5e7	          0x8b4500	                    mov eax, dword [rbp]	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5ea	            0x85c0	                           test eax, eax	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5ec	            0x750a	                           jne 0x400b5f8	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5ee	          0x4d39f3	                            cmp r11, r14	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5f1	            0x7320	                           jae 0x400b613	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5f3	          0x4d39cb	                             cmp r11, r9	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5f6	            0x721b	                            jb 0x400b613	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5f8	        0x4883c510	                           add rbp, 0x10	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400b5fc	          0x4d89fb	                            mov r11, r15	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b5ff	          0x4d89f1	                             mov r9, r14	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b602	          0x4c89e7	                            mov rdi, r12	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b605	        0x4983c201	                              add r10, 1	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b609	          0x4939da	                            cmp r10, rbx	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b60c	            0x75bd	                           jne 0x400b5cb	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b60e	      0xe975f7ffff	                           jmp 0x400ad88	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400b613	          0x4c8b07	                     mov r8, qword [rdi]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b616	        0x498b0424	                    mov rax, qword [r12]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b61a	      0xba05000000	                              mov edx, 5	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b61f	      0xbe00000000	                              mov esi, 0	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b624	            0x31ff	                            xor edi, edi	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b626	      0x4c89542428	             mov qword [rsp + 0x28], r10	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b62b	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b630	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b635	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b63a	      0x4889442408	                mov qword [rsp + 8], rax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b63f	      0xe800000000	                          call 0x400b644	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b644	        0x4883ec08	                              sub rsp, 8	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b648	          0x4889c7	                            mov rdi, rax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b64b	          0x4c89f9	                            mov rcx, r15	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b64e	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b653	          0x4c89f2	                            mov rdx, r14	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b656	            0x31c0	                            xor eax, eax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b658	            0x4153	                                push r11	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b65a	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b65f	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b664	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b669	      0xe800000000	                          call 0x400b66e	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b66e	            0x4158	                                  pop r8	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b670	            0x4159	                                  pop r9	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b672	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b677	      0xe97cffffff	                           jmp 0x400b5f8	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b67c	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400b681	    0xc74424500400	               mov dword [rsp + 0x50], 4	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400b689	    0x488b3d000000	            mov rdi, qword [0x0400b690] 	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400b690	          0x4889da	                            mov rdx, rbx	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400b693	      0xbe00000000	                              mov esi, 0	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400b698	      0xe800000000	                          call 0x400b69d	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400b69d	      0x836c245001	               sub dword [rsp + 0x50], 1	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400b6a2	            0x75e5	                           jne 0x400b689	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400b6a4	      0xe9d6e7ffff	                           jmp 0x4009e7f	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400b6a9	          0x4c89ef	                            mov rdi, r13	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400b6ac	      0xe800000000	                          call 0x400b6b1	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400b6b1	      0xe91ff1ffff	                           jmp 0x400a7d5	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400b6b6	      0xba01000000	                              mov edx, 1	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400b6bb	          0x4489f6	                           mov esi, r14d	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400b6be	          0x4c89e7	                            mov rdi, r12	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400b6c1	      0xe800000000	                          call 0x400b6c6	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400b6c6	      0x4883785800	               cmp qword [rax + 0x58], 0	      6500	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400b6cb	          0x4989c5	                            mov r13, rax	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x400b6ce	     0xf84db000000	                            je 0x400b7af	      6500	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400b6d4	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400b6d8	          0x4c89e9	                            mov rcx, r13	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400b6db	            0x31d2	                            xor edx, edx	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400b6dd	          0x4889de	                            mov rsi, rbx	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400b6e0	      0xe800000000	                          call 0x400b6e5	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400b6e5	      0xe9a8ecffff	                           jmp 0x400a392	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x400b6ea	            0x85db	                           test ebx, ebx	      6245	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11
0x400b6ec	     0xf843af2ffff	                            je 0x400a92c	      6245	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11
0x400b6f2	    0x488b1d000000	            mov rbx, qword [0x0400b6f9] 	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b6f9	      0xba05000000	                              mov edx, 5	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b6fe	      0xbe00000000	                              mov esi, 0	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b703	      0xe995fcffff	                           jmp 0x400b39d	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b708	     0xf1f84000000	                   nop dword [rax + rax]	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400b710	      0xe800000000	                          call 0x400b715	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b715	            0x31ff	                            xor edi, edi	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b717	          0x4889c3	                            mov rbx, rax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b71a	      0xba05000000	                              mov edx, 5	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b71f	      0xbe00000000	                              mov esi, 0	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b724	      0xe800000000	                          call 0x400b729	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b729	          0x4889de	                            mov rsi, rbx	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b72c	          0x4889c7	                            mov rdi, rax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b72f	            0x31c0	                            xor eax, eax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b731	      0xe800000000	                          call 0x400b736	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b736	      0xe9eef8ffff	                           jmp 0x400b029	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x400b73b	    0x488b15000000	            mov rdx, qword [0x0400b742] 	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x400b742	    0x48898a980000	             mov qword [rdx + 0x98], rcx	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x400b749	      0xe99eeaffff	                           jmp 0x400a1ec	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x400b74e	    0x488b15000000	            mov rdx, qword [0x0400b755] 	      7071	ldlang.c	FUNCTION_158
0x400b755	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7071	ldlang.c	FUNCTION_158
0x400b75a	          0x488910	                    mov qword [rax], rdx	      7071	ldlang.c	FUNCTION_158
0x400b75d	    0x48813d000000	               cmp qword [0x0400b768], 0	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b768	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7072	ldlang.c	FUNCTION_158
0x400b76d	    0x488905000000	            mov qword [0x0400b774], rax 	      7072	ldlang.c	FUNCTION_158
0x400b774	     0xf85cbf9ffff	                           jne 0x400b145	      7073	ldlang.c	FUNCTION_158	IF_1
0x400b77a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b77f	    0x488905000000	            mov qword [0x0400b786], rax 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b786	      0xe9baf9ffff	                           jmp 0x400b145	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b78b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b790	        0x48894a08	                mov qword [rdx + 8], rcx	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b794	      0xe956f9ffff	                           jmp 0x400b0ef	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b799	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b79e	    0x488915000000	            mov qword [0x0400b7a5], rdx 	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b7a5	      0xe96bf9ffff	                           jmp 0x400b115	      7074	ldlang.c	FUNCTION_158	IF_1
0x400b7aa	      0xe800000000	                          call 0x400b7af	      7425	ldlang.c	FUNCTION_163
0x400b7af	     0xfb605000000	           movzx eax, byte [0x0400b7b6] 	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400b7b6	          0x83e003	                              and eax, 3	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400b7b9	            0x3c02	                               cmp al, 2	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400b7bb	            0x740a	                            je 0x400b7c7	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x400b7bd	        0xf6432003	               test byte [rbx + 0x20], 3	      6502	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400b7c1	     0xf850dffffff	                           jne 0x400b6d4	      6502	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x400b7c7	            0x31ff	                            xor edi, edi	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x400b7c9	      0xe800000000	                          call 0x400b7ce	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x400b7ce	        0x49894558	             mov qword [r13 + 0x58], rax	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x400b7d2	      0xe9fdfeffff	                           jmp 0x400b6d4	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
check_input_sections	CALL,3:functions,0:WHILE,0:FOR,1:IF,3:DO,0:SWITCH,1:ELSE,0	49
0x4007000	          0x4885ff	                           test rdi, rdi	      3491	ldlang.c	FUNCTION_84	FOR_1
0x4007003	            0x7448	                            je 0x400704d	      3491	ldlang.c	FUNCTION_84	FOR_1
0x4007005	              0x55	                                push rbp	      3490	ldlang.c	FUNCTION_84
0x4007006	              0x53	                                push rbx	      3490	ldlang.c	FUNCTION_84
0x4007007	          0x4889f5	                            mov rbp, rsi	      3490	ldlang.c	FUNCTION_84
0x400700a	          0x4889fb	                            mov rbx, rdi	      3490	ldlang.c	FUNCTION_84
0x400700d	        0x4883ec08	                              sub rsp, 8	      3490	ldlang.c	FUNCTION_84
0x4007011	            0xeb17	                           jmp 0x400702a	      3490	ldlang.c	FUNCTION_84
0x4007013	       0xf1f440000	                   nop dword [rax + rax]	      3490	ldlang.c	FUNCTION_84
0x4007018	          0x83f80f	                            cmp eax, 0xf	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x400701b	            0x745b	                            je 0x4007078	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x400701d	          0x83f804	                              cmp eax, 4	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4007020	            0x742e	                            je 0x4007050	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4007022	          0x488b1b	                    mov rbx, qword [rbx]	      3491	ldlang.c	FUNCTION_84	FOR_1
0x4007025	          0x4885db	                           test rbx, rbx	      3491	ldlang.c	FUNCTION_84	FOR_1
0x4007028	            0x741d	                            je 0x4007047	      3491	ldlang.c	FUNCTION_84	FOR_1
0x400702a	          0x8b4308	                mov eax, dword [rbx + 8]	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x400702d	          0x83f80d	                            cmp eax, 0xd	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4007030	            0x75e6	                           jne 0x4007018	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4007032	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3508	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_3
0x4007036	          0x4889ee	                            mov rsi, rbp	      3508	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_3
0x4007039	      0xe8c2ffffff	           call sym.check_input_sections	      3508	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_3
0x400703e	    0xf68590000000	               test byte [rbp + 0x90], 4	      3510	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_3
0x4007045	            0x75db	                           jne 0x4007022	      3510	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_3
0x4007047	        0x4883c408	                              add rsp, 8	      3517	ldlang.c	FUNCTION_84
0x400704b	              0x5b	                                 pop rbx	      3517	ldlang.c	FUNCTION_84
0x400704c	              0x5d	                                 pop rbp	      3517	ldlang.c	FUNCTION_84
0x400704d	            0xf3c3	                                     ret	      3517	ldlang.c	FUNCTION_84
0x400704f	              0x90	                                     nop	      3517	ldlang.c	FUNCTION_84
0x4007050	          0x4889ea	                            mov rdx, rbp	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x4007053	      0xbe00000000	                              mov esi, 0	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x4007058	          0x4889df	                            mov rdi, rbx	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x400705b	      0xe880fdffff	                      call sym.walk_wild	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x4007060	    0xf68590000000	               test byte [rbp + 0x90], 4	      3498	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_1
0x4007067	            0x75b9	                           jne 0x4007022	      3498	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_1
0x4007069	        0x4883c408	                              add rsp, 8	      3517	ldlang.c	FUNCTION_84
0x400706d	              0x5b	                                 pop rbx	      3517	ldlang.c	FUNCTION_84
0x400706e	              0x5d	                                 pop rbp	      3517	ldlang.c	FUNCTION_84
0x400706f	            0xebdc	                           jmp 0x400704d	      3517	ldlang.c	FUNCTION_84
0x4007071	     0xf1f80000000	                         nop dword [rax]	      3517	ldlang.c	FUNCTION_84
0x4007078	    0x488b3d000000	            mov rdi, qword [0x0400707f] 	      3502	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_2
0x400707f	          0x4889ee	                            mov rsi, rbp	      3502	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_2
0x4007082	      0xe879ffffff	           call sym.check_input_sections	      3502	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_2
0x4007087	    0xf68590000000	               test byte [rbp + 0x90], 4	      3504	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_2
0x400708e	            0x7592	                           jne 0x4007022	      3504	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_2
0x4007090	        0x4883c408	                              add rsp, 8	      3517	ldlang.c	FUNCTION_84
0x4007094	              0x5b	                                 pop rbx	      3517	ldlang.c	FUNCTION_84
0x4007095	              0x5d	                                 pop rbp	      3517	ldlang.c	FUNCTION_84
0x4007096	            0xebb5	                           jmp 0x400704d	      3517	ldlang.c	FUNCTION_84
lang_add_vers_depend	CALL,3:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,0:ELSE,0	43
0x400b7e0	            0x4154	                                push r12	      8553	ldlang.c	FUNCTION_200
0x400b7e2	              0x55	                                push rbp	      8553	ldlang.c	FUNCTION_200
0x400b7e3	          0x4889f5	                            mov rbp, rsi	      8553	ldlang.c	FUNCTION_200
0x400b7e6	              0x53	                                push rbx	      8553	ldlang.c	FUNCTION_200
0x400b7e7	          0x4889fb	                            mov rbx, rdi	      8553	ldlang.c	FUNCTION_200
0x400b7ea	      0xbf10000000	                           mov edi, 0x10	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400b7ef	      0xe800000000	                          call 0x400b7f4	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400b7f4	          0x488918	                    mov qword [rax], rbx	      8558	ldlang.c	FUNCTION_200
0x400b7f7	    0x488b1d000000	            mov rbx, qword [0x0400b7fe] 	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b7fe	          0x4989c4	                            mov r12, rax	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400b801	          0x4885db	                           test rbx, rbx	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b804	            0x7512	                           jne 0x400b818	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b806	            0xeb30	                           jmp 0x400b838	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b808	     0xf1f84000000	                   nop dword [rax + rax]	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b810	          0x488b1b	                    mov rbx, qword [rbx]	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b813	          0x4885db	                           test rbx, rbx	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b816	            0x7420	                            je 0x400b838	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400b818	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400b81c	          0x4889ee	                            mov rsi, rbp	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400b81f	      0xe800000000	                          call 0x400b824	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400b824	            0x85c0	                           test eax, eax	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400b826	            0x75e8	                           jne 0x400b810	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400b828	      0x49895c2408	                mov qword [r12 + 8], rbx	      8564	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400b82d	          0x4c89e0	                            mov rax, r12	      8573	ldlang.c	FUNCTION_200
0x400b830	              0x5b	                                 pop rbx	      8573	ldlang.c	FUNCTION_200
0x400b831	              0x5d	                                 pop rbp	      8573	ldlang.c	FUNCTION_200
0x400b832	            0x415c	                                 pop r12	      8573	ldlang.c	FUNCTION_200
0x400b834	              0xc3	                                     ret	      8573	ldlang.c	FUNCTION_200
0x400b835	           0xf1f00	                         nop dword [rax]	      8573	ldlang.c	FUNCTION_200
0x400b838	      0xba05000000	                              mov edx, 5	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b83d	      0xbe00000000	                              mov esi, 0	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b842	            0x31ff	                            xor edi, edi	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b844	      0xe800000000	                          call 0x400b849	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b849	          0x4889ee	                            mov rsi, rbp	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b84c	          0x4889c7	                            mov rdi, rax	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b84f	            0x31c0	                            xor eax, eax	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b851	      0xe800000000	                          call 0x400b856	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400b856	          0x4c89e0	                            mov rax, r12	      8573	ldlang.c	FUNCTION_200
0x400b859	    0x49c744240800	                  mov qword [r12 + 8], 0	      8571	ldlang.c	FUNCTION_200
0x400b862	              0x5b	                                 pop rbx	      8573	ldlang.c	FUNCTION_200
0x400b863	              0x5d	                                 pop rbp	      8573	ldlang.c	FUNCTION_200
0x400b864	            0x415c	                                 pop r12	      8573	ldlang.c	FUNCTION_200
0x400b866	              0xc3	                                     ret	      8573	ldlang.c	FUNCTION_200
archive_path	CALL,1:functions,0:WHILE,0:FOR,0:IF,3:DO,0:SWITCH,0:ELSE,0	7
0x4000d10	     0xfbe35000000	           movsx esi, byte [0x04000d17] 	       159	ldlang.c	FUNCTION_3	IF_1
0x4000d17	          0x4084f6	                           test sil, sil	       159	ldlang.c	FUNCTION_3	IF_1
0x4000d1a	            0x740c	                            je 0x4000d28	       159	ldlang.c	FUNCTION_3	IF_1
0x4000d1c	      0xe900000000	                           jmp 0x4000d21	       162	ldlang.c	FUNCTION_3
0x4000d21	     0xf1f80000000	                         nop dword [rax]	       162	ldlang.c	FUNCTION_3
0x4000d28	            0x31c0	                            xor eax, eax	       173	ldlang.c	FUNCTION_3
0x4000d2a	              0xc3	                                     ret	       173	ldlang.c	FUNCTION_3
lang_append_dynamic_list_cpp_typeinfo	CALL,3:functions,0:WHILE,0:FOR,1:IF,0:DO,0:SWITCH,0:ELSE,0	14
0x400b950	        0x4883ec08	                              sub rsp, 8	      8689	ldlang.c	FUNCTION_205
0x400b954	            0x31c9	                            xor ecx, ecx	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b956	      0xba00000000	                              mov edx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b95b	      0xbe00000000	                              mov esi, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b960	            0x31ff	                            xor edi, edi	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b962	      0xe800000000	                          call 0x400b967	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b967	            0x31c9	                            xor ecx, ecx	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b969	          0x4889c7	                            mov rdi, rax	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b96c	      0xba00000000	                              mov edx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b971	      0xbe00000000	                              mov esi, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b976	      0xe800000000	                          call 0x400b97b	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400b97b	        0x4883c408	                              add rsp, 8	      8703	ldlang.c	FUNCTION_205
0x400b97f	          0x4889c7	                            mov rdi, rax	      8702	ldlang.c	FUNCTION_205	CALL_3
0x400b982	      0xe969ffffff	        jmp sym.lang_append_dynamic_list	      8702	ldlang.c	FUNCTION_205	CALL_3
hash_entry_addr_cmp	CALL,0:functions,0:WHILE,0:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,2	9
0x4000120	          0x488b16	                    mov rdx, qword [rsi]	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000123	          0x488b0f	                    mov rcx, qword [rdi]	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000126	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      4155	ldlang.c	FUNCTION_94	IF_1
0x400012a	        0x48394130	            cmp qword [rcx + 0x30], rax 	      4155	ldlang.c	FUNCTION_94	IF_1
0x400012e	      0xbaffffffff	                     mov edx, 0xffffffff	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000133	           0xf97c0	                                 seta al	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000136	           0xfb6c0	                           movzx eax, al	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000139	           0xf42c2	                          cmovb eax, edx	      4156	ldlang.c	FUNCTION_94	IF_1
0x400013c	              0xc3	                                     ret	      4161	ldlang.c	FUNCTION_94	ELSE_2
lang_ld_feature	CALL,5:functions,0:WHILE,3:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,1	59
0x400b9d0	            0x4154	                                push r12	      8730	ldlang.c	FUNCTION_207
0x400b9d2	              0x55	                                push rbp	      8730	ldlang.c	FUNCTION_207
0x400b9d3	          0x4989fc	                            mov r12, rdi	      8730	ldlang.c	FUNCTION_207
0x400b9d6	              0x53	                                push rbx	      8730	ldlang.c	FUNCTION_207
0x400b9d7	           0xfb61f	                   movzx ebx, byte [rdi]	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400b9da	            0x84db	                             test bl, bl	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400b9dc	     0xf8485000000	                            je 0x400ba67	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400b9e2	    0x660f1f440000	                    nop word [rax + rax]	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400b9e8	          0x4c89e5	                            mov rbp, r12	      8730	ldlang.c	FUNCTION_207
0x400b9eb	            0xeb0b	                           jmp 0x400b9f8	      8730	ldlang.c	FUNCTION_207
0x400b9ed	           0xf1f00	                         nop dword [rax]	      8730	ldlang.c	FUNCTION_207
0x400b9f0	        0x4883c501	                              add rbp, 1	      8738	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2
0x400b9f4	         0xfb65d00	                   movzx ebx, byte [rbp]	      8738	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2
0x400b9f8	          0x80fb2c	                            cmp bl, 0x2c	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400b9fb	            0x74f3	                            je 0x400b9f0	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400b9fd	           0xfb6c3	                           movzx eax, bl	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ba00	    0xf68400000000	            test byte [rax + rax], 0x40 	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ba08	            0x75e6	                           jne 0x400b9f0	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400ba0a	            0x84db	                             test bl, bl	      8739	ldlang.c	FUNCTION_207	WHILE_1	IF_1
0x400ba0c	            0x7459	                            je 0x400ba67	      8739	ldlang.c	FUNCTION_207	WHILE_1	IF_1
0x400ba0e	         0xfb65d01	               movzx ebx, byte [rbp + 1]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba12	        0x4c8d6501	                      lea r12, [rbp + 1]	      8741	ldlang.c	FUNCTION_207	WHILE_1
0x400ba16	            0x84db	                             test bl, bl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba18	            0x7513	                           jne 0x400ba2d	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba1a	            0xeb23	                           jmp 0x400ba3f	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba1c	         0xf1f4000	                         nop dword [rax]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba20	        0x4983c401	                              add r12, 1	      8743	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3
0x400ba24	      0x410fb61c24	                   movzx ebx, byte [r12]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba29	            0x84db	                             test bl, bl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba2b	            0x7412	                            je 0x400ba3f	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba2d	          0x80fb2c	                            cmp bl, 0x2c	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba30	            0x740d	                            je 0x400ba3f	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba32	           0xfb6c3	                           movzx eax, bl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba35	    0xf68400000000	            test byte [rax + rax], 0x40 	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba3d	            0x74e1	                            je 0x400ba20	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400ba3f	      0x41c6042400	                       mov byte [r12], 0	      8745	ldlang.c	FUNCTION_207	WHILE_1
0x400ba44	      0xbe00000000	                              mov esi, 0	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400ba49	          0x4889ef	                            mov rdi, rbp	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400ba4c	      0xe800000000	                          call 0x400ba51	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400ba51	            0x85c0	                           test eax, eax	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400ba53	            0x751b	                           jne 0x400ba70	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400ba55	    0xc70500000000	               mov dword [0x0400ba5f], 1	      8747	ldlang.c	FUNCTION_207	WHILE_1	IF_2
0x400ba5f	            0x84db	                             test bl, bl	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400ba61	        0x41881c24	                      mov byte [r12], bl	      8750	ldlang.c	FUNCTION_207	WHILE_1
0x400ba65	            0x7581	                           jne 0x400b9e8	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400ba67	              0x5b	                                 pop rbx	      8753	ldlang.c	FUNCTION_207
0x400ba68	              0x5d	                                 pop rbp	      8753	ldlang.c	FUNCTION_207
0x400ba69	            0x415c	                                 pop r12	      8753	ldlang.c	FUNCTION_207
0x400ba6b	              0xc3	                                     ret	      8753	ldlang.c	FUNCTION_207
0x400ba6c	         0xf1f4000	                         nop dword [rax]	      8753	ldlang.c	FUNCTION_207
0x400ba70	            0x31ff	                            xor edi, edi	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba72	      0xba05000000	                              mov edx, 5	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba77	      0xbe00000000	                              mov esi, 0	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba7c	      0xe800000000	                          call 0x400ba81	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba81	          0x4889ee	                            mov rsi, rbp	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba84	          0x4889c7	                            mov rdi, rax	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba87	            0x31c0	                            xor eax, eax	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba89	      0xe800000000	                          call 0x400ba8e	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400ba8e	            0xebcf	                           jmp 0x400ba5f	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
lang_memory_region_alias	CALL,8:functions,0:WHILE,0:FOR,2:IF,4:DO,0:SWITCH,0:ELSE,0	101
0x40048e0	            0x4157	                                push r15	      1351	ldlang.c	FUNCTION_42
0x40048e2	            0x4156	                                push r14	      1351	ldlang.c	FUNCTION_42
0x40048e4	      0xb800000000	                              mov eax, 0	      1359	ldlang.c	FUNCTION_42	IF_1
0x40048e9	            0x4155	                                push r13	      1351	ldlang.c	FUNCTION_42
0x40048eb	            0x4154	                                push r12	      1351	ldlang.c	FUNCTION_42
0x40048ed	          0x4989fd	                            mov r13, rdi	      1351	ldlang.c	FUNCTION_42
0x40048f0	              0x55	                                push rbp	      1351	ldlang.c	FUNCTION_42
0x40048f1	              0x53	                                push rbx	      1351	ldlang.c	FUNCTION_42
0x40048f2	      0xb90a000000	                            mov ecx, 0xa	      1359	ldlang.c	FUNCTION_42	IF_1
0x40048f7	          0x4889c7	                            mov rdi, rax	      1359	ldlang.c	FUNCTION_42	IF_1
0x40048fa	          0x4989f7	                            mov r15, rsi	      1351	ldlang.c	FUNCTION_42
0x40048fd	        0x4883ec08	                              sub rsp, 8	      1351	ldlang.c	FUNCTION_42
0x4004901	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1359	ldlang.c	FUNCTION_42	IF_1
0x4004903	     0xf84bf000000	                            je 0x40049c8	      1359	ldlang.c	FUNCTION_42	IF_1
0x4004909	      0xb90a000000	                            mov ecx, 0xa	      1360	ldlang.c	FUNCTION_42	IF_1
0x400490e	          0x4c89ee	                            mov rsi, r13	      1360	ldlang.c	FUNCTION_42	IF_1
0x4004911	          0x4889c7	                            mov rdi, rax	      1360	ldlang.c	FUNCTION_42	IF_1
0x4004914	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1360	ldlang.c	FUNCTION_42	IF_1
0x4004916	     0xf84ac000000	                            je 0x40049c8	      1360	ldlang.c	FUNCTION_42	IF_1
0x400491c	    0x4c8b35000000	            mov r14, qword [0x04004923] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4004923	          0x4d85f6	                           test r14, r14	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4004926	     0xf84c9000000	                            je 0x40049f5	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400492c	          0x4531e4	                          xor r12d, r12d	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400492f	              0x90	                                     nop	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4004930	          0x4c89f3	                            mov rbx, r14	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004933	            0xeb0c	                           jmp 0x4004941	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004935	           0xf1f00	                         nop dword [rax]	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004938	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x400493c	          0x4885db	                           test rbx, rbx	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x400493f	            0x7444	                            je 0x4004985	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004941	          0x4d85e4	                           test r12, r12	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004944	          0x488b2b	                    mov rbp, qword [rbx]	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004947	     0xf84d3000000	                            je 0x4004a20	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x400494d	          0x4c89ee	                            mov rsi, r13	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4004950	          0x4889ef	                            mov rdi, rbp	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4004953	      0xe800000000	                          call 0x4004958	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4004958	            0x85c0	                           test eax, eax	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x400495a	            0x75dc	                           jne 0x4004938	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x400495c	            0x31ff	                            xor edi, edi	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400495e	      0xba05000000	                              mov edx, 5	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004963	      0xbe00000000	                              mov esi, 0	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004968	      0xe800000000	                          call 0x400496d	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400496d	            0x31f6	                            xor esi, esi	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400496f	          0x4889c7	                            mov rdi, rax	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004972	          0x4c89ea	                            mov rdx, r13	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004975	            0x31c0	                            xor eax, eax	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004977	      0xe800000000	                          call 0x400497c	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400497c	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004980	          0x4885db	                           test rbx, rbx	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004983	            0x75bc	                           jne 0x4004941	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004985	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4004989	          0x4d85f6	                           test r14, r14	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400498c	            0x75a2	                           jne 0x4004930	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400498e	          0x4d85e4	                           test r12, r12	      1378	ldlang.c	FUNCTION_42	IF_4
0x4004991	            0x7462	                            je 0x40049f5	      1378	ldlang.c	FUNCTION_42	IF_4
0x4004993	      0xbf10000000	                           mov edi, 0x10	      1384	ldlang.c	FUNCTION_42	CALL_7
0x4004998	      0xe800000000	                          call 0x400499d	      1384	ldlang.c	FUNCTION_42	CALL_7
0x400499d	          0x4c89ef	                            mov rdi, r13	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40049a0	          0x4889c3	                            mov rbx, rax	      1384	ldlang.c	FUNCTION_42	CALL_7
0x40049a3	      0xe800000000	                          call 0x40049a8	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40049a8	          0x488903	                    mov qword [rbx], rax	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40049ab	      0x498b442408	                mov rax, qword [r12 + 8]	      1386	ldlang.c	FUNCTION_42
0x40049b0	        0x48894308	                mov qword [rbx + 8], rax	      1386	ldlang.c	FUNCTION_42
0x40049b4	      0x49895c2408	                mov qword [r12 + 8], rbx	      1387	ldlang.c	FUNCTION_42
0x40049b9	        0x4883c408	                              add rsp, 8	      1388	ldlang.c	FUNCTION_42
0x40049bd	              0x5b	                                 pop rbx	      1388	ldlang.c	FUNCTION_42
0x40049be	              0x5d	                                 pop rbp	      1388	ldlang.c	FUNCTION_42
0x40049bf	            0x415c	                                 pop r12	      1388	ldlang.c	FUNCTION_42
0x40049c1	            0x415d	                                 pop r13	      1388	ldlang.c	FUNCTION_42
0x40049c3	            0x415e	                                 pop r14	      1388	ldlang.c	FUNCTION_42
0x40049c5	            0x415f	                                 pop r15	      1388	ldlang.c	FUNCTION_42
0x40049c7	              0xc3	                                     ret	      1388	ldlang.c	FUNCTION_42
0x40049c8	            0x31ff	                            xor edi, edi	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049ca	      0xba05000000	                              mov edx, 5	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049cf	      0xbe00000000	                              mov esi, 0	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049d4	      0xe800000000	                          call 0x40049d9	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049d9	            0x31f6	                            xor esi, esi	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049db	          0x4889c7	                            mov rdi, rax	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049de	            0x31c0	                            xor eax, eax	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049e0	      0xe800000000	                          call 0x40049e5	      1361	ldlang.c	FUNCTION_42	CALL_2
0x40049e5	    0x4c8b35000000	            mov r14, qword [0x040049ec] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40049ec	          0x4d85f6	                           test r14, r14	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40049ef	     0xf8537ffffff	                           jne 0x400492c	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40049f5	      0xba05000000	                              mov edx, 5	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40049fa	      0xbe00000000	                              mov esi, 0	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40049ff	            0x31ff	                            xor edi, edi	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a01	      0xe800000000	                          call 0x4004a06	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a06	          0x4c89e9	                            mov rcx, r13	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a09	          0x4889c7	                            mov rdi, rax	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a0c	          0x4c89fa	                            mov rdx, r15	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a0f	            0x31f6	                            xor esi, esi	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a11	            0x31c0	                            xor eax, eax	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a13	          0x4531e4	                          xor r12d, r12d	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a16	      0xe800000000	                          call 0x4004a1b	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a1b	      0xe973ffffff	                           jmp 0x4004993	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x4004a20	          0x4c89fe	                            mov rsi, r15	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004a23	          0x4889ef	                            mov rdi, rbp	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004a26	      0xe800000000	                          call 0x4004a2b	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004a2b	            0x85c0	                           test eax, eax	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004a2d	        0x4d0f44e6	                          cmove r12, r14	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004a31	      0xe917ffffff	                           jmp 0x400494d	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
print_input_section	CALL,12:functions,0:WHILE,2:FOR,0:IF,7:DO,0:SWITCH,0:ELSE,2	191
0x4001490	            0x4157	                                push r15	      4199	ldlang.c	FUNCTION_96
0x4001492	            0x4156	                                push r14	      4199	ldlang.c	FUNCTION_96
0x4001494	          0x4189f6	                           mov r14d, esi	      4199	ldlang.c	FUNCTION_96
0x4001497	            0x4155	                                push r13	      4199	ldlang.c	FUNCTION_96
0x4001499	            0x4154	                                push r12	      4199	ldlang.c	FUNCTION_96
0x400149b	              0x55	                                push rbp	      4199	ldlang.c	FUNCTION_96
0x400149c	              0x53	                                push rbx	      4199	ldlang.c	FUNCTION_96
0x400149d	          0x4889fd	                            mov rbp, rdi	      4199	ldlang.c	FUNCTION_96
0x40014a0	        0x4883ec08	                              sub rsp, 8	      4199	ldlang.c	FUNCTION_96
0x40014a4	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	      4200	ldlang.c	FUNCTION_96
0x40014a8	      0xe873ffffff	                       call sym.init_opb	      4204	ldlang.c	FUNCTION_96	CALL_1
0x40014ad	      0xe800000000	                          call 0x40014b2	      4206	ldlang.c	FUNCTION_96	CALL_2
0x40014b2	        0x488b7500	                    mov rsi, qword [rbp]	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40014b6	            0x31c0	                            xor eax, eax	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40014b8	      0xbf00000000	                              mov edi, 0	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40014bd	      0xe800000000	                          call 0x40014c2	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40014c2	        0x488b7d00	                    mov rdi, qword [rbp]	      4209	ldlang.c	FUNCTION_96	CALL_4
0x40014c6	      0xe800000000	                          call 0x40014cb	      4209	ldlang.c	FUNCTION_96	CALL_4
0x40014cb	          0x8d5801	                      lea ebx, [rax + 1]	      4209	ldlang.c	FUNCTION_96	CALL_4
0x40014ce	          0x83fb0e	                            cmp ebx, 0xe	      4210	ldlang.c	FUNCTION_96	IF_1
0x40014d1	     0xf8fd1000000	                            jg 0x40015a8	      4210	ldlang.c	FUNCTION_96	IF_1
0x40014d7	    0x660f1f840000	                    nop word [rax + rax]	      4210	ldlang.c	FUNCTION_96	IF_1
0x40014e0	          0x83c301	                              add ebx, 1	      4218	ldlang.c	FUNCTION_96	WHILE_1
0x40014e3	      0xe800000000	                          call 0x40014e8	      4217	ldlang.c	FUNCTION_96	WHILE_1	CALL_6
0x40014e8	          0x83fb10	                           cmp ebx, 0x10	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x40014eb	            0x75f3	                           jne 0x40014e0	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x40014ed	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      4221	ldlang.c	FUNCTION_96	IF_2
0x40014f1	          0x4885c0	                           test rax, rax	      4221	ldlang.c	FUNCTION_96	IF_2
0x40014f4	            0x7414	                            je 0x400150a	      4221	ldlang.c	FUNCTION_96	IF_2
0x40014f6	    0x488b15000000	            mov rdx, qword [0x040014fd] 	      4222	ldlang.c	FUNCTION_96	IF_2
0x40014fd	    0x483990f00000	            cmp qword [rax + 0xf0], rdx 	      4222	ldlang.c	FUNCTION_96	IF_2
0x4001504	     0xf84f6000000	                            je 0x4001600	      4222	ldlang.c	FUNCTION_96	IF_2
0x400150a	    0x4c8b2d000000	            mov r13, qword [0x04001511] 	      4226	ldlang.c	FUNCTION_96	ELSE_1
0x4001511	          0x4585f6	                         test r14d, r14d	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x4001514	      0xb800000000	                              mov eax, 0	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x4001519	        0x4c0f44e0	                          cmove r12, rax	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x400151d	    0x488b8df00000	            mov rcx, qword [rbp + 0xf0] 	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4001524	            0x31c0	                            xor eax, eax	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4001526	          0x4c89e2	                            mov rdx, r12	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4001529	          0x4c89ee	                            mov rsi, r13	      4231	ldlang.c	FUNCTION_96	CALL_7
0x400152c	      0xbf00000000	                              mov edi, 0	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4001531	      0xe800000000	                          call 0x4001536	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4001536	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      4233	ldlang.c	FUNCTION_96	IF_4
0x400153a	          0x4939c4	                            cmp r12, rax	      4233	ldlang.c	FUNCTION_96	IF_4
0x400153d	            0x743d	                            je 0x400157c	      4233	ldlang.c	FUNCTION_96	IF_4
0x400153f	          0x4885c0	                           test rax, rax	      4233	ldlang.c	FUNCTION_96	IF_4
0x4001542	            0x7438	                            je 0x400157c	      4233	ldlang.c	FUNCTION_96	IF_4
0x4001544	      0xbb23000000	                           mov ebx, 0x23	      4233	ldlang.c	FUNCTION_96	IF_4
0x4001549	     0xf1f80000000	                         nop dword [rax]	      4233	ldlang.c	FUNCTION_96	IF_4
0x4001550	      0xe800000000	                          call 0x4001555	      4243	ldlang.c	FUNCTION_96	IF_4	WHILE_2	CALL_8
0x4001555	          0x83eb01	                              sub ebx, 1	      4241	ldlang.c	FUNCTION_96	IF_4	WHILE_2
0x4001558	            0x75f6	                           jne 0x4001550	      4241	ldlang.c	FUNCTION_96	IF_4	WHILE_2
0x400155a	        0x488b5d40	            mov rbx, qword [rbp + 0x40] 	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400155e	      0xbe00000000	                              mov esi, 0	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001563	            0x31ff	                            xor edi, edi	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001565	      0xba05000000	                              mov edx, 5	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400156a	      0xe800000000	                          call 0x400156f	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400156f	          0x4889de	                            mov rsi, rbx	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001572	          0x4889c7	                            mov rdi, rax	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001575	            0x31c0	                            xor eax, eax	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x4001577	      0xe800000000	                          call 0x400157c	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x400157c	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      4250	ldlang.c	FUNCTION_96	IF_5
0x4001580	          0x4885c0	                           test rax, rax	      4250	ldlang.c	FUNCTION_96	IF_5
0x4001583	            0x7410	                            je 0x4001595	      4250	ldlang.c	FUNCTION_96	IF_5
0x4001585	    0x488b35000000	            mov rsi, qword [0x0400158c] 	      4251	ldlang.c	FUNCTION_96	IF_5
0x400158c	    0x4839b0f00000	            cmp qword [rax + 0xf0], rsi 	      4251	ldlang.c	FUNCTION_96	IF_5
0x4001593	            0x7423	                            je 0x40015b8	      4251	ldlang.c	FUNCTION_96	IF_5
0x4001595	        0x4883c408	                              add rsp, 8	      4264	ldlang.c	FUNCTION_96
0x4001599	              0x5b	                                 pop rbx	      4264	ldlang.c	FUNCTION_96
0x400159a	              0x5d	                                 pop rbp	      4264	ldlang.c	FUNCTION_96
0x400159b	            0x415c	                                 pop r12	      4264	ldlang.c	FUNCTION_96
0x400159d	            0x415d	                                 pop r13	      4264	ldlang.c	FUNCTION_96
0x400159f	            0x415e	                                 pop r14	      4264	ldlang.c	FUNCTION_96
0x40015a1	            0x415f	                                 pop r15	      4264	ldlang.c	FUNCTION_96
0x40015a3	              0xc3	                                     ret	      4264	ldlang.c	FUNCTION_96
0x40015a4	         0xf1f4000	                         nop dword [rax]	      4264	ldlang.c	FUNCTION_96
0x40015a8	      0xe800000000	                          call 0x40015ad	      4212	ldlang.c	FUNCTION_96	IF_1	CALL_5
0x40015ad	            0x31db	                            xor ebx, ebx	      4213	ldlang.c	FUNCTION_96	IF_1
0x40015af	      0xe92cffffff	                           jmp 0x40014e0	      4213	ldlang.c	FUNCTION_96	IF_1
0x40015b4	         0xf1f4000	                         nop dword [rax]	      4213	ldlang.c	FUNCTION_96	IF_1
0x40015b8	    0xf60500000000	           test byte [0x040015bf], 0x10 	      4253	ldlang.c	FUNCTION_96	IF_5	IF_6
0x40015bf	            0x744c	                            je 0x400160d	      4253	ldlang.c	FUNCTION_96	IF_5	IF_6
0x40015c1	    0x488b3d000000	            mov rdi, qword [0x040015c8] 	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x40015c8	          0x4889ea	                            mov rdx, rbp	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x40015cb	      0xbe00000000	                              mov esi, 0	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x40015d0	      0xe800000000	                          call 0x40015d5	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x40015d5	    0x8b0d00000000	            mov ecx, dword [0x040015db] 	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x40015db	          0x49d3ec	                             shr r12, cl	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x40015de	          0x4d01ec	                            add r12, r13	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x40015e1	    0x4c3b25000000	            cmp r12, qword [0x040015e8] 	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x40015e8	            0x76ab	                           jbe 0x4001595	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x40015ea	    0x4c8925000000	            mov qword [0x040015f1], r12 	      4262	ldlang.c	FUNCTION_96	IF_5	IF_7
0x40015f1	        0x4883c408	                              add rsp, 8	      4264	ldlang.c	FUNCTION_96
0x40015f5	              0x5b	                                 pop rbx	      4264	ldlang.c	FUNCTION_96
0x40015f6	              0x5d	                                 pop rbp	      4264	ldlang.c	FUNCTION_96
0x40015f7	            0x415c	                                 pop r12	      4264	ldlang.c	FUNCTION_96
0x40015f9	            0x415d	                                 pop r13	      4264	ldlang.c	FUNCTION_96
0x40015fb	            0x415e	                                 pop r14	      4264	ldlang.c	FUNCTION_96
0x40015fd	            0x415f	                                 pop r15	      4264	ldlang.c	FUNCTION_96
0x40015ff	              0xc3	                                     ret	      4264	ldlang.c	FUNCTION_96
0x4001600	        0x4c8b6d60	            mov r13, qword [rbp + 0x60] 	      4223	ldlang.c	FUNCTION_96	IF_2
0x4001604	        0x4c036828	             add r13, qword [rax + 0x28]	      4223	ldlang.c	FUNCTION_96	IF_2
0x4001608	      0xe910ffffff	                           jmp 0x400151d	      4223	ldlang.c	FUNCTION_96	IF_2
0x400160d	    0x4c8bbda80000	            mov r15, qword [rbp + 0xa8] 	      4166	ldlang.c	ELSE_2	FUNCTION_95
0x4001614	          0x4d85ff	                           test r15, r15	      4172	ldlang.c	ELSE_2	FUNCTION_95	IF_1
0x4001617	            0x74bc	                            je 0x40015d5	      4172	ldlang.c	ELSE_2	FUNCTION_95	IF_1
0x4001619	        0x498b4708	                mov rax, qword [r15 + 8]	      4175	ldlang.c	ELSE_2	FUNCTION_95
0x400161d	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001621	    0x48c700000000	                      mov qword [rax], 0	      4175	ldlang.c	ELSE_2	FUNCTION_95
0x4001628	    0x488b0d000000	            mov rcx, qword [0x0400162f] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400162f	    0x488d1cf50000	                        lea rbx, [rsi*8]	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001637	    0x488b05000000	            mov rax, qword [0x0400163e] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400163e	          0x4889ca	                            mov rdx, rcx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001641	          0x4829c2	                            sub rdx, rax	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001644	          0x4839d3	                            cmp rbx, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001647	     0xf8701010000	                            ja 0x400174e	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400164d	    0x4c8b35000000	            mov r14, qword [0x04001654] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001654	          0x4801c3	                            add rbx, rax	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001657	          0x4c39f3	                            cmp rbx, r14	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400165a	     0xf8412010000	                            je 0x4001772	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001660	    0x488b15000000	            mov rdx, qword [0x04001667] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001667	        0x488d0413	                    lea rax, [rbx + rdx]	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400166b	          0x48f7d2	                                 not rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400166e	          0x4889cb	                            mov rbx, rcx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001671	          0x4821d0	                            and rax, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001674	    0x488b15000000	            mov rdx, qword [0x0400167b] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400167b	          0x4889c7	                            mov rdi, rax	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400167e	    0x488905000000	            mov qword [0x04001685], rax 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001685	          0x4829d7	                            sub rdi, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001688	          0x4829d3	                            sub rbx, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400168b	          0x4839df	                            cmp rdi, rbx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400168e	     0xf8798000000	                            ja 0x400172c	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001694	    0x488905000000	            mov qword [0x0400169b], rax 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400169b	          0x498b07	                    mov rax, qword [r15]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x400169e	            0x31d2	                            xor edx, edx	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016a0	          0x4885c0	                           test rax, rax	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016a3	            0x7418	                            je 0x40016bd	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016a5	           0xf1f00	                         nop dword [rax]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016a8	          0x488b38	                    mov rdi, qword [rax]	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016ab	            0x89d1	                            mov ecx, edx	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016ad	          0x83c201	                              add edx, 1	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016b0	        0x49893cce	            mov qword [r14 + rcx*8], rdi	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016b4	        0x488b4008	                mov rax, qword [rax + 8]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016b8	          0x4885c0	                           test rax, rax	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016bb	            0x75eb	                           jne 0x40016a8	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40016bd	      0xb900000000	                              mov ecx, 0	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40016c2	      0xba08000000	                              mov edx, 8	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40016c7	          0x4c89f7	                            mov rdi, r14	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40016ca	      0xe800000000	                          call 0x40016cf	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40016cf	            0x31db	                            xor ebx, ebx	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016d1	            0x31c0	                            xor eax, eax	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016d3	      0x49837f1000	               cmp qword [r15 + 0x10], 0	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016d8	            0x7512	                           jne 0x40016ec	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016da	            0xeb2c	                           jmp 0x4001708	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016dc	         0xf1f4000	                         nop dword [rax]	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016e0	          0x8d4301	                      lea eax, [rbx + 1]	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016e3	        0x493b4710	            cmp rax, qword [r15 + 0x10] 	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016e7	          0x4889c3	                            mov rbx, rax	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016ea	            0x731c	                           jae 0x4001708	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40016ec	        0x498b3cc6	            mov rdi, qword [r14 + rax*8]	      4190	ldlang.c	ELSE_2	FUNCTION_95	CALL_4
0x40016f0	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	      4130	ldlang.c	FUNCTION_93	IF_1
0x40016f4	          0x83e803	                              sub eax, 3	      4130	ldlang.c	FUNCTION_93	IF_1
0x40016f7	            0x3c01	                               cmp al, 1	      4130	ldlang.c	FUNCTION_93	IF_1
0x40016f9	            0x77e5	                            ja 0x40016e0	      4130	ldlang.c	FUNCTION_93	IF_1
0x40016fb	        0x483b6f28	            cmp rbp, qword [rdi + 0x28] 	      4132	ldlang.c	FUNCTION_93	IF_1
0x40016ff	            0x75df	                           jne 0x40016e0	      4132	ldlang.c	FUNCTION_93	IF_1
0x4001701	      0xe87afcffff	       call sym.print_one_symbol.part.15	      4132	ldlang.c	FUNCTION_93	IF_1
0x4001706	            0xebd8	                           jmp 0x40016e0	      4132	ldlang.c	FUNCTION_93	IF_1
0x4001708	    0x4c3b35000000	            cmp r14, qword [0x0400170f] 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400170f	            0x7609	                           jbe 0x400171a	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001711	    0x4c3b35000000	            cmp r14, qword [0x04001718] 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001718	            0x7221	                            jb 0x400173b	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400171a	          0x4c89f6	                            mov rsi, r14	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400171d	      0xbf00000000	                              mov edi, 0	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001722	      0xe800000000	                          call 0x4001727	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001727	      0xe9a9feffff	                           jmp 0x40015d5	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400172c	    0x48890d000000	            mov qword [0x04001733], rcx 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001733	          0x4889c8	                            mov rax, rcx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001736	      0xe959ffffff	                           jmp 0x4001694	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400173b	    0x4c8935000000	            mov qword [0x04001742], r14 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001742	    0x4c8935000000	            mov qword [0x04001749], r14 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4001749	      0xe987feffff	                           jmp 0x40015d5	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x400174e	          0x4889de	                            mov rsi, rbx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001751	      0xbf00000000	                              mov edi, 0	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001756	      0xe800000000	                          call 0x400175b	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400175b	    0x488b05000000	            mov rax, qword [0x04001762] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001762	    0x488b0d000000	            mov rcx, qword [0x04001769] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001769	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400176d	      0xe9dbfeffff	                           jmp 0x400164d	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001772	    0x800d00000000	                 or byte [0x04001779], 2	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4001779	      0xe9e2feffff	                           jmp 0x4001660	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
walk_wild_section_specs2_wild1	CALL,5:functions,0:WHILE,0:FOR,1:IF,3:DO,0:SWITCH,0:ELSE,1	83
0x4002c20	            0x4157	                                push r15	       610	ldlang.c	FUNCTION_20
0x4002c22	            0x4156	                                push r14	       610	ldlang.c	FUNCTION_20
0x4002c24	          0x4989cf	                            mov r15, rcx	       610	ldlang.c	FUNCTION_20
0x4002c27	            0x4155	                                push r13	       610	ldlang.c	FUNCTION_20
0x4002c29	            0x4154	                                push r12	       610	ldlang.c	FUNCTION_20
0x4002c2b	          0x4989f5	                            mov r13, rsi	       610	ldlang.c	FUNCTION_20
0x4002c2e	              0x55	                                push rbp	       610	ldlang.c	FUNCTION_20
0x4002c2f	              0x53	                                push rbx	       610	ldlang.c	FUNCTION_20
0x4002c30	          0x4989fc	                            mov r12, rdi	       610	ldlang.c	FUNCTION_20
0x4002c33	        0x4883ec38	                           sub rsp, 0x38	       610	ldlang.c	FUNCTION_20
0x4002c37	        0x488b6f58	            mov rbp, qword [rdi + 0x58] 	       613	ldlang.c	FUNCTION_20
0x4002c3b	    0x64488b042528	                mov rax, qword fs:[0x28]	       610	ldlang.c	FUNCTION_20
0x4002c44	      0x4889442428	             mov qword [rsp + 0x28], rax	       610	ldlang.c	FUNCTION_20
0x4002c49	            0x31c0	                            xor eax, eax	       610	ldlang.c	FUNCTION_20
0x4002c4b	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       612	ldlang.c	FUNCTION_20
0x4002c4f	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       612	ldlang.c	FUNCTION_20
0x4002c53	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002c58	        0x48891424	                    mov qword [rsp], rdx	       610	ldlang.c	FUNCTION_20
0x4002c5c	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002c61	    0x48c744241000	               mov qword [rsp + 0x10], 0	       348	ldlang.c	FUNCTION_10
0x4002c6a	        0x488b7008	                mov rsi, qword [rax + 8]	       348	ldlang.c	FUNCTION_10
0x4002c6e	      0x4889442408	                mov qword [rsp + 8], rax	       612	ldlang.c	FUNCTION_20
0x4002c73	    0xc74424180000	               mov dword [rsp + 0x18], 0	       348	ldlang.c	FUNCTION_10
0x4002c7b	      0xe800000000	                          call 0x4002c80	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002c80	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       617	ldlang.c	FUNCTION_20	IF_1
0x4002c84	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       353	ldlang.c	FUNCTION_10
0x4002c89	            0x85c0	                           test eax, eax	       617	ldlang.c	FUNCTION_20	IF_1
0x4002c8b	     0xf859f000000	                           jne 0x4002d30	       617	ldlang.c	FUNCTION_20	IF_1
0x4002c91	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002c95	    0x4c8bb0900000	            mov r14, qword [rax + 0x90] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002c9c	          0x4d85f6	                           test r14, r14	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002c9f	            0x7510	                           jne 0x4002cb1	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002ca1	            0xeb4d	                           jmp 0x4002cf0	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002ca3	       0xf1f440000	                   nop dword [rax + rax]	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002ca8	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002cac	          0x4d85f6	                           test r14, r14	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002caf	            0x743f	                            je 0x4002cf0	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002cb1	          0x4c39f3	                            cmp rbx, r14	       630	ldlang.c	FUNCTION_20	FOR_1	IF_2
0x4002cb4	            0x745a	                            je 0x4002d10	       630	ldlang.c	FUNCTION_20	FOR_1	IF_2
0x4002cb6	        0x488b7d08	                mov rdi, qword [rbp + 8]	       635	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	CALL_4
0x4002cba	          0x498b36	                    mov rsi, qword [r14]	       635	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	CALL_4
0x4002cbd	      0xe8dee3ffff	              call sym.match_simple_wild	       635	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	CALL_4
0x4002cc2	            0x85c0	                           test eax, eax	       637	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3
0x4002cc4	            0x74e2	                            je 0x4002ca8	       637	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3
0x4002cc6	        0x4c8b0424	                     mov r8, qword [rsp]	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x4002cca	          0x4c89f2	                            mov rdx, r14	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x4002ccd	          0x4d89f9	                             mov r9, r15	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x4002cd0	          0x4889e9	                            mov rcx, rbp	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x4002cd3	          0x4c89ee	                            mov rsi, r13	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x4002cd6	          0x4c89e7	                            mov rdi, r12	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x4002cd9	      0xe822faffff	     call sym.walk_wild_consider_section	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x4002cde	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002ce2	          0x4d85f6	                           test r14, r14	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002ce5	            0x75ca	                           jne 0x4002cb1	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002ce7	    0x660f1f840000	                    nop word [rax + rax]	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002cf0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       642	ldlang.c	FUNCTION_20
0x4002cf5	    0x644833042528	                xor rax, qword fs:[0x28]	       642	ldlang.c	FUNCTION_20
0x4002cfe	            0x7544	                           jne 0x4002d44	       642	ldlang.c	FUNCTION_20
0x4002d00	        0x4883c438	                           add rsp, 0x38	       642	ldlang.c	FUNCTION_20
0x4002d04	              0x5b	                                 pop rbx	       642	ldlang.c	FUNCTION_20
0x4002d05	              0x5d	                                 pop rbp	       642	ldlang.c	FUNCTION_20
0x4002d06	            0x415c	                                 pop r12	       642	ldlang.c	FUNCTION_20
0x4002d08	            0x415d	                                 pop r13	       642	ldlang.c	FUNCTION_20
0x4002d0a	            0x415e	                                 pop r14	       642	ldlang.c	FUNCTION_20
0x4002d0c	            0x415f	                                 pop r15	       642	ldlang.c	FUNCTION_20
0x4002d0e	              0xc3	                                     ret	       642	ldlang.c	FUNCTION_20
0x4002d0f	              0x90	                                     nop	       642	ldlang.c	FUNCTION_20
0x4002d10	        0x4c8b0424	                     mov r8, qword [rsp]	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d14	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d19	          0x4d89f9	                             mov r9, r15	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d1c	          0x4889da	                            mov rdx, rbx	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d1f	          0x4c89ee	                            mov rsi, r13	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d22	          0x4c89e7	                            mov rdi, r12	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d25	      0xe8d6f9ffff	     call sym.walk_wild_consider_section	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d2a	      0xe979ffffff	                           jmp 0x4002ca8	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d2f	              0x90	                                     nop	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002d30	        0x488b1424	                    mov rdx, qword [rsp]	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002d34	          0x4c89f9	                            mov rcx, r15	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002d37	          0x4c89ee	                            mov rsi, r13	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002d3a	          0x4c89e7	                            mov rdi, r12	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002d3d	      0xe8aefaffff	      call sym.walk_wild_section_general	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002d42	            0xebac	                           jmp 0x4002cf0	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002d44	      0xe800000000	                          call 0x4002d49	       642	ldlang.c	FUNCTION_20
lang_new_vers_pattern	CALL,8:functions,0:WHILE,0:FOR,0:IF,4:DO,0:SWITCH,0:ELSE,3	136
0x40092b0	            0x4156	                                push r14	      8294	ldlang.c	FUNCTION_194
0x40092b2	            0x4155	                                push r13	      8294	ldlang.c	FUNCTION_194
0x40092b4	          0x4989fe	                            mov r14, rdi	      8294	ldlang.c	FUNCTION_194
0x40092b7	            0x4154	                                push r12	      8294	ldlang.c	FUNCTION_194
0x40092b9	              0x55	                                push rbp	      8294	ldlang.c	FUNCTION_194
0x40092ba	      0xbf18000000	                           mov edi, 0x18	      8297	ldlang.c	FUNCTION_194	CALL_1
0x40092bf	              0x53	                                push rbx	      8294	ldlang.c	FUNCTION_194
0x40092c0	          0x4189cd	                           mov r13d, ecx	      8294	ldlang.c	FUNCTION_194
0x40092c3	          0x4989f4	                            mov r12, rsi	      8294	ldlang.c	FUNCTION_194
0x40092c6	          0x4889d5	                            mov rbp, rdx	      8294	ldlang.c	FUNCTION_194
0x40092c9	      0xe800000000	                          call 0x40092ce	      8297	ldlang.c	FUNCTION_194	CALL_1
0x40092ce	          0x4889c3	                            mov rbx, rax	      8297	ldlang.c	FUNCTION_194	CALL_1
0x40092d1	          0x4c8930	                    mov qword [rax], r14	      8298	ldlang.c	FUNCTION_194
0x40092d4	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      8300	ldlang.c	FUNCTION_194
0x40092d8	          0x83e0f9	                     and eax, 0xfffffff9	      8300	ldlang.c	FUNCTION_194
0x40092db	          0x83c801	                               or eax, 1	      8301	ldlang.c	FUNCTION_194
0x40092de	          0x4585ed	                         test r13d, r13d	      8302	ldlang.c	FUNCTION_194	CALL_2
0x40092e1	          0x884310	               mov byte [rbx + 0x10], al	      8301	ldlang.c	FUNCTION_194
0x40092e4	     0xf84c6000000	                            je 0x40093b0	      8302	ldlang.c	FUNCTION_194	CALL_2
0x40092ea	          0x4d85e4	                           test r12, r12	      8303	ldlang.c	FUNCTION_194	IF_1
0x40092ed	        0x4c896308	                mov qword [rbx + 8], r12	      8302	ldlang.c	FUNCTION_194	CALL_2
0x40092f1	     0xf8461010000	                            je 0x4009458	      8303	ldlang.c	FUNCTION_194	IF_1
0x40092f7	          0x4885ed	                           test rbp, rbp	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x40092fa	            0x7472	                            je 0x400936e	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x40092fc	      0xbe00000000	                              mov esi, 0	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4009301	          0x4889ef	                            mov rdi, rbp	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4009304	      0xe800000000	                          call 0x4009309	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4009309	            0x85c0	                           test eax, eax	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x400930b	            0x7461	                            je 0x400936e	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x400930d	      0xbe00000000	                              mov esi, 0	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x4009312	          0x4889ef	                            mov rdi, rbp	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x4009315	      0xe800000000	                          call 0x400931a	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x400931a	            0x85c0	                           test eax, eax	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x400931c	            0x7472	                            je 0x4009390	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x400931e	      0xbe00000000	                              mov esi, 0	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x4009323	          0x4889ef	                            mov rdi, rbp	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x4009326	      0xe800000000	                          call 0x400932b	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x400932b	            0x85c0	                           test eax, eax	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x400932d	            0x7521	                           jne 0x4009350	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x400932f	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x4009333	          0x4889df	                            mov rdi, rbx	      8322	ldlang.c	FUNCTION_194	CALL_8
0x4009336	          0x83e0c7	                     and eax, 0xffffffc7	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x4009339	          0x83c820	                            or eax, 0x20	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x400933c	          0x884310	               mov byte [rbx + 0x10], al	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x400933f	              0x5b	                                 pop rbx	      8323	ldlang.c	FUNCTION_194
0x4009340	              0x5d	                                 pop rbp	      8323	ldlang.c	FUNCTION_194
0x4009341	            0x415c	                                 pop r12	      8323	ldlang.c	FUNCTION_194
0x4009343	            0x415d	                                 pop r13	      8323	ldlang.c	FUNCTION_194
0x4009345	            0x415e	                                 pop r14	      8323	ldlang.c	FUNCTION_194
0x4009347	      0xe900000000	                           jmp 0x400934c	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400934c	         0xf1f4000	                         nop dword [rax]	      8322	ldlang.c	FUNCTION_194	CALL_8
0x4009350	      0xbe00000000	                              mov esi, 0	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x4009355	            0x31ff	                            xor edi, edi	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x4009357	      0xba05000000	                              mov edx, 5	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x400935c	      0xe800000000	                          call 0x4009361	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x4009361	          0x4889ee	                            mov rsi, rbp	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x4009364	          0x4889c7	                            mov rdi, rax	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x4009367	            0x31c0	                            xor eax, eax	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x4009369	      0xe800000000	                          call 0x400936e	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x400936e	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x4009372	          0x4889df	                            mov rdi, rbx	      8322	ldlang.c	FUNCTION_194	CALL_8
0x4009375	          0x83e0c7	                     and eax, 0xffffffc7	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x4009378	          0x83c808	                               or eax, 8	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x400937b	          0x884310	               mov byte [rbx + 0x10], al	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x400937e	              0x5b	                                 pop rbx	      8323	ldlang.c	FUNCTION_194
0x400937f	              0x5d	                                 pop rbp	      8323	ldlang.c	FUNCTION_194
0x4009380	            0x415c	                                 pop r12	      8323	ldlang.c	FUNCTION_194
0x4009382	            0x415d	                                 pop r13	      8323	ldlang.c	FUNCTION_194
0x4009384	            0x415e	                                 pop r14	      8323	ldlang.c	FUNCTION_194
0x4009386	      0xe900000000	                           jmp 0x400938b	      8322	ldlang.c	FUNCTION_194	CALL_8
0x400938b	       0xf1f440000	                   nop dword [rax + rax]	      8322	ldlang.c	FUNCTION_194	CALL_8
0x4009390	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x4009394	          0x4889df	                            mov rdi, rbx	      8322	ldlang.c	FUNCTION_194	CALL_8
0x4009397	          0x83e0c7	                     and eax, 0xffffffc7	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x400939a	          0x83c810	                            or eax, 0x10	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x400939d	          0x884310	               mov byte [rbx + 0x10], al	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x40093a0	              0x5b	                                 pop rbx	      8323	ldlang.c	FUNCTION_194
0x40093a1	              0x5d	                                 pop rbp	      8323	ldlang.c	FUNCTION_194
0x40093a2	            0x415c	                                 pop r12	      8323	ldlang.c	FUNCTION_194
0x40093a4	            0x415d	                                 pop r13	      8323	ldlang.c	FUNCTION_194
0x40093a6	            0x415e	                                 pop r14	      8323	ldlang.c	FUNCTION_194
0x40093a8	      0xe900000000	                           jmp 0x40093ad	      8322	ldlang.c	FUNCTION_194	CALL_8
0x40093ad	           0xf1f00	                         nop dword [rax]	      8322	ldlang.c	FUNCTION_194	CALL_8
0x40093b0	          0x4c89e7	                            mov rdi, r12	      8247	ldlang.c	FUNCTION_193	CALL_2
0x40093b3	      0xe800000000	                          call 0x40093b8	      8247	ldlang.c	FUNCTION_193	CALL_2
0x40093b8	        0x488d7801	                      lea rdi, [rax + 1]	      8247	ldlang.c	FUNCTION_193	CALL_2
0x40093bc	      0xe800000000	                          call 0x40093c1	      8247	ldlang.c	FUNCTION_193	CALL_2
0x40093c1	      0x410fb61424	                   movzx edx, byte [r12]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093c6	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093c8	     0xf849a000000	                            je 0x4009468	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093ce	          0x4c89e1	                            mov rcx, r12	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093d1	          0x4989c1	                             mov r9, rax	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093d4	          0x4531d2	                          xor r10d, r10d	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093d7	          0x4531c0	                            xor r8d, r8d	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093da	    0x49bb01002000	             movabs r11, 0x2000000200001	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40093e4	            0xeb22	                           jmp 0x4009408	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40093e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40093f0	        0x4883c101	                              add rcx, 1	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093f4	        0x418851ff	                   mov byte [r9 - 1], dl	      8256	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40093f8	          0x4531c0	                            xor r8d, r8d	      8257	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40093fb	           0xfb611	                   movzx edx, byte [rcx]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40093fe	    0x41ba01000000	                             mov r10d, 1	      8258	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x4009404	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x4009406	            0x7431	                            je 0x4009439	      8249	ldlang.c	FUNCTION_193	FOR_1
0x4009408	          0x4585c0	                           test r8d, r8d	      8253	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x400940b	            0x75e3	                           jne 0x40093f0	      8253	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x400940d	        0x448d42d6	                   lea r8d, [rdx - 0x2a]	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x4009411	        0x4180f831	                           cmp r8b, 0x31	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x4009415	            0x7706	                            ja 0x400941d	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x4009417	        0x4d0fa3c3	                              bt r11, r8	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400941b	            0x7233	                            jb 0x4009450	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x400941d	          0x4531c0	                            xor r8d, r8d	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x4009420	          0x80fa5c	                            cmp dl, 0x5c	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x4009423	          0x418811	                       mov byte [r9], dl	      8268	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x4009426	        0x410f94c0	                                sete r8b	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x400942a	        0x4883c101	                              add rcx, 1	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400942e	           0xfb611	                   movzx edx, byte [rcx]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x4009431	        0x4983c101	                               add r9, 1	      8268	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x4009435	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x4009437	            0x75cf	                           jne 0x4009408	      8249	ldlang.c	FUNCTION_193	FOR_1
0x4009439	          0x4585d2	                         test r10d, r10d	      8273	ldlang.c	FUNCTION_193	IF_3
0x400943c	            0x742a	                            je 0x4009468	      8273	ldlang.c	FUNCTION_193	IF_3
0x400943e	        0x41c60100	                        mov byte [r9], 0	      8275	ldlang.c	FUNCTION_193	IF_3
0x4009442	        0x48894308	                mov qword [rbx + 8], rax	      8302	ldlang.c	FUNCTION_194	CALL_2
0x4009446	      0xe9acfeffff	                           jmp 0x40092f7	      8302	ldlang.c	FUNCTION_194	CALL_2
0x400944b	       0xf1f440000	                   nop dword [rax + rax]	      8302	ldlang.c	FUNCTION_194	CALL_2
0x4009450	          0x4889c7	                            mov rdi, rax	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x4009453	      0xe800000000	                          call 0x4009458	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x4009458	        0x4c896308	                mov qword [rbx + 8], r12	      8305	ldlang.c	FUNCTION_194	IF_1
0x400945c	        0x806310fe	             and byte [rbx + 0x10], 0xfe	      8306	ldlang.c	FUNCTION_194	IF_1
0x4009460	      0xe992feffff	                           jmp 0x40092f7	      8306	ldlang.c	FUNCTION_194	IF_1
0x4009465	           0xf1f00	                         nop dword [rax]	      8306	ldlang.c	FUNCTION_194	IF_1
0x4009468	          0x4889c7	                            mov rdi, rax	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x400946b	      0xe800000000	                          call 0x4009470	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x4009470	          0x4c89e0	                            mov rax, r12	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x4009473	            0xebcd	                           jmp 0x4009442	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
map_input_to_output_sections	CALL,12:functions,0:WHILE,0:FOR,1:IF,9:DO,0:SWITCH,2:ELSE,2	173
0x40070a0	          0x4885ff	                           test rdi, rdi	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40070a3	            0x7455	                            je 0x40070fa	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40070a5	            0x4155	                                push r13	      3593	ldlang.c	FUNCTION_86
0x40070a7	            0x4154	                                push r12	      3593	ldlang.c	FUNCTION_86
0x40070a9	    0x41bd01020000	                         mov r13d, 0x201	      3593	ldlang.c	FUNCTION_86
0x40070af	              0x55	                                push rbp	      3593	ldlang.c	FUNCTION_86
0x40070b0	              0x53	                                push rbx	      3593	ldlang.c	FUNCTION_86
0x40070b1	          0x4989f4	                            mov r12, rsi	      3593	ldlang.c	FUNCTION_86
0x40070b4	          0x4889fb	                            mov rbx, rdi	      3593	ldlang.c	FUNCTION_86
0x40070b7	          0x4889d5	                            mov rbp, rdx	      3593	ldlang.c	FUNCTION_86
0x40070ba	        0x4883ec08	                              sub rsp, 8	      3593	ldlang.c	FUNCTION_86
0x40070be	            0x6690	                                     nop	      3593	ldlang.c	FUNCTION_86
0x40070c0	        0x837b080f	                cmp dword [rbx + 8], 0xf	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40070c4	            0x7722	                            ja 0x40070e8	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40070c6	          0x8b4308	                mov eax, dword [rbx + 8]	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40070c9	    0xff24c5000000	                       jmp qword [rax*8]	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40070d0	    0x488b3d000000	            mov rdi, qword [0x040070d7] 	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40070d7	          0x4889ea	                            mov rdx, rbp	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40070da	          0x4c89e6	                            mov rsi, r12	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40070dd	      0xe8beffffff	   call sym.map_input_to_output_sections	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40070e2	    0x660f1f440000	                    nop word [rax + rax]	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x40070e8	          0x488b1b	                    mov rbx, qword [rbx]	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40070eb	          0x4885db	                           test rbx, rbx	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40070ee	            0x75d0	                           jne 0x40070c0	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40070f0	        0x4883c408	                              add rsp, 8	      3715	ldlang.c	FUNCTION_86
0x40070f4	              0x5b	                                 pop rbx	      3715	ldlang.c	FUNCTION_86
0x40070f5	              0x5d	                                 pop rbp	      3715	ldlang.c	FUNCTION_86
0x40070f6	            0x415c	                                 pop r12	      3715	ldlang.c	FUNCTION_86
0x40070f8	            0x415d	                                 pop r13	      3715	ldlang.c	FUNCTION_86
0x40070fa	            0xf3c3	                                     ret	      3715	ldlang.c	FUNCTION_86
0x40070fc	         0xf1f4000	                         nop dword [rax]	      3715	ldlang.c	FUNCTION_86
0x4007100	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      3631	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007104	            0xebe2	                           jmp 0x40070e8	      3632	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3632	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007110	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3641	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_6
0x4007114	      0xe887dbffff	                    call sym.exp_init_os	      3641	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_6
0x4007119	    0x8b858c000000	            mov eax, dword [rbp + 0x8c] 	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x400711f	          0x83f802	                              cmp eax, 2	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x4007122	     0xf84b0010000	                            je 0x40072d8	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x4007128	            0x31f6	                            xor esi, esi	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400712a	          0x83f803	                              cmp eax, 3	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400712d	        0x400f95c6	                               setne sil	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007131	    0x8db476000100	         lea esi, [rsi + rsi*2 + 0x100] 	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007138	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x400713c	          0x4885c0	                           test rax, rax	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x400713f	     0xf8481010000	                            je 0x40072c6	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x4007145	           0x97020	              or dword [rax + 0x20], esi	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x4007148	            0xeb9e	                           jmp 0x40070e8	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x400714a	    0x660f1f440000	                    nop word [rax + rax]	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x4007150	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x4007154	          0x4889ea	                            mov rdx, rbp	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x4007157	          0x4c89e6	                            mov rsi, r12	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x400715a	      0xe841ffffff	   call sym.map_input_to_output_sections	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x400715f	            0xeb87	                           jmp 0x40070e8	      3637	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007161	     0xf1f80000000	                         nop dword [rax]	      3637	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007168	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2901	ldlang.c	FUNCTION_67	IF_1
0x400716c	          0x4885c0	                           test rax, rax	      2901	ldlang.c	FUNCTION_67	IF_1
0x400716f	            0x740a	                            je 0x400717b	      2901	ldlang.c	FUNCTION_67	IF_1
0x4007171	        0x83781801	               cmp dword [rax + 0x18], 1	      2902	ldlang.c	FUNCTION_67	IF_1
0x4007175	     0xf8495010000	                            je 0x4007310	      2902	ldlang.c	FUNCTION_67	IF_1
0x400717b	          0x4889ea	                            mov rdx, rbp	      2917	ldlang.c	FUNCTION_67	CALL_3
0x400717e	      0xbe00000000	                              mov esi, 0	      2917	ldlang.c	FUNCTION_67	CALL_3
0x4007183	          0x4889df	                            mov rdi, rbx	      2917	ldlang.c	FUNCTION_67	CALL_3
0x4007186	      0xe855fcffff	                      call sym.walk_wild	      2917	ldlang.c	FUNCTION_67	CALL_3
0x400718b	    0x48833d000000	               cmp qword [0x04007193], 0	      2919	ldlang.c	FUNCTION_67	IF_3
0x4007193	     0xf854fffffff	                           jne 0x40070e8	      2919	ldlang.c	FUNCTION_67	IF_3
0x4007199	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x400719d	          0x4885c0	                           test rax, rax	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40071a0	            0x751a	                           jne 0x40071bc	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40071a2	      0xe941ffffff	                           jmp 0x40070e8	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40071a7	    0x660f1f840000	                    nop word [rax + rax]	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40071b0	          0x488b00	                    mov rax, qword [rax]	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40071b3	          0x4885c0	                           test rax, rax	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40071b6	     0xf842cffffff	                            je 0x40070e8	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x40071bc	        0x488b7008	                mov rsi, qword [rax + 8]	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071c0	          0x4885f6	                           test rsi, rsi	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071c3	            0x74eb	                            je 0x40071b0	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071c5	      0xbf00000000	                              mov edi, 0	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071ca	      0xb907000000	                              mov ecx, 7	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071d1	            0x75dd	                           jne 0x40071b0	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071d3	    0x48892d000000	            mov qword [0x040071da], rbp 	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071da	      0xe909ffffff	                           jmp 0x40070e8	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071df	              0x90	                                     nop	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x40071e0	          0x4885ed	                           test rbp, rbp	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40071e3	            0x740b	                            je 0x40071f0	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40071e5	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40071ea	     0xf8460010000	                            je 0x4007350	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x40071f0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3682	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_10
0x40071f4	      0xe8a7daffff	                    call sym.exp_init_os	      3682	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_10
0x40071f9	      0xe9eafeffff	                           jmp 0x40070e8	      3683	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40071fe	            0x6690	                                     nop	      3683	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007200	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x4007206	            0x85c0	                           test eax, eax	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x4007208	     0xf84ea000000	                            je 0x40072f8	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x400720e	      0x2d7c010000	                          sub eax, 0x17c	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x4007213	          0x83f801	                              cmp eax, 1	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x4007216	     0xf87ccfeffff	                            ja 0x40070e8	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x400721c	    0x808b90000000	                 or byte [rbx + 0x90], 4	      3616	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x4007223	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x4007227	          0x4889de	                            mov rsi, rbx	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x400722a	      0xe8d1fdffff	           call sym.check_input_sections	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x400722f	     0xfb683900000	           movzx eax, byte [rbx + 0x90] 	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4007236	            0x31d2	                            xor edx, edx	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4007238	          0xc0e802	                               shr al, 2	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400723b	          0x83e001	                              and eax, 1	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400723e	    0x81bb84000000	          cmp dword [rbx + 0x84], 0x17c 	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4007248	           0xf94c2	                                 sete dl	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400724b	            0x39d0	                            cmp eax, edx	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400724d	     0xf84a5000000	                            je 0x40072f8	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4007253	    0xc78384000000	     mov dword [rbx + 0x84], 0xffffffff 	      3620	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x400725d	      0xe986feffff	                           jmp 0x40070e8	      3621	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4007262	    0x660f1f440000	                    nop word [rax + rax]	      3621	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x4007268	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400726c	          0x4885c0	                           test rax, rax	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400726f	            0x740b	                            je 0x400727c	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4007271	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4007274	            0x85c0	                           test eax, eax	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4007276	     0xf856cfeffff	                           jne 0x40070e8	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400727c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x4007280	      0xba01000000	                              mov edx, 1	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x4007285	            0x31f6	                            xor esi, esi	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x4007287	      0xe800000000	                          call 0x400728c	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x400728c	      0x4883783800	               cmp qword [rax + 0x38], 0	      3707	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	IF_9
0x4007291	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3706	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4007295	        0x48895058	             mov qword [rax + 0x58], rdx	      3706	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4007299	     0xf8549feffff	                           jne 0x40070e8	      3707	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	IF_9
0x400729f	            0x31f6	                            xor esi, esi	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40072a1	          0x4889c7	                            mov rdi, rax	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40072a4	      0xe897daffff	                        call sym.init_os	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40072a9	      0xe93afeffff	                           jmp 0x40070e8	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40072ae	            0x6690	                                     nop	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40072b0	          0x4885ed	                           test rbp, rbp	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40072b3	     0xf842ffeffff	                            je 0x40070e8	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40072b9	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40072be	     0xf8524feffff	                           jne 0x40070e8	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x40072c4	            0x31f6	                            xor esi, esi	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40072c6	          0x4889ef	                            mov rdi, rbp	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40072c9	      0xe872daffff	                        call sym.init_os	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40072ce	      0xe915feffff	                           jmp 0x40070e8	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40072d3	       0xf1f440000	                   nop dword [rax + rax]	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x40072d8	    0x488b05000000	            mov rax, qword [0x040072df] 	      3654	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	IF_4
0x40072df	      0xbe00030000	                          mov esi, 0x300	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40072e4	        0x488b4008	                mov rax, qword [rax + 8]	      3654	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	IF_4
0x40072e8	        0x83780805	                  cmp dword [rax + 8], 5	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40072ec	        0x410f44f5	                         cmove esi, r13d	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40072f0	      0xe943feffff	                           jmp 0x4007138	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40072f5	           0xf1f00	                         nop dword [rax]	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x40072f8	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40072fc	          0x4889da	                            mov rdx, rbx	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40072ff	          0x4c89e6	                            mov rsi, r12	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x4007302	      0xe899fdffff	   call sym.map_input_to_output_sections	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x4007307	      0xe9dcfdffff	                           jmp 0x40070e8	      3627	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400730c	         0xf1f4000	                         nop dword [rax]	      3627	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4007310	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      2903	ldlang.c	FUNCTION_67	IF_1
0x4007313	            0x85d2	                           test edx, edx	      2903	ldlang.c	FUNCTION_67	IF_1
0x4007315	     0xf8560feffff	                           jne 0x400717b	      2903	ldlang.c	FUNCTION_67	IF_1
0x400731b	      0xbe00000000	                              mov esi, 0	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x4007320	          0x4889ea	                            mov rdx, rbp	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x4007323	          0x4889df	                            mov rdi, rbx	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x4007326	      0xe8b5faffff	                      call sym.walk_wild	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x400732b	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	      2909	ldlang.c	FUNCTION_67	IF_1
0x400732f	          0x4885f6	                           test rsi, rsi	      2910	ldlang.c	FUNCTION_67	IF_1	IF_2
0x4007332	     0xf8453feffff	                            je 0x400718b	      2910	ldlang.c	FUNCTION_67	IF_1	IF_2
0x4007338	          0x4889ea	                            mov rdx, rbp	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x400733b	          0x4889df	                            mov rdi, rbx	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x400733e	      0xe8fde8ffff	call sym.output_section_callback_tree_to_list	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x4007343	    0x48c743700000	               mov qword [rbx + 0x70], 0	      2913	ldlang.c	FUNCTION_67	IF_1	IF_2
0x400734b	      0xe93bfeffff	                           jmp 0x400718b	      2913	ldlang.c	FUNCTION_67	IF_1	IF_2
0x4007350	            0x31f6	                            xor esi, esi	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x4007352	          0x4889ef	                            mov rdi, rbp	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x4007355	      0xe8e6d9ffff	                        call sym.init_os	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x400735a	      0xe991feffff	                           jmp 0x40071f0	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
ldlang_add_undef	CALL,3:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,0	29
0x4006140	              0x55	                                push rbp	      3388	ldlang.c	FUNCTION_79
0x4006141	              0x53	                                push rbx	      3388	ldlang.c	FUNCTION_79
0x4006142	            0x31c0	                            xor eax, eax	      3391	ldlang.c	FUNCTION_79
0x4006144	          0x4889fd	                            mov rbp, rdi	      3388	ldlang.c	FUNCTION_79
0x4006147	      0xbf10000000	                           mov edi, 0x10	      3392	ldlang.c	FUNCTION_79	CALL_1
0x400614c	        0x4883ec08	                              sub rsp, 8	      3388	ldlang.c	FUNCTION_79
0x4006150	     0xb3500000000	              or esi, dword [0x04006156]	      3391	ldlang.c	FUNCTION_79
0x4006156	           0xf95c0	                                setne al	      3391	ldlang.c	FUNCTION_79
0x4006159	    0x890500000000	            mov dword [0x0400615f], eax 	      3391	ldlang.c	FUNCTION_79
0x400615f	      0xe800000000	                          call 0x4006164	      3392	ldlang.c	FUNCTION_79	CALL_1
0x4006164	          0x4889c3	                            mov rbx, rax	      3392	ldlang.c	FUNCTION_79	CALL_1
0x4006167	    0x488b05000000	            mov rax, qword [0x0400616e] 	      3393	ldlang.c	FUNCTION_79
0x400616e	          0x4889ef	                            mov rdi, rbp	      3396	ldlang.c	FUNCTION_79	CALL_2
0x4006171	          0x488903	                    mov qword [rbx], rax	      3393	ldlang.c	FUNCTION_79
0x4006174	    0x48891d000000	            mov qword [0x0400617b], rbx 	      3394	ldlang.c	FUNCTION_79
0x400617b	      0xe800000000	                          call 0x4006180	      3396	ldlang.c	FUNCTION_79	CALL_2
0x4006180	    0x48833d000000	               cmp qword [0x04006188], 0	      3398	ldlang.c	FUNCTION_79	IF_1
0x4006188	        0x48894308	                mov qword [rbx + 8], rax	      3396	ldlang.c	FUNCTION_79	CALL_2
0x400618c	            0x7412	                            je 0x40061a0	      3398	ldlang.c	FUNCTION_79	IF_1
0x400618e	        0x4883c408	                              add rsp, 8	      3400	ldlang.c	FUNCTION_79
0x4006192	          0x4889c7	                            mov rdi, rax	      3399	ldlang.c	FUNCTION_79	CALL_3
0x4006195	              0x5b	                                 pop rbx	      3400	ldlang.c	FUNCTION_79
0x4006196	              0x5d	                                 pop rbp	      3400	ldlang.c	FUNCTION_79
0x4006197	      0xe9e4a7ffff	                jmp sym.insert_undefined	      3399	ldlang.c	FUNCTION_79	CALL_3
0x400619c	         0xf1f4000	                         nop dword [rax]	      3399	ldlang.c	FUNCTION_79	CALL_3
0x40061a0	        0x4883c408	                              add rsp, 8	      3400	ldlang.c	FUNCTION_79
0x40061a4	              0x5b	                                 pop rbx	      3400	ldlang.c	FUNCTION_79
0x40061a5	              0x5d	                                 pop rbp	      3400	ldlang.c	FUNCTION_79
0x40061a6	              0xc3	                                     ret	      3400	ldlang.c	FUNCTION_79
lang_enter_output_section_statement	CALL,8:functions,0:WHILE,0:FOR,0:IF,3:DO,0:SWITCH,0:ELSE,1	110
0x4007780	            0x4157	                                push r15	      6703	ldlang.c	FUNCTION_146
0x4007782	            0x4156	                                push r14	      6703	ldlang.c	FUNCTION_146
0x4007784	          0x4989f7	                            mov r15, rsi	      6703	ldlang.c	FUNCTION_146
0x4007787	            0x4155	                                push r13	      6703	ldlang.c	FUNCTION_146
0x4007789	            0x4154	                                push r12	      6703	ldlang.c	FUNCTION_146
0x400778b	          0x4189d6	                           mov r14d, edx	      6703	ldlang.c	FUNCTION_146
0x400778e	              0x55	                                push rbp	      6703	ldlang.c	FUNCTION_146
0x400778f	              0x53	                                push rbx	      6703	ldlang.c	FUNCTION_146
0x4007790	      0xba01000000	                              mov edx, 1	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4007795	          0x4989cc	                            mov r12, rcx	      6703	ldlang.c	FUNCTION_146
0x4007798	          0x4d89c5	                             mov r13, r8	      6703	ldlang.c	FUNCTION_146
0x400779b	          0x4c89cb	                             mov rbx, r9	      6703	ldlang.c	FUNCTION_146
0x400779e	        0x4883ec08	                              sub rsp, 8	      6703	ldlang.c	FUNCTION_146
0x40077a2	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      6706	ldlang.c	FUNCTION_146	CALL_1
0x40077a6	      0xe800000000	                          call 0x40077ab	      6706	ldlang.c	FUNCTION_146	CALL_1
0x40077ab	      0x4883785800	               cmp qword [rax + 0x58], 0	      6710	ldlang.c	FUNCTION_146	IF_1
0x40077b0	          0x4889c5	                            mov rbp, rax	      6706	ldlang.c	FUNCTION_146	CALL_1
0x40077b3	    0x488905000000	            mov qword [0x040077ba], rax 	      6708	ldlang.c	FUNCTION_146
0x40077ba	     0xf8440010000	                            je 0x4007900	      6710	ldlang.c	FUNCTION_146	IF_1
0x40077c0	        0x4183fe02	                             cmp r14d, 2	      6716	ldlang.c	FUNCTION_146	IF_2
0x40077c4	      0xba00000000	                              mov edx, 0	      6716	ldlang.c	FUNCTION_146	IF_2
0x40077c9	      0xb800020000	                          mov eax, 0x200	      6716	ldlang.c	FUNCTION_146	IF_2
0x40077ce	           0xf45c2	                         cmovne eax, edx	      6716	ldlang.c	FUNCTION_146	IF_2
0x40077d1	    0x4489b58c0000	           mov dword [rbp + 0x8c], r14d 	      6714	ldlang.c	FUNCTION_146
0x40077d8	    0xc74578010000	               mov dword [rbp + 0x78], 1	      6719	ldlang.c	FUNCTION_146
0x40077df	    0x898588000000	            mov dword [rbp + 0x88], eax 	      6716	ldlang.c	FUNCTION_146	IF_2
0x40077e5	    0x488b05000000	            mov rax, qword [0x040077ec] 	      1016	ldlang.c	FUNCTION_31	IF_1
0x40077ec	        0x488d5510	                   lea rdx, [rbp + 0x10]	      6722	ldlang.c	FUNCTION_146	CALL_2
0x40077f0	    0x483d00000000	                              cmp rax, 0	      1016	ldlang.c	FUNCTION_31	IF_1
0x40077f6	     0xf830d010000	                           jae 0x4007909	      1016	ldlang.c	FUNCTION_31	IF_1
0x40077fc	        0x488d4808	                      lea rcx, [rax + 8]	      1018	ldlang.c	FUNCTION_31
0x4007800	    0x817c24488001	          cmp dword [rsp + 0x48], 0x180 	      6724	ldlang.c	FUNCTION_146
0x4007808	    0x48890d000000	            mov qword [0x0400780f], rcx 	      1018	ldlang.c	FUNCTION_31
0x400780f	    0x488b0d000000	            mov rcx, qword [0x04007816] 	      1018	ldlang.c	FUNCTION_31
0x4007816	          0x488908	                    mov qword [rax], rcx	      1018	ldlang.c	FUNCTION_31
0x4007819	    0x488915000000	            mov qword [0x04007820], rdx 	      1019	ldlang.c	FUNCTION_31
0x4007820	           0xf94c0	                                 sete al	      6724	ldlang.c	FUNCTION_146
0x4007823	     0xfb695900000	           movzx edx, byte [rbp + 0x90] 	      6724	ldlang.c	FUNCTION_146
0x400782a	          0xc1e006	                              shl eax, 6	      6724	ldlang.c	FUNCTION_146
0x400782d	          0x83e2bf	                     and edx, 0xffffffbf	      6724	ldlang.c	FUNCTION_146
0x4007830	             0x9d0	                             or eax, edx	      6724	ldlang.c	FUNCTION_146
0x4007832	            0xa840	                           test al, 0x40	      6725	ldlang.c	FUNCTION_146	IF_3
0x4007834	    0x888590000000	               mov byte [rbp + 0x90], al	      6724	ldlang.c	FUNCTION_146
0x400783a	            0x7422	                            je 0x400785e	      6725	ldlang.c	FUNCTION_146	IF_3
0x400783c	          0x4d85e4	                           test r12, r12	      6725	ldlang.c	FUNCTION_146	IF_3
0x400783f	            0x741d	                            je 0x400785e	      6725	ldlang.c	FUNCTION_146	IF_3
0x4007841	      0xbe00000000	                              mov esi, 0	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4007846	            0x31ff	                            xor edi, edi	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4007848	      0xba05000000	                              mov edx, 5	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x400784d	      0xe800000000	                          call 0x4007852	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4007852	            0x31f6	                            xor esi, esi	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4007854	          0x4889c7	                            mov rdi, rax	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4007857	            0x31c0	                            xor eax, eax	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4007859	      0xe800000000	                          call 0x400785e	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x400785e	      0xba00000000	                              mov edx, 0	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4007863	      0xbeffffffff	                     mov esi, 0xffffffff	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4007868	          0x4c89ef	                            mov rdi, r13	      6730	ldlang.c	FUNCTION_146	CALL_6
0x400786b	      0xe800000000	                          call 0x4007870	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4007870	            0x85c0	                           test eax, eax	      6681	ldlang.c	FUNCTION_145	IF_1
0x4007872	      0xbaffffffff	                     mov edx, 0xffffffff	      6682	ldlang.c	FUNCTION_145	IF_1
0x4007877	            0x781d	                            js 0x4007896	      6681	ldlang.c	FUNCTION_145	IF_1
0x4007879	            0x31d2	                            xor edx, edx	      6681	ldlang.c	FUNCTION_145	IF_1
0x400787b	      0xb901000000	                              mov ecx, 1	      6681	ldlang.c	FUNCTION_145	IF_1
0x4007880	            0xeb10	                           jmp 0x4007892	      6681	ldlang.c	FUNCTION_145	IF_1
0x4007882	    0x660f1f440000	                    nop word [rax + rax]	      6681	ldlang.c	FUNCTION_145	IF_1
0x4007888	          0x83c201	                              add edx, 1	      6684	ldlang.c	FUNCTION_145	FOR_1
0x400788b	             0x1c9	                            add ecx, ecx	      6688	ldlang.c	FUNCTION_145	FOR_1
0x400788d	          0x83fa20	                           cmp edx, 0x20	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4007890	            0x7466	                            je 0x40078f8	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4007892	            0x39c8	                            cmp eax, ecx	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4007894	            0x77f2	                            ja 0x4007888	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4007896	          0x89557c	            mov dword [rbp + 0x7c], edx 	      6729	ldlang.c	FUNCTION_146
0x4007899	      0xbeffffffff	                     mov esi, 0xffffffff	      6732	ldlang.c	FUNCTION_146	CALL_8
0x400789e	      0xba00000000	                              mov edx, 0	      6732	ldlang.c	FUNCTION_146	CALL_8
0x40078a3	          0x4c89e7	                            mov rdi, r12	      6732	ldlang.c	FUNCTION_146	CALL_8
0x40078a6	      0xe800000000	                          call 0x40078ab	      6732	ldlang.c	FUNCTION_146	CALL_8
0x40078ab	            0x85c0	                           test eax, eax	      6681	ldlang.c	FUNCTION_145	IF_1
0x40078ad	      0xbaffffffff	                     mov edx, 0xffffffff	      6682	ldlang.c	FUNCTION_145	IF_1
0x40078b2	            0x781a	                            js 0x40078ce	      6681	ldlang.c	FUNCTION_145	IF_1
0x40078b4	            0x31d2	                            xor edx, edx	      6681	ldlang.c	FUNCTION_145	IF_1
0x40078b6	      0xb901000000	                              mov ecx, 1	      6681	ldlang.c	FUNCTION_145	IF_1
0x40078bb	            0xeb0d	                           jmp 0x40078ca	      6681	ldlang.c	FUNCTION_145	IF_1
0x40078bd	           0xf1f00	                         nop dword [rax]	      6681	ldlang.c	FUNCTION_145	IF_1
0x40078c0	          0x83c201	                              add edx, 1	      6684	ldlang.c	FUNCTION_145	FOR_1
0x40078c3	             0x1c9	                            add ecx, ecx	      6688	ldlang.c	FUNCTION_145	FOR_1
0x40078c5	          0x83fa20	                           cmp edx, 0x20	      6684	ldlang.c	FUNCTION_145	FOR_1
0x40078c8	            0x7426	                            je 0x40078f0	      6684	ldlang.c	FUNCTION_145	FOR_1
0x40078ca	            0x39c8	                            cmp eax, ecx	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x40078cc	            0x77f2	                            ja 0x40078c0	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x40078ce	    0x899580000000	            mov dword [rbp + 0x80], edx 	      6731	ldlang.c	FUNCTION_146
0x40078d4	        0x48895d60	            mov qword [rbp + 0x60], rbx 	      6734	ldlang.c	FUNCTION_146
0x40078d8	        0x4883c408	                              add rsp, 8	      6736	ldlang.c	FUNCTION_146
0x40078dc	              0x5b	                                 pop rbx	      6736	ldlang.c	FUNCTION_146
0x40078dd	          0x4889e8	                            mov rax, rbp	      6736	ldlang.c	FUNCTION_146
0x40078e0	              0x5d	                                 pop rbp	      6736	ldlang.c	FUNCTION_146
0x40078e1	            0x415c	                                 pop r12	      6736	ldlang.c	FUNCTION_146
0x40078e3	            0x415d	                                 pop r13	      6736	ldlang.c	FUNCTION_146
0x40078e5	            0x415e	                                 pop r14	      6736	ldlang.c	FUNCTION_146
0x40078e7	            0x415f	                                 pop r15	      6736	ldlang.c	FUNCTION_146
0x40078e9	              0xc3	                                     ret	      6736	ldlang.c	FUNCTION_146
0x40078ea	    0x660f1f440000	                    nop word [rax + rax]	      6736	ldlang.c	FUNCTION_146
0x40078f0	            0x31d2	                            xor edx, edx	      6691	ldlang.c	FUNCTION_145
0x40078f2	            0xebda	                           jmp 0x40078ce	      6691	ldlang.c	FUNCTION_145
0x40078f4	         0xf1f4000	                         nop dword [rax]	      6691	ldlang.c	FUNCTION_145
0x40078f8	            0x31d2	                            xor edx, edx	      6691	ldlang.c	FUNCTION_145
0x40078fa	            0xeb9a	                           jmp 0x4007896	      6691	ldlang.c	FUNCTION_145
0x40078fc	         0xf1f4000	                         nop dword [rax]	      6691	ldlang.c	FUNCTION_145
0x4007900	        0x4c897858	             mov qword [rax + 0x58], r15	      6712	ldlang.c	FUNCTION_146	IF_1
0x4007904	      0xe9b7feffff	                           jmp 0x40077c0	      6712	ldlang.c	FUNCTION_146	IF_1
0x4007909	      0xe800000000	                          call 0x400790e	      6712	ldlang.c	FUNCTION_146	IF_1
lang_map	CALL,21:functions,1:WHILE,1:FOR,1:IF,4:DO,0:SWITCH,0:ELSE,0	216
0x4005370	            0x4154	                                push r12	      2045	ldlang.c	FUNCTION_53
0x4005372	              0x55	                                push rbp	      2045	ldlang.c	FUNCTION_53
0x4005373	          0x4531e4	                          xor r12d, r12d	      2045	ldlang.c	FUNCTION_53
0x4005376	              0x53	                                push rbx	      2045	ldlang.c	FUNCTION_53
0x4005377	        0x4883ec70	                           sub rsp, 0x70	      2045	ldlang.c	FUNCTION_53
0x400537b	    0x488b2d000000	            mov rbp, qword [0x04005382] 	      2049	ldlang.c	FUNCTION_53
0x4005382	    0x64488b042528	                mov rax, qword fs:[0x28]	      2045	ldlang.c	FUNCTION_53
0x400538b	      0x4889442468	             mov qword [rsp + 0x68], rax	      2045	ldlang.c	FUNCTION_53
0x4005390	            0x31c0	                            xor eax, eax	      2045	ldlang.c	FUNCTION_53
0x4005392	          0x4885ed	                           test rbp, rbp	      2049	ldlang.c	FUNCTION_53
0x4005395	     0xf84b2000000	                            je 0x400544d	      2049	ldlang.c	FUNCTION_53
0x400539b	       0xf1f440000	                   nop dword [rax + rax]	      2049	ldlang.c	FUNCTION_53
0x40053a0	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40053a4	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40053a7	          0xc1e805	                              shr eax, 5	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40053aa	      0xa940100000	                        test eax, 0x1040	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40053af	     0xf858b000000	                           jne 0x4005440	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40053b5	        0xf6454810	           test byte [rbp + 0x48], 0x10 	      2054	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40053b9	     0xf8581000000	                           jne 0x4005440	      2054	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x40053bf	    0x488b9a900000	            mov rbx, qword [rdx + 0x90] 	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053c6	          0x4885db	                           test rbx, rbx	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053c9	            0x751b	                           jne 0x40053e6	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053cb	            0xeb73	                           jmp 0x4005440	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053cd	           0xf1f00	                         nop dword [rax]	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053d0	      0xbe01000000	                              mov esi, 1	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40053d5	          0x4889df	                            mov rdi, rbx	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40053d8	      0xe8b3c0ffff	            call sym.print_input_section	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40053dd	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053e1	          0x4885db	                           test rbx, rbx	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053e4	            0x745a	                            je 0x4005440	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x40053e6	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40053ea	          0x4885c0	                           test rax, rax	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40053ed	            0x7410	                            je 0x40053ff	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40053ef	    0x488b0d000000	            mov rcx, qword [0x040053f6] 	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40053f6	    0x483988f00000	            cmp qword [rax + 0xf0], rcx 	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40053fd	            0x74de	                            je 0x40053dd	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x40053ff	    0xf74320000030	      test dword [rbx + 0x20], 0x300000 	      2060	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4005406	            0x75d5	                           jne 0x40053dd	      2060	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4005408	          0x4585e4	                         test r12d, r12d	      2062	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x400540b	            0x75c3	                           jne 0x40053d0	      2062	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x400540d	      0xba05000000	                              mov edx, 5	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4005412	      0xbe00000000	                              mov esi, 0	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4005417	            0x31ff	                            xor edi, edi	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4005419	      0xe800000000	                          call 0x400541e	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x400541e	    0x488b3d000000	            mov rdi, qword [0x04005425] 	        97	stdio2.h	CALL_45
0x4005425	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_45
0x4005428	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x400542d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x400542f	    0x41bc01000000	                             mov r12d, 1	      2065	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x4005435	      0xe800000000	                          call 0x400543a	        97	stdio2.h	CALL_45
0x400543a	            0xeb94	                           jmp 0x40053d0	        97	stdio2.h	CALL_45
0x400543c	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_45
0x4005440	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	      2049	ldlang.c	FUNCTION_53
0x4005444	          0x4885ed	                           test rbp, rbp	      2049	ldlang.c	FUNCTION_53
0x4005447	     0xf8553ffffff	                           jne 0x40053a0	      2049	ldlang.c	FUNCTION_53
0x400544d	      0xba05000000	                              mov edx, 5	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4005452	      0xbe00000000	                              mov esi, 0	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4005457	            0x31ff	                            xor edi, edi	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4005459	      0xe800000000	                          call 0x400545e	      2072	ldlang.c	FUNCTION_53	CALL_2
0x400545e	          0x4889c7	                            mov rdi, rax	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4005461	            0x31c0	                            xor eax, eax	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4005463	      0xe800000000	                          call 0x4005468	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4005468	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x400546a	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x400546f	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4005474	      0xe800000000	                          call 0x4005479	      2073	ldlang.c	FUNCTION_53
0x4005479	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x400547b	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4005480	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4005485	          0x4989c4	                            mov r12, rax	      2073	ldlang.c	FUNCTION_53
0x4005488	      0xe800000000	                          call 0x400548d	      2073	ldlang.c	FUNCTION_53
0x400548d	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x400548f	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4005494	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4005499	          0x4889c5	                            mov rbp, rax	      2073	ldlang.c	FUNCTION_53
0x400549c	      0xe800000000	                          call 0x40054a1	      2073	ldlang.c	FUNCTION_53
0x40054a1	            0x31ff	                            xor edi, edi	      2073	ldlang.c	FUNCTION_53
0x40054a3	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x40054a8	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x40054ad	          0x4889c3	                            mov rbx, rax	      2073	ldlang.c	FUNCTION_53
0x40054b0	      0xe800000000	                          call 0x40054b5	      2073	ldlang.c	FUNCTION_53
0x40054b5	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_45
0x40054b9	    0x488b3d000000	            mov rdi, qword [0x040054c0] 	        97	stdio2.h	CALL_45
0x40054c0	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_45
0x40054c3	            0x4154	                                push r12	        97	stdio2.h	CALL_45
0x40054c5	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_45
0x40054c8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x40054cd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x40054cf	          0x4989d8	                             mov r8, rbx	        97	stdio2.h	CALL_45
0x40054d2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_45
0x40054d7	      0xe800000000	                          call 0x40054dc	        97	stdio2.h	CALL_45
0x40054dc	              0x59	                                 pop rcx	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40054dd	    0x488b2d000000	            mov rbp, qword [0x040054e4] 	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40054e4	              0x5e	                                 pop rsi	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40054e5	          0x4885ed	                           test rbp, rbp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40054e8	          0x4989e4	                            mov r12, rsp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40054eb	     0xf84e3000000	                            je 0x40055d4	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40054f1	     0xf1f80000000	                         nop dword [rax]	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40054f8	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_45
0x40054fc	    0x488b3d000000	            mov rdi, qword [0x04005503] 	        97	stdio2.h	CALL_45
0x4005503	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_45
0x4005508	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x400550d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x400550f	      0xe800000000	                          call 0x4005514	        97	stdio2.h	CALL_45
0x4005514	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        33	stdio2.h	FUNCTION_240	CALL_1
0x4005518	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_240	CALL_1
0x400551d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_240	CALL_1
0x4005522	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_240	CALL_1
0x4005527	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_240	CALL_1
0x400552a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_240	CALL_1
0x400552c	      0xe800000000	                          call 0x4005531	        33	stdio2.h	FUNCTION_240	CALL_1
0x4005531	          0x4c89e6	                            mov rsi, r12	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4005534	      0xbf00000000	                              mov edi, 0	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4005539	            0x31c0	                            xor eax, eax	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x400553b	      0xe800000000	                          call 0x4005540	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4005540	          0x4c89e2	                            mov rdx, r12	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005543	            0x8b0a	                    mov ecx, dword [rdx]	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005545	        0x4883c204	                              add rdx, 4	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005549	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400554f	            0xf7d1	                                 not ecx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005551	            0x21c8	                            and eax, ecx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005553	      0x2580808080	                     and eax, 0x80808080	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005558	            0x74e9	                            je 0x4005543	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400555a	            0x89c1	                            mov ecx, eax	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400555c	          0xc1e910	                           shr ecx, 0x10	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400555f	      0xa980800000	                        test eax, 0x8080	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005564	           0xf44c1	                          cmove eax, ecx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005567	        0x488d4a02	                      lea rcx, [rdx + 2]	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400556b	            0x89c7	                            mov edi, eax	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400556d	        0x480f44d1	                          cmove rdx, rcx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005571	          0x4000c7	                             add dil, al	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005574	        0x4883da03	                              sbb rdx, 3	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005578	          0x4c29e2	                            sub rdx, r12	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x400557b	          0x83fa0f	                            cmp edx, 0xf	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x400557e	            0x89d3	                            mov ebx, edx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4005580	            0x7f13	                            jg 0x4005595	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4005582	    0x660f1f440000	                    nop word [rax + rax]	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4005588	          0x83c301	                              add ebx, 1	      2089	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x400558b	      0xe800000000	                          call 0x4005590	      2088	ldlang.c	FUNCTION_53	FOR_1	WHILE_1	CALL_9
0x4005590	          0x83fb10	                           cmp ebx, 0x10	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4005593	            0x75f3	                           jne 0x4005588	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4005595	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4005599	            0x31c0	                            xor eax, eax	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x400559b	      0xbf00000000	                              mov edi, 0	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x40055a0	      0xe800000000	                          call 0x40055a5	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x40055a5	      0x48837d4800	               cmp qword [rbp + 0x48], 0	      2093	ldlang.c	FUNCTION_53	FOR_1	IF_1
0x40055aa	            0x7416	                            je 0x40055c2	      2093	ldlang.c	FUNCTION_53	FOR_1	IF_1
0x40055ac	          0x8b5548	            mov edx, dword [rbp + 0x48] 	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x40055af	            0x85d2	                           test edx, edx	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x40055b1	     0xf85d9000000	                           jne 0x4005690	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x40055b7	          0x8b454c	            mov eax, dword [rbp + 0x4c] 	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x40055ba	            0x85c0	                           test eax, eax	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x40055bc	     0xf85ae000000	                           jne 0x4005670	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x40055c2	      0xe800000000	                          call 0x40055c7	      2111	ldlang.c	FUNCTION_53	FOR_1	CALL_16
0x40055c7	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40055cb	          0x4885ed	                           test rbp, rbp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40055ce	     0xf8524ffffff	                           jne 0x40054f8	      2076	ldlang.c	FUNCTION_53	FOR_1
0x40055d4	            0x31ff	                            xor edi, edi	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40055d6	      0xba05000000	                              mov edx, 5	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40055db	      0xbe00000000	                              mov esi, 0	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40055e0	      0xe800000000	                          call 0x40055e5	      2114	ldlang.c	FUNCTION_53	CALL_17
0x40055e5	    0x488b3d000000	            mov rdi, qword [0x040055ec] 	        97	stdio2.h	CALL_45
0x40055ec	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_45
0x40055ef	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x40055f4	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x40055f6	      0xe800000000	                          call 0x40055fb	        97	stdio2.h	CALL_45
0x40055fb	    0xf60500000000	           test byte [0x04005602], 0x10 	      2116	ldlang.c	FUNCTION_53	IF_4
0x4005602	     0xf849a000000	                            je 0x40056a2	      2116	ldlang.c	FUNCTION_53	IF_4
0x4005608	    0x488b1d000000	            mov rbx, qword [0x0400560f] 	      4607	ldlang.c	FUNCTION_106	CALL_1
0x400560f	    0x830500000000	               add dword [0x04005616], 1	      2121	ldlang.c	FUNCTION_53
0x4005616	    0x488b2d000000	            mov rbp, qword [0x0400561d] 	      4607	ldlang.c	FUNCTION_106	CALL_1
0x400561d	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4005620	            0x7419	                            je 0x400563b	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4005622	    0x660f1f440000	                    nop word [rax + rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4005628	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400562b	          0x4889ee	                            mov rsi, rbp	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400562e	      0xe84dc1ffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4005633	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4005636	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4005639	            0x75ed	                           jne 0x4005628	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x400563b	    0x488b15000000	            mov rdx, qword [0x04005642] 	      2124	ldlang.c	FUNCTION_53	CALL_21
0x4005642	    0x488b3d000000	            mov rdi, qword [0x04005649] 	      2124	ldlang.c	FUNCTION_53	CALL_21
0x4005649	      0xbe00000000	                              mov esi, 0	      2124	ldlang.c	FUNCTION_53	CALL_21
0x400564e	      0xe800000000	                          call 0x4005653	      2124	ldlang.c	FUNCTION_53	CALL_21
0x4005653	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      2126	ldlang.c	FUNCTION_53
0x4005658	    0x644833042528	                xor rax, qword fs:[0x28]	      2126	ldlang.c	FUNCTION_53
0x4005661	            0x7573	                           jne 0x40056d6	      2126	ldlang.c	FUNCTION_53
0x4005663	        0x4883c470	                           add rsp, 0x70	      2126	ldlang.c	FUNCTION_53
0x4005667	              0x5b	                                 pop rbx	      2126	ldlang.c	FUNCTION_53
0x4005668	              0x5d	                                 pop rbp	      2126	ldlang.c	FUNCTION_53
0x4005669	            0x415c	                                 pop r12	      2126	ldlang.c	FUNCTION_53
0x400566b	              0xc3	                                     ret	      2126	ldlang.c	FUNCTION_53
0x400566c	         0xf1f4000	                         nop dword [rax]	      2126	ldlang.c	FUNCTION_53
0x4005670	      0xbf00000000	                              mov edi, 0	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x4005675	            0x31c0	                            xor eax, eax	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x4005677	      0xe800000000	                          call 0x400567c	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x400567c	          0x8b7d4c	            mov edi, dword [rbp + 0x4c] 	      2107	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_15
0x400567f	      0xe8fcadffff	                 call sym.lang_map_flags	      2107	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_15
0x4005684	      0xe939ffffff	                           jmp 0x40055c2	      2107	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_15
0x4005689	     0xf1f80000000	                         nop dword [rax]	      2107	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_15
0x4005690	      0xe800000000	                          call 0x4005695	      2100	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_12
0x4005695	          0x8b7d48	            mov edi, dword [rbp + 0x48] 	      2101	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_13
0x4005698	      0xe8e3adffff	                 call sym.lang_map_flags	      2101	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_13
0x400569d	      0xe915ffffff	                           jmp 0x40055b7	      2101	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_13
0x40056a2	            0x31d2	                            xor edx, edx	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x40056a4	    0x41b800000000	                              mov r8d, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x40056aa	      0xb900000000	                              mov ecx, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x40056af	      0xbee8030000	                          mov esi, 0x3e8	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x40056b4	      0xbf00000000	                              mov edi, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x40056b9	      0xe800000000	                          call 0x40056be	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x40056be	    0x488b3d000000	            mov rdi, qword [0x040056c5] 	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x40056c5	            0x31d2	                            xor edx, edx	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x40056c7	      0xbe00000000	                              mov esi, 0	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x40056cc	      0xe800000000	                          call 0x40056d1	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x40056d1	      0xe932ffffff	                           jmp 0x4005608	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x40056d6	      0xe800000000	                          call 0x40056db	      2126	ldlang.c	FUNCTION_53
new_afile	CALL,4:functions,0:WHILE,0:FOR,0:IF,2:DO,0:SWITCH,1:ELSE,2	130
0x4003530	            0x85c9	                           test ecx, ecx	      1065	ldlang.c	FUNCTION_34	IF_1
0x4003532	            0x4156	                                push r14	      1060	ldlang.c	FUNCTION_34
0x4003534	    0xc70500000000	               mov dword [0x0400353e], 1	      1063	ldlang.c	FUNCTION_34
0x400353e	            0x4155	                                push r13	      1060	ldlang.c	FUNCTION_34
0x4003540	          0x4989d5	                            mov r13, rdx	      1060	ldlang.c	FUNCTION_34
0x4003543	            0x4154	                                push r12	      1060	ldlang.c	FUNCTION_34
0x4003545	          0x4189f4	                           mov r12d, esi	      1060	ldlang.c	FUNCTION_34
0x4003548	              0x55	                                push rbp	      1060	ldlang.c	FUNCTION_34
0x4003549	          0x4889fd	                            mov rbp, rdi	      1060	ldlang.c	FUNCTION_34
0x400354c	              0x53	                                push rbx	      1060	ldlang.c	FUNCTION_34
0x400354d	     0xf84bd000000	                            je 0x4003610	      1065	ldlang.c	FUNCTION_34	IF_1
0x4003553	    0x4c8b35000000	            mov r14, qword [0x0400355a] 	      1066	ldlang.c	FUNCTION_34	IF_1
0x400355a	      0xbf58000000	                           mov edi, 0x58	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400355f	      0xe800000000	                          call 0x4003564	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4003564	          0x4889c3	                            mov rbx, rax	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4003567	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400356e	    0xc74008020000	                  mov dword [rax + 8], 2	      1040	ldlang.c	FUNCTION_33
0x4003575	        0x498b4608	                mov rax, qword [r14 + 8]	      7673	ldlang.c	FUNCTION_179
0x4003579	          0x488918	                    mov qword [rax], rbx	      7673	ldlang.c	FUNCTION_179
0x400357c	        0x49895e08	                mov qword [r14 + 8], rbx	      7674	ldlang.c	FUNCTION_179
0x4003580	        0x488d7b28	                   lea rdi, [rbx + 0x28]	        90	string3.h	FUNCTION_231	CALL_5
0x4003584	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_231	CALL_5
0x4003586	    0x48c743200000	               mov qword [rbx + 0x20], 0	        90	string3.h	FUNCTION_231	CALL_5
0x400358e	    0x48c743500000	               mov qword [rbx + 0x50], 0	        90	string3.h	FUNCTION_231	CALL_5
0x4003596	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_231	CALL_5
0x400359a	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_231	CALL_5
0x400359c	          0x8d4858	                   lea ecx, [rax + 0x58]	        90	string3.h	FUNCTION_231	CALL_5
0x400359f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_231	CALL_5
0x40035a1	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_231	CALL_5
0x40035a4	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_231	CALL_5
0x40035a7	        0x4c896b40	             mov qword [rbx + 0x40], r13	      1077	ldlang.c	FUNCTION_34
0x40035ab	     0xfb605000000	           movzx eax, byte [0x040035b2] 	      1078	ldlang.c	FUNCTION_34
0x40035b2	         0xfb67348	           movzx esi, byte [rbx + 0x48] 	      1078	ldlang.c	FUNCTION_34
0x40035b6	            0x89c1	                            mov ecx, eax	      1078	ldlang.c	FUNCTION_34
0x40035b8	          0x83e69f	                     and esi, 0xffffff9f	      1078	ldlang.c	FUNCTION_34
0x40035bb	            0x89c2	                            mov edx, eax	      1079	ldlang.c	FUNCTION_34
0x40035bd	          0x83e120	                           and ecx, 0x20	      1078	ldlang.c	FUNCTION_34
0x40035c0	          0x83e240	                           and edx, 0x40	      1079	ldlang.c	FUNCTION_34
0x40035c3	          0x83e080	                     and eax, 0xffffff80	      1080	ldlang.c	FUNCTION_34
0x40035c6	             0x9f1	                             or ecx, esi	      1079	ldlang.c	FUNCTION_34
0x40035c8	         0xfb67349	           movzx esi, byte [rbx + 0x49] 	      1081	ldlang.c	FUNCTION_34
0x40035cc	             0x9d1	                             or ecx, edx	      1079	ldlang.c	FUNCTION_34
0x40035ce	            0x89c2	                            mov edx, eax	      1080	ldlang.c	FUNCTION_34
0x40035d0	            0x89c8	                            mov eax, ecx	      1080	ldlang.c	FUNCTION_34
0x40035d2	     0xfb60d000000	           movzx ecx, byte [0x040035d9] 	      1081	ldlang.c	FUNCTION_34
0x40035d9	          0x83e077	                           and eax, 0x77	      1080	ldlang.c	FUNCTION_34
0x40035dc	          0x83e6fe	                     and esi, 0xfffffffe	      1081	ldlang.c	FUNCTION_34
0x40035df	             0x9d0	                             or eax, edx	      1082	ldlang.c	FUNCTION_34
0x40035e1	          0x83e101	                              and ecx, 1	      1081	ldlang.c	FUNCTION_34
0x40035e4	             0x9f1	                             or ecx, esi	      1081	ldlang.c	FUNCTION_34
0x40035e6	          0x884b49	               mov byte [rbx + 0x49], cl	      1081	ldlang.c	FUNCTION_34
0x40035e9	     0xfb635000000	           movzx esi, byte [0x040035f0] 	      1082	ldlang.c	FUNCTION_34
0x40035f0	          0x83e608	                              and esi, 8	      1082	ldlang.c	FUNCTION_34
0x40035f3	             0x9f0	                             or eax, esi	      1082	ldlang.c	FUNCTION_34
0x40035f5	        0x4183fc05	                             cmp r12d, 5	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x40035f9	          0x884348	               mov byte [rbx + 0x48], al	      1082	ldlang.c	FUNCTION_34
0x40035fc	     0xf87f6000000	                            ja 0x40036f8	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x4003602	    0x42ff24e50000	                       jmp qword [r12*8]	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x400360a	    0x660f1f440000	                    nop word [rax + rax]	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x4003610	      0xbf58000000	                           mov edi, 0x58	      1069	ldlang.c	FUNCTION_34	ELSE_1
0x4003615	      0xe800000000	                          call 0x400361a	      1069	ldlang.c	FUNCTION_34	ELSE_1
0x400361a	          0x4889c3	                            mov rbx, rax	      1069	ldlang.c	FUNCTION_34	ELSE_1
0x400361d	    0xc74008020000	                  mov dword [rax + 8], 2	      1071	ldlang.c	FUNCTION_34	ELSE_1
0x4003624	    0x48c700000000	                      mov qword [rax], 0	      1072	ldlang.c	FUNCTION_34	ELSE_1
0x400362b	      0xe950ffffff	                           jmp 0x4003580	      1072	ldlang.c	FUNCTION_34	ELSE_1
0x4003630	        0x804b4804	                 or byte [rbx + 0x48], 4	      1118	ldlang.c	FUNCTION_34	SWITCH_1
0x4003634	          0x83c904	                               or ecx, 4	      1117	ldlang.c	FUNCTION_34	SWITCH_1
0x4003637	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1115	ldlang.c	FUNCTION_34	SWITCH_1
0x400363b	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1116	ldlang.c	FUNCTION_34	SWITCH_1
0x400363f	          0x884b49	               mov byte [rbx + 0x49], cl	      1117	ldlang.c	FUNCTION_34	SWITCH_1
0x4003642	    0x488b05000000	            mov rax, qword [0x04003649] 	      7673	ldlang.c	FUNCTION_179
0x4003649	          0x488918	                    mov qword [rax], rbx	      7673	ldlang.c	FUNCTION_179
0x400364c	        0x488d4338	                   lea rax, [rbx + 0x38]	      1131	ldlang.c	FUNCTION_34
0x4003650	    0x488905000000	            mov qword [0x04003657], rax 	      1131	ldlang.c	FUNCTION_34
0x4003657	          0x4889d8	                            mov rax, rbx	      1133	ldlang.c	FUNCTION_34
0x400365a	              0x5b	                                 pop rbx	      1133	ldlang.c	FUNCTION_34
0x400365b	              0x5d	                                 pop rbp	      1133	ldlang.c	FUNCTION_34
0x400365c	            0x415c	                                 pop r12	      1133	ldlang.c	FUNCTION_34
0x400365e	            0x415d	                                 pop r13	      1133	ldlang.c	FUNCTION_34
0x4003660	            0x415e	                                 pop r14	      1133	ldlang.c	FUNCTION_34
0x4003662	              0xc3	                                     ret	      1133	ldlang.c	FUNCTION_34
0x4003663	       0xf1f440000	                   nop dword [rax + rax]	      1133	ldlang.c	FUNCTION_34
0x4003668	          0x83c904	                               or ecx, 4	      1123	ldlang.c	FUNCTION_34	SWITCH_1
0x400366b	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1121	ldlang.c	FUNCTION_34	SWITCH_1
0x400366f	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1122	ldlang.c	FUNCTION_34	SWITCH_1
0x4003673	          0x884b49	               mov byte [rbx + 0x49], cl	      1123	ldlang.c	FUNCTION_34	SWITCH_1
0x4003676	            0xebca	                           jmp 0x4003642	      1124	ldlang.c	FUNCTION_34	SWITCH_1
0x4003678	     0xf1f84000000	                   nop dword [rax + rax]	      1124	ldlang.c	FUNCTION_34	SWITCH_1
0x4003680	        0x807d003a	                    cmp byte [rbp], 0x3a	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003684	     0xf8486000000	                            je 0x4003710	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x400368a	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1103	ldlang.c	FUNCTION_34	SWITCH_1	ELSE_2
0x400368e	            0x31d2	                            xor edx, edx	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x4003690	          0x4889ee	                            mov rsi, rbp	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x4003693	      0xbf00000000	                              mov edi, 0	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x4003698	            0x31c0	                            xor eax, eax	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x400369a	      0xe800000000	                          call 0x400369f	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x400369f	        0x48894318	             mov qword [rbx + 0x18], rax	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x40036a3	         0xfb64348	           movzx eax, byte [rbx + 0x48] 	      1107	ldlang.c	FUNCTION_34	SWITCH_1
0x40036a7	        0x804b4904	                 or byte [rbx + 0x49], 4	      1106	ldlang.c	FUNCTION_34	SWITCH_1
0x40036ab	          0x83c805	                               or eax, 5	      1107	ldlang.c	FUNCTION_34	SWITCH_1
0x40036ae	          0x884348	               mov byte [rbx + 0x48], al	      1107	ldlang.c	FUNCTION_34	SWITCH_1
0x40036b1	            0xeb8f	                           jmp 0x4003642	      1108	ldlang.c	FUNCTION_34	SWITCH_1
0x40036b3	       0xf1f440000	                   nop dword [rax + rax]	      1108	ldlang.c	FUNCTION_34	SWITCH_1
0x40036b8	          0x83c904	                               or ecx, 4	      1089	ldlang.c	FUNCTION_34	SWITCH_1
0x40036bb	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1087	ldlang.c	FUNCTION_34	SWITCH_1
0x40036bf	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1088	ldlang.c	FUNCTION_34	SWITCH_1
0x40036c3	          0x884b49	               mov byte [rbx + 0x49], cl	      1089	ldlang.c	FUNCTION_34	SWITCH_1
0x40036c6	        0x804b4810	              or byte [rbx + 0x48], 0x10	      1090	ldlang.c	FUNCTION_34	SWITCH_1
0x40036ca	      0xe973ffffff	                           jmp 0x4003642	      1091	ldlang.c	FUNCTION_34	SWITCH_1
0x40036cf	              0x90	                                     nop	      1091	ldlang.c	FUNCTION_34	SWITCH_1
0x40036d0	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1110	ldlang.c	FUNCTION_34	SWITCH_1
0x40036d4	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1111	ldlang.c	FUNCTION_34	SWITCH_1
0x40036d8	        0x804b4804	                 or byte [rbx + 0x48], 4	      1112	ldlang.c	FUNCTION_34	SWITCH_1
0x40036dc	      0xe961ffffff	                           jmp 0x4003642	      1113	ldlang.c	FUNCTION_34	SWITCH_1
0x40036e1	     0xf1f80000000	                         nop dword [rax]	      1113	ldlang.c	FUNCTION_34	SWITCH_1
0x40036e8	        0x48896b10	             mov qword [rbx + 0x10], rbp	      1093	ldlang.c	FUNCTION_34	SWITCH_1
0x40036ec	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1094	ldlang.c	FUNCTION_34	SWITCH_1
0x40036f0	      0xe94dffffff	                           jmp 0x4003642	      1095	ldlang.c	FUNCTION_34	SWITCH_1
0x40036f5	           0xf1f00	                         nop dword [rax]	      1095	ldlang.c	FUNCTION_34	SWITCH_1
0x40036f8	      0xbe66040000	                          mov esi, 0x466	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x40036fd	      0xbf00000000	                              mov edi, 0	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x4003702	      0xe800000000	                          call 0x4003707	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x4003707	      0xe936ffffff	                           jmp 0x4003642	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x400370c	         0xf1f4000	                         nop dword [rax]	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x4003710	        0x807d0100	                   cmp byte [rbp + 1], 0	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003714	     0xf8470ffffff	                            je 0x400368a	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x400371a	        0x488d4501	                      lea rax, [rbp + 1]	      1099	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x400371e	        0x804b4802	                 or byte [rbx + 0x48], 2	      1100	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003722	        0x48894310	             mov qword [rbx + 0x10], rax	      1099	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003726	      0xe963ffffff	                           jmp 0x400368e	      1100	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
ldlang_add_require_defined	CALL,2:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	19
0x40061b0	              0x55	                                push rbp	      3453	ldlang.c	FUNCTION_82
0x40061b1	              0x53	                                push rbx	      3453	ldlang.c	FUNCTION_82
0x40061b2	      0xbe01000000	                              mov esi, 1	      3456	ldlang.c	FUNCTION_82	CALL_1
0x40061b7	          0x4889fd	                            mov rbp, rdi	      3453	ldlang.c	FUNCTION_82
0x40061ba	        0x4883ec08	                              sub rsp, 8	      3453	ldlang.c	FUNCTION_82
0x40061be	      0xe800000000	                          call 0x40061c3	      3456	ldlang.c	FUNCTION_82	CALL_1
0x40061c3	      0xbf10000000	                           mov edi, 0x10	      3457	ldlang.c	FUNCTION_82	CALL_2
0x40061c8	      0xe800000000	                          call 0x40061cd	      3457	ldlang.c	FUNCTION_82	CALL_2
0x40061cd	          0x4889c3	                            mov rbx, rax	      3457	ldlang.c	FUNCTION_82	CALL_2
0x40061d0	    0x488b05000000	            mov rax, qword [0x040061d7] 	      3458	ldlang.c	FUNCTION_82
0x40061d7	          0x4889ef	                            mov rdi, rbp	      3459	ldlang.c	FUNCTION_82
0x40061da	        0x48894308	                mov qword [rbx + 8], rax	      3458	ldlang.c	FUNCTION_82
0x40061de	      0xe800000000	                          call 0x40061e3	      3459	ldlang.c	FUNCTION_82
0x40061e3	    0x48891d000000	            mov qword [0x040061ea], rbx 	      3460	ldlang.c	FUNCTION_82
0x40061ea	          0x488903	                    mov qword [rbx], rax	      3459	ldlang.c	FUNCTION_82
0x40061ed	        0x4883c408	                              add rsp, 8	      3461	ldlang.c	FUNCTION_82
0x40061f1	              0x5b	                                 pop rbx	      3461	ldlang.c	FUNCTION_82
0x40061f2	              0x5d	                                 pop rbp	      3461	ldlang.c	FUNCTION_82
0x40061f3	              0xc3	                                     ret	      3461	ldlang.c	FUNCTION_82
walk_wild_file_in_exclude_list	CALL,4:functions,0:WHILE,0:FOR,1:IF,4:DO,0:SWITCH,0:ELSE,2	60
0x4002650	          0x4885ff	                           test rdi, rdi	       234	ldlang.c	FUNCTION_6	FOR_1
0x4002653	     0xf84a4000000	                            je 0x40026fd	       234	ldlang.c	FUNCTION_6	FOR_1
0x4002659	            0x4155	                                push r13	       231	ldlang.c	FUNCTION_6
0x400265b	            0x4154	                                push r12	       231	ldlang.c	FUNCTION_6
0x400265d	        0x4c8d6e20	                   lea r13, [rsi + 0x20]	       231	ldlang.c	FUNCTION_6
0x4002661	              0x55	                                push rbp	       231	ldlang.c	FUNCTION_6
0x4002662	              0x53	                                push rbx	       231	ldlang.c	FUNCTION_6
0x4002663	          0x4989f4	                            mov r12, rsi	       231	ldlang.c	FUNCTION_6
0x4002666	          0x4889fb	                            mov rbx, rdi	       231	ldlang.c	FUNCTION_6
0x4002669	        0x4883ec08	                              sub rsp, 8	       231	ldlang.c	FUNCTION_6
0x400266d	            0xeb21	                           jmp 0x4002690	       231	ldlang.c	FUNCTION_6
0x400266f	              0x90	                                     nop	       231	ldlang.c	FUNCTION_6
0x4002670	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4002675	          0x4c89e9	                            mov rcx, r13	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4002678	          0x4889c6	                            mov rsi, rax	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x400267b	          0x4889ef	                            mov rdi, rbp	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x400267e	      0xe82dffffff	call sym.input_statement_is_archive_path.isra.24	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4002683	            0x85c0	                           test eax, eax	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4002685	            0x754f	                           jne 0x40026d6	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4002687	        0x488b5b08	                mov rbx, qword [rbx + 8]	       236	ldlang.c	FUNCTION_6	FOR_1
0x400268b	          0x4885db	                           test rbx, rbx	       234	ldlang.c	FUNCTION_6	FOR_1
0x400268e	            0x7460	                            je 0x40026f0	       234	ldlang.c	FUNCTION_6	FOR_1
0x4002690	          0x488b2b	                    mov rbp, qword [rbx]	       238	ldlang.c	FUNCTION_6	FOR_1	CALL_1
0x4002693	          0x4889ef	                            mov rdi, rbp	       238	ldlang.c	FUNCTION_6	FOR_1	CALL_1
0x4002696	      0xe875e6ffff	                   call sym.archive_path	       238	ldlang.c	FUNCTION_6	FOR_1	CALL_1
0x400269b	          0x4885c0	                           test rax, rax	       240	ldlang.c	FUNCTION_6	FOR_1	IF_1
0x400269e	            0x75d0	                           jne 0x4002670	       240	ldlang.c	FUNCTION_6	FOR_1	IF_1
0x40026a0	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x40026a5	          0x4889ef	                            mov rdi, rbp	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x40026a8	      0xe8a3feffff	                     call sym.name_match	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x40026ad	            0x85c0	                           test eax, eax	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x40026af	            0x7425	                            je 0x40026d6	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x40026b1	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x40026b6	          0x4885c0	                           test rax, rax	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x40026b9	            0x74cc	                            je 0x4002687	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x40026bb	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x40026c2	          0x4885c0	                           test rax, rax	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x40026c5	            0x74c0	                            je 0x4002687	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x40026c7	          0x488b30	                    mov rsi, qword [rax]	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x40026ca	          0x488b3b	                    mov rdi, qword [rbx]	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x40026cd	      0xe87efeffff	                     call sym.name_match	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x40026d2	            0x85c0	                           test eax, eax	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x40026d4	            0x75b1	                           jne 0x4002687	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x40026d6	        0x4883c408	                              add rsp, 8	       260	ldlang.c	FUNCTION_6
0x40026da	      0xb801000000	                              mov eax, 1	       243	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2
0x40026df	              0x5b	                                 pop rbx	       260	ldlang.c	FUNCTION_6
0x40026e0	              0x5d	                                 pop rbp	       260	ldlang.c	FUNCTION_6
0x40026e1	            0x415c	                                 pop r12	       260	ldlang.c	FUNCTION_6
0x40026e3	            0x415d	                                 pop r13	       260	ldlang.c	FUNCTION_6
0x40026e5	              0xc3	                                     ret	       260	ldlang.c	FUNCTION_6
0x40026e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       260	ldlang.c	FUNCTION_6
0x40026f0	        0x4883c408	                              add rsp, 8	       260	ldlang.c	FUNCTION_6
0x40026f4	            0x31c0	                            xor eax, eax	       259	ldlang.c	FUNCTION_6
0x40026f6	              0x5b	                                 pop rbx	       260	ldlang.c	FUNCTION_6
0x40026f7	              0x5d	                                 pop rbp	       260	ldlang.c	FUNCTION_6
0x40026f8	            0x415c	                                 pop r12	       260	ldlang.c	FUNCTION_6
0x40026fa	            0x415d	                                 pop r13	       260	ldlang.c	FUNCTION_6
0x40026fc	              0xc3	                                     ret	       260	ldlang.c	FUNCTION_6
0x40026fd	            0x31c0	                            xor eax, eax	       259	ldlang.c	FUNCTION_6
0x40026ff	              0xc3	                                     ret	       260	ldlang.c	FUNCTION_6
gc_section_callback	CALL,0:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,0	5
0x40001d0	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      6791	ldlang.c	FUNCTION_149	IF_1
0x40001d3	            0x85c0	                           test eax, eax	      6791	ldlang.c	FUNCTION_149	IF_1
0x40001d5	            0x7407	                            je 0x40001de	      6791	ldlang.c	FUNCTION_149	IF_1
0x40001d7	    0x814a20000020	         or dword [rdx + 0x20], 0x200000	      6792	ldlang.c	FUNCTION_149	IF_1
0x40001de	            0xf3c3	                                     ret	      6792	ldlang.c	FUNCTION_149	IF_1
print_statement	CALL,21:functions,0:WHILE,0:FOR,0:IF,3:DO,0:SWITCH,1:ELSE,1	652
0x4001780	            0x4156	                                push r14	      4534	ldlang.c	FUNCTION_105
0x4001782	            0x4155	                                push r13	      4534	ldlang.c	FUNCTION_105
0x4001784	            0x4154	                                push r12	      4534	ldlang.c	FUNCTION_105
0x4001786	              0x55	                                push rbp	      4534	ldlang.c	FUNCTION_105
0x4001787	              0x53	                                push rbx	      4534	ldlang.c	FUNCTION_105
0x4001788	          0x8b5f08	                mov ebx, dword [rdi + 8]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x400178b	          0x83fb0f	                            cmp ebx, 0xf	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x400178e	     0xf87dd070000	                            ja 0x4001f71	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4001794	          0x4989fc	                            mov r12, rdi	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4001797	          0x4989f5	                            mov r13, rsi	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x400179a	    0xff24dd000000	                       jmp qword [rbx*8]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x40017a1	          0x8b4718	            mov eax, dword [rdi + 0x18] 	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017a4	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017a8	      0xbe00000000	                              mov esi, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017ad	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x40017ae	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x40017af	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x40017b1	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x40017b3	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x40017b5	            0x85c0	                           test eax, eax	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017b7	      0xb800000000	                              mov eax, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017bc	      0xbf00000000	                              mov edi, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017c1	        0x480f45f0	                         cmovne rsi, rax	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017c5	            0x31c0	                            xor eax, eax	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017c7	      0xe900000000	                           jmp 0x40017cc	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017cc	    0x48833d000000	               cmp qword [0x040017d4], 0	      4542	ldlang.c	FUNCTION_105	SWITCH_1	IF_1
0x40017d4	     0xf8475040000	                            je 0x4001c4f	      4542	ldlang.c	FUNCTION_105	SWITCH_1	IF_1
0x40017da	    0x8b3d00000000	            mov edi, dword [0x040017e0] 	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x40017e0	            0x85ff	                           test edi, edi	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x40017e2	     0xf85d7070000	                           jne 0x4001fbf	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x40017e8	      0xbf00000000	                              mov edi, 0	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x40017ed	            0x31c0	                            xor eax, eax	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x40017ef	      0xe800000000	                          call 0x40017f4	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x40017f4	    0x488b1d000000	            mov rbx, qword [0x040017fb] 	      4548	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_5
0x40017fb	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40017fe	     0xf844b040000	                            je 0x4001c4f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001804	         0xf1f4000	                         nop dword [rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001808	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400180b	          0x4c89ee	                            mov rsi, r13	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400180e	      0xe86dffffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001813	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4001816	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001819	            0x75ed	                           jne 0x4001808	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x400181b	      0xe92f040000	                           jmp 0x4001c4f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001820	    0x483b3d000000	            cmp rdi, qword [0x04001827] 	      3988	ldlang.c	FUNCTION_90	IF_1
0x4001827	     0xf84b3000000	                            je 0x40018e0	      3988	ldlang.c	FUNCTION_90	IF_1
0x400182d	        0x488b6f38	            mov rbp, qword [rdi + 0x38] 	      3985	ldlang.c	FUNCTION_90
0x4001831	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001835	            0x31c0	                            xor eax, eax	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001837	      0xbf00000000	                              mov edi, 0	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x400183c	      0xe800000000	                          call 0x4001841	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001841	          0x4885ed	                           test rbp, rbp	      3992	ldlang.c	FUNCTION_90	IF_1	IF_2
0x4001844	     0xf8491000000	                            je 0x40018db	      3992	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400184a	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      3994	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400184e	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001853	    0x488905000000	            mov qword [0x0400185a], rax 	      3994	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400185a	      0xe800000000	                          call 0x400185f	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x400185f	          0x83f80e	                            cmp eax, 0xe	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4001862	            0x89c3	                            mov ebx, eax	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001864	     0xf8ff3080000	                            jg 0x400215d	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x400186a	    0x660f1f440000	                    nop word [rax + rax]	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4001870	          0x83c301	                              add ebx, 1	      4005	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x4001873	      0xe800000000	                          call 0x4001878	      4004	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1	CALL_4
0x4001878	          0x83fb10	                           cmp ebx, 0x10	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x400187b	            0x75f3	                           jne 0x4001870	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x400187d	    0x8b0d00000000	            mov ecx, dword [0x04001883] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001883	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001887	            0x31c0	                            xor eax, eax	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001889	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x400188d	      0xbf00000000	                              mov edi, 0	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001892	          0x48d3ea	                             shr rdx, cl	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x4001895	      0xe800000000	                          call 0x400189a	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x400189a	        0x488b5d30	            mov rbx, qword [rbp + 0x30] 	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x400189e	        0x48395d28	            cmp qword [rbp + 0x28], rbx 	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40018a2	            0x741e	                            je 0x40018c2	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40018a4	      0xbe00000000	                              mov esi, 0	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018a9	            0x31ff	                            xor edi, edi	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018ab	      0xba05000000	                              mov edx, 5	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018b0	      0xe800000000	                          call 0x40018b5	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018b5	          0x4889de	                            mov rsi, rbx	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018b8	          0x4889c7	                            mov rdi, rax	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018bb	            0x31c0	                            xor eax, eax	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018bd	      0xe800000000	                          call 0x40018c2	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40018c2	      0x498b7c2468	            mov rdi, qword [r12 + 0x68] 	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x40018c7	          0x4885ff	                           test rdi, rdi	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x40018ca	            0x740f	                            je 0x40018db	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x40018cc	      0xba00000000	                              mov edx, 0	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x40018d1	      0xbe00000000	                              mov esi, 0	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x40018d6	      0xe800000000	                          call 0x40018db	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x40018db	      0xe800000000	                          call 0x40018e0	      4018	ldlang.c	FUNCTION_90	IF_1	CALL_9
0x40018e0	      0x498b5c2410	            mov rbx, qword [r12 + 0x10] 	      4021	ldlang.c	FUNCTION_90	CALL_10
0x40018e5	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40018e8	     0xf8461030000	                            je 0x4001c4f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40018ee	            0x6690	                                     nop	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x40018f0	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40018f3	          0x4c89e6	                            mov rsi, r12	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40018f6	      0xe885feffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x40018fb	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x40018fe	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001901	            0x75ed	                           jne 0x40018f0	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001903	      0xe947030000	                           jmp 0x4001c4f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001908	      0xbb10000000	                           mov ebx, 0x10	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x400190d	           0xf1f00	                         nop dword [rax]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4001910	      0xe800000000	                          call 0x4001915	      4035	ldlang.c	FUNCTION_91	CALL_1
0x4001915	          0x83eb01	                              sub ebx, 1	      4034	ldlang.c	FUNCTION_91	FOR_1
0x4001918	            0x75f6	                           jne 0x4001910	      4034	ldlang.c	FUNCTION_91	FOR_1
0x400191a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4037	ldlang.c	FUNCTION_91	IF_1
0x400191f	          0x8b5010	            mov edx, dword [rax + 0x10] 	      4037	ldlang.c	FUNCTION_91	IF_1
0x4001922	          0x83fa08	                              cmp edx, 8	      4037	ldlang.c	FUNCTION_91	IF_1
0x4001925	     0xf84c7060000	                            je 0x4001ff2	      4037	ldlang.c	FUNCTION_91	IF_1
0x400192b	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4044	ldlang.c	FUNCTION_91	ELSE_1
0x400192f	          0x80392e	                    cmp byte [rcx], 0x2e	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001932	     0xf8411080000	                            je 0x4002149	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001938	    0x48890d000000	            mov qword [0x0400193f], rcx 	      4048	ldlang.c	FUNCTION_91	ELSE_1	IF_2
0x400193f	            0x31db	                            xor ebx, ebx	      4048	ldlang.c	FUNCTION_91	ELSE_1	IF_2
0x4001941	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      4052	ldlang.c	FUNCTION_91
0x4001945	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4049	ldlang.c	FUNCTION_91	ELSE_1
0x4001949	      0xb800000000	                              mov eax, 0	      4054	ldlang.c	FUNCTION_91	IF_3
0x400194e	          0x4885f6	                           test rsi, rsi	      4054	ldlang.c	FUNCTION_91	IF_3
0x4001951	        0x480f44f0	                          cmove rsi, rax	      4054	ldlang.c	FUNCTION_91	IF_3
0x4001955	          0x83fa05	                              cmp edx, 5	      4056	ldlang.c	FUNCTION_91	IF_4
0x4001958	     0xf85aa060000	                           jne 0x4002008	      4056	ldlang.c	FUNCTION_91	IF_4
0x400195e	    0xc70500000000	               mov dword [0x04001968], 0	      4059	ldlang.c	FUNCTION_91	ELSE_2
0x4001968	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x400196d	        0x83781005	               cmp dword [rax + 0x10], 5	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x4001971	     0xf8403080000	                            je 0x400217a	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x4001977	      0xbf00000000	                              mov edi, 0	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x400197c	            0x31c0	                            xor eax, eax	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x400197e	      0xe800000000	                          call 0x4001983	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x4001983	      0xbf00000000	                              mov edi, 0	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x4001988	            0x31c0	                            xor eax, eax	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x400198a	      0xe800000000	                          call 0x400198f	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x400198f	      0xbf00000000	                              mov edi, 0	      4108	ldlang.c	FUNCTION_91	CALL_10
0x4001994	            0x31c0	                            xor eax, eax	      4108	ldlang.c	FUNCTION_91	CALL_10
0x4001996	    0x48c705000000	               mov qword [0x040019a1], 0	      4106	ldlang.c	FUNCTION_91
0x40019a1	      0xe800000000	                          call 0x40019a6	      4108	ldlang.c	FUNCTION_91	CALL_10
0x40019a6	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40019ab	            0xeb51	                           jmp 0x40019fe	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40019ad	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40019b1	          0x4885c9	                           test rcx, rcx	      4116	ldlang.c	FUNCTION_92	IF_1
0x40019b4	     0xf8495020000	                            je 0x4001c4f	      4116	ldlang.c	FUNCTION_92	IF_1
0x40019ba	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      4117	ldlang.c	FUNCTION_92	IF_1
0x40019be	          0x4885c0	                           test rax, rax	      4117	ldlang.c	FUNCTION_92	IF_1
0x40019c1	            0x740a	                            je 0x40019cd	      4117	ldlang.c	FUNCTION_92	IF_1
0x40019c3	        0xf6404602	               test byte [rax + 0x46], 2	      4118	ldlang.c	FUNCTION_92	IF_1
0x40019c7	     0xf8582020000	                           jne 0x4001c4f	      4118	ldlang.c	FUNCTION_92	IF_1
0x40019cd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_45
0x40019d2	      0xe98a020000	                           jmp 0x4001c61	        97	stdio2.h	CALL_45
0x40019d7	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	        97	stdio2.h	CALL_45
0x40019db	      0xba05000000	                              mov edx, 5	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019e0	      0xbe00000000	                              mov esi, 0	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019e5	            0x31ff	                            xor edi, edi	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019e7	      0xe800000000	                          call 0x40019ec	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019ec	          0x4889de	                            mov rsi, rbx	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019ef	          0x4889c7	                            mov rdi, rax	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019f2	            0x31c0	                            xor eax, eax	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019f4	      0xe800000000	                          call 0x40019f9	      4340	ldlang.c	FUNCTION_99	CALL_2
0x40019f9	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4341	ldlang.c	FUNCTION_99	CALL_3
0x40019fe	      0xe800000000	                          call 0x4001a03	      4109	ldlang.c	FUNCTION_91	CALL_11
0x4001a03	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001a04	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001a05	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001a07	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001a09	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001a0b	      0xe900000000	                           jmp 0x4001a10	      4110	ldlang.c	FUNCTION_91	CALL_12
0x4001a10	      0xe800000000	                          call 0x4001a15	      4418	ldlang.c	FUNCTION_102	CALL_1
0x4001a15	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4420	ldlang.c	FUNCTION_102	IF_1
0x4001a1a	          0x4885c0	                           test rax, rax	      4420	ldlang.c	FUNCTION_102	IF_1
0x4001a1d	            0x7445	                            je 0x4001a64	      4420	ldlang.c	FUNCTION_102	IF_1
0x4001a1f	          0x488b30	                    mov rsi, qword [rax]	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4001a22	      0xbf00000000	                              mov edi, 0	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4001a27	            0x31c0	                            xor eax, eax	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4001a29	      0xe800000000	                          call 0x4001a2e	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4001a2e	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a33	        0x488b5808	                mov rbx, qword [rax + 8]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a37	          0x4885db	                           test rbx, rbx	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a3a	            0x741c	                            je 0x4001a58	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a3c	         0xf1f4000	                         nop dword [rax]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a40	          0x488b33	                    mov rsi, qword [rbx]	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4001a43	            0x31c0	                            xor eax, eax	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4001a45	      0xbf00000000	                              mov edi, 0	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4001a4a	      0xe800000000	                          call 0x4001a4f	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4001a4f	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a53	          0x4885db	                           test rbx, rbx	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a56	            0x75e8	                           jne 0x4001a40	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4001a58	      0xbf00000000	                              mov edi, 0	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x4001a5d	            0x31c0	                            xor eax, eax	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x4001a5f	      0xe800000000	                          call 0x4001a64	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x4001a64	      0x418b742418	            mov esi, dword [r12 + 0x18] 	      4429	ldlang.c	FUNCTION_102	IF_2
0x4001a69	            0x85f6	                           test esi, esi	      4429	ldlang.c	FUNCTION_102	IF_2
0x4001a6b	     0xf8570050000	                           jne 0x4001fe1	      4429	ldlang.c	FUNCTION_102	IF_2
0x4001a71	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      4431	ldlang.c	FUNCTION_102	IF_3
0x4001a76	          0x4885f6	                           test rsi, rsi	      4431	ldlang.c	FUNCTION_102	IF_3
0x4001a79	     0xf84ea060000	                            je 0x4002169	      4431	ldlang.c	FUNCTION_102	IF_3
0x4001a7f	      0xbf00000000	                              mov edi, 0	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4001a84	            0x31c0	                            xor eax, eax	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4001a86	      0xe800000000	                          call 0x4001a8b	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4001a8b	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	      4435	ldlang.c	FUNCTION_102	IF_4
0x4001a90	            0x85c9	                           test ecx, ecx	      4435	ldlang.c	FUNCTION_102	IF_4
0x4001a92	     0xf8538050000	                           jne 0x4001fd0	      4435	ldlang.c	FUNCTION_102	IF_4
0x4001a98	            0x31c0	                            xor eax, eax	      4438	ldlang.c	FUNCTION_102	CALL_9
0x4001a9a	      0xbf00000000	                              mov edi, 0	      4438	ldlang.c	FUNCTION_102	CALL_9
0x4001a9f	      0xe800000000	                          call 0x4001aa4	      4438	ldlang.c	FUNCTION_102	CALL_9
0x4001aa4	      0x4d8b742420	            mov r14, qword [r12 + 0x20] 	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001aa9	          0x4d85f6	                           test r14, r14	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001aac	     0xf84ce030000	                            je 0x4001e80	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001ab2	    0x660f1f440000	                    nop word [rax + rax]	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001ab8	      0x41837e1806	               cmp dword [r14 + 0x18], 6	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001abd	     0xf87f5040000	                            ja 0x4001fb8	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001ac3	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001ac7	    0xff24c5000000	                       jmp qword [rax*8]	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001ace	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001acf	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001ad0	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001ad2	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001ad4	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001ad6	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x4001ada	            0x31f6	                            xor esi, esi	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x4001adc	      0xe9aff9ffff	             jmp sym.print_input_section	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x4001ae1	      0xbf00000000	                              mov edi, 0	      4558	ldlang.c	FUNCTION_105	SWITCH_1	CALL_8
0x4001ae6	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001ae7	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001ae8	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001aea	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001aec	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001aee	            0x31c0	                            xor eax, eax	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001af0	      0xe900000000	                           jmp 0x4001af5	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001af5	    0x488b0d000000	            mov rcx, qword [0x04001afc] 	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001afc	      0xba0d000000	                            mov edx, 0xd	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001b01	      0xbe01000000	                              mov esi, 1	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001b06	      0xbf00000000	                              mov edi, 0	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001b0b	      0xe800000000	                          call 0x4001b10	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001b10	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b15	          0x488b18	                    mov rbx, qword [rax]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b18	        0x488d6808	                      lea rbp, [rax + 8]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b1c	          0x4885db	                           test rbx, rbx	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b1f	            0x742d	                            je 0x4001b4e	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b21	     0xf1f80000000	                         nop dword [rax]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b28	         0xfb64d00	                   movzx ecx, byte [rbp]	        97	stdio2.h	CALL_45
0x4001b2c	    0x488b3d000000	            mov rdi, qword [0x04001b33] 	        97	stdio2.h	CALL_45
0x4001b33	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x4001b35	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_45
0x4001b3a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x4001b3f	        0x4883c501	                              add rbp, 1	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b43	      0xe800000000	                          call 0x4001b48	        97	stdio2.h	CALL_45
0x4001b48	        0x4883eb01	                              sub rbx, 1	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b4c	            0x75da	                           jne 0x4001b28	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001b4e	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001b4f	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001b50	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001b52	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001b54	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001b56	    0x488b35000000	            mov rsi, qword [0x04001b5d] 	      4274	ldlang.c	FUNCTION_97	CALL_2
0x4001b5d	      0xbf0a000000	                            mov edi, 0xa	      4274	ldlang.c	FUNCTION_97	CALL_2
0x4001b62	      0xe900000000	                           jmp 0x4001b67	      4274	ldlang.c	FUNCTION_97	CALL_2
0x4001b67	      0xbb10000000	                           mov ebx, 0x10	      4285	ldlang.c	FUNCTION_98	CALL_1
0x4001b6c	      0xe8aff8ffff	                       call sym.init_opb	      4285	ldlang.c	FUNCTION_98	CALL_1
0x4001b71	     0xf1f80000000	                         nop dword [rax]	      4285	ldlang.c	FUNCTION_98	CALL_1
0x4001b78	      0xe800000000	                          call 0x4001b7d	      4287	ldlang.c	FUNCTION_98	CALL_2
0x4001b7d	          0x83eb01	                              sub ebx, 1	      4286	ldlang.c	FUNCTION_98	FOR_1
0x4001b80	            0x75f6	                           jne 0x4001b78	      4286	ldlang.c	FUNCTION_98	FOR_1
0x4001b82	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      4290	ldlang.c	FUNCTION_98	IF_1
0x4001b87	      0x498b6c2430	            mov rbp, qword [r12 + 0x30] 	      4289	ldlang.c	FUNCTION_98
0x4001b8c	          0x4885c0	                           test rax, rax	      4290	ldlang.c	FUNCTION_98	IF_1
0x4001b8f	            0x7404	                            je 0x4001b95	      4290	ldlang.c	FUNCTION_98	IF_1
0x4001b91	        0x48036828	             add rbp, qword [rax + 0x28]	      4291	ldlang.c	FUNCTION_98	IF_1
0x4001b95	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x4001b9a	      0x2d1a010000	                          sub eax, 0x11a	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x4001b9f	          0x83f804	                              cmp eax, 4	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x4001ba2	     0xf8751050000	                            ja 0x40020f9	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x4001ba8	    0xff24c5000000	                       jmp qword [rax*8]	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x4001baf	      0xbb10000000	                           mov ebx, 0x10	      4354	ldlang.c	FUNCTION_100	CALL_1
0x4001bb4	      0xe867f8ffff	                       call sym.init_opb	      4354	ldlang.c	FUNCTION_100	CALL_1
0x4001bb9	     0xf1f80000000	                         nop dword [rax]	      4354	ldlang.c	FUNCTION_100	CALL_1
0x4001bc0	      0xe800000000	                          call 0x4001bc5	      4356	ldlang.c	FUNCTION_100	CALL_2
0x4001bc5	          0x83eb01	                              sub ebx, 1	      4355	ldlang.c	FUNCTION_100	FOR_1
0x4001bc8	            0x75f6	                           jne 0x4001bc0	      4355	ldlang.c	FUNCTION_100	FOR_1
0x4001bca	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4359	ldlang.c	FUNCTION_100	IF_1
0x4001bcf	      0x498b6c2448	            mov rbp, qword [r12 + 0x48] 	      4358	ldlang.c	FUNCTION_100
0x4001bd4	          0x4885c0	                           test rax, rax	      4359	ldlang.c	FUNCTION_100	IF_1
0x4001bd7	            0x7404	                            je 0x4001bdd	      4359	ldlang.c	FUNCTION_100	IF_1
0x4001bd9	        0x48036828	             add rbp, qword [rax + 0x28]	      4360	ldlang.c	FUNCTION_100	IF_1
0x4001bdd	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4362	ldlang.c	FUNCTION_100	CALL_3
0x4001be2	      0xe800000000	                          call 0x4001be7	      4362	ldlang.c	FUNCTION_100	CALL_3
0x4001be7	            0x89c3	                            mov ebx, eax	      4362	ldlang.c	FUNCTION_100	CALL_3
0x4001be9	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001bee	    0x8b0d00000000	            mov ecx, dword [0x04001bf4] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001bf4	          0x4889da	                            mov rdx, rbx	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001bf7	          0x4889ee	                            mov rsi, rbp	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001bfa	      0xbf00000000	                              mov edi, 0	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001bff	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001c03	          0x48d3ea	                             shr rdx, cl	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001c06	          0x4889c1	                            mov rcx, rax	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001c09	            0x31c0	                            xor eax, eax	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001c0b	      0xe800000000	                          call 0x4001c10	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001c10	      0x498b742428	            mov rsi, qword [r12 + 0x28] 	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001c15	          0x4885f6	                           test rsi, rsi	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001c18	     0xf8459040000	                            je 0x4002077	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001c1e	            0x31c0	                            xor eax, eax	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001c20	      0xbf00000000	                              mov edi, 0	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001c25	      0xe800000000	                          call 0x4001c2a	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001c2a	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      4371	ldlang.c	FUNCTION_100	CALL_7
0x4001c2f	      0xe800000000	                          call 0x4001c34	      4371	ldlang.c	FUNCTION_100	CALL_7
0x4001c34	      0xe800000000	                          call 0x4001c39	      4373	ldlang.c	FUNCTION_100	CALL_8
0x4001c39	    0x8b0d00000000	            mov ecx, dword [0x04001c3f] 	      4375	ldlang.c	FUNCTION_100
0x4001c3f	          0x4889d8	                            mov rax, rbx	      4375	ldlang.c	FUNCTION_100
0x4001c42	          0x48d3e8	                             shr rax, cl	      4375	ldlang.c	FUNCTION_100
0x4001c45	          0x4801e8	                            add rax, rbp	      4375	ldlang.c	FUNCTION_100
0x4001c48	    0x488905000000	            mov qword [0x04001c4f], rax 	      4375	ldlang.c	FUNCTION_100
0x4001c4f	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001c50	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001c51	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001c53	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001c55	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001c57	              0xc3	                                     ret	      4602	ldlang.c	FUNCTION_105
0x4001c58	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	        97	stdio2.h	CALL_45
0x4001c5c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_45
0x4001c61	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001c62	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001c63	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001c65	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001c67	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001c69	    0x488b3d000000	            mov rdi, qword [0x04001c70] 	        97	stdio2.h	CALL_45
0x4001c70	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x4001c75	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x4001c77	      0xe900000000	                           jmp 0x4001c7c	        97	stdio2.h	CALL_45
0x4001c7c	      0xe89ff7ffff	                       call sym.init_opb	      4384	ldlang.c	FUNCTION_101	CALL_1
0x4001c81	      0xbb09000000	                              mov ebx, 9	      4385	ldlang.c	FUNCTION_101	CALL_2
0x4001c86	      0xbf00000000	                              mov edi, 0	      4385	ldlang.c	FUNCTION_101	CALL_2
0x4001c8b	            0x31c0	                            xor eax, eax	      4385	ldlang.c	FUNCTION_101	CALL_2
0x4001c8d	      0xe800000000	                          call 0x4001c92	      4385	ldlang.c	FUNCTION_101	CALL_2
0x4001c92	    0x660f1f440000	                    nop word [rax + rax]	      4385	ldlang.c	FUNCTION_101	CALL_2
0x4001c98	      0xe800000000	                          call 0x4001c9d	      4390	ldlang.c	FUNCTION_101	WHILE_1	CALL_3
0x4001c9d	          0x83eb01	                              sub ebx, 1	      4388	ldlang.c	FUNCTION_101	WHILE_1
0x4001ca0	            0x75f6	                           jne 0x4001c98	      4388	ldlang.c	FUNCTION_101	WHILE_1
0x4001ca2	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4395	ldlang.c	FUNCTION_101	IF_1
0x4001ca7	      0x4d8b6c2410	            mov r13, qword [r12 + 0x10] 	      4394	ldlang.c	FUNCTION_101
0x4001cac	          0x4885c0	                           test rax, rax	      4395	ldlang.c	FUNCTION_101	IF_1
0x4001caf	            0x7404	                            je 0x4001cb5	      4395	ldlang.c	FUNCTION_101	IF_1
0x4001cb1	        0x4c036828	             add r13, qword [rax + 0x28]	      4396	ldlang.c	FUNCTION_101	IF_1
0x4001cb5	    0x8b0d00000000	            mov ecx, dword [0x04001cbb] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001cbb	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001cc0	            0x31c0	                            xor eax, eax	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001cc2	          0x4c89ee	                            mov rsi, r13	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001cc5	      0xbf00000000	                              mov edi, 0	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001cca	          0x48d3ea	                             shr rdx, cl	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001ccd	      0xe800000000	                          call 0x4001cd2	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001cd2	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001cd7	          0x488b2b	                    mov rbp, qword [rbx]	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001cda	        0x4883c308	                              add rbx, 8	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x4001cde	          0x4885ed	                           test rbp, rbp	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001ce1	            0x742a	                            je 0x4001d0d	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001ce3	       0xf1f440000	                   nop dword [rax + rax]	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001ce8	           0xfb60b	                   movzx ecx, byte [rbx]	        97	stdio2.h	CALL_45
0x4001ceb	    0x488b3d000000	            mov rdi, qword [0x04001cf2] 	        97	stdio2.h	CALL_45
0x4001cf2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x4001cf4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_45
0x4001cf9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x4001cfe	        0x4883c301	                              add rbx, 1	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x4001d02	      0xe800000000	                          call 0x4001d07	        97	stdio2.h	CALL_45
0x4001d07	        0x4883ed01	                              sub rbp, 1	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x4001d0b	            0x75db	                           jne 0x4001ce8	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x4001d0d	      0xe800000000	                          call 0x4001d12	      4407	ldlang.c	FUNCTION_101	CALL_5
0x4001d12	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4409	ldlang.c	FUNCTION_101
0x4001d17	    0x8b0d00000000	            mov ecx, dword [0x04001d1d] 	      4409	ldlang.c	FUNCTION_101
0x4001d1d	          0x48d3e8	                             shr rax, cl	      4409	ldlang.c	FUNCTION_101
0x4001d20	          0x4901c5	                            add r13, rax	      4409	ldlang.c	FUNCTION_101
0x4001d23	    0x4c892d000000	            mov qword [0x04001d2a], r13 	      4409	ldlang.c	FUNCTION_101
0x4001d2a	      0xe920ffffff	                           jmp 0x4001c4f	      4409	ldlang.c	FUNCTION_101
0x4001d2f	    0x488b0d000000	            mov rcx, qword [0x04001d36] 	        97	stdio2.h	CALL_45
0x4001d36	      0xba0c000000	                            mov edx, 0xc	        97	stdio2.h	CALL_45
0x4001d3b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x4001d40	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_45
0x4001d45	      0xe800000000	                          call 0x4001d4a	        97	stdio2.h	CALL_45
0x4001d4a	      0x498b5c2410	            mov rbx, qword [r12 + 0x10] 	      4510	ldlang.c	FUNCTION_103	CALL_1
0x4001d4f	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001d52	            0x7417	                            je 0x4001d6b	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001d54	         0xf1f4000	                         nop dword [rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001d58	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001d5b	          0x4c89ee	                            mov rsi, r13	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001d5e	      0xe81dfaffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001d63	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4001d66	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001d69	            0x75ed	                           jne 0x4001d58	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001d6b	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001d6c	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001d6d	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001d6f	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001d71	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001d73	    0x488b0d000000	            mov rcx, qword [0x04001d7a] 	        97	stdio2.h	CALL_45
0x4001d7a	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_45
0x4001d7f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x4001d84	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_45
0x4001d89	      0xe900000000	                           jmp 0x4001d8e	        97	stdio2.h	CALL_45
0x4001d8e	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x4001d92	            0x31c0	                            xor eax, eax	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x4001d94	      0xbf00000000	                              mov edi, 0	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x4001d99	      0xe800000000	                          call 0x4001d9e	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x4001d9e	    0x488b35000000	            mov rsi, qword [0x04001da5] 	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x4001da5	          0x4885f6	                           test rsi, rsi	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x4001da8	            0x740c	                            je 0x4001db6	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x4001daa	      0xbf00000000	                              mov edi, 0	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x4001daf	            0x31c0	                            xor eax, eax	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x4001db1	      0xe800000000	                          call 0x4001db6	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x4001db6	      0xbf00000000	                              mov edi, 0	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001dbb	      0xe926fdffff	                           jmp 0x4001ae6	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001dc0	      0xbf00000000	                              mov edi, 0	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x4001dc5	            0x31c0	                            xor eax, eax	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x4001dc7	      0xbb01000000	                              mov ebx, 1	      4470	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001dcc	      0xe800000000	                          call 0x4001dd1	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x4001dd1	     0xf1f80000000	                         nop dword [rax]	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x4001dd8	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x4001ddc	          0x4885c0	                           test rax, rax	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x4001ddf	            0x7444	                            je 0x4001e25	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x4001de1	          0x488b30	                    mov rsi, qword [rax]	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001de4	      0xbf00000000	                              mov edi, 0	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001de9	            0x31c0	                            xor eax, eax	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001deb	      0xe800000000	                          call 0x4001df0	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001df0	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001df4	        0x488b6808	                mov rbp, qword [rax + 8]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001df8	          0x4885ed	                           test rbp, rbp	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001dfb	            0x741c	                            je 0x4001e19	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001dfd	           0xf1f00	                         nop dword [rax]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001e00	        0x488b7500	                    mov rsi, qword [rbp]	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001e04	            0x31c0	                            xor eax, eax	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001e06	      0xbf00000000	                              mov edi, 0	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001e0b	      0xe800000000	                          call 0x4001e10	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001e10	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001e14	          0x4885ed	                           test rbp, rbp	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001e17	            0x75e7	                           jne 0x4001e00	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001e19	      0xbf00000000	                              mov edi, 0	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x4001e1e	            0x31c0	                            xor eax, eax	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x4001e20	      0xe800000000	                          call 0x4001e25	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x4001e25	        0x498b7608	                mov rsi, qword [r14 + 8]	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001e29	          0x4885f6	                           test rsi, rsi	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001e2c	     0xf842e010000	                            je 0x4001f60	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001e32	      0xbf00000000	                              mov edi, 0	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x4001e37	            0x31c0	                            xor eax, eax	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x4001e39	      0xe800000000	                          call 0x4001e3e	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x4001e3e	            0x85db	                           test ebx, ebx	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001e40	            0x7417	                            je 0x4001e59	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001e42	    0x660f1f440000	                    nop word [rax + rax]	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001e48	            0x31c0	                            xor eax, eax	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x4001e4a	      0xbf00000000	                              mov edi, 0	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x4001e4f	      0xe800000000	                          call 0x4001e54	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x4001e54	          0x83eb01	                              sub ebx, 1	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001e57	            0x75ef	                           jne 0x4001e48	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x4001e59	        0x49833e00	                      cmp qword [r14], 0	      4493	ldlang.c	FUNCTION_102	FOR_2	IF_7
0x4001e5d	            0x7421	                            je 0x4001e80	      4493	ldlang.c	FUNCTION_102	FOR_2	IF_7
0x4001e5f	            0x31c0	                            xor eax, eax	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x4001e61	      0xbf00000000	                              mov edi, 0	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x4001e66	      0xe800000000	                          call 0x4001e6b	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x4001e6b	          0x4d8b36	                    mov r14, qword [r14]	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001e6e	          0x4d85f6	                           test r14, r14	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001e71	     0xf8541fcffff	                           jne 0x4001ab8	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001e77	    0x660f1f840000	                    nop word [rax + rax]	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4001e80	            0x31c0	                            xor eax, eax	      4496	ldlang.c	FUNCTION_102	CALL_23
0x4001e82	      0xbf00000000	                              mov edi, 0	      4496	ldlang.c	FUNCTION_102	CALL_23
0x4001e87	      0xe800000000	                          call 0x4001e8c	      4496	ldlang.c	FUNCTION_102	CALL_23
0x4001e8c	      0xe800000000	                          call 0x4001e91	      4498	ldlang.c	FUNCTION_102	CALL_24
0x4001e91	      0x498b5c2430	            mov rbx, qword [r12 + 0x30] 	      4500	ldlang.c	FUNCTION_102	CALL_25
0x4001e96	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001e99	     0xf84b0fdffff	                            je 0x4001c4f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001e9f	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001ea2	          0x4c89ee	                            mov rsi, r13	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001ea5	      0xe8d6f8ffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001eaa	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4001ead	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001eb0	            0x75ed	                           jne 0x4001e9f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001eb2	      0xe998fdffff	                           jmp 0x4001c4f	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001eb7	    0x660f1f840000	                    nop word [rax + rax]	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001ec0	      0xbf00000000	                              mov edi, 0	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4001ec5	            0x31c0	                            xor eax, eax	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4001ec7	      0xbb02000000	                              mov ebx, 2	      4465	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001ecc	      0xe800000000	                          call 0x4001ed1	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4001ed1	      0xe902ffffff	                           jmp 0x4001dd8	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4001ed6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4001ee0	      0xbf00000000	                              mov edi, 0	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001ee5	            0x31c0	                            xor eax, eax	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001ee7	      0xbb02000000	                              mov ebx, 2	      4460	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001eec	      0xe800000000	                          call 0x4001ef1	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001ef1	      0xe9e2feffff	                           jmp 0x4001dd8	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001ef6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4001f00	      0xbf00000000	                              mov edi, 0	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001f05	            0x31c0	                            xor eax, eax	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001f07	      0xbb01000000	                              mov ebx, 1	      4455	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001f0c	      0xe800000000	                          call 0x4001f11	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001f11	      0xe9c2feffff	                           jmp 0x4001dd8	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001f16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4001f20	      0xbf00000000	                              mov edi, 0	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001f25	            0x31c0	                            xor eax, eax	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001f27	      0xbb01000000	                              mov ebx, 1	      4450	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001f2c	      0xe800000000	                          call 0x4001f31	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001f31	      0xe9a2feffff	                           jmp 0x4001dd8	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001f36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4001f40	      0xbf00000000	                              mov edi, 0	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001f45	            0x31c0	                            xor eax, eax	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001f47	      0xbb01000000	                              mov ebx, 1	      4475	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001f4c	      0xe800000000	                          call 0x4001f51	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001f51	      0xe982feffff	                           jmp 0x4001dd8	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001f56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001f60	      0xbf00000000	                              mov edi, 0	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001f65	            0x31c0	                            xor eax, eax	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001f67	      0xe800000000	                          call 0x4001f6c	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001f6c	      0xe9cdfeffff	                           jmp 0x4001e3e	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x4001f71	      0xba05000000	                              mov edx, 5	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001f76	      0xbe00000000	                              mov esi, 0	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001f7b	            0x31ff	                            xor edi, edi	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001f7d	      0xe800000000	                          call 0x4001f82	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4001f82	    0x488b3d000000	            mov rdi, qword [0x04001f89] 	        97	stdio2.h	CALL_45
0x4001f89	            0x89d9	                            mov ecx, ebx	        97	stdio2.h	CALL_45
0x4001f8b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_45
0x4001f8e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_45
0x4001f93	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_45
0x4001f95	      0xe800000000	                          call 0x4001f9a	        97	stdio2.h	CALL_45
0x4001f9a	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x4001f9b	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x4001f9c	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001f9e	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001fa0	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001fa2	      0xbebb110000	                         mov esi, 0x11bb	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001fa7	      0xbf00000000	                              mov edi, 0	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001fac	      0xe900000000	                           jmp 0x4001fb1	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001fb1	     0xf1f80000000	                         nop dword [rax]	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4001fb8	            0x31db	                            xor ebx, ebx	      4441	ldlang.c	FUNCTION_102	FOR_2
0x4001fba	      0xe919feffff	                           jmp 0x4001dd8	      4441	ldlang.c	FUNCTION_102	FOR_2
0x4001fbf	      0xbf00000000	                              mov edi, 0	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001fc4	            0x31c0	                            xor eax, eax	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001fc6	      0xe800000000	                          call 0x4001fcb	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001fcb	      0xe924f8ffff	                           jmp 0x40017f4	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4001fd0	      0xbf00000000	                              mov edi, 0	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001fd5	            0x31c0	                            xor eax, eax	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001fd7	      0xe800000000	                          call 0x4001fdc	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001fdc	      0xe9b7faffff	                           jmp 0x4001a98	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4001fe1	      0xbf00000000	                              mov edi, 0	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001fe6	            0x31c0	                            xor eax, eax	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001fe8	      0xe800000000	                          call 0x4001fed	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001fed	      0xe97ffaffff	                           jmp 0x4001a71	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4001ff2	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      4052	ldlang.c	FUNCTION_91
0x4001ff6	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      4040	ldlang.c	FUNCTION_91	IF_1
0x4001ffa	            0x31db	                            xor ebx, ebx	      4039	ldlang.c	FUNCTION_91	IF_1
0x4001ffc	      0xb800000000	                              mov eax, 0	      4054	ldlang.c	FUNCTION_91	IF_3
0x4002001	          0x4885f6	                           test rsi, rsi	      4053	ldlang.c	FUNCTION_91	IF_3
0x4002004	        0x480f44f0	                          cmove rsi, rax	      4054	ldlang.c	FUNCTION_91	IF_3
0x4002008	      0xba00000000	                              mov edx, 0	      4057	ldlang.c	FUNCTION_91	CALL_2
0x400200d	      0xe800000000	                          call 0x4002012	      4057	ldlang.c	FUNCTION_91	CALL_2
0x4002012	    0x8b1500000000	            mov edx, dword [0x04002018] 	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x4002018	            0x85d2	                           test edx, edx	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x400201a	     0xf8448f9ffff	                            je 0x4001968	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x4002020	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4065	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4002025	        0x83781008	               cmp dword [rax + 0x10], 8	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4002029	            0x7412	                            je 0x400203d	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x400202b	            0x85db	                           test ebx, ebx	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x400202d	            0x750e	                           jne 0x400203d	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x400202f	    0x48833d000000	               cmp qword [0x04002037], 0	      4067	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x4002037	     0xf844e010000	                            je 0x400218b	      4067	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x400203d	    0x488b05000000	            mov rax, qword [0x04002044] 	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4002044	    0x488b2d000000	            mov rbp, qword [0x0400204b] 	      4069	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x400204b	          0x4885c0	                           test rax, rax	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x400204e	            0x7404	                            je 0x4002054	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4002050	        0x48036828	             add rbp, qword [rax + 0x28]	      4072	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4002054	            0x31c0	                            xor eax, eax	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4002056	          0x4889ee	                            mov rsi, rbp	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4002059	      0xbf00000000	                              mov edi, 0	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x400205e	      0xe800000000	                          call 0x4002063	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4002063	            0x85db	                           test ebx, ebx	      4075	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4002065	     0xf8424f9ffff	                            je 0x400198f	      4075	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x400206b	    0x48892d000000	            mov qword [0x04002072], rbp 	      4076	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4002072	      0xe918f9ffff	                           jmp 0x400198f	      4076	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4002077	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4369	ldlang.c	FUNCTION_100	CALL_6
0x400207c	          0x488b30	                    mov rsi, qword [rax]	      4369	ldlang.c	FUNCTION_100	CALL_6
0x400207f	      0xe99afbffff	                           jmp 0x4001c1e	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4002084	      0xbe00000000	                              mov esi, 0	      4299	ldlang.c	FUNCTION_98	SWITCH_1
0x4002089	      0xba01000000	                              mov edx, 1	      4298	ldlang.c	FUNCTION_98	SWITCH_1
0x400208e	    0x8b0d00000000	            mov ecx, dword [0x04002094] 	      4319	ldlang.c	FUNCTION_98	IF_2
0x4002094	      0xbb01000000	                              mov ebx, 1	      4319	ldlang.c	FUNCTION_98	IF_2
0x4002099	      0x4d8b442420	              mov r8, qword [r12 + 0x20]	      4321	ldlang.c	FUNCTION_98	CALL_4
0x400209e	            0x89d8	                            mov eax, ebx	      4319	ldlang.c	FUNCTION_98	IF_2
0x40020a0	      0xbf00000000	                              mov edi, 0	      4321	ldlang.c	FUNCTION_98	CALL_4
0x40020a5	            0xd3e0	                             shl eax, cl	      4319	ldlang.c	FUNCTION_98	IF_2
0x40020a7	          0x4839d0	                            cmp rax, rdx	      4319	ldlang.c	FUNCTION_98	IF_2
0x40020aa	        0x480f43d0	                         cmovae rdx, rax	      4319	ldlang.c	FUNCTION_98	IF_2
0x40020ae	            0x31c0	                            xor eax, eax	      4321	ldlang.c	FUNCTION_98	CALL_4
0x40020b0	          0x4889d3	                            mov rbx, rdx	      4321	ldlang.c	FUNCTION_98	CALL_4
0x40020b3	          0x48d3ea	                             shr rdx, cl	      4321	ldlang.c	FUNCTION_98	CALL_4
0x40020b6	          0x4889f1	                            mov rcx, rsi	      4321	ldlang.c	FUNCTION_98	CALL_4
0x40020b9	          0x4889ee	                            mov rsi, rbp	      4321	ldlang.c	FUNCTION_98	CALL_4
0x40020bc	      0xe800000000	                          call 0x40020c1	      4321	ldlang.c	FUNCTION_98	CALL_4
0x40020c1	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4323	ldlang.c	FUNCTION_98	IF_3
0x40020c6	        0x83781007	               cmp dword [rax + 0x10], 7	      4323	ldlang.c	FUNCTION_98	IF_3
0x40020ca	            0x740f	                            je 0x40020db	      4323	ldlang.c	FUNCTION_98	IF_3
0x40020cc	      0xe800000000	                          call 0x40020d1	      4325	ldlang.c	FUNCTION_98	IF_3	CALL_5
0x40020d1	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4326	ldlang.c	FUNCTION_98	IF_3	CALL_6
0x40020d6	      0xe800000000	                          call 0x40020db	      4326	ldlang.c	FUNCTION_98	IF_3	CALL_6
0x40020db	      0xe800000000	                          call 0x40020e0	      4329	ldlang.c	FUNCTION_98	CALL_7
0x40020e0	    0x8b0d00000000	            mov ecx, dword [0x040020e6] 	      4331	ldlang.c	FUNCTION_98
0x40020e6	          0x48d3eb	                             shr rbx, cl	      4331	ldlang.c	FUNCTION_98
0x40020e9	        0x488d042b	                    lea rax, [rbx + rbp]	      4331	ldlang.c	FUNCTION_98
0x40020ed	    0x488905000000	            mov qword [0x040020f4], rax 	      4331	ldlang.c	FUNCTION_98
0x40020f4	      0xe956fbffff	                           jmp 0x4001c4f	      4331	ldlang.c	FUNCTION_98
0x40020f9	      0xba00000000	                              mov edx, 0	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x40020fe	      0xbec8100000	                         mov esi, 0x10c8	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4002103	      0xbf00000000	                              mov edi, 0	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4002108	      0xe800000000	                          call 0x400210d	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x400210d	      0xbe00000000	                              mov esi, 0	      4303	ldlang.c	FUNCTION_98	SWITCH_1
0x4002112	      0xba02000000	                              mov edx, 2	      4302	ldlang.c	FUNCTION_98	SWITCH_1
0x4002117	      0xe972ffffff	                           jmp 0x400208e	      4302	ldlang.c	FUNCTION_98	SWITCH_1
0x400211c	      0xbe00000000	                              mov esi, 0	      4311	ldlang.c	FUNCTION_98	SWITCH_1
0x4002121	      0xba08000000	                              mov edx, 8	      4310	ldlang.c	FUNCTION_98	SWITCH_1
0x4002126	      0xe963ffffff	                           jmp 0x400208e	      4310	ldlang.c	FUNCTION_98	SWITCH_1
0x400212b	      0xbe00000000	                              mov esi, 0	      4307	ldlang.c	FUNCTION_98	SWITCH_1
0x4002130	      0xba04000000	                              mov edx, 4	      4306	ldlang.c	FUNCTION_98	SWITCH_1
0x4002135	      0xe954ffffff	                           jmp 0x400208e	      4306	ldlang.c	FUNCTION_98	SWITCH_1
0x400213a	      0xbe00000000	                              mov esi, 0	      4315	ldlang.c	FUNCTION_98	SWITCH_1
0x400213f	      0xba08000000	                              mov edx, 8	      4314	ldlang.c	FUNCTION_98	SWITCH_1
0x4002144	      0xe945ffffff	                           jmp 0x400208e	      4314	ldlang.c	FUNCTION_98	SWITCH_1
0x4002149	        0x80790100	                   cmp byte [rcx + 1], 0	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x400214d	     0xf85e5f7ffff	                           jne 0x4001938	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4002153	      0xbb01000000	                              mov ebx, 1	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4002158	      0xe9e4f7ffff	                           jmp 0x4001941	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x400215d	      0xe800000000	                          call 0x4002162	      3999	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3	CALL_3
0x4002162	            0x31db	                            xor ebx, ebx	      4000	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4002164	      0xe907f7ffff	                           jmp 0x4001870	      4000	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x4002169	      0xbf00000000	                              mov edi, 0	      4434	ldlang.c	FUNCTION_102	CALL_7
0x400216e	            0x31c0	                            xor eax, eax	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4002170	      0xe800000000	                          call 0x4002175	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4002175	      0xe911f9ffff	                           jmp 0x4001a8b	      4434	ldlang.c	FUNCTION_102	CALL_7
0x400217a	      0xbf00000000	                              mov edi, 0	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x400217f	            0x31c0	                            xor eax, eax	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x4002181	      0xe800000000	                          call 0x4002186	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x4002186	      0xe9f8f7ffff	                           jmp 0x4001983	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x400218b	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x400218f	    0x488b3d000000	            mov rdi, qword [0x04002196] 	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4002196	            0x31c9	                            xor ecx, ecx	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4002198	            0x31d2	                            xor edx, edx	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x400219a	    0x41b801000000	                              mov r8d, 1	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x40021a0	      0xe800000000	                          call 0x40021a5	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x40021a5	          0x4885c0	                           test rax, rax	      4084	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x40021a8	            0x7425	                            je 0x40021cf	      4084	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x40021aa	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x40021ae	      0xbf00000000	                              mov edi, 0	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x40021b3	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x40021b7	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x40021bb	        0x48037030	             add rsi, qword [rax + 0x30]	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x40021bf	            0x31c0	                            xor eax, eax	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x40021c1	        0x48037260	             add rsi, qword [rdx + 0x60]	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x40021c5	      0xe800000000	                          call 0x40021ca	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x40021ca	      0xe9c0f7ffff	                           jmp 0x400198f	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x40021cf	      0xbf00000000	                              mov edi, 0	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x40021d4	            0x31c0	                            xor eax, eax	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x40021d6	      0xe800000000	                          call 0x40021db	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x40021db	      0xe9aff7ffff	                           jmp 0x400198f	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
lookup_name	CALL,3:functions,0:WHILE,0:FOR,1:IF,4:DO,0:SWITCH,0:ELSE,0	45
0x4006d50	              0x55	                                push rbp	      2646	ldlang.c	FUNCTION_63
0x4006d51	              0x53	                                push rbx	      2646	ldlang.c	FUNCTION_63
0x4006d52	          0x4889fd	                            mov rbp, rdi	      2646	ldlang.c	FUNCTION_63
0x4006d55	        0x4883ec08	                              sub rsp, 8	      2646	ldlang.c	FUNCTION_63
0x4006d59	    0x488b1d000000	            mov rbx, qword [0x04006d60] 	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4006d60	          0x4885db	                           test rbx, rbx	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4006d63	            0x7421	                            je 0x4006d86	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4006d65	           0xf1f00	                         nop dword [rax]	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4006d68	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2656	ldlang.c	FUNCTION_63	FOR_1
0x4006d6c	          0x4885ff	                           test rdi, rdi	      2658	ldlang.c	FUNCTION_63	FOR_1	IF_1
0x4006d6f	            0x740c	                            je 0x4006d7d	      2658	ldlang.c	FUNCTION_63	FOR_1	IF_1
0x4006d71	          0x4889ee	                            mov rsi, rbp	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4006d74	      0xe800000000	                          call 0x4006d79	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4006d79	            0x85c0	                           test eax, eax	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4006d7b	            0x7422	                            je 0x4006d9f	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4006d7d	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2651	ldlang.c	FUNCTION_63	FOR_1
0x4006d81	          0x4885db	                           test rbx, rbx	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4006d84	            0x75e2	                           jne 0x4006d68	      2649	ldlang.c	FUNCTION_63	FOR_1
0x4006d86	    0x488b15000000	            mov rdx, qword [0x04006d8d] 	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006d8d	            0x31c9	                            xor ecx, ecx	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006d8f	      0xbe04000000	                              mov esi, 4	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006d94	          0x4889ef	                            mov rdi, rbp	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006d97	      0xe894c7ffff	                      call sym.new_afile	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006d9c	          0x4889c3	                            mov rbx, rax	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006d9f	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      2669	ldlang.c	FUNCTION_63	IF_3
0x4006da3	          0x83e006	                              and eax, 6	      2669	ldlang.c	FUNCTION_63	IF_3
0x4006da6	            0x3c04	                               cmp al, 4	      2669	ldlang.c	FUNCTION_63	IF_3
0x4006da8	            0x740e	                            je 0x4006db8	      2669	ldlang.c	FUNCTION_63	IF_3
0x4006daa	        0x4883c408	                              add rsp, 8	      2676	ldlang.c	FUNCTION_63
0x4006dae	          0x4889d8	                            mov rax, rbx	      2676	ldlang.c	FUNCTION_63
0x4006db1	              0x5b	                                 pop rbx	      2676	ldlang.c	FUNCTION_63
0x4006db2	              0x5d	                                 pop rbp	      2676	ldlang.c	FUNCTION_63
0x4006db3	              0xc3	                                     ret	      2676	ldlang.c	FUNCTION_63
0x4006db4	         0xf1f4000	                         nop dword [rax]	      2676	ldlang.c	FUNCTION_63
0x4006db8	            0x31f6	                            xor esi, esi	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006dba	          0x4889df	                            mov rdi, rbx	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006dbd	      0xe800000000	                          call 0x4006dc2	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006dc2	            0x85c0	                           test eax, eax	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006dc4	      0xb800000000	                              mov eax, 0	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006dc9	        0x480f44d8	                          cmove rbx, rax	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006dcd	        0x4883c408	                              add rsp, 8	      2676	ldlang.c	FUNCTION_63
0x4006dd1	          0x4889d8	                            mov rax, rbx	      2676	ldlang.c	FUNCTION_63
0x4006dd4	              0x5b	                                 pop rbx	      2676	ldlang.c	FUNCTION_63
0x4006dd5	              0x5d	                                 pop rbp	      2676	ldlang.c	FUNCTION_63
0x4006dd6	              0xc3	                                     ret	      2676	ldlang.c	FUNCTION_63
lang_add_section	CALL,4:functions,0:WHILE,0:FOR,0:IF,19:DO,0:SWITCH,1:ELSE,4	168
0x40056e0	            0x4155	                                push r13	      2319	ldlang.c	FUNCTION_59
0x40056e2	            0x4154	                                push r12	      2319	ldlang.c	FUNCTION_59
0x40056e4	          0x4989cd	                            mov r13, rcx	      2319	ldlang.c	FUNCTION_59
0x40056e7	              0x55	                                push rbp	      2319	ldlang.c	FUNCTION_59
0x40056e8	              0x53	                                push rbx	      2319	ldlang.c	FUNCTION_59
0x40056e9	          0x4989fc	                            mov r12, rdi	      2319	ldlang.c	FUNCTION_59
0x40056ec	          0x4889f3	                            mov rbx, rsi	      2319	ldlang.c	FUNCTION_59
0x40056ef	          0x4989d0	                             mov r8, rdx	      2319	ldlang.c	FUNCTION_59
0x40056f2	        0x4883ec08	                              sub rsp, 8	      2319	ldlang.c	FUNCTION_59
0x40056f6	          0x8b6e20	            mov ebp, dword [rsi + 0x20] 	      2320	ldlang.c	FUNCTION_59
0x40056f9	            0x89ef	                            mov edi, ebp	      2327	ldlang.c	FUNCTION_59	CALL_1
0x40056fb	      0xe890baffff	  call sym.lang_discard_section_p.isra.5	      2327	ldlang.c	FUNCTION_59	CALL_1
0x4005700	        0x498b7530	            mov rsi, qword [r13 + 0x30] 	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005704	      0xb90a000000	                            mov ecx, 0xa	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005709	      0xbf00000000	                              mov edi, 0	      2331	ldlang.c	FUNCTION_59	IF_1
0x400570e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005710	           0xf97c2	                                 seta dl	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005713	           0xf92c1	                                 setb cl	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005716	            0x29ca	                            sub edx, ecx	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005718	            0x85c0	                           test eax, eax	      2334	ldlang.c	FUNCTION_59	IF_2
0x400571a	            0x753e	                           jne 0x400575a	      2334	ldlang.c	FUNCTION_59	IF_2
0x400571c	           0xfbed2	                           movsx edx, dl	      2334	ldlang.c	FUNCTION_59	IF_2
0x400571f	            0x85d2	                           test edx, edx	      2334	ldlang.c	FUNCTION_59	IF_2
0x4005721	            0x7437	                            je 0x400575a	      2334	ldlang.c	FUNCTION_59	IF_2
0x4005723	          0x4d85c0	                             test r8, r8	      2344	ldlang.c	FUNCTION_59	IF_4
0x4005726	            0x7420	                            je 0x4005748	      2344	ldlang.c	FUNCTION_59	IF_4
0x4005728	    0x488b05000000	            mov rax, qword [0x0400572f] 	      2348	ldlang.c	FUNCTION_59	IF_4
0x400572f	          0x4889da	                            mov rdx, rbx	      2348	ldlang.c	FUNCTION_59	IF_4
0x4005732	          0x4c89c6	                             mov rsi, r8	      2348	ldlang.c	FUNCTION_59	IF_4
0x4005735	      0xbf00000000	                              mov edi, 0	      2348	ldlang.c	FUNCTION_59	IF_4
0x400573a	        0x488b4008	                mov rax, qword [rax + 8]	      2348	ldlang.c	FUNCTION_59	IF_4
0x400573e	    0xff90f8020000	                call qword [rax + 0x2f8]	      2348	ldlang.c	FUNCTION_59	IF_4
0x4005744	            0x85c0	                           test eax, eax	      2349	ldlang.c	FUNCTION_59	IF_4	IF_5
0x4005746	            0x7407	                            je 0x400574f	      2349	ldlang.c	FUNCTION_59	IF_4	IF_5
0x4005748	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      2353	ldlang.c	FUNCTION_59	IF_6
0x400574d	            0x7421	                            je 0x4005770	      2353	ldlang.c	FUNCTION_59	IF_6
0x400574f	        0x4883c408	                              add rsp, 8	      2465	ldlang.c	FUNCTION_59
0x4005753	              0x5b	                                 pop rbx	      2465	ldlang.c	FUNCTION_59
0x4005754	              0x5d	                                 pop rbp	      2465	ldlang.c	FUNCTION_59
0x4005755	            0x415c	                                 pop r12	      2465	ldlang.c	FUNCTION_59
0x4005757	            0x415d	                                 pop r13	      2465	ldlang.c	FUNCTION_59
0x4005759	              0xc3	                                     ret	      2465	ldlang.c	FUNCTION_59
0x400575a	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      2336	ldlang.c	FUNCTION_59	IF_2	IF_3
0x400575f	            0x75ee	                           jne 0x400574f	      2336	ldlang.c	FUNCTION_59	IF_2	IF_3
0x4005761	    0x48c743680000	               mov qword [rbx + 0x68], 0	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x4005769	            0xebe4	                           jmp 0x400574f	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x400576b	       0xf1f440000	                   nop dword [rax + rax]	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x4005770	            0x89e8	                            mov eax, ebp	      2368	ldlang.c	FUNCTION_59	IF_7
0x4005772	      0x2500000202	                      and eax, 0x2020000	      2368	ldlang.c	FUNCTION_59	IF_7
0x4005777	      0x3d00000202	                      cmp eax, 0x2020000	      2368	ldlang.c	FUNCTION_59	IF_7
0x400577c	     0xf84b6010000	                            je 0x4005938	      2368	ldlang.c	FUNCTION_59	IF_7
0x4005782	     0xfb605000000	           movzx eax, byte [0x04005789] 	      2375	ldlang.c	FUNCTION_59	ELSE_2	IF_9	CALL_2
0x4005789	            0x89ea	                            mov edx, ebp	      2362	ldlang.c	FUNCTION_59
0x400578b	    0x81e5fbfdf1ff	                     and ebp, 0xfff1fdfb	      2362	ldlang.c	FUNCTION_59
0x4005791	          0x80e6fd	                            and dh, 0xfd	      2362	ldlang.c	FUNCTION_59
0x4005794	          0x83e003	                              and eax, 3	      2375	ldlang.c	FUNCTION_59	ELSE_2	IF_9	CALL_2
0x4005797	            0x3c02	                               cmp al, 2	      2362	ldlang.c	FUNCTION_59
0x4005799	           0xf44ea	                          cmove ebp, edx	      2362	ldlang.c	FUNCTION_59
0x400579c	    0x418b858c0000	            mov eax, dword [r13 + 0x8c] 	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x40057a3	          0x83f802	                              cmp eax, 2	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x40057a6	     0xf8444010000	                            je 0x40058f0	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x40057ac	            0x89ea	                            mov edx, ebp	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40057ae	          0x83e2fe	                     and edx, 0xfffffffe	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40057b1	          0x83f803	                              cmp eax, 3	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40057b4	           0xf44ea	                          cmove ebp, edx	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40057b7	        0x498b4d38	            mov rcx, qword [r13 + 0x38] 	      2400	ldlang.c	FUNCTION_59	IF_11
0x40057bb	          0x4885c9	                           test rcx, rcx	      2400	ldlang.c	FUNCTION_59	IF_11
0x40057be	     0xf84b5010000	                            je 0x4005979	      2400	ldlang.c	FUNCTION_59	IF_11
0x40057c4	            0x89e8	                            mov eax, ebp	      2405	ldlang.c	FUNCTION_59
0x40057c6	         0xfb65124	           movzx edx, byte [rcx + 0x24] 	      2407	ldlang.c	FUNCTION_59	IF_12
0x40057ca	          0x83c8f7	                      or eax, 0xfffffff7	      2405	ldlang.c	FUNCTION_59
0x40057cd	          0x234120	             and eax, dword [rcx + 0x20]	      2405	ldlang.c	FUNCTION_59
0x40057d0	          0xf6c204	                              test dl, 4	      2407	ldlang.c	FUNCTION_59	IF_12
0x40057d3	          0x894120	             mov dword [rcx + 0x20], eax	      2405	ldlang.c	FUNCTION_59
0x40057d6	     0xf85d4000000	                           jne 0x40058b0	      2407	ldlang.c	FUNCTION_59	IF_12
0x40057dc	          0x83ca04	                               or edx, 4	      2426	ldlang.c	FUNCTION_59	IF_14
0x40057df	             0x9e8	                             or eax, ebp	      2422	ldlang.c	FUNCTION_59
0x40057e1	    0x41b800000000	                              mov r8d, 0	      2430	ldlang.c	FUNCTION_59	IF_14
0x40057e7	          0x885124	               mov byte [rcx + 0x24], dl	      2426	ldlang.c	FUNCTION_59	IF_14
0x40057ea	    0x488b15000000	            mov rdx, qword [0x040057f1] 	      2430	ldlang.c	FUNCTION_59	IF_14
0x40057f1	          0x4889de	                            mov rsi, rbx	      2430	ldlang.c	FUNCTION_59	IF_14
0x40057f4	          0x894120	             mov dword [rcx + 0x20], eax	      2422	ldlang.c	FUNCTION_59
0x40057f7	    0x488bbbf00000	            mov rdi, qword [rbx + 0xf0] 	      2430	ldlang.c	FUNCTION_59	IF_14
0x40057fe	        0x488b4208	                mov rax, qword [rdx + 8]	      2430	ldlang.c	FUNCTION_59	IF_14
0x4005802	    0xff9048010000	                call qword [rax + 0x148]	      2430	ldlang.c	FUNCTION_59	IF_14
0x4005808	    0xf7c500008000	                      test ebp, 0x800000	      2434	ldlang.c	FUNCTION_59	IF_14	IF_15
0x400580e	            0x7410	                            je 0x4005820	      2434	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4005810	    0x8b93c4000000	            mov edx, dword [rbx + 0xc4] 	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4005816	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x400581a	    0x8990c4000000	             mov dword [rax + 0xc4], edx	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x4005820	    0x81e500000010	                     and ebp, 0x10000000	      2438	ldlang.c	FUNCTION_59	IF_16
0x4005826	     0xf85e4000000	                           jne 0x4005910	      2438	ldlang.c	FUNCTION_59	IF_16
0x400582c	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x4005830	          0x8b5370	            mov edx, dword [rbx + 0x70] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x4005833	          0x3b5070	            cmp edx, dword [rax + 0x70] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x4005836	            0x7603	                           jbe 0x400583b	      2445	ldlang.c	FUNCTION_59	IF_17
0x4005838	          0x895070	             mov dword [rax + 0x70], edx	      2446	ldlang.c	FUNCTION_59	IF_17
0x400583b	    0x8b1500000000	            mov edx, dword [0x04005841] 	      2450	ldlang.c	FUNCTION_59	IF_18
0x4005841	        0x48894368	             mov qword [rbx + 0x68], rax	      2448	ldlang.c	FUNCTION_59
0x4005845	            0x85d2	                           test edx, edx	      2450	ldlang.c	FUNCTION_59	IF_18
0x4005847	            0x7530	                           jne 0x4005879	      2450	ldlang.c	FUNCTION_59	IF_18
0x4005849	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	      2452	ldlang.c	FUNCTION_59	IF_18
0x4005850	    0x488998100100	            mov qword [rax + 0x110], rbx	      2453	ldlang.c	FUNCTION_59	IF_18
0x4005857	    0x48c783080100	              mov qword [rbx + 0x108], 0	      2454	ldlang.c	FUNCTION_59	IF_18
0x4005862	          0x4885d2	                           test rdx, rdx	      2456	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4005865	    0x488993100100	            mov qword [rbx + 0x110], rdx	      2455	ldlang.c	FUNCTION_59	IF_18
0x400586c	     0xf84fb000000	                            je 0x400596d	      2456	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4005872	    0x48899a080100	            mov qword [rdx + 0x108], rbx	      2457	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4005879	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400587e	      0xe800000000	                          call 0x4005883	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4005883	    0xc74008050000	                  mov dword [rax + 8], 5	      1040	ldlang.c	FUNCTION_33
0x400588a	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4005891	      0x498b542408	                mov rdx, qword [r12 + 8]	      7673	ldlang.c	FUNCTION_179
0x4005896	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x4005899	      0x4989442408	                mov qword [r12 + 8], rax	      7674	ldlang.c	FUNCTION_179
0x400589e	        0x48895810	             mov qword [rax + 0x10], rbx	      2464	ldlang.c	FUNCTION_59
0x40058a2	      0xe9a8feffff	                           jmp 0x400574f	      2464	ldlang.c	FUNCTION_59
0x40058a7	    0x660f1f840000	                    nop word [rax + rax]	      2464	ldlang.c	FUNCTION_59
0x40058b0	            0x89ea	                            mov edx, ebp	      2410	ldlang.c	FUNCTION_59	IF_12
0x40058b2	            0x89c6	                            mov esi, eax	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058b4	          0x83e2f7	                     and edx, 0xfffffff7	      2410	ldlang.c	FUNCTION_59	IF_12
0x40058b7	            0x31d6	                            xor esi, edx	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058b9	    0x81e600008001	                      and esi, 0x1800000	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058bf	            0x751a	                           jne 0x40058db	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058c1	    0xf7c500008000	                      test ebp, 0x800000	      2415	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058c7	     0xf848b000000	                            je 0x4005958	      2415	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058cd	    0x8bb3c4000000	            mov esi, dword [rbx + 0xc4] 	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058d3	    0x39b1c4000000	            cmp dword [rcx + 0xc4], esi 	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058d9	            0x747d	                            je 0x4005958	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058db	      0x25ffff7ffe	                     and eax, 0xfe7fffff	      2418	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058e0	    0x81e5f7ff7ffe	                     and ebp, 0xfe7ffff7	      2419	ldlang.c	FUNCTION_59	IF_12	IF_13
0x40058e6	             0x9e8	                             or eax, ebp	      2422	ldlang.c	FUNCTION_59
0x40058e8	          0x894120	             mov dword [rcx + 0x20], eax	      2422	ldlang.c	FUNCTION_59
0x40058eb	      0xe930ffffff	                           jmp 0x4005820	      2422	ldlang.c	FUNCTION_59
0x40058f0	    0x488b05000000	            mov rax, qword [0x040058f7] 	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40058f7	        0x488b4008	                mov rax, qword [rax + 8]	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40058fb	        0x83780805	                  cmp dword [rax + 8], 5	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40058ff	            0x745b	                            je 0x400595c	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x4005901	          0x83e5fc	                     and ebp, 0xfffffffc	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x4005904	    0x81cd00020000	                           or ebp, 0x200	      2396	ldlang.c	FUNCTION_59	SWITCH_1	ELSE_3
0x400590a	      0xe9a8feffff	                           jmp 0x40057b7	      2396	ldlang.c	FUNCTION_59	SWITCH_1	ELSE_3
0x400590f	              0x90	                                     nop	      2396	ldlang.c	FUNCTION_59	SWITCH_1	ELSE_3
0x4005910	    0x488bbbf00000	            mov rdi, qword [rbx + 0xf0] 	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x4005917	      0xe800000000	                          call 0x400591c	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x400591c	          0x83f826	                           cmp eax, 0x26	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x400591f	     0xf8507ffffff	                           jne 0x400582c	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x4005925	    0x41c745788000	           mov dword [r13 + 0x78], 0x80 	      2442	ldlang.c	FUNCTION_59	IF_16
0x400592d	      0xe9fafeffff	                           jmp 0x400582c	      2442	ldlang.c	FUNCTION_59	IF_16
0x4005932	    0x660f1f440000	                    nop word [rax + rax]	      2442	ldlang.c	FUNCTION_59	IF_16
0x4005938	            0x89e8	                            mov eax, ebp	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400593a	    0x81e5fbfdf3ff	                     and ebp, 0xfff3fdfb	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005940	      0x25fbfdf1ff	                     and eax, 0xfff1fdfb	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005945	    0xf60500000000	           test byte [0x0400594c], 0x10 	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400594c	           0xf45e8	                         cmovne ebp, eax	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400594f	      0xe948feffff	                           jmp 0x400579c	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005954	         0xf1f4000	                         nop dword [rax]	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005958	            0x89d5	                            mov ebp, edx	      2410	ldlang.c	FUNCTION_59	IF_12
0x400595a	            0xeb8a	                           jmp 0x40058e6	      2410	ldlang.c	FUNCTION_59	IF_12
0x400595c	    0x81e5fdfeffff	                     and ebp, 0xfffffefd	      2410	ldlang.c	FUNCTION_59	IF_12
0x4005962	    0x81cd00020000	                           or ebp, 0x200	      2394	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x4005968	      0xe94afeffff	                           jmp 0x40057b7	      2394	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x400596d	    0x488998080100	            mov qword [rax + 0x108], rbx	      2459	ldlang.c	FUNCTION_59	IF_18	ELSE_4
0x4005974	      0xe900ffffff	                           jmp 0x4005879	      2459	ldlang.c	FUNCTION_59	IF_18	ELSE_4
0x4005979	            0x89ee	                            mov esi, ebp	      2401	ldlang.c	FUNCTION_59	CALL_3
0x400597b	          0x4c89ef	                            mov rdi, r13	      2401	ldlang.c	FUNCTION_59	CALL_3
0x400597e	      0xe8bdf3ffff	                        call sym.init_os	      2401	ldlang.c	FUNCTION_59	CALL_3
0x4005983	        0x498b4d38	            mov rcx, qword [r13 + 0x38] 	      2401	ldlang.c	FUNCTION_59	CALL_3
0x4005987	      0xe938feffff	                           jmp 0x40057c4	      2401	ldlang.c	FUNCTION_59	CALL_3
lang_for_each_input_file	CALL,1:functions,0:WHILE,0:FOR,1:IF,0:DO,0:SWITCH,0:ELSE,0	17
0x4006730	              0x55	                                push rbp	      6612	ldlang.c	FUNCTION_141
0x4006731	              0x53	                                push rbx	      6612	ldlang.c	FUNCTION_141
0x4006732	        0x4883ec08	                              sub rsp, 8	      6612	ldlang.c	FUNCTION_141
0x4006736	    0x488b1d000000	            mov rbx, qword [0x0400673d] 	      6615	ldlang.c	FUNCTION_141	FOR_1
0x400673d	          0x4885db	                           test rbx, rbx	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4006740	            0x7414	                            je 0x4006756	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4006742	          0x4889fd	                            mov rbp, rdi	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4006745	           0xf1f00	                         nop dword [rax]	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4006748	          0x4889df	                            mov rdi, rbx	      6618	ldlang.c	FUNCTION_141	CALL_1
0x400674b	            0xffd5	                                call rbp	      6618	ldlang.c	FUNCTION_141	CALL_1
0x400674d	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      6617	ldlang.c	FUNCTION_141	FOR_1
0x4006751	          0x4885db	                           test rbx, rbx	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4006754	            0x75f2	                           jne 0x4006748	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4006756	        0x4883c408	                              add rsp, 8	      6619	ldlang.c	FUNCTION_141
0x400675a	              0x5b	                                 pop rbx	      6619	ldlang.c	FUNCTION_141
0x400675b	              0x5d	                                 pop rbp	      6619	ldlang.c	FUNCTION_141
0x400675c	              0xc3	                                     ret	      6619	ldlang.c	FUNCTION_141
walk_wild	CALL,3:functions,3:WHILE,0:FOR,0:IF,4:DO,0:SWITCH,0:ELSE,3	128
0x4006de0	            0x4157	                                push r15	       909	ldlang.c	FUNCTION_27
0x4006de2	            0x4156	                                push r14	       909	ldlang.c	FUNCTION_27
0x4006de4	          0x4989d6	                            mov r14, rdx	       909	ldlang.c	FUNCTION_27
0x4006de7	            0x4155	                                push r13	       909	ldlang.c	FUNCTION_27
0x4006de9	            0x4154	                                push r12	       909	ldlang.c	FUNCTION_27
0x4006deb	          0x4989f5	                            mov r13, rsi	       909	ldlang.c	FUNCTION_27
0x4006dee	              0x55	                                push rbp	       909	ldlang.c	FUNCTION_27
0x4006def	              0x53	                                push rbx	       909	ldlang.c	FUNCTION_27
0x4006df0	          0x4989fc	                            mov r12, rdi	       909	ldlang.c	FUNCTION_27
0x4006df3	        0x4883ec08	                              sub rsp, 8	       909	ldlang.c	FUNCTION_27
0x4006df7	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       910	ldlang.c	FUNCTION_27
0x4006dfb	          0x4885ed	                           test rbp, rbp	       913	ldlang.c	FUNCTION_27	IF_1
0x4006dfe	            0x7478	                            je 0x4006e78	       913	ldlang.c	FUNCTION_27	IF_1
0x4006e00	          0x4889ef	                            mov rdi, rbp	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006e03	      0xe8089fffff	                   call sym.archive_path	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006e08	          0x4885c0	                           test rax, rax	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006e0b	          0x4989c7	                            mov r15, rax	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006e0e	     0xf84a4000000	                            je 0x4006eb8	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006e14	    0x488b1d000000	            mov rbx, qword [0x04006e1b] 	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e1b	          0x4885db	                           test rbx, rbx	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e1e	            0x7511	                           jne 0x4006e31	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e20	            0xeb40	                           jmp 0x4006e62	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e22	    0x660f1f440000	                    nop word [rax + rax]	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e28	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e2c	          0x4885db	                           test rbx, rbx	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e2f	            0x7431	                            je 0x4006e62	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e31	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4006e35	        0x488d4b20	                   lea rcx, [rbx + 0x20]	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4006e39	          0x4c89fe	                            mov rsi, r15	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4006e3c	          0x4889ef	                            mov rdi, rbp	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4006e3f	      0xe86cb7ffff	call sym.input_statement_is_archive_path.isra.24	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4006e44	            0x85c0	                           test eax, eax	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4006e46	            0x74e0	                            je 0x4006e28	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x4006e48	          0x4889de	                            mov rsi, rbx	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x4006e4b	          0x4c89f1	                            mov rcx, r14	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x4006e4e	          0x4c89ea	                            mov rdx, r13	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x4006e51	          0x4c89e7	                            mov rdi, r12	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x4006e54	      0xe817c3ffff	                 call sym.walk_wild_file	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x4006e59	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e5d	          0x4885db	                           test rbx, rbx	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e60	            0x75cf	                           jne 0x4006e31	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006e62	        0x4883c408	                              add rsp, 8	       946	ldlang.c	FUNCTION_27
0x4006e66	              0x5b	                                 pop rbx	       946	ldlang.c	FUNCTION_27
0x4006e67	              0x5d	                                 pop rbp	       946	ldlang.c	FUNCTION_27
0x4006e68	            0x415c	                                 pop r12	       946	ldlang.c	FUNCTION_27
0x4006e6a	            0x415d	                                 pop r13	       946	ldlang.c	FUNCTION_27
0x4006e6c	            0x415e	                                 pop r14	       946	ldlang.c	FUNCTION_27
0x4006e6e	            0x415f	                                 pop r15	       946	ldlang.c	FUNCTION_27
0x4006e70	              0xc3	                                     ret	       946	ldlang.c	FUNCTION_27
0x4006e71	     0xf1f80000000	                         nop dword [rax]	       946	ldlang.c	FUNCTION_27
0x4006e78	    0x488b1d000000	            mov rbx, qword [0x04006e7f] 	       916	ldlang.c	FUNCTION_27	IF_1
0x4006e7f	          0x4885db	                           test rbx, rbx	       916	ldlang.c	FUNCTION_27	IF_1
0x4006e82	            0x74de	                            je 0x4006e62	       916	ldlang.c	FUNCTION_27	IF_1
0x4006e84	         0xf1f4000	                         nop dword [rax]	       916	ldlang.c	FUNCTION_27	IF_1
0x4006e88	          0x4889de	                            mov rsi, rbx	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006e8b	          0x4c89f1	                            mov rcx, r14	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006e8e	          0x4c89ea	                            mov rdx, r13	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006e91	          0x4c89e7	                            mov rdi, r12	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006e94	      0xe8d7c2ffff	                 call sym.walk_wild_file	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006e99	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       916	ldlang.c	FUNCTION_27	IF_1
0x4006e9d	          0x4885db	                           test rbx, rbx	       916	ldlang.c	FUNCTION_27	IF_1
0x4006ea0	            0x75e6	                           jne 0x4006e88	       916	ldlang.c	FUNCTION_27	IF_1
0x4006ea2	        0x4883c408	                              add rsp, 8	       946	ldlang.c	FUNCTION_27
0x4006ea6	              0x5b	                                 pop rbx	       946	ldlang.c	FUNCTION_27
0x4006ea7	              0x5d	                                 pop rbp	       946	ldlang.c	FUNCTION_27
0x4006ea8	            0x415c	                                 pop r12	       946	ldlang.c	FUNCTION_27
0x4006eaa	            0x415d	                                 pop r13	       946	ldlang.c	FUNCTION_27
0x4006eac	            0x415e	                                 pop r14	       946	ldlang.c	FUNCTION_27
0x4006eae	            0x415f	                                 pop r15	       946	ldlang.c	FUNCTION_27
0x4006eb0	              0xc3	                                     ret	       946	ldlang.c	FUNCTION_27
0x4006eb1	     0xf1f80000000	                         nop dword [rax]	       946	ldlang.c	FUNCTION_27
0x4006eb8	         0xfb64500	                   movzx eax, byte [rbp]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ebc	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ebe	     0xf848e000000	                            je 0x4006f52	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ec4	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ec7	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ec9	            0x7710	                            ja 0x4006edb	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ecb	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x4006ed5	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4006ed9	            0x722d	                            jb 0x4006f08	      1115	string2.h	FUNCTION_223	WHILE_1
0x4006edb	          0x4889ea	                            mov rdx, rbp	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ede	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x4006ee8	     0xf1f84000000	                   nop dword [rax + rax]	      1115	string2.h	FUNCTION_223	WHILE_1
0x4006ef0	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4006ef4	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ef7	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006ef9	            0x7457	                            je 0x4006f52	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006efb	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006efe	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006f00	            0x77ee	                            ja 0x4006ef0	      1114	string2.h	FUNCTION_223	WHILE_1
0x4006f02	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4006f06	            0x73e8	                           jae 0x4006ef0	      1115	string2.h	FUNCTION_223	WHILE_1
0x4006f08	    0x488b1d000000	            mov rbx, qword [0x04006f0f] 	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f0f	          0x4885db	                           test rbx, rbx	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f12	            0x7519	                           jne 0x4006f2d	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f14	      0xe949ffffff	                           jmp 0x4006e62	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f19	     0xf1f80000000	                         nop dword [rax]	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f20	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f24	          0x4885db	                           test rbx, rbx	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f27	     0xf8435ffffff	                            je 0x4006e62	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006f2d	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006f31	            0x31d2	                            xor edx, edx	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006f33	          0x4889ef	                            mov rdi, rbp	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006f36	      0xe800000000	                          call 0x4006f3b	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006f3b	            0x85c0	                           test eax, eax	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006f3d	            0x75e1	                           jne 0x4006f20	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006f3f	          0x4c89f1	                            mov rcx, r14	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006f42	          0x4c89ea	                            mov rdx, r13	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006f45	          0x4889de	                            mov rsi, rbx	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006f48	          0x4c89e7	                            mov rdi, r12	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006f4b	      0xe820c2ffff	                 call sym.walk_wild_file	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006f50	            0xebce	                           jmp 0x4006f20	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006f52	          0x4889ef	                            mov rdi, rbp	       942	ldlang.c	FUNCTION_27	ELSE_3	CALL_2
0x4006f55	      0xe8f6fdffff	                    call sym.lookup_name	       942	ldlang.c	FUNCTION_27	ELSE_3	CALL_2
0x4006f5a	          0x4885c0	                           test rax, rax	       943	ldlang.c	FUNCTION_27	ELSE_3	IF_4
0x4006f5d	     0xf84fffeffff	                            je 0x4006e62	       943	ldlang.c	FUNCTION_27	ELSE_3	IF_4
0x4006f63	        0x4883c408	                              add rsp, 8	       946	ldlang.c	FUNCTION_27
0x4006f67	          0x4c89f1	                            mov rcx, r14	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x4006f6a	          0x4c89ea	                            mov rdx, r13	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x4006f6d	              0x5b	                                 pop rbx	       946	ldlang.c	FUNCTION_27
0x4006f6e	          0x4c89e7	                            mov rdi, r12	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x4006f71	          0x4889c6	                            mov rsi, rax	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x4006f74	              0x5d	                                 pop rbp	       946	ldlang.c	FUNCTION_27
0x4006f75	            0x415c	                                 pop r12	       946	ldlang.c	FUNCTION_27
0x4006f77	            0x415d	                                 pop r13	       946	ldlang.c	FUNCTION_27
0x4006f79	            0x415e	                                 pop r14	       946	ldlang.c	FUNCTION_27
0x4006f7b	            0x415f	                                 pop r15	       946	ldlang.c	FUNCTION_27
0x4006f7d	      0xe9eec1ffff	                  jmp sym.walk_wild_file	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
strip_excluded_output_sections	CALL,2:functions,0:WHILE,0:FOR,2:IF,7:DO,0:SWITCH,0:ELSE,0	77
0x40079e0	        0x4883ec08	                              sub rsp, 8	      3885	ldlang.c	FUNCTION_88
0x40079e4	    0x833d00000000	               cmp dword [0x040079eb], 1	      3889	ldlang.c	FUNCTION_88	IF_1
0x40079eb	            0x7422	                            je 0x4007a0f	      3889	ldlang.c	FUNCTION_88	IF_1
0x40079ed	            0x31f6	                            xor esi, esi	      3893	ldlang.c	FUNCTION_88	IF_1	CALL_1
0x40079ef	            0x31ff	                            xor edi, edi	      3893	ldlang.c	FUNCTION_88	IF_1	CALL_1
0x40079f1	    0xc70500000000	               mov dword [0x040079fb], 1	      3891	ldlang.c	FUNCTION_88	IF_1
0x40079fb	    0xc70500000000	               mov dword [0x04007a05], 0	      3892	ldlang.c	FUNCTION_88	IF_1
0x4007a05	      0xe800000000	                          call 0x4007a0a	      3893	ldlang.c	FUNCTION_88	IF_1	CALL_1
0x4007a0a	      0xe800000000	                          call 0x4007a0f	      3894	ldlang.c	FUNCTION_88	IF_1	CALL_2
0x4007a0f	     0xfb63d000000	           movzx edi, byte [0x04007a16] 	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007a16	    0x488b0d000000	            mov rcx, qword [0x04007a1d] 	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4007a1d	    0x4c8b15000000	            mov r10, qword [0x04007a24] 	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a24	          0x83e708	                              and edi, 8	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007a27	          0x4885c9	                           test rcx, rcx	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4007a2a	            0x744d	                            je 0x4007a79	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4007a2c	         0xf1f4000	                         nop dword [rax]	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4007a30	    0x8b8184000000	            mov eax, dword [rcx + 0x84] 	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x4007a36	            0x85c0	                           test eax, eax	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x4007a38	            0x7836	                            js 0x4007a70	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x4007a3a	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      3907	ldlang.c	FUNCTION_88	FOR_1
0x4007a3e	          0x4885f6	                           test rsi, rsi	      3908	ldlang.c	FUNCTION_88	FOR_1	IF_3
0x4007a41	            0x742d	                            je 0x4007a70	      3908	ldlang.c	FUNCTION_88	FOR_1	IF_3
0x4007a43	      0x48837e4000	               cmp qword [rsi + 0x40], 0	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a48	            0x7526	                           jne 0x4007a70	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a4a	        0x448b4620	            mov r8d, dword [rsi + 0x20] 	      3912	ldlang.c	FUNCTION_88	FOR_1
0x4007a4e	    0x41f7c0000020	                      test r8d, 0x200000	      3912	ldlang.c	FUNCTION_88	FOR_1
0x4007a55	            0x7519	                           jne 0x4007a70	      3912	ldlang.c	FUNCTION_88	FOR_1
0x4007a57	        0x4c8b4e10	              mov r9, qword [rsi + 0x10]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a5b	          0x4d85c9	                             test r9, r9	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a5e	            0x741e	                            je 0x4007a7e	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a60	        0x493b7118	              cmp rsi, qword [r9 + 0x18]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a64	            0x7421	                            je 0x4007a87	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a70	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	      3899	ldlang.c	FUNCTION_88	FOR_1
0x4007a74	          0x4885c9	                           test rcx, rcx	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4007a77	            0x75b7	                           jne 0x4007a30	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4007a79	        0x4883c408	                              add rsp, 8	      3945	ldlang.c	FUNCTION_88
0x4007a7d	              0xc3	                                     ret	      3945	ldlang.c	FUNCTION_88
0x4007a7e	    0x493bb2980000	            cmp rsi, qword [r10 + 0x98] 	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a85	            0x75e9	                           jne 0x4007a70	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007a87	    0x488b86080100	           mov rax, qword [rsi + 0x108] 	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x4007a8e	          0x4885c0	                           test rax, rax	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x4007a91	            0x7426	                            je 0x4007ab9	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x4007a93	       0xf1f440000	                   nop dword [rax + rax]	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x4007a98	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007a9b	          0xf6c680	                           test dh, 0x80	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007a9e	            0x750d	                           jne 0x4007aad	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007aa0	    0x81e200001000	                       and edx, 0x100000	      3926	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007aa6	            0x75c8	                           jne 0x4007a70	      3926	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007aa8	          0x4084ff	                           test dil, dil	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007aab	            0x75c3	                           jne 0x4007a70	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007aad	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x4007ab4	          0x4885c0	                           test rax, rax	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x4007ab7	            0x75df	                           jne 0x4007a98	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x4007ab9	     0xfb681900000	           movzx eax, byte [rcx + 0x90] 	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x4007ac0	            0xa810	                           test al, 0x10	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x4007ac2	            0x7509	                           jne 0x4007acd	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x4007ac4	          0x83c808	                               or eax, 8	      3939	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x4007ac7	    0x888190000000	               mov byte [rcx + 0x90], al	      3939	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x4007acd	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007ad1	    0x4181c8008000	                          or r8d, 0x8000	      3940	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007ad8	        0x44894620	             mov dword [rsi + 0x20], r8d	      3940	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007adc	          0x4885c0	                           test rax, rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007adf	            0x741f	                            je 0x4007b00	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007ae1	          0x4d85c9	                             test r9, r9	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007ae4	        0x4c894810	              mov qword [rax + 0x10], r9	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007ae8	            0x7426	                            je 0x4007b10	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007aea	        0x49894118	              mov qword [r9 + 0x18], rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007aee	    0x4183aaa00000	               sub dword [r10 + 0xa0], 1	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007af6	      0xe975ffffff	                           jmp 0x4007a70	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007afb	       0xf1f440000	                   nop dword [rax + rax]	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007b00	          0x4d85c9	                             test r9, r9	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007b03	    0x4d898a900000	              mov qword [r10 + 0x90], r9	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007b0a	            0x75de	                           jne 0x4007aea	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007b0c	         0xf1f4000	                         nop dword [rax]	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007b10	    0x498982980000	             mov qword [r10 + 0x98], rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007b17	            0xebd5	                           jmp 0x4007aee	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
lang_new_phdr	CALL,4:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,0:ELSE,0	75
0x4008cd0	            0x4157	                                push r15	      7743	ldlang.c	FUNCTION_184
0x4008cd2	            0x4156	                                push r14	      7743	ldlang.c	FUNCTION_184
0x4008cd4	          0x4989ff	                            mov r15, rdi	      7743	ldlang.c	FUNCTION_184
0x4008cd7	            0x4155	                                push r13	      7743	ldlang.c	FUNCTION_184
0x4008cd9	            0x4154	                                push r12	      7743	ldlang.c	FUNCTION_184
0x4008cdb	      0xbf30000000	                           mov edi, 0x30	      7747	ldlang.c	FUNCTION_184	CALL_1
0x4008ce0	              0x55	                                push rbp	      7743	ldlang.c	FUNCTION_184
0x4008ce1	              0x53	                                push rbx	      7743	ldlang.c	FUNCTION_184
0x4008ce2	          0x4189d4	                           mov r12d, edx	      7743	ldlang.c	FUNCTION_184
0x4008ce5	            0x89cb	                            mov ebx, ecx	      7743	ldlang.c	FUNCTION_184
0x4008ce7	          0x4d89c6	                             mov r14, r8	      7743	ldlang.c	FUNCTION_184
0x4008cea	          0x4d89cd	                             mov r13, r9	      7743	ldlang.c	FUNCTION_184
0x4008ced	        0x4883ec18	                           sub rsp, 0x18	      7743	ldlang.c	FUNCTION_184
0x4008cf1	      0x4889742408	                mov qword [rsp + 8], rsi	      7743	ldlang.c	FUNCTION_184
0x4008cf6	      0xe800000000	                          call 0x4008cfb	      7747	ldlang.c	FUNCTION_184	CALL_1
0x4008cfb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008d00	      0xba00000000	                              mov edx, 0	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008d05	            0x31f6	                            xor esi, esi	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008d07	    0x48c700000000	                      mov qword [rax], 0	      7748	ldlang.c	FUNCTION_184
0x4008d0e	        0x4c897808	                mov qword [rax + 8], r15	      7749	ldlang.c	FUNCTION_184
0x4008d12	          0x4889c5	                            mov rbp, rax	      7747	ldlang.c	FUNCTION_184	CALL_1
0x4008d15	      0xe800000000	                          call 0x4008d1a	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008d1a	            0x4898	                                    cdqe	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008d1c	            0x31d2	                            xor edx, edx	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008d1e	        0x44896518	           mov dword [rbp + 0x18], r12d 	      7751	ldlang.c	FUNCTION_184
0x4008d22	        0x4883f801	                              cmp rax, 1	      7756	ldlang.c	FUNCTION_184
0x4008d26	        0x48894510	            mov qword [rbp + 0x10], rax 	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008d2a	          0x895d1c	            mov dword [rbp + 0x1c], ebx 	      7752	ldlang.c	FUNCTION_184
0x4008d2d	        0x4c897520	            mov qword [rbp + 0x20], r14 	      7753	ldlang.c	FUNCTION_184
0x4008d31	        0x4c896d28	            mov qword [rbp + 0x28], r13 	      7754	ldlang.c	FUNCTION_184
0x4008d35	            0x7479	                            je 0x4008db0	      7756	ldlang.c	FUNCTION_184
0x4008d37	    0x488b05000000	            mov rax, qword [0x04008d3e] 	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d3e	      0xbb00000000	                              mov ebx, 0	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d43	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d46	            0x7513	                           jne 0x4008d5b	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d48	            0xeb52	                           jmp 0x4008d9c	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d4a	    0x660f1f440000	                    nop word [rax + rax]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d50	          0x488b1b	                    mov rbx, qword [rbx]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d53	          0x488b03	                    mov rax, qword [rbx]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d56	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d59	            0x7441	                            je 0x4008d9c	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d5b	            0x85d2	                           test edx, edx	      7759	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d5d	            0x74f1	                            je 0x4008d50	      7759	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d5f	      0x4883781001	               cmp qword [rax + 0x10], 1	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d64	      0xba01000000	                              mov edx, 1	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d69	            0x75e5	                           jne 0x4008d50	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d6b	      0x4883781800	               cmp qword [rax + 0x18], 0	      7761	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d70	            0x75de	                           jne 0x4008d50	      7761	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d72	      0xba05000000	                              mov edx, 5	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d77	            0x31ff	                            xor edi, edi	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d79	      0xbe00000000	                              mov esi, 0	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d7e	      0xe800000000	                          call 0x4008d83	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d83	            0x31f6	                            xor esi, esi	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d85	          0x4889c7	                            mov rdi, rax	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d88	            0x31c0	                            xor eax, eax	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d8a	      0xe800000000	                          call 0x4008d8f	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008d8f	          0x488b1b	                    mov rbx, qword [rbx]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d92	            0x31d2	                            xor edx, edx	      7765	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008d94	          0x488b03	                    mov rax, qword [rbx]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d97	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d9a	            0x75bf	                           jne 0x4008d5b	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008d9c	          0x48892b	                    mov qword [rbx], rbp	      7768	ldlang.c	FUNCTION_184
0x4008d9f	        0x4883c418	                           add rsp, 0x18	      7769	ldlang.c	FUNCTION_184
0x4008da3	              0x5b	                                 pop rbx	      7769	ldlang.c	FUNCTION_184
0x4008da4	              0x5d	                                 pop rbp	      7769	ldlang.c	FUNCTION_184
0x4008da5	            0x415c	                                 pop r12	      7769	ldlang.c	FUNCTION_184
0x4008da7	            0x415d	                                 pop r13	      7769	ldlang.c	FUNCTION_184
0x4008da9	            0x415e	                                 pop r14	      7769	ldlang.c	FUNCTION_184
0x4008dab	            0x415f	                                 pop r15	      7769	ldlang.c	FUNCTION_184
0x4008dad	              0xc3	                                     ret	      7769	ldlang.c	FUNCTION_184
0x4008dae	            0x6690	                                     nop	      7769	ldlang.c	FUNCTION_184
0x4008db0	            0x31d2	                            xor edx, edx	      7756	ldlang.c	FUNCTION_184
0x4008db2	          0x4109dc	                            or r12d, ebx	      7756	ldlang.c	FUNCTION_184
0x4008db5	           0xf95c2	                                setne dl	      7756	ldlang.c	FUNCTION_184
0x4008db8	      0xe97affffff	                           jmp 0x4008d37	      7756	ldlang.c	FUNCTION_184
lang_relax_sections	CALL,6:functions,0:WHILE,1:FOR,0:IF,2:DO,1:SWITCH,0:ELSE,0	47
0x4007d30	              0x53	                                push rbx	      6931	ldlang.c	FUNCTION_155
0x4007d31	        0x4883ec10	                           sub rsp, 0x10	      6931	ldlang.c	FUNCTION_155
0x4007d35	    0x64488b042528	                mov rax, qword fs:[0x28]	      6931	ldlang.c	FUNCTION_155
0x4007d3e	      0x4889442408	                mov qword [rsp + 8], rax	      6931	ldlang.c	FUNCTION_155
0x4007d43	            0x31c0	                            xor eax, eax	      6931	ldlang.c	FUNCTION_155
0x4007d45	    0x833d00000000	               cmp dword [0x04007d4c], 1	      6932	ldlang.c	FUNCTION_155	IF_1
0x4007d4c	            0x7622	                           jbe 0x4007d70	      6932	ldlang.c	FUNCTION_155	IF_1
0x4007d4e	            0x85ff	                           test edi, edi	      6974	ldlang.c	FUNCTION_155	IF_2
0x4007d50	     0xf8580000000	                           jne 0x4007dd6	      6974	ldlang.c	FUNCTION_155	IF_2
0x4007d56	      0x488b442408	                mov rax, qword [rsp + 8]	      6981	ldlang.c	FUNCTION_155
0x4007d5b	    0x644833042528	                xor rax, qword fs:[0x28]	      6981	ldlang.c	FUNCTION_155
0x4007d64	     0xf858c000000	                           jne 0x4007df6	      6981	ldlang.c	FUNCTION_155
0x4007d6a	        0x4883c410	                           add rsp, 0x10	      6981	ldlang.c	FUNCTION_155
0x4007d6e	              0x5b	                                 pop rbx	      6981	ldlang.c	FUNCTION_155
0x4007d6f	              0xc3	                                     ret	      6981	ldlang.c	FUNCTION_155
0x4007d70	    0x8b1d00000000	            mov ebx, dword [0x04007d76] 	      6935	ldlang.c	FUNCTION_155	IF_1
0x4007d76	    0xc70500000000	               mov dword [0x04007d80], 0	      6938	ldlang.c	FUNCTION_155	IF_1
0x4007d80	            0x85db	                           test ebx, ebx	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007d82	            0x7452	                            je 0x4007dd6	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007d84	         0xf1f4000	                         nop dword [rax]	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007d88	      0xb8ffffffff	                     mov eax, 0xffffffff	      6931	ldlang.c	FUNCTION_155
0x4007d8d	            0xeb07	                           jmp 0x4007d96	      6931	ldlang.c	FUNCTION_155
0x4007d8f	              0x90	                                     nop	      6931	ldlang.c	FUNCTION_155
0x4007d90	    0x8b0500000000	            mov eax, dword [0x04007d96] 	      6931	ldlang.c	FUNCTION_155
0x4007d96	          0x83c001	                              add eax, 1	      6948	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x4007d99	      0xbf03000000	                              mov edi, 3	      6956	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_1
0x4007d9e	    0x890500000000	            mov dword [0x04007da4], eax 	      6948	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x4007da4	      0xe800000000	                          call 0x4007da9	      6956	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_1
0x4007da9	      0xe800000000	                          call 0x4007dae	      6960	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_2
0x4007dae	      0x488d7c2404	                      lea rdi, [rsp + 4]	      6965	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_3
0x4007db3	            0x31f6	                            xor esi, esi	      6965	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_3
0x4007db5	    0xc74424040000	                  mov dword [rsp + 4], 0	      6964	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x4007dbd	      0xe800000000	                          call 0x4007dc2	      6965	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_3
0x4007dc2	        0x8b442404	                mov eax, dword [rsp + 4]	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007dc6	            0x85c0	                           test eax, eax	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007dc8	            0x75c6	                           jne 0x4007d90	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007dca	    0x830500000000	               add dword [0x04007dd1], 1	      6969	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007dd1	          0x83eb01	                              sub ebx, 1	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007dd4	            0x75b2	                           jne 0x4007d88	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007dd6	      0xbf03000000	                              mov edi, 3	      6977	ldlang.c	FUNCTION_155	IF_2	CALL_4
0x4007ddb	      0xe800000000	                          call 0x4007de0	      6977	ldlang.c	FUNCTION_155	IF_2	CALL_4
0x4007de0	      0xe800000000	                          call 0x4007de5	      6978	ldlang.c	FUNCTION_155	IF_2	CALL_5
0x4007de5	      0xbe01000000	                              mov esi, 1	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x4007dea	            0x31ff	                            xor edi, edi	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x4007dec	      0xe800000000	                          call 0x4007df1	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x4007df1	      0xe960ffffff	                           jmp 0x4007d56	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x4007df6	      0xe800000000	                          call 0x4007dfb	      6981	ldlang.c	FUNCTION_155
version_expr_head_eq	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	9
0x4000350	        0x4883ec08	                              sub rsp, 8	      8357	ldlang.c	FUNCTION_197
0x4000354	        0x488b7608	                mov rsi, qword [rsi + 8]	      8363	ldlang.c	FUNCTION_197
0x4000358	        0x488b7f08	                mov rdi, qword [rdi + 8]	      8363	ldlang.c	FUNCTION_197
0x400035c	      0xe800000000	                          call 0x4000361	      8363	ldlang.c	FUNCTION_197
0x4000361	            0x85c0	                           test eax, eax	      8363	ldlang.c	FUNCTION_197
0x4000363	           0xf94c0	                                 sete al	      8363	ldlang.c	FUNCTION_197
0x4000366	        0x4883c408	                              add rsp, 8	      8364	ldlang.c	FUNCTION_197
0x400036a	           0xfb6c0	                           movzx eax, al	      8363	ldlang.c	FUNCTION_197
0x400036d	              0xc3	                                     ret	      8364	ldlang.c	FUNCTION_197
lang_add_nocrossref_to	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	12
0x4008e00	              0x53	                                push rbx	      7920	ldlang.c	FUNCTION_187
0x4008e01	          0x4889fb	                            mov rbx, rdi	      7920	ldlang.c	FUNCTION_187
0x4008e04	      0xbf18000000	                           mov edi, 0x18	      7906	ldlang.c	FUNCTION_186	CALL_1
0x4008e09	      0xe800000000	                          call 0x4008e0e	      7906	ldlang.c	FUNCTION_186	CALL_1
0x4008e0e	    0x488b15000000	            mov rdx, qword [0x04008e15] 	      7907	ldlang.c	FUNCTION_186
0x4008e15	        0x48895808	                mov qword [rax + 8], rbx	      7908	ldlang.c	FUNCTION_186
0x4008e19	    0xc74010010000	               mov dword [rax + 0x10], 1	      7922	ldlang.c	FUNCTION_187
0x4008e20	    0x488905000000	            mov qword [0x04008e27], rax 	      7910	ldlang.c	FUNCTION_186
0x4008e27	    0x800d00000000	                 or byte [0x04008e2e], 1	      7913	ldlang.c	FUNCTION_186
0x4008e2e	          0x488910	                    mov qword [rax], rdx	      7907	ldlang.c	FUNCTION_186
0x4008e31	              0x5b	                                 pop rbx	      7923	ldlang.c	FUNCTION_187
0x4008e32	              0xc3	                                     ret	      7923	ldlang.c	FUNCTION_187
lang_add_data	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	19
0x40084d0	            0x4154	                                push r12	      7546	ldlang.c	FUNCTION_171
0x40084d2	              0x55	                                push rbp	      7546	ldlang.c	FUNCTION_171
0x40084d3	            0x89fd	                            mov ebp, edi	      7546	ldlang.c	FUNCTION_171
0x40084d5	              0x53	                                push rbx	      7546	ldlang.c	FUNCTION_171
0x40084d6	    0x488b1d000000	            mov rbx, qword [0x040084dd] 	      7549	ldlang.c	FUNCTION_171
0x40084dd	      0xbf38000000	                           mov edi, 0x38	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40084e2	          0x4989f4	                            mov r12, rsi	      7546	ldlang.c	FUNCTION_171
0x40084e5	      0xe800000000	                          call 0x40084ea	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40084ea	    0xc74008080000	                  mov dword [rax + 8], 8	      1040	ldlang.c	FUNCTION_33
0x40084f1	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x40084f8	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x40084fc	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x40084ff	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x4008503	        0x4c896018	             mov qword [rax + 0x18], r12	      7550	ldlang.c	FUNCTION_171
0x4008507	          0x896810	             mov dword [rax + 0x10], ebp	      7551	ldlang.c	FUNCTION_171
0x400850a	              0x5b	                                 pop rbx	      7552	ldlang.c	FUNCTION_171
0x400850b	              0x5d	                                 pop rbp	      7552	ldlang.c	FUNCTION_171
0x400850c	            0x415c	                                 pop r12	      7552	ldlang.c	FUNCTION_171
0x400850e	              0xc3	                                     ret	      7552	ldlang.c	FUNCTION_171
sort_sections_by_lma	CALL,0:functions,0:WHILE,0:FOR,0:IF,4:DO,0:SWITCH,0:ELSE,3	17
0x4000140	          0x488b0f	                    mov rcx, qword [rdi]	      4743	ldlang.c	FUNCTION_110
0x4000143	          0x488b16	                    mov rdx, qword [rsi]	      4744	ldlang.c	FUNCTION_110
0x4000146	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      4746	ldlang.c	FUNCTION_110	IF_1
0x400014a	        0x48394130	            cmp qword [rcx + 0x30], rax 	      4746	ldlang.c	FUNCTION_110	IF_1
0x400014e	            0x7220	                            jb 0x4000170	      4746	ldlang.c	FUNCTION_110	IF_1
0x4000150	      0xb801000000	                              mov eax, 1	      4749	ldlang.c	FUNCTION_110	ELSE_1	IF_2
0x4000155	            0x771e	                            ja 0x4000175	      4748	ldlang.c	FUNCTION_110	ELSE_1	IF_2
0x4000157	          0x8b4208	                mov eax, dword [rdx + 8]	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x400015a	          0x394108	                cmp dword [rcx + 8], eax	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x400015d	      0xbaffffffff	                     mov edx, 0xffffffff	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000162	           0xf97c0	                                 seta al	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000165	           0xfb6c0	                           movzx eax, al	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000168	           0xf42c2	                          cmovb eax, edx	      4747	ldlang.c	FUNCTION_110	IF_1
0x400016b	              0xc3	                                     ret	      4747	ldlang.c	FUNCTION_110	IF_1
0x400016c	         0xf1f4000	                         nop dword [rax]	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000170	      0xb8ffffffff	                     mov eax, 0xffffffff	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000175	            0xf3c3	                                     ret	      4756	ldlang.c	FUNCTION_110
insert_undefined	CALL,5:functions,0:WHILE,0:FOR,0:IF,3:DO,0:SWITCH,0:ELSE,0	37
0x4000980	          0x4889fe	                            mov rsi, rdi	      3406	ldlang.c	FUNCTION_80
0x4000983	    0x488b3d000000	            mov rdi, qword [0x0400098a] 	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400098a	              0x53	                                push rbx	      3406	ldlang.c	FUNCTION_80
0x400098b	            0x31c9	                            xor ecx, ecx	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400098d	    0x41b801000000	                              mov r8d, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x4000993	      0xba01000000	                              mov edx, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x4000998	      0xe800000000	                          call 0x400099d	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400099d	          0x4885c0	                           test rax, rax	      3410	ldlang.c	FUNCTION_80	IF_1
0x40009a0	          0x4889c3	                            mov rbx, rax	      3409	ldlang.c	FUNCTION_80	CALL_1
0x40009a3	            0x7443	                            je 0x40009e8	      3410	ldlang.c	FUNCTION_80	IF_1
0x40009a5	        0x807b1800	                cmp byte [rbx + 0x18], 0	      3412	ldlang.c	FUNCTION_80	IF_2
0x40009a9	            0x7525	                           jne 0x40009d0	      3412	ldlang.c	FUNCTION_80	IF_2
0x40009ab	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3415	ldlang.c	FUNCTION_80	IF_2
0x40009b3	    0x488b3d000000	            mov rdi, qword [0x040009ba] 	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x40009ba	        0xc6431801	                mov byte [rbx + 0x18], 1	      3414	ldlang.c	FUNCTION_80	IF_2
0x40009be	        0x837f4001	               cmp dword [rdi + 0x40], 1	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x40009c2	            0x7414	                            je 0x40009d8	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x40009c4	          0x4889de	                            mov rsi, rbx	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40009c7	              0x5b	                                 pop rbx	      3420	ldlang.c	FUNCTION_80
0x40009c8	      0xe900000000	                           jmp 0x40009cd	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40009cd	           0xf1f00	                         nop dword [rax]	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40009d0	              0x5b	                                 pop rbx	      3420	ldlang.c	FUNCTION_80
0x40009d1	              0xc3	                                     ret	      3420	ldlang.c	FUNCTION_80
0x40009d2	    0x660f1f440000	                    nop word [rax + rax]	      3420	ldlang.c	FUNCTION_80
0x40009d8	        0x804b6420	              or byte [rbx + 0x64], 0x20	      3417	ldlang.c	FUNCTION_80	IF_2	IF_3
0x40009dc	          0x4889de	                            mov rsi, rbx	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40009df	              0x5b	                                 pop rbx	      3420	ldlang.c	FUNCTION_80
0x40009e0	      0xe900000000	                           jmp 0x40009e5	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40009e5	           0xf1f00	                         nop dword [rax]	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40009e8	            0x31ff	                            xor edi, edi	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40009ea	      0xba05000000	                              mov edx, 5	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40009ef	      0xbe00000000	                              mov esi, 0	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40009f4	      0xe800000000	                          call 0x40009f9	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40009f9	          0x4889c7	                            mov rdi, rax	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40009fc	            0x31c0	                            xor eax, eax	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40009fe	      0xe800000000	                          call 0x4000a03	      3411	ldlang.c	FUNCTION_80	CALL_3
0x4000a03	            0xeba0	                           jmp 0x40009a5	      3411	ldlang.c	FUNCTION_80	CALL_3
walk_wild_section_specs1_wild1	CALL,2:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,0:ELSE,0	43
0x4002770	            0x4157	                                push r15	       591	ldlang.c	FUNCTION_19
0x4002772	            0x4156	                                push r14	       591	ldlang.c	FUNCTION_19
0x4002774	            0x4155	                                push r13	       591	ldlang.c	FUNCTION_19
0x4002776	            0x4154	                                push r12	       591	ldlang.c	FUNCTION_19
0x4002778	              0x55	                                push rbp	       591	ldlang.c	FUNCTION_19
0x4002779	              0x53	                                push rbx	       591	ldlang.c	FUNCTION_19
0x400277a	        0x4883ec08	                              sub rsp, 8	       591	ldlang.c	FUNCTION_19
0x400277e	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x4002782	        0x488b6f50	            mov rbp, qword [rdi + 0x50] 	       593	ldlang.c	FUNCTION_19
0x4002786	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x400278d	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x4002790	            0x7447	                            je 0x40027d9	       595	ldlang.c	FUNCTION_19	FOR_1
0x4002792	          0x4989fd	                            mov r13, rdi	       595	ldlang.c	FUNCTION_19	FOR_1
0x4002795	          0x4989f4	                            mov r12, rsi	       595	ldlang.c	FUNCTION_19	FOR_1
0x4002798	          0x4989d7	                            mov r15, rdx	       595	ldlang.c	FUNCTION_19	FOR_1
0x400279b	          0x4989ce	                            mov r14, rcx	       595	ldlang.c	FUNCTION_19	FOR_1
0x400279e	            0xeb09	                           jmp 0x40027a9	       595	ldlang.c	FUNCTION_19	FOR_1
0x40027a0	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x40027a4	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x40027a7	            0x7430	                            je 0x40027d9	       595	ldlang.c	FUNCTION_19	FOR_1
0x40027a9	        0x488b7d08	                mov rdi, qword [rbp + 8]	       598	ldlang.c	FUNCTION_19	FOR_1	CALL_1
0x40027ad	          0x488b33	                    mov rsi, qword [rbx]	       598	ldlang.c	FUNCTION_19	FOR_1	CALL_1
0x40027b0	      0xe8ebe8ffff	              call sym.match_simple_wild	       598	ldlang.c	FUNCTION_19	FOR_1	CALL_1
0x40027b5	            0x85c0	                           test eax, eax	       600	ldlang.c	FUNCTION_19	FOR_1	IF_1
0x40027b7	            0x74e7	                            je 0x40027a0	       600	ldlang.c	FUNCTION_19	FOR_1	IF_1
0x40027b9	          0x4889da	                            mov rdx, rbx	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x40027bc	          0x4d89f1	                             mov r9, r14	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x40027bf	          0x4d89f8	                             mov r8, r15	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x40027c2	          0x4889e9	                            mov rcx, rbp	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x40027c5	          0x4c89e6	                            mov rsi, r12	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x40027c8	          0x4c89ef	                            mov rdi, r13	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x40027cb	      0xe830ffffff	     call sym.walk_wild_consider_section	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x40027d0	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x40027d4	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x40027d7	            0x75d0	                           jne 0x40027a9	       595	ldlang.c	FUNCTION_19	FOR_1
0x40027d9	        0x4883c408	                              add rsp, 8	       603	ldlang.c	FUNCTION_19
0x40027dd	              0x5b	                                 pop rbx	       603	ldlang.c	FUNCTION_19
0x40027de	              0x5d	                                 pop rbp	       603	ldlang.c	FUNCTION_19
0x40027df	            0x415c	                                 pop r12	       603	ldlang.c	FUNCTION_19
0x40027e1	            0x415d	                                 pop r13	       603	ldlang.c	FUNCTION_19
0x40027e3	            0x415e	                                 pop r14	       603	ldlang.c	FUNCTION_19
0x40027e5	            0x415f	                                 pop r15	       603	ldlang.c	FUNCTION_19
0x40027e7	              0xc3	                                     ret	       603	ldlang.c	FUNCTION_19
output_section_statement_newfunc	CALL,5:functions,0:WHILE,0:FOR,0:IF,4:DO,0:SWITCH,0:ELSE,0	57
0x4000230	              0x53	                                push rbx	      1183	ldlang.c	FUNCTION_36
0x4000231	          0x4889f3	                            mov rbx, rsi	      1183	ldlang.c	FUNCTION_36
0x4000234	        0x4883ec10	                           sub rsp, 0x10	      1183	ldlang.c	FUNCTION_36
0x4000238	          0x4885ff	                           test rdi, rdi	      1187	ldlang.c	FUNCTION_36	IF_1
0x400023b	     0xf84bf000000	                            je 0x4000300	      1187	ldlang.c	FUNCTION_36	IF_1
0x4000241	          0x4889de	                            mov rsi, rbx	      1195	ldlang.c	FUNCTION_36	CALL_2
0x4000244	      0xe800000000	                          call 0x4000249	      1195	ldlang.c	FUNCTION_36	CALL_2
0x4000249	          0x4885c0	                           test rax, rax	      1196	ldlang.c	FUNCTION_36	IF_3
0x400024c	          0x4889c2	                            mov rdx, rax	      1195	ldlang.c	FUNCTION_36	CALL_2
0x400024f	     0xf84ce000000	                            je 0x4000323	      1196	ldlang.c	FUNCTION_36	IF_3
0x4000255	        0x488d7018	                   lea rsi, [rax + 0x18]	      1200	ldlang.c	FUNCTION_36
0x4000259	        0x488d7820	                   lea rdi, [rax + 0x20]	        90	string3.h	FUNCTION_231	CALL_5
0x400025d	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_231	CALL_5
0x4000265	    0x48c780a80000	               mov qword [rax + 0xa8], 0	        90	string3.h	FUNCTION_231	CALL_5
0x4000270	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_231	CALL_5
0x4000272	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_231	CALL_5
0x4000276	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_231	CALL_5
0x4000279	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_231	CALL_5
0x400027c	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_231	CALL_5
0x4000282	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_231	CALL_5
0x4000285	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_231	CALL_5
0x4000288	        0x488d4228	                   lea rax, [rdx + 0x28]	      1010	ldlang.c	FUNCTION_30
0x400028c	    0xc74220000000	               mov dword [rdx + 0x20], 0	      1201	ldlang.c	FUNCTION_36
0x4000293	    0xc78294000000	     mov dword [rdx + 0x94], 0xffffffff 	      1202	ldlang.c	FUNCTION_36
0x400029d	    0xc78298000000	     mov dword [rdx + 0x98], 0xffffffff 	      1203	ldlang.c	FUNCTION_36
0x40002a7	    0xc78290000000	               mov dword [rdx + 0x90], 1	      1204	ldlang.c	FUNCTION_36
0x40002b1	        0x48894230	             mov qword [rdx + 0x30], rax	      1010	ldlang.c	FUNCTION_30
0x40002b5	    0x488b05000000	            mov rax, qword [0x040002bc] 	      1206	ldlang.c	FUNCTION_36	CALL_4
0x40002bc	    0x48c742280000	               mov qword [rdx + 0x28], 0	      1009	ldlang.c	FUNCTION_30
0x40002c4	        0x488b4808	                mov rcx, qword [rax + 8]	      7673	ldlang.c	FUNCTION_179
0x40002c8	          0x488931	                    mov qword [rcx], rsi	      7673	ldlang.c	FUNCTION_179
0x40002cb	    0x48833d000000	               cmp qword [0x040002d3], 0	      1211	ldlang.c	FUNCTION_36	IF_4
0x40002d3	        0x48897008	                mov qword [rax + 8], rsi	      7674	ldlang.c	FUNCTION_179
0x40002d7	    0x488b05000000	            mov rax, qword [0x040002de] 	      1214	ldlang.c	FUNCTION_36	IF_4
0x40002de	            0x7408	                            je 0x40002e8	      1211	ldlang.c	FUNCTION_36	IF_4
0x40002e0	        0x488d48e0	                   lea rcx, [rax - 0x20]	      1213	ldlang.c	FUNCTION_36	IF_4
0x40002e4	        0x48894a40	             mov qword [rdx + 0x40], rcx	      1213	ldlang.c	FUNCTION_36	IF_4
0x40002e8	          0x488930	                    mov qword [rax], rsi	      7673	ldlang.c	FUNCTION_179
0x40002eb	        0x488d4238	                   lea rax, [rdx + 0x38]	      1220	ldlang.c	FUNCTION_36
0x40002ef	    0x488905000000	            mov qword [0x040002f6], rax 	      1220	ldlang.c	FUNCTION_36
0x40002f6	        0x4883c410	                           add rsp, 0x10	      1225	ldlang.c	FUNCTION_36
0x40002fa	          0x4889d0	                            mov rax, rdx	      1224	ldlang.c	FUNCTION_36
0x40002fd	              0x5b	                                 pop rbx	      1225	ldlang.c	FUNCTION_36
0x40002fe	              0xc3	                                     ret	      1225	ldlang.c	FUNCTION_36
0x40002ff	              0x90	                                     nop	      1225	ldlang.c	FUNCTION_36
0x4000300	          0x4889df	                            mov rdi, rbx	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4000303	      0xbeb0000000	                           mov esi, 0xb0	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4000308	      0x4889542408	                mov qword [rsp + 8], rdx	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x400030d	      0xe800000000	                          call 0x4000312	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4000312	          0x4885c0	                           test rax, rax	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x4000315	          0x4889c7	                            mov rdi, rax	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4000318	      0x488b542408	                mov rdx, qword [rsp + 8]	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x400031d	     0xf851effffff	                           jne 0x4000241	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x4000323	        0x4883c410	                           add rsp, 0x10	      1225	ldlang.c	FUNCTION_36
0x4000327	            0x31c0	                            xor eax, eax	      1183	ldlang.c	FUNCTION_36
0x4000329	              0x5b	                                 pop rbx	      1225	ldlang.c	FUNCTION_36
0x400032a	              0xc3	                                     ret	      1225	ldlang.c	FUNCTION_36
lang_add_target	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	17
0x4008430	              0x55	                                push rbp	      7513	ldlang.c	FUNCTION_168
0x4008431	              0x53	                                push rbx	      7513	ldlang.c	FUNCTION_168
0x4008432	          0x4889fd	                            mov rbp, rdi	      7513	ldlang.c	FUNCTION_168
0x4008435	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400843a	        0x4883ec08	                              sub rsp, 8	      7513	ldlang.c	FUNCTION_168
0x400843e	    0x488b1d000000	            mov rbx, qword [0x04008445] 	      7516	ldlang.c	FUNCTION_168
0x4008445	      0xe800000000	                          call 0x400844a	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400844a	    0xc740080a0000	                mov dword [rax + 8], 0xa	      1040	ldlang.c	FUNCTION_33
0x4008451	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4008458	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x400845c	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x400845f	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x4008463	        0x48896810	             mov qword [rax + 0x10], rbp	      7517	ldlang.c	FUNCTION_168
0x4008467	        0x4883c408	                              add rsp, 8	      7518	ldlang.c	FUNCTION_168
0x400846b	              0x5b	                                 pop rbx	      7518	ldlang.c	FUNCTION_168
0x400846c	              0x5d	                                 pop rbp	      7518	ldlang.c	FUNCTION_168
0x400846d	              0xc3	                                     ret	      7518	ldlang.c	FUNCTION_168
walk_wild_section_specs1_wild0	CALL,3:functions,0:WHILE,0:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,1	51
0x4002d50	            0x4156	                                push r14	       570	ldlang.c	FUNCTION_18
0x4002d52	            0x4155	                                push r13	       570	ldlang.c	FUNCTION_18
0x4002d54	          0x4989ce	                            mov r14, rcx	       570	ldlang.c	FUNCTION_18
0x4002d57	            0x4154	                                push r12	       570	ldlang.c	FUNCTION_18
0x4002d59	              0x55	                                push rbp	       570	ldlang.c	FUNCTION_18
0x4002d5a	          0x4889f5	                            mov rbp, rsi	       570	ldlang.c	FUNCTION_18
0x4002d5d	              0x53	                                push rbx	       570	ldlang.c	FUNCTION_18
0x4002d5e	          0x4889fb	                            mov rbx, rdi	       570	ldlang.c	FUNCTION_18
0x4002d61	          0x4989d5	                            mov r13, rdx	       570	ldlang.c	FUNCTION_18
0x4002d64	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002d69	        0x4883ec20	                           sub rsp, 0x20	       570	ldlang.c	FUNCTION_18
0x4002d6d	        0x4c8b6750	            mov r12, qword [rdi + 0x50] 	       577	ldlang.c	FUNCTION_18
0x4002d71	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       577	ldlang.c	FUNCTION_18
0x4002d75	          0x4889e1	                            mov rcx, rsp	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002d78	    0x48c704240000	                      mov qword [rsp], 0	       348	ldlang.c	FUNCTION_10
0x4002d80	    0x64488b042528	                mov rax, qword fs:[0x28]	       570	ldlang.c	FUNCTION_18
0x4002d89	      0x4889442418	             mov qword [rsp + 0x18], rax	       570	ldlang.c	FUNCTION_18
0x4002d8e	            0x31c0	                            xor eax, eax	       570	ldlang.c	FUNCTION_18
0x4002d90	      0x498b742408	                mov rsi, qword [r12 + 8]	       570	ldlang.c	FUNCTION_18
0x4002d95	    0xc74424080000	                  mov dword [rsp + 8], 0	       348	ldlang.c	FUNCTION_10
0x4002d9d	      0xe800000000	                          call 0x4002da2	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002da2	        0x8b442408	                mov eax, dword [rsp + 8]	       580	ldlang.c	FUNCTION_18	IF_1
0x4002da6	        0x488b1424	                    mov rdx, qword [rsp]	       353	ldlang.c	FUNCTION_10
0x4002daa	            0x85c0	                           test eax, eax	       580	ldlang.c	FUNCTION_18	IF_1
0x4002dac	            0x753a	                           jne 0x4002de8	       580	ldlang.c	FUNCTION_18	IF_1
0x4002dae	          0x4885d2	                           test rdx, rdx	       582	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002db1	            0x7414	                            je 0x4002dc7	       582	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002db3	          0x4d89f1	                             mov r9, r14	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002db6	          0x4d89e8	                             mov r8, r13	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002db9	          0x4c89e1	                            mov rcx, r12	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002dbc	          0x4889ee	                            mov rsi, rbp	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002dbf	          0x4889df	                            mov rdi, rbx	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002dc2	      0xe839f9ffff	     call sym.walk_wild_consider_section	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002dc7	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       584	ldlang.c	FUNCTION_18
0x4002dcc	    0x644833042528	                xor rax, qword fs:[0x28]	       584	ldlang.c	FUNCTION_18
0x4002dd5	            0x7524	                           jne 0x4002dfb	       584	ldlang.c	FUNCTION_18
0x4002dd7	        0x4883c420	                           add rsp, 0x20	       584	ldlang.c	FUNCTION_18
0x4002ddb	              0x5b	                                 pop rbx	       584	ldlang.c	FUNCTION_18
0x4002ddc	              0x5d	                                 pop rbp	       584	ldlang.c	FUNCTION_18
0x4002ddd	            0x415c	                                 pop r12	       584	ldlang.c	FUNCTION_18
0x4002ddf	            0x415d	                                 pop r13	       584	ldlang.c	FUNCTION_18
0x4002de1	            0x415e	                                 pop r14	       584	ldlang.c	FUNCTION_18
0x4002de3	              0xc3	                                     ret	       584	ldlang.c	FUNCTION_18
0x4002de4	         0xf1f4000	                         nop dword [rax]	       584	ldlang.c	FUNCTION_18
0x4002de8	          0x4c89f1	                            mov rcx, r14	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002deb	          0x4c89ea	                            mov rdx, r13	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002dee	          0x4889ee	                            mov rsi, rbp	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002df1	          0x4889df	                            mov rdi, rbx	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002df4	      0xe8f7f9ffff	      call sym.walk_wild_section_general	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002df9	            0xebcc	                           jmp 0x4002dc7	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002dfb	      0xe800000000	               call sym.unique_section_p	       584	ldlang.c	FUNCTION_18
lang_insert_orphan	CALL,11:functions,0:WHILE,0:FOR,0:IF,17:DO,0:SWITCH,0:ELSE,3	273
0x4008700	            0x4157	                                push r15	      1829	ldlang.c	FUNCTION_50
0x4008702	            0x4156	                                push r14	      1829	ldlang.c	FUNCTION_50
0x4008704	          0x4989ff	                            mov r15, rdi	      1829	ldlang.c	FUNCTION_50
0x4008707	            0x4155	                                push r13	      1829	ldlang.c	FUNCTION_50
0x4008709	            0x4154	                                push r12	      1829	ldlang.c	FUNCTION_50
0x400870b	          0x4989f5	                            mov r13, rsi	      1829	ldlang.c	FUNCTION_50
0x400870e	              0x55	                                push rbp	      1829	ldlang.c	FUNCTION_50
0x400870f	              0x53	                                push rbx	      1829	ldlang.c	FUNCTION_50
0x4008710	          0x4989ce	                            mov r14, rcx	      1829	ldlang.c	FUNCTION_50
0x4008713	          0x4c89c3	                             mov rbx, r8	      1829	ldlang.c	FUNCTION_50
0x4008716	          0x4c89ce	                             mov rsi, r9	      1829	ldlang.c	FUNCTION_50
0x4008719	        0x4883ec38	                           sub rsp, 0x38	      1829	ldlang.c	FUNCTION_50
0x400871d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1829	ldlang.c	FUNCTION_50
0x4008726	      0x4889442428	             mov qword [rsp + 0x28], rax	      1829	ldlang.c	FUNCTION_50
0x400872b	            0x31c0	                            xor eax, eax	      1829	ldlang.c	FUNCTION_50
0x400872d	          0x4885c9	                           test rcx, rcx	      1837	ldlang.c	FUNCTION_50	IF_1
0x4008730	      0x488b6c2470	            mov rbp, qword [rsp + 0x70] 	      1829	ldlang.c	FUNCTION_50
0x4008735	            0x7448	                            je 0x400877f	      1837	ldlang.c	FUNCTION_50	IF_1
0x4008737	    0x488b0d000000	            mov rcx, qword [0x0400873e] 	      1016	ldlang.c	FUNCTION_31	IF_1
0x400873e	      0x488d442410	                   lea rax, [rsp + 0x10]	      1010	ldlang.c	FUNCTION_30
0x4008743	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1009	ldlang.c	FUNCTION_30
0x400874c	      0x4889442418	             mov qword [rsp + 0x18], rax	      1010	ldlang.c	FUNCTION_30
0x4008751	    0x4881f9000000	                              cmp rcx, 0	      1016	ldlang.c	FUNCTION_31	IF_1
0x4008758	     0xf831b040000	                           jae 0x4008b79	      1016	ldlang.c	FUNCTION_31	IF_1
0x400875e	        0x488d4108	                      lea rax, [rcx + 8]	      1018	ldlang.c	FUNCTION_31
0x4008762	    0x488905000000	            mov qword [0x04008769], rax 	      1018	ldlang.c	FUNCTION_31
0x4008769	    0x488b05000000	            mov rax, qword [0x04008770] 	      1018	ldlang.c	FUNCTION_31
0x4008770	          0x488901	                    mov qword [rcx], rax	      1018	ldlang.c	FUNCTION_31
0x4008773	      0x488d442410	                   lea rax, [rsp + 0x10]	      1019	ldlang.c	FUNCTION_31
0x4008778	    0x488905000000	            mov qword [0x0400877f], rax 	      1019	ldlang.c	FUNCTION_31
0x400877f	     0xfb60d000000	           movzx ecx, byte [0x04008786] 	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x4008786	          0x83e103	                              and ecx, 3	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x4008789	          0x80f902	                               cmp cl, 2	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x400878c	     0xf84c6010000	                            je 0x4008958	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x4008792	      0x41f6472003	               test byte [r15 + 0x20], 3	      1844	ldlang.c	FUNCTION_50	IF_2
0x4008797	     0xf84bb010000	                            je 0x4008958	      1844	ldlang.c	FUNCTION_50	IF_2
0x400879d	            0x6a00	                                  push 0	      1849	ldlang.c	FUNCTION_50	CALL_5
0x400879f	              0x52	                                push rdx	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087a0	          0x4531c9	                            xor r9d, r9d	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087a3	          0x4531c0	                            xor r8d, r8d	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087a6	            0x31c9	                            xor ecx, ecx	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087a8	            0x31d2	                            xor edx, edx	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087aa	          0x4c89ef	                            mov rdi, r13	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087ad	    0x4c8b25000000	            mov r12, qword [0x040087b4] 	      1847	ldlang.c	FUNCTION_50
0x40087b4	      0xe800000000	                          call 0x40087b9	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087b9	              0x59	                                 pop rcx	      1852	ldlang.c	FUNCTION_50	IF_3
0x40087ba	          0x4989c5	                            mov r13, rax	      1849	ldlang.c	FUNCTION_50	CALL_5
0x40087bd	        0x488d4010	                   lea rax, [rax + 0x10]	      1853	ldlang.c	FUNCTION_50	IF_3
0x40087c1	          0x4885ed	                           test rbp, rbp	      1853	ldlang.c	FUNCTION_50	IF_3
0x40087c4	              0x5e	                                 pop rsi	      1852	ldlang.c	FUNCTION_50	IF_3
0x40087c5	        0x480f44e8	                          cmove rbp, rax	      1853	ldlang.c	FUNCTION_50	IF_3
0x40087c9	          0x4c89e9	                            mov rcx, r13	      1854	ldlang.c	FUNCTION_50	CALL_6
0x40087cc	            0x31d2	                            xor edx, edx	      1854	ldlang.c	FUNCTION_50	CALL_6
0x40087ce	          0x4c89fe	                            mov rsi, r15	      1854	ldlang.c	FUNCTION_50	CALL_6
0x40087d1	          0x4889ef	                            mov rdi, rbp	      1854	ldlang.c	FUNCTION_50	CALL_6
0x40087d4	      0xe800000000	                          call 0x40087d9	      1854	ldlang.c	FUNCTION_50	CALL_6
0x40087d9	          0x4d85f6	                           test r14, r14	      1856	ldlang.c	FUNCTION_50	IF_4
0x40087dc	     0xf84ce020000	                            je 0x4008ab0	      1856	ldlang.c	FUNCTION_50	IF_4
0x40087e2	      0x41f6472003	               test byte [r15 + 0x20], 3	      1856	ldlang.c	FUNCTION_50	IF_4
0x40087e7	     0xf8583010000	                           jne 0x4008970	      1856	ldlang.c	FUNCTION_50	IF_4
0x40087ed	            0x31c9	                            xor ecx, ecx	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x40087ef	            0x31d2	                            xor edx, edx	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x40087f1	      0xbe00000000	                              mov esi, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x40087f6	            0x31ff	                            xor edi, edi	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x40087f8	      0xe800000000	                          call 0x40087fd	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x40087fd	    0x488b05000000	            mov rax, qword [0x04008804] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x4008804	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x400880a	     0xf8664030000	                           jbe 0x4008b74	      1025	ldlang.c	FUNCTION_32	IF_1
0x4008810	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x4008814	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x4008818	    0x488915000000	            mov qword [0x0400881f], rdx 	      1027	ldlang.c	FUNCTION_32
0x400881f	    0x488905000000	            mov qword [0x04008826], rax 	      1027	ldlang.c	FUNCTION_32
0x4008826	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1875	ldlang.c	FUNCTION_50	IF_6
0x400882a	          0x4885c0	                           test rax, rax	      1875	ldlang.c	FUNCTION_50	IF_6
0x400882d	     0xf84fa000000	                            je 0x400892d	      1875	ldlang.c	FUNCTION_50	IF_6
0x4008833	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4008837	          0x4885d2	                           test rdx, rdx	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x400883a	     0xf84c8010000	                            je 0x4008a08	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4008840	          0x488b12	                    mov rdx, qword [rdx]	      1903	ldlang.c	FUNCTION_50	IF_6
0x4008843	          0x4885d2	                           test rdx, rdx	      1905	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008846	     0xf8464010000	                            je 0x40089b0	      1905	ldlang.c	FUNCTION_50	IF_6	IF_11
0x400884c	          0x4839d0	                            cmp rax, rdx	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400884f	            0x7448	                            je 0x4008899	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008851	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008855	          0x4839c8	                            cmp rax, rcx	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008858	            0x743f	                            je 0x4008899	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400885a	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400885e	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008862	          0x4885f6	                           test rsi, rsi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008865	     0xf8415020000	                            je 0x4008a80	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400886b	        0x48897e10	             mov qword [rsi + 0x10], rdi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400886f	          0x4885ff	                           test rdi, rdi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008872	     0xf84f0010000	                            je 0x4008a68	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008878	        0x48897718	             mov qword [rdi + 0x18], rsi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400887c	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008880	          0x4885c9	                           test rcx, rcx	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008883	        0x48894818	             mov qword [rax + 0x18], rcx	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008887	        0x48895010	             mov qword [rax + 0x10], rdx	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400888b	        0x48894218	             mov qword [rdx + 0x18], rax	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x400888f	     0xf84bb010000	                            je 0x4008a50	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008895	        0x48894110	             mov qword [rcx + 0x10], rax	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008899	        0x4883c010	                           add rax, 0x10	      1926	ldlang.c	FUNCTION_50	IF_6
0x400889d	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1937	ldlang.c	FUNCTION_50	IF_6	IF_13
0x40088a3	        0x48894318	             mov qword [rbx + 0x18], rax	      1926	ldlang.c	FUNCTION_50	IF_6
0x40088a7	     0xf8480000000	                            je 0x400892d	      1937	ldlang.c	FUNCTION_50	IF_6	IF_13
0x40088ad	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x40088b1	          0x4885c0	                           test rax, rax	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x40088b4	     0xf840e020000	                            je 0x4008ac8	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x40088ba	          0x488b10	                    mov rdx, qword [rax]	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x40088bd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x40088c2	          0x488910	                    mov qword [rax], rdx	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x40088c5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x40088c9	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x40088ce	          0x488910	                    mov qword [rax], rdx	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x40088d1	    0x488b05000000	            mov rax, qword [0x040088d8] 	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x40088d8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x40088dd	        0x488b5008	                mov rdx, qword [rax + 8]	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x40088e1	          0x48393a	                    cmp qword [rdx], rdi	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x40088e4	     0xf8456010000	                            je 0x4008a40	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x40088ea	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1963	ldlang.c	FUNCTION_50	IF_6	IF_13
0x40088ef	        0x48894320	             mov qword [rbx + 0x20], rax	      1963	ldlang.c	FUNCTION_50	IF_6	IF_13
0x40088f3	        0x498b0424	                    mov rax, qword [r12]	      1966	ldlang.c	FUNCTION_50	IF_6	IF_13
0x40088f7	    0x49c704240000	                      mov qword [r12], 0	      1967	ldlang.c	FUNCTION_50	IF_6	IF_13
0x40088ff	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1969	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4008903	        0x488d4ae0	                   lea rcx, [rdx - 0x20]	      1968	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4008907	        0x48894828	             mov qword [rax + 0x28], rcx	      1968	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400890b	          0x488b0a	                    mov rcx, qword [rdx]	      1971	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400890e	          0x4885c9	                           test rcx, rcx	      1972	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x4008911	        0x48894820	             mov qword [rax + 0x20], rcx	      1971	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4008915	            0x7404	                            je 0x400891b	      1972	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x4008917	        0x48894128	             mov qword [rcx + 0x28], rax	      1973	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x400891b	          0x488902	                    mov qword [rdx], rax	      1974	ldlang.c	FUNCTION_50	IF_6	IF_13
0x400891e	        0x4883c020	                           add rax, 0x20	      1975	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4008922	        0x48894328	             mov qword [rbx + 0x28], rax	      1975	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4008926	      0x49833c2400	                      cmp qword [r12], 0	      1982	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x400892b	            0x7473	                            je 0x40089a0	      1982	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x400892d	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1988	ldlang.c	FUNCTION_50
0x4008932	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1988	ldlang.c	FUNCTION_50
0x400893b	          0x4c89e8	                            mov rax, r13	      1988	ldlang.c	FUNCTION_50
0x400893e	     0xf852b020000	                           jne 0x4008b6f	      1988	ldlang.c	FUNCTION_50
0x4008944	        0x4883c438	                           add rsp, 0x38	      1988	ldlang.c	FUNCTION_50
0x4008948	              0x5b	                                 pop rbx	      1988	ldlang.c	FUNCTION_50
0x4008949	              0x5d	                                 pop rbp	      1988	ldlang.c	FUNCTION_50
0x400894a	            0x415c	                                 pop r12	      1988	ldlang.c	FUNCTION_50
0x400894c	            0x415d	                                 pop r13	      1988	ldlang.c	FUNCTION_50
0x400894e	            0x415e	                                 pop r14	      1988	ldlang.c	FUNCTION_50
0x4008950	            0x415f	                                 pop r15	      1988	ldlang.c	FUNCTION_50
0x4008952	              0xc3	                                     ret	      1988	ldlang.c	FUNCTION_50
0x4008953	       0xf1f440000	                   nop dword [rax + rax]	      1988	ldlang.c	FUNCTION_50
0x4008958	            0x31ff	                            xor edi, edi	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400895a	        0x8954240c	              mov dword [rsp + 0xc], edx	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400895e	      0xe800000000	                          call 0x4008963	      1845	ldlang.c	FUNCTION_50	CALL_4
0x4008963	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1845	ldlang.c	FUNCTION_50	CALL_4
0x4008967	          0x4889c6	                            mov rsi, rax	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400896a	      0xe92efeffff	                           jmp 0x400879d	      1845	ldlang.c	FUNCTION_50	CALL_4
0x400896f	              0x90	                                     nop	      1845	ldlang.c	FUNCTION_50	CALL_4
0x4008970	        0x498b4640	            mov rax, qword [r14 + 0x40] 	      1858	ldlang.c	FUNCTION_50	IF_4
0x4008974	          0x4885c0	                           test rax, rax	      1860	ldlang.c	FUNCTION_50	IF_4
0x4008977	     0xf8423010000	                            je 0x4008aa0	      1860	ldlang.c	FUNCTION_50	IF_4
0x400897d	          0x488b30	                    mov rsi, qword [rax]	      1860	ldlang.c	FUNCTION_50	IF_4
0x4008980	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      1861	ldlang.c	FUNCTION_50	IF_4
0x4008984	          0x4885c0	                           test rax, rax	      1863	ldlang.c	FUNCTION_50	IF_4
0x4008987	     0xf840b010000	                            je 0x4008a98	      1863	ldlang.c	FUNCTION_50	IF_4
0x400898d	          0x488b08	                    mov rcx, qword [rax]	      1863	ldlang.c	FUNCTION_50	IF_4
0x4008990	        0x498b5670	            mov rdx, qword [r14 + 0x70] 	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x4008994	            0x31ff	                            xor edi, edi	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x4008996	      0xe800000000	                          call 0x400899b	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x400899b	      0xe95dfeffff	                           jmp 0x40087fd	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x40089a0	    0x4c8925000000	            mov qword [0x040089a7], r12 	      1984	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x40089a7	      0xe981ffffff	                           jmp 0x400892d	      1984	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x40089ac	         0xf1f4000	                         nop dword [rax]	      1984	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x40089b0	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089b4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089b8	          0x4885d2	                           test rdx, rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089bb	     0xf8457010000	                            je 0x4008b18	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089c1	    0x488b35000000	            mov rsi, qword [0x040089c8] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089c8	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089cc	          0x4885c9	                           test rcx, rcx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089cf	     0xf8433010000	                            je 0x4008b08	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089d5	        0x48895118	             mov qword [rcx + 0x18], rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089d9	    0x488b96980000	            mov rdx, qword [rsi + 0x98] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089e0	          0x4885d2	                           test rdx, rdx	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089e3	    0x48c740100000	               mov qword [rax + 0x10], 0	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089eb	     0xf84ff000000	                            je 0x4008af0	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089f1	        0x48895018	             mov qword [rax + 0x18], rdx	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089f5	        0x48894210	             mov qword [rdx + 0x10], rax	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x40089f9	    0x488986980000	             mov qword [rsi + 0x98], rax	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008a00	      0xe994feffff	                           jmp 0x4008899	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008a05	           0xf1f00	                         nop dword [rax]	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008a08	    0x4c3b35000000	            cmp r14, qword [0x04008a0f] 	      1884	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4008a0f	            0x7416	                            je 0x4008a27	      1884	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4008a11	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      1887	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4008a15	          0x4885d2	                           test rdx, rdx	      1893	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_8
0x4008a18	     0xf8412010000	                            je 0x4008b30	      1893	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_8
0x4008a1e	          0x4839d0	                            cmp rax, rdx	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4008a21	     0xf8557010000	                           jne 0x4008b7e	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4008a27	    0x488b3d000000	            mov rdi, qword [0x04008a2e] 	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4008a2e	    0x488d97900000	                   lea rdx, [rdi + 0x90]	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4008a35	        0x48895318	             mov qword [rbx + 0x18], rdx	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4008a39	      0xe902feffff	                           jmp 0x4008840	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4008a3e	            0x6690	                                     nop	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4008a40	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4008a45	        0x48895008	                mov qword [rax + 8], rdx	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4008a49	      0xe99cfeffff	                           jmp 0x40088ea	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4008a4e	            0x6690	                                     nop	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4008a50	    0x488b15000000	            mov rdx, qword [0x04008a57] 	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a57	    0x488982900000	             mov qword [rdx + 0x90], rax	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a5e	      0xe936feffff	                           jmp 0x4008899	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a63	       0xf1f440000	                   nop dword [rax + rax]	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a68	    0x488b3d000000	            mov rdi, qword [0x04008a6f] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a6f	    0x4889b7980000	             mov qword [rdi + 0x98], rsi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a76	      0xe905feffff	                           jmp 0x4008880	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a7b	       0xf1f440000	                   nop dword [rax + rax]	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a80	    0x4c8b05000000	              mov r8, qword [0x04008a87]	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a87	    0x4989b8900000	              mov qword [r8 + 0x90], rdi	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a8e	      0xe9dcfdffff	                           jmp 0x400886f	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a93	       0xf1f440000	                   nop dword [rax + rax]	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4008a98	            0x31c9	                            xor ecx, ecx	      1863	ldlang.c	FUNCTION_50	IF_4
0x4008a9a	      0xe9f1feffff	                           jmp 0x4008990	      1863	ldlang.c	FUNCTION_50	IF_4
0x4008a9f	              0x90	                                     nop	      1863	ldlang.c	FUNCTION_50	IF_4
0x4008aa0	      0xbe00000000	                              mov esi, 0	      1860	ldlang.c	FUNCTION_50	IF_4
0x4008aa5	      0xe9d6feffff	                           jmp 0x4008980	      1860	ldlang.c	FUNCTION_50	IF_4
0x4008aaa	    0x660f1f440000	                    nop word [rax + rax]	      1860	ldlang.c	FUNCTION_50	IF_4
0x4008ab0	            0x31c9	                            xor ecx, ecx	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4008ab2	            0x31d2	                            xor edx, edx	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4008ab4	      0xbe00000000	                              mov esi, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4008ab9	            0x31ff	                            xor edi, edi	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4008abb	      0xe800000000	                          call 0x4008ac0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4008ac0	      0xe968feffff	                           jmp 0x400892d	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4008ac5	           0xf1f00	                         nop dword [rax]	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4008ac8	          0x4c89f7	                            mov rdi, r14	      1943	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14	CALL_11
0x4008acb	        0x4983c620	                           add r14, 0x20	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008acf	      0xe88c75ffff	                call sym.insert_os_after	      1943	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14	CALL_11
0x4008ad4	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008ad9	          0x488b08	                    mov rcx, qword [rax]	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008adc	          0x48890a	                    mov qword [rdx], rcx	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008adf	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1946	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008ae4	          0x488910	                    mov qword [rax], rdx	      1946	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008ae7	        0x4c897328	             mov qword [rbx + 0x28], r14	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008aeb	      0xe9e1fdffff	                           jmp 0x40088d1	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4008af0	    0x48c740180000	               mov qword [rax + 0x18], 0	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008af8	    0x488986900000	             mov qword [rsi + 0x90], rax	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008aff	      0xe9f5feffff	                           jmp 0x40089f9	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b04	         0xf1f4000	                         nop dword [rax]	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b08	    0x488996980000	             mov qword [rsi + 0x98], rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b0f	      0xe9ccfeffff	                           jmp 0x40089e0	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b14	         0xf1f4000	                         nop dword [rax]	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b18	    0x488b35000000	            mov rsi, qword [0x04008b1f] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b1f	    0x48898e900000	             mov qword [rsi + 0x90], rcx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b26	      0xe9a1feffff	                           jmp 0x40089cc	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b2b	       0xf1f440000	                   nop dword [rax + rax]	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b30	        0x498b4e28	            mov rcx, qword [r14 + 0x28] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4008b34	          0x4885c9	                           test rcx, rcx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x4008b37	     0xf84eafeffff	                            je 0x4008a27	      1733	ldlang.c	FUNCTION_48	FOR_1
0x4008b3d	           0xf1f00	                         nop dword [rax]	      1733	ldlang.c	FUNCTION_48	FOR_1
0x4008b40	    0x8b9184000000	            mov edx, dword [rcx + 0x84] 	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x4008b46	            0x85d2	                           test edx, edx	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x4008b48	            0x7817	                            js 0x4008b61	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x4008b4a	        0x488b5138	            mov rdx, qword [rcx + 0x38] 	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x4008b4e	          0x4885d2	                           test rdx, rdx	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x4008b51	            0x740e	                            je 0x4008b61	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x4008b53	    0x4883baf00000	               cmp qword [rdx + 0xf0], 0	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x4008b5b	     0xf85bdfeffff	                           jne 0x4008a1e	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x4008b61	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      1733	ldlang.c	FUNCTION_48	FOR_1
0x4008b65	          0x4885c9	                           test rcx, rcx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x4008b68	            0x75d6	                           jne 0x4008b40	      1733	ldlang.c	FUNCTION_48	FOR_1
0x4008b6a	      0xe9b8feffff	                           jmp 0x4008a27	      1733	ldlang.c	FUNCTION_48	FOR_1
0x4008b6f	      0xe800000000	                          call 0x4008b74	      1988	ldlang.c	FUNCTION_50
0x4008b74	      0xe800000000	                          call 0x4008b79	      1988	ldlang.c	FUNCTION_50
0x4008b79	      0xe800000000	                          call 0x4008b7e	      1988	ldlang.c	FUNCTION_50
0x4008b7e	        0x4883c210	                           add rdx, 0x10	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4008b82	        0x48895318	             mov qword [rbx + 0x18], rdx	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4008b86	      0xe9b5fcffff	                           jmp 0x4008840	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
lang_output_section_find_by_flags	CALL,7:functions,0:WHILE,0:FOR,8:IF,34:DO,0:SWITCH,0:ELSE,8	317
0x4004ed0	            0x4157	                                push r15	      1529	ldlang.c	FUNCTION_47
0x4004ed2	            0x4156	                                push r14	      1529	ldlang.c	FUNCTION_47
0x4004ed4	            0x89f0	                            mov eax, esi	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004ed6	            0x4155	                                push r13	      1529	ldlang.c	FUNCTION_47
0x4004ed8	            0x4154	                                push r12	      1529	ldlang.c	FUNCTION_47
0x4004eda	          0x83e011	                           and eax, 0x11	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004edd	              0x55	                                push rbp	      1529	ldlang.c	FUNCTION_47
0x4004ede	              0x53	                                push rbx	      1529	ldlang.c	FUNCTION_47
0x4004edf	          0x4989fe	                            mov r14, rdi	      1529	ldlang.c	FUNCTION_47
0x4004ee2	            0x89f7	                            mov edi, esi	      1529	ldlang.c	FUNCTION_47
0x4004ee4	          0x4989cf	                            mov r15, rcx	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004ee7	        0x4883ec38	                           sub rsp, 0x38	      1529	ldlang.c	FUNCTION_47
0x4004eeb	          0x83e709	                              and edi, 9	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004eee	        0x89442420	             mov dword [rsp + 0x20], eax	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004ef2	            0x89f0	                            mov eax, esi	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004ef4	        0x8974240c	              mov dword [rsp + 0xc], esi	      1529	ldlang.c	FUNCTION_47
0x4004ef8	      0x2501040000	                          and eax, 0x401	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004efd	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1529	ldlang.c	FUNCTION_47
0x4004f02	        0x897c2424	             mov dword [rsp + 0x24], edi	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004f06	        0x89442428	             mov dword [rsp + 0x28], eax	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004f0a	            0x89f0	                            mov eax, esi	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004f0c	      0x2501004000	                       and eax, 0x400001	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004f11	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004f15	           0xf1f00	                         nop dword [rax]	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004f18	    0x488b05000000	            mov rax, qword [0x04004f1f] 	      1536	ldlang.c	FUNCTION_47
0x4004f1f	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      1536	ldlang.c	FUNCTION_47
0x4004f23	          0x4885db	                           test rbx, rbx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f26	     0xf846c030000	                            je 0x4005298	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f2c	          0x4531ed	                          xor r13d, r13d	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f2f	          0x4c89f0	                            mov rax, r14	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f32	          0x4889dd	                            mov rbp, rbx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f35	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f3a	          0x4d89ee	                            mov r14, r13	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f3d	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f41	          0x4989c5	                            mov r13, rax	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f44	            0xeb20	                           jmp 0x4004f66	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f50	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f54	          0x4885d2	                           test rdx, rdx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f57	     0xf84b1030000	                            je 0x400530e	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f5d	          0x4889e8	                            mov rax, rbp	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f60	          0x4889d5	                            mov rbp, rdx	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f63	          0x4989c6	                            mov r14, rax	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004f66	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4004f6a	          0x4885f6	                           test rsi, rsi	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4004f6d	     0xf844d010000	                            je 0x40050c0	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4004f73	          0x4d85ff	                           test r15, r15	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f76	        0x448b6620	           mov r12d, dword [rsi + 0x20] 	      1545	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x4004f7a	            0x7418	                            je 0x4004f94	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f7c	    0x498b95f00000	            mov rdx, qword [r13 + 0xf0] 	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f83	          0x4c89e9	                            mov rcx, r13	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f86	    0x488b3d000000	            mov rdi, qword [0x04004f8d] 	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f8d	          0x41ffd7	                                call r15	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f90	            0x85c0	                           test eax, eax	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f92	            0x740c	                            je 0x4004fa0	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x4004f94	          0x4131dc	                           xor r12d, ebx	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4004f97	    0x4181e41b0540	                      and r12d, 0x40051b	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4004f9e	            0x74b0	                            je 0x4004f50	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x4004fa0	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004fa4	          0x4c89f0	                            mov rax, r14	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004fa7	          0x4885ed	                           test rbp, rbp	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004faa	            0x75b7	                           jne 0x4004f63	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004fac	          0x4c89e8	                            mov rax, r13	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004faf	          0x4d89f5	                            mov r13, r14	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004fb2	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004fb7	          0x4d85ed	                           test r13, r13	      1556	ldlang.c	FUNCTION_47	IF_4
0x4004fba	          0x4989c6	                            mov r14, rax	      1556	ldlang.c	FUNCTION_47	IF_4
0x4004fbd	     0xf8548030000	                           jne 0x400530b	      1556	ldlang.c	FUNCTION_47	IF_4
0x4004fc3	      0x837c242011	           cmp dword [rsp + 0x20], 0x11 	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004fc8	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004fcd	     0xf84db000000	                            je 0x40050ae	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004fd3	      0x837c242409	               cmp dword [rsp + 0x24], 9	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004fd8	     0xf842a010000	                            je 0x4005108	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004fde	    0x817c24280104	          cmp dword [rsp + 0x28], 0x401 	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004fe6	     0xf84a4010000	                            je 0x4005190	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004fec	    0x817c242c0100	       cmp dword [rsp + 0x2c], 0x400001 	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004ff4	     0xf8412020000	                            je 0x400520c	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004ffa	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4004ffe	      0x2501010000	                          and eax, 0x101	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4005003	      0x3d01010000	                          cmp eax, 0x101	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4005008	     0xf849f020000	                            je 0x40052ad	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x400500e	      0xf644240c01	                test byte [rsp + 0xc], 1	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4005013	     0xf840b030000	                            je 0x4005324	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4005019	          0x4531ed	                          xor r13d, r13d	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x400501c	          0x4885db	                           test rbx, rbx	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x400501f	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005024	            0x753d	                           jne 0x4005063	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005026	      0xe97b020000	                           jmp 0x40052a6	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x400502b	       0xf1f440000	                   nop dword [rax + rax]	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005030	          0x4d85ff	                           test r15, r15	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005033	          0x8b6e20	            mov ebp, dword [rsi + 0x20] 	      1693	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4005036	            0x7418	                            je 0x4005050	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005038	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x400503f	          0x4c89f1	                            mov rcx, r14	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005042	    0x488b3d000000	            mov rdi, qword [0x04005049] 	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005049	          0x41ffd7	                                call r15	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x400504c	            0x85c0	                           test eax, eax	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x400504e	            0x740a	                            je 0x400505a	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4005050	          0x4431e5	                           xor ebp, r12d	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4005053	          0x83e501	                              and ebp, 1	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4005056	        0x4c0f44eb	                          cmove r13, rbx	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x400505a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x400505e	          0x4885db	                           test rbx, rbx	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005061	            0x746d	                            je 0x40050d0	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005063	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4005067	          0x4885f6	                           test rsi, rsi	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x400506a	            0x75c4	                           jne 0x4005030	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x400506c	    0x8bab88000000	            mov ebp, dword [rbx + 0x88] 	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005072	            0xebdc	                           jmp 0x4005050	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005074	         0xf1f4000	                         nop dword [rax]	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4005078	          0x4d85ff	                           test r15, r15	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x400507b	          0x8b6e20	            mov ebp, dword [rsi + 0x20] 	      1572	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x400507e	            0x7418	                            je 0x4005098	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005080	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005087	          0x4c89f1	                            mov rcx, r14	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x400508a	    0x488b3d000000	            mov rdi, qword [0x04005091] 	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005091	          0x41ffd7	                                call r15	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005094	            0x85c0	                           test eax, eax	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005096	            0x740d	                            je 0x40050a5	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4005098	          0x4431e5	                           xor ebp, r12d	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x400509b	    0x81e513054000	                       and ebp, 0x400513	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x40050a1	        0x4c0f44eb	                          cmove r13, rbx	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x40050a5	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x40050a9	          0x4885db	                           test rbx, rbx	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x40050ac	            0x7422	                            je 0x40050d0	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x40050ae	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x40050b2	          0x4885f6	                           test rsi, rsi	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x40050b5	            0x75c1	                           jne 0x4005078	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x40050b7	    0x8bab88000000	            mov ebp, dword [rbx + 0x88] 	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x40050bd	            0xebd9	                           jmp 0x4005098	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x40050bf	              0x90	                                     nop	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x40050c0	    0x448ba5880000	           mov r12d, dword [rbp + 0x88] 	      1542	ldlang.c	FUNCTION_47	FOR_1
0x40050c7	      0xe9c8feffff	                           jmp 0x4004f94	      1542	ldlang.c	FUNCTION_47	FOR_1
0x40050cc	         0xf1f4000	                         nop dword [rax]	      1542	ldlang.c	FUNCTION_47	FOR_1
0x40050d0	          0x4d85ed	                           test r13, r13	      1542	ldlang.c	FUNCTION_47	FOR_1
0x40050d3	           0xf95c2	                                setne dl	      1542	ldlang.c	FUNCTION_47	FOR_1
0x40050d6	          0x4d85ff	                           test r15, r15	      1719	ldlang.c	FUNCTION_47	IF_34
0x40050d9	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1722	ldlang.c	FUNCTION_47	CALL_7
0x40050e2	           0xf94c0	                                 sete al	      1719	ldlang.c	FUNCTION_47	IF_34
0x40050e5	          0x4531ff	                          xor r15d, r15d	      1722	ldlang.c	FUNCTION_47	CALL_7
0x40050e8	             0x8d0	                               or al, dl	      1719	ldlang.c	FUNCTION_47	IF_34
0x40050ea	     0xf8428feffff	                            je 0x4004f18	      1719	ldlang.c	FUNCTION_47	IF_34
0x40050f0	          0x4c89ed	                            mov rbp, r13	      1719	ldlang.c	FUNCTION_47	IF_34
0x40050f3	        0x4883c438	                           add rsp, 0x38	      1723	ldlang.c	FUNCTION_47
0x40050f7	          0x4889e8	                            mov rax, rbp	      1723	ldlang.c	FUNCTION_47
0x40050fa	              0x5b	                                 pop rbx	      1723	ldlang.c	FUNCTION_47
0x40050fb	              0x5d	                                 pop rbp	      1723	ldlang.c	FUNCTION_47
0x40050fc	            0x415c	                                 pop r12	      1723	ldlang.c	FUNCTION_47
0x40050fe	            0x415d	                                 pop r13	      1723	ldlang.c	FUNCTION_47
0x4005100	            0x415e	                                 pop r14	      1723	ldlang.c	FUNCTION_47
0x4005102	            0x415f	                                 pop r15	      1723	ldlang.c	FUNCTION_47
0x4005104	              0xc3	                                     ret	      1723	ldlang.c	FUNCTION_47
0x4005105	           0xf1f00	                         nop dword [rax]	      1723	ldlang.c	FUNCTION_47
0x4005108	          0x4531ed	                          xor r13d, r13d	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400510b	          0x4885db	                           test rbx, rbx	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400510e	     0xf8492010000	                            je 0x40052a6	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005114	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005119	            0xeb26	                           jmp 0x4005141	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400511b	       0xf1f440000	                   nop dword [rax + rax]	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005120	      0xa90b010000	                         test eax, 0x10b	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005125	            0x7511	                           jne 0x4005138	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005127	    0x81e500004000	                       and ebp, 0x400000	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x400512d	        0x4c0f44eb	                          cmove r13, rbx	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005131	     0xf1f80000000	                         nop dword [rax]	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005138	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400513c	          0x4885db	                           test rbx, rbx	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400513f	            0x748f	                            je 0x40050d0	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005141	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4005145	          0x4885f6	                           test rsi, rsi	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4005148	            0x7436	                            je 0x4005180	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x400514a	          0x4d85ff	                           test r15, r15	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x400514d	          0x8b6e20	            mov ebp, dword [rsi + 0x20] 	      1593	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4005150	            0x7418	                            je 0x400516a	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005152	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005159	          0x4c89f1	                            mov rcx, r14	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x400515c	    0x488b3d000000	            mov rdi, qword [0x04005163] 	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005163	          0x41ffd7	                                call r15	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005166	            0x85c0	                           test eax, eax	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4005168	            0x74ce	                            je 0x4005138	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x400516a	            0x89e8	                            mov eax, ebp	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400516c	          0x4431e0	                           xor eax, r12d	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x400516f	      0xa90b014000	                      test eax, 0x40010b	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005174	            0x75aa	                           jne 0x4005120	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005176	          0x4989dd	                            mov r13, rbx	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005179	            0xebbd	                           jmp 0x4005138	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x400517b	       0xf1f440000	                   nop dword [rax + rax]	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4005180	    0x8bab88000000	            mov ebp, dword [rbx + 0x88] 	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005186	            0xebe2	                           jmp 0x400516a	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005188	     0xf1f84000000	                   nop dword [rax + rax]	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4005190	          0x4885db	                           test rbx, rbx	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005193	     0xf84c3010000	                            je 0x400535c	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4005199	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x400519e	            0x31f6	                            xor esi, esi	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051a0	            0x31ed	                            xor ebp, ebp	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051a2	          0x4489e1	                           mov ecx, r12d	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051a5	        0x4183e402	                             and r12d, 2	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051a9	    0x81c902010000	                           or ecx, 0x102	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051af	            0xeb29	                           jmp 0x40051da	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051b1	     0xf1f80000000	                         nop dword [rax]	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051b8	            0xa802	                              test al, 2	      1626	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051ba	            0x7509	                           jne 0x40051c5	      1626	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051bc	          0x4585e4	                         test r12d, r12d	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051bf	     0xf852effffff	                           jne 0x40050f3	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051c5	          0x4889dd	                            mov rbp, rbx	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x40051c8	      0xbe01000000	                              mov esi, 1	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x40051cd	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051d1	          0x4885db	                           test rbx, rbx	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051d4	     0xf8419ffffff	                            je 0x40050f3	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051da	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x40051de	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	      1618	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051e4	          0x4885d2	                           test rdx, rdx	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x40051e7	            0x7403	                            je 0x40051ec	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x40051e9	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      1620	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x40051ec	            0x89c2	                            mov edx, eax	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051ee	            0x31ca	                            xor edx, ecx	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x40051f0	    0xf7c201040000	                         test edx, 0x401	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x40051f6	            0x74c0	                            je 0x40051b8	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x40051f8	            0x85f6	                           test esi, esi	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x40051fa	     0xf85f3feffff	                           jne 0x40050f3	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005200	    0x81e203010000	                          and edx, 0x103	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4005206	        0x480f44eb	                          cmove rbp, rbx	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x400520a	            0xebc1	                           jmp 0x40051cd	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x400520c	          0x4531ed	                          xor r13d, r13d	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x400520f	          0x4885db	                           test rbx, rbx	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005212	     0xf848e000000	                            je 0x40052a6	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005218	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400521c	            0x89f8	                            mov eax, edi	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400521e	          0x4189fc	                           mov r12d, edi	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005221	      0x2500010000	                          and eax, 0x100	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005226	        0x89442410	             mov dword [rsp + 0x10], eax	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400522a	            0xeb29	                           jmp 0x4005255	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400522c	         0xf1f4000	                         nop dword [rax]	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005230	    0x81e500004000	                       and ebp, 0x400000	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005236	            0x7410	                            je 0x4005248	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005238	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400523c	            0x85c0	                           test eax, eax	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400523e	        0x4c0f44eb	                          cmove r13, rbx	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005242	    0x660f1f440000	                    nop word [rax + rax]	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005248	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x400524c	          0x4885db	                           test rbx, rbx	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x400524f	     0xf847bfeffff	                            je 0x40050d0	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005255	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4005259	          0x4885f6	                           test rsi, rsi	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x400525c	            0x7432	                            je 0x4005290	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x400525e	          0x4d85ff	                           test r15, r15	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005261	          0x8b6e20	            mov ebp, dword [rsi + 0x20] 	      1650	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4005264	            0x7418	                            je 0x400527e	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005266	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x400526d	          0x4c89f1	                            mov rcx, r14	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005270	    0x488b3d000000	            mov rdi, qword [0x04005277] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4005277	          0x41ffd7	                                call r15	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x400527a	            0x85c0	                           test eax, eax	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x400527c	            0x74ca	                            je 0x4005248	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x400527e	            0x89e8	                            mov eax, ebp	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005280	          0x4431e0	                           xor eax, r12d	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005283	      0xa903050000	                         test eax, 0x503	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005288	            0x75a6	                           jne 0x4005230	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400528a	          0x4989dd	                            mov r13, rbx	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400528d	            0xebb9	                           jmp 0x4005248	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x400528f	              0x90	                                     nop	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4005290	    0x8bab88000000	            mov ebp, dword [rbx + 0x88] 	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005296	            0xebe6	                           jmp 0x400527e	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4005298	      0x837c242011	           cmp dword [rsp + 0x20], 0x11 	      1563	ldlang.c	FUNCTION_47	IF_6
0x400529d	     0xf8530fdffff	                           jne 0x4004fd3	      1563	ldlang.c	FUNCTION_47	IF_6
0x40052a3	          0x4531ed	                          xor r13d, r13d	      1563	ldlang.c	FUNCTION_47	IF_6
0x40052a6	            0x31d2	                            xor edx, edx	      1563	ldlang.c	FUNCTION_47	IF_6
0x40052a8	      0xe929feffff	                           jmp 0x40050d6	      1563	ldlang.c	FUNCTION_47	IF_6
0x40052ad	          0x4531ed	                          xor r13d, r13d	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052b0	          0x4885db	                           test rbx, rbx	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052b3	            0x74f1	                            je 0x40052a6	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052b5	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052ba	            0xeb3e	                           jmp 0x40052fa	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052bc	         0xf1f4000	                         nop dword [rax]	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052c0	          0x4d85ff	                           test r15, r15	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052c3	          0x8b6e20	            mov ebp, dword [rsi + 0x20] 	      1673	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x40052c6	            0x7418	                            je 0x40052e0	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052c8	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052cf	          0x4c89f1	                            mov rcx, r14	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052d2	    0x488b3d000000	            mov rdi, qword [0x040052d9] 	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052d9	          0x41ffd7	                                call r15	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052dc	            0x85c0	                           test eax, eax	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052de	            0x740d	                            je 0x40052ed	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x40052e0	          0x4431e5	                           xor ebp, r12d	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x40052e3	    0x81e503054000	                       and ebp, 0x400503	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x40052e9	        0x4c0f44eb	                          cmove r13, rbx	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x40052ed	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052f1	          0x4885db	                           test rbx, rbx	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052f4	     0xf84d6fdffff	                            je 0x40050d0	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x40052fa	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x40052fe	          0x4885f6	                           test rsi, rsi	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4005301	            0x75bd	                           jne 0x40052c0	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4005303	    0x8bab88000000	            mov ebp, dword [rbx + 0x88] 	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4005309	            0xebd5	                           jmp 0x40052e0	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x400530b	          0x4c89ed	                            mov rbp, r13	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x400530e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4005313	          0x4885c0	                           test rax, rax	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4005316	     0xf84d7fdffff	                            je 0x40050f3	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x400531c	          0x488928	                    mov qword [rax], rbp	      1559	ldlang.c	FUNCTION_47	IF_4	IF_5
0x400531f	      0xe9cffdffff	                           jmp 0x40050f3	      1559	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4005324	            0x31ed	                            xor ebp, ebp	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4005326	          0x4885db	                           test rbx, rbx	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4005329	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x400532d	     0xf84c0fdffff	                            je 0x40050f3	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4005333	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4005337	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	      1709	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x400533d	          0x4885d2	                           test rdx, rdx	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4005340	            0x7403	                            je 0x4005345	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4005342	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      1711	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4005345	            0x31c8	                            xor eax, ecx	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x4005347	          0xf6c420	                           test ah, 0x20	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x400534a	        0x480f44eb	                          cmove rbp, rbx	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x400534e	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4005352	          0x4885db	                           test rbx, rbx	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4005355	            0x75dc	                           jne 0x4005333	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4005357	      0xe997fdffff	                           jmp 0x40050f3	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x400535c	            0x31ed	                            xor ebp, ebp	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x400535e	      0xe990fdffff	                           jmp 0x40050f3	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
update_wild_statements	CALL,4:functions,0:WHILE,0:FOR,2:IF,3:DO,0:SWITCH,3:ELSE,0	78
0x4000370	    0x8b0500000000	            mov eax, dword [0x04000376] 	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000376	            0x85c0	                           test eax, eax	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000378	     0xf847c000000	                            je 0x40003fa	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x400037e	          0x83f802	                              cmp eax, 2	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000381	            0x777d	                            ja 0x4000400	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000383	          0x4885ff	                           test rdi, rdi	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000386	              0x53	                                push rbx	      3523	ldlang.c	FUNCTION_85
0x4000387	          0x4889fb	                            mov rbx, rdi	      3523	ldlang.c	FUNCTION_85
0x400038a	            0x7522	                           jne 0x40003ae	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x400038c	            0xeb6b	                           jmp 0x40003f9	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x400038e	            0x6690	                                     nop	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000390	          0x83f80d	                            cmp eax, 0xd	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000393	            0x7453	                            je 0x40003e8	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000395	          0x83f80f	                            cmp eax, 0xf	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000398	            0x750c	                           jne 0x40003a6	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400039a	    0x488b3d000000	            mov rdi, qword [0x040003a1] 	      3567	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_2
0x40003a1	      0xe8caffffff	         call sym.update_wild_statements	      3567	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_2
0x40003a6	          0x488b1b	                    mov rbx, qword [rbx]	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003a9	          0x4885db	                           test rbx, rbx	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003ac	            0x744b	                            je 0x40003f9	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003ae	          0x8b4308	                mov eax, dword [rbx + 8]	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x40003b1	          0x83f804	                              cmp eax, 4	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x40003b4	            0x745a	                            je 0x4000410	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x40003b6	            0x77d8	                            ja 0x4000390	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x40003b8	            0x85c0	                           test eax, eax	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x40003ba	            0x75ea	                           jne 0x40003a6	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x40003bc	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003c0	      0xbf00000000	                              mov edi, 0	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003c5	      0xb906000000	                              mov ecx, 6	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003ca	          0x4889c6	                            mov rsi, rax	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003cd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003cf	            0x74d5	                            je 0x40003a6	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003d1	      0xbf00000000	                              mov edi, 0	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003d6	      0xb906000000	                              mov ecx, 6	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003db	          0x4889c6	                            mov rsi, rax	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003de	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003e0	            0x74c4	                            je 0x40003a6	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003e2	    0x660f1f440000	                    nop word [rax + rax]	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40003e8	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3579	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_4
0x40003ec	      0xe87fffffff	         call sym.update_wild_statements	      3579	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_4
0x40003f1	          0x488b1b	                    mov rbx, qword [rbx]	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003f4	          0x4885db	                           test rbx, rbx	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003f7	            0x75b5	                           jne 0x40003ae	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x40003f9	              0x5b	                                 pop rbx	      3585	ldlang.c	FUNCTION_85
0x40003fa	            0xf3c3	                                     ret	      3585	ldlang.c	FUNCTION_85
0x40003fc	         0xf1f4000	                         nop dword [rax]	      3585	ldlang.c	FUNCTION_85
0x4000400	      0xbec90d0000	                          mov esi, 0xdc9	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x4000405	      0xbf00000000	                              mov edi, 0	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x400040a	      0xe900000000	                           jmp 0x400040f	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x400040f	              0x90	                                     nop	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x4000410	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000414	    0x8b0d00000000	            mov ecx, dword [0x0400041a] 	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400041a	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400041d	            0x7525	                           jne 0x4000444	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400041f	            0xeb85	                           jmp 0x40003a6	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000421	     0xf1f80000000	                         nop dword [rax]	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000428	            0x7236	                            jb 0x4000460	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400042a	          0x83fa02	                              cmp edx, 2	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400042d	            0x7509	                           jne 0x4000438	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400042f	          0x83f901	                              cmp ecx, 1	      3557	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x4000432	            0x7434	                            je 0x4000468	      3557	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x4000434	         0xf1f4000	                         nop dword [rax]	      3557	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x4000438	          0x488b00	                    mov rax, qword [rax]	      3545	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400043b	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400043e	     0xf8462ffffff	                            je 0x40003a6	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000444	          0x8b5018	            mov edx, dword [rax + 0x18] 	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000447	          0x83fa01	                              cmp edx, 1	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400044a	            0x75dc	                           jne 0x4000428	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x400044c	          0x83f902	                              cmp ecx, 2	      3553	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x400044f	            0x75e7	                           jne 0x4000438	      3553	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x4000451	    0xc74018030000	               mov dword [rax + 0x18], 3	      3554	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x4000458	            0xebde	                           jmp 0x4000438	      3554	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x400045a	    0x660f1f440000	                    nop word [rax + rax]	      3554	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x4000460	          0x894818	             mov dword [rax + 0x18], ecx	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000463	            0xebd3	                           jmp 0x4000438	      3551	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000465	           0xf1f00	                         nop dword [rax]	      3551	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x4000468	    0xc74018040000	               mov dword [rax + 0x18], 4	      3558	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x400046f	            0xebc7	                           jmp 0x4000438	      3558	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
version_expr_head_hash	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	2
0x4000d00	        0x488b7f08	                mov rdi, qword [rdi + 8]	      8352	ldlang.c	FUNCTION_196	CALL_1
0x4000d04	      0xe900000000	                           jmp 0x4000d09	      8352	ldlang.c	FUNCTION_196	CALL_1
stat_alloc	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	41
0x4003240	    0x488b0d000000	            mov rcx, qword [0x04003247] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003247	              0x53	                                push rbx	       139	ldlang.c	FUNCTION_1
0x4003248	          0x4889fb	                            mov rbx, rdi	       139	ldlang.c	FUNCTION_1
0x400324b	    0x488b3d000000	            mov rdi, qword [0x04003252] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003252	          0x4889c8	                            mov rax, rcx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003255	          0x4829f8	                            sub rax, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003258	          0x4839c3	                            cmp rbx, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x400325b	            0x7753	                            ja 0x40032b0	       140	ldlang.c	FUNCTION_1	CALL_1
0x400325d	    0x488b05000000	            mov rax, qword [0x04003264] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003264	          0x4801fb	                            add rbx, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003267	          0x4839c3	                            cmp rbx, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x400326a	            0x746e	                            je 0x40032da	       140	ldlang.c	FUNCTION_1	CALL_1
0x400326c	    0x488b15000000	            mov rdx, qword [0x04003273] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003273	        0x488d3c13	                    lea rdi, [rbx + rdx]	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003277	          0x48f7d2	                                 not rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x400327a	          0x4889cb	                            mov rbx, rcx	       140	ldlang.c	FUNCTION_1	CALL_1
0x400327d	          0x4821d7	                            and rdi, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003280	    0x488b15000000	            mov rdx, qword [0x04003287] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003287	          0x4889fe	                            mov rsi, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x400328a	    0x48893d000000	            mov qword [0x04003291], rdi 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003291	          0x4829d6	                            sub rsi, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003294	          0x4829d3	                            sub rbx, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4003297	          0x4839de	                            cmp rsi, rbx	       140	ldlang.c	FUNCTION_1	CALL_1
0x400329a	            0x760a	                           jbe 0x40032a6	       140	ldlang.c	FUNCTION_1	CALL_1
0x400329c	    0x48890d000000	            mov qword [0x040032a3], rcx 	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032a3	          0x4889cf	                            mov rdi, rcx	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032a6	    0x48893d000000	            mov qword [0x040032ad], rdi 	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032ad	              0x5b	                                 pop rbx	       141	ldlang.c	FUNCTION_1
0x40032ae	              0xc3	                                     ret	       141	ldlang.c	FUNCTION_1
0x40032af	              0x90	                                     nop	       141	ldlang.c	FUNCTION_1
0x40032b0	          0x4889de	                            mov rsi, rbx	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032b3	      0xbf00000000	                              mov edi, 0	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032b8	      0xe800000000	                          call 0x40032bd	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032bd	    0x488b3d000000	            mov rdi, qword [0x040032c4] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032c4	    0x488b05000000	            mov rax, qword [0x040032cb] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032cb	    0x488b0d000000	            mov rcx, qword [0x040032d2] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032d2	          0x4801fb	                            add rbx, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032d5	          0x4839c3	                            cmp rbx, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032d8	            0x7592	                           jne 0x400326c	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032da	    0x800d00000000	                 or byte [0x040032e1], 2	       140	ldlang.c	FUNCTION_1	CALL_1
0x40032e1	            0xeb89	                           jmp 0x400326c	       140	ldlang.c	FUNCTION_1	CALL_1
insert_pad	CALL,1:functions,0:WHILE,0:FOR,0:IF,5:DO,0:SWITCH,0:ELSE,2	60
0x4003460	          0x4885ff	                           test rdi, rdi	      4649	ldlang.c	FUNCTION_108	IF_2
0x4003463	            0x4156	                                push r14	      4642	ldlang.c	FUNCTION_108
0x4003465	          0x4989d6	                            mov r14, rdx	      4642	ldlang.c	FUNCTION_108
0x4003468	            0x4155	                                push r13	      4642	ldlang.c	FUNCTION_108
0x400346a	          0x4989f5	                            mov r13, rsi	      4642	ldlang.c	FUNCTION_108
0x400346d	            0x4154	                                push r12	      4642	ldlang.c	FUNCTION_108
0x400346f	          0x4989cc	                            mov r12, rcx	      4642	ldlang.c	FUNCTION_108
0x4003472	              0x55	                                push rbp	      4642	ldlang.c	FUNCTION_108
0x4003473	          0x4c89c5	                             mov rbp, r8	      4642	ldlang.c	FUNCTION_108
0x4003476	              0x53	                                push rbx	      4642	ldlang.c	FUNCTION_108
0x4003477	          0x4889fb	                            mov rbx, rdi	      4642	ldlang.c	FUNCTION_108
0x400347a	            0x7413	                            je 0x400348f	      4649	ldlang.c	FUNCTION_108	IF_2
0x400347c	    0x4881ff000000	                              cmp rdi, 0	      4649	ldlang.c	FUNCTION_108	IF_2
0x4003483	            0x740a	                            je 0x400348f	      4649	ldlang.c	FUNCTION_108	IF_2
0x4003485	        0x837f080c	                cmp dword [rdi + 8], 0xc	      4650	ldlang.c	FUNCTION_108	IF_2
0x4003489	     0xf8491000000	                            je 0x4003520	      4650	ldlang.c	FUNCTION_108	IF_2
0x400348f	          0x488b03	                    mov rax, qword [rbx]	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003492	          0x4885c0	                           test rax, rax	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003495	            0x7406	                            je 0x400349d	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003497	        0x8378080c	                cmp dword [rax + 8], 0xc	      4656	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400349b	            0x7473	                            je 0x4003510	      4656	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400349d	      0xbf30000000	                           mov edi, 0x30	      4664	ldlang.c	FUNCTION_108	ELSE_2
0x40034a2	      0xe800000000	                          call 0x40034a7	      4664	ldlang.c	FUNCTION_108	ELSE_2
0x40034a7	          0x488b13	                    mov rdx, qword [rbx]	      4666	ldlang.c	FUNCTION_108	ELSE_2
0x40034aa	          0x4d85ed	                           test r13, r13	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x40034ad	          0x488910	                    mov qword [rax], rdx	      4666	ldlang.c	FUNCTION_108	ELSE_2
0x40034b0	      0xba00000000	                              mov edx, 0	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x40034b5	          0x488903	                    mov qword [rbx], rax	      4667	ldlang.c	FUNCTION_108	ELSE_2
0x40034b8	        0x4c0f44ea	                          cmove r13, rdx	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x40034bc	    0xc740080c0000	                mov dword [rax + 8], 0xc	      4668	ldlang.c	FUNCTION_108	ELSE_2
0x40034c3	        0x4c896020	             mov qword [rax + 0x20], r12	      4669	ldlang.c	FUNCTION_108	ELSE_2
0x40034c7	        0x4c896828	             mov qword [rax + 0x28], r13	      4672	ldlang.c	FUNCTION_108	ELSE_2
0x40034cb	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      4674	ldlang.c	FUNCTION_108
0x40034d0	          0x4889e9	                            mov rcx, rbp	      4674	ldlang.c	FUNCTION_108
0x40034d3	        0x4c897018	             mov qword [rax + 0x18], r14	      4675	ldlang.c	FUNCTION_108
0x40034d7	          0x4829d1	                            sub rcx, rdx	      4674	ldlang.c	FUNCTION_108
0x40034da	        0x48894810	             mov qword [rax + 0x10], rcx	      4674	ldlang.c	FUNCTION_108
0x40034de	    0x41f644242108	               test byte [r12 + 0x21], 8	      4676	ldlang.c	FUNCTION_108	IF_5
0x40034e4	            0x7517	                           jne 0x40034fd	      4676	ldlang.c	FUNCTION_108	IF_5
0x40034e6	    0x8b0d00000000	            mov ecx, dword [0x040034ec] 	      4677	ldlang.c	FUNCTION_108	IF_5
0x40034ec	          0x49d3ee	                             shr r14, cl	      4677	ldlang.c	FUNCTION_108	IF_5
0x40034ef	          0x4c01f5	                            add rbp, r14	      4677	ldlang.c	FUNCTION_108	IF_5
0x40034f2	          0x4829d5	                            sub rbp, rdx	      4677	ldlang.c	FUNCTION_108	IF_5
0x40034f5	          0x48d3e5	                             shl rbp, cl	      4677	ldlang.c	FUNCTION_108	IF_5
0x40034f8	      0x49896c2438	             mov qword [r12 + 0x38], rbp	      4677	ldlang.c	FUNCTION_108	IF_5
0x40034fd	              0x5b	                                 pop rbx	      4679	ldlang.c	FUNCTION_108
0x40034fe	              0x5d	                                 pop rbp	      4679	ldlang.c	FUNCTION_108
0x40034ff	            0x415c	                                 pop r12	      4679	ldlang.c	FUNCTION_108
0x4003501	            0x415d	                                 pop r13	      4679	ldlang.c	FUNCTION_108
0x4003503	            0x415e	                                 pop r14	      4679	ldlang.c	FUNCTION_108
0x4003505	              0xc3	                                     ret	      4679	ldlang.c	FUNCTION_108
0x4003506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4679	ldlang.c	FUNCTION_108
0x4003510	        0x4c3b6020	            cmp r12, qword [rax + 0x20] 	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003514	            0x7587	                           jne 0x400349d	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003516	            0xebb3	                           jmp 0x40034cb	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003518	     0xf1f84000000	                   nop dword [rax + rax]	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003520	        0x48394f20	            cmp qword [rdi + 0x20], rcx 	      4651	ldlang.c	FUNCTION_108	IF_2
0x4003524	     0xf8565ffffff	                           jne 0x400348f	      4651	ldlang.c	FUNCTION_108	IF_2
0x400352a	          0x4889f8	                            mov rax, rdi	      4651	ldlang.c	FUNCTION_108	IF_2
0x400352d	            0xeb9c	                           jmp 0x40034cb	      4651	ldlang.c	FUNCTION_108	IF_2
lang_add_wild	CALL,2:functions,0:WHILE,0:FOR,1:IF,4:DO,0:SWITCH,0:ELSE,1	351
0x4007e30	            0x4157	                                push r15	      7433	ldlang.c	FUNCTION_164
0x4007e32	            0x4156	                                push r14	      7433	ldlang.c	FUNCTION_164
0x4007e34	          0x4989f7	                            mov r15, rsi	      7433	ldlang.c	FUNCTION_164
0x4007e37	            0x4155	                                push r13	      7433	ldlang.c	FUNCTION_164
0x4007e39	            0x4154	                                push r12	      7433	ldlang.c	FUNCTION_164
0x4007e3b	          0x4189d4	                           mov r12d, edx	      7433	ldlang.c	FUNCTION_164
0x4007e3e	              0x55	                                push rbp	      7433	ldlang.c	FUNCTION_164
0x4007e3f	              0x53	                                push rbx	      7433	ldlang.c	FUNCTION_164
0x4007e40	          0x4889fb	                            mov rbx, rdi	      7433	ldlang.c	FUNCTION_164
0x4007e43	        0x4883ec28	                           sub rsp, 0x28	      7433	ldlang.c	FUNCTION_164
0x4007e47	          0x4885f6	                           test rsi, rsi	      7438	ldlang.c	FUNCTION_164	FOR_1
0x4007e4a	            0x7415	                            je 0x4007e61	      7438	ldlang.c	FUNCTION_164	FOR_1
0x4007e4c	            0x31c9	                            xor ecx, ecx	      7438	ldlang.c	FUNCTION_164	FOR_1
0x4007e4e	            0xeb03	                           jmp 0x4007e53	      7438	ldlang.c	FUNCTION_164	FOR_1
0x4007e50	          0x4989c7	                            mov r15, rax	      7438	ldlang.c	FUNCTION_164	FOR_1
0x4007e53	          0x498b07	                    mov rax, qword [r15]	      7442	ldlang.c	FUNCTION_164	FOR_1
0x4007e56	          0x49890f	                    mov qword [r15], rcx	      7443	ldlang.c	FUNCTION_164	FOR_1
0x4007e59	          0x4c89f9	                            mov rcx, r15	      7443	ldlang.c	FUNCTION_164	FOR_1
0x4007e5c	          0x4885c0	                           test rax, rax	      7438	ldlang.c	FUNCTION_164	FOR_1
0x4007e5f	            0x75ef	                           jne 0x4007e50	      7438	ldlang.c	FUNCTION_164	FOR_1
0x4007e61	          0x4885db	                           test rbx, rbx	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007e64	     0xf8468030000	                            je 0x40081d2	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007e6a	          0x488b0b	                    mov rcx, qword [rbx]	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007e6d	          0x4885c9	                           test rcx, rcx	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007e70	            0x741c	                            je 0x4007e8e	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007e72	           0xfb601	                   movzx eax, byte [rcx]	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007e75	            0x3c2a	                            cmp al, 0x2a	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007e77	     0xf85af010000	                           jne 0x400802c	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007e7d	        0x80790100	                   cmp byte [rcx + 1], 0	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007e81	     0xf85a9010000	                           jne 0x4008030	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007e87	    0x48c703000000	                      mov qword [rbx], 0	      7449	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007e8e	    0x488b2d000000	            mov rbp, qword [0x04007e95] 	      7454	ldlang.c	FUNCTION_164
0x4007e95	      0xbf80000000	                           mov edi, 0x80	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4007e9a	      0xe800000000	                          call 0x4007e9f	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4007e9f	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4007ea6	    0xc74008040000	                  mov dword [rax + 8], 4	      1040	ldlang.c	FUNCTION_33
0x4007ead	          0x4989c5	                            mov r13, rax	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4007eb0	        0x488b4508	                mov rax, qword [rbp + 8]	      7673	ldlang.c	FUNCTION_179
0x4007eb4	          0x4c8928	                    mov qword [rax], r13	      7673	ldlang.c	FUNCTION_179
0x4007eb7	        0x4c896d08	                mov qword [rbp + 8], r13	      7674	ldlang.c	FUNCTION_179
0x4007ebb	          0x488b03	                    mov rax, qword [rbx]	      7461	ldlang.c	FUNCTION_164	IF_4
0x4007ebe	        0x49894510	             mov qword [r13 + 0x10], rax	      7461	ldlang.c	FUNCTION_164	IF_4
0x4007ec2	            0x31c0	                            xor eax, eax	      7462	ldlang.c	FUNCTION_164	IF_4
0x4007ec4	        0x837b1001	               cmp dword [rbx + 0x10], 1	      7462	ldlang.c	FUNCTION_164	IF_4
0x4007ec8	           0xf94c0	                                 sete al	      7462	ldlang.c	FUNCTION_164	IF_4
0x4007ecb	        0x41894518	             mov dword [r13 + 0x18], eax	      7462	ldlang.c	FUNCTION_164	IF_4
0x4007ecf	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      7463	ldlang.c	FUNCTION_164	IF_4
0x4007ed3	        0x49894578	             mov qword [r13 + 0x78], rax	      7463	ldlang.c	FUNCTION_164	IF_4
0x4007ed7	        0x488b4308	                mov rax, qword [rbx + 8]	      7464	ldlang.c	FUNCTION_164	IF_4
0x4007edb	        0x49894540	             mov qword [r13 + 0x40], rax	      7464	ldlang.c	FUNCTION_164	IF_4
0x4007edf	        0x498d4530	                   lea rax, [r13 + 0x30]	      1010	ldlang.c	FUNCTION_30
0x4007ee3	          0x4d85ff	                           test r15, r15	       801	ldlang.c	FUNCTION_25	FOR_1
0x4007ee6	        0x4d897d20	             mov qword [r13 + 0x20], r15	      7466	ldlang.c	FUNCTION_164
0x4007eea	        0x45896528	            mov dword [r13 + 0x28], r12d	      7467	ldlang.c	FUNCTION_164
0x4007eee	    0x49c745300000	               mov qword [r13 + 0x30], 0	      1009	ldlang.c	FUNCTION_30
0x4007ef6	        0x49894538	             mov qword [r13 + 0x38], rax	      1010	ldlang.c	FUNCTION_30
0x4007efa	    0x49c745480000	               mov qword [r13 + 0x48], 0	       788	ldlang.c	FUNCTION_25
0x4007f02	    0x49c745500000	               mov qword [r13 + 0x50], 0	       789	ldlang.c	FUNCTION_25
0x4007f0a	    0x49c745580000	               mov qword [r13 + 0x58], 0	       790	ldlang.c	FUNCTION_25
0x4007f12	    0x49c745600000	               mov qword [r13 + 0x60], 0	       791	ldlang.c	FUNCTION_25
0x4007f1a	    0x49c745680000	               mov qword [r13 + 0x68], 0	       792	ldlang.c	FUNCTION_25
0x4007f22	    0x49c745700000	               mov qword [r13 + 0x70], 0	       793	ldlang.c	FUNCTION_25
0x4007f2a	     0xf84b2000000	                            je 0x4007fe2	       801	ldlang.c	FUNCTION_25	FOR_1
0x4007f30	        0x498b4708	                mov rax, qword [r15 + 8]	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f34	          0x4885c0	                           test rax, rax	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f37	        0x48890424	                    mov qword [rsp], rax	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f3b	     0xf84a1000000	                            je 0x4007fe2	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f41	          0x4d89fb	                            mov r11, r15	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f44	          0x4989c2	                            mov r10, rax	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f47	    0xc74424080000	                  mov dword [rsp + 8], 0	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f4f	    0x41bc01000000	                             mov r12d, 1	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007f55	    0x48be01002000	             movabs rsi, 0x2000000200001	       975	string2.h	FUNCTION_218	WHILE_1
0x4007f5f	              0x90	                                     nop	       975	string2.h	FUNCTION_218	WHILE_1
0x4007f60	        0x410fb60a	                   movzx ecx, byte [r10]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f64	            0x84c9	                             test cl, cl	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f66	     0xf8494000000	                            je 0x4008000	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f6c	          0x83e92a	                           sub ecx, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f6f	          0x80f931	                            cmp cl, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f72	            0x7706	                            ja 0x4007f7a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f74	        0x480fa3ce	                             bt rsi, rcx	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007f78	            0x721e	                            jb 0x4007f98	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007f7a	          0x4c89d2	                            mov rdx, r10	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f7d	           0xf1f00	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f80	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4007f84	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f87	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f89	            0x7475	                            je 0x4008000	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f8b	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f8e	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f90	            0x77ee	                            ja 0x4007f80	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007f92	        0x480fa3c6	                             bt rsi, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007f96	            0x73e8	                           jae 0x4007f80	      1115	string2.h	FUNCTION_223	WHILE_1
0x4007f98	          0x80f931	                            cmp cl, 0x31	       974	string2.h	FUNCTION_218	WHILE_1
0x4007f9b	            0x7706	                            ja 0x4007fa3	       974	string2.h	FUNCTION_218	WHILE_1
0x4007f9d	        0x480fa3ce	                             bt rsi, rcx	       975	string2.h	FUNCTION_218	WHILE_1
0x4007fa1	            0x723f	                            jb 0x4007fe2	       975	string2.h	FUNCTION_218	WHILE_1
0x4007fa3	            0x31c0	                            xor eax, eax	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fa5	            0xeb0c	                           jmp 0x4007fb3	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fa7	    0x660f1f840000	                    nop word [rax + rax]	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fb0	          0x4889f8	                            mov rax, rdi	      1114	string2.h	FUNCTION_223	WHILE_1
0x4007fb3	    0x410fb6540201	        movzx edx, byte [r10 + rax + 1] 	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fb9	        0x488d7801	                      lea rdi, [rax + 1]	       976	string2.h	FUNCTION_218	WHILE_1
0x4007fbd	            0x84d2	                             test dl, dl	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fbf	            0x7421	                            je 0x4007fe2	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fc1	          0x8d4ad6	                   lea ecx, [rdx - 0x2a]	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fc4	          0x80f931	                            cmp cl, 0x31	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fc7	            0x77e7	                            ja 0x4007fb0	       974	string2.h	FUNCTION_218	WHILE_1
0x4007fc9	        0x480fa3ce	                             bt rsi, rcx	       975	string2.h	FUNCTION_218	WHILE_1
0x4007fcd	            0x73e1	                           jae 0x4007fb0	       975	string2.h	FUNCTION_218	WHILE_1
0x4007fcf	          0x80fa2a	                            cmp dl, 0x2a	       366	ldlang.c	FUNCTION_11
0x4007fd2	            0x750e	                           jne 0x4007fe2	       366	ldlang.c	FUNCTION_11
0x4007fd4	        0x4883ff03	                              cmp rdi, 3	       366	ldlang.c	FUNCTION_11
0x4007fd8	            0x7608	                           jbe 0x4007fe2	       366	ldlang.c	FUNCTION_11
0x4007fda	    0x41807c020200	             cmp byte [r10 + rax + 2], 0	       366	ldlang.c	FUNCTION_11
0x4007fe0	            0x740f	                            je 0x4007ff1	       366	ldlang.c	FUNCTION_11
0x4007fe2	        0x4883c428	                           add rsp, 0x28	      7470	ldlang.c	FUNCTION_164
0x4007fe6	              0x5b	                                 pop rbx	      7470	ldlang.c	FUNCTION_164
0x4007fe7	              0x5d	                                 pop rbp	      7470	ldlang.c	FUNCTION_164
0x4007fe8	            0x415c	                                 pop r12	      7470	ldlang.c	FUNCTION_164
0x4007fea	            0x415d	                                 pop r13	      7470	ldlang.c	FUNCTION_164
0x4007fec	            0x415e	                                 pop r14	      7470	ldlang.c	FUNCTION_164
0x4007fee	            0x415f	                                 pop r15	      7470	ldlang.c	FUNCTION_164
0x4007ff0	              0xc3	                                     ret	      7470	ldlang.c	FUNCTION_164
0x4007ff1	      0x8344240801	                  add dword [rsp + 8], 1	       808	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x4007ff6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       808	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x4008000	          0x4d8b1b	                    mov r11, qword [r11]	       801	ldlang.c	FUNCTION_25	FOR_1
0x4008003	          0x4d85db	                           test r11, r11	       801	ldlang.c	FUNCTION_25	FOR_1
0x4008006	     0xf8484000000	                            je 0x4008090	       801	ldlang.c	FUNCTION_25	FOR_1
0x400800c	        0x4d8b5308	                mov r10, qword [r11 + 8]	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4008010	        0x4183c401	                             add r12d, 1	       803	ldlang.c	FUNCTION_25	FOR_1
0x4008014	          0x4d85d2	                           test r10, r10	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4008017	     0xf8543ffffff	                           jne 0x4007f60	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400801d	        0x4883c428	                           add rsp, 0x28	      7470	ldlang.c	FUNCTION_164
0x4008021	              0x5b	                                 pop rbx	      7470	ldlang.c	FUNCTION_164
0x4008022	              0x5d	                                 pop rbp	      7470	ldlang.c	FUNCTION_164
0x4008023	            0x415c	                                 pop r12	      7470	ldlang.c	FUNCTION_164
0x4008025	            0x415d	                                 pop r13	      7470	ldlang.c	FUNCTION_164
0x4008027	            0x415e	                                 pop r14	      7470	ldlang.c	FUNCTION_164
0x4008029	            0x415f	                                 pop r15	      7470	ldlang.c	FUNCTION_164
0x400802b	              0xc3	                                     ret	      7470	ldlang.c	FUNCTION_164
0x400802c	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400802e	            0x743c	                            je 0x400806c	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008030	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008033	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008035	            0x7644	                           jbe 0x400807b	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008037	    0x48be01002000	             movabs rsi, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008041	        0x4883c101	                              add rcx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4008045	           0xfb601	                   movzx eax, byte [rcx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008048	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400804a	            0x7420	                            je 0x400806c	      1114	string2.h	FUNCTION_223	WHILE_1
0x400804c	         0xf1f4000	                         nop dword [rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008050	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008053	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008055	            0x77ea	                            ja 0x4008041	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008057	        0x480fa3c6	                             bt rsi, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x400805b	     0xf822dfeffff	                            jb 0x4007e8e	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008061	        0x4883c101	                              add rcx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4008065	           0xfb601	                   movzx eax, byte [rcx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008068	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x400806a	            0x75e4	                           jne 0x4008050	      1114	string2.h	FUNCTION_223	WHILE_1
0x400806c	    0xc70500000000	               mov dword [0x04008076], 1	      7451	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x4008076	      0xe913feffff	                           jmp 0x4007e8e	      7451	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x400807b	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008085	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008089	            0x73ac	                           jae 0x4008037	      1115	string2.h	FUNCTION_223	WHILE_1
0x400808b	      0xe9fefdffff	                           jmp 0x4007e8e	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008090	        0x4183fc04	                             cmp r12d, 4	       817	ldlang.c	FUNCTION_25	IF_4
0x4008094	     0xf8f48ffffff	                            jg 0x4007fe2	       817	ldlang.c	FUNCTION_25	IF_4
0x400809a	          0x4c89f8	                            mov rax, r15	       817	ldlang.c	FUNCTION_25	IF_4
0x400809d	    0x48bb01002000	             movabs rbx, 0x2000000200001	       817	ldlang.c	FUNCTION_25	IF_4
0x40080a7	      0x448964240c	             mov dword [rsp + 0xc], r12d	       817	ldlang.c	FUNCTION_25	IF_4
0x40080ac	      0x4c896c2410	             mov qword [rsp + 0x10], r13	       817	ldlang.c	FUNCTION_25	IF_4
0x40080b1	      0x4c897c2418	             mov qword [rsp + 0x18], r15	       817	ldlang.c	FUNCTION_25	IF_4
0x40080b6	          0x4c8b30	                    mov r14, qword [rax]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40080b9	          0x4d85f6	                           test r14, r14	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40080bc	     0xf846c010000	                            je 0x400822e	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40080c2	        0x4c8b7808	                mov r15, qword [rax + 8]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40080c6	          0x4889dd	                            mov rbp, rbx	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40080c9	      0xb801000000	                              mov eax, 1	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40080ce	          0x4d89f5	                            mov r13, r14	       975	string2.h	FUNCTION_218	WHILE_1
0x40080d1	        0x450fb627	                  movzx r12d, byte [r15]	       975	string2.h	FUNCTION_218	WHILE_1
0x40080d5	      0x418d4c24d6	                   lea ecx, [r12 - 0x2a]	       975	string2.h	FUNCTION_218	WHILE_1
0x40080da	          0x48d3ed	                             shr rbp, cl	       975	string2.h	FUNCTION_218	WHILE_1
0x40080dd	          0x83e501	                              and ebp, 1	       975	string2.h	FUNCTION_218	WHILE_1
0x40080e0	        0x4883f501	                              xor rbp, 1	       975	string2.h	FUNCTION_218	WHILE_1
0x40080e4	          0x80f931	                            cmp cl, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x40080e7	           0xf47e8	                          cmova ebp, eax	       975	string2.h	FUNCTION_218	WHILE_1
0x40080ea	    0x660f1f440000	                    nop word [rax + rax]	       975	string2.h	FUNCTION_218	WHILE_1
0x40080f0	          0x4584e4	                         test r12b, r12b	       974	string2.h	FUNCTION_218	WHILE_1
0x40080f3	        0x498b7508	                mov rsi, qword [r13 + 8]	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x40080f7	     0xf84a9000000	                            je 0x40081a6	       974	string2.h	FUNCTION_218	WHILE_1
0x40080fd	          0x4084ed	                           test bpl, bpl	       975	string2.h	FUNCTION_218	WHILE_1
0x4008100	     0xf841e010000	                            je 0x4008224	       975	string2.h	FUNCTION_218	WHILE_1
0x4008106	            0x31ff	                            xor edi, edi	       975	string2.h	FUNCTION_218	WHILE_1
0x4008108	     0xf1f84000000	                   nop dword [rax + rax]	       975	string2.h	FUNCTION_218	WHILE_1
0x4008110	        0x4883c701	                              add rdi, 1	       976	string2.h	FUNCTION_218	WHILE_1
0x4008114	      0x450fb6043f	             movzx r8d, byte [r15 + rdi]	       974	string2.h	FUNCTION_218	WHILE_1
0x4008119	          0x4584c0	                           test r8b, r8b	       974	string2.h	FUNCTION_218	WHILE_1
0x400811c	     0xf8486000000	                            je 0x40081a8	       974	string2.h	FUNCTION_218	WHILE_1
0x4008122	        0x418d40d6	                    lea eax, [r8 - 0x2a]	       975	string2.h	FUNCTION_218	WHILE_1
0x4008126	            0x3c31	                            cmp al, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x4008128	            0x77e6	                            ja 0x4008110	       975	string2.h	FUNCTION_218	WHILE_1
0x400812a	        0x480fa3c3	                             bt rbx, rax	       975	string2.h	FUNCTION_218	WHILE_1
0x400812e	            0x73e0	                           jae 0x4008110	       975	string2.h	FUNCTION_218	WHILE_1
0x4008130	           0xfb606	                   movzx eax, byte [rsi]	       974	string2.h	FUNCTION_218	WHILE_1
0x4008133	            0x84c0	                             test al, al	       974	string2.h	FUNCTION_218	WHILE_1
0x4008135	     0xf841a020000	                            je 0x4008355	       974	string2.h	FUNCTION_218	WHILE_1
0x400813b	          0x83e82a	                           sub eax, 0x2a	       975	string2.h	FUNCTION_218	WHILE_1
0x400813e	            0x3c31	                            cmp al, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x4008140	            0x7706	                            ja 0x4008148	       975	string2.h	FUNCTION_218	WHILE_1
0x4008142	        0x480fa3c3	                             bt rbx, rax	       975	string2.h	FUNCTION_218	WHILE_1
0x4008146	            0x725a	                            jb 0x40081a2	       975	string2.h	FUNCTION_218	WHILE_1
0x4008148	            0x31c0	                            xor eax, eax	       975	string2.h	FUNCTION_218	WHILE_1
0x400814a	            0xeb07	                           jmp 0x4008153	       975	string2.h	FUNCTION_218	WHILE_1
0x400814c	         0xf1f4000	                         nop dword [rax]	       975	string2.h	FUNCTION_218	WHILE_1
0x4008150	          0x4889d0	                            mov rax, rdx	       975	string2.h	FUNCTION_218	WHILE_1
0x4008153	       0xfb64c0601	        movzx ecx, byte [rsi + rax + 1] 	       974	string2.h	FUNCTION_218	WHILE_1
0x4008158	        0x488d5001	                      lea rdx, [rax + 1]	       976	string2.h	FUNCTION_218	WHILE_1
0x400815c	            0x84c9	                             test cl, cl	       974	string2.h	FUNCTION_218	WHILE_1
0x400815e	            0x7460	                            je 0x40081c0	       974	string2.h	FUNCTION_218	WHILE_1
0x4008160	          0x83e92a	                           sub ecx, 0x2a	       975	string2.h	FUNCTION_218	WHILE_1
0x4008163	          0x80f931	                            cmp cl, 0x31	       975	string2.h	FUNCTION_218	WHILE_1
0x4008166	            0x77e8	                            ja 0x4008150	       975	string2.h	FUNCTION_218	WHILE_1
0x4008168	        0x480fa3cb	                             bt rbx, rcx	       975	string2.h	FUNCTION_218	WHILE_1
0x400816c	            0x73e2	                           jae 0x4008150	       975	string2.h	FUNCTION_218	WHILE_1
0x400816e	        0x4180f801	                              cmp r8b, 1	       767	ldlang.c	FUNCTION_24	IF_1
0x4008172	        0x4883d700	                              adc rdi, 0	       767	ldlang.c	FUNCTION_24	IF_1
0x4008176	          0x4839fa	                            cmp rdx, rdi	       773	ldlang.c	FUNCTION_24	CALL_1
0x4008179	        0x480f47d7	                          cmova rdx, rdi	       773	ldlang.c	FUNCTION_24	CALL_1
0x400817d	          0x4c89ff	                            mov rdi, r15	       773	ldlang.c	FUNCTION_24	CALL_1
0x4008180	      0xe800000000	                          call 0x4008185	       773	ldlang.c	FUNCTION_24	CALL_1
0x4008185	            0x85c0	                           test eax, eax	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x4008187	     0xf8455feffff	                            je 0x4007fe2	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x400818d	        0x4d8b6d00	                    mov r13, qword [r13]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x4008191	          0x4d85ed	                           test r13, r13	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x4008194	     0xf8556ffffff	                           jne 0x40080f0	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400819a	          0x4c89f0	                            mov rax, r14	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x400819d	      0xe914ffffff	                           jmp 0x40080b6	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40081a2	            0x31d2	                            xor edx, edx	       975	string2.h	FUNCTION_218	WHILE_1
0x40081a4	            0xebc8	                           jmp 0x400816e	       975	string2.h	FUNCTION_218	WHILE_1
0x40081a6	            0x31ff	                            xor edi, edi	       973	string2.h	FUNCTION_218
0x40081a8	           0xfb606	                   movzx eax, byte [rsi]	       974	string2.h	FUNCTION_218	WHILE_1
0x40081ab	          0x4531c0	                            xor r8d, r8d	       974	string2.h	FUNCTION_218	WHILE_1
0x40081ae	            0x84c0	                             test al, al	       974	string2.h	FUNCTION_218	WHILE_1
0x40081b0	            0x7589	                           jne 0x400813b	       974	string2.h	FUNCTION_218	WHILE_1
0x40081b2	      0xb801000000	                              mov eax, 1	       974	string2.h	FUNCTION_218	WHILE_1
0x40081b7	            0xeb10	                           jmp 0x40081c9	       974	string2.h	FUNCTION_218	WHILE_1
0x40081b9	     0xf1f80000000	                         nop dword [rax]	       974	string2.h	FUNCTION_218	WHILE_1
0x40081c0	        0x4883c002	                              add rax, 2	       974	string2.h	FUNCTION_218	WHILE_1
0x40081c4	          0x4584c0	                           test r8b, r8b	       766	ldlang.c	FUNCTION_24	IF_1
0x40081c7	            0x7504	                           jne 0x40081cd	       766	ldlang.c	FUNCTION_24	IF_1
0x40081c9	        0x4883c701	                              add rdi, 1	       767	ldlang.c	FUNCTION_24	IF_1
0x40081cd	          0x4889c2	                            mov rdx, rax	       767	ldlang.c	FUNCTION_24	IF_1
0x40081d0	            0xeba4	                           jmp 0x4008176	       767	ldlang.c	FUNCTION_24	IF_1
0x40081d2	    0x488b1d000000	            mov rbx, qword [0x040081d9] 	      7454	ldlang.c	FUNCTION_164
0x40081d9	      0xbf80000000	                           mov edi, 0x80	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40081de	      0xe800000000	                          call 0x40081e3	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40081e3	          0x4989c5	                            mov r13, rax	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40081e6	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x40081ed	    0xc74008040000	                  mov dword [rax + 8], 4	      1040	ldlang.c	FUNCTION_33
0x40081f4	        0x488b4308	                mov rax, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x40081f8	          0x4c8928	                    mov qword [rax], r13	      7673	ldlang.c	FUNCTION_179
0x40081fb	        0x4c896b08	                mov qword [rbx + 8], r13	      7674	ldlang.c	FUNCTION_179
0x40081ff	    0x49c745100000	               mov qword [r13 + 0x10], 0	      7455	ldlang.c	FUNCTION_164
0x4008207	    0x41c745180000	               mov dword [r13 + 0x18], 0	      7456	ldlang.c	FUNCTION_164
0x400820f	    0x49c745780000	               mov qword [r13 + 0x78], 0	      7457	ldlang.c	FUNCTION_164
0x4008217	    0x49c745400000	               mov qword [r13 + 0x40], 0	      7458	ldlang.c	FUNCTION_164
0x400821f	      0xe9bbfcffff	                           jmp 0x4007edf	      7458	ldlang.c	FUNCTION_164
0x4008224	          0x4589e0	                           mov r8d, r12d	       975	string2.h	FUNCTION_218	WHILE_1
0x4008227	            0x31ff	                            xor edi, edi	       973	string2.h	FUNCTION_218
0x4008229	      0xe902ffffff	                           jmp 0x4008130	       973	string2.h	FUNCTION_218
0x400822e	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	       973	string2.h	FUNCTION_218
0x4008233	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       973	string2.h	FUNCTION_218
0x4008238	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       973	string2.h	FUNCTION_218
0x400823d	          0x4589e0	                           mov r8d, r12d	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008240	        0x41c1e008	                              shl r8d, 8	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008244	      0x4403442408	                add r8d, dword [rsp + 8]	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008249	    0x4181f8010200	                          cmp r8d, 0x201	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008250	     0xf8409010000	                            je 0x400835f	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008256	            0x7e7b	                           jle 0x40082d3	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008258	    0x4181f8020300	                          cmp r8d, 0x302	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400825f	     0xf8407010000	                            je 0x400836c	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008265	    0x4181f8020400	                          cmp r8d, 0x402	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400826c	     0xf8570fdffff	                           jne 0x4007fe2	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4008272	    0x49c745480000	               mov qword [r13 + 0x48], 0	       847	ldlang.c	FUNCTION_25	SWITCH_1
0x400827a	        0x488b1424	                    mov rdx, qword [rsp]	       767	ldlang.c	FUNCTION_24	IF_1
0x400827e	          0x4c89ff	                            mov rdi, r15	       767	ldlang.c	FUNCTION_24	IF_1
0x4008281	            0x31f6	                            xor esi, esi	       767	ldlang.c	FUNCTION_24	IF_1
0x4008283	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400828d	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008290	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008292	            0x7517	                           jne 0x40082ab	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008294	            0xeb30	                           jmp 0x40082c6	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40082a0	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x40082a4	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x40082a7	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x40082a9	            0x741b	                            je 0x40082c6	      1114	string2.h	FUNCTION_223	WHILE_1
0x40082ab	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x40082ae	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x40082b0	            0x77ee	                            ja 0x40082a0	      1114	string2.h	FUNCTION_223	WHILE_1
0x40082b2	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x40082b6	            0x73e8	                           jae 0x40082a0	      1115	string2.h	FUNCTION_223	WHILE_1
0x40082b8	          0x488b3f	                    mov rdi, qword [rdi]	       859	ldlang.c	FUNCTION_25	FOR_4
0x40082bb	          0x4885ff	                           test rdi, rdi	       859	ldlang.c	FUNCTION_25	FOR_4
0x40082be	            0x7440	                            je 0x4008300	       859	ldlang.c	FUNCTION_25	FOR_4
0x40082c0	        0x488b5708	                mov rdx, qword [rdi + 8]	       859	ldlang.c	FUNCTION_25	FOR_4
0x40082c4	            0xebc7	                           jmp 0x400828d	       859	ldlang.c	FUNCTION_25	FOR_4
0x40082c6	          0x4863c6	                         movsxd rax, esi	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x40082c9	          0x83c601	                              add esi, 1	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x40082cc	      0x49897cc550	     mov qword [r13 + rax*8 + 0x50], rdi	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x40082d1	            0xebe5	                           jmp 0x40082b8	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x40082d3	    0x4181f8000100	                          cmp r8d, 0x100	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40082da	     0xf8499000000	                            je 0x4008379	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40082e0	    0x4181f8010100	                          cmp r8d, 0x101	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40082e7	     0xf85f5fcffff	                           jne 0x4007fe2	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40082ed	    0x49c745480000	               mov qword [r13 + 0x48], 0	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x40082f5	            0xeb83	                           jmp 0x400827a	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x40082f7	    0x660f1f840000	                    nop word [rax + rax]	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x4008300	        0x488b1424	                    mov rdx, qword [rsp]	       859	ldlang.c	FUNCTION_25	FOR_4
0x4008304	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_223	WHILE_1
0x400830e	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008311	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008313	            0x7516	                           jne 0x400832b	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008315	            0xeb2c	                           jmp 0x4008343	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008317	    0x660f1f840000	                    nop word [rax + rax]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008320	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_223	WHILE_1
0x4008324	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008327	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008329	            0x7418	                            je 0x4008343	      1114	string2.h	FUNCTION_223	WHILE_1
0x400832b	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_223	WHILE_1
0x400832e	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008330	            0x77ee	                            ja 0x4008320	      1114	string2.h	FUNCTION_223	WHILE_1
0x4008332	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008336	            0x73e8	                           jae 0x4008320	      1115	string2.h	FUNCTION_223	WHILE_1
0x4008338	          0x4863c6	                         movsxd rax, esi	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x400833b	          0x83c601	                              add esi, 1	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x400833e	      0x4d897cc550	     mov qword [r13 + rax*8 + 0x50], r15	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x4008343	          0x4d8b3f	                    mov r15, qword [r15]	       862	ldlang.c	FUNCTION_25	FOR_5
0x4008346	          0x4d85ff	                           test r15, r15	       862	ldlang.c	FUNCTION_25	FOR_5
0x4008349	     0xf8493fcffff	                            je 0x4007fe2	       862	ldlang.c	FUNCTION_25	FOR_5
0x400834f	        0x498b5708	                mov rdx, qword [r15 + 8]	       862	ldlang.c	FUNCTION_25	FOR_5
0x4008353	            0xebb9	                           jmp 0x400830e	       862	ldlang.c	FUNCTION_25	FOR_5
0x4008355	      0xba01000000	                              mov edx, 1	       974	string2.h	FUNCTION_218	WHILE_1
0x400835a	      0xe917feffff	                           jmp 0x4008176	       974	string2.h	FUNCTION_218	WHILE_1
0x400835f	    0x49c745480000	               mov qword [r13 + 0x48], 0	       841	ldlang.c	FUNCTION_25	SWITCH_1
0x4008367	      0xe90effffff	                           jmp 0x400827a	       841	ldlang.c	FUNCTION_25	SWITCH_1
0x400836c	    0x49c745480000	               mov qword [r13 + 0x48], 0	       844	ldlang.c	FUNCTION_25	SWITCH_1
0x4008374	      0xe901ffffff	                           jmp 0x400827a	       844	ldlang.c	FUNCTION_25	SWITCH_1
0x4008379	    0x49c745480000	               mov qword [r13 + 0x48], 0	       835	ldlang.c	FUNCTION_25	SWITCH_1
0x4008381	      0xe9f4feffff	                           jmp 0x400827a	       835	ldlang.c	FUNCTION_25	SWITCH_1
ldlang_add_file	CALL,5:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	34
0x4006790	    0x488b05000000	            mov rax, qword [0x04006797] 	      7673	ldlang.c	FUNCTION_179
0x4006797	              0x53	                                push rbx	      6636	ldlang.c	FUNCTION_143
0x4006798	          0x4889fb	                            mov rbx, rdi	      6636	ldlang.c	FUNCTION_143
0x400679b	          0x488938	                    mov qword [rax], rdi	      7673	ldlang.c	FUNCTION_179
0x400679e	        0x488d4730	                   lea rax, [rdi + 0x30]	      6639	ldlang.c	FUNCTION_143
0x40067a2	    0x488905000000	            mov qword [0x040067a9], rax 	      6639	ldlang.c	FUNCTION_143
0x40067a9	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      6643	ldlang.c	FUNCTION_143	CALL_2
0x40067ad	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	      6643	ldlang.c	FUNCTION_143	CALL_2
0x40067b5	            0x7413	                            je 0x40067ca	      6643	ldlang.c	FUNCTION_143	CALL_2
0x40067b7	      0xbef3190000	                         mov esi, 0x19f3	      6643	ldlang.c	FUNCTION_143	CALL_2
0x40067bc	      0xbf00000000	                              mov edi, 0	      6643	ldlang.c	FUNCTION_143	CALL_2
0x40067c1	      0xe800000000	                          call 0x40067c6	      6643	ldlang.c	FUNCTION_143	CALL_2
0x40067c6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      6643	ldlang.c	FUNCTION_143	CALL_2
0x40067ca	    0x483905000000	            cmp qword [0x040067d1], rax 	      6644	ldlang.c	FUNCTION_143	CALL_3
0x40067d1	            0x7445	                            je 0x4006818	      6644	ldlang.c	FUNCTION_143	CALL_3
0x40067d3	    0x488b15000000	            mov rdx, qword [0x040067da] 	      6646	ldlang.c	FUNCTION_143
0x40067da	    0x8b3500000000	            mov esi, dword [0x040067e0] 	      6649	ldlang.c	FUNCTION_143	CALL_4
0x40067e0	          0x488902	                    mov qword [rdx], rax	      6646	ldlang.c	FUNCTION_143
0x40067e3	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      6647	ldlang.c	FUNCTION_143
0x40067e7	    0x488d87f00000	                   lea rax, [rdi + 0xf0]	      6647	ldlang.c	FUNCTION_143
0x40067ee	    0x48899f000100	            mov qword [rdi + 0x100], rbx	      6648	ldlang.c	FUNCTION_143
0x40067f5	    0x488905000000	            mov qword [0x040067fc], rax 	      6647	ldlang.c	FUNCTION_143
0x40067fc	      0xe800000000	                          call 0x4006801	      6649	ldlang.c	FUNCTION_143	CALL_4
0x4006801	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4006805	          0x4889da	                            mov rdx, rbx	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4006808	      0xbe00000000	                              mov esi, 0	      6661	ldlang.c	FUNCTION_143	CALL_5
0x400680d	              0x5b	                                 pop rbx	      6662	ldlang.c	FUNCTION_143
0x400680e	      0xe900000000	                           jmp 0x4006813	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4006813	       0xf1f440000	                   nop dword [rax + rax]	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4006818	      0xbef4190000	                         mov esi, 0x19f4	      6644	ldlang.c	FUNCTION_143	CALL_3
0x400681d	      0xbf00000000	                              mov edi, 0	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4006822	      0xe800000000	                          call 0x4006827	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4006827	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      6644	ldlang.c	FUNCTION_143	CALL_3
0x400682b	            0xeba6	                           jmp 0x40067d3	      6644	ldlang.c	FUNCTION_143	CALL_3
lang_leave_overlay_section	CALL,17:functions,0:WHILE,0:FOR,1:IF,1:DO,0:SWITCH,0:ELSE,0	98
0x4008f50	            0x4155	                                push r13	      7998	ldlang.c	FUNCTION_190
0x4008f52	            0x4154	                                push r12	      7998	ldlang.c	FUNCTION_190
0x4008f54	          0x4889f2	                            mov rdx, rsi	      7998	ldlang.c	FUNCTION_190
0x4008f57	              0x55	                                push rbp	      7998	ldlang.c	FUNCTION_190
0x4008f58	              0x53	                                push rbx	      7998	ldlang.c	FUNCTION_190
0x4008f59	            0x31c9	                            xor ecx, ecx	      8010	ldlang.c	FUNCTION_190	CALL_1
0x4008f5b	      0xbe00000000	                              mov esi, 0	      8010	ldlang.c	FUNCTION_190	CALL_1
0x4008f60	        0x4883ec08	                              sub rsp, 8	      7998	ldlang.c	FUNCTION_190
0x4008f64	    0x488b05000000	            mov rax, qword [0x04008f6b] 	      8004	ldlang.c	FUNCTION_190
0x4008f6b	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      8004	ldlang.c	FUNCTION_190
0x4008f6f	      0xe800000000	                          call 0x4008f74	      8010	ldlang.c	FUNCTION_190	CALL_1
0x4008f74	          0x4889ef	                            mov rdi, rbp	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008f77	      0xe800000000	                          call 0x4008f7c	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008f7c	        0x488d7801	                      lea rdi, [rax + 1]	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008f80	      0xe800000000	                          call 0x4008f85	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008f85	          0x4889c3	                            mov rbx, rax	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008f88	         0xfb64500	                   movzx eax, byte [rbp]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008f8c	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008f8e	     0xf8416010000	                            je 0x40090aa	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008f94	          0x4889ea	                            mov rdx, rbp	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008f97	          0x4889d9	                            mov rcx, rbx	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008f9a	            0xeb13	                           jmp 0x4008faf	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008f9c	         0xf1f4000	                         nop dword [rax]	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008fa0	            0x3c5f	                            cmp al, 0x5f	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008fa2	            0x7418	                            je 0x4008fbc	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008fa4	        0x4883c201	                              add rdx, 1	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008fa8	           0xfb602	                   movzx eax, byte [rdx]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008fab	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008fad	            0x741e	                            je 0x4008fcd	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008faf	           0xfb6f0	                           movzx esi, al	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008fb2	    0xf68436000000	            test byte [rsi + rsi], 0x8c 	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008fba	            0x74e4	                            je 0x4008fa0	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008fbc	        0x4883c201	                              add rdx, 1	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008fc0	            0x8801	                      mov byte [rcx], al	      8018	ldlang.c	FUNCTION_190	FOR_1	IF_1
0x4008fc2	        0x4883c101	                              add rcx, 1	      8018	ldlang.c	FUNCTION_190	FOR_1	IF_1
0x4008fc6	           0xfb602	                   movzx eax, byte [rdx]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008fc9	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008fcb	            0x75e2	                           jne 0x4008faf	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008fcd	          0xc60100	                       mov byte [rcx], 0	      8019	ldlang.c	FUNCTION_190
0x4008fd0	          0x4889df	                            mov rdi, rbx	      8021	ldlang.c	FUNCTION_190	CALL_6
0x4008fd3	      0xe800000000	                          call 0x4008fd8	      8021	ldlang.c	FUNCTION_190	CALL_6
0x4008fd8	        0x488d780e	                    lea rdi, [rax + 0xe]	      8021	ldlang.c	FUNCTION_190	CALL_6
0x4008fdc	      0xe800000000	                          call 0x4008fe1	      8021	ldlang.c	FUNCTION_190	CALL_6
0x4008fe1	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_240	CALL_1
0x4008fe4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_240	CALL_1
0x4008fe9	          0x4989c4	                            mov r12, rax	      8021	ldlang.c	FUNCTION_190	CALL_6
0x4008fec	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_240	CALL_1
0x4008ff3	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_240	CALL_1
0x4008ff6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_240	CALL_1
0x4008ffb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_240	CALL_1
0x4008ffd	      0xe800000000	                          call 0x4009002	        33	stdio2.h	FUNCTION_240	CALL_1
0x4009002	          0x4889ee	                            mov rsi, rbp	      8023	ldlang.c	FUNCTION_190	CALL_8
0x4009005	      0xbf44010000	                          mov edi, 0x144	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400900a	      0xe800000000	                          call 0x400900f	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400900f	            0x31d2	                            xor edx, edx	      8023	ldlang.c	FUNCTION_190	CALL_8
0x4009011	          0x4889c6	                            mov rsi, rax	      8023	ldlang.c	FUNCTION_190	CALL_8
0x4009014	          0x4c89e7	                            mov rdi, r12	      8023	ldlang.c	FUNCTION_190	CALL_8
0x4009017	      0xe800000000	                          call 0x400901c	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400901c	          0x4889c7	                            mov rdi, rax	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400901f	      0xe800000000	                          call 0x4009024	      8023	ldlang.c	FUNCTION_190	CALL_8
0x4009024	          0x4889df	                            mov rdi, rbx	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4009027	      0xe800000000	                          call 0x400902c	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400902c	        0x488d780d	                    lea rdi, [rax + 0xd]	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4009030	      0xe800000000	                          call 0x4009035	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4009035	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_240	CALL_1
0x4009038	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_240	CALL_1
0x400903d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_240	CALL_1
0x4009044	          0x4989c4	                            mov r12, rax	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4009047	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_240	CALL_1
0x400904a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_240	CALL_1
0x400904f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_240	CALL_1
0x4009051	      0xe800000000	                          call 0x4009056	        33	stdio2.h	FUNCTION_240	CALL_1
0x4009056	          0x4889ee	                            mov rsi, rbp	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009059	      0xbf41010000	                          mov edi, 0x141	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400905e	      0xe800000000	                          call 0x4009063	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009063	          0x4889ee	                            mov rsi, rbp	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009066	          0x4989c5	                            mov r13, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009069	      0xbf44010000	                          mov edi, 0x144	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400906e	      0xe800000000	                          call 0x4009073	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009073	          0x4c89ea	                            mov rdx, r13	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009076	          0x4889c6	                            mov rsi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009079	      0xbf2b000000	                           mov edi, 0x2b	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400907e	      0xe800000000	                          call 0x4009083	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009083	          0x4c89e7	                            mov rdi, r12	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009086	            0x31d2	                            xor edx, edx	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009088	          0x4889c6	                            mov rsi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400908b	      0xe800000000	                          call 0x4009090	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009090	          0x4889c7	                            mov rdi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009093	      0xe800000000	                          call 0x4009098	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4009098	        0x4883c408	                              add rsp, 8	      8036	ldlang.c	FUNCTION_190
0x400909c	          0x4889df	                            mov rdi, rbx	      8035	ldlang.c	FUNCTION_190	CALL_17
0x400909f	              0x5b	                                 pop rbx	      8036	ldlang.c	FUNCTION_190
0x40090a0	              0x5d	                                 pop rbp	      8036	ldlang.c	FUNCTION_190
0x40090a1	            0x415c	                                 pop r12	      8036	ldlang.c	FUNCTION_190
0x40090a3	            0x415d	                                 pop r13	      8036	ldlang.c	FUNCTION_190
0x40090a5	      0xe900000000	                           jmp 0x40090aa	      8035	ldlang.c	FUNCTION_190	CALL_17
0x40090aa	          0x4889d9	                            mov rcx, rbx	      8014	ldlang.c	FUNCTION_190	CALL_3
0x40090ad	      0xe91bffffff	                           jmp 0x4008fcd	      8014	ldlang.c	FUNCTION_190	CALL_3
walk_wild_section_specs4_wild2	CALL,10:functions,0:WHILE,0:FOR,1:IF,6:DO,0:SWITCH,0:ELSE,3	124
0x40028b0	            0x4157	                                push r15	       690	ldlang.c	FUNCTION_22
0x40028b2	            0x4156	                                push r14	       690	ldlang.c	FUNCTION_22
0x40028b4	            0x4155	                                push r13	       690	ldlang.c	FUNCTION_22
0x40028b6	            0x4154	                                push r12	       690	ldlang.c	FUNCTION_22
0x40028b8	              0x55	                                push rbp	       690	ldlang.c	FUNCTION_22
0x40028b9	              0x53	                                push rbx	       690	ldlang.c	FUNCTION_22
0x40028ba	          0x4889f5	                            mov rbp, rsi	       690	ldlang.c	FUNCTION_22
0x40028bd	          0x4889fb	                            mov rbx, rdi	       690	ldlang.c	FUNCTION_22
0x40028c0	        0x4883ec58	                           sub rsp, 0x58	       690	ldlang.c	FUNCTION_22
0x40028c4	        0x4c8b6760	            mov r12, qword [rdi + 0x60] 	       694	ldlang.c	FUNCTION_22
0x40028c8	        0x4c8b7f68	            mov r15, qword [rdi + 0x68] 	       695	ldlang.c	FUNCTION_22
0x40028cc	    0x64488b042528	                mov rax, qword fs:[0x28]	       690	ldlang.c	FUNCTION_22
0x40028d5	      0x4889442448	             mov qword [rsp + 0x48], rax	       690	ldlang.c	FUNCTION_22
0x40028da	            0x31c0	                            xor eax, eax	       690	ldlang.c	FUNCTION_22
0x40028dc	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       692	ldlang.c	FUNCTION_22
0x40028e0	      0x4889542408	                mov qword [rsp + 8], rdx	       690	ldlang.c	FUNCTION_22
0x40028e5	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	       693	ldlang.c	FUNCTION_22
0x40028e9	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       693	ldlang.c	FUNCTION_22
0x40028ed	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       690	ldlang.c	FUNCTION_22
0x40028f2	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       350	ldlang.c	FUNCTION_10	CALL_1
0x40028f7	        0x488b7008	                mov rsi, qword [rax + 8]	       350	ldlang.c	FUNCTION_10	CALL_1
0x40028fb	      0x4889442428	             mov qword [rsp + 0x28], rax	       692	ldlang.c	FUNCTION_22
0x4002900	      0x4889542420	             mov qword [rsp + 0x20], rdx	       693	ldlang.c	FUNCTION_22
0x4002905	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x400290a	    0x48c744243000	               mov qword [rsp + 0x30], 0	       348	ldlang.c	FUNCTION_10
0x4002913	    0xc74424380000	               mov dword [rsp + 0x38], 0	       348	ldlang.c	FUNCTION_10
0x400291b	      0xe800000000	                          call 0x4002920	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002920	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       699	ldlang.c	FUNCTION_22	IF_1
0x4002924	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       353	ldlang.c	FUNCTION_10
0x4002929	            0x85d2	                           test edx, edx	       699	ldlang.c	FUNCTION_22	IF_1
0x400292b	     0xf85ef000000	                           jne 0x4002a20	       699	ldlang.c	FUNCTION_22	IF_1
0x4002931	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       699	ldlang.c	FUNCTION_22	IF_1
0x4002936	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       699	ldlang.c	FUNCTION_22	IF_1
0x400293a	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       350	ldlang.c	FUNCTION_10	CALL_1
0x400293f	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002944	        0x488b7008	                mov rsi, qword [rax + 8]	       350	ldlang.c	FUNCTION_10	CALL_1
0x4002948	    0x48c744243000	               mov qword [rsp + 0x30], 0	       348	ldlang.c	FUNCTION_10
0x4002951	    0xc74424380000	               mov dword [rsp + 0x38], 0	       348	ldlang.c	FUNCTION_10
0x4002959	      0xe800000000	                          call 0x400295e	       350	ldlang.c	FUNCTION_10	CALL_1
0x400295e	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       353	ldlang.c	FUNCTION_10
0x4002963	          0x4889c1	                            mov rcx, rax	       353	ldlang.c	FUNCTION_10
0x4002966	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       706	ldlang.c	FUNCTION_22	IF_2
0x400296a	            0x85c0	                           test eax, eax	       706	ldlang.c	FUNCTION_22	IF_2
0x400296c	     0xf85ae000000	                           jne 0x4002a20	       706	ldlang.c	FUNCTION_22	IF_2
0x4002972	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002976	    0x4c8bb0900000	            mov r14, qword [rax + 0x90] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x400297d	          0x4d85f6	                           test r14, r14	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002980	     0xf84af000000	                            je 0x4002a35	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002986	          0x4889e8	                            mov rax, rbp	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002989	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       712	ldlang.c	FUNCTION_22	FOR_1
0x400298e	          0x4c89f5	                            mov rbp, r14	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002991	          0x4889cb	                            mov rbx, rcx	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002994	          0x4989c6	                            mov r14, rax	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002997	            0xeb2d	                           jmp 0x40029c6	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002999	     0xf1f80000000	                         nop dword [rax]	       712	ldlang.c	FUNCTION_22	FOR_1
0x40029a0	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x40029a5	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x40029aa	          0x4c89e1	                            mov rcx, r12	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x40029ad	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x40029b2	          0x4889ea	                            mov rdx, rbp	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x40029b5	          0x4c89f6	                            mov rsi, r14	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x40029b8	      0xe843fdffff	     call sym.walk_wild_consider_section	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x40029bd	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x40029c1	          0x4885ed	                           test rbp, rbp	       712	ldlang.c	FUNCTION_22	FOR_1
0x40029c4	            0x746f	                            je 0x4002a35	       712	ldlang.c	FUNCTION_22	FOR_1
0x40029c6	          0x4939ed	                            cmp r13, rbp	       714	ldlang.c	FUNCTION_22	FOR_1	IF_3
0x40029c9	     0xf84b1000000	                            je 0x4002a80	       714	ldlang.c	FUNCTION_22	FOR_1	IF_3
0x40029cf	          0x4839eb	                            cmp rbx, rbp	       717	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x40029d2	     0xf8480000000	                            je 0x4002a58	       717	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x40029d8	        0x4c8b4500	                     mov r8, qword [rbp]	       721	ldlang.c	FUNCTION_22	FOR_1	ELSE_2
0x40029dc	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       722	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	CALL_7
0x40029e1	          0x4c89c6	                             mov rsi, r8	       722	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	CALL_7
0x40029e4	      0xe8b7e6ffff	              call sym.match_simple_wild	       722	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	CALL_7
0x40029e9	            0x85c0	                           test eax, eax	       725	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5
0x40029eb	            0x75b3	                           jne 0x40029a0	       725	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5
0x40029ed	        0x498b7f08	                mov rdi, qword [r15 + 8]	       730	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	CALL_9
0x40029f1	          0x4c89c6	                             mov rsi, r8	       730	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	CALL_9
0x40029f4	      0xe8a7e6ffff	              call sym.match_simple_wild	       730	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	CALL_9
0x40029f9	            0x85c0	                           test eax, eax	       731	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6
0x40029fb	            0x74c0	                            je 0x40029bd	       731	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6
0x40029fd	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a02	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a07	          0x4c89f9	                            mov rcx, r15	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a0a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a0f	          0x4889ea	                            mov rdx, rbp	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a12	          0x4c89f6	                            mov rsi, r14	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a15	      0xe8e6fcffff	     call sym.walk_wild_consider_section	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a1a	            0xeba1	                           jmp 0x40029bd	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a1c	         0xf1f4000	                         nop dword [rax]	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002a20	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002a25	      0x488b542408	                mov rdx, qword [rsp + 8]	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002a2a	          0x4889ee	                            mov rsi, rbp	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002a2d	          0x4889df	                            mov rdi, rbx	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002a30	      0xe8bbfdffff	      call sym.walk_wild_section_general	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002a35	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       737	ldlang.c	FUNCTION_22
0x4002a3a	    0x644833042528	                xor rax, qword fs:[0x28]	       737	ldlang.c	FUNCTION_22
0x4002a43	            0x755f	                           jne 0x4002aa4	       737	ldlang.c	FUNCTION_22
0x4002a45	        0x4883c458	                           add rsp, 0x58	       737	ldlang.c	FUNCTION_22
0x4002a49	              0x5b	                                 pop rbx	       737	ldlang.c	FUNCTION_22
0x4002a4a	              0x5d	                                 pop rbp	       737	ldlang.c	FUNCTION_22
0x4002a4b	            0x415c	                                 pop r12	       737	ldlang.c	FUNCTION_22
0x4002a4d	            0x415d	                                 pop r13	       737	ldlang.c	FUNCTION_22
0x4002a4f	            0x415e	                                 pop r14	       737	ldlang.c	FUNCTION_22
0x4002a51	            0x415f	                                 pop r15	       737	ldlang.c	FUNCTION_22
0x4002a53	              0xc3	                                     ret	       737	ldlang.c	FUNCTION_22
0x4002a54	         0xf1f4000	                         nop dword [rax]	       737	ldlang.c	FUNCTION_22
0x4002a58	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a5d	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a62	          0x4889da	                            mov rdx, rbx	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a65	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a6a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a6f	          0x4c89f6	                            mov rsi, r14	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a72	      0xe889fcffff	     call sym.walk_wild_consider_section	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a77	      0xe941ffffff	                           jmp 0x40029bd	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a7c	         0xf1f4000	                         nop dword [rax]	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002a80	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002a85	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002a8a	          0x4c89ea	                            mov rdx, r13	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002a8d	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002a92	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002a97	          0x4c89f6	                            mov rsi, r14	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002a9a	      0xe861fcffff	     call sym.walk_wild_consider_section	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002a9f	      0xe919ffffff	                           jmp 0x40029bd	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002aa4	      0xe800000000	                          call 0x4002aa9	       737	ldlang.c	FUNCTION_22
exp_init_os	CALL,10:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,2:ELSE,0	45
0x4004ca0	              0x53	                                push rbx	      2205	ldlang.c	FUNCTION_56
0x4004ca1	          0x4889fb	                            mov rbx, rdi	      2205	ldlang.c	FUNCTION_56
0x4004ca4	        0x837b1008	               cmp dword [rbx + 0x10], 8	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004ca8	            0x7718	                            ja 0x4004cc2	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004caa	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004cad	    0xff24c5000000	                       jmp qword [rax*8]	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004cb4	         0xf1f4000	                         nop dword [rax]	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004cb8	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      2230	ldlang.c	FUNCTION_56	SWITCH_1	CALL_8
0x4004cbc	        0x837b1008	               cmp dword [rbx + 0x10], 8	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004cc0	            0x76e8	                           jbe 0x4004caa	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004cc2	              0x5b	                                 pop rbx	      2252	ldlang.c	FUNCTION_56
0x4004cc3	              0xc3	                                     ret	      2252	ldlang.c	FUNCTION_56
0x4004cc4	         0xf1f4000	                         nop dword [rax]	      2252	ldlang.c	FUNCTION_56
0x4004cc8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2215	ldlang.c	FUNCTION_56	SWITCH_1	CALL_2
0x4004ccc	      0xe8cfffffff	                    call sym.exp_init_os	      2215	ldlang.c	FUNCTION_56	SWITCH_1	CALL_2
0x4004cd1	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2216	ldlang.c	FUNCTION_56	SWITCH_1	CALL_3
0x4004cd5	            0xebcd	                           jmp 0x4004ca4	      2217	ldlang.c	FUNCTION_56	SWITCH_1
0x4004cd7	    0x660f1f840000	                    nop word [rax + rax]	      2217	ldlang.c	FUNCTION_56	SWITCH_1
0x4004ce0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2220	ldlang.c	FUNCTION_56	SWITCH_1	CALL_4
0x4004ce4	      0xe8b7ffffff	                    call sym.exp_init_os	      2220	ldlang.c	FUNCTION_56	SWITCH_1	CALL_4
0x4004ce9	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2221	ldlang.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004ced	      0xe8aeffffff	                    call sym.exp_init_os	      2221	ldlang.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004cf2	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      2222	ldlang.c	FUNCTION_56	SWITCH_1	CALL_6
0x4004cf6	            0xebac	                           jmp 0x4004ca4	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004cf8	     0xf1f84000000	                   nop dword [rax + rax]	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d00	            0x8b03	                    mov eax, dword [rbx]	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d02	    0x8d88bffeffff	                  lea ecx, [rax - 0x141]	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d08	          0x83f903	                              cmp ecx, 3	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d0b	            0x77b5	                            ja 0x4004cc2	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d0d	      0xb801000000	                              mov eax, 1	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d12	          0x48d3e0	                             shl rax, cl	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d15	            0xa80d	                            test al, 0xd	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d17	            0x74a9	                            je 0x4004cc2	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x4004d19	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x4004d1d	            0x31d2	                            xor edx, edx	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x4004d1f	            0x31f6	                            xor esi, esi	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x4004d21	      0xe800000000	                          call 0x4004d26	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x4004d26	          0x4885c0	                           test rax, rax	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x4004d29	            0x7497	                            je 0x4004cc2	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x4004d2b	      0x4883783800	               cmp qword [rax + 0x38], 0	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x4004d30	            0x7590	                           jne 0x4004cc2	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x4004d32	              0x5b	                                 pop rbx	      2252	ldlang.c	FUNCTION_56
0x4004d33	            0x31f6	                            xor esi, esi	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
0x4004d35	          0x4889c7	                            mov rdi, rax	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
0x4004d38	            0xeb06	                         jmp sym.init_os	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
lang_map_flags	CALL,5:functions,0:WHILE,0:FOR,0:IF,5:DO,0:SWITCH,0:ELSE,0	39
0x4000480	              0x53	                                push rbx	      2026	ldlang.c	FUNCTION_52
0x4000481	            0x89fb	                            mov ebx, edi	      2026	ldlang.c	FUNCTION_52
0x4000483	          0x83e701	                              and edi, 1	      2027	ldlang.c	FUNCTION_52	IF_1
0x4000486	            0x7558	                           jne 0x40004e0	      2027	ldlang.c	FUNCTION_52	IF_1
0x4000488	          0xf6c310	                           test bl, 0x10	      2030	ldlang.c	FUNCTION_52	IF_2
0x400048b	            0x7543	                           jne 0x40004d0	      2030	ldlang.c	FUNCTION_52	IF_2
0x400048d	          0xf6c308	                              test bl, 8	      2033	ldlang.c	FUNCTION_52	IF_3
0x4000490	            0x752e	                           jne 0x40004c0	      2033	ldlang.c	FUNCTION_52	IF_3
0x4000492	          0xf6c320	                           test bl, 0x20	      2036	ldlang.c	FUNCTION_52	IF_4
0x4000495	            0x7519	                           jne 0x40004b0	      2036	ldlang.c	FUNCTION_52	IF_4
0x4000497	          0x83e302	                              and ebx, 2	      2039	ldlang.c	FUNCTION_52	IF_5
0x400049a	            0x7504	                           jne 0x40004a0	      2039	ldlang.c	FUNCTION_52	IF_5
0x400049c	              0x5b	                                 pop rbx	      2041	ldlang.c	FUNCTION_52
0x400049d	              0xc3	                                     ret	      2041	ldlang.c	FUNCTION_52
0x400049e	            0x6690	                                     nop	      2041	ldlang.c	FUNCTION_52
0x40004a0	              0x5b	                                 pop rbx	      2041	ldlang.c	FUNCTION_52
0x40004a1	      0xbf00000000	                              mov edi, 0	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40004a6	            0x31c0	                            xor eax, eax	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40004a8	      0xe900000000	                           jmp 0x40004ad	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40004ad	           0xf1f00	                         nop dword [rax]	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40004b0	      0xbf00000000	                              mov edi, 0	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40004b5	            0x31c0	                            xor eax, eax	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40004b7	      0xe800000000	                          call 0x40004bc	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40004bc	            0xebd9	                           jmp 0x4000497	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40004be	            0x6690	                                     nop	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40004c0	      0xbf00000000	                              mov edi, 0	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40004c5	            0x31c0	                            xor eax, eax	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40004c7	      0xe800000000	                          call 0x40004cc	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40004cc	            0xebc4	                           jmp 0x4000492	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40004ce	            0x6690	                                     nop	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40004d0	      0xbf00000000	                              mov edi, 0	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40004d5	            0x31c0	                            xor eax, eax	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40004d7	      0xe800000000	                          call 0x40004dc	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40004dc	            0xebaf	                           jmp 0x400048d	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40004de	            0x6690	                                     nop	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40004e0	      0xbf00000000	                              mov edi, 0	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40004e5	            0x31c0	                            xor eax, eax	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40004e7	      0xe800000000	                          call 0x40004ec	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40004ec	            0xeb9a	                           jmp 0x4000488	      2028	ldlang.c	FUNCTION_52	CALL_1
lang_float	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	2
0x4008670	    0x893d00000000	            mov dword [0x04008676], edi 	      7612	ldlang.c	FUNCTION_176
0x4008676	              0xc3	                                     ret	      7612	ldlang.c	FUNCTION_176
lang_add_reloc	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	36
0x4008510	            0x4157	                                push r15	      7567	ldlang.c	FUNCTION_172
0x4008512	            0x4156	                                push r14	      7567	ldlang.c	FUNCTION_172
0x4008514	          0x4189ff	                           mov r15d, edi	      7567	ldlang.c	FUNCTION_172
0x4008517	            0x4155	                                push r13	      7567	ldlang.c	FUNCTION_172
0x4008519	            0x4154	                                push r12	      7567	ldlang.c	FUNCTION_172
0x400851b	      0xbf50000000	                           mov edi, 0x50	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4008520	              0x55	                                push rbp	      7567	ldlang.c	FUNCTION_172
0x4008521	              0x53	                                push rbx	      7567	ldlang.c	FUNCTION_172
0x4008522	          0x4989d5	                            mov r13, rdx	      7567	ldlang.c	FUNCTION_172
0x4008525	          0x4989f6	                            mov r14, rsi	      7567	ldlang.c	FUNCTION_172
0x4008528	          0x4989cc	                            mov r12, rcx	      7567	ldlang.c	FUNCTION_172
0x400852b	          0x4c89c5	                             mov rbp, r8	      7567	ldlang.c	FUNCTION_172
0x400852e	        0x4883ec08	                              sub rsp, 8	      7567	ldlang.c	FUNCTION_172
0x4008532	    0x488b1d000000	            mov rbx, qword [0x04008539] 	      7568	ldlang.c	FUNCTION_172
0x4008539	      0xe800000000	                          call 0x400853e	      1039	ldlang.c	FUNCTION_33	CALL_1
0x400853e	    0xc74008090000	                  mov dword [rax + 8], 9	      1040	ldlang.c	FUNCTION_33
0x4008545	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x400854c	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x4008550	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x4008553	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x4008557	        0x44897810	            mov dword [rax + 0x10], r15d	      7570	ldlang.c	FUNCTION_172
0x400855b	        0x4c897018	             mov qword [rax + 0x18], r14	      7571	ldlang.c	FUNCTION_172
0x400855f	        0x4c896820	             mov qword [rax + 0x20], r13	      7572	ldlang.c	FUNCTION_172
0x4008563	        0x4c896028	             mov qword [rax + 0x28], r12	      7573	ldlang.c	FUNCTION_172
0x4008567	        0x48896830	             mov qword [rax + 0x30], rbp	      7574	ldlang.c	FUNCTION_172
0x400856b	    0x48c740380000	               mov qword [rax + 0x38], 0	      7576	ldlang.c	FUNCTION_172
0x4008573	    0x48c740400000	               mov qword [rax + 0x40], 0	      7577	ldlang.c	FUNCTION_172
0x400857b	    0x48c740480000	               mov qword [rax + 0x48], 0	      7578	ldlang.c	FUNCTION_172
0x4008583	        0x4883c408	                              add rsp, 8	      7579	ldlang.c	FUNCTION_172
0x4008587	              0x5b	                                 pop rbx	      7579	ldlang.c	FUNCTION_172
0x4008588	              0x5d	                                 pop rbp	      7579	ldlang.c	FUNCTION_172
0x4008589	            0x415c	                                 pop r12	      7579	ldlang.c	FUNCTION_172
0x400858b	            0x415d	                                 pop r13	      7579	ldlang.c	FUNCTION_172
0x400858d	            0x415e	                                 pop r14	      7579	ldlang.c	FUNCTION_172
0x400858f	            0x415f	                                 pop r15	      7579	ldlang.c	FUNCTION_172
0x4008591	              0xc3	                                     ret	      7579	ldlang.c	FUNCTION_172
lang_for_each_file	CALL,0:functions,1:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	17
0x4006760	              0x55	                                push rbp	      6627	ldlang.c	FUNCTION_142
0x4006761	              0x53	                                push rbx	      6627	ldlang.c	FUNCTION_142
0x4006762	        0x4883ec08	                              sub rsp, 8	      6627	ldlang.c	FUNCTION_142
0x4006766	    0x488b1d000000	            mov rbx, qword [0x0400676d] 	      6628	ldlang.c	FUNCTION_142
0x400676d	          0x4885db	                           test rbx, rbx	      6628	ldlang.c	FUNCTION_142
0x4006770	            0x7414	                            je 0x4006786	      6628	ldlang.c	FUNCTION_142
0x4006772	          0x4889fd	                            mov rbp, rdi	      6628	ldlang.c	FUNCTION_142
0x4006775	           0xf1f00	                         nop dword [rax]	      6628	ldlang.c	FUNCTION_142
0x4006778	          0x4889df	                            mov rdi, rbx	      6630	ldlang.c	FUNCTION_142	FUNCTION_1	CALL_1
0x400677b	            0xffd5	                                call rbp	      6630	ldlang.c	FUNCTION_142	FUNCTION_1	CALL_1
0x400677d	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6628	ldlang.c	FUNCTION_142
0x4006781	          0x4885db	                           test rbx, rbx	      6628	ldlang.c	FUNCTION_142
0x4006784	            0x75f2	                           jne 0x4006778	      6628	ldlang.c	FUNCTION_142
0x4006786	        0x4883c408	                              add rsp, 8	      6632	ldlang.c	FUNCTION_142
0x400678a	              0x5b	                                 pop rbx	      6632	ldlang.c	FUNCTION_142
0x400678b	              0x5d	                                 pop rbp	      6632	ldlang.c	FUNCTION_142
0x400678c	              0xc3	                                     ret	      6632	ldlang.c	FUNCTION_142
lang_add_assignment	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	17
0x40085a0	              0x55	                                push rbp	      7583	ldlang.c	FUNCTION_173
0x40085a1	              0x53	                                push rbx	      7583	ldlang.c	FUNCTION_173
0x40085a2	          0x4889fd	                            mov rbp, rdi	      7583	ldlang.c	FUNCTION_173
0x40085a5	      0xbf18000000	                           mov edi, 0x18	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40085aa	        0x4883ec08	                              sub rsp, 8	      7583	ldlang.c	FUNCTION_173
0x40085ae	    0x488b1d000000	            mov rbx, qword [0x040085b5] 	      7586	ldlang.c	FUNCTION_173
0x40085b5	      0xe800000000	                          call 0x40085ba	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40085ba	    0xc74008010000	                  mov dword [rax + 8], 1	      1040	ldlang.c	FUNCTION_33
0x40085c1	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x40085c8	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x40085cc	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x40085cf	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x40085d3	        0x48896810	             mov qword [rax + 0x10], rbp	      7587	ldlang.c	FUNCTION_173
0x40085d7	        0x4883c408	                              add rsp, 8	      7589	ldlang.c	FUNCTION_173
0x40085db	              0x5b	                                 pop rbx	      7589	ldlang.c	FUNCTION_173
0x40085dc	              0x5d	                                 pop rbp	      7589	ldlang.c	FUNCTION_173
0x40085dd	              0xc3	                                     ret	      7589	ldlang.c	FUNCTION_173
lang_output_section_get	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	2
0x4004a40	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      1417	ldlang.c	FUNCTION_44	CALL_1
0x4004a47	              0xc3	                                     ret	      1418	ldlang.c	FUNCTION_44
output_section_callback_tree_to_list	CALL,4:functions,0:WHILE,0:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,0	26
0x4005c40	            0x4154	                                push r12	       549	ldlang.c	FUNCTION_17
0x4005c42	              0x55	                                push rbp	       549	ldlang.c	FUNCTION_17
0x4005c43	          0x4989d4	                            mov r12, rdx	       549	ldlang.c	FUNCTION_17
0x4005c46	              0x53	                                push rbx	       549	ldlang.c	FUNCTION_17
0x4005c47	          0x4889f3	                            mov rbx, rsi	       549	ldlang.c	FUNCTION_17
0x4005c4a	        0x488b7608	                mov rsi, qword [rsi + 8]	       550	ldlang.c	FUNCTION_17	IF_1
0x4005c4e	          0x4889fd	                            mov rbp, rdi	       549	ldlang.c	FUNCTION_17
0x4005c51	          0x4885f6	                           test rsi, rsi	       550	ldlang.c	FUNCTION_17	IF_1
0x4005c54	            0x7405	                            je 0x4005c5b	       550	ldlang.c	FUNCTION_17	IF_1
0x4005c56	      0xe8e5ffffff	call sym.output_section_callback_tree_to_list	       551	ldlang.c	FUNCTION_17	CALL_1
0x4005c5b	          0x488b33	                    mov rsi, qword [rbx]	       553	ldlang.c	FUNCTION_17	CALL_2
0x4005c5e	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       553	ldlang.c	FUNCTION_17	CALL_2
0x4005c62	            0x31d2	                            xor edx, edx	       553	ldlang.c	FUNCTION_17	CALL_2
0x4005c64	          0x4c89e1	                            mov rcx, r12	       553	ldlang.c	FUNCTION_17	CALL_2
0x4005c67	      0xe800000000	                          call 0x4005c6c	       553	ldlang.c	FUNCTION_17	CALL_2
0x4005c6c	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       556	ldlang.c	FUNCTION_17	IF_2
0x4005c70	          0x4885f6	                           test rsi, rsi	       556	ldlang.c	FUNCTION_17	IF_2
0x4005c73	            0x740b	                            je 0x4005c80	       556	ldlang.c	FUNCTION_17	IF_2
0x4005c75	          0x4c89e2	                            mov rdx, r12	       557	ldlang.c	FUNCTION_17	CALL_3
0x4005c78	          0x4889ef	                            mov rdi, rbp	       557	ldlang.c	FUNCTION_17	CALL_3
0x4005c7b	      0xe8c0ffffff	call sym.output_section_callback_tree_to_list	       557	ldlang.c	FUNCTION_17	CALL_3
0x4005c80	          0x4889df	                            mov rdi, rbx	       559	ldlang.c	FUNCTION_17	CALL_4
0x4005c83	              0x5b	                                 pop rbx	       560	ldlang.c	FUNCTION_17
0x4005c84	              0x5d	                                 pop rbp	       560	ldlang.c	FUNCTION_17
0x4005c85	            0x415c	                                 pop r12	       560	ldlang.c	FUNCTION_17
0x4005c87	      0xe900000000	                           jmp 0x4005c8c	       559	ldlang.c	FUNCTION_17	CALL_4
lang_add_insert	CALL,0:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	21
0x4008be0	            0x4154	                                push r12	      7700	ldlang.c	FUNCTION_181
0x4008be2	              0x55	                                push rbp	      7700	ldlang.c	FUNCTION_181
0x4008be3	          0x4989fc	                            mov r12, rdi	      7700	ldlang.c	FUNCTION_181
0x4008be6	              0x53	                                push rbx	      7700	ldlang.c	FUNCTION_181
0x4008be7	    0x488b1d000000	            mov rbx, qword [0x04008bee] 	      7703	ldlang.c	FUNCTION_181
0x4008bee	      0xbf20000000	                           mov edi, 0x20	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4008bf3	            0x89f5	                            mov ebp, esi	      7700	ldlang.c	FUNCTION_181
0x4008bf5	      0xe800000000	                          call 0x4008bfa	      1039	ldlang.c	FUNCTION_33	CALL_1
0x4008bfa	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x4008c01	    0xc740080e0000	                mov dword [rax + 8], 0xe	      1040	ldlang.c	FUNCTION_33
0x4008c08	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x4008c0c	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x4008c0f	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x4008c13	        0x4c896010	             mov qword [rax + 0x10], r12	      7704	ldlang.c	FUNCTION_181
0x4008c17	          0x896818	             mov dword [rax + 0x18], ebp	      7705	ldlang.c	FUNCTION_181
0x4008c1a	    0x488b05000000	            mov rax, qword [0x04008c21] 	      7706	ldlang.c	FUNCTION_181
0x4008c21	              0x5b	                                 pop rbx	      7707	ldlang.c	FUNCTION_181
0x4008c22	              0x5d	                                 pop rbp	      7707	ldlang.c	FUNCTION_181
0x4008c23	    0x488905000000	            mov qword [0x04008c2a], rax 	      7706	ldlang.c	FUNCTION_181
0x4008c2a	            0x415c	                                 pop r12	      7707	ldlang.c	FUNCTION_181
0x4008c2c	              0xc3	                                     ret	      7707	ldlang.c	FUNCTION_181
