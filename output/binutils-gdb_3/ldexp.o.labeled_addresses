exp_relop	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,2	21
0x4001d00	            0x4154	                                push r12	       228	ldexp.c	FUNCTION_7
0x4001d02	              0x55	                                push rbp	       228	ldexp.c	FUNCTION_7
0x4001d03	          0x4989fc	                            mov r12, rdi	       228	ldexp.c	FUNCTION_7
0x4001d06	              0x53	                                push rbx	       228	ldexp.c	FUNCTION_7
0x4001d07	      0xbf28000000	                           mov edi, 0x28	       229	ldexp.c	FUNCTION_7	CALL_1
0x4001d0c	          0x4889f5	                            mov rbp, rsi	       228	ldexp.c	FUNCTION_7
0x4001d0f	      0xe800000000	                          call 0x4001d14	       229	ldexp.c	FUNCTION_7	CALL_1
0x4001d14	          0x4889c3	                            mov rbx, rax	       229	ldexp.c	FUNCTION_7	CALL_1
0x4001d17	    0xc7006e010000	                  mov dword [rax], 0x16e	       230	ldexp.c	FUNCTION_7
0x4001d1d	      0xe800000000	                          call 0x4001d22	       231	ldexp.c	FUNCTION_7	CALL_2
0x4001d22	        0x48894308	                mov qword [rbx + 8], rax	       231	ldexp.c	FUNCTION_7	CALL_2
0x4001d26	    0x8b0500000000	            mov eax, dword [0x04001d2c] 	       232	ldexp.c	FUNCTION_7
0x4001d2c	    0xc74310090000	               mov dword [rbx + 0x10], 9	       233	ldexp.c	FUNCTION_7
0x4001d33	        0x4c896318	             mov qword [rbx + 0x18], r12	       234	ldexp.c	FUNCTION_7
0x4001d37	        0x48896b20	             mov qword [rbx + 0x20], rbp	       235	ldexp.c	FUNCTION_7
0x4001d3b	          0x894304	                mov dword [rbx + 4], eax	       232	ldexp.c	FUNCTION_7
0x4001d3e	          0x4889d8	                            mov rax, rbx	       237	ldexp.c	FUNCTION_7
0x4001d41	              0x5b	                                 pop rbx	       237	ldexp.c	FUNCTION_7
0x4001d42	              0x5d	                                 pop rbp	       237	ldexp.c	FUNCTION_7
0x4001d43	            0x415c	                                 pop r12	       237	ldexp.c	FUNCTION_7
0x4001d45	              0xc3	                                     ret	       237	ldexp.c	FUNCTION_7
exp_get_value_int	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	5
0x4002490	        0x4883ec08	                              sub rsp, 8	      1527	ldexp.c	FUNCTION_43
0x4002494	          0x4863f6	                         movsxd rsi, esi	      1528	ldexp.c	FUNCTION_43	CALL_1
0x4002497	      0xe800000000	                          call 0x400249c	      1528	ldexp.c	FUNCTION_43	CALL_1
0x400249c	        0x4883c408	                              add rsp, 8	      1529	ldexp.c	FUNCTION_43
0x40024a0	              0xc3	                                     ret	      1529	ldexp.c	FUNCTION_43
exp_nameop	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,2	20
0x4001f30	            0x4154	                                push r12	      1328	ldexp.c	FUNCTION_35
0x4001f32	              0x55	                                push rbp	      1328	ldexp.c	FUNCTION_35
0x4001f33	          0x4189fc	                           mov r12d, edi	      1328	ldexp.c	FUNCTION_35
0x4001f36	              0x53	                                push rbx	      1328	ldexp.c	FUNCTION_35
0x4001f37	      0xbf20000000	                           mov edi, 0x20	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4001f3c	          0x4889f5	                            mov rbp, rsi	      1328	ldexp.c	FUNCTION_35
0x4001f3f	      0xe800000000	                          call 0x4001f44	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4001f44	          0x4889c3	                            mov rbx, rax	      1329	ldexp.c	FUNCTION_35	CALL_1
0x4001f47	          0x448920	                   mov dword [rax], r12d	      1331	ldexp.c	FUNCTION_35
0x4001f4a	      0xe800000000	                          call 0x4001f4f	      1332	ldexp.c	FUNCTION_35	CALL_2
0x4001f4f	        0x48894308	                mov qword [rbx + 8], rax	      1332	ldexp.c	FUNCTION_35	CALL_2
0x4001f53	    0x8b0500000000	            mov eax, dword [0x04001f59] 	      1333	ldexp.c	FUNCTION_35
0x4001f59	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1334	ldexp.c	FUNCTION_35
0x4001f5d	    0xc74310030000	               mov dword [rbx + 0x10], 3	      1335	ldexp.c	FUNCTION_35
0x4001f64	          0x894304	                mov dword [rbx + 4], eax	      1333	ldexp.c	FUNCTION_35
0x4001f67	          0x4889d8	                            mov rax, rbx	      1338	ldexp.c	FUNCTION_35
0x4001f6a	              0x5b	                                 pop rbx	      1338	ldexp.c	FUNCTION_35
0x4001f6b	              0x5d	                                 pop rbp	      1338	ldexp.c	FUNCTION_35
0x4001f6c	            0x415c	                                 pop r12	      1338	ldexp.c	FUNCTION_35
0x4001f6e	              0xc3	                                     ret	      1338	ldexp.c	FUNCTION_35
ldexp_finish	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	2
0x4002730	      0xbf00000000	                              mov edi, 0	      1667	ldexp.c	FUNCTION_50	CALL_1
0x4002735	      0xe900000000	                   jmp section_end..data	      1667	ldexp.c	FUNCTION_50	CALL_1
exp_unop	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,2	34
0x4001eb0	              0x55	                                push rbp	      1309	ldexp.c	FUNCTION_34
0x4001eb1	              0x53	                                push rbx	      1309	ldexp.c	FUNCTION_34
0x4001eb2	            0x89fd	                            mov ebp, edi	      1309	ldexp.c	FUNCTION_34
0x4001eb4	          0x4889f3	                            mov rbx, rsi	      1309	ldexp.c	FUNCTION_34
0x4001eb7	      0xbf28000000	                           mov edi, 0x28	      1310	ldexp.c	FUNCTION_34	CALL_1
0x4001ebc	        0x4883ec18	                           sub rsp, 0x18	      1309	ldexp.c	FUNCTION_34
0x4001ec0	      0xe800000000	                          call 0x4001ec5	      1310	ldexp.c	FUNCTION_34	CALL_1
0x4001ec5	            0x8928	                    mov dword [rax], ebp	      1312	ldexp.c	FUNCTION_34
0x4001ec7	        0x488b5308	                mov rdx, qword [rbx + 8]	      1313	ldexp.c	FUNCTION_34
0x4001ecb	        0x48895008	                mov qword [rax + 8], rdx	      1313	ldexp.c	FUNCTION_34
0x4001ecf	          0x8b5304	                mov edx, dword [rbx + 4]	      1314	ldexp.c	FUNCTION_34
0x4001ed2	        0x48895818	             mov qword [rax + 0x18], rbx	      1315	ldexp.c	FUNCTION_34
0x4001ed6	    0xc74010020000	               mov dword [rax + 0x10], 2	      1316	ldexp.c	FUNCTION_34
0x4001edd	          0x895004	                mov dword [rax + 4], edx	      1314	ldexp.c	FUNCTION_34
0x4001ee0	        0x837b1007	               cmp dword [rbx + 0x10], 7	      1317	ldexp.c	FUNCTION_34	IF_1
0x4001ee4	            0x740a	                            je 0x4001ef0	      1317	ldexp.c	FUNCTION_34	IF_1
0x4001ee6	        0x4883c418	                           add rsp, 0x18	      1324	ldexp.c	FUNCTION_34
0x4001eea	              0x5b	                                 pop rbx	      1324	ldexp.c	FUNCTION_34
0x4001eeb	              0x5d	                                 pop rbp	      1324	ldexp.c	FUNCTION_34
0x4001eec	              0xc3	                                     ret	      1324	ldexp.c	FUNCTION_34
0x4001eed	           0xf1f00	                         nop dword [rax]	      1324	ldexp.c	FUNCTION_34
0x4001ef0	    0x81fd17010000	                          cmp ebp, 0x117	      1319	ldexp.c	FUNCTION_34	IF_1
0x4001ef6	            0x74ee	                            je 0x4001ee6	      1319	ldexp.c	FUNCTION_34	IF_1
0x4001ef8	            0x89ea	                            mov edx, ebp	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001efa	          0x83e2df	                     and edx, 0xffffffdf	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001efd	    0x81fa40010000	                          cmp edx, 0x140	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f03	            0x74e1	                            je 0x4001ee6	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f05	    0x81fd26010000	                          cmp ebp, 0x126	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f0b	            0x74d9	                            je 0x4001ee6	      1321	ldexp.c	FUNCTION_34	IF_1
0x4001f0d	          0x4889c7	                            mov rdi, rax	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4001f10	      0x4889442408	                mov qword [rsp + 8], rax	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4001f15	      0xe8e6fcffff	                 call sym.exp_value_fold	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4001f1a	      0x488b442408	                mov rax, qword [rsp + 8]	      1322	ldexp.c	FUNCTION_34	CALL_2
0x4001f1f	            0xebc5	                           jmp 0x4001ee6	      1322	ldexp.c	FUNCTION_34	CALL_2
exp_intop	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,2	20
0x4001c60	              0x55	                                push rbp	       200	ldexp.c	FUNCTION_5
0x4001c61	              0x53	                                push rbx	       200	ldexp.c	FUNCTION_5
0x4001c62	          0x4889fd	                            mov rbp, rdi	       200	ldexp.c	FUNCTION_5
0x4001c65	      0xbf28000000	                           mov edi, 0x28	       201	ldexp.c	FUNCTION_5	CALL_1
0x4001c6a	        0x4883ec08	                              sub rsp, 8	       200	ldexp.c	FUNCTION_5
0x4001c6e	      0xe800000000	                          call 0x4001c73	       201	ldexp.c	FUNCTION_5	CALL_1
0x4001c73	          0x4889c3	                            mov rbx, rax	       201	ldexp.c	FUNCTION_5	CALL_1
0x4001c76	    0xc70002010000	                  mov dword [rax], 0x102	       202	ldexp.c	FUNCTION_5
0x4001c7c	      0xe800000000	                          call 0x4001c81	       203	ldexp.c	FUNCTION_5	CALL_2
0x4001c81	        0x48894308	                mov qword [rbx + 8], rax	       203	ldexp.c	FUNCTION_5	CALL_2
0x4001c85	    0x8b0500000000	            mov eax, dword [0x04001c8b] 	       204	ldexp.c	FUNCTION_5
0x4001c8b	        0x48896b18	             mov qword [rbx + 0x18], rbp	       205	ldexp.c	FUNCTION_5
0x4001c8f	    0x48c743200000	               mov qword [rbx + 0x20], 0	       206	ldexp.c	FUNCTION_5
0x4001c97	    0xc74310070000	               mov dword [rbx + 0x10], 7	       207	ldexp.c	FUNCTION_5
0x4001c9e	          0x894304	                mov dword [rbx + 4], eax	       204	ldexp.c	FUNCTION_5
0x4001ca1	        0x4883c408	                              add rsp, 8	       209	ldexp.c	FUNCTION_5
0x4001ca5	          0x4889d8	                            mov rax, rbx	       209	ldexp.c	FUNCTION_5
0x4001ca8	              0x5b	                                 pop rbx	       209	ldexp.c	FUNCTION_5
0x4001ca9	              0x5d	                                 pop rbp	       209	ldexp.c	FUNCTION_5
0x4001caa	              0xc3	                                     ret	       209	ldexp.c	FUNCTION_5
ldexp_finalize_syms	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	4
0x4002710	            0x31d2	                            xor edx, edx	      1661	ldexp.c	FUNCTION_49	CALL_1
0x4002712	      0xbe00000000	                              mov esi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x4002717	      0xbf00000000	                              mov edi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x400271c	      0xe900000000	                           jmp 0x4002721	      1661	ldexp.c	FUNCTION_49	CALL_1
definedness_newfunc	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,2:CALL,3	30
0x40000b0	          0x4885ff	                           test rdi, rdi	       278	ldexp.c	FUNCTION_11	IF_1
0x40000b3	          0x4889f8	                            mov rax, rdi	       275	ldexp.c	FUNCTION_11
0x40000b6	            0x7410	                            je 0x40000c8	       278	ldexp.c	FUNCTION_11	IF_1
0x40000b8	        0x806721fe	             and byte [rdi + 0x21], 0xfe	       285	ldexp.c	FUNCTION_11
0x40000bc	        0xc6472000	                mov byte [rdi + 0x20], 0	       286	ldexp.c	FUNCTION_11
0x40000c0	              0xc3	                                     ret	       288	ldexp.c	FUNCTION_11
0x40000c1	     0xf1f80000000	                         nop dword [rax]	       288	ldexp.c	FUNCTION_11
0x40000c8	              0x53	                                push rbx	       275	ldexp.c	FUNCTION_11
0x40000c9	          0x4889f7	                            mov rdi, rsi	       275	ldexp.c	FUNCTION_11
0x40000cc	      0xbe28000000	                           mov esi, 0x28	       279	ldexp.c	FUNCTION_11	IF_1
0x40000d1	          0x4889d3	                            mov rbx, rdx	       279	ldexp.c	FUNCTION_11	IF_1
0x40000d4	      0xe800000000	                          call 0x40000d9	       279	ldexp.c	FUNCTION_11	IF_1
0x40000d9	          0x4885c0	                           test rax, rax	       282	ldexp.c	FUNCTION_11	IF_2
0x40000dc	            0x7533	                           jne 0x4000111	       282	ldexp.c	FUNCTION_11	IF_2
0x40000de	      0xba05000000	                              mov edx, 5	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000e3	            0x31ff	                            xor edi, edi	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000e5	      0xbe00000000	                              mov esi, 0	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000ea	      0xe800000000	                          call 0x40000ef	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000ef	          0x4889de	                            mov rsi, rbx	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000f2	          0x4889c7	                            mov rdi, rax	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000f5	            0x31c0	                            xor eax, eax	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000f7	      0xe800000000	                          call 0x40000fc	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000fc	     0xfb704252000	                  movzx eax, word [0x20]	       285	ldexp.c	FUNCTION_11
0x4000104	          0x80e4fe	                            and ah, 0xfe	       285	ldexp.c	FUNCTION_11
0x4000107	    0x668904252000	                     mov word [0x20], ax	       285	ldexp.c	FUNCTION_11
0x400010f	             0xf0b	                                     ud2	       285	ldexp.c	FUNCTION_11
0x4000111	        0x806021fe	             and byte [rax + 0x21], 0xfe	       285	ldexp.c	FUNCTION_11
0x4000115	        0xc6402000	                mov byte [rax + 0x20], 0	       286	ldexp.c	FUNCTION_11
0x4000119	              0x5b	                                 pop rbx	       288	ldexp.c	FUNCTION_11
0x400011a	              0xc3	                                     ret	       288	ldexp.c	FUNCTION_11
exp_get_abs_int	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,1:IF,4:CALL,3	48
0x4002600	          0x4885ff	                           test rdi, rdi	      1593	ldexp.c	FUNCTION_45	IF_1
0x4002603	            0x4154	                                push r12	      1592	ldexp.c	FUNCTION_45
0x4002605	              0x55	                                push rbp	      1592	ldexp.c	FUNCTION_45
0x4002606	              0x53	                                push rbx	      1592	ldexp.c	FUNCTION_45
0x4002607	            0x89f3	                            mov ebx, esi	      1592	ldexp.c	FUNCTION_45
0x4002609	     0xf8498000000	                            je 0x40026a7	      1593	ldexp.c	FUNCTION_45	IF_1
0x400260f	          0x4889fd	                            mov rbp, rdi	      1593	ldexp.c	FUNCTION_45	IF_1
0x4002612	          0x4989d4	                            mov r12, rdx	      1593	ldexp.c	FUNCTION_45	IF_1
0x4002615	    0xc70500000000	               mov dword [0x0400261f], 0	      1246	ldexp.c	FUNCTION_30
0x400261f	    0x48c705000000	               mov qword [0x0400262a], 0	      1247	ldexp.c	FUNCTION_30
0x400262a	    0x48c705000000	               mov qword [0x04002635], 0	      1248	ldexp.c	FUNCTION_30
0x4002635	    0x48c705000000	               mov qword [0x04002640], 0	      1249	ldexp.c	FUNCTION_30
0x4002640	      0xe8ebdbffff	                call sym.exp_fold_tree_1	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4002645	    0x8b0500000000	            mov eax, dword [0x0400264b] 	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x400264b	            0x85c0	                           test eax, eax	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x400264d	            0x7429	                            je 0x4002678	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x400264f	    0x488b05000000	            mov rax, qword [0x04002656] 	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4002656	          0x4885c0	                           test rax, rax	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4002659	            0x7455	                            je 0x40026b0	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x400265b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x400265f	    0x480305000000	             add rax, qword [0x04002666]	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4002666	              0x5b	                                 pop rbx	      1610	ldexp.c	FUNCTION_45
0x4002667	              0x5d	                                 pop rbp	      1610	ldexp.c	FUNCTION_45
0x4002668	            0x415c	                                 pop r12	      1610	ldexp.c	FUNCTION_45
0x400266a	    0x488905000000	            mov qword [0x04002671], rax 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4002671	              0xc3	                                     ret	      1610	ldexp.c	FUNCTION_45
0x4002672	    0x660f1f440000	                    nop word [rax + rax]	      1610	ldexp.c	FUNCTION_45
0x4002678	          0x4d85e4	                           test r12, r12	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x400267b	            0x742a	                            je 0x40026a7	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x400267d	    0x833d00000000	               cmp dword [0x04002684], 1	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4002684	            0x7421	                            je 0x40026a7	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4002686	      0xba05000000	                              mov edx, 5	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400268b	      0xbe00000000	                              mov esi, 0	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4002690	            0x31ff	                            xor edi, edi	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4002692	      0xe800000000	                          call 0x4002697	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4002697	          0x4c89e2	                            mov rdx, r12	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400269a	          0x4889c7	                            mov rdi, rax	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x400269d	          0x4889ee	                            mov rsi, rbp	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x40026a0	            0x31c0	                            xor eax, eax	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x40026a2	      0xe800000000	                          call 0x40026a7	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x40026a7	          0x4863c3	                         movsxd rax, ebx	      1609	ldexp.c	FUNCTION_45
0x40026aa	              0x5b	                                 pop rbx	      1610	ldexp.c	FUNCTION_45
0x40026ab	              0x5d	                                 pop rbp	      1610	ldexp.c	FUNCTION_45
0x40026ac	            0x415c	                                 pop r12	      1610	ldexp.c	FUNCTION_45
0x40026ae	              0xc3	                                     ret	      1610	ldexp.c	FUNCTION_45
0x40026af	              0x90	                                     nop	      1610	ldexp.c	FUNCTION_45
0x40026b0	    0x488b05000000	            mov rax, qword [0x040026b7] 	      1610	ldexp.c	FUNCTION_45
0x40026b7	            0xebf1	                           jmp 0x40026aa	      1610	ldexp.c	FUNCTION_45
exp_binop	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,2	37
0x4001db0	            0x4154	                                push r12	      1270	ldexp.c	FUNCTION_32
0x4001db2	              0x55	                                push rbp	      1270	ldexp.c	FUNCTION_32
0x4001db3	          0x4189fc	                           mov r12d, edi	      1270	ldexp.c	FUNCTION_32
0x4001db6	              0x53	                                push rbx	      1270	ldexp.c	FUNCTION_32
0x4001db7	      0xbf28000000	                           mov edi, 0x28	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4001dbc	          0x4889f3	                            mov rbx, rsi	      1270	ldexp.c	FUNCTION_32
0x4001dbf	          0x4889d5	                            mov rbp, rdx	      1270	ldexp.c	FUNCTION_32
0x4001dc2	        0x4883ec10	                           sub rsp, 0x10	      1270	ldexp.c	FUNCTION_32
0x4001dc6	      0xe800000000	                          call 0x4001dcb	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4001dcb	          0x448920	                   mov dword [rax], r12d	      1273	ldexp.c	FUNCTION_32
0x4001dce	        0x488b5308	                mov rdx, qword [rbx + 8]	      1274	ldexp.c	FUNCTION_32
0x4001dd2	        0x48895008	                mov qword [rax + 8], rdx	      1274	ldexp.c	FUNCTION_32
0x4001dd6	          0x8b5304	                mov edx, dword [rbx + 4]	      1275	ldexp.c	FUNCTION_32
0x4001dd9	        0x48895818	             mov qword [rax + 0x18], rbx	      1276	ldexp.c	FUNCTION_32
0x4001ddd	        0x48896820	             mov qword [rax + 0x20], rbp	      1277	ldexp.c	FUNCTION_32
0x4001de1	    0xc74010000000	               mov dword [rax + 0x10], 0	      1278	ldexp.c	FUNCTION_32
0x4001de8	          0x895004	                mov dword [rax + 4], edx	      1275	ldexp.c	FUNCTION_32
0x4001deb	        0x837b1007	               cmp dword [rbx + 0x10], 7	      1279	ldexp.c	FUNCTION_32	IF_1
0x4001def	            0x740f	                            je 0x4001e00	      1279	ldexp.c	FUNCTION_32	IF_1
0x4001df1	        0x4883c410	                           add rsp, 0x10	      1286	ldexp.c	FUNCTION_32
0x4001df5	              0x5b	                                 pop rbx	      1286	ldexp.c	FUNCTION_32
0x4001df6	              0x5d	                                 pop rbp	      1286	ldexp.c	FUNCTION_32
0x4001df7	            0x415c	                                 pop r12	      1286	ldexp.c	FUNCTION_32
0x4001df9	              0xc3	                                     ret	      1286	ldexp.c	FUNCTION_32
0x4001dfa	    0x660f1f440000	                    nop word [rax + rax]	      1286	ldexp.c	FUNCTION_32
0x4001e00	        0x837d1007	               cmp dword [rbp + 0x10], 7	      1280	ldexp.c	FUNCTION_32	IF_1
0x4001e04	            0x75eb	                           jne 0x4001df1	      1280	ldexp.c	FUNCTION_32	IF_1
0x4001e06	    0x418d9424dcfe	                  lea edx, [r12 - 0x124]	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e0e	          0x83fa01	                              cmp edx, 1	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e11	            0x76de	                           jbe 0x4001df1	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e13	    0x4181fc170100	                         cmp r12d, 0x117	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e1a	            0x74d5	                            je 0x4001df1	      1283	ldexp.c	FUNCTION_32	IF_1
0x4001e1c	          0x4889c7	                            mov rdi, rax	      1284	ldexp.c	FUNCTION_32	CALL_2
0x4001e1f	      0x4889442408	                mov qword [rsp + 8], rax	      1284	ldexp.c	FUNCTION_32	CALL_2
0x4001e24	      0xe8d7fdffff	                 call sym.exp_value_fold	      1284	ldexp.c	FUNCTION_32	CALL_2
0x4001e29	      0x488b442408	                mov rax, qword [rsp + 8]	      1284	ldexp.c	FUNCTION_32	CALL_2
0x4001e2e	            0xebc1	                           jmp 0x4001df1	      1284	ldexp.c	FUNCTION_32	CALL_2
exp_trinop	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,2	38
0x4001e30	            0x4155	                                push r13	      1290	ldexp.c	FUNCTION_33
0x4001e32	            0x4154	                                push r12	      1290	ldexp.c	FUNCTION_33
0x4001e34	          0x4189fd	                           mov r13d, edi	      1290	ldexp.c	FUNCTION_33
0x4001e37	              0x55	                                push rbp	      1290	ldexp.c	FUNCTION_33
0x4001e38	              0x53	                                push rbx	      1290	ldexp.c	FUNCTION_33
0x4001e39	      0xbf30000000	                           mov edi, 0x30	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4001e3e	          0x4889f3	                            mov rbx, rsi	      1290	ldexp.c	FUNCTION_33
0x4001e41	          0x4889d5	                            mov rbp, rdx	      1290	ldexp.c	FUNCTION_33
0x4001e44	          0x4989cc	                            mov r12, rcx	      1290	ldexp.c	FUNCTION_33
0x4001e47	        0x4883ec18	                           sub rsp, 0x18	      1290	ldexp.c	FUNCTION_33
0x4001e4b	      0xe800000000	                          call 0x4001e50	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4001e50	          0x448928	                   mov dword [rax], r13d	      1293	ldexp.c	FUNCTION_33
0x4001e53	        0x488b5308	                mov rdx, qword [rbx + 8]	      1294	ldexp.c	FUNCTION_33
0x4001e57	        0x48895008	                mov qword [rax + 8], rdx	      1294	ldexp.c	FUNCTION_33
0x4001e5b	          0x8b5304	                mov edx, dword [rbx + 4]	      1295	ldexp.c	FUNCTION_33
0x4001e5e	        0x48896820	             mov qword [rax + 0x20], rbp	      1296	ldexp.c	FUNCTION_33
0x4001e62	        0x48895818	             mov qword [rax + 0x18], rbx	      1297	ldexp.c	FUNCTION_33
0x4001e66	        0x4c896028	             mov qword [rax + 0x28], r12	      1298	ldexp.c	FUNCTION_33
0x4001e6a	    0xc74010010000	               mov dword [rax + 0x10], 1	      1299	ldexp.c	FUNCTION_33
0x4001e71	          0x895004	                mov dword [rax + 4], edx	      1295	ldexp.c	FUNCTION_33
0x4001e74	        0x837b1007	               cmp dword [rbx + 0x10], 7	      1300	ldexp.c	FUNCTION_33	IF_1
0x4001e78	            0x740e	                            je 0x4001e88	      1300	ldexp.c	FUNCTION_33	IF_1
0x4001e7a	        0x4883c418	                           add rsp, 0x18	      1305	ldexp.c	FUNCTION_33
0x4001e7e	              0x5b	                                 pop rbx	      1305	ldexp.c	FUNCTION_33
0x4001e7f	              0x5d	                                 pop rbp	      1305	ldexp.c	FUNCTION_33
0x4001e80	            0x415c	                                 pop r12	      1305	ldexp.c	FUNCTION_33
0x4001e82	            0x415d	                                 pop r13	      1305	ldexp.c	FUNCTION_33
0x4001e84	              0xc3	                                     ret	      1305	ldexp.c	FUNCTION_33
0x4001e85	           0xf1f00	                         nop dword [rax]	      1305	ldexp.c	FUNCTION_33
0x4001e88	        0x837d1007	               cmp dword [rbp + 0x10], 7	      1301	ldexp.c	FUNCTION_33	IF_1
0x4001e8c	            0x75ec	                           jne 0x4001e7a	      1301	ldexp.c	FUNCTION_33	IF_1
0x4001e8e	    0x41837c241007	               cmp dword [r12 + 0x10], 7	      1302	ldexp.c	FUNCTION_33	IF_1
0x4001e94	            0x75e4	                           jne 0x4001e7a	      1302	ldexp.c	FUNCTION_33	IF_1
0x4001e96	          0x4889c7	                            mov rdi, rax	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4001e99	      0x4889442408	                mov qword [rsp + 8], rax	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4001e9e	      0xe85dfdffff	                 call sym.exp_value_fold	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4001ea3	      0x488b442408	                mov rax, qword [rsp + 8]	      1303	ldexp.c	FUNCTION_33	CALL_2
0x4001ea8	            0xebd0	                           jmp 0x4001e7a	      1303	ldexp.c	FUNCTION_33	CALL_2
exp_defsym	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	20
0x4001fc0	              0x55	                                push rbp	      1371	ldexp.c	FUNCTION_38
0x4001fc1	              0x53	                                push rbx	      1371	ldexp.c	FUNCTION_38
0x4001fc2	          0x4889fd	                            mov rbp, rdi	      1371	ldexp.c	FUNCTION_38
0x4001fc5	          0x4889f3	                            mov rbx, rsi	      1371	ldexp.c	FUNCTION_38
0x4001fc8	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001fcd	        0x4883ec08	                              sub rsp, 8	      1371	ldexp.c	FUNCTION_38
0x4001fd1	      0xe800000000	                          call 0x4001fd6	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001fd6	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x4001fdc	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x4001fe0	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x4001fe4	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x4001fe7	    0xc74010040000	               mov dword [rax + 0x10], 4	      1352	ldexp.c	FUNCTION_36
0x4001fee	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4001ff2	        0x48896818	             mov qword [rax + 0x18], rbp	      1354	ldexp.c	FUNCTION_36
0x4001ff6	    0xc74028000000	               mov dword [rax + 0x28], 0	      1355	ldexp.c	FUNCTION_36
0x4001ffd	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x4002000	        0x4883c408	                              add rsp, 8	      1373	ldexp.c	FUNCTION_38
0x4002004	              0x5b	                                 pop rbx	      1373	ldexp.c	FUNCTION_38
0x4002005	              0x5d	                                 pop rbp	      1373	ldexp.c	FUNCTION_38
0x4002006	              0xc3	                                     ret	      1373	ldexp.c	FUNCTION_38
exp_bigintop	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,2	21
0x4001cb0	            0x4154	                                push r12	       213	ldexp.c	FUNCTION_6
0x4001cb2	              0x55	                                push rbp	       213	ldexp.c	FUNCTION_6
0x4001cb3	          0x4989fc	                            mov r12, rdi	       213	ldexp.c	FUNCTION_6
0x4001cb6	              0x53	                                push rbx	       213	ldexp.c	FUNCTION_6
0x4001cb7	      0xbf28000000	                           mov edi, 0x28	       214	ldexp.c	FUNCTION_6	CALL_1
0x4001cbc	          0x4889f5	                            mov rbp, rsi	       213	ldexp.c	FUNCTION_6
0x4001cbf	      0xe800000000	                          call 0x4001cc4	       214	ldexp.c	FUNCTION_6	CALL_1
0x4001cc4	          0x4889c3	                            mov rbx, rax	       214	ldexp.c	FUNCTION_6	CALL_1
0x4001cc7	    0xc70002010000	                  mov dword [rax], 0x102	       215	ldexp.c	FUNCTION_6
0x4001ccd	      0xe800000000	                          call 0x4001cd2	       216	ldexp.c	FUNCTION_6	CALL_2
0x4001cd2	        0x48894308	                mov qword [rbx + 8], rax	       216	ldexp.c	FUNCTION_6	CALL_2
0x4001cd6	    0x8b0500000000	            mov eax, dword [0x04001cdc] 	       217	ldexp.c	FUNCTION_6
0x4001cdc	        0x4c896318	             mov qword [rbx + 0x18], r12	       218	ldexp.c	FUNCTION_6
0x4001ce0	        0x48896b20	             mov qword [rbx + 0x20], rbp	       219	ldexp.c	FUNCTION_6
0x4001ce4	    0xc74310070000	               mov dword [rbx + 0x10], 7	       220	ldexp.c	FUNCTION_6
0x4001ceb	          0x894304	                mov dword [rbx + 4], eax	       217	ldexp.c	FUNCTION_6
0x4001cee	          0x4889d8	                            mov rax, rbx	       222	ldexp.c	FUNCTION_6
0x4001cf1	              0x5b	                                 pop rbx	       222	ldexp.c	FUNCTION_6
0x4001cf2	              0x5d	                                 pop rbp	       222	ldexp.c	FUNCTION_6
0x4001cf3	            0x415c	                                 pop r12	       222	ldexp.c	FUNCTION_6
0x4001cf5	              0xc3	                                     ret	       222	ldexp.c	FUNCTION_6
exp_print_tree	DO,0:FOR,0:WHILE,0:SWITCH,2:functions,0:ELSE,2:IF,8:CALL,34	181
0x40020a0	              0x53	                                push rbx	      1402	ldexp.c	FUNCTION_41
0x40020a1	          0x4889fb	                            mov rbx, rdi	      1402	ldexp.c	FUNCTION_41
0x40020a4	    0x48833d000000	               cmp qword [0x040020ac], 0	      1405	ldexp.c	FUNCTION_41	IF_1
0x40020ac	     0xf846e010000	                            je 0x4002220	      1405	ldexp.c	FUNCTION_41	IF_1
0x40020b2	          0x4885db	                           test rbx, rbx	      1408	ldexp.c	FUNCTION_41	IF_2
0x40020b5	     0xf840d030000	                            je 0x40023c8	      1408	ldexp.c	FUNCTION_41	IF_2
0x40020bb	        0x837b1009	               cmp dword [rbx + 0x10], 9	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020bf	     0xf87bb020000	                            ja 0x4002380	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020c5	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020c8	    0xff24c5000000	                       jmp qword [rax*8]	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020cf	              0x90	                                     nop	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x40020d0	    0x488b0d000000	            mov rcx, qword [0x040020d7] 	        97	stdio2.h	CALL_11
0x40020d7	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_11
0x40020dc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x40020e1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x40020e6	      0xe800000000	                          call 0x40020eb	        97	stdio2.h	CALL_11
0x40020eb	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_31
0x40020ef	      0xe800000000	                          call 0x40020f4	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_31
0x40020f4	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        97	stdio2.h	CALL_11
0x40020f8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x40020fd	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40020fe	    0x488b3d000000	            mov rdi, qword [0x04002105] 	        97	stdio2.h	CALL_11
0x4002105	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x400210a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_11
0x400210c	      0xe900000000	                           jmp 0x4002111	        97	stdio2.h	CALL_11
0x4002111	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_11
0x4002118	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x400211c	    0x488bb0f00000	            mov rsi, qword [rax + 0xf0] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002123	          0x4885f6	                           test rsi, rsi	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002126	            0x7410	                            je 0x4002138	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x4002128	            0x31c0	                            xor eax, eax	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x400212a	      0xbf00000000	                              mov edi, 0	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x400212f	      0xe800000000	                          call 0x4002134	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002134	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x4002138	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x400213c	          0x488b30	                    mov rsi, qword [rax]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x400213f	      0xbf00000000	                              mov edi, 0	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002144	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x4002145	            0x31c0	                            xor eax, eax	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002147	      0xe900000000	                           jmp 0x400214c	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x400214c	         0xf1f4000	                         nop dword [rax]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x4002150	            0x8b3b	                    mov edi, dword [rbx]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002152	    0x8d8fe9feffff	                  lea ecx, [rdi - 0x117]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002158	          0x83f92f	                           cmp ecx, 0x2f	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x400215b	     0xf872f020000	                            ja 0x4002390	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002161	      0xb801000000	                              mov eax, 1	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002166	    0x48ba01600000	              movabs rdx, 0xc00000006001	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002170	          0x48d3e0	                             shl rax, cl	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002173	          0x4885d0	                           test rax, rdx	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002176	     0xf85a4010000	                           jne 0x4002320	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x400217c	      0xa900000004	                     test eax, obj.expld	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002181	     0xf8409020000	                            je 0x4002390	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4002187	            0x31f6	                            xor esi, esi	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_10
0x4002189	      0xe8d2dfffff	                call sym.exp_print_token	      1449	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_10
0x400218e	    0x488b0d000000	            mov rcx, qword [0x04002195] 	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4002195	      0xba03000000	                              mov edx, 3	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x400219a	      0xbe01000000	                              mov esi, 1	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x400219f	      0xbf00000000	                              mov edi, 0	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x40021a4	      0xe800000000	                          call 0x40021a9	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x40021a9	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x40021ad	      0xe800000000	                          call 0x40021b2	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x40021b2	    0x488b0d000000	            mov rcx, qword [0x040021b9] 	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40021b9	      0xba03000000	                              mov edx, 3	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40021be	      0xbe01000000	                              mov esi, 1	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40021c3	      0xbf00000000	                              mov edi, 0	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40021c8	      0xe995000000	                           jmp 0x4002262	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40021cd	           0xf1f00	                         nop dword [rax]	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40021d0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x40021d4	      0xe800000000	                          call 0x40021d9	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x40021d9	    0x488b35000000	            mov rsi, qword [0x040021e0] 	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40021e0	      0xbf3f000000	                           mov edi, 0x3f	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40021e5	      0xe800000000	                          call 0x40021ea	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40021ea	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x40021ee	      0xe800000000	                          call 0x40021f3	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x40021f3	    0x488b35000000	            mov rsi, qword [0x040021fa] 	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40021fa	      0xbf3a000000	                           mov edi, 0x3a	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40021ff	      0xe800000000	                          call 0x4002204	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x4002204	    0x48833d000000	               cmp qword [0x0400220c], 0	      1405	ldexp.c	FUNCTION_41	IF_1
0x400220c	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x4002210	     0xf859cfeffff	                           jne 0x40020b2	      1405	ldexp.c	FUNCTION_41	IF_1
0x4002216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1405	ldexp.c	FUNCTION_41	IF_1
0x4002220	    0x488b05000000	            mov rax, qword [0x04002227] 	      1406	ldexp.c	FUNCTION_41	IF_1
0x4002227	    0x488905000000	            mov qword [0x0400222e], rax 	      1406	ldexp.c	FUNCTION_41	IF_1
0x400222e	      0xe97ffeffff	                           jmp 0x40020b2	      1406	ldexp.c	FUNCTION_41	IF_1
0x4002233	       0xf1f440000	                   nop dword [rax + rax]	      1406	ldexp.c	FUNCTION_41	IF_1
0x4002238	            0x8b3b	                    mov edi, dword [rbx]	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x400223a	            0x31f6	                            xor esi, esi	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x400223c	      0xe81fdfffff	                call sym.exp_print_token	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x4002241	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x4002246	     0xf8474010000	                            je 0x40023c0	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x400224c	    0x488b0d000000	            mov rcx, qword [0x04002253] 	        97	stdio2.h	CALL_11
0x4002253	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_11
0x4002258	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x400225d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x4002262	      0xe800000000	                          call 0x4002267	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4002267	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x400226b	      0xe800000000	                          call 0x4002270	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4002270	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x4002271	    0x488b35000000	            mov rsi, qword [0x04002278] 	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002278	      0xbf29000000	                           mov edi, 0x29	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x400227d	      0xe900000000	                           jmp 0x4002282	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002282	    0x660f1f440000	                    nop word [rax + rax]	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4002288	            0x8b3b	                    mov edi, dword [rbx]	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x400228a	    0x81ff03010000	                          cmp edi, 0x103	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4002290	     0xf8442010000	                            je 0x40023d8	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4002296	            0x31f6	                            xor esi, esi	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_33
0x4002298	      0xe8c3deffff	                call sym.exp_print_token	      1499	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	CALL_33
0x400229d	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x40022a1	          0x4885c9	                           test rcx, rcx	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x40022a4	     0xf8416010000	                            je 0x40023c0	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x40022aa	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x40022af	      0xe949feffff	                           jmp 0x40020fd	        97	stdio2.h	CALL_11
0x40022b4	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_11
0x40022b8	    0x488b3d000000	            mov rdi, qword [0x040022bf] 	        97	stdio2.h	CALL_11
0x40022bf	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	        97	stdio2.h	CALL_11
0x40022c3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x40022c8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x40022cd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_11
0x40022cf	      0xe800000000	                          call 0x40022d4	        97	stdio2.h	CALL_11
0x40022d4	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x40022d8	            0xeb91	                           jmp 0x400226b	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x40022da	    0x660f1f440000	                    nop word [rax + rax]	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x40022e0	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40022e4	      0xbf00000000	                              mov edi, 0	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40022e9	            0x31c0	                            xor eax, eax	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40022eb	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40022ec	      0xe900000000	                           jmp 0x40022f1	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40022f1	     0xf1f80000000	                         nop dword [rax]	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40022f8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x40022fc	    0x488b35000000	            mov rsi, qword [0x04002303] 	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002303	      0xe800000000	                          call 0x4002308	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4002308	            0x8b3b	                    mov edi, dword [rbx]	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x400230a	      0xbe01000000	                              mov esi, 1	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x400230f	      0xe84cdeffff	                call sym.exp_print_token	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4002314	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x4002318	      0xe987fdffff	                           jmp 0x40020a4	      1428	ldexp.c	FUNCTION_41	SWITCH_1
0x400231d	           0xf1f00	                         nop dword [rax]	      1428	ldexp.c	FUNCTION_41	SWITCH_1
0x4002320	            0x31f6	                            xor esi, esi	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_16
0x4002322	      0xe839deffff	                call sym.exp_print_token	      1459	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_16
0x4002327	    0x488b35000000	            mov rsi, qword [0x0400232e] 	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x400232e	      0xbf20000000	                           mov edi, 0x20	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002333	      0xe800000000	                          call 0x4002338	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4002338	    0x488b35000000	            mov rsi, qword [0x0400233f] 	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x400233f	      0xbf28000000	                           mov edi, 0x28	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4002344	      0xe800000000	                          call 0x4002349	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4002349	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x400234d	      0xe800000000	                          call 0x4002352	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4002352	    0x488b0d000000	            mov rcx, qword [0x04002359] 	        97	stdio2.h	CALL_11
0x4002359	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_11
0x400235e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4002363	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_11
0x4002368	      0xe800000000	                          call 0x400236d	        97	stdio2.h	CALL_11
0x400236d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002371	      0xe9f5feffff	                           jmp 0x400226b	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002376	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x4002380	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x4002381	      0xbee1050000	                          mov esi, 0x5e1	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002386	      0xbf00000000	                              mov edi, 0	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x400238b	      0xe900000000	                           jmp 0x4002390	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x4002390	    0x488b35000000	            mov rsi, qword [0x04002397] 	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4002397	      0xbf28000000	                           mov edi, 0x28	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x400239c	      0xe800000000	                          call 0x40023a1	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x40023a1	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x40023a5	      0xe800000000	                          call 0x40023aa	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x40023aa	            0x8b3b	                    mov edi, dword [rbx]	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x40023ac	      0xbe01000000	                              mov esi, 1	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x40023b1	      0xe8aaddffff	                call sym.exp_print_token	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x40023b6	            0xebb5	                           jmp 0x400236d	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x40023b8	     0xf1f84000000	                   nop dword [rax + rax]	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x40023c0	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40023c1	              0xc3	                                     ret	      1508	ldexp.c	FUNCTION_41
0x40023c2	    0x660f1f440000	                    nop word [rax + rax]	      1508	ldexp.c	FUNCTION_41
0x40023c8	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40023c9	      0xbf00000000	                              mov edi, 0	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40023ce	            0x31c0	                            xor eax, eax	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40023d0	      0xe900000000	                           jmp 0x40023d5	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40023d5	           0xf1f00	                         nop dword [rax]	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40023d8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40023dc	    0x488b35000000	            mov rsi, qword [0x040023e3] 	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40023e3	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40023e4	      0xe900000000	                           jmp 0x40023e9	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
ldexp_init	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,3	19
0x40026c0	        0x4883ec08	                              sub rsp, 8	      1624	ldexp.c	FUNCTION_47
0x40026c4	      0xb90d000000	                            mov ecx, 0xd	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40026c9	      0xba28000000	                           mov edx, 0x28	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40026ce	      0xbe00000000	                              mov esi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40026d3	      0xbf00000000	                              mov edi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40026d8	      0xe800000000	                          call 0x40026dd	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40026dd	            0x85c0	                           test eax, eax	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40026df	            0x740f	                            je 0x40026f0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40026e1	        0x4883c408	                              add rsp, 8	      1632	ldexp.c	FUNCTION_47
0x40026e5	              0xc3	                                     ret	      1632	ldexp.c	FUNCTION_47
0x40026e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1632	ldexp.c	FUNCTION_47
0x40026f0	            0x31ff	                            xor edi, edi	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40026f2	      0xba05000000	                              mov edx, 5	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40026f7	      0xbe00000000	                              mov esi, 0	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40026fc	      0xe800000000	                          call 0x4002701	      1631	ldexp.c	FUNCTION_47	CALL_3
0x4002701	        0x4883c408	                              add rsp, 8	      1632	ldexp.c	FUNCTION_47
0x4002705	          0x4889c7	                            mov rdi, rax	      1631	ldexp.c	FUNCTION_47	CALL_3
0x4002708	            0x31c0	                            xor eax, eax	      1631	ldexp.c	FUNCTION_47	CALL_3
0x400270a	      0xe900000000	                           jmp 0x400270f	      1631	ldexp.c	FUNCTION_47	CALL_3
exp_assign	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	21
0x4001f70	            0x4154	                                push r12	      1363	ldexp.c	FUNCTION_37
0x4001f72	              0x55	                                push rbp	      1363	ldexp.c	FUNCTION_37
0x4001f73	          0x4989fc	                            mov r12, rdi	      1363	ldexp.c	FUNCTION_37
0x4001f76	              0x53	                                push rbx	      1363	ldexp.c	FUNCTION_37
0x4001f77	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001f7c	          0x4889f3	                            mov rbx, rsi	      1363	ldexp.c	FUNCTION_37
0x4001f7f	            0x89d5	                            mov ebp, edx	      1363	ldexp.c	FUNCTION_37
0x4001f81	      0xe800000000	                          call 0x4001f86	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4001f86	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x4001f8c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x4001f90	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x4001f94	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x4001f97	    0xc74010040000	               mov dword [rax + 0x10], 4	      1352	ldexp.c	FUNCTION_36
0x4001f9e	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4001fa2	        0x4c896018	             mov qword [rax + 0x18], r12	      1354	ldexp.c	FUNCTION_36
0x4001fa6	          0x896828	             mov dword [rax + 0x28], ebp	      1355	ldexp.c	FUNCTION_36
0x4001fa9	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x4001fac	              0x5b	                                 pop rbx	      1365	ldexp.c	FUNCTION_37
0x4001fad	              0x5d	                                 pop rbp	      1365	ldexp.c	FUNCTION_37
0x4001fae	            0x415c	                                 pop r12	      1365	ldexp.c	FUNCTION_37
0x4001fb0	              0xc3	                                     ret	      1365	ldexp.c	FUNCTION_37
exp_provide	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	21
0x4002010	            0x4154	                                push r12	      1379	ldexp.c	FUNCTION_39
0x4002012	              0x55	                                push rbp	      1379	ldexp.c	FUNCTION_39
0x4002013	          0x4989fc	                            mov r12, rdi	      1379	ldexp.c	FUNCTION_39
0x4002016	              0x53	                                push rbx	      1379	ldexp.c	FUNCTION_39
0x4002017	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x400201c	          0x4889f3	                            mov rbx, rsi	      1379	ldexp.c	FUNCTION_39
0x400201f	            0x89d5	                            mov ebp, edx	      1379	ldexp.c	FUNCTION_39
0x4002021	      0xe800000000	                          call 0x4002026	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4002026	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x400202c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x4002030	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x4002034	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x4002037	    0xc74010050000	               mov dword [rax + 0x10], 5	      1352	ldexp.c	FUNCTION_36
0x400203e	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4002042	        0x4c896018	             mov qword [rax + 0x18], r12	      1354	ldexp.c	FUNCTION_36
0x4002046	          0x896828	             mov dword [rax + 0x28], ebp	      1355	ldexp.c	FUNCTION_36
0x4002049	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x400204c	              0x5b	                                 pop rbx	      1381	ldexp.c	FUNCTION_39
0x400204d	              0x5d	                                 pop rbp	      1381	ldexp.c	FUNCTION_39
0x400204e	            0x415c	                                 pop r12	      1381	ldexp.c	FUNCTION_39
0x4002050	              0xc3	                                     ret	      1381	ldexp.c	FUNCTION_39
exp_get_fill	DO,1:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,1:IF,6:CALL,6	93
0x40024b0	          0x4885ff	                           test rdi, rdi	      1538	ldexp.c	FUNCTION_44	IF_1
0x40024b3	            0x4154	                                push r12	      1533	ldexp.c	FUNCTION_44
0x40024b5	              0x55	                                push rbp	      1533	ldexp.c	FUNCTION_44
0x40024b6	              0x53	                                push rbx	      1533	ldexp.c	FUNCTION_44
0x40024b7	          0x4889f3	                            mov rbx, rsi	      1533	ldexp.c	FUNCTION_44
0x40024ba	     0xf84c7000000	                            je 0x4002587	      1538	ldexp.c	FUNCTION_44	IF_1
0x40024c0	          0x4889fd	                            mov rbp, rdi	      1538	ldexp.c	FUNCTION_44	IF_1
0x40024c3	          0x4989d4	                            mov r12, rdx	      1538	ldexp.c	FUNCTION_44	IF_1
0x40024c6	    0xc70500000000	               mov dword [0x040024d0], 0	      1246	ldexp.c	FUNCTION_30
0x40024d0	    0x48c705000000	               mov qword [0x040024db], 0	      1247	ldexp.c	FUNCTION_30
0x40024db	    0x48c705000000	               mov qword [0x040024e6], 0	      1248	ldexp.c	FUNCTION_30
0x40024e6	    0x48c705000000	               mov qword [0x040024f1], 0	      1249	ldexp.c	FUNCTION_30
0x40024f1	      0xe83addffff	                call sym.exp_fold_tree_1	      1250	ldexp.c	FUNCTION_30	CALL_1
0x40024f6	    0x8b0500000000	            mov eax, dword [0x040024fc] 	      1542	ldexp.c	FUNCTION_44	IF_2
0x40024fc	            0x85c0	                           test eax, eax	      1542	ldexp.c	FUNCTION_44	IF_2
0x40024fe	            0x7458	                            je 0x4002558	      1542	ldexp.c	FUNCTION_44	IF_2
0x4002500	    0x488b3d000000	            mov rdi, qword [0x04002507] 	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002507	          0x4885ff	                           test rdi, rdi	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x400250a	            0x740d	                            je 0x4002519	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x400250c	      0xe800000000	                          call 0x4002511	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002511	          0x4885c0	                           test rax, rax	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002514	          0x4889c3	                            mov rbx, rax	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002517	            0x7577	                           jne 0x4002590	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4002519	      0xbf13000000	                           mov edi, 0x13	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x400251e	      0xe800000000	                          call 0x4002523	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x4002523	    0x488b15000000	            mov rdx, qword [0x0400252a] 	      1580	ldexp.c	FUNCTION_44	ELSE_1
0x400252a	    0x48c700040000	                      mov qword [rax], 4	      1585	ldexp.c	FUNCTION_44	ELSE_1
0x4002531	            0x89d1	                            mov ecx, edx	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4002533	          0x88500b	                mov byte [rax + 0xb], dl	      1584	ldexp.c	FUNCTION_44	ELSE_1
0x4002536	          0xc1e918	                           shr ecx, 0x18	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4002539	          0x884808	                  mov byte [rax + 8], cl	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x400253c	            0x89d1	                            mov ecx, edx	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x400253e	          0xc1e910	                           shr ecx, 0x10	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x4002541	          0x884809	                  mov byte [rax + 9], cl	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x4002544	            0x89d1	                            mov ecx, edx	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x4002546	          0xc1e908	                              shr ecx, 8	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x4002549	          0x88480a	                mov byte [rax + 0xa], cl	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x400254c	              0x5b	                                 pop rbx	      1588	ldexp.c	FUNCTION_44
0x400254d	              0x5d	                                 pop rbp	      1588	ldexp.c	FUNCTION_44
0x400254e	            0x415c	                                 pop r12	      1588	ldexp.c	FUNCTION_44
0x4002550	              0xc3	                                     ret	      1588	ldexp.c	FUNCTION_44
0x4002551	     0xf1f80000000	                         nop dword [rax]	      1588	ldexp.c	FUNCTION_44
0x4002558	          0x4d85e4	                           test r12, r12	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x400255b	            0x742a	                            je 0x4002587	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x400255d	    0x833d00000000	               cmp dword [0x04002564], 1	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4002564	            0x7421	                            je 0x4002587	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4002566	      0xba05000000	                              mov edx, 5	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x400256b	      0xbe00000000	                              mov esi, 0	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002570	            0x31ff	                            xor edi, edi	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002572	      0xe800000000	                          call 0x4002577	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002577	          0x4c89e2	                            mov rdx, r12	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x400257a	          0x4889c7	                            mov rdi, rax	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x400257d	          0x4889ee	                            mov rsi, rbp	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002580	            0x31c0	                            xor eax, eax	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002582	      0xe800000000	                          call 0x4002587	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4002587	          0x4889d8	                            mov rax, rbx	      1547	ldexp.c	FUNCTION_44	IF_2
0x400258a	              0x5b	                                 pop rbx	      1588	ldexp.c	FUNCTION_44
0x400258b	              0x5d	                                 pop rbp	      1588	ldexp.c	FUNCTION_44
0x400258c	            0x415c	                                 pop r12	      1588	ldexp.c	FUNCTION_44
0x400258e	              0xc3	                                     ret	      1588	ldexp.c	FUNCTION_44
0x400258f	              0x90	                                     nop	      1588	ldexp.c	FUNCTION_44
0x4002590	        0x488d6801	                      lea rbp, [rax + 1]	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002594	          0x48d1ed	                              shr rbp, 1	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x4002597	        0x488d7d0f	                    lea rdi, [rbp + 0xf]	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x400259b	      0xe800000000	                          call 0x40025a0	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x40025a0	    0x488b35000000	            mov rsi, qword [0x040025a7] 	      1557	ldexp.c	FUNCTION_44	IF_4
0x40025a7	        0x4c8d4008	                       lea r8, [rax + 8]	      1556	ldexp.c	FUNCTION_44	IF_4
0x40025ab	          0x488928	                    mov qword [rax], rbp	      1555	ldexp.c	FUNCTION_44	IF_4
0x40025ae	            0x31d2	                            xor edx, edx	      1558	ldexp.c	FUNCTION_44	IF_4
0x40025b0	        0x4883c601	                              add rsi, 1	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025b4	         0xfb67eff	               movzx edi, byte [rsi - 1]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025b8	          0x8d4fd0	                   lea ecx, [rdi - 0x30]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025bb	          0x83f909	                              cmp ecx, 9	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40025be	            0x7606	                           jbe 0x40025c6	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40025c0	          0x8d4fc9	                   lea ecx, [rdi - 0x37]	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40025c3	          0x83e10f	                            and ecx, 0xf	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40025c6	          0xc1e204	                              shl edx, 4	      1566	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025c9	        0x4883eb01	                              sub rbx, 1	      1568	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025cd	             0x1ca	                            add edx, ecx	      1567	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025cf	          0xf6c301	                              test bl, 1	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x40025d2	            0x75dc	                           jne 0x40025b0	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x40025d4	          0x4885db	                           test rbx, rbx	      1575	ldexp.c	FUNCTION_44	IF_4
0x40025d7	        0x498d4801	                       lea rcx, [r8 + 1]	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x40025db	          0x418810	                       mov byte [r8], dl	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x40025de	            0x74aa	                            je 0x400258a	      1575	ldexp.c	FUNCTION_44	IF_4
0x40025e0	        0x4883c601	                              add rsi, 1	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025e4	         0xfb67eff	               movzx edi, byte [rsi - 1]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025e8	          0x4989c8	                             mov r8, rcx	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x40025eb	            0x31d2	                            xor edx, edx	      1572	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x40025ed	          0x8d4fd0	                   lea ecx, [rdi - 0x30]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40025f0	          0x83f909	                              cmp ecx, 9	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40025f3	            0x76d1	                           jbe 0x40025c6	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40025f5	            0xebc9	                           jmp 0x40025c0	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
exp_assert	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	19
0x4002060	              0x55	                                push rbp	      1387	ldexp.c	FUNCTION_40
0x4002061	              0x53	                                push rbx	      1387	ldexp.c	FUNCTION_40
0x4002062	          0x4889fb	                            mov rbx, rdi	      1387	ldexp.c	FUNCTION_40
0x4002065	      0xbf28000000	                           mov edi, 0x28	      1390	ldexp.c	FUNCTION_40	CALL_1
0x400206a	          0x4889f5	                            mov rbp, rsi	      1387	ldexp.c	FUNCTION_40
0x400206d	        0x4883ec08	                              sub rsp, 8	      1387	ldexp.c	FUNCTION_40
0x4002071	      0xe800000000	                          call 0x4002076	      1390	ldexp.c	FUNCTION_40	CALL_1
0x4002076	    0xc70021000000	                   mov dword [rax], 0x21	      1391	ldexp.c	FUNCTION_40
0x400207c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1392	ldexp.c	FUNCTION_40
0x4002080	        0x48895008	                mov qword [rax + 8], rdx	      1392	ldexp.c	FUNCTION_40
0x4002084	          0x8b5304	                mov edx, dword [rbx + 4]	      1393	ldexp.c	FUNCTION_40
0x4002087	    0xc74010080000	               mov dword [rax + 0x10], 8	      1394	ldexp.c	FUNCTION_40
0x400208e	        0x48895818	             mov qword [rax + 0x18], rbx	      1395	ldexp.c	FUNCTION_40
0x4002092	        0x48896820	             mov qword [rax + 0x20], rbp	      1396	ldexp.c	FUNCTION_40
0x4002096	          0x895004	                mov dword [rax + 4], edx	      1393	ldexp.c	FUNCTION_40
0x4002099	        0x4883c408	                              add rsp, 8	      1398	ldexp.c	FUNCTION_40
0x400209d	              0x5b	                                 pop rbx	      1398	ldexp.c	FUNCTION_40
0x400209e	              0x5d	                                 pop rbp	      1398	ldexp.c	FUNCTION_40
0x400209f	              0xc3	                                     ret	      1398	ldexp.c	FUNCTION_40
set_sym_sections	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,2:CALL,1	28
0x4000040	    0x48817f180000	               cmp qword [rdi + 0x18], 0	      1642	ldexp.c	FUNCTION_48	IF_1
0x4000048	            0x7456	                            je 0x40000a0	      1642	ldexp.c	FUNCTION_48	IF_1
0x400004a	              0x53	                                push rbx	      1640	ldexp.c	FUNCTION_48
0x400004b	          0x4889fb	                            mov rbx, rdi	      1640	ldexp.c	FUNCTION_48
0x400004e	        0x488b7708	                mov rsi, qword [rdi + 8]	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000052	    0x488b3d000000	            mov rdi, qword [0x04000059] 	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000059	            0x31c9	                            xor ecx, ecx	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400005b	            0x31d2	                            xor edx, edx	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400005d	    0x41b801000000	                              mov r8d, 1	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000063	      0xe800000000	                          call 0x4000068	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000068	          0x4885c0	                           test rax, rax	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400006b	            0x7406	                            je 0x4000073	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400006d	        0x80781803	                cmp byte [rax + 0x18], 3	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000071	            0x740d	                            je 0x4000080	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000073	      0xb801000000	                              mov eax, 1	      1656	ldexp.c	FUNCTION_48
0x4000078	              0x5b	                                 pop rbx	      1656	ldexp.c	FUNCTION_48
0x4000079	              0xc3	                                     ret	      1656	ldexp.c	FUNCTION_48
0x400007a	    0x660f1f440000	                    nop word [rax + rax]	      1656	ldexp.c	FUNCTION_48
0x4000080	    0x488178280000	               cmp qword [rax + 0x28], 0	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000088	            0x75e9	                           jne 0x4000073	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400008a	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400008e	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000092	        0x48895028	             mov qword [rax + 0x28], rdx	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000096	        0x48294830	             sub qword [rax + 0x30], rcx	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400009a	            0xebd7	                           jmp 0x4000073	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400009c	         0xf1f4000	                         nop dword [rax]	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x40000a0	      0xb801000000	                              mov eax, 1	      1656	ldexp.c	FUNCTION_48
0x40000a5	              0xc3	                                     ret	      1656	ldexp.c	FUNCTION_48
exp_fold_tree_1	DO,0:FOR,0:WHILE,0:SWITCH,1:functions,0:ELSE,8:IF,26:CALL,35	1314
0x4000230	            0x4155	                                push r13	       999	ldexp.c	FUNCTION_28
0x4000232	            0x4154	                                push r12	       999	ldexp.c	FUNCTION_28
0x4000234	              0x55	                                push rbp	       999	ldexp.c	FUNCTION_28
0x4000235	              0x53	                                push rbx	       999	ldexp.c	FUNCTION_28
0x4000236	        0x4883ec08	                              sub rsp, 8	       999	ldexp.c	FUNCTION_28
0x400023a	          0x4885ff	                           test rdi, rdi	      1000	ldexp.c	FUNCTION_28	IF_1
0x400023d	     0xf84c7010000	                            je 0x400040a	      1000	ldexp.c	FUNCTION_28	IF_1
0x4000243	          0x4889fb	                            mov rbx, rdi	      1000	ldexp.c	FUNCTION_28	IF_1
0x4000246	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4000249	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400024c	     0xf871e050000	                            ja 0x4000770	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4000252	            0x89c2	                            mov edx, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4000254	    0xff24d5000000	                       jmp qword [rdx*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400025b	       0xf1f440000	                   nop dword [rax + rax]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4000260	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4000264	      0xe8c7ffffff	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4000269	    0x833d00000000	               cmp dword [0x04000270], 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000270	     0xf84f2060000	                            je 0x4000968	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000276	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x400027a	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x400027b	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x400027c	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x400027e	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x4000280	              0xc3	                                     ret	      1231	ldexp.c	FUNCTION_28
0x4000281	     0xf1f80000000	                         nop dword [rax]	      1231	ldexp.c	FUNCTION_28
0x4000288	    0x448b0d000000	            mov r9d, dword [0x0400028f] 	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400028f	          0x4585c9	                           test r9d, r9d	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000292	     0xf8472010000	                            je 0x400040a	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000298	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400029c	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x40002a0	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x40002a4	        0x48034320	             add rax, qword [rbx + 0x20]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x40002a8	    0xc70500000000	               mov dword [0x040002b2], 1	       251	ldexp.c	FUNCTION_9
0x40002b2	    0x48c705000000	               mov qword [0x040002bd], 0	       253	ldexp.c	FUNCTION_9
0x40002bd	    0x488915000000	            mov qword [0x040002c4], rdx 	       254	ldexp.c	FUNCTION_9
0x40002c4	    0x488905000000	            mov qword [0x040002cb], rax 	       252	ldexp.c	FUNCTION_9
0x40002cb	            0xeba9	                           jmp 0x4000276	       252	ldexp.c	FUNCTION_9
0x40002cd	           0xf1f00	                         nop dword [rax]	       252	ldexp.c	FUNCTION_9
0x40002d0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x40002d4	      0xe857ffffff	                call sym.exp_fold_tree_1	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x40002d9	    0x8b2d00000000	            mov ebp, dword [0x040002df] 	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x40002df	            0x85ed	                           test ebp, ebp	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x40002e1	     0xf84a9060000	                            je 0x4000990	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x40002e7	    0x813b31010000	                  cmp dword [rbx], 0x131	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x40002ed	     0xf841d080000	                            je 0x4000b10	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x40002f3	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x40002f7	    0x4c8b25000000	            mov r12, qword [0x040002fe] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x40002fe	    0x4c8b2d000000	            mov r13, qword [0x04000305] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000305	      0xe826ffffff	                call sym.exp_fold_tree_1	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x400030a	    0x212d00000000	             and dword [0x04000310], ebp	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x4000310	     0xf8460ffffff	                            je 0x4000276	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x4000316	    0x488b2d000000	            mov rbp, qword [0x0400031d] 	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x400031d	          0x4939ed	                            cmp r13, rbp	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x4000320	            0x743b	                            je 0x400035d	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x4000322	          0x4885ed	                           test rbp, rbp	       569	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000325	     0xf8449140000	                            je 0x4001774	       569	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x400032b	          0x4d85ed	                           test r13, r13	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x400032e	     0xf84520e0000	                            je 0x4001186	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000334	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4000338	        0x4d036528	             add r12, qword [r13 + 0x28]	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x400033c	      0xbd00000000	                              mov ebp, 0	       574	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x4000341	    0x480105000000	            add qword [0x04000348], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x4000348	    0x48c705000000	               mov qword [0x04000353], 0	       185	ldexp.c	FUNCTION_3
0x4000353	    0xc70500000000	               mov dword [0x0400035d], 0	       186	ldexp.c	FUNCTION_3
0x400035d	            0x8b0b	                    mov ecx, dword [rbx]	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400035f	    0x81f90e010000	                          cmp ecx, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000365	     0xf8413120000	                            je 0x400157e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400036b	     0xf8fbf040000	                            jg 0x4000830	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000371	          0x83f92f	                           cmp ecx, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000374	     0xf8459120000	                            je 0x40015d3	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400037a	     0xf8fe0080000	                            jg 0x4000c60	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000380	          0x83f92a	                           cmp ecx, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000383	     0xf8405120000	                            je 0x400158e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000389	     0xf8f910e0000	                            jg 0x4001220	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400038f	          0x83f925	                           cmp ecx, 0x25	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000392	     0xf84b5110000	                            je 0x400154d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000398	          0x83f926	                           cmp ecx, 0x26	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400039b	     0xf85a2110000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40003a1	    0x4c2125000000	             and qword [0x040003a8], r12	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40003a8	    0x48392d000000	            cmp qword [0x040003af], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x40003af	     0xf85c1feffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x40003b5	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x40003b9	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x40003ba	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x40003bb	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x40003bd	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x40003bf	      0xe95cfdffff	jmp sym.arith_result_section.isra.1.part.2	      1231	ldexp.c	FUNCTION_28
0x40003c4	         0xf1f4000	                         nop dword [rax]	      1231	ldexp.c	FUNCTION_28
0x40003c8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x40003cc	    0x488b2d000000	            mov rbp, qword [0x040003d3] 	       671	ldexp.c	FUNCTION_20
0x40003d3	      0xe858feffff	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x40003d8	    0x8b0500000000	            mov eax, dword [0x040003de] 	       675	ldexp.c	FUNCTION_20	IF_1
0x40003de	    0x48892d000000	            mov qword [0x040003e5], rbp 	       674	ldexp.c	FUNCTION_20
0x40003e5	            0x85c0	                           test eax, eax	       675	ldexp.c	FUNCTION_20	IF_1
0x40003e7	     0xf8489feffff	                            je 0x4000276	       675	ldexp.c	FUNCTION_20	IF_1
0x40003ed	    0x48833d000000	               cmp qword [0x040003f5], 0	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40003f5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40003f9	      0x480f444328	           cmove rax, qword [rbx + 0x28]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40003fe	          0x4885c0	                           test rax, rax	      1000	ldexp.c	FUNCTION_28	IF_1
0x4000401	          0x4889c3	                            mov rbx, rax	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000404	     0xf853cfeffff	                           jne 0x4000246	      1000	ldexp.c	FUNCTION_28	IF_1
0x400040a	    0x48c705000000	               mov qword [0x04000415], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4000415	    0x48c705000000	               mov qword [0x04000420], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4000420	    0x48c705000000	               mov qword [0x0400042b], 0	        90	string3.h	FUNCTION_71	CALL_6
0x400042b	    0x48c705000000	               mov qword [0x04000436], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4000436	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x400043a	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x400043b	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x400043c	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x400043e	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x4000440	              0xc3	                                     ret	      1231	ldexp.c	FUNCTION_28
0x4000441	     0xf1f80000000	                         nop dword [rax]	      1231	ldexp.c	FUNCTION_28
0x4000448	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x400044c	      0xe8dffdffff	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4000451	    0x448b05000000	            mov r8d, dword [0x04000458] 	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4000458	          0x4585c0	                           test r8d, r8d	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x400045b	     0xf8415feffff	                            je 0x4000276	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4000461	            0x8b13	                    mov edx, dword [rbx]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000463	    0x81fa17010000	                          cmp edx, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000469	     0xf84b70c0000	                            je 0x4001126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400046f	     0xf8e93030000	                           jle 0x4000808	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000475	    0x81fa40010000	                          cmp edx, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400047b	     0xf84400c0000	                            je 0x40010c1	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000481	     0xf8eb90b0000	                           jle 0x4001040	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000487	    0x81fa60010000	                          cmp edx, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400048d	     0xf8410010000	                            je 0x40005a3	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000493	            0x31f6	                            xor esi, esi	       163	ldexp.c	FUNCTION_2
0x4000495	    0x81fa67010000	                          cmp edx, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400049b	    0x488b05000000	            mov rax, qword [0x040004a2] 	       161	ldexp.c	FUNCTION_2
0x40004a2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x40004a9	      0xbf01000000	                              mov edi, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40004ae	            0x740b	                            je 0x40004bb	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40004b0	      0xe96e030000	                           jmp 0x4000823	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40004b5	           0xf1f00	                         nop dword [rax]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40004b8	          0x4889d1	                            mov rcx, rdx	       167	ldexp.c	FUNCTION_2	DO_1
0x40004bb	        0x4883f801	                              cmp rax, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40004bf	        0x488d5101	                      lea rdx, [rcx + 1]	       167	ldexp.c	FUNCTION_2	DO_1
0x40004c3	            0x7605	                           jbe 0x40004ca	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40004c5	            0xa801	                              test al, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40004c7	           0xf45f7	                         cmovne esi, edi	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40004ca	          0x48d1e8	                              shr rax, 1	       172	ldexp.c	FUNCTION_2
0x40004cd	            0x75e9	                           jne 0x40004b8	       172	ldexp.c	FUNCTION_2
0x40004cf	        0x4883c102	                              add rcx, 2	       175	ldexp.c	FUNCTION_2	IF_2
0x40004d3	            0x85f6	                           test esi, esi	       175	ldexp.c	FUNCTION_2	IF_2
0x40004d5	    0x48c705000000	               mov qword [0x040004e0], 0	       176	ldexp.c	FUNCTION_2
0x40004e0	        0x480f45d1	                         cmovne rdx, rcx	       175	ldexp.c	FUNCTION_2	IF_2
0x40004e4	    0x488915000000	            mov qword [0x040004eb], rdx 	       177	ldexp.c	FUNCTION_2
0x40004eb	      0xe986fdffff	                           jmp 0x4000276	       177	ldexp.c	FUNCTION_2
0x40004f0	    0x48c705000000	               mov qword [0x040004fb], 0	        90	string3.h	FUNCTION_71	CALL_6
0x40004fb	    0x48c705000000	               mov qword [0x04000506], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4000506	    0x48c705000000	               mov qword [0x04000511], 0	        90	string3.h	FUNCTION_71	CALL_6
0x4000511	    0x48c705000000	               mov qword [0x0400051c], 0	        90	string3.h	FUNCTION_71	CALL_6
0x400051c	            0x8b03	                    mov eax, dword [rbx]	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400051e	      0x3d42010000	                          cmp eax, 0x142	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000523	     0xf8e5f020000	                           jle 0x4000788	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000529	      0x3d4e010000	                          cmp eax, 0x14e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400052e	     0xf84cc080000	                            je 0x4000e00	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000534	     0xf8f56030000	                            jg 0x4000890	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400053a	      0x3d43010000	                          cmp eax, 0x143	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400053f	     0xf8453080000	                            je 0x4000d98	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000545	      0x3d44010000	                          cmp eax, 0x144	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400054a	     0xf8564020000	                           jne 0x40007b4	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000550	    0x448b05000000	            mov r8d, dword [0x04000557] 	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4000557	          0x4585c0	                           test r8d, r8d	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x400055a	     0xf8416fdffff	                            je 0x4000276	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4000560	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x4000564	            0x31d2	                            xor edx, edx	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x4000566	            0x31f6	                            xor esi, esi	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x4000568	      0xe800000000	                          call 0x400056d	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x400056d	          0x4885c0	                           test rax, rax	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x4000570	     0xf8461120000	                            je 0x40017d7	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x4000576	    0xf68090000000	               test byte [rax + 0x90], 2	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x400057d	     0xf84f3fcffff	                            je 0x4000276	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000583	        0x488b7860	            mov rdi, qword [rax + 0x60] 	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x4000587	          0x4885ff	                           test rdi, rdi	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x400058a	     0xf84aa130000	                            je 0x400193a	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x4000590	      0xe89bfcffff	                call sym.exp_fold_tree_1	       826	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_30
0x4000595	    0x8b3d00000000	            mov edi, dword [0x0400059b] 	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x400059b	            0x85ff	                           test edi, edi	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x400059d	     0xf84d3fcffff	                            je 0x4000276	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x40005a3	    0x488b05000000	            mov rax, qword [0x040005aa] 	       183	ldexp.c	FUNCTION_3	IF_1
0x40005aa	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x40005ad	            0x740b	                            je 0x40005ba	       183	ldexp.c	FUNCTION_3	IF_1
0x40005af	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x40005b3	    0x480105000000	            add qword [0x040005ba], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x40005ba	    0x48c705000000	               mov qword [0x040005c5], 0	       185	ldexp.c	FUNCTION_3
0x40005c5	    0xc70500000000	               mov dword [0x040005cf], 0	       186	ldexp.c	FUNCTION_3
0x40005cf	      0xe9a2fcffff	                           jmp 0x4000276	       186	ldexp.c	FUNCTION_3
0x40005d4	         0xf1f4000	                         nop dword [rax]	       186	ldexp.c	FUNCTION_3
0x40005d8	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40005dc	          0x803e2e	                    cmp byte [rsi], 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40005df	     0xf84cb030000	                            je 0x40009b0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40005e5	            0x31ed	                            xor ebp, ebp	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40005e7	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x40005ea	     0xf84d0040000	                            je 0x4000ac0	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x40005f0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x40005f4	    0x488935000000	            mov qword [0x040005fb], rsi 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40005fb	    0x48c705000000	               mov qword [0x04000606], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4000606	      0xe825fcffff	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x400060b	    0x833d00000000	               cmp dword [0x04000612], 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4000612	            0x740e	                            je 0x4000622	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4000614	    0x48833d000000	               cmp qword [0x0400061c], 0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400061c	     0xf84f1000000	                            je 0x4000713	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4000622	        0x837b1005	               cmp dword [rbx + 0x10], 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4000626	     0xf84d4040000	                            je 0x4000b00	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x400062c	          0x4885ed	                           test rbp, rbp	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x400062f	     0xf84580b0000	                            je 0x400118d	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4000635	    0x8b0500000000	            mov eax, dword [0x0400063b] 	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x400063b	            0x85c0	                           test eax, eax	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x400063d	     0xf848d010000	                            je 0x40007d0	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4000643	    0x48833d000000	               cmp qword [0x0400064b], 0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x400064b	     0xf849e010000	                            je 0x40007ef	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4000651	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4000655	            0x31c9	                            xor ecx, ecx	       309	ldexp.c	FUNCTION_13
0x4000657	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x400065c	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x4000661	          0x4c89ee	                            mov rsi, r13	       309	ldexp.c	FUNCTION_13
0x4000664	      0xe800000000	                          call 0x4000669	       309	ldexp.c	FUNCTION_13
0x4000669	          0x4885c0	                           test rax, rax	       313	ldexp.c	FUNCTION_13	IF_1
0x400066c	          0x4989c4	                            mov r12, rax	       309	ldexp.c	FUNCTION_13
0x400066f	     0xf84740c0000	                            je 0x40012e9	       313	ldexp.c	FUNCTION_13	IF_1
0x4000675	        0xf6451908	               test byte [rbp + 0x19], 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4000679	            0x7511	                           jne 0x400068c	       319	ldexp.c	FUNCTION_13	IF_2
0x400067b	         0xfb64518	           movzx eax, byte [rbp + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x400067f	          0x83e803	                              sub eax, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4000682	            0x3c02	                               cmp al, 2	       320	ldexp.c	FUNCTION_13	IF_2
0x4000684	            0x7706	                            ja 0x400068c	       320	ldexp.c	FUNCTION_13	IF_2
0x4000686	    0x41804c242101	                 or byte [r12 + 0x21], 1	       324	ldexp.c	FUNCTION_13	IF_2
0x400068c	    0x833d00000000	               cmp dword [0x04000693], 4	       333	ldexp.c	FUNCTION_13	IF_4
0x4000693	    0x8b0500000000	            mov eax, dword [0x04000699] 	       331	ldexp.c	FUNCTION_13
0x4000699	    0x49c744241800	               mov qword [r12 + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x40006a2	      0x4188442420	               mov byte [r12 + 0x20], al	       331	ldexp.c	FUNCTION_13
0x40006a7	    0x488b05000000	            mov rax, qword [0x040006ae] 	       335	ldexp.c	FUNCTION_13	IF_4
0x40006ae	     0xf8414050000	                            je 0x4000bc8	       333	ldexp.c	FUNCTION_13	IF_4
0x40006b4	    0x488b15000000	            mov rdx, qword [0x040006bb] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006bb	        0x48894528	            mov qword [rbp + 0x28], rax 	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006bf	        0xc6451803	                mov byte [rbp + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006c3	        0x48895530	            mov qword [rbp + 0x30], rdx 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006c7	        0x448b5b04	               mov r11d, dword [rbx + 4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006cb	         0xfb65519	           movzx edx, byte [rbp + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006cf	          0x4585db	                         test r11d, r11d	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006d2	           0xf94c0	                                 sete al	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006d5	          0xc1e002	                              shl eax, 2	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006d8	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006db	             0x9d0	                             or eax, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006dd	          0x83c808	                               or eax, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006e0	          0x884519	               mov byte [rbp + 0x19], al	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40006e3	          0x8b5b28	            mov ebx, dword [rbx + 0x28] 	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40006e6	            0x85db	                           test ebx, ebx	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40006e8	     0xf854a050000	                           jne 0x4000c38	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40006ee	    0x488b15000000	            mov rdx, qword [0x040006f5] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40006f5	        0x488d42ff	                      lea rax, [rdx - 1]	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40006f9	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40006fd	            0x7714	                            ja 0x4000713	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40006ff	    0x488b3d000000	            mov rdi, qword [0x04000706] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4000706	          0x4889ee	                            mov rsi, rbp	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4000709	        0x488b4708	                mov rax, qword [rdi + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x400070d	    0xff90d0020000	                call qword [rax + 0x2d0]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4000713	    0x48c705000000	               mov qword [0x0400071e], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x400071e	      0xe953fbffff	                           jmp 0x4000276	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4000723	       0xf1f440000	                   nop dword [rax + rax]	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4000728	    0x48813d000000	               cmp qword [0x04000733], 0	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000733	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4000737	     0xf84c3040000	                            je 0x4000c00	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x400073d	    0xc70500000000	               mov dword [0x04000747], 1	       242	ldexp.c	FUNCTION_8
0x4000747	    0x488905000000	            mov qword [0x0400074e], rax 	       243	ldexp.c	FUNCTION_8
0x400074e	    0x48c705000000	               mov qword [0x04000759], 0	       245	ldexp.c	FUNCTION_8
0x4000759	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x400075d	    0x488905000000	            mov qword [0x04000764], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4000764	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x4000768	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x4000769	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x400076a	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x400076c	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x400076e	              0xc3	                                     ret	      1231	ldexp.c	FUNCTION_28
0x400076f	              0x90	                                     nop	      1231	ldexp.c	FUNCTION_28
0x4000770	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4000775	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x400077a	      0xe800000000	                          call 0x400077f	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x400077f	      0xe986fcffff	                           jmp 0x400040a	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4000784	         0xf1f4000	                         nop dword [rax]	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4000788	      0x3d41010000	                          cmp eax, 0x141	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400078d	     0xf8d5e010000	                           jge 0x40008f1	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000793	      0x3d2b010000	                          cmp eax, 0x12b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000798	     0xf8472070000	                            je 0x4000f10	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400079e	      0x3d3b010000	                          cmp eax, 0x13b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40007a3	     0xf84ef060000	                            je 0x4000e98	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40007a9	      0x3d03010000	                          cmp eax, 0x103	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40007ae	     0xf84b6070000	                            je 0x4000f6a	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40007b4	      0xbe8d030000	                          mov esi, 0x38d	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x40007b9	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x40007bd	      0xbf00000000	                              mov edi, 0	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x40007c2	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x40007c3	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x40007c4	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x40007c6	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x40007c8	      0xe900000000	                           jmp 0x40007cd	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x40007cd	           0xf1f00	                         nop dword [rax]	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x40007d0	        0x807d1800	                cmp byte [rbp + 0x18], 0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40007d4	     0xf8539ffffff	                           jne 0x4000713	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40007da	    0x48c705000000	               mov qword [0x040007e5], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40007e5	    0xc70500000000	               mov dword [0x040007ef], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40007ef	    0x488b05000000	            mov rax, qword [0x040007f6] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40007f6	    0x488905000000	            mov qword [0x040007fd], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40007fd	      0xe94ffeffff	                           jmp 0x4000651	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4000802	    0x660f1f440000	                    nop word [rax + rax]	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4000808	          0x83fa2d	                           cmp edx, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400080b	     0xf84a4080000	                            je 0x40010b5	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000811	          0x83fa7e	                           cmp edx, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000814	     0xf8476080000	                            je 0x4001090	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400081a	          0x83fa21	                           cmp edx, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400081d	     0xf8479080000	                            je 0x400109c	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000823	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000828	            0xeb8f	                           jmp 0x40007b9	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x400082a	    0x660f1f440000	                    nop word [rax + rax]	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000830	    0x81f914010000	                          cmp ecx, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000836	     0xf84bb0d0000	                            je 0x40015f7	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400083c	     0xf8f66040000	                            jg 0x4000ca8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000842	    0x81f911010000	                          cmp ecx, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000848	     0xf84d20c0000	                            je 0x4001520	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400084e	     0xf8f8c090000	                            jg 0x40011e0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000854	    0x81f90f010000	                          cmp ecx, 0x10f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400085a	     0xf849d0c0000	                            je 0x40014fd	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000860	    0x81f910010000	                          cmp ecx, 0x110	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000866	     0xf85d70c0000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400086c	            0x31c0	                            xor eax, eax	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400086e	    0x4c3925000000	            cmp qword [0x04000875], r12 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000875	    0x48c705000000	               mov qword [0x04000880], 0	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000880	           0xf95c0	                                setne al	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000883	    0x488905000000	            mov qword [0x0400088a], rax 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400088a	      0xe9e7f9ffff	                           jmp 0x4000276	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400088f	              0x90	                                     nop	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000890	      0x3d50010000	                          cmp eax, 0x150	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4000895	     0xf84cd050000	                            je 0x4000e68	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400089b	      0x3d82010000	                          cmp eax, 0x182	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40008a0	     0xf850effffff	                           jne 0x40007b4	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40008a6	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40008aa	      0xbf00000000	                              mov edi, 0	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40008af	      0xb90c000000	                            mov ecx, 0xc	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40008b4	          0x4889ee	                            mov rsi, rbp	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40008b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40008b9	     0xf840d0a0000	                            je 0x40012cc	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40008bf	      0xbf00000000	                              mov edi, 0	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40008c4	      0xb90f000000	                            mov ecx, 0xf	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40008c9	          0x4889ee	                            mov rsi, rbp	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40008cc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40008ce	     0xf85750e0000	                           jne 0x4001749	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40008d4	    0x488b05000000	            mov rax, qword [0x040008db] 	       243	ldexp.c	FUNCTION_8
0x40008db	    0xc70500000000	               mov dword [0x040008e5], 1	       242	ldexp.c	FUNCTION_8
0x40008e5	    0x488905000000	            mov qword [0x040008ec], rax 	       243	ldexp.c	FUNCTION_8
0x40008ec	      0xe985f9ffff	                           jmp 0x4000276	       243	ldexp.c	FUNCTION_8
0x40008f1	    0x8b3500000000	            mov esi, dword [0x040008f7] 	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x40008f7	            0x85f6	                           test esi, esi	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x40008f9	     0xf8477f9ffff	                            je 0x4000276	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x40008ff	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4000903	            0x31d2	                            xor edx, edx	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4000905	            0x31f6	                            xor esi, esi	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x4000907	      0xe800000000	                          call 0x400090c	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x400090c	          0x4885c0	                           test rax, rax	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x400090f	     0xf843a0f0000	                            je 0x400184f	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x4000915	        0x488b4038	            mov rax, qword [rax + 0x38] 	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x4000919	          0x4885c0	                           test rax, rax	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x400091c	     0xf845b0f0000	                            je 0x400187d	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x4000922	    0x813b41010000	                  cmp dword [rbx], 0x141	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4000928	     0xf8440100000	                            je 0x400196e	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x400092e	          0x8b4870	            mov ecx, dword [rax + 0x70] 	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4000931	      0xb801000000	                              mov eax, 1	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4000936	          0x48d3e0	                             shl rax, cl	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4000939	    0xc70500000000	               mov dword [0x04000943], 1	       242	ldexp.c	FUNCTION_8
0x4000943	    0x488905000000	            mov qword [0x0400094a], rax 	       243	ldexp.c	FUNCTION_8
0x400094a	    0x48c705000000	               mov qword [0x04000955], 0	       244	ldexp.c	FUNCTION_8
0x4000955	    0x48c705000000	               mov qword [0x04000960], 0	       245	ldexp.c	FUNCTION_8
0x4000960	      0xe911f9ffff	                           jmp 0x4000276	       245	ldexp.c	FUNCTION_8
0x4000965	           0xf1f00	                         nop dword [rax]	       245	ldexp.c	FUNCTION_8
0x4000968	    0x48833d000000	               cmp qword [0x04000970], 0	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000970	     0xf8500f9ffff	                           jne 0x4000276	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000976	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x400097a	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x400097f	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x4000983	            0x31c0	                            xor eax, eax	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4000985	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x4000986	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x4000987	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x4000989	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x400098b	      0xe900000000	                           jmp 0x4000990	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4000990	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000994	      0xe897f8ffff	                call sym.exp_fold_tree_1	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000999	    0xc70500000000	               mov dword [0x040009a3], 0	       561	ldexp.c	ELSE_3	FUNCTION_19
0x40009a3	      0xe9cef8ffff	                           jmp 0x4000276	       561	ldexp.c	ELSE_3	FUNCTION_19
0x40009a8	     0xf1f84000000	                   nop dword [rax + rax]	       561	ldexp.c	ELSE_3	FUNCTION_19
0x40009b0	        0x807e0100	                   cmp byte [rsi + 1], 0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40009b4	     0xf852bfcffff	                           jne 0x40005e5	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40009ba	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x40009bd	            0x741e	                            je 0x40009dd	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x40009bf	      0xbe00000000	                              mov esi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009c4	            0x31ff	                            xor edi, edi	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009c6	      0xba05000000	                              mov edx, 5	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009cb	      0xe800000000	                          call 0x40009d0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009d0	          0x4889de	                            mov rsi, rbx	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009d3	          0x4889c7	                            mov rdi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009d6	            0x31c0	                            xor eax, eax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009d8	      0xe800000000	                          call 0x40009dd	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40009dd	    0x8b0500000000	            mov eax, dword [0x040009e3] 	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40009e3	            0x85c0	                           test eax, eax	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40009e5	     0xf841ffaffff	                            je 0x400040a	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40009eb	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x40009ef	    0xc70500000000	               mov dword [0x040009f9], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40009f9	      0xe832f8ffff	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x40009fe	    0x833d00000000	               cmp dword [0x04000a05], 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000a05	    0xc70500000000	               mov dword [0x04000a0f], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000a0f	     0xf843b090000	                            je 0x4001350	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000a15	    0x8b0500000000	            mov eax, dword [0x04000a1b] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000a1b	            0x85c0	                           test eax, eax	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000a1d	     0xf84a9090000	                            je 0x40013cc	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000a23	    0x488b05000000	            mov rax, qword [0x04000a2a] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000a2a	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000a30	     0xf8496090000	                            je 0x40013cc	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000a36	    0x488b15000000	            mov rdx, qword [0x04000a3d] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4000a3d	          0x4885d2	                           test rdx, rdx	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4000a40	     0xf84cf0f0000	                            je 0x4001a15	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4000a46	    0x833d00000000	               cmp dword [0x04000a4d], 2	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000a4d	            0x760c	                           jbe 0x4000a5b	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000a4f	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000a55	     0xf851bf8ffff	                           jne 0x4000276	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000a5b	    0x488b0d000000	            mov rcx, qword [0x04000a62] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000a62	    0x488b2d000000	            mov rbp, qword [0x04000a69] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000a69	          0x4885c9	                           test rcx, rcx	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000a6c	     0xf84390f0000	                            je 0x40019ab	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000a72	        0x48036928	             add rbp, qword [rcx + 0x28]	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000a76	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000a7c	    0x4c8b25000000	            mov r12, qword [0x04000a83] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000a83	     0xf843f0d0000	                            je 0x40017c8	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000a89	          0x4c39e5	                            cmp rbp, r12	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000a8c	     0xf83360d0000	                           jae 0x40017c8	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000a92	      0xba05000000	                              mov edx, 5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000a97	      0xbe00000000	                              mov esi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000a9c	            0x31ff	                            xor edi, edi	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000a9e	      0xe800000000	                          call 0x4000aa3	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000aa3	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x4000aa7	          0x4889e9	                            mov rcx, rbp	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000aaa	          0x4c89e2	                            mov rdx, r12	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000aad	          0x4889de	                            mov rsi, rbx	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000ab0	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000ab3	            0x31c0	                            xor eax, eax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000ab5	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x4000ab6	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x4000ab7	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x4000ab9	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x4000abb	      0xe900000000	                           jmp 0x4000ac0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000ac0	    0x488b3d000000	            mov rdi, qword [0x04000ac7] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000ac7	            0x31c9	                            xor ecx, ecx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000ac9	            0x31d2	                            xor edx, edx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000acb	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000ad1	      0xe800000000	                          call 0x4000ad6	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000ad6	          0x4885c0	                           test rax, rax	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000ad9	          0x4889c5	                            mov rbp, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000adc	     0xf8494f7ffff	                            je 0x4000276	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000ae2	        0x80781802	                cmp byte [rax + 0x18], 2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000ae6	            0x760a	                           jbe 0x4000af2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000ae8	        0xf6401904	               test byte [rax + 0x19], 4	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000aec	     0xf8484f7ffff	                            je 0x4000276	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000af2	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000af6	      0xe9f5faffff	                           jmp 0x40005f0	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000afb	       0xf1f440000	                   nop dword [rax + rax]	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000b00	    0xc74310060000	               mov dword [rbx + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4000b07	      0xe920fbffff	                           jmp 0x400062c	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4000b0c	         0xf1f4000	                         nop dword [rax]	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4000b10	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b14	    0x488b1d000000	            mov rbx, qword [0x04000b1b] 	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b1b	          0x4885db	                           test rbx, rbx	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b1e	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000b22	            0x7518	                           jne 0x4000b3c	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b24	      0xe94df7ffff	                           jmp 0x4000276	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b29	     0xf1f80000000	                         nop dword [rax]	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b30	          0x488b1b	                    mov rbx, qword [rbx]	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b33	          0x4885db	                           test rbx, rbx	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b36	     0xf843af7ffff	                            je 0x4000276	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000b3c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b40	          0x4889ee	                            mov rsi, rbp	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b43	      0xe800000000	                          call 0x4000b48	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b48	            0x85c0	                           test eax, eax	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b4a	            0x75e4	                           jne 0x4000b30	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000b4c	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b4f	            0x85d2	                           test edx, edx	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b51	     0xf8526060000	                           jne 0x400117d	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b57	    0x8b0500000000	            mov eax, dword [0x04000b5d] 	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b5d	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b61	            0x85c0	                           test eax, eax	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b63	            0x741b	                            je 0x4000b80	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b65	            0x31d2	                            xor edx, edx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b67	          0x4889c8	                            mov rax, rcx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b6a	    0x48f735000000	                  div qword [0x04000b71]	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b71	          0x4885d2	                           test rdx, rdx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b74	     0xf85e5050000	                           jne 0x400115f	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b7a	    0x660f1f440000	                    nop word [rax + rax]	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000b80	    0x488b05000000	            mov rax, qword [0x04000b87] 	       260	ldexp.c	FUNCTION_10
0x4000b87	    0xc74318010000	               mov dword [rbx + 0x18], 1	       552	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2
0x4000b8e	    0xc70500000000	               mov dword [0x04000b98], 1	       262	ldexp.c	FUNCTION_10
0x4000b98	    0xc70500000000	               mov dword [0x04000ba2], 1	       263	ldexp.c	FUNCTION_10
0x4000ba2	        0x482b4828	             sub rcx, qword [rax + 0x28]	       264	ldexp.c	FUNCTION_10
0x4000ba6	    0x48c705000000	               mov qword [0x04000bb1], 0	       265	ldexp.c	FUNCTION_10
0x4000bb1	    0x488905000000	            mov qword [0x04000bb8], rax 	       266	ldexp.c	FUNCTION_10
0x4000bb8	    0x48890d000000	            mov qword [0x04000bbf], rcx 	       264	ldexp.c	FUNCTION_10
0x4000bbf	      0xe9b2f6ffff	                           jmp 0x4000276	       264	ldexp.c	FUNCTION_10
0x4000bc4	         0xf1f4000	                         nop dword [rax]	       264	ldexp.c	FUNCTION_10
0x4000bc8	    0x448b2d000000	           mov r13d, dword [0x04000bcf] 	       334	ldexp.c	FUNCTION_13	IF_4
0x4000bcf	          0x4585ed	                         test r13d, r13d	       334	ldexp.c	FUNCTION_13	IF_4
0x4000bd2	     0xf84dcfaffff	                            je 0x40006b4	       334	ldexp.c	FUNCTION_13	IF_4
0x4000bd8	    0x483d00000000	                              cmp rax, 0	       335	ldexp.c	FUNCTION_13	IF_4
0x4000bde	     0xf85d0faffff	                           jne 0x40006b4	       335	ldexp.c	FUNCTION_13	IF_4
0x4000be4	      0xe800000000	                          call 0x4000be9	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000be9	      0x4989442418	             mov qword [r12 + 0x18], rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000bee	    0x488b05000000	            mov rax, qword [0x04000bf5] 	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000bf5	      0xe9bafaffff	                           jmp 0x40006b4	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000bfa	    0x660f1f440000	                    nop word [rax + rax]	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000c00	    0x448b15000000	           mov r10d, dword [0x04000c07] 	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000c07	          0x4585d2	                         test r10d, r10d	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000c0a	     0xf852dfbffff	                           jne 0x400073d	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000c10	    0xc70500000000	               mov dword [0x04000c1a], 1	       192	ldexp.c	FUNCTION_4
0x4000c1a	    0x48c705000000	               mov qword [0x04000c25], 0	       193	ldexp.c	FUNCTION_4
0x4000c25	    0x488905000000	            mov qword [0x04000c2c], rax 	       194	ldexp.c	FUNCTION_4
0x4000c2c	      0xe928fbffff	                           jmp 0x4000759	       194	ldexp.c	FUNCTION_4
0x4000c31	     0xf1f80000000	                         nop dword [rax]	       194	ldexp.c	FUNCTION_4
0x4000c38	    0x488b3d000000	            mov rdi, qword [0x04000c3f] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000c3f	          0x4889ea	                            mov rdx, rbp	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000c42	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000c47	        0x488b4708	                mov rax, qword [rdi + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000c4b	    0xff9028030000	                call qword [rax + 0x328]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000c51	      0xe998faffff	                           jmp 0x40006ee	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000c60	          0x83f95e	                           cmp ecx, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c63	     0xf844b0a0000	                            je 0x40016b4	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c69	     0xf8f1a060000	                            jg 0x4001289	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c6f	          0x83f93c	                           cmp ecx, 0x3c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c72	     0xf846a0a0000	                            je 0x40016e2	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c78	          0x83f93e	                           cmp ecx, 0x3e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c7b	     0xf85c2080000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c81	            0x31c0	                            xor eax, eax	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c83	    0x4c3925000000	            cmp qword [0x04000c8a], r12 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c8a	    0x48c705000000	               mov qword [0x04000c95], 0	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c95	           0xf92c0	                                 setb al	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c98	    0x488905000000	            mov qword [0x04000c9f], rax 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000c9f	      0xe9d2f5ffff	                           jmp 0x4000276	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ca4	         0xf1f4000	                         nop dword [rax]	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ca8	    0x81f925010000	                          cmp ecx, 0x125	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cae	     0xf846c090000	                            je 0x4001620	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cb4	     0xf8f9e050000	                            jg 0x4001258	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cba	    0x81f917010000	                          cmp ecx, 0x117	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cc0	     0xf8410080000	                            je 0x40014d6	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cc6	    0x81f924010000	                          cmp ecx, 0x124	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ccc	     0xf8571080000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000cd2	    0x8b0500000000	            mov eax, dword [0x04000cd8] 	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000cd8	    0xc70500000000	               mov dword [0x04000ce2], 1	       450	ldexp.c	ELSE_1	FUNCTION_17
0x4000ce2	            0x85c0	                           test eax, eax	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000ce4	     0xf84affcffff	                            je 0x4000999	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000cea	    0x48813d000000	               cmp qword [0x04000cf5], 0	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000cf5	     0xf859efcffff	                           jne 0x4000999	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x4000cfb	        0x4983fc01	                              cmp r12, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000cff	    0x488b35000000	            mov rsi, qword [0x04000d06] 	       457	ldexp.c	FUNCTION_17
0x4000d06	    0x488b0d000000	            mov rcx, qword [0x04000d0d] 	       459	ldexp.c	FUNCTION_17	CALL_1
0x4000d0d	     0xf86b30d0000	                           jbe 0x4001ac6	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000d13	      0x498d440cff	                lea rax, [r12 + rcx - 1]	      1619	ldexp.c	FUNCTION_46
0x4000d18	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4000d1a	          0x49f7f4	                                 div r12	      1619	ldexp.c	FUNCTION_46
0x4000d1d	        0x490fafc4	                           imul rax, r12	      1619	ldexp.c	FUNCTION_46
0x4000d21	    0x8b1500000000	            mov edx, dword [0x04000d27] 	       460	ldexp.c	FUNCTION_17	IF_2
0x4000d27	    0x488905000000	            mov qword [0x04000d2e], rax 	       459	ldexp.c	FUNCTION_17	CALL_1
0x4000d2e	          0x83fa04	                              cmp edx, 4	       460	ldexp.c	FUNCTION_17	IF_2
0x4000d31	     0xf84ba0d0000	                            je 0x4001af1	       460	ldexp.c	FUNCTION_17	IF_2
0x4000d37	          0x83fa05	                              cmp edx, 5	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x4000d3a	     0xf848e0d0000	                            je 0x4001ace	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x4000d40	      0x498d7c24ff	                      lea rdi, [r12 - 1]	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000d45	          0x4821f9	                            and rcx, rdi	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000d48	          0x4801c8	                            add rax, rcx	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000d4b	          0x83fa06	                              cmp edx, 6	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000d4e	    0x488905000000	            mov qword [0x04000d55], rax 	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000d55	     0xf841bf5ffff	                            je 0x4000276	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000d5b	            0x85d2	                           test edx, edx	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d5d	     0xf8536fcffff	                           jne 0x4000999	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d63	    0xc70500000000	               mov dword [0x04000d6d], 1	       477	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d6d	    0x488905000000	            mov qword [0x04000d74], rax 	       478	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d74	    0x488935000000	            mov qword [0x04000d7b], rsi 	       479	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d7b	    0x4c8925000000	            mov qword [0x04000d82], r12 	       480	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d82	    0x48c705000000	               mov qword [0x04000d8d], 0	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d8d	      0xe9e4f4ffff	                           jmp 0x4000276	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d92	    0x660f1f440000	                    nop word [rax + rax]	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000d98	    0x448b0d000000	            mov r9d, dword [0x04000d9f] 	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x4000d9f	          0x4585c9	                           test r9d, r9d	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x4000da2	     0xf84cef4ffff	                            je 0x4000276	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x4000da8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4000dac	            0x31d2	                            xor edx, edx	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4000dae	            0x31f6	                            xor esi, esi	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4000db0	      0xe800000000	                          call 0x4000db5	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4000db5	          0x4885c0	                           test rax, rax	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x4000db8	     0xf84190a0000	                            je 0x40017d7	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x4000dbe	    0xf68090000000	               test byte [rax + 0x90], 1	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4000dc5	     0xf84abf4ffff	                            je 0x4000276	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4000dcb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x4000dcf	    0x48c705000000	               mov qword [0x04000dda], 0	       252	ldexp.c	FUNCTION_9
0x4000dda	    0xc70500000000	               mov dword [0x04000de4], 1	       251	ldexp.c	FUNCTION_9
0x4000de4	    0x48c705000000	               mov qword [0x04000def], 0	       253	ldexp.c	FUNCTION_9
0x4000def	    0x488905000000	            mov qword [0x04000df6], rax 	       254	ldexp.c	FUNCTION_9
0x4000df6	      0xe97bf4ffff	                           jmp 0x4000276	       254	ldexp.c	FUNCTION_9
0x4000dfb	       0xf1f440000	                   nop dword [rax + rax]	       254	ldexp.c	FUNCTION_9
0x4000e00	    0x8b1500000000	            mov edx, dword [0x04000e06] 	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4000e06	            0x85d2	                           test edx, edx	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4000e08	     0xf8468f4ffff	                            je 0x4000276	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4000e0e	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4000e12	            0x31f6	                            xor esi, esi	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4000e14	      0xe800000000	                          call 0x4000e19	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4000e19	          0x4885c0	                           test rax, rax	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x4000e1c	     0xf848b0a0000	                            je 0x40018ad	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x4000e22	        0x488b4020	            mov rax, qword [rax + 0x20] 	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4000e26	    0x488b15000000	            mov rdx, qword [0x04000e2d] 	       260	ldexp.c	FUNCTION_10
0x4000e2d	    0xc70500000000	               mov dword [0x04000e37], 1	       262	ldexp.c	FUNCTION_10
0x4000e37	    0xc70500000000	               mov dword [0x04000e41], 1	       263	ldexp.c	FUNCTION_10
0x4000e41	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x4000e45	    0x48c705000000	               mov qword [0x04000e50], 0	       265	ldexp.c	FUNCTION_10
0x4000e50	    0x488915000000	            mov qword [0x04000e57], rdx 	       266	ldexp.c	FUNCTION_10
0x4000e57	    0x488905000000	            mov qword [0x04000e5e], rax 	       264	ldexp.c	FUNCTION_10
0x4000e5e	      0xe913f4ffff	                           jmp 0x4000276	       264	ldexp.c	FUNCTION_10
0x4000e63	       0xf1f440000	                   nop dword [rax + rax]	       264	ldexp.c	FUNCTION_10
0x4000e68	    0x8b0d00000000	            mov ecx, dword [0x04000e6e] 	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4000e6e	            0x85c9	                           test ecx, ecx	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4000e70	     0xf8400f4ffff	                            je 0x4000276	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x4000e76	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4000e7a	            0x31f6	                            xor esi, esi	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4000e7c	      0xe800000000	                          call 0x4000e81	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x4000e81	          0x4885c0	                           test rax, rax	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x4000e84	     0xf84230a0000	                            je 0x40018ad	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x4000e8a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4000e8e	      0xe9a6faffff	                           jmp 0x4000939	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4000e93	       0xf1f440000	                   nop dword [rax + rax]	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4000e98	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4000e9c	    0x488b3d000000	            mov rdi, qword [0x04000ea3] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4000ea3	          0x4531c0	                            xor r8d, r8d	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4000ea6	            0x31c9	                            xor ecx, ecx	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4000ea8	    0x41b901000000	                              mov r9d, 1	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4000eae	      0xbe00000000	                              mov esi, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4000eb3	      0xe800000000	                          call 0x4000eb8	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4000eb8	          0x4885c0	                           test rax, rax	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ebb	     0xf8436090000	                            je 0x40017f7	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ec1	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ec5	          0x8d51fd	                      lea edx, [rcx - 3]	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ec8	            0x31c9	                            xor ecx, ecx	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4000eca	          0x80fa02	                               cmp dl, 2	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ecd	            0x770f	                            ja 0x4000ede	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ecf	        0xf6401908	               test byte [rax + 0x19], 8	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ed3	     0xf8557050000	                           jne 0x4001430	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ed9	      0xb901000000	                              mov ecx, 1	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4000ede	    0xc70500000000	               mov dword [0x04000ee8], 1	       242	ldexp.c	FUNCTION_8
0x4000ee8	    0x48890d000000	            mov qword [0x04000eef], rcx 	       243	ldexp.c	FUNCTION_8
0x4000eef	    0x48c705000000	               mov qword [0x04000efa], 0	       244	ldexp.c	FUNCTION_8
0x4000efa	    0x48c705000000	               mov qword [0x04000f05], 0	       245	ldexp.c	FUNCTION_8
0x4000f05	      0xe96cf3ffff	                           jmp 0x4000276	       245	ldexp.c	FUNCTION_8
0x4000f0a	    0x660f1f440000	                    nop word [rax + rax]	       245	ldexp.c	FUNCTION_8
0x4000f10	    0x8b0500000000	            mov eax, dword [0x04000f16] 	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4000f16	            0x85c0	                           test eax, eax	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4000f18	     0xf8458f3ffff	                            je 0x4000276	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4000f1e	            0x31d2	                            xor edx, edx	       694	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4000f20	          0x83f801	                              cmp eax, 1	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x4000f23	            0x7419	                            je 0x4000f3e	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x4000f25	    0x488b3d000000	            mov rdi, qword [0x04000f2c] 	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4000f2c	      0xbe00000000	                              mov esi, 0	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4000f31	        0x488b4708	                mov rax, qword [rdi + 8]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4000f35	    0xff90a0020000	                call qword [rax + 0x2a0]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4000f3b	          0x4863d0	                         movsxd rdx, eax	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x4000f3e	    0xc70500000000	               mov dword [0x04000f48], 1	       242	ldexp.c	FUNCTION_8
0x4000f48	    0x488915000000	            mov qword [0x04000f4f], rdx 	       243	ldexp.c	FUNCTION_8
0x4000f4f	    0x48c705000000	               mov qword [0x04000f5a], 0	       244	ldexp.c	FUNCTION_8
0x4000f5a	    0x48c705000000	               mov qword [0x04000f65], 0	       245	ldexp.c	FUNCTION_8
0x4000f65	      0xe90cf3ffff	                           jmp 0x4000276	       245	ldexp.c	FUNCTION_8
0x4000f6a	    0x488b3d000000	            mov rdi, qword [0x04000f71] 	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x4000f71	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4000f75	          0x4885ff	                           test rdi, rdi	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x4000f78	            0x7410	                            je 0x4000f8a	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x4000f7a	          0x4889ee	                            mov rsi, rbp	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4000f7d	      0xe800000000	                          call 0x4000f82	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4000f82	            0x85c0	                           test eax, eax	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4000f84	     0xf845e040000	                            je 0x40013e8	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4000f8a	        0x807d002e	                    cmp byte [rbp], 0x2e	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4000f8e	            0x750a	                           jne 0x4000f9a	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4000f90	        0x807d0100	                   cmp byte [rbp + 1], 0	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4000f94	     0xf846b070000	                            je 0x4001705	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4000f9a	    0x488b3d000000	            mov rdi, qword [0x04000fa1] 	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fa1	          0x4531c0	                            xor r8d, r8d	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fa4	          0x4889ea	                            mov rdx, rbp	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fa7	    0x41b901000000	                              mov r9d, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fad	      0xb901000000	                              mov ecx, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fb2	      0xbe00000000	                              mov esi, 0	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fb7	      0xe800000000	                          call 0x4000fbc	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fbc	          0x4885c0	                           test rax, rax	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x4000fbf	          0x4889c5	                            mov rbp, rax	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4000fc2	     0xf84f8080000	                            je 0x40018c0	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x4000fc8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4000fcc	          0x8d50fd	                      lea edx, [rax - 3]	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4000fcf	          0x80fa01	                               cmp dl, 1	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4000fd2	     0xf86b0040000	                           jbe 0x4001488	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4000fd8	    0x8b1500000000	            mov edx, dword [0x04000fde] 	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000fde	          0x83fa04	                              cmp edx, 4	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000fe1	            0x7419	                            je 0x4000ffc	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000fe3	          0x83fa01	                              cmp edx, 1	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000fe6	     0xf8420030000	                            je 0x400130c	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000fec	    0x448b15000000	           mov r10d, dword [0x04000ff3] 	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000ff3	          0x4585d2	                         test r10d, r10d	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000ff6	     0xf8410030000	                            je 0x400130c	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x4000ffc	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001000	      0xba05000000	                              mov edx, 5	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001005	      0xbe00000000	                              mov esi, 0	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x400100a	            0x31ff	                            xor edi, edi	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x400100c	      0xe800000000	                          call 0x4001011	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001011	          0x4c89e2	                            mov rdx, r12	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001014	          0x4889c7	                            mov rdi, rax	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001017	          0x4889de	                            mov rsi, rbx	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x400101a	            0x31c0	                            xor eax, eax	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x400101c	      0xe800000000	                          call 0x4001021	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x4001021	    0x48833d000000	               cmp qword [0x04001029], 0	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001029	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001030	        0x480f45e8	                         cmovne rbp, rax	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001034	    0x48892d000000	            mov qword [0x0400103b], rbp 	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x400103b	      0xe936f2ffff	                           jmp 0x4000276	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4001040	    0x81fa26010000	                          cmp edx, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001046	     0xf85d7f7ffff	                           jne 0x4000823	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400104c	    0x8b0d00000000	            mov ecx, dword [0x04001052] 	       343	ldexp.c	FUNCTION_14	IF_1
0x4001052	            0x85c9	                           test ecx, ecx	       343	ldexp.c	FUNCTION_14	IF_1
0x4001054	     0xf843ff9ffff	                            je 0x4000999	       343	ldexp.c	FUNCTION_14	IF_1
0x400105a	    0x48813d000000	               cmp qword [0x04001065], 0	       344	ldexp.c	FUNCTION_14	IF_1
0x4001065	     0xf852ef9ffff	                           jne 0x4000999	       344	ldexp.c	FUNCTION_14	IF_1
0x400106b	    0x8b0500000000	            mov eax, dword [0x04001071] 	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001071	          0x8d50ff	                      lea edx, [rax - 1]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001074	          0x83fa01	                              cmp edx, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001077	     0xf86a7090000	                           jbe 0x4001a24	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400107d	          0x83e804	                              sub eax, 4	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4001080	          0x83f802	                              cmp eax, 2	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4001083	     0xf86edf1ffff	                           jbe 0x4000276	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4001089	      0xe90bf9ffff	                           jmp 0x4000999	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400108e	            0x6690	                                     nop	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4001090	    0x48f715000000	                  not qword [0x04001097]	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001097	      0xe9daf1ffff	                           jmp 0x4000276	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400109c	            0x31c0	                            xor eax, eax	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400109e	    0x48833d000000	               cmp qword [0x040010a6], 0	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40010a6	           0xf94c0	                                 sete al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40010a9	    0x488905000000	            mov qword [0x040010b0], rax 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40010b0	      0xe9c1f1ffff	                           jmp 0x4000276	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40010b5	    0x48f71d000000	                  neg qword [0x040010bc]	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40010bc	      0xe9b5f1ffff	                           jmp 0x4000276	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40010c1	    0x8b3500000000	            mov esi, dword [0x040010c7] 	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40010c7	            0x85f6	                           test esi, esi	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40010c9	     0xf84caf8ffff	                            je 0x4000999	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40010cf	    0x488b05000000	            mov rax, qword [0x040010d6] 	       183	ldexp.c	FUNCTION_3	IF_1
0x40010d6	    0x488b0d000000	            mov rcx, qword [0x040010dd] 	       183	ldexp.c	FUNCTION_3	IF_1
0x40010dd	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x40010e0	            0x740b	                            je 0x40010ed	       183	ldexp.c	FUNCTION_3	IF_1
0x40010e2	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x40010e6	    0x48030d000000	             add rcx, qword [0x040010ed]	       184	ldexp.c	FUNCTION_3	IF_1
0x40010ed	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x40010f1	    0x48c705000000	               mov qword [0x040010fc], 0	       185	ldexp.c	FUNCTION_3
0x40010fc	    0xc70500000000	               mov dword [0x04001106], 0	       186	ldexp.c	FUNCTION_3
0x4001106	    0x488b05000000	            mov rax, qword [0x0400110d] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x400110d	     0xf86d2f7ffff	                           jbe 0x40008e5	      1615	ldexp.c	FUNCTION_46	IF_1
0x4001113	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x4001118	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x400111a	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x400111d	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4001121	      0xe9bff7ffff	                           jmp 0x40008e5	      1619	ldexp.c	FUNCTION_46
0x4001126	    0x8b3d00000000	            mov edi, dword [0x0400112c] 	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x400112c	            0x85ff	                           test edi, edi	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x400112e	     0xf8465f8ffff	                            je 0x4000999	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x4001134	    0x488b0d000000	            mov rcx, qword [0x0400113b] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x400113b	    0x488b05000000	            mov rax, qword [0x04001142] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4001142	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4001146	     0xf86dafcffff	                           jbe 0x4000e26	      1615	ldexp.c	FUNCTION_46	IF_1
0x400114c	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x4001151	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4001153	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4001156	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x400115a	      0xe9c7fcffff	                           jmp 0x4000e26	      1619	ldexp.c	FUNCTION_46
0x400115f	      0xbe00000000	                              mov esi, 0	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001164	            0x31ff	                            xor edi, edi	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001166	      0xba05000000	                              mov edx, 5	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x400116b	      0xe800000000	                          call 0x4001170	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001170	          0x4889ee	                            mov rsi, rbp	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001173	          0x4889c7	                            mov rdi, rax	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001176	            0x31c0	                            xor eax, eax	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001178	      0xe800000000	                          call 0x400117d	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x400117d	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001181	      0xe9faf9ffff	                           jmp 0x4000b80	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x4001186	            0x31ed	                            xor ebp, ebp	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4001188	      0xe9d0f1ffff	                           jmp 0x400035d	       559	ldexp.c	ELSE_3	FUNCTION_19
0x400118d	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4001191	    0x488b3d000000	            mov rdi, qword [0x04001198] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4001198	            0x31c9	                            xor ecx, ecx	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400119a	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011a0	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011a5	      0xe800000000	                          call 0x40011aa	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011aa	          0x4885c0	                           test rax, rax	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40011ad	          0x4889c5	                            mov rbp, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011b0	     0xf857ff4ffff	                           jne 0x4000635	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40011b6	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011ba	            0x31ff	                            xor edi, edi	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011bc	      0xba05000000	                              mov edx, 5	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011c1	      0xbe00000000	                              mov esi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011c6	      0xe800000000	                          call 0x40011cb	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011cb	          0x4c89e6	                            mov rsi, r12	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011ce	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011d1	            0x31c0	                            xor eax, eax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011d3	      0xe800000000	                          call 0x40011d8	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011d8	      0xe958f4ffff	                           jmp 0x4000635	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011dd	           0xf1f00	                         nop dword [rax]	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40011e0	    0x81f912010000	                          cmp ecx, 0x112	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40011e6	     0xf84c4030000	                            je 0x40015b0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40011ec	    0x81f913010000	                          cmp ecx, 0x113	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40011f2	     0xf854b030000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40011f8	    0x488b0d000000	            mov rcx, qword [0x040011ff] 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40011ff	          0x49d3e4	                             shl r12, cl	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001202	    0x48392d000000	            cmp qword [0x04001209], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x4001209	    0x4c8925000000	            mov qword [0x04001210], r12 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001210	     0xf8560f0ffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x4001216	      0xe99af1ffff	                           jmp 0x40003b5	       436	ldexp.c	FUNCTION_16	IF_1
0x400121b	       0xf1f440000	                   nop dword [rax + rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x4001220	          0x83f92b	                           cmp ecx, 0x2b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001223	     0xf847f040000	                            je 0x40016a8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001229	          0x83f92d	                           cmp ecx, 0x2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400122c	     0xf8511030000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001232	    0x4c2b25000000	             sub r12, qword [0x04001239]	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001239	    0x48392d000000	            cmp qword [0x04001240], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x4001240	    0x4c8925000000	            mov qword [0x04001247], r12 	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001247	     0xf8529f0ffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x400124d	      0xe963f1ffff	                           jmp 0x40003b5	       436	ldexp.c	FUNCTION_16	IF_1
0x4001252	    0x660f1f440000	                    nop word [rax + rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x4001258	    0x81f945010000	                          cmp ecx, 0x145	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400125e	     0xf846c040000	                            je 0x40016d0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001264	    0x81f946010000	                          cmp ecx, 0x146	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400126a	     0xf85d3020000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001270	    0x4c3925000000	            cmp qword [0x04001277], r12 	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x4001277	     0xf86f9efffff	                           jbe 0x4000276	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x400127d	    0x4c8925000000	            mov qword [0x04001284], r12 	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x4001284	      0xe9edefffff	                           jmp 0x4000276	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x4001289	          0x83f97c	                           cmp ecx, 0x7c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400128c	     0xf84d8010000	                            je 0x400146a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001292	    0x81f90d010000	                          cmp ecx, 0x10d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001298	     0xf85a5020000	                           jne 0x4001543	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400129e	          0x4d85e4	                           test r12, r12	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012a1	      0xb801000000	                              mov eax, 1	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012a6	            0x750d	                           jne 0x40012b5	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012a8	            0x31c0	                            xor eax, eax	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012aa	    0x48833d000000	               cmp qword [0x040012b2], 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012b2	           0xf95c0	                                setne al	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012b5	    0x488905000000	            mov qword [0x040012bc], rax 	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012bc	    0x48c705000000	               mov qword [0x040012c7], 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012c7	      0xe9aaefffff	                           jmp 0x4000276	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012cc	    0x488b05000000	            mov rax, qword [0x040012d3] 	       243	ldexp.c	FUNCTION_8
0x40012d3	    0xc70500000000	               mov dword [0x040012dd], 1	       242	ldexp.c	FUNCTION_8
0x40012dd	    0x488905000000	            mov qword [0x040012e4], rax 	       243	ldexp.c	FUNCTION_8
0x40012e4	      0xe98defffff	                           jmp 0x4000276	       243	ldexp.c	FUNCTION_8
0x40012e9	            0x31ff	                            xor edi, edi	       314	ldexp.c	FUNCTION_13	CALL_3
0x40012eb	      0xba05000000	                              mov edx, 5	       314	ldexp.c	FUNCTION_13	CALL_3
0x40012f0	      0xbe00000000	                              mov esi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x40012f5	      0xe800000000	                          call 0x40012fa	       314	ldexp.c	FUNCTION_13	CALL_3
0x40012fa	          0x4c89ee	                            mov rsi, r13	       314	ldexp.c	FUNCTION_13	CALL_3
0x40012fd	          0x4889c7	                            mov rdi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001300	            0x31c0	                            xor eax, eax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001302	      0xe800000000	                          call 0x4001307	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001307	      0xe969f3ffff	                           jmp 0x4000675	       314	ldexp.c	FUNCTION_13	CALL_3
0x400130c	            0x84c0	                             test al, al	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x400130e	     0xf850dfdffff	                           jne 0x4001021	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4001314	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001319	        0xc6451801	                mov byte [rbp + 0x18], 1	       777	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x400131d	    0x48c745280000	               mov qword [rbp + 0x28], 0	       778	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4001325	     0xf85f6fcffff	                           jne 0x4001021	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x400132b	    0x488b3d000000	            mov rdi, qword [0x04001332] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001332	        0x483b6f30	            cmp rbp, qword [rdi + 0x30] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4001336	     0xf84e5fcffff	                            je 0x4001021	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x400133c	          0x4889ee	                            mov rsi, rbp	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x400133f	      0xe800000000	                          call 0x4001344	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4001344	      0xe9d8fcffff	                           jmp 0x4001021	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4001349	     0xf1f80000000	                         nop dword [rax]	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4001350	    0x488b05000000	            mov rax, qword [0x04001357] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4001357	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400135d	          0x4889c1	                            mov rcx, rax	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4001360	     0xf8427060000	                            je 0x400198d	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4001366	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400136c	     0xf841b060000	                            je 0x400198d	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4001372	    0x8b1500000000	            mov edx, dword [0x04001378] 	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4001378	            0x85d2	                           test edx, edx	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400137a	     0xf843c040000	                            je 0x40017bc	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4001380	    0x48833d000000	               cmp qword [0x04001388], 0	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4001388	     0xf852e040000	                           jne 0x40017bc	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400138e	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4001392	          0x8b7110	            mov esi, dword [rcx + 0x10] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4001395	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x4001398	     0xf8418070000	                            je 0x4001ab6	       931	ldexp.c	FUNCTION_23
0x400139e	            0x8b39	                    mov edi, dword [rcx]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40013a0	        0x488d5118	                   lea rdx, [rcx + 0x18]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40013a4	      0xe800000000	                          call 0x40013a9	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40013a9	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40013ab	     0xf84cf030000	                            je 0x4001780	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40013b1	    0x8b1500000000	            mov edx, dword [0x040013b7] 	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40013b7	            0x85d2	                           test edx, edx	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40013b9	     0xf8521050000	                           jne 0x40018e0	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40013bf	    0x833d00000000	               cmp dword [0x040013c6], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40013c6	     0xf84aaeeffff	                            je 0x4000276	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40013cc	      0xba05000000	                              mov edx, 5	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40013d1	      0xbe00000000	                              mov esi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40013d6	            0x31ff	                            xor edi, edi	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40013d8	      0xe800000000	                          call 0x40013dd	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40013dd	          0x4889de	                            mov rsi, rbx	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40013e0	          0x4889c7	                            mov rdi, rax	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40013e3	      0xe997f5ffff	                           jmp 0x400097f	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40013e8	    0x488b3d000000	            mov rdi, qword [0x040013ef] 	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40013ef	          0x4531c0	                            xor r8d, r8d	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40013f2	            0x31c9	                            xor ecx, ecx	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40013f4	    0x41b901000000	                              mov r9d, 1	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40013fa	          0x4889ea	                            mov rdx, rbp	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40013fd	      0xbe00000000	                              mov esi, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x4001402	      0xe800000000	                          call 0x4001407	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x4001407	          0x4885c0	                           test rax, rax	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400140a	            0x7410	                            je 0x400141c	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400140c	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001410	          0x8d51fd	                      lea edx, [rcx - 3]	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001413	          0x80fa01	                               cmp dl, 1	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001416	     0xf86dc040000	                           jbe 0x40018f8	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400141c	    0x48c705000000	               mov qword [0x04001427], 0	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001427	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400142b	      0xe95afbffff	                           jmp 0x4000f8a	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001430	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       298	ldexp.c	FUNCTION_12
0x4001434	            0x31c9	                            xor ecx, ecx	       298	ldexp.c	FUNCTION_12
0x4001436	            0x31d2	                            xor edx, edx	       298	ldexp.c	FUNCTION_12
0x4001438	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x400143d	      0xe800000000	                          call 0x4001442	       298	ldexp.c	FUNCTION_12
0x4001442	          0x4885c0	                           test rax, rax	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001445	     0xf848efaffff	                            je 0x4000ed9	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x400144b	        0xf6402101	               test byte [rax + 0x21], 1	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400144f	     0xf8584faffff	                           jne 0x4000ed9	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001455	     0xfb60d000000	           movzx ecx, byte [0x0400145c] 	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400145c	          0x384820	               cmp byte [rax + 0x20], cl	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400145f	           0xf94c1	                                 sete cl	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001462	           0xfb6c9	                           movzx ecx, cl	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4001465	      0xe974faffff	                           jmp 0x4000ede	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400146a	    0x4c0925000000	              or qword [0x04001471], r12	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001471	    0x48392d000000	            cmp qword [0x04001478], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x4001478	     0xf85f8edffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x400147e	      0xe932efffff	                           jmp 0x40003b5	       436	ldexp.c	FUNCTION_16	IF_1
0x4001483	       0xf1f440000	                   nop dword [rax + rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x4001488	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x400148c	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4001490	          0x4885d2	                           test rdx, rdx	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x4001493	     0xf8460050000	                            je 0x40019f9	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x4001499	    0x4881fa000000	                              cmp rdx, 0	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40014a0	     0xf840e050000	                            je 0x40019b4	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40014a6	        0x488b4060	            mov rax, qword [rax + 0x60] 	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40014aa	        0x48034530	             add rax, qword [rbp + 0x30]	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x40014ae	    0x48c705000000	               mov qword [0x040014b9], 0	       253	ldexp.c	FUNCTION_9
0x40014b9	    0xc70500000000	               mov dword [0x040014c3], 1	       251	ldexp.c	FUNCTION_9
0x40014c3	    0x488915000000	            mov qword [0x040014ca], rdx 	       254	ldexp.c	FUNCTION_9
0x40014ca	    0x488905000000	            mov qword [0x040014d1], rax 	       252	ldexp.c	FUNCTION_9
0x40014d1	      0xe94bfbffff	                           jmp 0x4001021	       252	ldexp.c	FUNCTION_9
0x40014d6	    0x488b0d000000	            mov rcx, qword [0x040014dd] 	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x40014dd	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x40014e1	     0xf8696fdffff	                           jbe 0x400127d	      1615	ldexp.c	FUNCTION_46	IF_1
0x40014e7	      0x4a8d4421ff	                lea rax, [rcx + r12 - 1]	      1619	ldexp.c	FUNCTION_46
0x40014ec	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x40014ee	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x40014f1	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x40014f5	          0x4989c4	                            mov r12, rax	      1619	ldexp.c	FUNCTION_46
0x40014f8	      0xe980fdffff	                           jmp 0x400127d	      1619	ldexp.c	FUNCTION_46
0x40014fd	            0x31c0	                            xor eax, eax	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40014ff	    0x4c3925000000	            cmp qword [0x04001506], r12 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001506	    0x48c705000000	               mov qword [0x04001511], 0	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001511	           0xf94c0	                                 sete al	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001514	    0x488905000000	            mov qword [0x0400151b], rax 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400151b	      0xe956edffff	                           jmp 0x4000276	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001520	            0x31c0	                            xor eax, eax	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001522	    0x4c3925000000	            cmp qword [0x04001529], r12 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001529	    0x48c705000000	               mov qword [0x04001534], 0	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001534	           0xf93c0	                                setae al	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001537	    0x488905000000	            mov qword [0x0400153e], rax 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400153e	      0xe933edffff	                           jmp 0x4000276	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001543	      0xbe97020000	                          mov esi, 0x297	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4001548	      0xe96cf2ffff	                           jmp 0x40007b9	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x400154d	    0x488b0d000000	            mov rcx, qword [0x04001554] 	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4001554	          0x4885c9	                           test rcx, rcx	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4001557	     0xf84a1020000	                            je 0x40017fe	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x400155d	          0x4c89e0	                            mov rax, r12	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4001560	            0x4899	                                     cqo	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4001562	          0x48f7f9	                                idiv rcx	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4001565	    0x488915000000	            mov qword [0x0400156c], rdx 	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x400156c	    0x48392d000000	            cmp qword [0x04001573], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x4001573	     0xf85fdecffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x4001579	      0xe937eeffff	                           jmp 0x40003b5	       436	ldexp.c	FUNCTION_16	IF_1
0x400157e	            0x31c0	                            xor eax, eax	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001580	          0x4d85e4	                           test r12, r12	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001583	     0xf842cfdffff	                            je 0x40012b5	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001589	      0xe91afdffff	                           jmp 0x40012a8	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400158e	    0x4c0faf250000	            imul r12, qword [0x04001596]	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001596	    0x48392d000000	            cmp qword [0x0400159d], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x400159d	    0x4c8925000000	            mov qword [0x040015a4], r12 	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015a4	     0xf85ccecffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x40015aa	      0xe906eeffff	                           jmp 0x40003b5	       436	ldexp.c	FUNCTION_16	IF_1
0x40015af	              0x90	                                     nop	       436	ldexp.c	FUNCTION_16	IF_1
0x40015b0	            0x31c0	                            xor eax, eax	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015b2	    0x4c3925000000	            cmp qword [0x040015b9], r12 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015b9	    0x48c705000000	               mov qword [0x040015c4], 0	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015c4	           0xf96c0	                                setbe al	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015c7	    0x488905000000	            mov qword [0x040015ce], rax 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015ce	      0xe9a3ecffff	                           jmp 0x4000276	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015d3	    0x488b0d000000	            mov rcx, qword [0x040015da] 	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015da	          0x4885c9	                           test rcx, rcx	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015dd	     0xf844f020000	                            je 0x4001832	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015e3	          0x4c89e0	                            mov rax, r12	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015e6	            0x4899	                                     cqo	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015e8	          0x48f7f9	                                idiv rcx	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015eb	    0x488905000000	            mov qword [0x040015f2], rax 	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015f2	      0xe975ffffff	                           jmp 0x400156c	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x40015f7	    0x488b0d000000	            mov rcx, qword [0x040015fe] 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40015fe	          0x49d3ec	                             shr r12, cl	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001601	    0x48392d000000	            cmp qword [0x04001608], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x4001608	    0x4c8925000000	            mov qword [0x0400160f], r12 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400160f	     0xf8561ecffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x4001615	      0xe99bedffff	                           jmp 0x40003b5	       436	ldexp.c	FUNCTION_16	IF_1
0x400161a	    0x660f1f440000	                    nop word [rax + rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x4001620	    0x8b0500000000	            mov eax, dword [0x04001626] 	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4001626	    0x488b0d000000	            mov rcx, qword [0x0400162d] 	       495	ldexp.c	ELSE_5	FUNCTION_18
0x400162d	    0xc70500000000	               mov dword [0x04001637], 2	       494	ldexp.c	ELSE_5	FUNCTION_18
0x4001637	            0x85c0	                           test eax, eax	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4001639	    0x48890d000000	            mov qword [0x04001640], rcx 	       495	ldexp.c	ELSE_5	FUNCTION_18
0x4001640	     0xf8453f3ffff	                            je 0x4000999	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4001646	    0x48813d000000	               cmp qword [0x04001651], 0	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4001651	     0xf8542f3ffff	                           jne 0x4000999	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4001657	    0x8b1500000000	            mov edx, dword [0x0400165d] 	       499	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x400165d	          0x8d72fc	                      lea esi, [rdx - 4]	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4001660	          0x83fa01	                              cmp edx, 1	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4001663	           0xf94c0	                                 sete al	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4001666	          0x83fe02	                              cmp esi, 2	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4001669	            0x7608	                           jbe 0x4001673	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x400166b	            0x84c0	                             test al, al	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x400166d	     0xf8426f3ffff	                            je 0x4000999	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4001673	          0x83fa04	                              cmp edx, 4	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4001676	     0xf84f1030000	                            je 0x4001a6d	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x400167c	            0x84c0	                             test al, al	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x400167e	     0xf85e9030000	                           jne 0x4001a6d	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4001684	          0x83ea01	                              sub edx, 1	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4001687	    0x4c8925000000	            mov qword [0x0400168e], r12 	       516	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	ELSE_2
0x400168e	     0xf85e2ebffff	                           jne 0x4000276	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4001694	    0xc70500000000	               mov dword [0x0400169e], 2	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x400169e	      0xe9d3ebffff	                           jmp 0x4000276	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x40016a3	       0xf1f440000	                   nop dword [rax + rax]	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x40016a8	    0x4c0125000000	            add qword [0x040016af], r12 	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40016af	      0xe9b8feffff	                           jmp 0x400156c	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40016b4	    0x4c3125000000	             xor qword [0x040016bb], r12	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40016bb	    0x48392d000000	            cmp qword [0x040016c2], rbp 	       436	ldexp.c	FUNCTION_16	IF_1
0x40016c2	     0xf85aeebffff	                           jne 0x4000276	       436	ldexp.c	FUNCTION_16	IF_1
0x40016c8	      0xe9e8ecffff	                           jmp 0x40003b5	       436	ldexp.c	FUNCTION_16	IF_1
0x40016cd	           0xf1f00	                         nop dword [rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x40016d0	    0x4c3925000000	            cmp qword [0x040016d7], r12 	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40016d7	     0xf82a0fbffff	                            jb 0x400127d	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40016dd	      0xe994ebffff	                           jmp 0x4000276	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x40016e2	            0x31c0	                            xor eax, eax	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40016e4	    0x4c3925000000	            cmp qword [0x040016eb], r12 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40016eb	    0x48c705000000	               mov qword [0x040016f6], 0	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40016f6	           0xf97c0	                                 seta al	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40016f9	    0x488905000000	            mov qword [0x04001700], rax 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001700	      0xe971ebffff	                           jmp 0x4000276	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001705	    0x488b15000000	            mov rdx, qword [0x0400170c] 	       260	ldexp.c	FUNCTION_10
0x400170c	    0x488b05000000	            mov rax, qword [0x04001713] 	       264	ldexp.c	FUNCTION_10
0x4001713	    0xc70500000000	               mov dword [0x0400171d], 1	       262	ldexp.c	FUNCTION_10
0x400171d	    0xc70500000000	               mov dword [0x04001727], 1	       263	ldexp.c	FUNCTION_10
0x4001727	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x400172b	    0x48c705000000	               mov qword [0x04001736], 0	       265	ldexp.c	FUNCTION_10
0x4001736	    0x488915000000	            mov qword [0x0400173d], rdx 	       266	ldexp.c	FUNCTION_10
0x400173d	    0x488905000000	            mov qword [0x04001744], rax 	       264	ldexp.c	FUNCTION_10
0x4001744	      0xe92debffff	                           jmp 0x4000276	       264	ldexp.c	FUNCTION_10
0x4001749	      0xba05000000	                              mov edx, 5	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x400174e	      0xbe00000000	                              mov esi, 0	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001753	            0x31ff	                            xor edi, edi	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001755	      0xe800000000	                          call 0x400175a	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x400175a	        0x4883c408	                              add rsp, 8	      1231	ldexp.c	FUNCTION_28
0x400175e	          0x4889ea	                            mov rdx, rbp	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001761	          0x4889de	                            mov rsi, rbx	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001764	              0x5b	                                 pop rbx	      1231	ldexp.c	FUNCTION_28
0x4001765	              0x5d	                                 pop rbp	      1231	ldexp.c	FUNCTION_28
0x4001766	            0x415c	                                 pop r12	      1231	ldexp.c	FUNCTION_28
0x4001768	            0x415d	                                 pop r13	      1231	ldexp.c	FUNCTION_28
0x400176a	          0x4889c7	                            mov rdi, rax	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x400176d	            0x31c0	                            xor eax, eax	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x400176f	      0xe900000000	                           jmp 0x4001774	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4001774	    0x4c892d000000	            mov qword [0x0400177b], r13 	       580	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x400177b	      0xe9ddebffff	                           jmp 0x400035d	       580	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4001780	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4001784	        0x83781000	               cmp dword [rax + 0x10], 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001788	            0x7509	                           jne 0x4001793	       977	ldexp.c	FUNCTION_26	CALL_2
0x400178a	          0x83382b	                   cmp dword [rax], 0x2b	       975	ldexp.c	FUNCTION_26
0x400178d	     0xf8405040000	                            je 0x4001b98	       975	ldexp.c	FUNCTION_26
0x4001793	    0x813817010000	                  cmp dword [rax], 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x4001799	            0x7514	                           jne 0x40017af	       987	ldexp.c	FUNCTION_27	IF_1
0x400179b	        0x83781002	               cmp dword [rax + 0x10], 2	       987	ldexp.c	FUNCTION_27	IF_1
0x400179f	            0x750e	                           jne 0x40017af	       987	ldexp.c	FUNCTION_27	IF_1
0x40017a1	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x40017a5	        0x837a1001	               cmp dword [rdx + 0x10], 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40017a9	     0xf8455030000	                            je 0x4001b04	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40017af	    0x488b0d000000	            mov rcx, qword [0x040017b6] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40017b6	    0x8b1500000000	            mov edx, dword [0x040017bc] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40017bc	    0x814920000020	         or dword [rcx + 0x20], 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40017c3	      0xe9effbffff	                           jmp 0x40013b7	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40017c8	    0x48892d000000	            mov qword [0x040017cf], rbp 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40017cf	          0x48892a	                    mov qword [rdx], rbp	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40017d2	      0xe99feaffff	                           jmp 0x4000276	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40017d7	    0x833d00000000	               cmp dword [0x040017de], 4	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x40017de	     0xf8592eaffff	                           jne 0x4000276	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x40017e4	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40017e8	      0xba05000000	                              mov edx, 5	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40017ed	      0xbe00000000	                              mov esi, 0	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40017f2	      0xe95cffffff	                           jmp 0x4001753	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x40017f7	            0x31c9	                            xor ecx, ecx	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x40017f9	      0xe9e0f6ffff	                           jmp 0x4000ede	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x40017fe	    0x833d00000000	               cmp dword [0x04001805], 1	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001805	     0xf8461fdffff	                            je 0x400156c	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x400180b	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x400180f	      0xba05000000	                              mov edx, 5	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001814	      0xbe00000000	                              mov esi, 0	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001819	            0x31ff	                            xor edi, edi	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400181b	      0xe800000000	                          call 0x4001820	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001820	          0x4889de	                            mov rsi, rbx	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001823	          0x4889c7	                            mov rdi, rax	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001826	            0x31c0	                            xor eax, eax	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001828	      0xe800000000	                          call 0x400182d	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400182d	      0xe93afdffff	                           jmp 0x400156c	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001832	    0x833d00000000	               cmp dword [0x04001839], 1	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x4001839	     0xf842dfdffff	                            je 0x400156c	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x400183f	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001843	      0xba05000000	                              mov edx, 5	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001848	      0xbe00000000	                              mov esi, 0	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400184d	            0xebca	                           jmp 0x4001819	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400184f	    0x833d00000000	               cmp dword [0x04001856], 4	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x4001856	            0x7525	                           jne 0x400187d	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x4001858	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400185c	      0xba05000000	                              mov edx, 5	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001861	      0xbe00000000	                              mov esi, 0	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001866	            0x31ff	                            xor edi, edi	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001868	      0xe800000000	                          call 0x400186d	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400186d	          0x4889ea	                            mov rdx, rbp	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001870	          0x4889c7	                            mov rdi, rax	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001873	          0x4889de	                            mov rsi, rbx	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001876	            0x31c0	                            xor eax, eax	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4001878	      0xe800000000	                          call 0x400187d	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400187d	    0xc70500000000	               mov dword [0x04001887], 1	       242	ldexp.c	FUNCTION_8
0x4001887	    0x48c705000000	               mov qword [0x04001892], 0	       243	ldexp.c	FUNCTION_8
0x4001892	    0x48c705000000	               mov qword [0x0400189d], 0	       244	ldexp.c	FUNCTION_8
0x400189d	    0x48c705000000	               mov qword [0x040018a8], 0	       245	ldexp.c	FUNCTION_8
0x40018a8	      0xe9c9e9ffff	                           jmp 0x4000276	       245	ldexp.c	FUNCTION_8
0x40018ad	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x40018b1	      0xba05000000	                              mov edx, 5	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x40018b6	      0xbe00000000	                              mov esi, 0	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x40018bb	      0xe993feffff	                           jmp 0x4001753	       892	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	ELSE_16	CALL_46
0x40018c0	            0x31ff	                            xor edi, edi	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018c2	      0xba05000000	                              mov edx, 5	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018c7	      0xbe00000000	                              mov esi, 0	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018cc	      0xe800000000	                          call 0x40018d1	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018d1	          0x4889c7	                            mov rdi, rax	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018d4	            0x31c0	                            xor eax, eax	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018d6	      0xe800000000	                          call 0x40018db	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018db	      0xe941f7ffff	                           jmp 0x4001021	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x40018e0	    0x488b05000000	            mov rax, qword [0x040018e7] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40018e7	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40018ed	     0xf84ccfaffff	                            je 0x40013bf	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40018f3	      0xe93ef1ffff	                           jmp 0x4000a36	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40018f8	    0x488178280000	               cmp qword [rax + 0x28], 0	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001900	     0xf8516fbffff	                           jne 0x400141c	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001906	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       298	ldexp.c	FUNCTION_12
0x400190a	            0x31c9	                            xor ecx, ecx	       298	ldexp.c	FUNCTION_12
0x400190c	            0x31d2	                            xor edx, edx	       298	ldexp.c	FUNCTION_12
0x400190e	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x4001913	      0xe800000000	                          call 0x4001918	       298	ldexp.c	FUNCTION_12
0x4001918	          0x4885c0	                           test rax, rax	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x400191b	     0xf84fbfaffff	                            je 0x400141c	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x4001921	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001925	    0x380500000000	               cmp byte [0x0400192b], al	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400192b	     0xf85ebfaffff	                           jne 0x400141c	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001931	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4001935	      0xe950f6ffff	                           jmp 0x4000f8a	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x400193a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x400193e	    0x48c705000000	               mov qword [0x04001949], 0	       195	ldexp.c	FUNCTION_4
0x4001949	        0x488b4030	            mov rax, qword [rax + 0x30] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x400194d	    0xc70500000000	               mov dword [0x04001957], 1	       192	ldexp.c	FUNCTION_4
0x4001957	    0x48c705000000	               mov qword [0x04001962], 0	       193	ldexp.c	FUNCTION_4
0x4001962	    0x488905000000	            mov qword [0x04001969], rax 	       194	ldexp.c	FUNCTION_4
0x4001969	      0xe908e9ffff	                           jmp 0x4000276	       194	ldexp.c	FUNCTION_4
0x400196e	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001972	    0x488b3d000000	            mov rdi, qword [0x04001979] 	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x4001979	      0xe800000000	                          call 0x400197e	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x400197e	            0x31d2	                            xor edx, edx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001980	            0x89c1	                            mov ecx, eax	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001982	          0x4889d8	                            mov rax, rbx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001985	          0x48f7f1	                                 div rcx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4001988	      0xe9acefffff	                           jmp 0x4000939	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x400198d	    0x833d00000000	               cmp dword [0x04001994], 0	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001994	     0xf84dce8ffff	                            je 0x4000276	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400199a	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40019a0	     0xf84d0e8ffff	                            je 0x4000276	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40019a6	      0xe98bf0ffff	                           jmp 0x4000a36	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40019ab	        0x48036828	             add rbp, qword [rax + 0x28]	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x40019af	      0xe9c2f0ffff	                           jmp 0x4000a76	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x40019b4	    0x48813d000000	               cmp qword [0x040019bf], 0	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40019bf	     0xf84c1010000	                            je 0x4001b86	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40019c5	        0x488b4060	            mov rax, qword [rax + 0x60] 	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40019c9	        0x48034530	             add rax, qword [rbp + 0x30]	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40019cd	    0x48c705000000	               mov qword [0x040019d8], 0	       244	ldexp.c	FUNCTION_8
0x40019d8	    0xc70500000000	               mov dword [0x040019e2], 1	       242	ldexp.c	FUNCTION_8
0x40019e2	    0x48c705000000	               mov qword [0x040019ed], 0	       245	ldexp.c	FUNCTION_8
0x40019ed	    0x488905000000	            mov qword [0x040019f4], rax 	       243	ldexp.c	FUNCTION_8
0x40019f4	      0xe928f6ffff	                           jmp 0x4001021	       243	ldexp.c	FUNCTION_8
0x40019f9	    0x833d00000000	               cmp dword [0x04001a00], 1	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x4001a00	            0x763f	                           jbe 0x4001a41	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x4001a02	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001a06	      0xba05000000	                              mov edx, 5	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001a0b	      0xbe00000000	                              mov esi, 0	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001a10	      0xe9f5f5ffff	                           jmp 0x400100a	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4001a15	      0xba05000000	                              mov edx, 5	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001a1a	      0xbe00000000	                              mov esi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001a1f	      0xe9b2f9ffff	                           jmp 0x40013d6	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001a24	    0x488b05000000	            mov rax, qword [0x04001a2b] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001a2b	    0xc70500000000	               mov dword [0x04001a35], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001a35	    0x488905000000	            mov qword [0x04001a3c], rax 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001a3c	      0xe935e8ffff	                           jmp 0x4000276	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001a41	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x4001a45	    0x48c705000000	               mov qword [0x04001a50], 0	       253	ldexp.c	FUNCTION_9
0x4001a50	    0xc70500000000	               mov dword [0x04001a5a], 1	       251	ldexp.c	FUNCTION_9
0x4001a5a	    0x488905000000	            mov qword [0x04001a61], rax 	       254	ldexp.c	FUNCTION_9
0x4001a61	    0x488915000000	            mov qword [0x04001a68], rdx 	       252	ldexp.c	FUNCTION_9
0x4001a68	      0xe9b4f5ffff	                           jmp 0x4001021	       252	ldexp.c	FUNCTION_9
0x4001a6d	        0x4a8d3421	                    lea rsi, [rcx + r12]	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4001a71	          0x83fa04	                              cmp edx, 4	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a74	    0x488935000000	            mov qword [0x04001a7b], rsi 	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4001a7b	     0xf8503fcffff	                           jne 0x4001684	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a81	    0x488b05000000	            mov rax, qword [0x04001a88] 	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a88	        0x488d78ff	                      lea rdi, [rax - 1]	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a8c	          0x4885f7	                           test rdi, rsi	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a8f	     0xf84effbffff	                            je 0x4001684	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a95	      0x488d5430ff	                lea rdx, [rax + rsi - 1]	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a9a	          0x48f7d8	                                 neg rax	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001a9d	          0x4821d0	                            and rax, rdx	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001aa0	    0x488905000000	            mov qword [0x04001aa7], rax 	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001aa7	          0x4829c8	                            sub rax, rcx	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001aaa	    0x488905000000	            mov qword [0x04001ab1], rax 	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001ab1	      0xe9c0e7ffff	                           jmp 0x4000276	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4001ab6	      0x4883791800	               cmp qword [rcx + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4001abb	     0xf84d9feffff	                            je 0x400199a	       931	ldexp.c	FUNCTION_23
0x4001ac1	      0xe9d8f8ffff	                           jmp 0x400139e	       931	ldexp.c	FUNCTION_23
0x4001ac6	          0x4889c8	                            mov rax, rcx	      1616	ldexp.c	FUNCTION_46	IF_1
0x4001ac9	      0xe953f2ffff	                           jmp 0x4000d21	      1616	ldexp.c	FUNCTION_46	IF_1
0x4001ace	          0x4c39e6	                            cmp rsi, r12	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001ad1	     0xf839fe7ffff	                           jae 0x4000276	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001ad7	      0x488d540eff	                lea rdx, [rsi + rcx - 1]	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001adc	          0x4929f4	                            sub r12, rsi	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001adf	          0x4c21e2	                            and rdx, r12	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001ae2	          0x4801d0	                            add rax, rdx	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001ae5	    0x488905000000	            mov qword [0x04001aec], rax 	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001aec	      0xe985e7ffff	                           jmp 0x4000276	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001af1	    0x488b05000000	            mov rax, qword [0x04001af8] 	       461	ldexp.c	FUNCTION_17	IF_2
0x4001af8	    0x488905000000	            mov qword [0x04001aff], rax 	       461	ldexp.c	FUNCTION_17	IF_2
0x4001aff	      0xe972e7ffff	                           jmp 0x4000276	       461	ldexp.c	FUNCTION_17	IF_2
0x4001b04	        0x488b4218	            mov rax, qword [rdx + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001b08	        0x83781000	               cmp dword [rax + 0x10], 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001b0c	     0xf859dfcffff	                           jne 0x40017af	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001b12	    0x813810010000	                  cmp dword [rax], 0x110	       963	ldexp.c	FUNCTION_25
0x4001b18	     0xf8591fcffff	                           jne 0x40017af	       963	ldexp.c	FUNCTION_25
0x4001b1e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x4001b22	        0x83791003	               cmp dword [rcx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4001b26	     0xf8583fcffff	                           jne 0x40017af	       920	ldexp.c	FUNCTION_22
0x4001b2c	    0x813903010000	                  cmp dword [rcx], 0x103	       920	ldexp.c	FUNCTION_22
0x4001b32	     0xf8577fcffff	                           jne 0x40017af	       920	ldexp.c	FUNCTION_22
0x4001b38	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x4001b3c	          0x80392e	                    cmp byte [rcx], 0x2e	       921	ldexp.c	FUNCTION_22
0x4001b3f	     0xf856afcffff	                           jne 0x40017af	       921	ldexp.c	FUNCTION_22
0x4001b45	        0x80790100	                   cmp byte [rcx + 1], 0	       922	ldexp.c	FUNCTION_22
0x4001b49	     0xf8560fcffff	                           jne 0x40017af	       922	ldexp.c	FUNCTION_22
0x4001b4f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001b53	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4001b57	     0xf8552fcffff	                           jne 0x40017af	       931	ldexp.c	FUNCTION_23
0x4001b5d	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4001b62	     0xf8547fcffff	                           jne 0x40017af	       931	ldexp.c	FUNCTION_23
0x4001b68	        0x488b4228	            mov rax, qword [rdx + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4001b6c	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4001b70	     0xf8539fcffff	                           jne 0x40017af	       931	ldexp.c	FUNCTION_23
0x4001b76	      0x4883781801	               cmp qword [rax + 0x18], 1	       931	ldexp.c	FUNCTION_23
0x4001b7b	     0xf852efcffff	                           jne 0x40017af	       931	ldexp.c	FUNCTION_23
0x4001b81	      0xe92bf8ffff	                           jmp 0x40013b1	       931	ldexp.c	FUNCTION_23
0x4001b86	    0x833d00000000	               cmp dword [0x04001b8d], 0	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001b8d	     0xf8413f9ffff	                            je 0x40014a6	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001b93	      0xe92dfeffff	                           jmp 0x40019c5	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4001b98	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x4001b9c	        0x837a1003	               cmp dword [rdx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4001ba0	     0xf85edfbffff	                           jne 0x4001793	       920	ldexp.c	FUNCTION_22
0x4001ba6	    0x813a03010000	                  cmp dword [rdx], 0x103	       920	ldexp.c	FUNCTION_22
0x4001bac	     0xf85e1fbffff	                           jne 0x4001793	       920	ldexp.c	FUNCTION_22
0x4001bb2	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x4001bb6	          0x803a2e	                    cmp byte [rdx], 0x2e	       921	ldexp.c	FUNCTION_22
0x4001bb9	     0xf85d4fbffff	                           jne 0x4001793	       921	ldexp.c	FUNCTION_22
0x4001bbf	        0x807a0100	                   cmp byte [rdx + 1], 0	       922	ldexp.c	FUNCTION_22
0x4001bc3	     0xf85cafbffff	                           jne 0x4001793	       922	ldexp.c	FUNCTION_22
0x4001bc9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001bcd	          0x8b7010	            mov esi, dword [rax + 0x10] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001bd0	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x4001bd3	            0x741c	                            je 0x4001bf1	       931	ldexp.c	FUNCTION_23
0x4001bd5	            0x8b38	                    mov edi, dword [rax]	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001bd7	        0x488d5018	                   lea rdx, [rax + 0x18]	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001bdb	      0xe800000000	                          call 0x4001be0	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001be0	            0x85c0	                           test eax, eax	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001be2	     0xf85c9f7ffff	                           jne 0x40013b1	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001be8	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001bec	      0xe9a2fbffff	                           jmp 0x4001793	       978	ldexp.c	FUNCTION_26	CALL_3
0x4001bf1	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4001bf6	            0x75dd	                           jne 0x4001bd5	       931	ldexp.c	FUNCTION_23
0x4001bf8	      0xe9b4f7ffff	                           jmp 0x40013b1	       931	ldexp.c	FUNCTION_23
exp_fold_tree	DO,0:FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1	6
0x4001d50	          0x488b02	                    mov rax, qword [rdx]	      1237	ldexp.c	FUNCTION_29
0x4001d53	    0xc70500000000	               mov dword [0x04001d5d], 0	      1236	ldexp.c	FUNCTION_29
0x4001d5d	    0x488915000000	            mov qword [0x04001d64], rdx 	      1238	ldexp.c	FUNCTION_29
0x4001d64	    0x488935000000	            mov qword [0x04001d6b], rsi 	      1239	ldexp.c	FUNCTION_29
0x4001d6b	    0x488905000000	            mov qword [0x04001d72], rax 	      1237	ldexp.c	FUNCTION_29
0x4001d72	      0xe9b9e4ffff	                 jmp sym.exp_fold_tree_1	      1240	ldexp.c	FUNCTION_29	CALL_1
