inflateGetDictionary	functions,0:CALL,3:IF,3:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	42
0x4002220	            0x4155	                                push r13	      1295	inflate.c	FUNCTION_9
0x4002222	            0x4154	                                push r12	      1295	inflate.c	FUNCTION_9
0x4002224	          0x4989d5	                            mov r13, rdx	      1295	inflate.c	FUNCTION_9
0x4002227	              0x55	                                push rbp	      1295	inflate.c	FUNCTION_9
0x4002228	              0x53	                                push rbx	      1295	inflate.c	FUNCTION_9
0x4002229	        0x4883ec08	                              sub rsp, 8	      1295	inflate.c	FUNCTION_9
0x400222d	      0xe80edeffff	              call sym.inflateStateCheck	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002232	            0x85c0	                           test eax, eax	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002234	            0x755a	                           jne 0x4002290	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002236	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	      1300	inflate.c	FUNCTION_9
0x400223a	            0x89c5	                            mov ebp, eax	      1300	inflate.c	FUNCTION_9
0x400223c	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      1303	inflate.c	FUNCTION_9	IF_2
0x400223f	            0x85d2	                           test edx, edx	      1303	inflate.c	FUNCTION_9	IF_2
0x4002241	            0x742e	                            je 0x4002271	      1303	inflate.c	FUNCTION_9	IF_2
0x4002243	          0x4885f6	                           test rsi, rsi	      1303	inflate.c	FUNCTION_9	IF_2
0x4002246	          0x4989f4	                            mov r12, rsi	      1303	inflate.c	FUNCTION_9	IF_2
0x4002249	            0x7426	                            je 0x4002271	      1303	inflate.c	FUNCTION_9	IF_2
0x400224b	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      1305	inflate.c	FUNCTION_9	IF_2
0x400224e	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_18	CALL_3
0x4002251	            0x29f2	                            sub edx, esi	        53	string3.h	FUNCTION_18	CALL_3
0x4002253	        0x48037348	             add rsi, qword [rbx + 0x48]	        53	string3.h	FUNCTION_18	CALL_3
0x4002257	      0xe800000000	                          call 0x400225c	        53	string3.h	FUNCTION_18	CALL_3
0x400225c	          0x8b5344	            mov edx, dword [rbx + 0x44] 	      1306	inflate.c	FUNCTION_9	IF_2	CALL_3
0x400225f	          0x8b7b40	            mov edi, dword [rbx + 0x40] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002262	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002266	          0x4829d7	                            sub rdi, rdx	        53	string3.h	FUNCTION_18	CALL_3
0x4002269	          0x4c01e7	                            add rdi, r12	        53	string3.h	FUNCTION_18	CALL_3
0x400226c	      0xe800000000	                          call 0x4002271	        53	string3.h	FUNCTION_18	CALL_3
0x4002271	          0x4d85ed	                           test r13, r13	      1309	inflate.c	FUNCTION_9	IF_3
0x4002274	            0x7407	                            je 0x400227d	      1309	inflate.c	FUNCTION_9	IF_3
0x4002276	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1310	inflate.c	FUNCTION_9	IF_3
0x4002279	        0x41894500	                    mov dword [r13], eax	      1310	inflate.c	FUNCTION_9	IF_3
0x400227d	        0x4883c408	                              add rsp, 8	      1312	inflate.c	FUNCTION_9
0x4002281	            0x89e8	                            mov eax, ebp	      1312	inflate.c	FUNCTION_9
0x4002283	              0x5b	                                 pop rbx	      1312	inflate.c	FUNCTION_9
0x4002284	              0x5d	                                 pop rbp	      1312	inflate.c	FUNCTION_9
0x4002285	            0x415c	                                 pop r12	      1312	inflate.c	FUNCTION_9
0x4002287	            0x415d	                                 pop r13	      1312	inflate.c	FUNCTION_9
0x4002289	              0xc3	                                     ret	      1312	inflate.c	FUNCTION_9
0x400228a	    0x660f1f440000	                    nop word [rax + rax]	      1312	inflate.c	FUNCTION_9
0x4002290	      0xbdfeffffff	                     mov ebp, 0xfffffffe	      1299	inflate.c	FUNCTION_9	CALL_1
0x4002295	            0xebe6	                           jmp 0x400227d	      1299	inflate.c	FUNCTION_9	CALL_1
inflateResetKeep	functions,0:CALL,2:IF,2:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	30
0x40001f0	      0xe84bfeffff	              call sym.inflateStateCheck	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40001f5	            0x85c0	                           test eax, eax	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40001f7	     0xf8593000000	                           jne 0x4000290	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x40001fd	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       125	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000201	          0x8b7210	            mov esi, dword [rdx + 0x10] 	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000204	    0x48c742280000	               mov qword [rdx + 0x28], 0	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400020c	    0x48c747280000	               mov qword [rdi + 0x28], 0	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000214	    0x48c747100000	               mov qword [rdi + 0x10], 0	       126	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400021c	    0x48c747300000	               mov qword [rdi + 0x30], 0	       127	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000224	            0x85f6	                           test esi, esi	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000226	            0x7407	                            je 0x400022f	       128	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x4000228	          0x83e601	                              and esi, 1	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400022b	        0x48897760	             mov qword [rdi + 0x60], rsi	       129	inflate.c	FOR_1	IF_7	FUNCTION_2	IF_2
0x400022f	    0x488d8a580500	                  lea rcx, [rdx + 0x558]	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000236	    0xc74208343f00	            mov dword [rdx + 8], 0x3f34 	       130	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400023d	    0xc7420c000000	                mov dword [rdx + 0xc], 0	       131	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000244	    0xc74214000000	               mov dword [rdx + 0x14], 0	       132	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400024b	    0xc7421c008000	         mov dword [rdx + 0x1c], 0x8000 	       133	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000252	    0x48c742300000	               mov qword [rdx + 0x30], 0	       134	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400025a	    0x48c742500000	               mov qword [rdx + 0x50], 0	       135	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000262	    0xc74258000000	               mov dword [rdx + 0x58], 0	       136	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000269	    0x48898a900000	             mov qword [rdx + 0x90], rcx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000270	        0x48894a70	             mov qword [rdx + 0x70], rcx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000274	        0x48894a68	             mov qword [rdx + 0x68], rcx	       137	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000278	    0xc782e81b0000	            mov dword [rdx + 0x1be8], 1 	       138	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000282	    0xc782ec1b0000	   mov dword [rdx + 0x1bec], 0xffffffff 	       139	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400028c	              0xc3	                                     ret	       141	inflate.c	FOR_1	IF_7	FUNCTION_2
0x400028d	           0xf1f00	                         nop dword [rax]	       141	inflate.c	FOR_1	IF_7	FUNCTION_2
0x4000290	      0xb8feffffff	                     mov eax, 0xfffffffe	       124	inflate.c	FOR_1	IF_7	FUNCTION_2	CALL_1
0x4000295	              0xc3	                                     ret	       142	inflate.c	FOR_1	IF_7	FUNCTION_2
inflateCodesUsed	functions,0:CALL,1:IF,1:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	14
0x40028e0	      0xe85bd7ffff	              call sym.inflateStateCheck	      1558	inflate.c	FUNCTION_17	CALL_1
0x40028e5	            0x85c0	                           test eax, eax	      1558	inflate.c	FUNCTION_17	CALL_1
0x40028e7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1558	inflate.c	FUNCTION_17	CALL_1
0x40028ee	            0x7408	                            je 0x40028f8	      1558	inflate.c	FUNCTION_17	CALL_1
0x40028f0	          0x4889d0	                            mov rax, rdx	      1561	inflate.c	FUNCTION_17
0x40028f3	              0xc3	                                     ret	      1561	inflate.c	FUNCTION_17
0x40028f4	         0xf1f4000	                         nop dword [rax]	      1561	inflate.c	FUNCTION_17
0x40028f8	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      1559	inflate.c	FUNCTION_17
0x40028fc	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      1560	inflate.c	FUNCTION_17
0x4002903	    0x488d88580500	                  lea rcx, [rax + 0x558]	      1560	inflate.c	FUNCTION_17
0x400290a	          0x4829ca	                            sub rdx, rcx	      1560	inflate.c	FUNCTION_17
0x400290d	        0x48c1fa02	                              sar rdx, 2	      1560	inflate.c	FUNCTION_17
0x4002911	          0x4889d0	                            mov rax, rdx	      1561	inflate.c	FUNCTION_17
0x4002914	              0xc3	                                     ret	      1561	inflate.c	FUNCTION_17
inflateSync	functions,0:CALL,4:IF,4:DO,0:WHILE,1:FOR,0:SWITCH,0:ELSE,0	172
0x4002380	            0x4157	                                push r15	      1402	inflate.c	FUNCTION_11
0x4002382	            0x4156	                                push r14	      1402	inflate.c	FUNCTION_11
0x4002384	          0x4989fe	                            mov r14, rdi	      1402	inflate.c	FUNCTION_11
0x4002387	            0x4154	                                push r12	      1402	inflate.c	FUNCTION_11
0x4002389	              0x55	                                push rbp	      1402	inflate.c	FUNCTION_11
0x400238a	              0x53	                                push rbx	      1402	inflate.c	FUNCTION_11
0x400238b	        0x4883ec10	                           sub rsp, 0x10	      1402	inflate.c	FUNCTION_11
0x400238f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1402	inflate.c	FUNCTION_11
0x4002398	      0x4889442408	                mov qword [rsp + 8], rax	      1402	inflate.c	FUNCTION_11
0x400239d	            0x31c0	                            xor eax, eax	      1402	inflate.c	FUNCTION_11
0x400239f	      0xe89cdcffff	              call sym.inflateStateCheck	      1409	inflate.c	FUNCTION_11	CALL_1
0x40023a4	            0x85c0	                           test eax, eax	      1409	inflate.c	FUNCTION_11	CALL_1
0x40023a6	     0xf8529020000	                           jne 0x40025d5	      1409	inflate.c	FUNCTION_11	CALL_1
0x40023ac	          0x8b5f08	                mov ebx, dword [rdi + 8]	      1411	inflate.c	FUNCTION_11	IF_2
0x40023af	          0x4189c4	                           mov r12d, eax	      1411	inflate.c	FUNCTION_11	IF_2
0x40023b2	        0x4c8b7f38	            mov r15, qword [rdi + 0x38] 	      1410	inflate.c	FUNCTION_11
0x40023b6	            0x85db	                           test ebx, ebx	      1411	inflate.c	FUNCTION_11	IF_2
0x40023b8	     0xf84c2010000	                            je 0x4002580	      1411	inflate.c	FUNCTION_11	IF_2
0x40023be	    0x41817f08533f	            cmp dword [r15 + 8], 0x3f53 	      1414	inflate.c	FUNCTION_11	IF_3
0x40023c6	     0xf84cc010000	                            je 0x4002598	      1414	inflate.c	FUNCTION_11	IF_3
0x40023cc	        0x418b4758	            mov eax, dword [r15 + 0x58] 	      1416	inflate.c	FUNCTION_11	IF_3
0x40023d0	        0x498b7f50	            mov rdi, qword [r15 + 0x50] 	      1416	inflate.c	FUNCTION_11	IF_3
0x40023d4	    0x41c74708533f	            mov dword [r15 + 8], 0x3f53 	      1415	inflate.c	FUNCTION_11	IF_3
0x40023dc	            0x89c1	                            mov ecx, eax	      1416	inflate.c	FUNCTION_11	IF_3
0x40023de	          0x83e0f8	                     and eax, 0xfffffff8	      1417	inflate.c	FUNCTION_11	IF_3
0x40023e1	          0x83e107	                              and ecx, 7	      1416	inflate.c	FUNCTION_11	IF_3
0x40023e4	        0x41894758	             mov dword [r15 + 0x58], eax	      1417	inflate.c	FUNCTION_11	IF_3
0x40023e8	          0x48d3e7	                             shl rdi, cl	      1416	inflate.c	FUNCTION_11	IF_3
0x40023eb	          0x83f807	                              cmp eax, 7	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x40023ee	          0x4889f9	                            mov rcx, rdi	      1416	inflate.c	FUNCTION_11	IF_3
0x40023f1	        0x49897f50	             mov qword [r15 + 0x50], rdi	      1416	inflate.c	FUNCTION_11	IF_3
0x40023f5	     0xf86c5010000	                           jbe 0x40025c0	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x40023fb	          0x83e808	                              sub eax, 8	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x40023fe	          0x4889e2	                            mov rdx, rsp	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002401	          0xc1e803	                              shr eax, 3	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002404	            0x89c6	                            mov esi, eax	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002406	      0x488d743401	                lea rsi, [rsp + rsi + 1]	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400240b	       0xf1f440000	                   nop dword [rax + rax]	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002410	            0x880a	                      mov byte [rdx], cl	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002412	        0x4883c201	                              add rdx, 1	      1420	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002416	        0x48c1e908	                              shr rcx, 8	      1421	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400241a	          0x4839d6	                            cmp rsi, rdx	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400241d	            0x75f1	                           jne 0x4002410	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400241f	          0x8d7801	                      lea edi, [rax + 1]	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002422	        0x49894f50	             mov qword [r15 + 0x50], rcx	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002426	    0x41c747580000	               mov dword [r15 + 0x58], 0	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x400242e	            0x31c0	                            xor eax, eax	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002430	            0x31d2	                            xor edx, edx	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x4002432	    0x41bb04000000	                             mov r11d, 4	      1393	inflate.c	WHILE_6	ELSE_4
0x4002438	            0xeb1e	                           jmp 0x4002458	      1393	inflate.c	WHILE_6	ELSE_4
0x400243a	    0x660f1f440000	                    nop word [rax + rax]	      1393	inflate.c	WHILE_6	ELSE_4
0x4002440	          0x4489db	                           mov ebx, r11d	      1393	inflate.c	WHILE_6	ELSE_4
0x4002443	            0x29c3	                            sub ebx, eax	      1393	inflate.c	WHILE_6	ELSE_4
0x4002445	          0x83fb03	                              cmp ebx, 3	      1393	inflate.c	WHILE_6	ELSE_4
0x4002448	            0x89d8	                            mov eax, ebx	      1393	inflate.c	WHILE_6	ELSE_4
0x400244a	           0xf96c1	                                setbe cl	      1393	inflate.c	WHILE_6	ELSE_4
0x400244d	          0x83c201	                              add edx, 1	      1394	inflate.c	WHILE_6
0x4002450	            0x39fa	                            cmp edx, edi	      1387	inflate.c	WHILE_6
0x4002452	            0x7334	                           jae 0x4002488	      1387	inflate.c	WHILE_6
0x4002454	            0x84c9	                             test cl, cl	      1387	inflate.c	WHILE_6
0x4002456	            0x7430	                            je 0x4002488	      1387	inflate.c	WHILE_6
0x4002458	            0x89d1	                            mov ecx, edx	      1388	inflate.c	WHILE_6	IF_21
0x400245a	          0x83f802	                              cmp eax, 2	      1388	inflate.c	WHILE_6	IF_21
0x400245d	         0xfb6340c	             movzx esi, byte [rsp + rcx]	      1388	inflate.c	WHILE_6	IF_21
0x4002461	            0x19c9	                            sbb ecx, ecx	      1388	inflate.c	WHILE_6	IF_21
0x4002463	            0xf7d1	                                 not ecx	      1388	inflate.c	WHILE_6	IF_21
0x4002465	          0x4038ce	                             cmp sil, cl	      1388	inflate.c	WHILE_6	IF_21
0x4002468	     0xf84f2000000	                            je 0x4002560	      1388	inflate.c	WHILE_6	IF_21
0x400246e	          0x4084f6	                           test sil, sil	      1390	inflate.c	WHILE_6	ELSE_3	IF_22
0x4002471	            0x74cd	                            je 0x4002440	      1390	inflate.c	WHILE_6	ELSE_3	IF_22
0x4002473	          0x83c201	                              add edx, 1	      1394	inflate.c	WHILE_6
0x4002476	            0x31c0	                            xor eax, eax	      1391	inflate.c	WHILE_6	ELSE_3	IF_22
0x4002478	      0xb901000000	                              mov ecx, 1	      1390	inflate.c	WHILE_6	ELSE_3	IF_22
0x400247d	            0x39fa	                            cmp edx, edi	      1387	inflate.c	WHILE_6
0x400247f	            0x72d3	                            jb 0x4002454	      1387	inflate.c	WHILE_6
0x4002481	     0xf1f80000000	                         nop dword [rax]	      1387	inflate.c	WHILE_6
0x4002488	    0x4189878c0000	             mov dword [r15 + 0x8c], eax	      1396	inflate.c	
0x400248f	        0x418b5e08	                mov ebx, dword [r14 + 8]	      1396	inflate.c	
0x4002493	            0x85db	                           test ebx, ebx	      1387	inflate.c	WHILE_6
0x4002495	          0x4d8b1e	                    mov r11, qword [r14]	      1429	inflate.c	FUNCTION_11	CALL_3
0x4002498	        0x400f95c7	                               setne dil	      1387	inflate.c	WHILE_6
0x400249c	          0x4020cf	                             and dil, cl	      1387	inflate.c	WHILE_6
0x400249f	     0xf8427010000	                            je 0x40025cc	      1387	inflate.c	WHILE_6
0x40024a5	            0x31d2	                            xor edx, edx	      1387	inflate.c	WHILE_6
0x40024a7	      0xbd04000000	                              mov ebp, 4	      1393	inflate.c	WHILE_6	ELSE_4
0x40024ac	            0xeb19	                           jmp 0x40024c7	      1393	inflate.c	WHILE_6	ELSE_4
0x40024ae	            0x6690	                                     nop	      1393	inflate.c	WHILE_6	ELSE_4
0x40024b0	            0x89ee	                            mov esi, ebp	      1393	inflate.c	WHILE_6	ELSE_4
0x40024b2	            0x29c6	                            sub esi, eax	      1393	inflate.c	WHILE_6	ELSE_4
0x40024b4	          0x83fe03	                              cmp esi, 3	      1393	inflate.c	WHILE_6	ELSE_4
0x40024b7	            0x89f0	                            mov eax, esi	      1393	inflate.c	WHILE_6	ELSE_4
0x40024b9	           0xf96c1	                                setbe cl	      1393	inflate.c	WHILE_6	ELSE_4
0x40024bc	          0x83c201	                              add edx, 1	      1394	inflate.c	WHILE_6
0x40024bf	            0x39da	                            cmp edx, ebx	      1387	inflate.c	WHILE_6
0x40024c1	            0x732d	                           jae 0x40024f0	      1387	inflate.c	WHILE_6
0x40024c3	            0x84c9	                             test cl, cl	      1387	inflate.c	WHILE_6
0x40024c5	            0x7429	                            je 0x40024f0	      1387	inflate.c	WHILE_6
0x40024c7	            0x89d1	                            mov ecx, edx	      1388	inflate.c	WHILE_6	IF_21
0x40024c9	          0x83f802	                              cmp eax, 2	      1388	inflate.c	WHILE_6	IF_21
0x40024cc	      0x410fb6340b	             movzx esi, byte [r11 + rcx]	      1388	inflate.c	WHILE_6	IF_21
0x40024d1	            0x19c9	                            sbb ecx, ecx	      1388	inflate.c	WHILE_6	IF_21
0x40024d3	            0xf7d1	                                 not ecx	      1388	inflate.c	WHILE_6	IF_21
0x40024d5	          0x4038ce	                             cmp sil, cl	      1388	inflate.c	WHILE_6	IF_21
0x40024d8	     0xf8492000000	                            je 0x4002570	      1388	inflate.c	WHILE_6	IF_21
0x40024de	          0x4084f6	                           test sil, sil	      1390	inflate.c	WHILE_6	ELSE_3	IF_22
0x40024e1	            0x74cd	                            je 0x40024b0	      1390	inflate.c	WHILE_6	ELSE_3	IF_22
0x40024e3	          0x83c201	                              add edx, 1	      1394	inflate.c	WHILE_6
0x40024e6	            0x31c0	                            xor eax, eax	      1391	inflate.c	WHILE_6	ELSE_3	IF_22
0x40024e8	            0x89f9	                            mov ecx, edi	      1390	inflate.c	WHILE_6	ELSE_3	IF_22
0x40024ea	            0x39da	                            cmp edx, ebx	      1387	inflate.c	WHILE_6
0x40024ec	            0x72d5	                            jb 0x40024c3	      1387	inflate.c	WHILE_6
0x40024ee	            0x6690	                                     nop	      1387	inflate.c	WHILE_6
0x40024f0	            0x89d1	                            mov ecx, edx	      1387	inflate.c	WHILE_6
0x40024f2	          0x4901cb	                            add r11, rcx	      1431	inflate.c	FUNCTION_11
0x40024f5	        0x49034e10	             add rcx, qword [r14 + 0x10]	      1432	inflate.c	FUNCTION_11
0x40024f9	    0x4189878c0000	             mov dword [r15 + 0x8c], eax	      1396	inflate.c	
0x4002500	        0x41295608	                sub dword [r14 + 8], edx	      1430	inflate.c	FUNCTION_11
0x4002504	          0x83f804	                              cmp eax, 4	      1435	inflate.c	FUNCTION_11	IF_4
0x4002507	          0x4d891e	                    mov qword [r14], r11	      1431	inflate.c	FUNCTION_11
0x400250a	          0x4889cd	                            mov rbp, rcx	      1432	inflate.c	FUNCTION_11
0x400250d	        0x49894e10	             mov qword [r14 + 0x10], rcx	      1432	inflate.c	FUNCTION_11
0x4002511	     0xf8599000000	                           jne 0x40025b0	      1435	inflate.c	FUNCTION_11	IF_4
0x4002517	        0x498b5e28	            mov rbx, qword [r14 + 0x28] 	      1436	inflate.c	FUNCTION_11
0x400251b	          0x4c89f7	                            mov rdi, r14	      1437	inflate.c	FUNCTION_11	CALL_4
0x400251e	      0xe800000000	                          call 0x4002523	      1437	inflate.c	FUNCTION_11	CALL_4
0x4002523	        0x49896e10	             mov qword [r14 + 0x10], rbp	      1438	inflate.c	FUNCTION_11
0x4002527	        0x49895e28	             mov qword [r14 + 0x28], rbx	      1438	inflate.c	FUNCTION_11
0x400252b	    0x41c747083f3f	            mov dword [r15 + 8], 0x3f3f 	      1439	inflate.c	FUNCTION_11
0x4002533	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1441	inflate.c	FUNCTION_11
0x4002538	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1441	inflate.c	FUNCTION_11
0x4002541	          0x4489e0	                           mov eax, r12d	      1441	inflate.c	FUNCTION_11
0x4002544	     0xf8596000000	                           jne 0x40025e0	      1441	inflate.c	FUNCTION_11
0x400254a	        0x4883c410	                           add rsp, 0x10	      1441	inflate.c	FUNCTION_11
0x400254e	              0x5b	                                 pop rbx	      1441	inflate.c	FUNCTION_11
0x400254f	              0x5d	                                 pop rbp	      1441	inflate.c	FUNCTION_11
0x4002550	            0x415c	                                 pop r12	      1441	inflate.c	FUNCTION_11
0x4002552	            0x415e	                                 pop r14	      1441	inflate.c	FUNCTION_11
0x4002554	            0x415f	                                 pop r15	      1441	inflate.c	FUNCTION_11
0x4002556	              0xc3	                                     ret	      1441	inflate.c	FUNCTION_11
0x4002557	    0x660f1f840000	                    nop word [rax + rax]	      1441	inflate.c	FUNCTION_11
0x4002560	          0x83c001	                              add eax, 1	      1389	inflate.c	WHILE_6	IF_21
0x4002563	          0x83f803	                              cmp eax, 3	      1389	inflate.c	WHILE_6	IF_21
0x4002566	           0xf96c1	                                setbe cl	      1389	inflate.c	WHILE_6	IF_21
0x4002569	      0xe9dffeffff	                           jmp 0x400244d	      1389	inflate.c	WHILE_6	IF_21
0x400256e	            0x6690	                                     nop	      1389	inflate.c	WHILE_6	IF_21
0x4002570	          0x83c001	                              add eax, 1	      1389	inflate.c	WHILE_6	IF_21
0x4002573	          0x83f803	                              cmp eax, 3	      1389	inflate.c	WHILE_6	IF_21
0x4002576	           0xf96c1	                                setbe cl	      1389	inflate.c	WHILE_6	IF_21
0x4002579	      0xe93effffff	                           jmp 0x40024bc	      1389	inflate.c	WHILE_6	IF_21
0x400257e	            0x6690	                                     nop	      1389	inflate.c	WHILE_6	IF_21
0x4002580	      0x41837f5807	               cmp dword [r15 + 0x58], 7	      1411	inflate.c	FUNCTION_11	IF_2
0x4002585	     0xf8733feffff	                            ja 0x40023be	      1411	inflate.c	FUNCTION_11	IF_2
0x400258b	    0x41bcfbffffff	                    mov r12d, 0xfffffffb	      1411	inflate.c	FUNCTION_11	IF_2
0x4002591	            0xeba0	                           jmp 0x4002533	      1411	inflate.c	FUNCTION_11	IF_2
0x4002593	       0xf1f440000	                   nop dword [rax + rax]	      1411	inflate.c	FUNCTION_11	IF_2
0x4002598	    0x418b878c0000	            mov eax, dword [r15 + 0x8c] 	      1411	inflate.c	FUNCTION_11	IF_2
0x400259f	          0x83f803	                              cmp eax, 3	      1411	inflate.c	FUNCTION_11	IF_2
0x40025a2	           0xf96c1	                                setbe cl	      1411	inflate.c	FUNCTION_11	IF_2
0x40025a5	      0xe9e9feffff	                           jmp 0x4002493	      1411	inflate.c	FUNCTION_11	IF_2
0x40025aa	    0x660f1f440000	                    nop word [rax + rax]	      1411	inflate.c	FUNCTION_11	IF_2
0x40025b0	    0x41bcfdffffff	                    mov r12d, 0xfffffffd	      1435	inflate.c	FUNCTION_11	IF_4
0x40025b6	      0xe978ffffff	                           jmp 0x4002533	      1435	inflate.c	FUNCTION_11	IF_4
0x40025bb	       0xf1f440000	                   nop dword [rax + rax]	      1435	inflate.c	FUNCTION_11	IF_4
0x40025c0	      0xb901000000	                              mov ecx, 1	      1419	inflate.c	FUNCTION_11	IF_3	WHILE_1
0x40025c5	            0x31c0	                            xor eax, eax	      1385	inflate.c	
0x40025c7	      0xe9bcfeffff	                           jmp 0x4002488	      1385	inflate.c	
0x40025cc	            0x31c9	                            xor ecx, ecx	      1387	inflate.c	WHILE_6
0x40025ce	            0x31d2	                            xor edx, edx	      1386	inflate.c	
0x40025d0	      0xe91dffffff	                           jmp 0x40024f2	      1386	inflate.c	
0x40025d5	    0x41bcfeffffff	                    mov r12d, 0xfffffffe	      1409	inflate.c	FUNCTION_11	CALL_1
0x40025db	      0xe953ffffff	                           jmp 0x4002533	      1409	inflate.c	FUNCTION_11	CALL_1
0x40025e0	      0xe800000000	                          call 0x40025e5	      1441	inflate.c	FUNCTION_11
inflatePrime	functions,0:CALL,1:IF,3:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	29
0x40004a0	          0x4189d0	                            mov r8d, edx	       251	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004a3	      0xe898fbffff	              call sym.inflateStateCheck	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004a8	            0x85c0	                           test eax, eax	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004aa	            0x7554	                           jne 0x4000500	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x40004ac	            0x85f6	                           test esi, esi	       256	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004ae	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	       255	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004b2	            0x783c	                            js 0x40004f0	       256	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004b4	          0x83fe10	                           cmp esi, 0x10	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004b7	            0x7f47	                            jg 0x4000500	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004b9	        0x448b5758	           mov r10d, dword [rdi + 0x58] 	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004bd	        0x468d0c16	                    lea r9d, [rsi + r10]	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004c1	        0x4183f920	                           cmp r9d, 0x20	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004c5	            0x7739	                            ja 0x4000500	       261	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_3
0x40004c7	            0x89f1	                            mov ecx, esi	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004c9	      0xba01000000	                              mov edx, 1	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004ce	        0x44894f58	             mov dword [rdi + 0x58], r9d	       264	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004d2	          0x48d3e2	                             shl rdx, cl	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004d5	          0x4489d1	                           mov ecx, r10d	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004d8	          0x83ea01	                              sub edx, 1	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004db	          0x4121d0	                            and r8d, edx	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004de	          0x41d3e0	                             shl r8d, cl	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004e1	        0x4c014750	              add qword [rdi + 0x50], r8	       263	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004e5	              0xc3	                                     ret	       265	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       265	inflate.c	FOR_1	IF_7	FUNCTION_5
0x40004f0	    0x48c747500000	               mov qword [rdi + 0x50], 0	       257	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004f8	    0xc74758000000	               mov dword [rdi + 0x58], 0	       258	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x40004ff	              0xc3	                                     ret	       259	inflate.c	FOR_1	IF_7	FUNCTION_5	IF_2
0x4000500	      0xb8feffffff	                     mov eax, 0xfffffffe	       254	inflate.c	FOR_1	IF_7	FUNCTION_5	CALL_1
0x4000505	              0xc3	                                     ret	       266	inflate.c	FOR_1	IF_7	FUNCTION_5
inflateCopy	functions,0:CALL,7:IF,6:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	126
0x4002630	            0x4155	                                push r13	      1464	inflate.c	FUNCTION_13
0x4002632	            0x4154	                                push r12	      1464	inflate.c	FUNCTION_13
0x4002634	              0x55	                                push rbp	      1464	inflate.c	FUNCTION_13
0x4002635	              0x53	                                push rbx	      1464	inflate.c	FUNCTION_13
0x4002636	          0x4889fd	                            mov rbp, rdi	      1464	inflate.c	FUNCTION_13
0x4002639	          0x4889f7	                            mov rdi, rsi	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x400263c	        0x4883ec08	                              sub rsp, 8	      1464	inflate.c	FUNCTION_13
0x4002640	      0xe8fbd9ffff	              call sym.inflateStateCheck	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002645	            0x85c0	                           test eax, eax	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002647	     0xf85b3010000	                           jne 0x4002800	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x400264d	          0x4885ed	                           test rbp, rbp	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002650	     0xf84aa010000	                            je 0x4002800	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002656	          0x4889f3	                            mov rbx, rsi	      1471	inflate.c	FUNCTION_13	IF_1	CALL_1
0x4002659	        0x4c8b6e38	            mov r13, qword [rsi + 0x38] 	      1473	inflate.c	FUNCTION_13
0x400265d	        0x488b7e50	            mov rdi, qword [rsi + 0x50] 	      1476	inflate.c	FUNCTION_13
0x4002661	      0xbaf81b0000	                         mov edx, 0x1bf8	      1476	inflate.c	FUNCTION_13
0x4002666	      0xbe01000000	                              mov esi, 1	      1476	inflate.c	FUNCTION_13
0x400266b	          0xff5340	                 call qword [rbx + 0x40]	      1476	inflate.c	FUNCTION_13
0x400266e	          0x4885c0	                           test rax, rax	      1478	inflate.c	FUNCTION_13	IF_2
0x4002671	          0x4989c4	                            mov r12, rax	      1476	inflate.c	FUNCTION_13
0x4002674	     0xf848d010000	                            je 0x4002807	      1478	inflate.c	FUNCTION_13	IF_2
0x400267a	      0x49837d4800	               cmp qword [r13 + 0x48], 0	      1480	inflate.c	FUNCTION_13	IF_3
0x400267f	     0xf846b010000	                            je 0x40027f0	      1480	inflate.c	FUNCTION_13	IF_3
0x4002685	        0x418b4d38	            mov ecx, dword [r13 + 0x38] 	      1481	inflate.c	FUNCTION_13	IF_3
0x4002689	      0xbe01000000	                              mov esi, 1	      1481	inflate.c	FUNCTION_13	IF_3
0x400268e	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1481	inflate.c	FUNCTION_13	IF_3
0x4002692	      0xba01000000	                              mov edx, 1	      1481	inflate.c	FUNCTION_13	IF_3
0x4002697	            0xd3e6	                             shl esi, cl	      1481	inflate.c	FUNCTION_13	IF_3
0x4002699	          0xff5340	                 call qword [rbx + 0x40]	      1481	inflate.c	FUNCTION_13	IF_3
0x400269c	          0x4885c0	                           test rax, rax	      1483	inflate.c	FUNCTION_13	IF_3	IF_4
0x400269f	          0x4989c0	                             mov r8, rax	      1481	inflate.c	FUNCTION_13	IF_3
0x40026a2	     0xf8466010000	                            je 0x400280e	      1483	inflate.c	FUNCTION_13	IF_3	IF_4
0x40026a8	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_18	CALL_3
0x40026ab	      0x498d7c2408	                      lea rdi, [r12 + 8]	        53	string3.h	FUNCTION_18	CALL_3
0x40026b0	          0x4c89e1	                            mov rcx, r12	        53	string3.h	FUNCTION_18	CALL_3
0x40026b3	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_18	CALL_3
0x40026b6	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_18	CALL_3
0x40026ba	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_18	CALL_3
0x40026be	        0x488b4308	                mov rax, qword [rbx + 8]	        53	string3.h	FUNCTION_18	CALL_3
0x40026c2	          0x4829f9	                            sub rcx, rdi	        53	string3.h	FUNCTION_18	CALL_3
0x40026c5	          0x4829ce	                            sub rsi, rcx	        53	string3.h	FUNCTION_18	CALL_3
0x40026c8	    0x81c1f81b0000	                         add ecx, 0x1bf8	        53	string3.h	FUNCTION_18	CALL_3
0x40026ce	          0xc1e903	                              shr ecx, 3	        53	string3.h	FUNCTION_18	CALL_3
0x40026d1	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_18	CALL_3
0x40026d5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_18	CALL_3
0x40026d9	        0x48894510	            mov qword [rbp + 0x10], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x40026dd	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_18	CALL_3
0x40026e1	        0x48894518	            mov qword [rbp + 0x18], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x40026e5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_18	CALL_3
0x40026e9	        0x48894520	            mov qword [rbp + 0x20], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x40026ed	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        53	string3.h	FUNCTION_18	CALL_3
0x40026f1	        0x48894528	            mov qword [rbp + 0x28], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x40026f5	        0x488b4330	            mov rax, qword [rbx + 0x30] 	        53	string3.h	FUNCTION_18	CALL_3
0x40026f9	        0x48894530	            mov qword [rbp + 0x30], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x40026fd	        0x488b4338	            mov rax, qword [rbx + 0x38] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002701	        0x48894538	            mov qword [rbp + 0x38], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002705	        0x488b4340	            mov rax, qword [rbx + 0x40] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002709	        0x48894540	            mov qword [rbp + 0x40], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x400270d	        0x488b4348	            mov rax, qword [rbx + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002711	        0x48894548	            mov qword [rbp + 0x48], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002715	        0x488b4350	            mov rax, qword [rbx + 0x50] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002719	        0x48894550	            mov qword [rbp + 0x50], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x400271d	        0x488b4358	            mov rax, qword [rbx + 0x58] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002721	        0x48894558	            mov qword [rbp + 0x58], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002725	        0x488b4360	            mov rax, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002729	        0x48894560	            mov qword [rbp + 0x60], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x400272d	        0x488b4368	            mov rax, qword [rbx + 0x68] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002731	        0x48894568	            mov qword [rbp + 0x68], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x4002735	        0x498b4500	                    mov rax, qword [r13]	        53	string3.h	FUNCTION_18	CALL_3
0x4002739	        0x49890424	                    mov qword [r12], rax	        53	string3.h	FUNCTION_18	CALL_3
0x400273d	    0x498b85f01b00	          mov rax, qword [r13 + 0x1bf0] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002744	    0x49898424f01b	          mov qword [r12 + 0x1bf0], rax 	        53	string3.h	FUNCTION_18	CALL_3
0x400274c	    0x498d84245805	                  lea rax, [r12 + 0x558]	        53	string3.h	FUNCTION_18	CALL_3
0x4002754	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_18	CALL_3
0x4002757	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	      1493	inflate.c	FUNCTION_13	IF_5
0x400275b	    0x498d8d580500	                  lea rcx, [r13 + 0x558]	      1493	inflate.c	FUNCTION_13	IF_5
0x4002762	        0x49892c24	                    mov qword [r12], rbp	      1492	inflate.c	FUNCTION_13
0x4002766	          0x4839ca	                            cmp rdx, rcx	      1493	inflate.c	FUNCTION_13	IF_5
0x4002769	            0x734d	                           jae 0x40027b8	      1493	inflate.c	FUNCTION_13	IF_5
0x400276b	          0x4829c8	                            sub rax, rcx	      1498	inflate.c	FUNCTION_13
0x400276e	    0x490385900000	             add rax, qword [r13 + 0x90]	      1498	inflate.c	FUNCTION_13
0x4002775	          0x4d85c0	                             test r8, r8	      1499	inflate.c	FUNCTION_13	IF_6
0x4002778	    0x498984249000	             mov qword [r12 + 0x90], rax	      1498	inflate.c	FUNCTION_13
0x4002780	            0x741a	                            je 0x400279c	      1499	inflate.c	FUNCTION_13	IF_6
0x4002782	        0x418b4d38	            mov ecx, dword [r13 + 0x38] 	        53	string3.h	FUNCTION_18	CALL_3
0x4002786	        0x498b7548	            mov rsi, qword [r13 + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x400278a	      0xba01000000	                              mov edx, 1	        53	string3.h	FUNCTION_18	CALL_3
0x400278f	          0x4c89c7	                             mov rdi, r8	        53	string3.h	FUNCTION_18	CALL_3
0x4002792	            0xd3e2	                             shl edx, cl	        53	string3.h	FUNCTION_18	CALL_3
0x4002794	      0xe800000000	                          call 0x4002799	        53	string3.h	FUNCTION_18	CALL_3
0x4002799	          0x4989c0	                             mov r8, rax	        53	string3.h	FUNCTION_18	CALL_3
0x400279c	      0x4d89442448	              mov qword [r12 + 0x48], r8	      1503	inflate.c	FUNCTION_13
0x40027a1	            0x31c0	                            xor eax, eax	      1505	inflate.c	FUNCTION_13
0x40027a3	        0x4c896538	            mov qword [rbp + 0x38], r12 	      1504	inflate.c	FUNCTION_13
0x40027a7	        0x4883c408	                              add rsp, 8	      1506	inflate.c	FUNCTION_13
0x40027ab	              0x5b	                                 pop rbx	      1506	inflate.c	FUNCTION_13
0x40027ac	              0x5d	                                 pop rbp	      1506	inflate.c	FUNCTION_13
0x40027ad	            0x415c	                                 pop r12	      1506	inflate.c	FUNCTION_13
0x40027af	            0x415d	                                 pop r13	      1506	inflate.c	FUNCTION_13
0x40027b1	              0xc3	                                     ret	      1506	inflate.c	FUNCTION_13
0x40027b2	    0x660f1f440000	                    nop word [rax + rax]	      1506	inflate.c	FUNCTION_13
0x40027b8	    0x498d85e41b00	                 lea rax, [r13 + 0x1be4]	      1494	inflate.c	FUNCTION_13	IF_5
0x40027bf	          0x4839c2	                            cmp rdx, rax	      1493	inflate.c	FUNCTION_13	IF_5
0x40027c2	    0x498d84245805	                  lea rax, [r12 + 0x558]	      1495	inflate.c	FUNCTION_13	IF_5
0x40027ca	            0x779f	                            ja 0x400276b	      1493	inflate.c	FUNCTION_13	IF_5
0x40027cc	          0x4829ca	                            sub rdx, rcx	      1495	inflate.c	FUNCTION_13	IF_5
0x40027cf	          0x4801c2	                            add rdx, rax	      1495	inflate.c	FUNCTION_13	IF_5
0x40027d2	      0x4989542468	             mov qword [r12 + 0x68], rdx	      1495	inflate.c	FUNCTION_13	IF_5
0x40027d7	          0x4889c2	                            mov rdx, rax	      1496	inflate.c	FUNCTION_13	IF_5
0x40027da	          0x4829ca	                            sub rdx, rcx	      1496	inflate.c	FUNCTION_13	IF_5
0x40027dd	        0x49035570	             add rdx, qword [r13 + 0x70]	      1496	inflate.c	FUNCTION_13	IF_5
0x40027e1	      0x4989542470	             mov qword [r12 + 0x70], rdx	      1496	inflate.c	FUNCTION_13	IF_5
0x40027e6	            0xeb83	                           jmp 0x400276b	      1496	inflate.c	FUNCTION_13	IF_5
0x40027e8	     0xf1f84000000	                   nop dword [rax + rax]	      1496	inflate.c	FUNCTION_13	IF_5
0x40027f0	          0x4531c0	                            xor r8d, r8d	      1479	inflate.c	FUNCTION_13
0x40027f3	      0xe9b0feffff	                           jmp 0x40026a8	      1479	inflate.c	FUNCTION_13
0x40027f8	     0xf1f84000000	                   nop dword [rax + rax]	      1479	inflate.c	FUNCTION_13
0x4002800	      0xb8feffffff	                     mov eax, 0xfffffffe	      1472	inflate.c	FUNCTION_13	IF_1
0x4002805	            0xeba0	                           jmp 0x40027a7	      1472	inflate.c	FUNCTION_13	IF_1
0x4002807	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1478	inflate.c	FUNCTION_13	IF_2
0x400280c	            0xeb99	                           jmp 0x40027a7	      1478	inflate.c	FUNCTION_13	IF_2
0x400280e	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x4002812	          0x4c89e6	                            mov rsi, r12	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x4002815	          0xff5348	                 call qword [rbx + 0x48]	      1484	inflate.c	FUNCTION_13	IF_3	IF_4	CALL_4
0x4002818	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1485	inflate.c	FUNCTION_13	IF_3	IF_4
0x400281d	            0xeb88	                           jmp 0x40027a7	      1485	inflate.c	FUNCTION_13	IF_3	IF_4
inflateValidate	functions,0:CALL,1:IF,2:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,1	14
0x4002850	      0xe8ebd7ffff	              call sym.inflateStateCheck	      1532	inflate.c	FUNCTION_15	CALL_1
0x4002855	            0x85c0	                           test eax, eax	      1532	inflate.c	FUNCTION_15	CALL_1
0x4002857	            0x751f	                           jne 0x4002878	      1532	inflate.c	FUNCTION_15	CALL_1
0x4002859	            0x85f6	                           test esi, esi	      1534	inflate.c	FUNCTION_15	IF_2
0x400285b	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      1533	inflate.c	FUNCTION_15
0x400285f	            0x750f	                           jne 0x4002870	      1534	inflate.c	FUNCTION_15	IF_2
0x4002861	        0x836210fb	      and dword [rdx + 0x10], 0xfffffffb	      1537	inflate.c	FUNCTION_15	ELSE_1
0x4002865	              0xc3	                                     ret	      1537	inflate.c	FUNCTION_15	ELSE_1
0x4002866	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1537	inflate.c	FUNCTION_15	ELSE_1
0x4002870	        0x834a1004	                or dword [rdx + 0x10], 4	      1535	inflate.c	FUNCTION_15	IF_2
0x4002874	              0xc3	                                     ret	      1535	inflate.c	FUNCTION_15	IF_2
0x4002875	           0xf1f00	                         nop dword [rax]	      1535	inflate.c	FUNCTION_15	IF_2
0x4002878	      0xb8feffffff	                     mov eax, 0xfffffffe	      1532	inflate.c	FUNCTION_15	CALL_1
0x400287d	              0xc3	                                     ret	      1539	inflate.c	FUNCTION_15
inflateReset	functions,0:CALL,2:IF,1:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	11
0x40002a0	      0xe89bfdffff	              call sym.inflateStateCheck	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002a5	            0x85c0	                           test eax, eax	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002a7	            0x7527	                           jne 0x40002d0	       149	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_1
0x40002a9	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       150	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002ad	    0xc7403c000000	               mov dword [rax + 0x3c], 0	       151	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002b4	    0xc74040000000	               mov dword [rax + 0x40], 0	       152	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002bb	    0xc74044000000	               mov dword [rax + 0x44], 0	       153	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002c2	      0xe929ffffff	                jmp sym.inflateResetKeep	       154	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_2
0x40002c7	    0x660f1f840000	                    nop word [rax + rax]	       154	inflate.c	FOR_1	IF_7	FUNCTION_3	CALL_2
0x40002d0	      0xb8feffffff	                     mov eax, 0xfffffffe	       155	inflate.c	FOR_1	IF_7	FUNCTION_3
0x40002d5	              0xc3	                                     ret	       155	inflate.c	FOR_1	IF_7	FUNCTION_3
inflateStateCheck	functions,0:CALL,0:IF,2:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	23
0x4000040	          0x4885ff	                           test rdi, rdi	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000043	            0x742b	                            je 0x4000070	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000045	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400004a	            0x7424	                            je 0x4000070	       109	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400004c	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000051	            0x741d	                            je 0x4000070	       110	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000053	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       112	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000057	      0xb801000000	                              mov eax, 1	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400005c	          0x4885d2	                           test rdx, rdx	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x400005f	            0x7405	                            je 0x4000066	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000061	          0x483b3a	                    cmp rdi, qword [rdx]	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000064	            0x741a	                            je 0x4000080	       113	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_2
0x4000066	            0xf3c3	                                     ret	       117	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       117	inflate.c	FOR_1	IF_7	FUNCTION_1
0x4000070	      0xb801000000	                              mov eax, 1	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000075	              0xc3	                                     ret	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000080	          0x8b4208	                mov eax, dword [rdx + 8]	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000083	      0x2d343f0000	                         sub eax, 0x3f34	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000088	          0x83f81f	                           cmp eax, 0x1f	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400008b	           0xf97c0	                                 seta al	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x400008e	           0xfb6c0	                           movzx eax, al	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
0x4000091	              0xc3	                                     ret	       111	inflate.c	FOR_1	IF_7	FUNCTION_1	IF_1
inflateMark	functions,0:CALL,1:IF,1:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	27
0x4002880	      0xe8bbd7ffff	              call sym.inflateStateCheck	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x4002885	            0x85c0	                           test eax, eax	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x4002887	            0x7547	                           jne 0x40028d0	      1546	inflate.c	FUNCTION_16	IF_1	CALL_1
0x4002889	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	      1548	inflate.c	FUNCTION_16
0x400288d	    0x486381ec1b00	       movsxd rax, dword [rcx + 0x1bec] 	      1549	inflate.c	FUNCTION_16
0x4002894	          0x8b7108	                mov esi, dword [rcx + 8]	      1550	inflate.c	FUNCTION_16
0x4002897	        0x48c1e010	                           shl rax, 0x10	      1549	inflate.c	FUNCTION_16
0x400289b	    0x81fe433f0000	                         cmp esi, 0x3f43	      1549	inflate.c	FUNCTION_16
0x40028a1	          0x4889c2	                            mov rdx, rax	      1549	inflate.c	FUNCTION_16
0x40028a4	            0x7412	                            je 0x40028b8	      1549	inflate.c	FUNCTION_16
0x40028a6	            0x31c0	                            xor eax, eax	      1549	inflate.c	FUNCTION_16
0x40028a8	    0x81fe4c3f0000	                         cmp esi, 0x3f4c	      1549	inflate.c	FUNCTION_16
0x40028ae	            0x7410	                            je 0x40028c0	      1549	inflate.c	FUNCTION_16
0x40028b0	          0x4801d0	                            add rax, rdx	      1549	inflate.c	FUNCTION_16
0x40028b3	              0xc3	                                     ret	      1549	inflate.c	FUNCTION_16
0x40028b4	         0xf1f4000	                         nop dword [rax]	      1549	inflate.c	FUNCTION_16
0x40028b8	          0x8b415c	            mov eax, dword [rcx + 0x5c] 	      1549	inflate.c	FUNCTION_16
0x40028bb	          0x4801d0	                            add rax, rdx	      1549	inflate.c	FUNCTION_16
0x40028be	              0xc3	                                     ret	      1549	inflate.c	FUNCTION_16
0x40028bf	              0x90	                                     nop	      1549	inflate.c	FUNCTION_16
0x40028c0	    0x8b81f01b0000	          mov eax, dword [rcx + 0x1bf0] 	      1549	inflate.c	FUNCTION_16
0x40028c6	          0x2b415c	             sub eax, dword [rcx + 0x5c]	      1549	inflate.c	FUNCTION_16
0x40028c9	          0x4801d0	                            add rax, rdx	      1549	inflate.c	FUNCTION_16
0x40028cc	              0xc3	                                     ret	      1549	inflate.c	FUNCTION_16
0x40028cd	           0xf1f00	                         nop dword [rax]	      1549	inflate.c	FUNCTION_16
0x40028d0	    0x48c7c00000ff	             mov rax, 0xffffffffffff0000	      1547	inflate.c	FUNCTION_16	IF_1
0x40028d7	              0xc3	                                     ret	      1552	inflate.c	FUNCTION_16
inflateReset2	functions,0:CALL,3:IF,5:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,1	54
0x40002e0	            0x4155	                                push r13	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002e2	            0x4154	                                push r12	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002e4	          0x4989fc	                            mov r12, rdi	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002e7	              0x55	                                push rbp	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002e8	              0x53	                                push rbx	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002e9	        0x4883ec08	                              sub rsp, 8	       160	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002ed	      0xe84efdffff	              call sym.inflateStateCheck	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x40002f2	            0x85c0	                           test eax, eax	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x40002f4	            0x757a	                           jne 0x4000370	       165	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_1
0x40002f6	            0x85f6	                           test esi, esi	       169	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x40002f8	            0x89f3	                            mov ebx, esi	       169	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x40002fa	        0x488b6f38	            mov rbp, qword [rdi + 0x38] 	       166	inflate.c	FOR_1	IF_7	FUNCTION_4
0x40002fe	            0x7860	                            js 0x4000360	       169	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000300	          0x4189f5	                           mov r13d, esi	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x4000303	            0x89f0	                            mov eax, esi	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x4000305	        0x41c1fd04	                             sar r13d, 4	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x4000309	          0x83e00f	                            and eax, 0xf	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x400030c	        0x4183c505	                             add r13d, 5	       174	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1
0x4000310	          0x83fe2f	                           cmp esi, 0x2f	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x4000313	           0xf4ed8	                         cmovle ebx, eax	       177	inflate.c	FOR_1	IF_7	FUNCTION_4	ELSE_1	IF_3
0x4000316	          0x8d43f8	                      lea eax, [rbx - 8]	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x4000319	          0x83f807	                              cmp eax, 7	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x400031c	            0x7604	                           jbe 0x4000322	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x400031e	            0x85db	                           test ebx, ebx	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x4000320	            0x754e	                           jne 0x4000370	       182	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_4
0x4000322	        0x488b7548	            mov rsi, qword [rbp + 0x48] 	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000326	          0x4885f6	                           test rsi, rsi	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000329	            0x7417	                            je 0x4000342	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x400032b	          0x3b5d38	            cmp ebx, dword [rbp + 0x38] 	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x400032e	            0x7412	                            je 0x4000342	       184	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000330	      0x498b7c2450	            mov rdi, qword [r12 + 0x50] 	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x4000335	      0x41ff542448	                 call qword [r12 + 0x48]	       185	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5	CALL_2
0x400033a	    0x48c745480000	               mov qword [rbp + 0x48], 0	       186	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_5
0x4000342	        0x44896d10	           mov dword [rbp + 0x10], r13d 	       190	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000346	          0x895d38	            mov dword [rbp + 0x38], ebx 	       191	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000349	        0x4883c408	                              add rsp, 8	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400034d	              0x5b	                                 pop rbx	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400034e	          0x4c89e7	                            mov rdi, r12	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x4000351	              0x5d	                                 pop rbp	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000352	            0x415c	                                 pop r12	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000354	            0x415d	                                 pop r13	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000356	      0xe945ffffff	                    jmp sym.inflateReset	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x400035b	       0xf1f440000	                   nop dword [rax + rax]	       192	inflate.c	FOR_1	IF_7	FUNCTION_4	CALL_3
0x4000360	            0xf7db	                                 neg ebx	       171	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000362	          0x4531ed	                          xor r13d, r13d	       170	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000365	            0xebaf	                           jmp 0x4000316	       170	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000367	    0x660f1f840000	                    nop word [rax + rax]	       170	inflate.c	FOR_1	IF_7	FUNCTION_4	IF_2
0x4000370	        0x4883c408	                              add rsp, 8	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000374	      0xb8feffffff	                     mov eax, 0xfffffffe	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x4000379	              0x5b	                                 pop rbx	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400037a	              0x5d	                                 pop rbp	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400037b	            0x415c	                                 pop r12	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400037d	            0x415d	                                 pop r13	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
0x400037f	              0xc3	                                     ret	       193	inflate.c	FOR_1	IF_7	FUNCTION_4
inflateEnd	functions,0:CALL,4:IF,2:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	27
0x40021c0	              0x55	                                push rbp	      1279	inflate.c	FUNCTION_8
0x40021c1	              0x53	                                push rbx	      1279	inflate.c	FUNCTION_8
0x40021c2	          0x4889fb	                            mov rbx, rdi	      1279	inflate.c	FUNCTION_8
0x40021c5	        0x4883ec08	                              sub rsp, 8	      1279	inflate.c	FUNCTION_8
0x40021c9	      0xe872deffff	              call sym.inflateStateCheck	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x40021ce	            0x85c0	                           test eax, eax	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x40021d0	            0x753e	                           jne 0x4002210	      1281	inflate.c	FUNCTION_8	IF_1	CALL_1
0x40021d2	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      1283	inflate.c	FUNCTION_8
0x40021d6	            0x89c5	                            mov ebp, eax	      1283	inflate.c	FUNCTION_8
0x40021d8	        0x488b7248	            mov rsi, qword [rdx + 0x48] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x40021dc	          0x4885f6	                           test rsi, rsi	      1284	inflate.c	FUNCTION_8	CALL_2
0x40021df	            0x740b	                            je 0x40021ec	      1284	inflate.c	FUNCTION_8	CALL_2
0x40021e1	        0x488b7f50	            mov rdi, qword [rdi + 0x50] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x40021e5	          0xff5348	                 call qword [rbx + 0x48]	      1284	inflate.c	FUNCTION_8	CALL_2
0x40021e8	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1284	inflate.c	FUNCTION_8	CALL_2
0x40021ec	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1285	inflate.c	FUNCTION_8	CALL_3
0x40021f0	          0x4889d6	                            mov rsi, rdx	      1285	inflate.c	FUNCTION_8	CALL_3
0x40021f3	          0xff5348	                 call qword [rbx + 0x48]	      1285	inflate.c	FUNCTION_8	CALL_3
0x40021f6	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1286	inflate.c	FUNCTION_8
0x40021fe	        0x4883c408	                              add rsp, 8	      1289	inflate.c	FUNCTION_8
0x4002202	            0x89e8	                            mov eax, ebp	      1289	inflate.c	FUNCTION_8
0x4002204	              0x5b	                                 pop rbx	      1289	inflate.c	FUNCTION_8
0x4002205	              0x5d	                                 pop rbp	      1289	inflate.c	FUNCTION_8
0x4002206	              0xc3	                                     ret	      1289	inflate.c	FUNCTION_8
0x4002207	    0x660f1f840000	                    nop word [rax + rax]	      1289	inflate.c	FUNCTION_8
0x4002210	      0xbdfeffffff	                     mov ebp, 0xfffffffe	      1282	inflate.c	FUNCTION_8	IF_1
0x4002215	            0xebe7	                           jmp 0x40021fe	      1282	inflate.c	FUNCTION_8	IF_1
inflate	functions,0:CALL,34:IF,103:DO,4:WHILE,4:FOR,6:SWITCH,2:ELSE,8	1797
0x4000510	            0x4157	                                push r15	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000512	            0x4156	                                push r14	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000514	            0x4155	                                push r13	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000516	            0x4154	                                push r12	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000518	              0x55	                                push rbp	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000519	              0x53	                                push rbx	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400051a	        0x4883ec68	                           sub rsp, 0x68	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400051e	    0x64488b042528	                mov rax, qword fs:[0x28]	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000527	      0x4889442458	             mov qword [rsp + 0x58], rax	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400052c	            0x31c0	                            xor eax, eax	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400052e	        0x8974241c	             mov dword [rsp + 0x1c], esi	       625	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000532	        0x48893c24	                    mov qword [rsp], rdi	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000536	      0xe805fbffff	              call sym.inflateStateCheck	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400053b	            0x85c0	                           test eax, eax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400053d	        0x89442430	             mov dword [rsp + 0x30], eax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000541	     0xf8559130000	                           jne 0x40018a0	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000547	        0x4c8b1c24	                    mov r11, qword [rsp]	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400054b	        0x498b4318	            mov rax, qword [r11 + 0x18] 	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400054f	          0x4885c0	                           test rax, rax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000552	      0x4889442410	             mov qword [rsp + 0x10], rax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000557	     0xf8443130000	                            je 0x40018a0	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400055d	          0x498b2b	                    mov rbp, qword [r11]	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x4000560	          0x4885ed	                           test rbp, rbp	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000563	     0xf8447120000	                            je 0x40017b0	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000569	        0x418b4308	                mov eax, dword [r11 + 8]	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x400056d	        0x89442420	             mov dword [rsp + 0x20], eax	       645	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1	CALL_1
0x4000571	        0x4d8b6b38	            mov r13, qword [r11 + 0x38] 	       649	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000575	        0x418b4508	                mov eax, dword [r13 + 8]	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000579	      0x3d3f3f0000	                         cmp eax, 0x3f3f	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x400057e	     0xf84ac010000	                            je 0x4000730	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000584	        0x418b7b20	            mov edi, dword [r11 + 0x20] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000588	    0x498db5580500	                  lea rsi, [r13 + 0x558]	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x400058f	        0x4d8b5550	            mov r10, qword [r13 + 0x50] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000593	        0x418b5d58	            mov ebx, dword [r13 + 0x58] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x4000597	      0x448b642420	           mov r12d, dword [rsp + 0x20] 	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x400059c	      0x4889742440	             mov qword [rsp + 0x40], rsi	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x40005a1	    0x498db5180300	                  lea rsi, [r13 + 0x318]	      1024	inflate.c	FUNCTION_7	SWITCH_1
0x40005a8	    0xc74424240000	               mov dword [rsp + 0x24], 0	       654	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40005b0	          0x893c24	                    mov dword [rsp], edi	       651	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40005b3	        0x897c2408	                mov dword [rsp + 8], edi	       653	inflate.c	IF_7	FOR_1	FUNCTION_7
0x40005b7	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x40005bb	      0x4889742438	             mov qword [rsp + 0x38], rsi	      1024	inflate.c	FUNCTION_7	SWITCH_1
0x40005c0	      0x4c895c2428	             mov qword [rsp + 0x28], r11	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x40005c5	          0x8d77fb	                      lea esi, [rdi - 5]	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x40005c8	        0x89742434	             mov dword [rsp + 0x34], esi	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x40005cc	      0x2d343f0000	                         sub eax, 0x3f34	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005d1	          0x83f81e	                           cmp eax, 0x1e	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005d4	     0xf87c6120000	                            ja 0x40018a0	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005da	    0xff24c5000000	                       jmp qword [rax*8]	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005e1	     0xf1f80000000	                         nop dword [rax]	       656	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40005e8	          0x83fb1f	                           cmp ebx, 0x1f	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005eb	            0x7736	                            ja 0x4000623	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005ed	          0x4585e4	                         test r12d, r12d	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005f0	     0xf849c110000	                            je 0x4001792	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005f6	            0x89d9	                            mov ecx, ebx	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005f8	            0xeb0f	                           jmp 0x4000609	       838	inflate.c	FUNCTION_7	SWITCH_1
0x40005fa	    0x660f1f440000	                    nop word [rax + rax]	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000600	          0x4585e4	                         test r12d, r12d	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000603	     0xf8487110000	                            je 0x4001790	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000609	        0x4883c501	                              add rbp, 1	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400060d	         0xfb645ff	               movzx eax, byte [rbp - 1]	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000611	        0x4183ec01	                             sub r12d, 1	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000615	          0x48d3e0	                             shl rax, cl	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000618	          0x83c108	                              add ecx, 8	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400061b	          0x4901c2	                            add r10, rax	       838	inflate.c	FUNCTION_7	SWITCH_1
0x400061e	          0x83f91f	                           cmp ecx, 0x1f	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000621	            0x76dd	                           jbe 0x4000600	       838	inflate.c	FUNCTION_7	SWITCH_1
0x4000623	          0x4c89d2	                            mov rdx, r10	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000626	          0x4c89d0	                            mov rax, r10	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000629	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400062e	        0x48c1ea18	                           shr rdx, 0x18	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000632	        0x48c1e808	                              shr rax, 8	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000636	      0x2500ff0000	                         and eax, 0xff00	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400063b	           0xfb6d2	                           movzx edx, dl	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400063e	          0x4801c2	                            add rdx, rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000641	          0x4c89d0	                            mov rax, r10	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000644	        0x49c1e218	                           shl r10, 0x18	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000648	      0x2500ff0000	                         and eax, 0xff00	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400064d	          0x4589d2	                          mov r10d, r10d	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000650	        0x48c1e008	                              shl rax, 8	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000654	          0x4801d0	                            add rax, rdx	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000657	          0x4c01d0	                            add rax, r10	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x400065a	          0x4531d2	                          xor r10d, r10d	       840	inflate.c	FUNCTION_7	SWITCH_1
0x400065d	        0x49894520	             mov qword [r13 + 0x20], rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000661	        0x48894360	             mov qword [rbx + 0x60], rax	       839	inflate.c	FUNCTION_7	SWITCH_1	CALL_10
0x4000665	            0x31db	                            xor ebx, ebx	       840	inflate.c	FUNCTION_7	SWITCH_1
0x4000667	    0x41c745083e3f	            mov dword [r13 + 8], 0x3f3e 	       841	inflate.c	FUNCTION_7	SWITCH_1
0x400066f	        0x418b4514	            mov eax, dword [r13 + 0x14] 	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000673	            0x85c0	                           test eax, eax	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4000675	     0xf8447190000	                            je 0x4001fc2	       843	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x400067b	            0x31ff	                            xor edi, edi	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x400067d	            0x31d2	                            xor edx, edx	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x400067f	            0x31f6	                            xor esi, esi	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000681	      0x4c89542448	             mov qword [rsp + 0x48], r10	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000686	      0xe800000000	                          call 0x400068b	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x400068b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000690	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       848	inflate.c	FUNCTION_7	SWITCH_1
0x4000695	        0x49894520	             mov qword [r13 + 0x20], rax	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x4000699	        0x48894760	             mov qword [rdi + 0x60], rax	       847	inflate.c	FUNCTION_7	SWITCH_1	CALL_11
0x400069d	    0x41c745083f3f	            mov dword [r13 + 8], 0x3f3f 	       848	inflate.c	FUNCTION_7	SWITCH_1
0x40006a5	      0x837c243401	               cmp dword [rsp + 0x34], 1	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x40006aa	     0xf86e2100000	                           jbe 0x4001792	       850	inflate.c	FUNCTION_7	SWITCH_1	IF_46
0x40006b0	        0x458b7d0c	            mov r15d, dword [r13 + 0xc] 	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x40006b4	          0x4585ff	                         test r15d, r15d	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x40006b7	     0xf858b000000	                           jne 0x4000748	       852	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x40006bd	          0x83fb02	                              cmp ebx, 2	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006c0	            0x7720	                            ja 0x40006e2	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006c2	          0x4585e4	                         test r12d, r12d	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006c5	     0xf84c7100000	                            je 0x4001792	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006cb	        0x4883c501	                              add rbp, 1	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006cf	         0xfb645ff	               movzx eax, byte [rbp - 1]	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006d3	            0x89d9	                            mov ecx, ebx	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006d5	        0x4183ec01	                             sub r12d, 1	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006d9	          0x83c308	                              add ebx, 8	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006dc	          0x48d3e0	                             shl rax, cl	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006df	          0x4901c2	                            add r10, rax	       857	inflate.c	FUNCTION_7	SWITCH_1
0x40006e2	          0x4489d0	                           mov eax, r10d	       858	inflate.c	FUNCTION_7	SWITCH_1
0x40006e5	          0x4c89d2	                            mov rdx, r10	       859	inflate.c	FUNCTION_7	SWITCH_1
0x40006e8	          0x83e001	                              and eax, 1	       858	inflate.c	FUNCTION_7	SWITCH_1
0x40006eb	          0x48d1ea	                              shr rdx, 1	       859	inflate.c	FUNCTION_7	SWITCH_1
0x40006ee	        0x4189450c	              mov dword [r13 + 0xc], eax	       858	inflate.c	FUNCTION_7	SWITCH_1
0x40006f2	            0x89d0	                            mov eax, edx	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40006f4	          0x83e003	                              and eax, 3	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40006f7	          0x83f802	                              cmp eax, 2	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x40006fa	     0xf84fb130000	                            je 0x4001afb	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000700	          0x83f803	                              cmp eax, 3	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000703	     0xf849c140000	                            je 0x4001ba5	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000709	          0x83f801	                              cmp eax, 1	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x400070c	     0xf8456140000	                            je 0x4001b68	       860	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4000712	    0x41c74508413f	            mov dword [r13 + 8], 0x3f41 	       864	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x400071a	      0xb8413f0000	                         mov eax, 0x3f41	       865	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x400071f	        0x48c1ea02	                              shr rdx, 2	       885	inflate.c	FUNCTION_7	SWITCH_1
0x4000723	          0x83eb03	                              sub ebx, 3	       885	inflate.c	FUNCTION_7	SWITCH_1
0x4000726	          0x4989d2	                            mov r10, rdx	       885	inflate.c	FUNCTION_7	SWITCH_1
0x4000729	      0xe99efeffff	                           jmp 0x40005cc	       886	inflate.c	FUNCTION_7	SWITCH_1
0x400072e	            0x6690	                                     nop	       886	inflate.c	FUNCTION_7	SWITCH_1
0x4000730	    0x41c74508403f	            mov dword [r13 + 8], 0x3f40 	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000738	      0xb8403f0000	                         mov eax, 0x3f40	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x400073d	      0xe942feffff	                           jmp 0x4000584	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000742	    0x660f1f440000	                    nop word [rax + rax]	       650	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_2
0x4000748	            0x89d9	                            mov ecx, ebx	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400074a	    0x41c745084e3f	            mov dword [r13 + 8], 0x3f4e 	       854	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000752	          0x83e3f8	                     and ebx, 0xfffffff8	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000755	          0x83e107	                              and ecx, 7	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000758	      0xb84e3f0000	                         mov eax, 0x3f4e	       855	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400075d	          0x49d3ea	                             shr r10, cl	       853	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000760	      0xe967feffff	                           jmp 0x40005cc	       855	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000765	           0xf1f00	                         nop dword [rax]	       855	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x4000768	        0x418b7564	            mov esi, dword [r13 + 0x64] 	       855	inflate.c	FUNCTION_7	SWITCH_1	IF_47
0x400076c	            0x85f6	                           test esi, esi	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400076e	            0x745b	                            je 0x40007cb	      1131	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000770	            0x39f3	                            cmp ebx, esi	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000772	            0x7338	                           jae 0x40007ac	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000774	          0x4585e4	                         test r12d, r12d	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000777	     0xf8415100000	                            je 0x4001792	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400077d	            0x89d9	                            mov ecx, ebx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400077f	            0xeb10	                           jmp 0x4000791	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000781	     0xf1f80000000	                         nop dword [rax]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000788	          0x4585e4	                         test r12d, r12d	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400078b	     0xf84ff0f0000	                            je 0x4001790	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000791	        0x4883c501	                              add rbp, 1	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000795	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x4000799	        0x4183ec01	                             sub r12d, 1	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x400079d	          0x48d3e0	                             shl rax, cl	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007a0	          0x83c108	                              add ecx, 8	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007a3	          0x4901c2	                            add r10, rax	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007a6	            0x39f1	                            cmp ecx, esi	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007a8	            0x72de	                            jb 0x4000788	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007aa	            0x89cb	                            mov ebx, ecx	      1132	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007ac	            0x89f1	                            mov ecx, esi	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007ae	      0xb801000000	                              mov eax, 1	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007b3	    0x4101b5ec1b00	           add dword [r13 + 0x1bec], esi	      1135	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007ba	            0xd3e0	                             shl eax, cl	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007bc	            0x29f3	                            sub ebx, esi	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007be	          0x83e801	                              sub eax, 1	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007c1	          0x4421d0	                           and eax, r10d	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007c4	        0x41014560	             add dword [r13 + 0x60], eax	      1133	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007c8	          0x49d3ea	                             shr r10, cl	      1134	inflate.c	FUNCTION_7	SWITCH_1	IF_81
0x40007cb	    0x41c745084c3f	            mov dword [r13 + 8], 0x3f4c 	      1145	inflate.c	FUNCTION_7	SWITCH_1
0x40007d3	          0x8b0424	                    mov eax, dword [rsp]	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x40007d6	            0x85c0	                           test eax, eax	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x40007d8	     0xf84b40f0000	                            je 0x4001792	      1147	inflate.c	FUNCTION_7	SWITCH_1	IF_83
0x40007de	        0x8b542408	                mov edx, dword [rsp + 8]	      1148	inflate.c	FUNCTION_7	SWITCH_1
0x40007e2	            0x29c2	                            sub edx, eax	      1148	inflate.c	FUNCTION_7	SWITCH_1
0x40007e4	        0x418b4560	            mov eax, dword [r13 + 0x60] 	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x40007e8	            0x39c2	                            cmp edx, eax	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x40007ea	     0xf8348100000	                           jae 0x4001838	      1149	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x40007f0	            0x29d0	                            sub eax, edx	      1150	inflate.c	FUNCTION_7	SWITCH_1	IF_84
0x40007f2	        0x413b4540	            cmp eax, dword [r13 + 0x40] 	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x40007f6	     0xf873c120000	                            ja 0x4001a38	      1151	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85
0x40007fc	        0x418b7544	            mov esi, dword [r13 + 0x44] 	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4000800	            0x39f0	                            cmp eax, esi	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4000802	     0xf8638130000	                           jbe 0x4001b40	      1171	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4000808	            0x29f0	                            sub eax, esi	      1172	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x400080a	        0x418b753c	            mov esi, dword [r13 + 0x3c] 	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x400080e	            0x29c6	                            sub esi, eax	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4000810	        0x49037548	             add rsi, qword [r13 + 0x48]	      1173	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_90
0x4000814	        0x418b555c	            mov edx, dword [r13 + 0x5c] 	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4000818	            0x39d0	                            cmp eax, edx	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x400081a	           0xf47c2	                          cmova eax, edx	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x400081d	      0xe924100000	                           jmp 0x4001846	      1177	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_91
0x4000822	      0x837c241c06	               cmp dword [rsp + 0x1c], 6	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x4000827	    0x41c74508473f	            mov dword [r13 + 8], 0x3f47 	      1040	inflate.c	FUNCTION_7	SWITCH_1
0x400082f	     0xf845d0f0000	                            je 0x4001792	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x4000835	           0xf1f00	                         nop dword [rax]	      1041	inflate.c	FUNCTION_7	SWITCH_1	IF_67
0x4000838	    0x41c74508483f	            mov dword [r13 + 8], 0x3f48 	      1043	inflate.c	FUNCTION_7	SWITCH_1
0x4000840	        0x4183fc05	                             cmp r12d, 5	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4000844	            0x760f	                           jbe 0x4000855	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4000846	          0x8b3424	                    mov esi, dword [rsp]	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4000849	    0x81fe01010000	                          cmp esi, 0x101	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400084f	     0xf87d3100000	                            ja 0x4001928	      1045	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4000855	        0x418b4d78	            mov ecx, dword [r13 + 0x78] 	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000859	    0x41bb01000000	                             mov r11d, 1	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400085f	        0x4d8b4568	              mov r8, qword [r13 + 0x68]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000863	    0x41c785ec1b00	            mov dword [r13 + 0x1bec], 0 	      1053	inflate.c	FUNCTION_7	SWITCH_1
0x400086e	          0x41d3e3	                            shl r11d, cl	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000871	        0x4183eb01	                             sub r11d, 1	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000875	          0x4489d8	                           mov eax, r11d	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000878	          0x4421d0	                           and eax, r10d	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400087b	        0x498d0480	                   lea rax, [r8 + rax*4]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400087f	         0xfb65001	               movzx edx, byte [rax + 1]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000883	           0xfb630	                   movzx esi, byte [rax]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000886	         0xfb77802	               movzx edi, word [rax + 2]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400088a	           0xfb6c2	                           movzx eax, dl	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x400088d	            0x39c3	                            cmp ebx, eax	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x400088f	          0x4189c1	                            mov r9d, eax	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4000892	            0x7353	                           jae 0x40008e7	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x4000894	          0x4585e4	                         test r12d, r12d	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x4000897	     0xf84f50e0000	                            je 0x4001792	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400089d	            0x89d9	                            mov ecx, ebx	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x400089f	            0xeb10	                           jmp 0x40008b1	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008a1	     0xf1f80000000	                         nop dword [rax]	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008a8	          0x4585e4	                         test r12d, r12d	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008ab	     0xf84df0e0000	                            je 0x4001790	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008b1	        0x4883c501	                              add rbp, 1	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008b5	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008b9	        0x4183ec01	                             sub r12d, 1	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008bd	          0x48d3e0	                             shl rax, cl	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008c0	          0x83c108	                              add ecx, 8	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008c3	          0x4901c2	                            add r10, rax	      1057	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008c6	          0x4489d8	                           mov eax, r11d	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008c9	          0x4421d0	                           and eax, r10d	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008cc	        0x498d0480	                   lea rax, [r8 + rax*4]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008d0	         0xfb65001	               movzx edx, byte [rax + 1]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008d4	           0xfb630	                   movzx esi, byte [rax]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008d7	         0xfb77802	               movzx edi, word [rax + 2]	      1055	inflate.c	FUNCTION_7	SWITCH_1	FOR_3
0x40008db	           0xfb6c2	                           movzx eax, dl	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x40008de	            0x39c8	                            cmp eax, ecx	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x40008e0	          0x4189c1	                            mov r9d, eax	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x40008e3	            0x77c3	                            ja 0x40008a8	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x40008e5	            0x89cb	                            mov ebx, ecx	      1056	inflate.c	FUNCTION_7	SWITCH_1	FOR_3	IF_70
0x40008e7	          0x4084f6	                           test sil, sil	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40008ea	     0xf8420120000	                            je 0x4001b10	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40008f0	        0x40f6c6f0	                          test sil, 0xf0	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40008f4	     0xf8516120000	                           jne 0x4001b10	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x40008fa	          0x8d0c06	                    lea ecx, [rsi + rax]	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x40008fd	    0x41bf01000000	                             mov r15d, 1	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000903	          0x4189c3	                           mov r11d, eax	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000906	        0x440fb7f7	                          movzx r14d, di	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400090a	          0x41d3e7	                            shl r15d, cl	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400090d	            0x89d1	                            mov ecx, edx	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400090f	        0x4183ef01	                             sub r15d, 1	      1063	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000913	          0x4489f8	                           mov eax, r15d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000916	          0x4421d0	                           and eax, r10d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000919	            0xeb2e	                           jmp 0x4000949	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400091b	       0xf1f440000	                   nop dword [rax + rax]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000920	          0x4585e4	                         test r12d, r12d	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000923	     0xf84690e0000	                            je 0x4001792	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000929	        0x4883c501	                              add rbp, 1	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400092d	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000931	            0x89d9	                            mov ecx, ebx	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000933	        0x4183ec01	                             sub r12d, 1	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000937	          0x83c308	                              add ebx, 8	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400093a	          0x48d3e0	                             shl rax, cl	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400093d	          0x4489d9	                           mov ecx, r11d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000940	          0x4901c2	                            add r10, rax	      1065	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000943	          0x4489f8	                           mov eax, r15d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000946	          0x4421d0	                           and eax, r10d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000949	            0xd3e8	                             shr eax, cl	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400094b	          0x4401f0	                           add eax, r14d	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x400094e	        0x498d0480	                   lea rax, [r8 + rax*4]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000952	           0xfb630	                   movzx esi, byte [rax]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000955	         0xfb77802	               movzx edi, word [rax + 2]	      1062	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4
0x4000959	         0xfb64001	               movzx eax, byte [rax + 1]	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x400095d	        0x418d1403	                    lea edx, [r11 + rax]	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x4000961	            0x39da	                            cmp edx, ebx	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x4000963	            0x77bb	                            ja 0x4000920	      1064	inflate.c	FUNCTION_7	SWITCH_1	IF_71	FOR_4	IF_72
0x4000965	          0x4489d9	                           mov ecx, r11d	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4000968	          0x4429cb	                            sub ebx, r9d	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400096b	          0x49d3ea	                             shr r10, cl	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x400096e	            0x6690	                                     nop	      1067	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4000970	            0x89c1	                            mov ecx, eax	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x4000972	            0x29c3	                            sub ebx, eax	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x4000974	    0x418995ec1b00	          mov dword [r13 + 0x1bec], edx 	      1071	inflate.c	FUNCTION_7	SWITCH_1
0x400097b	          0x49d3ea	                             shr r10, cl	      1070	inflate.c	FUNCTION_7	SWITCH_1
0x400097e	          0x4084f6	                           test sil, sil	      1073	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4000981	        0x41897d5c	             mov dword [r13 + 0x5c], edi	      1072	inflate.c	FUNCTION_7	SWITCH_1
0x4000985	     0xf857f0e0000	                           jne 0x400180a	      1073	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x400098b	    0x41c745084d3f	            mov dword [r13 + 8], 0x3f4d 	      1077	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4000993	      0xb84d3f0000	                         mov eax, 0x3f4d	      1078	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x4000998	      0xe92ffcffff	                           jmp 0x40005cc	      1078	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x400099d	           0xf1f00	                         nop dword [rax]	      1078	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x40009a0	        0x418b7564	            mov esi, dword [r13 + 0x64] 	      1078	inflate.c	FUNCTION_7	SWITCH_1	IF_73
0x40009a4	            0x85f6	                           test esi, esi	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40009a6	     0xf85f40f0000	                           jne 0x40019a0	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40009ac	        0x418b455c	            mov eax, dword [r13 + 0x5c] 	      1094	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40009b0	    0x418985f01b00	          mov dword [r13 + 0x1bf0], eax 	      1101	inflate.c	FUNCTION_7	SWITCH_1
0x40009b7	    0x41c745084a3f	            mov dword [r13 + 8], 0x3f4a 	      1102	inflate.c	FUNCTION_7	SWITCH_1
0x40009bf	        0x418b4d7c	            mov ecx, dword [r13 + 0x7c] 	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009c3	    0x41bb01000000	                             mov r11d, 1	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009c9	        0x498b7d70	            mov rdi, qword [r13 + 0x70] 	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009cd	          0x41d3e3	                            shl r11d, cl	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009d0	        0x4183eb01	                             sub r11d, 1	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009d4	          0x4489d8	                           mov eax, r11d	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009d7	          0x4421d0	                           and eax, r10d	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009da	        0x488d0487	                  lea rax, [rdi + rax*4]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009de	         0xfb65001	               movzx edx, byte [rax + 1]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009e2	           0xfb630	                   movzx esi, byte [rax]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009e5	      0x440fb74002	               movzx r8d, word [rax + 2]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009ea	           0xfb6c2	                           movzx eax, dl	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40009ed	            0x39c3	                            cmp ebx, eax	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40009ef	          0x4189c1	                            mov r9d, eax	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40009f2	            0x7354	                           jae 0x4000a48	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x40009f4	          0x4585e4	                         test r12d, r12d	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009f7	     0xf84950d0000	                            je 0x4001792	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009fd	            0x89d9	                            mov ecx, ebx	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x40009ff	            0xeb10	                           jmp 0x4000a11	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a01	     0xf1f80000000	                         nop dword [rax]	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a08	          0x4585e4	                         test r12d, r12d	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a0b	     0xf847f0d0000	                            je 0x4001790	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a11	        0x4883c501	                              add rbp, 1	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a15	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a19	        0x4183ec01	                             sub r12d, 1	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a1d	          0x48d3e0	                             shl rax, cl	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a20	          0x83c108	                              add ecx, 8	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a23	          0x4901c2	                            add r10, rax	      1107	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a26	          0x4489d8	                           mov eax, r11d	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a29	          0x4421d0	                           and eax, r10d	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a2c	        0x488d0487	                  lea rax, [rdi + rax*4]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a30	         0xfb65001	               movzx edx, byte [rax + 1]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a34	           0xfb630	                   movzx esi, byte [rax]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a37	      0x440fb74002	               movzx r8d, word [rax + 2]	      1105	inflate.c	FUNCTION_7	SWITCH_1	FOR_5
0x4000a3c	           0xfb6c2	                           movzx eax, dl	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4000a3f	            0x39c8	                            cmp eax, ecx	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4000a41	          0x4189c1	                            mov r9d, eax	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4000a44	            0x77c2	                            ja 0x4000a08	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4000a46	            0x89cb	                            mov ebx, ecx	      1106	inflate.c	FUNCTION_7	SWITCH_1	FOR_5	IF_77
0x4000a48	        0x40f6c6f0	                          test sil, 0xf0	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4000a4c	     0xf851e100000	                           jne 0x4001a70	      1109	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4000a52	          0x8d0c06	                    lea ecx, [rsi + rax]	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a55	    0x41be01000000	                             mov r14d, 1	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a5b	          0x4189c3	                           mov r11d, eax	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a5e	        0x450fb7f8	                         movzx r15d, r8w	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a62	          0x41d3e6	                            shl r14d, cl	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a65	            0x89d1	                            mov ecx, edx	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a67	        0x4183ee01	                             sub r14d, 1	      1113	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a6b	          0x4489f0	                           mov eax, r14d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a6e	          0x4421d0	                           and eax, r10d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a71	            0xeb2e	                           jmp 0x4000aa1	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a73	       0xf1f440000	                   nop dword [rax + rax]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a78	          0x4585e4	                         test r12d, r12d	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a7b	     0xf84110d0000	                            je 0x4001792	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a81	        0x4883c501	                              add rbp, 1	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a85	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a89	            0x89d9	                            mov ecx, ebx	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a8b	        0x4183ec01	                             sub r12d, 1	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a8f	          0x83c308	                              add ebx, 8	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a92	          0x48d3e0	                             shl rax, cl	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a95	          0x4489d9	                           mov ecx, r11d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a98	          0x4901c2	                            add r10, rax	      1115	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a9b	          0x4489f0	                           mov eax, r14d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000a9e	          0x4421d0	                           and eax, r10d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000aa1	            0xd3e8	                             shr eax, cl	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000aa3	          0x4401f8	                           add eax, r15d	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000aa6	        0x488d0487	                  lea rax, [rdi + rax*4]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000aaa	           0xfb630	                   movzx esi, byte [rax]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000aad	      0x440fb74002	               movzx r8d, word [rax + 2]	      1112	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6
0x4000ab2	         0xfb64001	               movzx eax, byte [rax + 1]	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4000ab6	        0x418d1403	                    lea edx, [r11 + rax]	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4000aba	            0x39da	                            cmp edx, ebx	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4000abc	            0x77ba	                            ja 0x4000a78	      1114	inflate.c	FUNCTION_7	SWITCH_1	IF_78	FOR_6	IF_79
0x4000abe	          0x4489d9	                           mov ecx, r11d	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4000ac1	          0x4429cb	                            sub ebx, r9d	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4000ac4	    0x45039dec1b00	          add r11d, dword [r13 + 0x1bec]	      1118	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4000acb	          0x49d3ea	                             shr r10, cl	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4000ace	      0xe9a40f0000	                           jmp 0x4001a77	      1117	inflate.c	FUNCTION_7	SWITCH_1	IF_78
0x4000ad3	    0x41c74508523f	            mov dword [r13 + 8], 0x3f52 	      1258	inflate.c	FUNCTION_7	IF_100	IF_101
0x4000adb	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1259	inflate.c	FUNCTION_7	IF_100	IF_101
0x4000ae0	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1275	inflate.c	FUNCTION_7
0x4000ae5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1275	inflate.c	FUNCTION_7
0x4000aee	     0xf850a160000	                           jne 0x40020fe	      1275	inflate.c	FUNCTION_7
0x4000af4	        0x4883c468	                           add rsp, 0x68	      1275	inflate.c	FUNCTION_7
0x4000af8	              0x5b	                                 pop rbx	      1275	inflate.c	FUNCTION_7
0x4000af9	              0x5d	                                 pop rbp	      1275	inflate.c	FUNCTION_7
0x4000afa	            0x415c	                                 pop r12	      1275	inflate.c	FUNCTION_7
0x4000afc	            0x415d	                                 pop r13	      1275	inflate.c	FUNCTION_7
0x4000afe	            0x415e	                                 pop r14	      1275	inflate.c	FUNCTION_7
0x4000b00	            0x415f	                                 pop r15	      1275	inflate.c	FUNCTION_7
0x4000b02	              0xc3	                                     ret	      1275	inflate.c	FUNCTION_7
0x4000b03	       0xf1f440000	                   nop dword [rax + rax]	      1275	inflate.c	FUNCTION_7
0x4000b08	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      1275	inflate.c	FUNCTION_7
0x4000b0d	    0xc7442424fdff	     mov dword [rsp + 0x24], 0xfffffffd 	      1238	inflate.c	FUNCTION_7	SWITCH_1
0x4000b15	           0xf1f00	                         nop dword [rax]	      1238	inflate.c	FUNCTION_7	SWITCH_1
0x4000b18	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1254	inflate.c	FUNCTION_7
0x4000b1d	        0x418b4d3c	            mov ecx, dword [r13 + 0x3c] 	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b21	          0x49892b	                    mov qword [r11], rbp	      1254	inflate.c	FUNCTION_7
0x4000b24	        0x45896308	               mov dword [r11 + 8], r12d	      1254	inflate.c	FUNCTION_7
0x4000b28	        0x49894318	             mov qword [r11 + 0x18], rax	      1254	inflate.c	FUNCTION_7
0x4000b2c	          0x8b0424	                    mov eax, dword [rsp]	      1254	inflate.c	FUNCTION_7
0x4000b2f	            0x85c9	                           test ecx, ecx	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b31	        0x41894320	             mov dword [r11 + 0x20], eax	      1254	inflate.c	FUNCTION_7
0x4000b35	        0x4d895550	             mov qword [r13 + 0x50], r10	      1254	inflate.c	FUNCTION_7
0x4000b39	        0x41895d58	             mov dword [r13 + 0x58], ebx	      1254	inflate.c	FUNCTION_7
0x4000b3d	            0x7521	                           jne 0x4000b60	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b3f	        0x39442408	                cmp dword [rsp + 8], eax	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b43	            0x743f	                            je 0x4000b84	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b45	        0x418b4508	                mov eax, dword [r13 + 8]	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b49	      0x3d503f0000	                         cmp eax, 0x3f50	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b4e	            0x7734	                            ja 0x4000b84	      1255	inflate.c	FUNCTION_7	IF_100
0x4000b50	      0x837c241c04	               cmp dword [rsp + 0x1c], 4	      1256	inflate.c	FUNCTION_7	IF_100
0x4000b55	            0x7509	                           jne 0x4000b60	      1256	inflate.c	FUNCTION_7	IF_100
0x4000b57	      0x3d4d3f0000	                         cmp eax, 0x3f4d	      1256	inflate.c	FUNCTION_7	IF_100
0x4000b5c	            0x7726	                            ja 0x4000b84	      1256	inflate.c	FUNCTION_7	IF_100
0x4000b5e	            0x6690	                                     nop	      1256	inflate.c	FUNCTION_7	IF_100
0x4000b60	        0x8b542408	                mov edx, dword [rsp + 8]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b64	          0x2b1424	                    sub edx, dword [rsp]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b67	          0x4c89df	                            mov rdi, r11	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b6a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b6f	        0x4c891c24	                    mov qword [rsp], r11	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b73	      0xe828f5ffff	                   call sym.updatewindow	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b78	            0x85c0	                           test eax, eax	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b7a	        0x4c8b1c24	                    mov r11, qword [rsp]	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b7e	     0xf854fffffff	                           jne 0x4000ad3	      1257	inflate.c	FUNCTION_7	IF_100	IF_101	CALL_34
0x4000b84	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	      1261	inflate.c	FUNCTION_7
0x4000b88	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      1262	inflate.c	FUNCTION_7
0x4000b8c	        0x412b6b08	                sub ebp, dword [r11 + 8]	      1261	inflate.c	FUNCTION_7
0x4000b90	        0x412b5b20	             sub ebx, dword [r11 + 0x20]	      1262	inflate.c	FUNCTION_7
0x4000b94	            0x89e8	                            mov eax, ebp	      1263	inflate.c	FUNCTION_7
0x4000b96	        0x49014310	            add qword [r11 + 0x10], rax 	      1263	inflate.c	FUNCTION_7
0x4000b9a	            0x89d8	                            mov eax, ebx	      1264	inflate.c	FUNCTION_7
0x4000b9c	        0x49014328	            add qword [r11 + 0x28], rax 	      1264	inflate.c	FUNCTION_7
0x4000ba0	        0x49014528	            add qword [r13 + 0x28], rax 	      1265	inflate.c	FUNCTION_7
0x4000ba4	      0x41f6451004	               test byte [r13 + 0x10], 4	      1266	inflate.c	FUNCTION_7	IF_102
0x4000ba9	            0x7432	                            je 0x4000bdd	      1266	inflate.c	FUNCTION_7	IF_102
0x4000bab	            0x85db	                           test ebx, ebx	      1266	inflate.c	FUNCTION_7	IF_102
0x4000bad	            0x742e	                            je 0x4000bdd	      1266	inflate.c	FUNCTION_7	IF_102
0x4000baf	        0x418b5518	            mov edx, dword [r13 + 0x18] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bb3	        0x498b7318	            mov rsi, qword [r11 + 0x18] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bb7	        0x4c891c24	                    mov qword [rsp], r11	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bbb	            0x85d2	                           test edx, edx	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bbd	     0xf840d0c0000	                            je 0x40017d0	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bc3	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bc7	          0x4829c6	                            sub rsi, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bca	            0x89da	                            mov edx, ebx	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bcc	      0xe800000000	                          call 0x4000bd1	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bd1	        0x4c8b1c24	                    mov r11, qword [rsp]	      1268	inflate.c	FUNCTION_7	IF_102
0x4000bd5	        0x49894520	             mov qword [r13 + 0x20], rax	      1267	inflate.c	FUNCTION_7	IF_102
0x4000bd9	        0x49894360	             mov qword [r11 + 0x60], rax	      1267	inflate.c	FUNCTION_7	IF_102
0x4000bdd	        0x418b450c	              mov eax, dword [r13 + 0xc]	      1269	inflate.c	FUNCTION_7
0x4000be1	      0xba40000000	                           mov edx, 0x40	      1269	inflate.c	FUNCTION_7
0x4000be6	            0x85c0	                           test eax, eax	      1269	inflate.c	FUNCTION_7
0x4000be8	           0xf45c2	                         cmovne eax, edx	      1269	inflate.c	FUNCTION_7
0x4000beb	        0x418b5508	                mov edx, dword [r13 + 8]	      1270	inflate.c	FUNCTION_7
0x4000bef	        0x41034558	             add eax, dword [r13 + 0x58]	      1269	inflate.c	FUNCTION_7
0x4000bf3	    0x81fa3f3f0000	                         cmp edx, 0x3f3f	      1270	inflate.c	FUNCTION_7
0x4000bf9	     0xf84a10b0000	                            je 0x40017a0	      1270	inflate.c	FUNCTION_7
0x4000bff	    0x81fa473f0000	                         cmp edx, 0x3f47	      1271	inflate.c	FUNCTION_7
0x4000c05	            0x7408	                            je 0x4000c0f	      1271	inflate.c	FUNCTION_7
0x4000c07	    0x81fa423f0000	                         cmp edx, 0x3f42	      1271	inflate.c	FUNCTION_7
0x4000c0d	            0x7508	                           jne 0x4000c17	      1271	inflate.c	FUNCTION_7
0x4000c0f	    0xc74424300001	          mov dword [rsp + 0x30], 0x100 	      1271	inflate.c	FUNCTION_7
0x4000c17	         0x3442430	             add eax, dword [rsp + 0x30]	      1269	inflate.c	FUNCTION_7
0x4000c1b	             0x9dd	                             or ebp, ebx	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c1d	        0x41894358	             mov dword [r11 + 0x58], eax	      1269	inflate.c	FUNCTION_7
0x4000c21	            0x740f	                            je 0x4000c32	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c23	      0x837c241c04	               cmp dword [rsp + 0x1c], 4	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c28	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c2c	     0xf85aefeffff	                           jne 0x4000ae0	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c32	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c36	      0xb8fbffffff	                     mov eax, 0xfffffffb	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c3b	            0x85f6	                           test esi, esi	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c3d	           0xf45c6	                         cmovne eax, esi	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c40	      0xe99bfeffff	                           jmp 0x4000ae0	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c45	           0xf1f00	                         nop dword [rax]	      1272	inflate.c	FUNCTION_7	IF_103
0x4000c48	          0x83fb1f	                           cmp ebx, 0x1f	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c4b	            0x7736	                            ja 0x4000c83	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c4d	          0x4585e4	                         test r12d, r12d	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c50	     0xf843c0b0000	                            je 0x4001792	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c56	            0x89d9	                            mov ecx, ebx	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c58	            0xeb0f	                           jmp 0x4000c69	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c5a	    0x660f1f440000	                    nop word [rax + rax]	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c60	          0x4585e4	                         test r12d, r12d	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c63	     0xf84270b0000	                            je 0x4001790	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c69	        0x4883c501	                              add rbp, 1	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c6d	         0xfb645ff	               movzx eax, byte [rbp - 1]	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c71	        0x4183ec01	                             sub r12d, 1	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c75	          0x48d3e0	                             shl rax, cl	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c78	          0x83c108	                              add ecx, 8	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c7b	          0x4901c2	                            add r10, rax	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c7e	          0x83f91f	                           cmp ecx, 0x1f	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c81	            0x76dd	                           jbe 0x4000c60	       726	inflate.c	FUNCTION_7	SWITCH_1
0x4000c83	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000c87	          0x4885c0	                           test rax, rax	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000c8a	            0x7404	                            je 0x4000c90	       727	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000c8c	        0x4c895008	                mov qword [rax + 8], r10	       728	inflate.c	FUNCTION_7	SWITCH_1	IF_16
0x4000c90	      0x41f6451902	               test byte [r13 + 0x19], 2	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000c95	            0x740b	                            je 0x4000ca2	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000c97	      0x41f6451004	               test byte [r13 + 0x10], 4	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000c9c	     0xf8598110000	                           jne 0x4001e3a	       729	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4000ca2	    0x41c74508373f	            mov dword [r13 + 8], 0x3f37 	       732	inflate.c	FUNCTION_7	SWITCH_1
0x4000caa	            0x31db	                            xor ebx, ebx	       731	inflate.c	FUNCTION_7	SWITCH_1
0x4000cac	          0x4531d2	                          xor r10d, r10d	       731	inflate.c	FUNCTION_7	SWITCH_1
0x4000caf	      0xe971030000	                           jmp 0x4001025	       731	inflate.c	FUNCTION_7	SWITCH_1
0x4000cb4	         0xf1f4000	                         nop dword [rax]	       731	inflate.c	FUNCTION_7	SWITCH_1
0x4000cb8	        0x418b455c	            mov eax, dword [r13 + 0x5c] 	       731	inflate.c	FUNCTION_7	SWITCH_1
0x4000cbc	    0x41c74508433f	            mov dword [r13 + 8], 0x3f43 	       902	inflate.c	FUNCTION_7	SWITCH_1
0x4000cc4	            0x85c0	                           test eax, eax	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000cc6	     0xf84540b0000	                            je 0x4001820	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000ccc	          0x8b3424	                    mov esi, dword [rsp]	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000ccf	          0x4139c4	                           cmp r12d, eax	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000cd2	        0x410f46c4	                        cmovbe eax, r12d	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000cd6	            0x39c6	                            cmp esi, eax	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000cd8	           0xf46c6	                         cmovbe eax, esi	       905	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000cdb	            0x85c0	                           test eax, eax	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x4000cdd	          0x4189c6	                           mov r14d, eax	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x4000ce0	     0xf84ac0a0000	                            je 0x4001792	       908	inflate.c	FUNCTION_7	SWITCH_1	IF_51	IF_54
0x4000ce6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_18	CALL_3
0x4000ceb	          0x4189c7	                           mov r15d, eax	       909	inflate.c	FUNCTION_7	SWITCH_1	IF_51	CALL_17
0x4000cee	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_18	CALL_3
0x4000cf1	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_18	CALL_3
0x4000cf4	      0x4c89542448	             mov qword [rsp + 0x48], r10	        53	string3.h	FUNCTION_18	CALL_3
0x4000cf9	          0x4529f4	                          sub r12d, r14d	       910	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000cfc	          0x4c01fd	                            add rbp, r15	       911	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000cff	      0xe800000000	                          call 0x4000d04	        53	string3.h	FUNCTION_18	CALL_3
0x4000d04	        0x44293424	                   sub dword [rsp], r14d	       912	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d08	      0x4c017c2410	            add qword [rsp + 0x10], r15 	       913	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d0d	        0x418b4508	                mov eax, dword [r13 + 8]	       913	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d11	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d16	        0x4529755c	            sub dword [r13 + 0x5c], r14d	       914	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d1a	      0xe9adf8ffff	                           jmp 0x40005cc	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d1f	              0x90	                                     nop	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d20	        0x418b455c	            mov eax, dword [r13 + 0x5c] 	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d24	            0xeb9e	                           jmp 0x4000cc4	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       915	inflate.c	FUNCTION_7	SWITCH_1	IF_51
0x4000d30	          0x83fb0d	                            cmp ebx, 0xd	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d33	            0x7738	                            ja 0x4000d6d	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d35	          0x4585e4	                         test r12d, r12d	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d38	     0xf84540a0000	                            je 0x4001792	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d3e	            0x89d9	                            mov ecx, ebx	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d40	            0xeb0f	                           jmp 0x4000d51	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d42	    0x660f1f440000	                    nop word [rax + rax]	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d48	          0x4585e4	                         test r12d, r12d	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d4b	     0xf843f0a0000	                            je 0x4001790	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d51	        0x4883c501	                              add rbp, 1	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d55	         0xfb645ff	               movzx eax, byte [rbp - 1]	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d59	        0x4183ec01	                             sub r12d, 1	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d5d	          0x48d3e0	                             shl rax, cl	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d60	          0x83c108	                              add ecx, 8	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d63	          0x4901c2	                            add r10, rax	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d66	          0x83f90d	                            cmp ecx, 0xd	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d69	            0x76dd	                           jbe 0x4000d48	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d6b	            0x89cb	                            mov ebx, ecx	       921	inflate.c	FUNCTION_7	SWITCH_1
0x4000d6d	          0x4c89d0	                            mov rax, r10	       923	inflate.c	FUNCTION_7	SWITCH_1
0x4000d70	          0x4c89d6	                            mov rsi, r10	       925	inflate.c	FUNCTION_7	SWITCH_1
0x4000d73	          0x4489d2	                           mov edx, r10d	       922	inflate.c	FUNCTION_7	SWITCH_1
0x4000d76	        0x48c1e805	                              shr rax, 5	       923	inflate.c	FUNCTION_7	SWITCH_1
0x4000d7a	        0x48c1ee0a	                            shr rsi, 0xa	       925	inflate.c	FUNCTION_7	SWITCH_1
0x4000d7e	          0x83e21f	                           and edx, 0x1f	       922	inflate.c	FUNCTION_7	SWITCH_1
0x4000d81	          0x83e01f	                           and eax, 0x1f	       924	inflate.c	FUNCTION_7	SWITCH_1
0x4000d84	          0x83e60f	                            and esi, 0xf	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4000d87	    0x81c201010000	                          add edx, 0x101	       922	inflate.c	FUNCTION_7	SWITCH_1
0x4000d8d	          0x83c001	                              add eax, 1	       924	inflate.c	FUNCTION_7	SWITCH_1
0x4000d90	          0x83c604	                              add esi, 4	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4000d93	        0x49c1ea0e	                            shr r10, 0xe	       927	inflate.c	FUNCTION_7	SWITCH_1
0x4000d97	          0x83eb0e	                            sub ebx, 0xe	       927	inflate.c	FUNCTION_7	SWITCH_1
0x4000d9a	          0x83f81e	                           cmp eax, 0x1e	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4000d9d	    0x418995840000	             mov dword [r13 + 0x84], edx	       922	inflate.c	FUNCTION_7	SWITCH_1
0x4000da4	    0x418985880000	             mov dword [r13 + 0x88], eax	       924	inflate.c	FUNCTION_7	SWITCH_1
0x4000dab	    0x4189b5800000	             mov dword [r13 + 0x80], esi	       926	inflate.c	FUNCTION_7	SWITCH_1
0x4000db2	     0xf875f0d0000	                            ja 0x4001b17	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4000db8	    0x81fa1e010000	                          cmp edx, 0x11e	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4000dbe	     0xf87530d0000	                            ja 0x4001b17	       929	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4000dc4	    0x41c7858c0000	               mov dword [r13 + 0x8c], 0	       936	inflate.c	FUNCTION_7	SWITCH_1
0x4000dcf	    0x41c74508453f	            mov dword [r13 + 8], 0x3f45 	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000dd7	            0x31c0	                            xor eax, eax	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000dd9	            0x89d9	                            mov ecx, ebx	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000ddb	            0xeb1b	                           jmp 0x4000df8	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000ddd	           0xf1f00	                         nop dword [rax]	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000de0	    0x418b858c0000	            mov eax, dword [r13 + 0x8c] 	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000de7	    0x418bb5800000	            mov esi, dword [r13 + 0x80] 	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000dee	            0x89d9	                            mov ecx, ebx	       937	inflate.c	FUNCTION_7	SWITCH_1
0x4000df0	            0x39c6	                            cmp esi, eax	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000df2	     0xf86100f0000	                           jbe 0x4001d08	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000df8	          0x83f902	                              cmp ecx, 2	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000dfb	            0x771e	                            ja 0x4000e1b	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000dfd	          0x4585e4	                         test r12d, r12d	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e00	     0xf848a090000	                            je 0x4001790	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e06	        0x4883c501	                              add rbp, 1	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e0a	         0xfb655ff	               movzx edx, byte [rbp - 1]	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e0e	        0x4183ec01	                             sub r12d, 1	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e12	          0x48d3e2	                             shl rdx, cl	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e15	          0x83c108	                              add ecx, 8	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e18	          0x4901d2	                            add r10, rdx	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e1b	          0x8d5001	                      lea edx, [rax + 1]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e1e	     0xfb784000000	             movzx eax, word [rax + rax]	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e26	          0x4489d7	                           mov edi, r10d	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e29	          0x83e707	                              and edi, 7	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e2c	        0x49c1ea03	                              shr r10, 3	       942	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e30	          0x83e903	                              sub ecx, 3	       942	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e33	            0x39d6	                            cmp esi, edx	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e35	    0x4189958c0000	             mov dword [r13 + 0x8c], edx	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e3c	    0x664189bc4598	       mov word [r13 + rax*2 + 0x98], di	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e45	     0xf86b90e0000	                           jbe 0x4001d04	       939	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e4b	          0x83f902	                              cmp ecx, 2	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e4e	            0x89d0	                            mov eax, edx	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e50	            0x76ab	                           jbe 0x4000dfd	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e52	            0xebc7	                           jmp 0x4000e1b	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e54	         0xf1f4000	                         nop dword [rax]	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e58	    0x458b8d8c0000	            mov r9d, dword [r13 + 0x8c] 	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e5f	    0x418b95840000	            mov edx, dword [r13 + 0x84] 	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e66	    0x458b9d880000	           mov r11d, dword [r13 + 0x88] 	       940	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4000e6d	    0x41be01000000	                             mov r14d, 1	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e73	    0x41bff9ffffff	                    mov r15d, 0xfffffff9	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000e79	          0x4101d3	                           add r11d, edx	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000e7c	          0x4539d9	                           cmp r9d, r11d	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4000e7f	     0xf8394100000	                           jae 0x4001f19	       960	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3
0x4000e85	        0x418b4d78	            mov ecx, dword [r13 + 0x78] 	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e89	          0x4489f6	                           mov esi, r14d	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e8c	        0x498b7d68	            mov rdi, qword [r13 + 0x68] 	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e90	            0xd3e6	                             shl esi, cl	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e92	          0x83ee01	                              sub esi, 1	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e95	            0x89f0	                            mov eax, esi	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e97	          0x4421d0	                           and eax, r10d	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e9a	        0x488d0487	                  lea rax, [rdi + rax*4]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000e9e	         0xfb64801	               movzx ecx, byte [rax + 1]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ea2	      0x440fb74002	               movzx r8d, word [rax + 2]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ea7	           0xfb6c1	                           movzx eax, cl	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000eaa	            0x39c3	                            cmp ebx, eax	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000eac	            0x734f	                           jae 0x4000efd	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000eae	          0x4585e4	                         test r12d, r12d	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000eb1	     0xf84db080000	                            je 0x4001792	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000eb7	            0x89d9	                            mov ecx, ebx	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000eb9	            0xeb0e	                           jmp 0x4000ec9	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ebb	       0xf1f440000	                   nop dword [rax + rax]	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ec0	          0x4585e4	                         test r12d, r12d	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ec3	     0xf84c7080000	                            je 0x4001790	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ec9	        0x4883c501	                              add rbp, 1	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ecd	         0xfb645ff	               movzx eax, byte [rbp - 1]	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ed1	        0x4183ec01	                             sub r12d, 1	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ed5	          0x48d3e0	                             shl rax, cl	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ed8	          0x83c108	                              add ecx, 8	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000edb	          0x4901c2	                            add r10, rax	       964	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ede	            0x89f0	                            mov eax, esi	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ee0	          0x4421d0	                           and eax, r10d	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ee3	        0x488d0487	                  lea rax, [rdi + rax*4]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ee7	         0xfb65801	               movzx ebx, byte [rax + 1]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000eeb	      0x440fb74002	               movzx r8d, word [rax + 2]	       962	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2
0x4000ef0	           0xfb6c3	                           movzx eax, bl	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000ef3	            0x39c8	                            cmp eax, ecx	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000ef5	            0x77c9	                            ja 0x4000ec0	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000ef7	            0x89df	                            mov edi, ebx	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000ef9	            0x89cb	                            mov ebx, ecx	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000efb	            0x89f9	                            mov ecx, edi	       963	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	FOR_2	IF_57
0x4000efd	      0x664183f80f	                            cmp r8w, 0xf	       966	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4000f02	     0xf86b00b0000	                           jbe 0x4001ab8	       966	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4000f08	      0x664183f810	                           cmp r8w, 0x10	       971	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4000f0d	     0xf84520d0000	                            je 0x4001c65	       971	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4000f13	      0x664183f811	                           cmp r8w, 0x11	       983	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4000f18	     0xf84ad0e0000	                            je 0x4001dcb	       983	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4000f1e	          0x8d7807	                      lea edi, [rax + 7]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f21	            0x39fb	                            cmp ebx, edi	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f23	            0x7337	                           jae 0x4000f5c	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f25	          0x4585e4	                         test r12d, r12d	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f28	     0xf8464080000	                            je 0x4001792	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f2e	            0x89d9	                            mov ecx, ebx	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f30	            0xeb0f	                           jmp 0x4000f41	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f32	    0x660f1f440000	                    nop word [rax + rax]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f38	          0x4585e4	                         test r12d, r12d	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f3b	     0xf844f080000	                            je 0x4001790	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f41	        0x4883c501	                              add rbp, 1	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f45	         0xfb675ff	               movzx esi, byte [rbp - 1]	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f49	        0x4183ec01	                             sub r12d, 1	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f4d	          0x48d3e6	                             shl rsi, cl	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f50	          0x83c108	                              add ecx, 8	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f53	          0x4901f2	                            add r10, rsi	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f56	            0x39f9	                            cmp ecx, edi	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f58	            0x72de	                            jb 0x4000f38	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f5a	            0x89cb	                            mov ebx, ecx	       991	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f5c	            0x89c1	                            mov ecx, eax	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f5e	          0x4489ff	                           mov edi, r15d	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f61	            0x31f6	                            xor esi, esi	       993	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f63	          0x49d3ea	                             shr r10, cl	       992	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f66	            0x29c7	                            sub edi, eax	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f68	          0x4489d1	                           mov ecx, r10d	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f6b	             0x1fb	                            add ebx, edi	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f6d	        0x49c1ea07	                              shr r10, 7	       995	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f71	          0x83e17f	                           and ecx, 0x7f	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f74	          0x83c10b	                            add ecx, 0xb	       994	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_6
0x4000f77	          0x4401c9	                            add ecx, r9d	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4000f7a	          0x4439d9	                           cmp ecx, r11d	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4000f7d	     0xf87ff110000	                            ja 0x4002182	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4000f83	       0xf1f440000	                   nop dword [rax + rax]	       997	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4000f88	          0x4489c8	                            mov eax, r9d	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000f8b	        0x4183c101	                              add r9d, 1	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000f8f	          0x4139c9	                            cmp r9d, ecx	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000f92	    0x664189b44598	       mov word [r13 + rax*2 + 0x98], si	      1003	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000f9b	            0x75eb	                           jne 0x4000f88	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000f9d	    0x45898d8c0000	             mov dword [r13 + 0x8c], r9d	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000fa4	      0xe9d3feffff	                           jmp 0x4000e7c	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000fa9	     0xf1f80000000	                         nop dword [rax]	      1002	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	WHILE_4
0x4000fb0	          0x83fb0f	                            cmp ebx, 0xf	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fb3	            0x7738	                            ja 0x4000fed	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fb5	          0x4585e4	                         test r12d, r12d	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fb8	     0xf84d4070000	                            je 0x4001792	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fbe	            0x89d9	                            mov ecx, ebx	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fc0	            0xeb0f	                           jmp 0x4000fd1	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fc2	    0x660f1f440000	                    nop word [rax + rax]	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fc8	          0x4585e4	                         test r12d, r12d	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fcb	     0xf84bf070000	                            je 0x4001790	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fd1	        0x4883c501	                              add rbp, 1	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fd5	         0xfb645ff	               movzx eax, byte [rbp - 1]	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fd9	        0x4183ec01	                             sub r12d, 1	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fdd	          0x48d3e0	                             shl rax, cl	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fe0	          0x83c108	                              add ecx, 8	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fe3	          0x4901c2	                            add r10, rax	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fe6	          0x83f90f	                            cmp ecx, 0xf	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fe9	            0x76dd	                           jbe 0x4000fc8	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000feb	            0x89cb	                            mov ebx, ecx	       707	inflate.c	FUNCTION_7	SWITCH_1
0x4000fed	        0x4180fa08	                             cmp r10b, 8	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000ff1	          0x4489d0	                           mov eax, r10d	       708	inflate.c	FUNCTION_7	SWITCH_1
0x4000ff4	        0x45895518	            mov dword [r13 + 0x18], r10d	       708	inflate.c	FUNCTION_7	SWITCH_1
0x4000ff8	     0xf843b0c0000	                            je 0x4001c39	       709	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4000ffe	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       710	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4001003	    0x48c740300000	               mov qword [rax + 0x30], 0	       710	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x400100b	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       711	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4001013	      0xb8513f0000	                         mov eax, 0x3f51	       712	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4001018	      0xe9aff5ffff	                           jmp 0x40005cc	       712	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x400101d	           0xf1f00	                         nop dword [rax]	       712	inflate.c	FUNCTION_7	SWITCH_1	IF_12
0x4001020	          0x83fb0f	                            cmp ebx, 0xf	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001023	            0x7736	                            ja 0x400105b	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001025	          0x4585e4	                         test r12d, r12d	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001028	     0xf8464070000	                            je 0x4001792	       734	inflate.c	FUNCTION_7	SWITCH_1
0x400102e	            0x89d9	                            mov ecx, ebx	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001030	            0xeb0f	                           jmp 0x4001041	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001032	    0x660f1f440000	                    nop word [rax + rax]	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001038	          0x4585e4	                         test r12d, r12d	       734	inflate.c	FUNCTION_7	SWITCH_1
0x400103b	     0xf844f070000	                            je 0x4001790	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001041	        0x4883c501	                              add rbp, 1	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001045	         0xfb645ff	               movzx eax, byte [rbp - 1]	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001049	        0x4183ec01	                             sub r12d, 1	       734	inflate.c	FUNCTION_7	SWITCH_1
0x400104d	          0x48d3e0	                             shl rax, cl	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001050	          0x83c108	                              add ecx, 8	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001053	          0x4901c2	                            add r10, rax	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001056	          0x83f90f	                            cmp ecx, 0xf	       734	inflate.c	FUNCTION_7	SWITCH_1
0x4001059	            0x76dd	                           jbe 0x4001038	       734	inflate.c	FUNCTION_7	SWITCH_1
0x400105b	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x400105f	          0x4885c0	                           test rax, rax	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4001062	            0x7411	                            je 0x4001075	       735	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4001064	        0x410fb6d2	                         movzx edx, r10b	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4001068	          0x895010	             mov dword [rax + 0x10], edx	       736	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x400106b	          0x4c89d2	                            mov rdx, r10	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x400106e	        0x48c1ea08	                              shr rdx, 8	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4001072	          0x895014	             mov dword [rax + 0x14], edx	       737	inflate.c	FUNCTION_7	SWITCH_1	IF_18
0x4001075	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001079	          0xf6c602	                              test dh, 2	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x400107c	            0x740b	                            je 0x4001089	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x400107e	      0x41f6451004	               test byte [r13 + 0x10], 4	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001083	     0xf854d0c0000	                           jne 0x4001cd6	       739	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001089	            0x31db	                            xor ebx, ebx	       741	inflate.c	FUNCTION_7	SWITCH_1
0x400108b	          0x4531d2	                          xor r10d, r10d	       741	inflate.c	FUNCTION_7	SWITCH_1
0x400108e	          0xf6c604	                              test dh, 4	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4001091	    0x41c74508383f	            mov dword [r13 + 8], 0x3f38 	       742	inflate.c	FUNCTION_7	SWITCH_1
0x4001099	     0xf84d1060000	                            je 0x4001770	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x400109f	          0x4585e4	                         test r12d, r12d	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010a2	     0xf84ea060000	                            je 0x4001792	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010a8	            0x89d9	                            mov ecx, ebx	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010aa	            0xeb0d	                           jmp 0x40010b9	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010ac	         0xf1f4000	                         nop dword [rax]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010b0	          0x4585e4	                         test r12d, r12d	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010b3	     0xf84d7060000	                            je 0x4001790	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010b9	        0x4883c501	                              add rbp, 1	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010bd	         0xfb645ff	               movzx eax, byte [rbp - 1]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010c1	        0x4183ec01	                             sub r12d, 1	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010c5	          0x48d3e0	                             shl rax, cl	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010c8	          0x83c108	                              add ecx, 8	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010cb	          0x4901c2	                            add r10, rax	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010ce	          0x83f90f	                            cmp ecx, 0xf	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010d1	            0x76dd	                           jbe 0x40010b0	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010d3	            0xeb1b	                           jmp 0x40010f0	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010d5	           0xf1f00	                         nop dword [rax]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010d8	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010dc	          0xf6c604	                              test dh, 4	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010df	     0xf848b060000	                            je 0x4001770	       744	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010e5	          0x83fb0f	                            cmp ebx, 0xf	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010e8	            0x76b5	                           jbe 0x400109f	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010ea	    0x660f1f440000	                    nop word [rax + rax]	       745	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010f0	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x40010f4	        0x4589555c	            mov dword [r13 + 0x5c], r10d	       746	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x40010f8	          0x4885c0	                           test rax, rax	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x40010fb	            0x7404	                            je 0x4001101	       747	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x40010fd	        0x44895020	            mov dword [rax + 0x20], r10d	       748	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_21
0x4001101	          0xf6c602	                              test dh, 2	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001104	            0x740b	                            je 0x4001111	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001106	      0x41f6451004	               test byte [r13 + 0x10], 4	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x400110b	     0xf85a00d0000	                           jne 0x4001eb1	       749	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001111	            0x31db	                            xor ebx, ebx	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4001113	          0x4531d2	                          xor r10d, r10d	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4001116	    0x41c74508393f	            mov dword [r13 + 8], 0x3f39 	       755	inflate.c	FUNCTION_7	SWITCH_1
0x400111e	            0xeb04	                           jmp 0x4001124	       755	inflate.c	FUNCTION_7	SWITCH_1
0x4001120	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       755	inflate.c	FUNCTION_7	SWITCH_1
0x4001124	          0xf6c604	                              test dh, 4	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4001127	            0x89d0	                            mov eax, edx	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4001129	     0xf8493000000	                            je 0x40011c2	       757	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x400112f	        0x418b555c	            mov edx, dword [r13 + 0x5c] 	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4001133	          0x4139d4	                           cmp r12d, edx	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4001136	          0x4189d6	                           mov r14d, edx	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x4001139	            0x89d1	                            mov ecx, edx	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x400113b	        0x450f46f4	                       cmovbe r14d, r12d	       758	inflate.c	FUNCTION_7	SWITCH_1	IF_24
0x400113f	          0x4585f6	                         test r14d, r14d	       760	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001142	            0x7472	                            je 0x40011b6	       760	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x4001144	        0x498b4d30	            mov rcx, qword [r13 + 0x30] 	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4001148	          0x4885c9	                           test rcx, rcx	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x400114b	     0xf84920a0000	                            je 0x4001be3	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4001151	        0x488b7918	            mov rdi, qword [rcx + 0x18] 	       762	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4001155	          0x4885ff	                           test rdi, rdi	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4001158	     0xf84850a0000	                            je 0x4001be3	       761	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x400115e	          0x8b4120	            mov eax, dword [rcx + 0x20] 	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4001161	          0x8b4924	            mov ecx, dword [rcx + 0x24] 	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4001164	      0x4c89542448	             mov qword [rsp + 0x48], r10	       765	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x4001169	            0x29d0	                            sub eax, edx	       763	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27
0x400116b	          0x4189c8	                            mov r8d, ecx	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x400116e	          0x4489f2	                           mov edx, r14d	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4001171	        0x418d3406	                    lea esi, [r14 + rax]	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4001175	          0x4129c0	                            sub r8d, eax	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4001178	          0x4989d7	                            mov r15, rdx	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x400117b	            0x39ce	                            cmp esi, ecx	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x400117d	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_18	CALL_3
0x4001180	        0x490f47d0	                           cmova rdx, r8	       764	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_27	CALL_5
0x4001184	          0x4801c7	                            add rdi, rax	        53	string3.h	FUNCTION_18	CALL_3
0x4001187	      0xe800000000	                          call 0x400118c	        53	string3.h	FUNCTION_18	CALL_3
0x400118c	        0x418b4518	            mov eax, dword [r13 + 0x18] 	        53	string3.h	FUNCTION_18	CALL_3
0x4001190	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x4001195	          0xf6c402	                              test ah, 2	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x4001198	            0x740b	                            je 0x40011a5	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x400119a	      0x41f6451004	               test byte [r13 + 0x10], 4	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x400119f	     0xf85040c0000	                           jne 0x4001da9	       768	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	IF_28
0x40011a5	        0x418b4d5c	            mov ecx, dword [r13 + 0x5c] 	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x40011a9	          0x4529f4	                          sub r12d, r14d	       770	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x40011ac	          0x4c01fd	                            add rbp, r15	       771	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x40011af	          0x4429f1	                           sub ecx, r14d	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x40011b2	        0x41894d5c	             mov dword [r13 + 0x5c], ecx	       772	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26
0x40011b6	            0x85c9	                           test ecx, ecx	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x40011b8	     0xf85d4050000	                           jne 0x4001792	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x40011be	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       774	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_29
0x40011c2	    0x41c7455c0000	               mov dword [r13 + 0x5c], 0	       776	inflate.c	FUNCTION_7	SWITCH_1
0x40011ca	    0x41c745083a3f	            mov dword [r13 + 8], 0x3f3a 	       777	inflate.c	FUNCTION_7	SWITCH_1
0x40011d2	      0xe9cd010000	                           jmp 0x40013a4	       777	inflate.c	FUNCTION_7	SWITCH_1
0x40011d7	    0x660f1f840000	                    nop word [rax + rax]	       777	inflate.c	FUNCTION_7	SWITCH_1
0x40011e0	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       777	inflate.c	FUNCTION_7	SWITCH_1
0x40011e4	          0xf6c610	                           test dh, 0x10	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011e7	     0xf8447020000	                            je 0x4001434	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x40011ed	          0x4585e4	                         test r12d, r12d	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x40011f0	     0xf849c050000	                            je 0x4001792	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x40011f6	            0x31c0	                            xor eax, eax	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x40011f8	            0xeb0b	                           jmp 0x4001205	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x40011fa	    0x660f1f440000	                    nop word [rax + rax]	       801	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_37
0x4001200	          0x4539f4	                          cmp r12d, r14d	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4001203	            0x7638	                           jbe 0x400123d	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4001205	        0x448d7001	                     lea r14d, [rax + 1]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4001209	    0x440fb67c0500	            movzx r15d, byte [rbp + rax]	       804	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x400120f	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001213	          0x4885c0	                           test rax, rax	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001216	            0x741d	                            je 0x4001235	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001218	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400121c	          0x4885c9	                           test rcx, rcx	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400121f	            0x7414	                            je 0x4001235	       805	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001221	        0x418b555c	            mov edx, dword [r13 + 0x5c] 	       807	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001225	          0x3b5040	            cmp edx, dword [rax + 0x40] 	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001228	            0x730b	                           jae 0x4001235	       806	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400122a	          0x8d4201	                      lea eax, [rdx + 1]	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x400122d	        0x4189455c	             mov dword [r13 + 0x5c], eax	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001231	        0x44883c11	              mov byte [rcx + rdx], r15b	       808	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2	IF_38
0x4001235	          0x4584ff	                         test r15b, r15b	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x4001238	          0x4489f0	                           mov eax, r14d	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x400123b	            0x75c3	                           jne 0x4001200	       809	inflate.c	FUNCTION_7	SWITCH_1	IF_36	DO_2
0x400123d	      0x41f6451902	               test byte [r13 + 0x19], 2	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001242	            0x740b	                            je 0x400124f	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001244	      0x41f6451004	               test byte [r13 + 0x10], 4	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x4001249	     0xf858a080000	                           jne 0x4001ad9	       810	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_39
0x400124f	          0x4529f4	                          sub r12d, r14d	       812	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4001252	          0x4c01f5	                            add rbp, r14	       813	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4001255	          0x4584ff	                         test r15b, r15b	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x4001258	     0xf8534050000	                           jne 0x4001792	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x400125e	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       814	inflate.c	FUNCTION_7	SWITCH_1	IF_36	IF_40
0x4001262	    0x41c745083c3f	            mov dword [r13 + 8], 0x3f3c 	       818	inflate.c	FUNCTION_7	SWITCH_1
0x400126a	            0xeb0c	                           jmp 0x4001278	       818	inflate.c	FUNCTION_7	SWITCH_1
0x400126c	         0xf1f4000	                         nop dword [rax]	       818	inflate.c	FUNCTION_7	SWITCH_1
0x4001270	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       818	inflate.c	FUNCTION_7	SWITCH_1
0x4001274	         0xf1f4000	                         nop dword [rax]	       818	inflate.c	FUNCTION_7	SWITCH_1
0x4001278	          0xf6c602	                              test dh, 2	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400127b	            0x7448	                            je 0x40012c5	       820	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400127d	          0x83fb0f	                            cmp ebx, 0xf	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001280	            0x7733	                            ja 0x40012b5	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001282	          0x4585e4	                         test r12d, r12d	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001285	     0xf8407050000	                            je 0x4001792	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400128b	            0x89d9	                            mov ecx, ebx	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400128d	            0xeb0a	                           jmp 0x4001299	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400128f	              0x90	                                     nop	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001290	          0x4585e4	                         test r12d, r12d	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001293	     0xf84f7040000	                            je 0x4001790	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x4001299	        0x4883c501	                              add rbp, 1	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x400129d	         0xfb645ff	               movzx eax, byte [rbp - 1]	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012a1	        0x4183ec01	                             sub r12d, 1	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012a5	          0x48d3e0	                             shl rax, cl	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012a8	          0x83c108	                              add ecx, 8	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012ab	          0x4901c2	                            add r10, rax	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012ae	          0x83f90f	                            cmp ecx, 0xf	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012b1	            0x76dd	                           jbe 0x4001290	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012b3	            0x89cb	                            mov ebx, ecx	       821	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012b5	      0x41f6451004	               test byte [r13 + 0x10], 4	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x40012ba	     0xf8538060000	                           jne 0x40018f8	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x40012c0	            0x31db	                            xor ebx, ebx	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012c2	          0x4531d2	                          xor r10d, r10d	       827	inflate.c	FUNCTION_7	SWITCH_1	IF_42
0x40012c5	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40012c9	          0x4885c0	                           test rax, rax	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40012cc	            0x7410	                            je 0x40012de	       829	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40012ce	          0xc1fa09	                              sar edx, 9	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40012d1	    0xc74048010000	               mov dword [rax + 0x48], 1	       831	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40012d8	          0x83e201	                              and edx, 1	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40012db	          0x895044	             mov dword [rax + 0x44], edx	       830	inflate.c	FUNCTION_7	SWITCH_1	IF_44
0x40012de	            0x31f6	                            xor esi, esi	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40012e0	            0x31d2	                            xor edx, edx	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40012e2	            0x31ff	                            xor edi, edi	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40012e4	      0x4c89542448	             mov qword [rsp + 0x48], r10	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40012e9	      0xe800000000	                          call 0x40012ee	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40012ee	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40012f3	        0x49894520	             mov qword [r13 + 0x20], rax	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x40012f7	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       835	inflate.c	FUNCTION_7	SWITCH_1
0x40012fc	        0x48894660	             mov qword [rsi + 0x60], rax	       833	inflate.c	FUNCTION_7	SWITCH_1	CALL_9
0x4001300	    0x41c745083f3f	            mov dword [r13 + 8], 0x3f3f 	       834	inflate.c	FUNCTION_7	SWITCH_1
0x4001308	      0xb83f3f0000	                         mov eax, 0x3f3f	       835	inflate.c	FUNCTION_7	SWITCH_1
0x400130d	      0xe9baf2ffff	                           jmp 0x40005cc	       835	inflate.c	FUNCTION_7	SWITCH_1
0x4001312	    0x660f1f440000	                    nop word [rax + rax]	       835	inflate.c	FUNCTION_7	SWITCH_1
0x4001318	        0x418b7510	            mov esi, dword [r13 + 0x10] 	       835	inflate.c	FUNCTION_7	SWITCH_1
0x400131c	            0x85f6	                           test esi, esi	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x400131e	     0xf84c00b0000	                            je 0x4001ee4	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001324	        0x418b7518	            mov esi, dword [r13 + 0x18] 	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001328	            0x85f6	                           test esi, esi	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x400132a	     0xf84b40b0000	                            je 0x4001ee4	      1222	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001330	          0x83fb1f	                           cmp ebx, 0x1f	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001333	            0x7738	                            ja 0x400136d	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001335	          0x4585e4	                         test r12d, r12d	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001338	     0xf8454040000	                            je 0x4001792	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x400133e	            0x89d9	                            mov ecx, ebx	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001340	            0xeb0f	                           jmp 0x4001351	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001342	    0x660f1f440000	                    nop word [rax + rax]	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001348	          0x4585e4	                         test r12d, r12d	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x400134b	     0xf843f040000	                            je 0x4001790	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001351	        0x4883c501	                              add rbp, 1	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001355	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001359	        0x4183ec01	                             sub r12d, 1	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x400135d	          0x48d3e0	                             shl rax, cl	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001360	          0x83c108	                              add ecx, 8	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001363	          0x4901c2	                            add r10, rax	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001366	          0x83f91f	                           cmp ecx, 0x1f	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001369	            0x76dd	                           jbe 0x4001348	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x400136b	            0x89cb	                            mov ebx, ecx	      1223	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x400136d	        0x418b4528	            mov eax, dword [r13 + 0x28] 	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001371	          0x4c39d0	                            cmp rax, r10	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001374	     0xf84760c0000	                            je 0x4001ff0	      1224	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x400137a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1225	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x400137f	    0x48c740300000	               mov qword [rax + 0x30], 0	      1225	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001387	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1226	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x400138f	      0xb8513f0000	                         mov eax, 0x3f51	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001394	      0xe933f2ffff	                           jmp 0x40005cc	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x4001399	     0xf1f80000000	                         nop dword [rax]	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x40013a0	        0x418b5518	            mov edx, dword [r13 + 0x18] 	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x40013a4	          0xf6c608	                              test dh, 8	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x40013a7	     0xf8443040000	                            je 0x40017f0	       779	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x40013ad	          0x4585e4	                         test r12d, r12d	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x40013b0	     0xf84dc030000	                            je 0x4001792	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x40013b6	            0x31c0	                            xor eax, eax	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x40013b8	            0xeb0b	                           jmp 0x40013c5	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x40013ba	    0x660f1f440000	                    nop word [rax + rax]	       780	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_31
0x40013c0	          0x4539f4	                          cmp r12d, r14d	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40013c3	            0x7638	                           jbe 0x40013fd	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40013c5	        0x448d7001	                     lea r14d, [rax + 1]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40013c9	    0x440fb67c0500	            movzx r15d, byte [rbp + rax]	       783	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40013cf	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013d3	          0x4885c0	                           test rax, rax	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013d6	            0x741d	                            je 0x40013f5	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013d8	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013dc	          0x4885c9	                           test rcx, rcx	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013df	            0x7414	                            je 0x40013f5	       784	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013e1	        0x418b555c	            mov edx, dword [r13 + 0x5c] 	       786	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013e5	          0x3b5030	            cmp edx, dword [rax + 0x30] 	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013e8	            0x730b	                           jae 0x40013f5	       785	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013ea	          0x8d4201	                      lea eax, [rdx + 1]	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013ed	        0x4189455c	             mov dword [r13 + 0x5c], eax	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013f1	        0x44883c11	              mov byte [rcx + rdx], r15b	       787	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1	IF_32
0x40013f5	          0x4584ff	                         test r15b, r15b	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40013f8	          0x4489f0	                           mov eax, r14d	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40013fb	            0x75c3	                           jne 0x40013c0	       788	inflate.c	FUNCTION_7	SWITCH_1	IF_30	DO_1
0x40013fd	      0x41f6451902	               test byte [r13 + 0x19], 2	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4001402	     0xf85c0040000	                           jne 0x40018c8	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x4001408	          0x4529f4	                          sub r12d, r14d	       791	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x400140b	          0x4c01f5	                            add rbp, r14	       792	inflate.c	FUNCTION_7	SWITCH_1	IF_30
0x400140e	          0x4584ff	                         test r15b, r15b	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4001411	     0xf857b030000	                           jne 0x4001792	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x4001417	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       793	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_34
0x400141b	          0xf6c610	                           test dh, 0x10	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x400141e	    0x41c7455c0000	               mov dword [r13 + 0x5c], 0	       797	inflate.c	FUNCTION_7	SWITCH_1
0x4001426	    0x41c745083b3f	            mov dword [r13 + 8], 0x3f3b 	       798	inflate.c	FUNCTION_7	SWITCH_1
0x400142e	     0xf85b9fdffff	                           jne 0x40011ed	       800	inflate.c	FUNCTION_7	SWITCH_1	IF_36
0x4001434	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4001438	          0x4885c0	                           test rax, rax	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x400143b	     0xf8421feffff	                            je 0x4001262	       816	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4001441	    0x48c740380000	               mov qword [rax + 0x38], 0	       817	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4001449	      0xe914feffff	                           jmp 0x4001262	       817	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x400144e	            0x6690	                                     nop	       817	inflate.c	FUNCTION_7	SWITCH_1	ELSE_3	IF_41
0x4001450	          0x8b3c24	                    mov edi, dword [rsp]	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x4001453	            0x85ff	                           test edi, edi	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x4001455	     0xf8437030000	                            je 0x4001792	      1192	inflate.c	FUNCTION_7	SWITCH_1	IF_94
0x400145b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001460	        0x418b455c	            mov eax, dword [r13 + 0x5c] 	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001464	            0x8806	                      mov byte [rsi], al	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x4001466	            0x89f8	                            mov eax, edi	      1194	inflate.c	FUNCTION_7	SWITCH_1
0x4001468	    0x41c74508483f	            mov dword [r13 + 8], 0x3f48 	      1195	inflate.c	FUNCTION_7	SWITCH_1
0x4001470	          0x83e801	                              sub eax, 1	      1194	inflate.c	FUNCTION_7	SWITCH_1
0x4001473	          0x890424	                    mov dword [rsp], eax	      1194	inflate.c	FUNCTION_7	SWITCH_1
0x4001476	        0x488d4601	                      lea rax, [rsi + 1]	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x400147a	      0x4889442410	             mov qword [rsp + 0x10], rax	      1193	inflate.c	FUNCTION_7	SWITCH_1
0x400147f	      0xb8483f0000	                         mov eax, 0x3f48	      1196	inflate.c	FUNCTION_7	SWITCH_1
0x4001484	      0xe943f1ffff	                           jmp 0x40005cc	      1196	inflate.c	FUNCTION_7	SWITCH_1
0x4001489	     0xf1f80000000	                         nop dword [rax]	      1196	inflate.c	FUNCTION_7	SWITCH_1
0x4001490	        0x418b5510	            mov edx, dword [r13 + 0x10] 	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4001494	            0x85d2	                           test edx, edx	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4001496	     0xf8484050000	                            je 0x4001a20	       658	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x400149c	          0x83fb0f	                            cmp ebx, 0xf	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400149f	            0x7734	                            ja 0x40014d5	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014a1	          0x4585e4	                         test r12d, r12d	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014a4	     0xf84e8020000	                            je 0x4001792	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014aa	            0x89d9	                            mov ecx, ebx	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014ac	            0xeb0b	                           jmp 0x40014b9	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014ae	            0x6690	                                     nop	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014b0	          0x4585e4	                         test r12d, r12d	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014b3	     0xf84d7020000	                            je 0x4001790	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014b9	        0x4883c501	                              add rbp, 1	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014bd	         0xfb645ff	               movzx eax, byte [rbp - 1]	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014c1	        0x4183ec01	                             sub r12d, 1	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014c5	          0x48d3e0	                             shl rax, cl	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014c8	          0x83c108	                              add ecx, 8	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014cb	          0x4901c2	                            add r10, rax	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014ce	          0x83f90f	                            cmp ecx, 0xf	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014d1	            0x76dd	                           jbe 0x40014b0	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014d3	            0x89cb	                            mov ebx, ecx	       662	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014d5	          0xf6c202	                              test dl, 2	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40014d8	            0x740d	                            je 0x40014e7	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40014da	    0x4981fa1f8b00	                         cmp r10, 0x8b1f	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40014e1	     0xf846f0a0000	                            je 0x4001f56	       664	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x40014e7	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40014eb	    0x41c745180000	               mov dword [r13 + 0x18], 0	       673	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x40014f3	          0x4885c0	                           test rax, rax	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40014f6	            0x7407	                            je 0x40014ff	       674	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40014f8	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	       675	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_6
0x40014ff	          0x83e201	                              and edx, 1	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001502	     0xf84bc060000	                            je 0x4001bc4	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001508	          0x4489d1	                           mov ecx, r10d	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400150b	    0x48ba11420821	           movabs rdx, 0x842108421084211	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001515	          0xc1e108	                              shl ecx, 8	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001518	            0x89c8	                            mov eax, ecx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400151a	          0x4c89d1	                            mov rcx, r10	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400151d	      0x2500ff0000	                         and eax, 0xff00	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001522	        0x48c1e908	                              shr rcx, 8	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001526	          0x4801c1	                            add rcx, rax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001529	          0x4889c8	                            mov rax, rcx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400152c	          0x48f7e2	                                 mul rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400152f	          0x4889c8	                            mov rax, rcx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001532	          0x4829d0	                            sub rax, rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001535	          0x48d1e8	                              shr rax, 1	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001538	          0x4801d0	                            add rax, rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400153b	        0x48c1e804	                              shr rax, 4	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400153f	          0x4889c2	                            mov rdx, rax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001542	        0x48c1e205	                              shl rdx, 5	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001546	          0x4829c2	                            sub rdx, rax	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001549	          0x4839d1	                            cmp rcx, rdx	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x400154c	     0xf8572060000	                           jne 0x4001bc4	       676	inflate.c	IF_7	FUNCTION_7	SWITCH_1
0x4001552	          0x4489d0	                           mov eax, r10d	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4001555	          0x83e00f	                            and eax, 0xf	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4001558	          0x83f808	                              cmp eax, 8	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x400155b	     0xf859dfaffff	                           jne 0x4000ffe	       685	inflate.c	FUNCTION_7	SWITCH_1	IF_9
0x4001561	        0x49c1ea04	                              shr r10, 4	       690	inflate.c	FUNCTION_7	SWITCH_1
0x4001565	        0x418b4538	            mov eax, dword [r13 + 0x38] 	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4001569	          0x83eb04	                              sub ebx, 4	       690	inflate.c	FUNCTION_7	SWITCH_1
0x400156c	          0x4489d1	                           mov ecx, r10d	       691	inflate.c	FUNCTION_7	SWITCH_1
0x400156f	          0x83e10f	                            and ecx, 0xf	       691	inflate.c	FUNCTION_7	SWITCH_1
0x4001572	          0x83c108	                              add ecx, 8	       691	inflate.c	FUNCTION_7	SWITCH_1
0x4001575	            0x85c0	                           test eax, eax	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4001577	     0xf85200b0000	                           jne 0x400209d	       692	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x400157d	          0x83f90f	                            cmp ecx, 0xf	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4001580	        0x41894d38	             mov dword [r13 + 0x38], ecx	       693	inflate.c	FUNCTION_7	SWITCH_1	IF_10
0x4001584	     0xf86240b0000	                           jbe 0x40020ae	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x400158a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       695	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x400158f	    0x48c740300000	               mov qword [rax + 0x30], 0	       695	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x4001597	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       696	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x400159f	      0xb8513f0000	                         mov eax, 0x3f51	       697	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40015a4	      0xe923f0ffff	                           jmp 0x40005cc	       697	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40015a9	     0xf1f80000000	                         nop dword [rax]	       697	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40015b0	            0x89d9	                            mov ecx, ebx	       888	inflate.c	FUNCTION_7	SWITCH_1
0x40015b2	          0x83e3f8	                     and ebx, 0xfffffff8	       888	inflate.c	FUNCTION_7	SWITCH_1
0x40015b5	          0x83e107	                              and ecx, 7	       888	inflate.c	FUNCTION_7	SWITCH_1
0x40015b8	          0x49d3ea	                             shr r10, cl	       888	inflate.c	FUNCTION_7	SWITCH_1
0x40015bb	          0x83fb1f	                           cmp ebx, 0x1f	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015be	            0x7735	                            ja 0x40015f5	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015c0	          0x4585e4	                         test r12d, r12d	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015c3	     0xf84c9010000	                            je 0x4001792	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015c9	            0x89d9	                            mov ecx, ebx	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015cb	            0xeb0c	                           jmp 0x40015d9	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015cd	           0xf1f00	                         nop dword [rax]	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015d0	          0x4585e4	                         test r12d, r12d	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015d3	     0xf84b7010000	                            je 0x4001790	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015d9	        0x4883c501	                              add rbp, 1	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015dd	         0xfb645ff	               movzx eax, byte [rbp - 1]	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015e1	        0x4183ec01	                             sub r12d, 1	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015e5	          0x48d3e0	                             shl rax, cl	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015e8	          0x83c108	                              add ecx, 8	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015eb	          0x4901c2	                            add r10, rax	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015ee	          0x83f91f	                           cmp ecx, 0x1f	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015f1	            0x76dd	                           jbe 0x40015d0	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015f3	            0x89cb	                            mov ebx, ecx	       889	inflate.c	FUNCTION_7	SWITCH_1
0x40015f5	          0x4c89d0	                            mov rax, r10	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x40015f8	        0x410fb7d2	                         movzx edx, r10w	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x40015fc	        0x48c1e810	                           shr rax, 0x10	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001600	    0x4835ffff0000	                         xor rax, 0xffff	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001606	          0x4839c2	                            cmp rdx, rax	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001609	     0xf8405060000	                            je 0x4001c14	       890	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400160f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       891	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001614	    0x48c740300000	               mov qword [rax + 0x30], 0	       891	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400161c	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       892	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001624	      0xb8513f0000	                         mov eax, 0x3f51	       893	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001629	      0xe99eefffff	                           jmp 0x40005cc	       893	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x400162e	            0x6690	                                     nop	       893	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001630	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	       893	inflate.c	FUNCTION_7	SWITCH_1	IF_49
0x4001635	    0xc74424240100	               mov dword [rsp + 0x24], 1	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x400163d	      0xe9d6f4ffff	                           jmp 0x4000b18	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001642	    0x660f1f440000	                    nop word [rax + rax]	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001648	        0x418b7510	            mov esi, dword [r13 + 0x10] 	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400164c	            0x85f6	                           test esi, esi	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400164e	     0xf84bc030000	                            je 0x4001a10	      1198	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001654	          0x83fb1f	                           cmp ebx, 0x1f	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001657	            0x773c	                            ja 0x4001695	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001659	          0x4585e4	                         test r12d, r12d	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400165c	     0xf8430010000	                            je 0x4001792	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001662	            0x89d9	                            mov ecx, ebx	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001664	            0xeb13	                           jmp 0x4001679	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001670	          0x4585e4	                         test r12d, r12d	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001673	     0xf8417010000	                            je 0x4001790	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001679	        0x4883c501	                              add rbp, 1	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400167d	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001681	        0x4183ec01	                             sub r12d, 1	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001685	          0x48d3e0	                             shl rax, cl	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001688	          0x83c108	                              add ecx, 8	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400168b	          0x4901c2	                            add r10, rax	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400168e	          0x83f91f	                           cmp ecx, 0x1f	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001691	            0x76dd	                           jbe 0x4001670	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001693	            0x89cb	                            mov ebx, ecx	      1199	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001695	        0x8b542408	                mov edx, dword [rsp + 8]	      1200	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001699	          0x2b1424	                    sub edx, dword [rsp]	      1200	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x400169c	            0x89f1	                            mov ecx, esi	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x400169e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x40016a3	          0x83e104	                              and ecx, 4	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016a6	            0x89d0	                            mov eax, edx	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x40016a8	        0x48014728	            add qword [rdi + 0x28], rax 	      1201	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x40016ac	        0x49014528	            add qword [r13 + 0x28], rax 	      1202	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x40016b0	            0x85d2	                           test edx, edx	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016b2	            0x7442	                            je 0x40016f6	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016b4	            0x85c9	                           test ecx, ecx	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016b6	            0x743e	                            je 0x40016f6	      1203	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016b8	        0x458b4518	            mov r8d, dword [r13 + 0x18] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016bc	      0x4c89542408	                mov qword [rsp + 8], r10	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016c1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016c6	          0x4585c0	                           test r8d, r8d	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016c9	     0xf84dd080000	                            je 0x4001fac	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016cf	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016d3	          0x4829c6	                            sub rsi, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016d6	      0xe800000000	                          call 0x40016db	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016db	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016e0	        0x418b7510	            mov esi, dword [r13 + 0x10] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016e4	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016e9	        0x49894520	             mov qword [r13 + 0x20], rax	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016ed	            0x89f1	                            mov ecx, esi	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016ef	        0x48894760	             mov qword [rdi + 0x60], rax	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016f3	          0x83e104	                              and ecx, 4	      1204	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x40016f6	            0x85c9	                           test ecx, ecx	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x40016f8	     0xf8406030000	                            je 0x4001a04	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x40016fe	        0x418b7d18	            mov edi, dword [r13 + 0x18] 	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001702	          0x4c89d0	                            mov rax, r10	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001705	            0x85ff	                           test edi, edi	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001707	            0x7531	                           jne 0x400173a	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001709	          0x4c89d2	                            mov rdx, r10	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400170c	        0x48c1e808	                              shr rax, 8	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001710	        0x48c1ea18	                           shr rdx, 0x18	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001714	      0x2500ff0000	                         and eax, 0xff00	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001719	           0xfb6d2	                           movzx edx, dl	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400171c	          0x4801c2	                            add rdx, rax	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400171f	          0x4c89d0	                            mov rax, r10	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001722	      0x2500ff0000	                         and eax, 0xff00	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001727	        0x48c1e008	                              shl rax, 8	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400172b	          0x4801c2	                            add rdx, rax	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400172e	          0x4c89d0	                            mov rax, r10	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001731	        0x48c1e018	                           shl rax, 0x18	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001735	            0x89c0	                            mov eax, eax	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001737	          0x4801d0	                            add rax, rdx	      1209	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400173a	        0x493b4520	            cmp rax, qword [r13 + 0x20] 	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400173e	     0xf84c0020000	                            je 0x4001a04	      1207	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001744	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1212	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001749	    0x48c740300000	               mov qword [rax + 0x30], 0	      1212	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001751	          0x8b0424	                    mov eax, dword [rsp]	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001754	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1213	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400175c	        0x89442408	                mov dword [rsp + 8], eax	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001760	      0xb8513f0000	                         mov eax, 0x3f51	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001765	      0xe962eeffff	                           jmp 0x40005cc	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x400176a	    0x660f1f440000	                    nop word [rax + rax]	      1214	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_97
0x4001770	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4001774	          0x4885c0	                           test rax, rax	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4001777	     0xf8499f9ffff	                            je 0x4001116	       753	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x400177d	    0x48c740180000	               mov qword [rax + 0x18], 0	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4001785	      0xe98cf9ffff	                           jmp 0x4001116	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x400178a	    0x660f1f440000	                    nop word [rax + rax]	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4001790	            0x89cb	                            mov ebx, ecx	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4001792	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x4001797	      0xe97cf3ffff	                           jmp 0x4000b18	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x400179c	         0xf1f4000	                         nop dword [rax]	       754	inflate.c	FUNCTION_7	SWITCH_1	ELSE_1	IF_23
0x40017a0	          0x83e880	             sub eax, 0xffffffffffffff80	      1269	inflate.c	FUNCTION_7
0x40017a3	      0xe96ff4ffff	                           jmp 0x4000c17	      1269	inflate.c	FUNCTION_7
0x40017a8	     0xf1f84000000	                   nop dword [rax + rax]	      1269	inflate.c	FUNCTION_7
0x40017b0	        0x418b4308	                mov eax, dword [r11 + 8]	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40017b4	            0x85c0	                           test eax, eax	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40017b6	     0xf85e4000000	                           jne 0x40018a0	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40017bc	    0xc74424200000	               mov dword [rsp + 0x20], 0	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40017c4	      0xe9a8edffff	                           jmp 0x4000571	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40017c9	     0xf1f80000000	                         nop dword [rax]	       646	inflate.c	IF_7	FOR_1	FUNCTION_7	IF_1
0x40017d0	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      1268	inflate.c	FUNCTION_7	IF_102
0x40017d4	          0x4829c6	                            sub rsi, rax	      1268	inflate.c	FUNCTION_7	IF_102
0x40017d7	            0x89da	                            mov edx, ebx	      1268	inflate.c	FUNCTION_7	IF_102
0x40017d9	      0xe800000000	                          call 0x40017de	      1268	inflate.c	FUNCTION_7	IF_102
0x40017de	        0x4c8b1c24	                    mov r11, qword [rsp]	      1268	inflate.c	FUNCTION_7	IF_102
0x40017e2	      0xe9eef3ffff	                           jmp 0x4000bd5	      1268	inflate.c	FUNCTION_7	IF_102
0x40017e7	    0x660f1f840000	                    nop word [rax + rax]	      1268	inflate.c	FUNCTION_7	IF_102
0x40017f0	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x40017f4	          0x4885c0	                           test rax, rax	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x40017f7	     0xf841efcffff	                            je 0x400141b	       795	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x40017fd	    0x48c740280000	               mov qword [rax + 0x28], 0	       796	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x4001805	      0xe911fcffff	                           jmp 0x400141b	       796	inflate.c	FUNCTION_7	SWITCH_1	ELSE_2	IF_35
0x400180a	        0x40f6c620	                          test sil, 0x20	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400180e	     0xf84d7030000	                            je 0x4001beb	      1080	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001814	    0x41c785ec1b00	   mov dword [r13 + 0x1bec], 0xffffffff 	      1082	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400181f	              0x90	                                     nop	      1082	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001820	    0x41c745083f3f	            mov dword [r13 + 8], 0x3f3f 	      1083	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001828	      0xb83f3f0000	                         mov eax, 0x3f3f	      1084	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x400182d	      0xe99aedffff	                           jmp 0x40005cc	      1084	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001832	    0x660f1f440000	                    nop word [rax + rax]	      1084	inflate.c	FUNCTION_7	SWITCH_1	IF_74
0x4001838	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x400183d	          0x4829c6	                            sub rsi, rax	      1180	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001840	        0x418b455c	            mov eax, dword [r13 + 0x5c] 	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001844	            0x89c2	                            mov edx, eax	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001846	          0x8b3c24	                    mov edi, dword [rsp]	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x4001849	            0x39c7	                            cmp edi, eax	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x400184b	           0xf46c7	                         cmovbe eax, edi	      1181	inflate.c	FUNCTION_7	SWITCH_1	ELSE_8
0x400184e	            0x29c7	                            sub edi, eax	      1184	inflate.c	FUNCTION_7	SWITCH_1
0x4001850	          0x8d48ff	                      lea ecx, [rax - 1]	      1184	inflate.c	FUNCTION_7	SWITCH_1
0x4001853	            0x29c2	                            sub edx, eax	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001855	          0x893c24	                    mov dword [rsp], edi	      1184	inflate.c	FUNCTION_7	SWITCH_1
0x4001858	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x400185d	            0x31c0	                            xor eax, eax	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x400185f	        0x4189555c	             mov dword [r13 + 0x5c], edx	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001863	        0x4883c101	                              add rcx, 1	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001867	    0x660f1f840000	                    nop word [rax + rax]	      1185	inflate.c	FUNCTION_7	SWITCH_1
0x4001870	         0xfb61406	             movzx edx, byte [rsi + rax]	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001874	          0x881407	                mov byte [rdi + rax], dl	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001877	        0x4883c001	                              add rax, 1	      1187	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x400187b	          0x4839c1	                            cmp rcx, rax	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x400187e	            0x75f0	                           jne 0x4001870	      1188	inflate.c	FUNCTION_7	SWITCH_1	DO_4
0x4001880	        0x458b4d5c	            mov r9d, dword [r13 + 0x5c] 	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001884	      0x48014c2410	            add qword [rsp + 0x10], rcx 	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001889	          0x4585c9	                           test r9d, r9d	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x400188c	            0x7422	                            je 0x40018b0	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x400188e	        0x418b4508	                mov eax, dword [r13 + 8]	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001892	      0xe935edffff	                           jmp 0x40005cc	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x4001897	    0x660f1f840000	                    nop word [rax + rax]	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40018a0	      0xb8feffffff	                     mov eax, 0xfffffffe	      1244	inflate.c	FUNCTION_7	SWITCH_1
0x40018a5	      0xe936f2ffff	                           jmp 0x4000ae0	      1244	inflate.c	FUNCTION_7	SWITCH_1
0x40018aa	    0x660f1f440000	                    nop word [rax + rax]	      1244	inflate.c	FUNCTION_7	SWITCH_1
0x40018b0	    0x41c74508483f	            mov dword [r13 + 8], 0x3f48 	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40018b8	      0xb8483f0000	                         mov eax, 0x3f48	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40018bd	      0xe90aedffff	                           jmp 0x40005cc	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40018c2	    0x660f1f440000	                    nop word [rax + rax]	      1189	inflate.c	FUNCTION_7	SWITCH_1	IF_93
0x40018c8	      0x41f6451004	               test byte [r13 + 0x10], 4	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x40018cd	     0xf8435fbffff	                            je 0x4001408	       789	inflate.c	FUNCTION_7	SWITCH_1	IF_30	IF_33
0x40018d3	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018d7	          0x4489f2	                           mov edx, r14d	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018da	          0x4889ee	                            mov rsi, rbp	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018dd	      0x4c89542448	             mov qword [rsp + 0x48], r10	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018e2	      0xe800000000	                          call 0x40018e7	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018e7	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018ec	        0x49894520	             mov qword [r13 + 0x20], rax	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018f0	      0xe913fbffff	                           jmp 0x4001408	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018f5	           0xf1f00	                         nop dword [rax]	       790	inflate.c	FUNCTION_7	SWITCH_1	IF_30	CALL_7
0x40018f8	      0x410fb74520	           movzx eax, word [r13 + 0x20] 	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x40018fd	          0x4c39d0	                            cmp rax, r10	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001900	     0xf84baf9ffff	                            je 0x40012c0	       822	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001906	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       823	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x400190b	    0x48c740300000	               mov qword [rax + 0x30], 0	       823	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001913	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       824	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x400191b	      0xb8513f0000	                         mov eax, 0x3f51	       825	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001920	      0xe9a7ecffff	                           jmp 0x40005cc	       825	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001925	           0xf1f00	                         nop dword [rax]	       825	inflate.c	FUNCTION_7	SWITCH_1	IF_42	IF_43
0x4001928	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400192d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001932	          0x897020	             mov dword [rax + 0x20], esi	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001935	        0x8b742408	                mov esi, dword [rsp + 8]	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001939	        0x48897818	             mov qword [rax + 0x18], rdi	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400193d	          0x488928	                    mov qword [rax], rbp	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001940	          0x4889c7	                            mov rdi, rax	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001943	        0x44896008	               mov dword [rax + 8], r12d	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001947	        0x4d895550	             mov qword [r13 + 0x50], r10	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400194b	        0x41895d58	             mov dword [r13 + 0x58], ebx	      1046	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400194f	          0x4889c3	                            mov rbx, rax	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001952	      0xe800000000	                          call 0x4001957	      1047	inflate.c	FUNCTION_7	SWITCH_1	IF_68	CALL_25
0x4001957	          0x4889d8	                            mov rax, rbx	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400195a	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400195e	        0x4d8b5550	            mov r10, qword [r13 + 0x50] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001962	          0x488b28	                    mov rbp, qword [rax]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001965	        0x448b6008	               mov r12d, dword [rax + 8]	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001969	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400196e	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001971	        0x418b4508	                mov eax, dword [r13 + 8]	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001975	          0x891c24	                    mov dword [rsp], ebx	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x4001978	        0x418b5d58	            mov ebx, dword [r13 + 0x58] 	      1048	inflate.c	FUNCTION_7	SWITCH_1	IF_68
0x400197c	      0x3d3f3f0000	                         cmp eax, 0x3f3f	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001981	     0xf8545ecffff	                           jne 0x40005cc	      1049	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001987	    0x41c785ec1b00	   mov dword [r13 + 0x1bec], 0xffffffff 	      1050	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001992	      0xe935ecffff	                           jmp 0x40005cc	      1050	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x4001997	    0x660f1f840000	                    nop word [rax + rax]	      1050	inflate.c	FUNCTION_7	SWITCH_1	IF_68	IF_69
0x40019a0	            0x39f3	                            cmp ebx, esi	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019a2	            0x7338	                           jae 0x40019dc	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019a4	          0x4585e4	                         test r12d, r12d	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019a7	     0xf84e5fdffff	                            je 0x4001792	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019ad	            0x89d9	                            mov ecx, ebx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019af	            0xeb10	                           jmp 0x40019c1	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019b1	     0xf1f80000000	                         nop dword [rax]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019b8	          0x4585e4	                         test r12d, r12d	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019bb	     0xf84cffdffff	                            je 0x4001790	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019c1	        0x4883c501	                              add rbp, 1	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019c5	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019c9	        0x4183ec01	                             sub r12d, 1	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019cd	          0x48d3e0	                             shl rax, cl	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019d0	          0x83c108	                              add ecx, 8	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019d3	          0x4901c2	                            add r10, rax	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019d6	            0x39f1	                            cmp ecx, esi	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019d8	            0x72de	                            jb 0x40019b8	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019da	            0x89cb	                            mov ebx, ecx	      1095	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019dc	            0x89f1	                            mov ecx, esi	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019de	      0xb801000000	                              mov eax, 1	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019e3	            0x29f3	                            sub ebx, esi	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019e5	            0xd3e0	                             shl eax, cl	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019e7	    0x4101b5ec1b00	           add dword [r13 + 0x1bec], esi	      1098	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019ee	          0x83e801	                              sub eax, 1	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019f1	          0x4421d0	                           and eax, r10d	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019f4	        0x4103455c	             add eax, dword [r13 + 0x5c]	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019f8	          0x49d3ea	                             shr r10, cl	      1097	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019fb	        0x4189455c	             mov dword [r13 + 0x5c], eax	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x40019ff	      0xe9acefffff	                           jmp 0x40009b0	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001a04	          0x8b0424	                    mov eax, dword [rsp]	      1096	inflate.c	FUNCTION_7	SWITCH_1	IF_76
0x4001a07	            0x31db	                            xor ebx, ebx	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001a09	          0x4531d2	                          xor r10d, r10d	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001a0c	        0x89442408	                mov dword [rsp + 8], eax	      1216	inflate.c	FUNCTION_7	SWITCH_1	IF_95
0x4001a10	    0x41c745084f3f	            mov dword [r13 + 8], 0x3f4f 	      1220	inflate.c	FUNCTION_7	SWITCH_1
0x4001a18	      0xe9fff8ffff	                           jmp 0x400131c	      1220	inflate.c	FUNCTION_7	SWITCH_1
0x4001a1d	           0xf1f00	                         nop dword [rax]	      1220	inflate.c	FUNCTION_7	SWITCH_1
0x4001a20	    0x41c74508403f	            mov dword [r13 + 8], 0x3f40 	       659	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4001a28	      0xb8403f0000	                         mov eax, 0x3f40	       660	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4001a2d	      0xe99aebffff	                           jmp 0x40005cc	       660	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4001a32	    0x660f1f440000	                    nop word [rax + rax]	       660	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_3
0x4001a38	    0x458b9de81b00	         mov r11d, dword [r13 + 0x1be8] 	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a3f	          0x4585db	                         test r11d, r11d	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a42	     0xf84b4edffff	                            je 0x40007fc	      1152	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a48	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1153	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a4d	    0x48c740300000	               mov qword [rax + 0x30], 0	      1153	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a55	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1154	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a5d	      0xb8513f0000	                         mov eax, 0x3f51	      1155	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a62	      0xe965ebffff	                           jmp 0x40005cc	      1155	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a67	    0x660f1f840000	                    nop word [rax + rax]	      1155	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a70	    0x458b9dec1b00	         mov r11d, dword [r13 + 0x1bec] 	      1155	inflate.c	FUNCTION_7	SWITCH_1	IF_84	IF_85	IF_86
0x4001a77	            0x89c1	                            mov ecx, eax	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4001a79	            0x29c3	                            sub ebx, eax	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4001a7b	          0x4401d8	                           add eax, r11d	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4001a7e	          0x49d3ea	                             shr r10, cl	      1120	inflate.c	FUNCTION_7	SWITCH_1
0x4001a81	        0x40f6c640	                          test sil, 0x40	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a85	    0x418985ec1b00	          mov dword [r13 + 0x1bec], eax 	      1121	inflate.c	FUNCTION_7	SWITCH_1
0x4001a8c	     0xf84be000000	                            je 0x4001b50	      1122	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a92	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1123	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a97	    0x48c740300000	               mov qword [rax + 0x30], 0	      1123	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001a9f	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1124	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001aa7	      0xb8513f0000	                         mov eax, 0x3f51	      1125	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001aac	      0xe91bebffff	                           jmp 0x40005cc	      1125	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001ab1	     0xf1f80000000	                         nop dword [rax]	      1125	inflate.c	FUNCTION_7	SWITCH_1	IF_80
0x4001ab8	            0x29c3	                            sub ebx, eax	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001aba	        0x418d4101	                       lea eax, [r9 + 1]	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001abe	          0x49d3ea	                             shr r10, cl	       967	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ac1	    0x4189858c0000	             mov dword [r13 + 0x8c], eax	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ac8	    0x664789844d98	       mov word [r13 + r9*2 + 0x98], r8w	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ad1	          0x4189c1	                            mov r9d, eax	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ad4	      0xe9a3f3ffff	                           jmp 0x4000e7c	       968	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	IF_58
0x4001ad9	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001add	          0x4489f2	                           mov edx, r14d	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001ae0	          0x4889ee	                            mov rsi, rbp	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001ae3	      0x4c89542448	             mov qword [rsp + 0x48], r10	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001ae8	      0xe800000000	                          call 0x4001aed	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001aed	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001af2	        0x49894520	             mov qword [r13 + 0x20], rax	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001af6	      0xe954f7ffff	                           jmp 0x400124f	       811	inflate.c	FUNCTION_7	SWITCH_1	IF_36	CALL_8
0x4001afb	    0x41c74508443f	            mov dword [r13 + 8], 0x3f44 	       879	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001b03	      0xb8443f0000	                         mov eax, 0x3f44	       880	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001b08	      0xe912ecffff	                           jmp 0x400071f	       880	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001b0d	           0xf1f00	                         nop dword [rax]	       880	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001b10	            0x89c2	                            mov edx, eax	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4001b12	      0xe959eeffff	                           jmp 0x4000970	      1059	inflate.c	FUNCTION_7	SWITCH_1	IF_71
0x4001b17	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       930	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001b1c	    0x48c740300000	               mov qword [rax + 0x30], 0	       930	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001b24	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       931	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001b2c	      0xb8513f0000	                         mov eax, 0x3f51	       932	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001b31	      0xe996eaffff	                           jmp 0x40005cc	       932	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001b36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       932	inflate.c	FUNCTION_7	SWITCH_1	IF_55
0x4001b40	            0x29c6	                            sub esi, eax	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4001b42	        0x49037548	             add rsi, qword [r13 + 0x48]	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4001b46	      0xe9c9ecffff	                           jmp 0x4000814	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4001b4b	       0xf1f440000	                   nop dword [rax + rax]	      1176	inflate.c	FUNCTION_7	SWITCH_1	IF_84	ELSE_7
0x4001b50	          0x83e60f	                            and esi, 0xf	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x4001b53	        0x45894560	             mov dword [r13 + 0x60], r8d	      1127	inflate.c	FUNCTION_7	SWITCH_1
0x4001b57	    0x41c745084b3f	            mov dword [r13 + 8], 0x3f4b 	      1129	inflate.c	FUNCTION_7	SWITCH_1
0x4001b5f	        0x41897564	             mov dword [r13 + 0x64], esi	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x4001b63	      0xe904ecffff	                           jmp 0x400076c	      1128	inflate.c	FUNCTION_7	SWITCH_1
0x4001b68	      0x837c241c06	               cmp dword [rsp + 0x1c], 6	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4001b6d	    0x49c745680000	               mov qword [r13 + 0x68], 0	       315	inflate.c	FOR_1	IF_7
0x4001b75	    0x41c745780900	               mov dword [r13 + 0x78], 9	       316	inflate.c	FOR_1	IF_7
0x4001b7d	    0x49c745700000	               mov qword [r13 + 0x70], 0	       317	inflate.c	FOR_1	IF_7
0x4001b85	    0x41c7457c0500	               mov dword [r13 + 0x7c], 5	       318	inflate.c	FOR_1	IF_7
0x4001b8d	    0x41c74508473f	            mov dword [r13 + 8], 0x3f47 	       870	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001b95	     0xf8406060000	                            je 0x40021a1	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4001b9b	      0xb8473f0000	                         mov eax, 0x3f47	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4001ba0	      0xe97aebffff	                           jmp 0x400071f	       871	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x4001ba5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       882	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001baa	    0x48c740300000	               mov qword [rax + 0x30], 0	       882	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001bb2	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       883	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001bba	      0xb8513f0000	                         mov eax, 0x3f51	       883	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001bbf	      0xe95bebffff	                           jmp 0x400071f	       883	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2
0x4001bc4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       681	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4001bc9	    0x48c740300000	               mov qword [rax + 0x30], 0	       681	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4001bd1	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       682	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4001bd9	      0xb8513f0000	                         mov eax, 0x3f51	       683	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4001bde	      0xe9e9e9ffff	                           jmp 0x40005cc	       683	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4001be3	          0x4589f7	                          mov r15d, r14d	       683	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4001be6	      0xe9aaf5ffff	                           jmp 0x4001195	       683	inflate.c	FUNCTION_7	SWITCH_1	IF_8
0x4001beb	        0x40f6c640	                          test sil, 0x40	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001bef	     0xf8431020000	                            je 0x4001e26	      1086	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001bf5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1087	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001bfa	    0x48c740300000	               mov qword [rax + 0x30], 0	      1087	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001c02	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1088	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001c0a	      0xb8513f0000	                         mov eax, 0x3f51	      1089	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001c0f	      0xe9b8e9ffff	                           jmp 0x40005cc	      1089	inflate.c	FUNCTION_7	SWITCH_1	IF_75
0x4001c14	      0x837c241c06	               cmp dword [rsp + 0x1c], 6	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x4001c19	        0x410fb7c2	                         movzx eax, r10w	       895	inflate.c	FUNCTION_7	SWITCH_1
0x4001c1d	    0x41c74508423f	            mov dword [r13 + 8], 0x3f42 	       899	inflate.c	FUNCTION_7	SWITCH_1
0x4001c25	        0x4189455c	             mov dword [r13 + 0x5c], eax	       895	inflate.c	FUNCTION_7	SWITCH_1
0x4001c29	     0xf8444050000	                            je 0x4002173	       900	inflate.c	FUNCTION_7	SWITCH_1	IF_50
0x4001c2f	            0x31db	                            xor ebx, ebx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001c31	          0x4531d2	                          xor r10d, r10d	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001c34	      0xe983f0ffff	                           jmp 0x4000cbc	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4001c39	    0x41f7c200e000	                       test r10d, 0xe000	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4001c40	     0xf8434020000	                            je 0x4001e7a	       714	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4001c46	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       715	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4001c4b	    0x48c740300000	               mov qword [rax + 0x30], 0	       715	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4001c53	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       716	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4001c5b	      0xb8513f0000	                         mov eax, 0x3f51	       717	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4001c60	      0xe967e9ffff	                           jmp 0x40005cc	       717	inflate.c	FUNCTION_7	SWITCH_1	IF_13
0x4001c65	          0x8d7802	                      lea edi, [rax + 2]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c68	            0x39df	                            cmp edi, ebx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c6a	            0x7638	                           jbe 0x4001ca4	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c6c	          0x4585e4	                         test r12d, r12d	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c6f	     0xf841dfbffff	                            je 0x4001792	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c75	            0x89d9	                            mov ecx, ebx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c77	            0xeb10	                           jmp 0x4001c89	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c79	     0xf1f80000000	                         nop dword [rax]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c80	          0x4585e4	                         test r12d, r12d	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c83	     0xf8407fbffff	                            je 0x4001790	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c89	        0x4883c501	                              add rbp, 1	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c8d	         0xfb675ff	               movzx esi, byte [rbp - 1]	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c91	        0x4183ec01	                             sub r12d, 1	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c95	          0x48d3e6	                             shl rsi, cl	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c98	          0x83c108	                              add ecx, 8	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c9b	          0x4901f2	                            add r10, rsi	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001c9e	            0x39f9	                            cmp ecx, edi	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ca0	            0x72de	                            jb 0x4001c80	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ca2	            0x89cb	                            mov ebx, ecx	       972	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ca4	            0x89c1	                            mov ecx, eax	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ca6	            0x29c3	                            sub ebx, eax	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001ca8	          0x49d3ea	                             shr r10, cl	       973	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cab	          0x4585c9	                           test r9d, r9d	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001cae	     0xf84ce040000	                            je 0x4002182	       974	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59	IF_60
0x4001cb4	          0x4489d1	                           mov ecx, r10d	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cb7	        0x418d41ff	                       lea eax, [r9 - 1]	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cbb	        0x49c1ea02	                              shr r10, 2	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cbf	          0x83e103	                              and ecx, 3	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cc2	          0x83eb02	                              sub ebx, 2	       981	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cc5	    0x410fb7b44598	   movzx esi, word [r13 + rax*2 + 0x98] 	       979	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cce	          0x83c103	                              add ecx, 3	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cd1	      0xe9a1f2ffff	                           jmp 0x4000f77	       980	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_59
0x4001cd6	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001cda	      0x488d742450	                   lea rsi, [rsp + 0x50]	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001cdf	      0x4488542450	             mov byte [rsp + 0x50], r10b	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001ce4	      0xba02000000	                              mov edx, 2	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001ce9	        0x49c1ea08	                              shr r10, 8	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001ced	      0x4488542451	             mov byte [rsp + 0x51], r10b	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001cf2	      0xe800000000	                          call 0x4001cf7	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001cf7	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001cfb	        0x49894520	             mov qword [r13 + 0x20], rax	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001cff	      0xe985f3ffff	                           jmp 0x4001089	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001d04	            0x89cb	                            mov ebx, ecx	       740	inflate.c	FUNCTION_7	SWITCH_1	IF_19
0x4001d06	            0x89d0	                            mov eax, edx	       941	inflate.c	FUNCTION_7	SWITCH_1	WHILE_1
0x4001d08	          0x83f812	                           cmp eax, 0x12	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d0b	            0x772c	                            ja 0x4001d39	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d0d	           0xf1f00	                         nop dword [rax]	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d10	            0x89c2	                            mov edx, eax	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d12	          0x83c001	                              add eax, 1	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d15	          0x4531f6	                          xor r14d, r14d	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d18	     0xfb794120000	             movzx edx, word [rdx + rdx]	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d20	          0x83f813	                           cmp eax, 0x13	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d23	    0x664589b45598	     mov word [r13 + rdx*2 + 0x98], r14w	       945	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d2c	            0x75e2	                           jne 0x4001d10	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d2e	    0x41c7858c0000	           mov dword [r13 + 0x8c], 0x13 	       944	inflate.c	FUNCTION_7	SWITCH_1	WHILE_2
0x4001d39	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       946	inflate.c	FUNCTION_7	SWITCH_1
0x4001d3e	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d43	    0x498d8d900000	                   lea rcx, [r13 + 0x90]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d4a	    0x498db5980000	                   lea rsi, [r13 + 0x98]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d51	        0x4d8d4578	                    lea r8, [r13 + 0x78]	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d55	            0x31ff	                            xor edi, edi	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d57	    0x41c745780700	               mov dword [r13 + 0x78], 7	       948	inflate.c	FUNCTION_7	SWITCH_1
0x4001d5f	      0xba13000000	                           mov edx, 0x13	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d64	      0x4c89542448	             mov qword [rsp + 0x48], r10	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d69	    0x498985900000	             mov qword [r13 + 0x90], rax	       946	inflate.c	FUNCTION_7	SWITCH_1
0x4001d70	        0x49894568	             mov qword [r13 + 0x68], rax	       947	inflate.c	FUNCTION_7	SWITCH_1
0x4001d74	      0xe800000000	                          call 0x4001d79	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d79	            0x85c0	                           test eax, eax	       951	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001d7b	        0x89442424	             mov dword [rsp + 0x24], eax	       949	inflate.c	FUNCTION_7	SWITCH_1	CALL_20
0x4001d7f	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       951	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001d84	     0xf8474010000	                            je 0x4001efe	       951	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001d8a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       952	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001d8f	    0x48c740300000	               mov qword [rax + 0x30], 0	       952	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001d97	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       953	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001d9f	      0xb8513f0000	                         mov eax, 0x3f51	       954	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001da4	      0xe923e8ffff	                           jmp 0x40005cc	       954	inflate.c	FUNCTION_7	SWITCH_1	IF_56
0x4001da9	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001dad	          0x4489f2	                           mov edx, r14d	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001db0	          0x4889ee	                            mov rsi, rbp	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001db3	      0x4c89542448	             mov qword [rsp + 0x48], r10	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001db8	      0xe800000000	                          call 0x4001dbd	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001dbd	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001dc2	        0x49894520	             mov qword [r13 + 0x20], rax	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001dc6	      0xe9daf3ffff	                           jmp 0x40011a5	       769	inflate.c	FUNCTION_7	SWITCH_1	IF_24	IF_26	CALL_6
0x4001dcb	          0x8d7803	                      lea edi, [rax + 3]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001dce	            0x39df	                            cmp edi, ebx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001dd0	            0x7632	                           jbe 0x4001e04	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001dd2	          0x4585e4	                         test r12d, r12d	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001dd5	     0xf84b7f9ffff	                            je 0x4001792	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001ddb	            0x89d9	                            mov ecx, ebx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001ddd	            0xeb0a	                           jmp 0x4001de9	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001ddf	              0x90	                                     nop	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001de0	          0x4585e4	                         test r12d, r12d	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001de3	     0xf84a7f9ffff	                            je 0x4001790	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001de9	        0x4883c501	                              add rbp, 1	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001ded	         0xfb675ff	               movzx esi, byte [rbp - 1]	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001df1	        0x4183ec01	                             sub r12d, 1	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001df5	          0x48d3e6	                             shl rsi, cl	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001df8	          0x83c108	                              add ecx, 8	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001dfb	          0x4901f2	                            add r10, rsi	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001dfe	            0x39f9	                            cmp ecx, edi	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e00	            0x72de	                            jb 0x4001de0	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e02	            0x89cb	                            mov ebx, ecx	       984	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e04	            0x89c1	                            mov ecx, eax	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e06	      0xbffdffffff	                     mov edi, 0xfffffffd	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e0b	            0x31f6	                            xor esi, esi	       986	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e0d	          0x49d3ea	                             shr r10, cl	       985	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e10	            0x29c7	                            sub edi, eax	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e12	          0x4489d1	                           mov ecx, r10d	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e15	             0x1fb	                            add ebx, edi	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e17	        0x49c1ea03	                              shr r10, 3	       988	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e1b	          0x83e107	                              and ecx, 7	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e1e	          0x83c103	                              add ecx, 3	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e21	      0xe951f1ffff	                           jmp 0x4000f77	       987	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	ELSE_5	IF_61
0x4001e26	          0x83e60f	                            and esi, 0xf	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x4001e29	    0x41c74508493f	            mov dword [r13 + 8], 0x3f49 	      1092	inflate.c	FUNCTION_7	SWITCH_1
0x4001e31	        0x41897564	             mov dword [r13 + 0x64], esi	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x4001e35	      0xe96aebffff	                           jmp 0x40009a4	      1091	inflate.c	FUNCTION_7	SWITCH_1
0x4001e3a	          0x4c89d0	                            mov rax, r10	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e3d	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e41	      0x488d742450	                   lea rsi, [rsp + 0x50]	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e46	        0x48c1e808	                              shr rax, 8	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e4a	      0x4488542450	             mov byte [rsp + 0x50], r10b	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e4f	      0xba04000000	                              mov edx, 4	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e54	        0x88442451	               mov byte [rsp + 0x51], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e58	          0x4c89d0	                            mov rax, r10	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e5b	        0x49c1ea18	                           shr r10, 0x18	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e5f	        0x48c1e810	                           shr rax, 0x10	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e63	      0x4488542453	             mov byte [rsp + 0x53], r10b	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e68	        0x88442452	               mov byte [rsp + 0x52], al	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e6c	      0xe800000000	                          call 0x4001e71	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e71	        0x49894520	             mov qword [r13 + 0x20], rax	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e75	      0xe928eeffff	                           jmp 0x4000ca2	       730	inflate.c	FUNCTION_7	SWITCH_1	IF_17
0x4001e7a	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4001e7e	          0x4885d2	                           test rdx, rdx	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4001e81	            0x740c	                            je 0x4001e8f	       719	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4001e83	          0x4c89d1	                            mov rcx, r10	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4001e86	        0x48c1e908	                              shr rcx, 8	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4001e8a	          0x83e101	                              and ecx, 1	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4001e8d	            0x890a	                    mov dword [rdx], ecx	       720	inflate.c	FUNCTION_7	SWITCH_1	IF_14
0x4001e8f	          0xf6c402	                              test ah, 2	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4001e92	            0x740b	                            je 0x4001e9f	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4001e94	      0x41f6451004	               test byte [r13 + 0x10], 4	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4001e99	     0xf85d4010000	                           jne 0x4002073	       721	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4001e9f	    0x41c74508363f	            mov dword [r13 + 8], 0x3f36 	       724	inflate.c	FUNCTION_7	SWITCH_1
0x4001ea7	            0x31db	                            xor ebx, ebx	       723	inflate.c	FUNCTION_7	SWITCH_1
0x4001ea9	          0x4531d2	                          xor r10d, r10d	       723	inflate.c	FUNCTION_7	SWITCH_1
0x4001eac	      0xe99cedffff	                           jmp 0x4000c4d	       723	inflate.c	FUNCTION_7	SWITCH_1
0x4001eb1	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001eb5	      0x488d742450	                   lea rsi, [rsp + 0x50]	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001eba	      0x4488542450	             mov byte [rsp + 0x50], r10b	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001ebf	      0xba02000000	                              mov edx, 2	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001ec4	        0x49c1ea08	                              shr r10, 8	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001ec8	            0x31db	                            xor ebx, ebx	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4001eca	      0x4488542451	             mov byte [rsp + 0x51], r10b	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001ecf	      0xe800000000	                          call 0x4001ed4	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001ed4	          0x4531d2	                          xor r10d, r10d	       751	inflate.c	FUNCTION_7	SWITCH_1	IF_20
0x4001ed7	        0x49894520	             mov qword [r13 + 0x20], rax	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001edb	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001edf	      0xe932f2ffff	                           jmp 0x4001116	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001ee4	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	       750	inflate.c	FUNCTION_7	SWITCH_1	IF_20	IF_22
0x4001ee9	    0x41c74508503f	            mov dword [r13 + 8], 0x3f50 	      1233	inflate.c	FUNCTION_7	SWITCH_1
0x4001ef1	    0xc74424240100	               mov dword [rsp + 0x24], 1	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001ef9	      0xe91aecffff	                           jmp 0x4000b18	      1235	inflate.c	FUNCTION_7	SWITCH_1
0x4001efe	    0x41c7858c0000	               mov dword [r13 + 0x8c], 0	       957	inflate.c	FUNCTION_7	SWITCH_1
0x4001f09	    0x41c74508463f	            mov dword [r13 + 8], 0x3f46 	       958	inflate.c	FUNCTION_7	SWITCH_1
0x4001f11	          0x4531c9	                            xor r9d, r9d	       958	inflate.c	FUNCTION_7	SWITCH_1
0x4001f14	      0xe946efffff	                           jmp 0x4000e5f	       958	inflate.c	FUNCTION_7	SWITCH_1
0x4001f19	        0x418b4508	                mov eax, dword [r13 + 8]	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001f1d	      0x3d513f0000	                         cmp eax, 0x3f51	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001f22	     0xf84a4e6ffff	                            je 0x40005cc	      1008	inflate.c	FUNCTION_7	SWITCH_1	IF_63
0x4001f28	    0x664183bd9802	               cmp word [r13 + 0x298], 0	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001f31	     0xf85c8000000	                           jne 0x4001fff	      1011	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001f37	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1012	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001f3c	    0x48c740300000	               mov qword [rax + 0x30], 0	      1012	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001f44	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1013	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001f4c	      0xb8513f0000	                         mov eax, 0x3f51	      1014	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001f51	      0xe976e6ffff	                           jmp 0x40005cc	      1014	inflate.c	FUNCTION_7	SWITCH_1	IF_64
0x4001f56	        0x418b4538	            mov eax, dword [r13 + 0x38] 	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4001f5a	            0x85c0	                           test eax, eax	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4001f5c	            0x7508	                           jne 0x4001f66	       665	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4001f5e	    0x41c745380f00	            mov dword [r13 + 0x38], 0xf 	       666	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	IF_5
0x4001f66	            0x31d2	                            xor edx, edx	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4001f68	            0x31f6	                            xor esi, esi	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4001f6a	            0x31ff	                            xor edi, edi	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4001f6c	      0xe800000000	                          call 0x4001f71	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4001f71	      0x488d742450	                   lea rsi, [rsp + 0x50]	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f76	        0x49894520	             mov qword [r13 + 0x20], rax	       667	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4	CALL_2
0x4001f7a	      0xba02000000	                              mov edx, 2	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f7f	          0x4889c7	                            mov rdi, rax	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f82	      0xc64424501f	            mov byte [rsp + 0x50], 0x1f 	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f87	      0xc64424518b	            mov byte [rsp + 0x51], 0x8b 	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f8c	            0x31db	                            xor ebx, ebx	       669	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f8e	      0xe800000000	                          call 0x4001f93	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f93	    0x41c74508353f	            mov dword [r13 + 8], 0x3f35 	       670	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f9b	        0x49894520	             mov qword [r13 + 0x20], rax	       668	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001f9f	          0x4531d2	                          xor r10d, r10d	       669	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001fa2	      0xb8353f0000	                         mov eax, 0x3f35	       671	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001fa7	      0xe920e6ffff	                           jmp 0x40005cc	       671	inflate.c	IF_7	FUNCTION_7	SWITCH_1	IF_4
0x4001fac	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001fb0	          0x4829c6	                            sub rsi, rax	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001fb3	      0xe800000000	                          call 0x4001fb8	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001fb8	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001fbd	      0xe91ef7ffff	                           jmp 0x40016e0	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001fc2	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      1205	inflate.c	FUNCTION_7	SWITCH_1	IF_95	IF_96
0x4001fc7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fcc	        0x49894318	             mov qword [r11 + 0x18], rax	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fd0	          0x8b0424	                    mov eax, dword [rsp]	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fd3	          0x49892b	                    mov qword [r11], rbp	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fd6	        0x45896308	               mov dword [r11 + 8], r12d	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fda	        0x41894320	             mov dword [r11 + 0x20], eax	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fde	        0x4d895550	             mov qword [r13 + 0x50], r10	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fe2	      0xb802000000	                              mov eax, 2	       845	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001fe7	        0x41895d58	             mov dword [r13 + 0x58], ebx	       844	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001feb	      0xe9f0eaffff	                           jmp 0x4000ae0	       845	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001ff0	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	       845	inflate.c	FUNCTION_7	SWITCH_1	IF_45
0x4001ff5	            0x31db	                            xor ebx, ebx	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001ff7	          0x4531d2	                          xor r10d, r10d	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001ffa	      0xe9eafeffff	                           jmp 0x4001ee9	      1229	inflate.c	FUNCTION_7	SWITCH_1	IF_98
0x4001fff	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x4002004	    0x4d8dbd900000	                   lea r15, [r13 + 0x90]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x400200b	    0x4d8db5980000	                   lea r14, [r13 + 0x98]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4002012	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4002017	        0x4d8d4578	                    lea r8, [r13 + 0x78]	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x400201b	    0x41c745780900	               mov dword [r13 + 0x78], 9	      1022	inflate.c	FUNCTION_7	SWITCH_1
0x4002023	          0x4c89f9	                            mov rcx, r15	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4002026	          0x4c89f6	                            mov rsi, r14	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4002029	      0xbf01000000	                              mov edi, 1	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x400202e	    0x498985900000	             mov qword [r13 + 0x90], rax	      1020	inflate.c	FUNCTION_7	SWITCH_1
0x4002035	        0x49894568	             mov qword [r13 + 0x68], rax	      1021	inflate.c	FUNCTION_7	SWITCH_1
0x4002039	      0x4c89542448	             mov qword [rsp + 0x48], r10	      1021	inflate.c	FUNCTION_7	SWITCH_1
0x400203e	      0xe800000000	                          call 0x4002043	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4002043	            0x85c0	                           test eax, eax	      1025	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4002045	        0x89442424	             mov dword [rsp + 0x24], eax	      1023	inflate.c	FUNCTION_7	SWITCH_1	CALL_22
0x4002049	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      1025	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x400204e	     0xf84af000000	                            je 0x4002103	      1025	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4002054	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1026	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4002059	    0x48c740300000	               mov qword [rax + 0x30], 0	      1026	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4002061	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1027	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4002069	      0xb8513f0000	                         mov eax, 0x3f51	      1028	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x400206e	      0xe959e5ffff	                           jmp 0x40005cc	      1028	inflate.c	FUNCTION_7	SWITCH_1	IF_65
0x4002073	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4002077	      0x488d742450	                   lea rsi, [rsp + 0x50]	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x400207c	      0x4488542450	             mov byte [rsp + 0x50], r10b	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4002081	      0xba02000000	                              mov edx, 2	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4002086	        0x49c1ea08	                              shr r10, 8	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x400208a	      0x4488542451	             mov byte [rsp + 0x51], r10b	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x400208f	      0xe800000000	                          call 0x4002094	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4002094	        0x49894520	             mov qword [r13 + 0x20], rax	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x4002098	      0xe902feffff	                           jmp 0x4001e9f	       722	inflate.c	FUNCTION_7	SWITCH_1	IF_15
0x400209d	          0x83f90f	                            cmp ecx, 0xf	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40020a0	     0xf87e4f4ffff	                            ja 0x400158a	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40020a6	            0x39c1	                            cmp ecx, eax	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40020a8	     0xf87dcf4ffff	                            ja 0x400158a	       694	inflate.c	FUNCTION_7	SWITCH_1	IF_11
0x40020ae	      0xb801000000	                              mov eax, 1	       699	inflate.c	FUNCTION_7	SWITCH_1
0x40020b3	            0x31d2	                            xor edx, edx	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020b5	            0x31f6	                            xor esi, esi	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020b7	            0xd3e0	                             shl eax, cl	       699	inflate.c	FUNCTION_7	SWITCH_1
0x40020b9	            0x31ff	                            xor edi, edi	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020bb	      0x4c89542448	             mov qword [rsp + 0x48], r10	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020c0	        0x4189451c	             mov dword [r13 + 0x1c], eax	       699	inflate.c	FUNCTION_7	SWITCH_1
0x40020c4	      0xe800000000	                          call 0x40020c9	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020c9	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       702	inflate.c	FUNCTION_7	SWITCH_1
0x40020ce	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020d3	        0x49894520	             mov qword [r13 + 0x20], rax	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020d7	    0x4181e2000200	                         and r10d, 0x200	       702	inflate.c	FUNCTION_7	SWITCH_1
0x40020de	        0x48894360	             mov qword [rbx + 0x60], rax	       701	inflate.c	FUNCTION_7	SWITCH_1	CALL_4
0x40020e2	        0x4983fa01	                              cmp r10, 1	       702	inflate.c	FUNCTION_7	SWITCH_1
0x40020e6	            0x19c0	                            sbb eax, eax	       702	inflate.c	FUNCTION_7	SWITCH_1
0x40020e8	            0x31db	                            xor ebx, ebx	       703	inflate.c	FUNCTION_7	SWITCH_1
0x40020ea	          0x4531d2	                          xor r10d, r10d	       703	inflate.c	FUNCTION_7	SWITCH_1
0x40020ed	          0x83e002	                              and eax, 2	       702	inflate.c	FUNCTION_7	SWITCH_1
0x40020f0	       0x53d3f0000	                         add eax, 0x3f3d	       702	inflate.c	FUNCTION_7	SWITCH_1
0x40020f5	        0x41894508	                mov dword [r13 + 8], eax	       702	inflate.c	FUNCTION_7	SWITCH_1
0x40020f9	      0xe9cee4ffff	                           jmp 0x40005cc	       704	inflate.c	FUNCTION_7	SWITCH_1
0x40020fe	      0xe800000000	                          call 0x4002103	      1275	inflate.c	FUNCTION_7
0x4002103	    0x498b85900000	            mov rax, qword [r13 + 0x90] 	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x400210a	    0x418b95880000	            mov edx, dword [r13 + 0x88] 	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4002111	        0x4d8d457c	                    lea r8, [r13 + 0x7c]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4002115	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400211a	    0x41c7457c0600	               mov dword [r13 + 0x7c], 6	      1031	inflate.c	FUNCTION_7	SWITCH_1
0x4002122	          0x4c89f9	                            mov rcx, r15	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4002125	      0xbf02000000	                              mov edi, 2	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400212a	      0x4c89542448	             mov qword [rsp + 0x48], r10	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400212f	        0x49894570	             mov qword [r13 + 0x70], rax	      1030	inflate.c	FUNCTION_7	SWITCH_1
0x4002133	    0x418b85840000	            mov eax, dword [r13 + 0x84] 	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400213a	        0x498d3446	                  lea rsi, [r14 + rax*2]	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x400213e	      0xe800000000	                          call 0x4002143	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4002143	            0x85c0	                           test eax, eax	      1034	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4002145	        0x89442424	             mov dword [rsp + 0x24], eax	      1032	inflate.c	FUNCTION_7	SWITCH_1	CALL_23
0x4002149	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      1034	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x400214e	     0xf84cee6ffff	                            je 0x4000822	      1034	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4002154	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1035	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4002159	    0x48c740300000	               mov qword [rax + 0x30], 0	      1035	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4002161	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	      1036	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4002169	      0xb8513f0000	                         mov eax, 0x3f51	      1037	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x400216e	      0xe959e4ffff	                           jmp 0x40005cc	      1037	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4002173	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      1037	inflate.c	FUNCTION_7	SWITCH_1	IF_66
0x4002178	            0x31db	                            xor ebx, ebx	       898	inflate.c	FUNCTION_7	SWITCH_1
0x400217a	          0x4531d2	                          xor r10d, r10d	       898	inflate.c	FUNCTION_7	SWITCH_1
0x400217d	      0xe996e9ffff	                           jmp 0x4000b18	       898	inflate.c	FUNCTION_7	SWITCH_1
0x4002182	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       998	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4002187	    0x48c740300000	               mov qword [rax + 0x30], 0	       998	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x400218f	    0x41c74508513f	            mov dword [r13 + 8], 0x3f51 	       999	inflate.c	FUNCTION_7	SWITCH_1	WHILE_3	ELSE_4	IF_62
0x4002197	      0xb8513f0000	                         mov eax, 0x3f51	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x400219c	      0xe92be4ffff	                           jmp 0x40005cc	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x40021a1	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      1227	inflate.c	FUNCTION_7	SWITCH_1	IF_98	IF_99
0x40021a6	        0x49c1ea03	                              shr r10, 3	       872	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x40021aa	          0x83eb03	                              sub ebx, 3	       872	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
0x40021ad	      0xe966e9ffff	                           jmp 0x4000b18	       873	inflate.c	FUNCTION_7	SWITCH_1	SWITCH_2	IF_48
inflateSyncPoint	functions,0:CALL,1:IF,1:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	16
0x40025f0	      0xe84bdaffff	              call sym.inflateStateCheck	      1456	inflate.c	FUNCTION_12	CALL_1
0x40025f5	            0x85c0	                           test eax, eax	      1456	inflate.c	FUNCTION_12	CALL_1
0x40025f7	            0x7527	                           jne 0x4002620	      1456	inflate.c	FUNCTION_12	CALL_1
0x40025f9	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      1457	inflate.c	FUNCTION_12
0x40025fd	    0x817a08413f00	            cmp dword [rdx + 8], 0x3f41 	      1458	inflate.c	FUNCTION_12
0x4002604	            0x740a	                            je 0x4002610	      1458	inflate.c	FUNCTION_12
0x4002606	            0xf3c3	                                     ret	      1459	inflate.c	FUNCTION_12
0x4002608	     0xf1f84000000	                   nop dword [rax + rax]	      1459	inflate.c	FUNCTION_12
0x4002610	          0x8b5258	            mov edx, dword [rdx + 0x58] 	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002613	            0x31c0	                            xor eax, eax	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002615	            0x85d2	                           test edx, edx	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002617	           0xf94c0	                                 sete al	      1456	inflate.c	FUNCTION_12	CALL_1
0x400261a	              0xc3	                                     ret	      1456	inflate.c	FUNCTION_12	CALL_1
0x400261b	       0xf1f440000	                   nop dword [rax + rax]	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002620	      0xb8feffffff	                     mov eax, 0xfffffffe	      1456	inflate.c	FUNCTION_12	CALL_1
0x4002625	              0xc3	                                     ret	      1459	inflate.c	FUNCTION_12
inflateUndermine	functions,0:CALL,1:IF,1:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	9
0x4002820	      0xe81bd8ffff	              call sym.inflateStateCheck	      1514	inflate.c	FUNCTION_14	CALL_1
0x4002825	            0x85c0	                           test eax, eax	      1514	inflate.c	FUNCTION_14	CALL_1
0x4002827	      0xbafeffffff	                     mov edx, 0xfffffffe	      1514	inflate.c	FUNCTION_14	CALL_1
0x400282c	            0x7513	                           jne 0x4002841	      1514	inflate.c	FUNCTION_14	CALL_1
0x400282e	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      1521	inflate.c	FUNCTION_14
0x4002832	      0xbafdffffff	                     mov edx, 0xfffffffd	      1522	inflate.c	FUNCTION_14
0x4002837	    0xc780e81b0000	            mov dword [rax + 0x1be8], 1 	      1521	inflate.c	FUNCTION_14
0x4002841	            0x89d0	                            mov eax, edx	      1524	inflate.c	FUNCTION_14
0x4002843	              0xc3	                                     ret	      1524	inflate.c	FUNCTION_14
inflateGetHeader	functions,0:CALL,1:IF,2:DO,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	12
0x4002350	      0xe8ebdcffff	              call sym.inflateStateCheck	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002355	            0x85c0	                           test eax, eax	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002357	            0x7517	                           jne 0x4002370	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002359	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      1357	inflate.c	FUNCTION_10
0x400235d	        0xf6421002	               test byte [rdx + 0x10], 2	      1358	inflate.c	FUNCTION_10	IF_2
0x4002361	            0x740d	                            je 0x4002370	      1358	inflate.c	FUNCTION_10	IF_2
0x4002363	        0x48897230	             mov qword [rdx + 0x30], rsi	      1361	inflate.c	FUNCTION_10
0x4002367	    0xc74648000000	               mov dword [rsi + 0x48], 0	      1362	inflate.c	FUNCTION_10
0x400236e	              0xc3	                                     ret	      1363	inflate.c	FUNCTION_10
0x400236f	              0x90	                                     nop	      1363	inflate.c	FUNCTION_10
0x4002370	      0xb8feffffff	                     mov eax, 0xfffffffe	      1356	inflate.c	FUNCTION_10	CALL_1
0x4002375	              0xc3	                                     ret	      1364	inflate.c	FUNCTION_10
