relax_segment	FOR,5:DO,1:SWITCH,2:functions,0:CALL,54:WHILE,0:IF,27:ELSE,5	592
0x4002510	            0x4157	                                push r15	      2625	write.c	FUNCTION_36
0x4002512	            0x4156	                                push r14	      2625	write.c	FUNCTION_36
0x4002514	            0x4155	                                push r13	      2625	write.c	FUNCTION_36
0x4002516	            0x4154	                                push r12	      2625	write.c	FUNCTION_36
0x4002518	          0x4989fd	                            mov r13, rdi	      2625	write.c	FUNCTION_36
0x400251b	              0x55	                                push rbp	      2625	write.c	FUNCTION_36
0x400251c	              0x53	                                push rbx	      2625	write.c	FUNCTION_36
0x400251d	          0x4889f7	                            mov rdi, rsi	      2625	write.c	FUNCTION_36
0x4002520	        0x4883ec38	                           sub rsp, 0x38	      2625	write.c	FUNCTION_36
0x4002524	        0x48893424	                    mov qword [rsp], rsi	      2625	write.c	FUNCTION_36
0x4002528	            0x31f6	                            xor esi, esi	      2633	write.c	FUNCTION_36	CALL_1
0x400252a	        0x89542420	             mov dword [rsp + 0x20], edx	      2625	write.c	FUNCTION_36
0x400252e	      0xe800000000	                          call 0x4002533	      2633	write.c	FUNCTION_36	CALL_1
0x4002533	          0x4d85ed	                           test r13, r13	      2639	write.c	FUNCTION_36	FOR_1
0x4002536	     0xf8483080000	                            je 0x4002dbf	      2639	write.c	FUNCTION_36	FOR_1
0x400253c	          0x4c89eb	                            mov rbx, r13	      2639	write.c	FUNCTION_36	FOR_1
0x400253f	          0x4531f6	                          xor r14d, r14d	      2639	write.c	FUNCTION_36	FOR_1
0x4002542	            0x31ed	                            xor ebp, ebp	      2639	write.c	FUNCTION_36	FOR_1
0x4002544	          0x4531ff	                          xor r15d, r15d	      2639	write.c	FUNCTION_36	FOR_1
0x4002547	    0x660f1f840000	                    nop word [rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002550	          0x8b735c	            mov esi, dword [rbx + 0x5c] 	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002553	          0x48892b	                    mov qword [rbx], rbp	      2645	write.c	FUNCTION_36	FOR_1
0x4002556	        0x48036b10	             add rbp, qword [rbx + 0x10]	      2646	write.c	FUNCTION_36	FOR_1
0x400255a	        0x80635afe	             and byte [rbx + 0x5a], 0xfe	      2644	write.c	FUNCTION_36	FOR_1
0x400255e	      0x6644897358	             mov word [rbx + 0x58], r14w	      2643	write.c	FUNCTION_36	FOR_1
0x4002563	          0x83fe0d	                            cmp esi, 0xd	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002566	          0x4989ec	                            mov r12, rbp	      2646	write.c	FUNCTION_36	FOR_1
0x4002569	     0xf8739050000	                            ja 0x4002aa8	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x400256f	    0xff24f5000000	                       jmp qword [rsi*8]	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002576	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002580	        0x488d6d01	                      lea rbp, [rbp + 1]	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002584	    0x48c743200100	               mov qword [rbx + 0x20], 1	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x400258c	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002590	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002594	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002597	            0x75b7	                           jne 0x4002550	      2639	write.c	FUNCTION_36	FOR_1
0x4002599	          0x4c89f8	                            mov rax, r15	      2639	write.c	FUNCTION_36	FOR_1
0x400259c	        0x490fafc7	                           imul rax, r15	      2639	write.c	FUNCTION_36	FOR_1
0x40025a0	          0x4c39f8	                            cmp rax, r15	      2639	write.c	FUNCTION_36	FOR_1
0x40025a3	        0x4c0f43f8	                         cmovae r15, rax	      2639	write.c	FUNCTION_36	FOR_1
0x40025a7	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      2639	write.c	FUNCTION_36	FOR_1
0x40025ac	          0x4531e4	                          xor r12d, r12d	      2639	write.c	FUNCTION_36	FOR_1
0x40025af	    0xc74424240000	               mov dword [rsp + 0x24], 0	      2639	write.c	FUNCTION_36	FOR_1
0x40025b7	      0x4c896c2408	                mov qword [rsp + 8], r13	      2602	write.c	FUNCTION_35
0x40025bc	      0x488b442408	                mov rax, qword [rsp + 8]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025c1	          0x4885c0	                           test rax, rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025c4	     0xf8403080000	                            je 0x4002dcd	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025ca	          0x488b30	                    mov rsi, qword [rax]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025cd	          0x4989c6	                            mov r14, rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025d0	            0x31db	                            xor ebx, ebx	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025d2	            0x31ed	                            xor ebp, ebp	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025d4	          0x4989f7	                            mov r15, rsi	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025d7	    0x660f1f840000	                    nop word [rax + rax]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40025e0	      0x410fb6465a	           movzx eax, byte [r14 + 0x5a] 	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40025e5	          0x4d89fd	                            mov r13, r15	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x40025e8	          0x4d893e	                    mov qword [r14], r15	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x40025eb	        0x4d8b4628	              mov r8, qword [r14 + 0x28]	      2791	write.c	FUNCTION_36	DO_1	FOR_2
0x40025ef	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      2792	write.c	FUNCTION_36	DO_1	FOR_2
0x40025f3	            0x89c2	                            mov edx, eax	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40025f5	          0x83e0fe	                     and eax, 0xfffffffe	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40025f8	          0x83e201	                              and edx, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40025fb	          0x83f201	                              xor edx, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40025fe	             0x9d0	                             or eax, edx	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002600	        0x4188465a	               mov byte [r14 + 0x5a], al	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002604	        0x418b465c	            mov eax, dword [r14 + 0x5c] 	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002608	          0x83f80d	                            cmp eax, 0xd	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400260b	     0xf87c7060000	                            ja 0x4002cd8	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002611	            0x89c2	                            mov edx, eax	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002613	    0xff24d5000000	                       jmp qword [rdx*8]	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400261a	    0x660f1f440000	                    nop word [rax + rax]	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002620	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4002624	          0x4885ff	                           test rdi, rdi	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4002627	            0x7405	                            je 0x400262e	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4002629	      0xe800000000	                          call 0x400262e	      2694	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_5
0x400262e	        0x488b3424	                    mov rsi, qword [rsp]	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002632	          0x4889df	                            mov rdi, rbx	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002635	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002639	      0xe800000000	                          call 0x400263e	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x400263e	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002642	          0x4863e8	                         movsxd rbp, eax	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002645	          0x4c01e5	                            add rbp, r12	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002648	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x400264b	     0xf85fffeffff	                           jne 0x4002550	      2639	write.c	FUNCTION_36	FOR_1
0x4002651	      0xe943ffffff	                           jmp 0x4002599	      2639	write.c	FUNCTION_36	FOR_1
0x4002656	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002660	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002664	        0x4183c601	                             add r14d, 1	      2682	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002668	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x400266c	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x400266f	     0xf85dbfeffff	                           jne 0x4002550	      2639	write.c	FUNCTION_36	FOR_1
0x4002675	      0xe91fffffff	                           jmp 0x4002599	      2639	write.c	FUNCTION_36	FOR_1
0x400267a	    0x660f1f440000	                    nop word [rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002680	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2602	write.c	FUNCTION_35
0x4002684	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2602	write.c	FUNCTION_35
0x400268b	          0x48d3e0	                             shl rax, cl	      2602	write.c	FUNCTION_35
0x400268e	          0x4889c5	                            mov rbp, rax	      2610	write.c	FUNCTION_35
0x4002691	          0x48f7d5	                                 not rbp	      2610	write.c	FUNCTION_35
0x4002694	          0x4c01e5	                            add rbp, r12	      2610	write.c	FUNCTION_35
0x4002697	          0x4821c5	                            and rbp, rax	      2610	write.c	FUNCTION_35
0x400269a	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x400269d	          0x4c29e5	                            sub rbp, r12	      2610	write.c	FUNCTION_35
0x40026a0	            0x85c0	                           test eax, eax	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x40026a2	     0xf84a0000000	                            je 0x4002748	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x40026a8	          0x4839e8	                            cmp rax, rbp	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x40026ab	     0xf8397000000	                           jae 0x4002748	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x40026b1	            0x31ed	                            xor ebp, ebp	      2661	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x40026b3	          0x4c01e5	                            add rbp, r12	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40026b6	        0x4183c601	                             add r14d, 1	      2676	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40026ba	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x40026be	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x40026c2	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x40026c5	     0xf8585feffff	                           jne 0x4002550	      2639	write.c	FUNCTION_36	FOR_1
0x40026cb	      0xe9c9feffff	                           jmp 0x4002599	      2639	write.c	FUNCTION_36	FOR_1
0x40026d0	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40026d4	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x40026d8	      0x480faf6b18	            imul rbp, qword [rbx + 0x18]	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40026dd	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x40026e1	          0x4c01e5	                            add rbp, r12	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40026e4	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x40026e7	     0xf8563feffff	                           jne 0x4002550	      2639	write.c	FUNCTION_36	FOR_1
0x40026ed	      0xe9a7feffff	                           jmp 0x4002599	      2639	write.c	FUNCTION_36	FOR_1
0x40026f2	    0x660f1f440000	                    nop word [rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x40026f8	          0x4889df	                            mov rdi, rbx	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x40026fb	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x40026ff	      0xe800000000	                          call 0x4002704	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002704	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002708	          0x4863e8	                         movsxd rbp, eax	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x400270b	          0x4c01e5	                            add rbp, r12	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x400270e	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002711	     0xf8539feffff	                           jne 0x4002550	      2639	write.c	FUNCTION_36	FOR_1
0x4002717	      0xe97dfeffff	                           jmp 0x4002599	      2639	write.c	FUNCTION_36	FOR_1
0x400271c	         0xf1f4000	                         nop dword [rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002720	          0x4889df	                            mov rdi, rbx	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002723	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002727	      0xe800000000	                          call 0x400272c	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x400272c	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002730	          0x4863e8	                         movsxd rbp, eax	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002733	          0x4c01e5	                            add rbp, r12	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002736	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002739	     0xf8511feffff	                           jne 0x4002550	      2639	write.c	FUNCTION_36	FOR_1
0x400273f	      0xe955feffff	                           jmp 0x4002599	      2639	write.c	FUNCTION_36	FOR_1
0x4002744	         0xf1f4000	                         nop dword [rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002748	        0x4c8b4b18	              mov r9, qword [rbx + 0x18]	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x400274c	            0x31d2	                            xor edx, edx	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x400274e	          0x4889e8	                            mov rax, rbp	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002751	          0x49f7f1	                                  div r9	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002754	          0x4885d2	                           test rdx, rdx	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002757	     0xf8456ffffff	                            je 0x40026b3	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x400275d	          0x4889e9	                            mov rcx, rbp	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002760	    0x41b805000000	                              mov r8d, 5	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002766	      0xba00000000	                              mov edx, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x400276b	      0xbe00000000	                              mov esi, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002770	            0x31ff	                            xor edi, edi	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002772	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002777	      0xe800000000	                          call 0x400277c	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x400277c	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002781	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002784	          0x4889c2	                            mov rdx, rax	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002787	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x400278b	          0x4889e9	                            mov rcx, rbp	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x400278e	            0x31c0	                            xor eax, eax	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002790	        0x4183c601	                             add r14d, 1	      2676	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002794	          0x4d89c8	                              mov r8, r9	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002797	      0xe800000000	                          call 0x400279c	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x400279c	          0x4889e8	                            mov rax, rbp	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x400279f	            0x31d2	                            xor edx, edx	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40027a1	        0x48f77318	                  div qword [rbx + 0x18]	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40027a5	          0x4829d5	                            sub rbp, rdx	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40027a8	          0x4c01e5	                            add rbp, r12	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40027ab	      0xe90affffff	                           jmp 0x40026ba	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40027b0	          0x4989f0	                             mov r8, rsi	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40027b3	      0xba05000000	                              mov edx, 5	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027b8	      0xbe00000000	                              mov esi, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027bd	            0x31ff	                            xor edi, edi	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027bf	        0x4c890424	                     mov qword [rsp], r8	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027c3	      0xe800000000	                          call 0x40027c8	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027c8	        0x4c8b0424	                     mov r8, qword [rsp]	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027cc	          0x4889c7	                            mov rdi, rax	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027cf	      0xb900000000	                              mov ecx, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027d4	      0xbaa00a0000	                          mov edx, 0xaa0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027d9	            0x31c0	                            xor eax, eax	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027db	          0x4c89c6	                             mov rsi, r8	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027de	      0xe800000000	                          call 0x40027e3	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x40027e3	      0x837c242001	               cmp dword [rsp + 0x20], 1	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x40027e8	     0xf8e41060000	                           jle 0x4002e2f	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x40027ee	      0xba05000000	                              mov edx, 5	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x40027f3	      0xbe00000000	                              mov esi, 0	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x40027f8	            0x31ff	                            xor edi, edi	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x40027fa	      0xe800000000	                          call 0x40027ff	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x40027ff	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002803	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002807	          0x4889c2	                            mov rdx, rax	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x400280a	            0x31c0	                            xor eax, eax	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x400280c	      0xe800000000	                          call 0x4002811	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002811	    0x49c746280000	               mov qword [r14 + 0x28], 0	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002819	     0xf1f80000000	                         nop dword [rax]	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002820	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002824	         0xf1f4000	                         nop dword [rax]	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002828	          0x4885d2	                           test rdx, rdx	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x400282b	     0xf84cc040000	                            je 0x4002cfd	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002831	          0x488b32	                    mov rsi, qword [rdx]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002834	          0x4989d6	                            mov r14, rdx	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002837	      0x4c8d7c3500	                    lea r15, [rbp + rsi]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x400283c	      0xe99ffdffff	                           jmp 0x40025e0	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002841	     0xf1f80000000	                         nop dword [rax]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002848	          0x4c89f7	                            mov rdi, r14	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x400284b	      0xe800000000	                          call 0x4002850	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4002850	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4002854	          0x4c63e8	                         movsxd r13, eax	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4002857	          0x4d85ed	                           test r13, r13	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x400285a	            0x74cc	                            je 0x4002828	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x400285c	        0x418b465c	            mov eax, dword [r14 + 0x5c] 	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002860	          0x4c01ed	                            add rbp, r13	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002863	          0x83f80b	                            cmp eax, 0xb	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x4002866	     0xf8427020000	                            je 0x4002a93	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x400286c	          0x83f802	                              cmp eax, 2	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x400286f	     0xf840b020000	                            je 0x4002a80	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002875	          0x4531e4	                          xor r12d, r12d	      3074	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_4
0x4002878	      0xbb01000000	                              mov ebx, 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x400287d	            0xeba9	                           jmp 0x4002828	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x400287f	              0x90	                                     nop	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002880	          0x4c89f7	                            mov rdi, r14	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4002883	      0xe800000000	                          call 0x4002888	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4002888	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x400288c	          0x4c63e8	                         movsxd r13, eax	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x400288f	            0xebc6	                           jmp 0x4002857	      3053	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002891	     0xf1f80000000	                         nop dword [rax]	      3053	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002898	          0x4c89c7	                             mov rdi, r8	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x400289b	      0xe800000000	                          call 0x40028a0	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40028a0	        0x418b7660	            mov esi, dword [r14 + 0x60] 	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40028a4	          0x4889c7	                            mov rdi, rax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40028a7	      0xe800000000	                          call 0x40028ac	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40028ac	            0x89c0	                            mov eax, eax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40028ae	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40028b2	          0x4989c5	                            mov r13, rax	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40028b5	        0x4d2b6e20	             sub r13, qword [r14 + 0x20]	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40028b9	        0x49894620	             mov qword [r14 + 0x20], rax	      3047	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40028bd	            0xeb98	                           jmp 0x4002857	      3049	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40028bf	              0x90	                                     nop	      3049	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40028c0	          0x4d85c0	                             test r8, r8	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x40028c3	     0xf8457ffffff	                            je 0x4002820	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x40028c9	          0x4c89c7	                             mov rdi, r8	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40028cc	      0x4889742418	             mov qword [rsp + 0x18], rsi	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40028d1	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40028d6	      0xe800000000	                          call 0x40028db	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40028db	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40028e0	          0x4989c5	                            mov r13, rax	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40028e3	          0x4c89c7	                             mov rdi, r8	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40028e6	      0xe800000000	                          call 0x40028eb	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40028eb	    0x483d00000000	                              cmp rax, 0	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40028f1	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40028f6	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40028fb	     0xf8441040000	                            je 0x4002d42	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002901	      0xba05000000	                              mov edx, 5	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002906	      0xbe00000000	                              mov esi, 0	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x400290b	            0x31ff	                            xor edi, edi	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x400290d	      0xe800000000	                          call 0x4002912	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002912	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002916	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x400291a	          0x4889c2	                            mov rdx, rax	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x400291d	            0x31c0	                            xor eax, eax	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x400291f	      0xe800000000	                          call 0x4002924	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002924	    0x49c746280000	               mov qword [r14 + 0x28], 0	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x400292c	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002930	      0xe9f3feffff	                           jmp 0x4002828	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002935	           0xf1f00	                         nop dword [rax]	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002938	        0x488b3c24	                    mov rdi, qword [rsp]	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400293c	          0x4889ea	                            mov rdx, rbp	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400293f	          0x4c89f6	                            mov rsi, r14	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002942	      0xe800000000	                          call 0x4002947	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002947	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400294b	          0x4989c5	                            mov r13, rax	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400294e	      0xe904ffffff	                           jmp 0x4002857	      3037	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002953	       0xf1f440000	                   nop dword [rax + rax]	      3037	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002958	          0x4d85c0	                             test r8, r8	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x400295b	            0x743c	                            je 0x4002999	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x400295d	          0x4c89c7	                             mov rdi, r8	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002960	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002965	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400296a	      0xe800000000	                          call 0x400296f	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400296f	      0x4883782800	               cmp qword [rax + 0x28], 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002974	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002979	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400297e	     0xf85bc040000	                           jne 0x4002e40	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002984	          0x4c89c7	                             mov rdi, r8	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002987	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x400298c	      0xe800000000	                          call 0x4002991	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002991	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002996	          0x4801c1	                            add rcx, rax	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002999	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x400299d	          0x4885d2	                           test rdx, rdx	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x40029a0	     0xf84ae040000	                            je 0x4002e54	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x40029a6	          0x4c89e8	                            mov rax, r13	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40029a9	        0x49034610	             add rax, qword [r14 + 0x10]	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40029ad	          0x488b32	                    mov rsi, qword [rdx]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40029b0	      0x4c8d7c3500	                    lea r15, [rbp + rsi]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40029b5	          0x4839c1	                            cmp rcx, rax	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40029b8	     0xf83f2000000	                           jae 0x4002ab0	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40029be	      0x837c242001	               cmp dword [rsp + 0x20], 1	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x40029c3	     0xf8e27030000	                           jle 0x4002cf0	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x40029c9	      0xba05000000	                              mov edx, 5	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x40029ce	      0xbe00000000	                              mov esi, 0	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x40029d3	            0x31ff	                            xor edi, edi	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x40029d5	      0xe800000000	                          call 0x40029da	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x40029da	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40029de	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40029e2	          0x4889c2	                            mov rdx, rax	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40029e5	          0x4d29ef	                            sub r15, r13	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40029e8	            0x31c0	                            xor eax, eax	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40029ea	      0xe800000000	                          call 0x40029ef	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x40029ef	    0x41c7465c0200	               mov dword [r14 + 0x5c], 2	      2982	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40029f7	    0x41c746600000	               mov dword [r14 + 0x60], 0	      2983	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40029ff	    0x49c746200000	               mov qword [r14 + 0x20], 0	      2984	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002a07	        0x4d897e10	             mov qword [r14 + 0x10], r15	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002a0b	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002a0f	      0xe914feffff	                           jmp 0x4002828	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002a14	         0xf1f4000	                         nop dword [rax]	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002a18	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4002a1c	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      2602	write.c	FUNCTION_35
0x4002a23	          0x48d3e7	                             shl rdi, cl	      2602	write.c	FUNCTION_35
0x4002a26	          0x4889f9	                            mov rcx, rdi	      2602	write.c	FUNCTION_35
0x4002a29	          0x48f7d7	                                 not rdi	      2602	write.c	FUNCTION_35
0x4002a2c	        0x4c8d0432	                     lea r8, [rdx + rsi]	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4002a30	          0x4c01fa	                            add rdx, r15	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x4002a33	        0x498d3438	                     lea rsi, [r8 + rdi]	      2610	write.c	FUNCTION_35
0x4002a37	          0x4801d7	                            add rdi, rdx	      2610	write.c	FUNCTION_35
0x4002a3a	          0x4821ce	                            and rsi, rcx	      2610	write.c	FUNCTION_35
0x4002a3d	          0x4821f9	                            and rcx, rdi	      2610	write.c	FUNCTION_35
0x4002a40	          0x4829d1	                            sub rcx, rdx	      2610	write.c	FUNCTION_35
0x4002a43	        0x418b5660	            mov edx, dword [r14 + 0x60] 	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002a47	          0x4c29c6	                             sub rsi, r8	      2610	write.c	FUNCTION_35
0x4002a4a	            0x85d2	                           test edx, edx	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002a4c	            0x7415	                            je 0x4002a63	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002a4e	          0x4839f2	                            cmp rdx, rsi	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002a51	     0xf8289020000	                            jb 0x4002ce0	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002a57	          0x4839ca	                            cmp rdx, rcx	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002a5a	      0xba00000000	                              mov edx, 0	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002a5f	        0x480f42ca	                          cmovb rcx, rdx	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002a63	          0x4989cd	                            mov r13, rcx	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002a66	          0x4929f5	                            sub r13, rsi	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002a69	     0xf8889000000	                            js 0x4002af8	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002a6f	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002a73	      0xe9dffdffff	                           jmp 0x4002857	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002a78	     0xf1f84000000	                   nop dword [rax + rax]	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002a80	        0x41f6c410	                         test r12b, 0x10	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002a84	     0xf84ebfdffff	                            je 0x4002875	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002a8a	          0x4885ed	                           test rbp, rbp	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002a8d	     0xf85e2fdffff	                           jne 0x4002875	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002a93	        0x4183c410	                          add r12d, 0x10	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002a97	      0xbb01000000	                              mov ebx, 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002a9c	      0xe987fdffff	                           jmp 0x4002828	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002aa1	     0xf1f80000000	                         nop dword [rax]	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002aa8	          0x4189f0	                            mov r8d, esi	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002aab	      0xe903fdffff	                           jmp 0x40027b3	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002ab0	          0x4c29f9	                            sub rcx, r15	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ab3	          0x4989cd	                            mov r13, rcx	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ab6	     0xf85a0fdffff	                           jne 0x400285c	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002abc	          0x4989d6	                            mov r14, rdx	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002abf	      0xe91cfbffff	                           jmp 0x40025e0	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ac4	         0xf1f4000	                         nop dword [rax]	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ac8	          0x4889d5	                            mov rbp, rdx	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002acb	      0xba05000000	                              mov edx, 5	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ad0	      0xbe00000000	                              mov esi, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ad5	            0x31ff	                            xor edi, edi	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ad7	      0xe800000000	                          call 0x4002adc	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002adc	      0xb900000000	                              mov ecx, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ae1	          0x4889c7	                            mov rdi, rax	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ae4	      0xbaf40b0000	                          mov edx, 0xbf4	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ae9	          0x4889ee	                            mov rsi, rbp	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002aec	            0x31c0	                            xor eax, eax	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002aee	      0xe800000000	                          call 0x4002af3	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002af3	       0xf1f440000	                   nop dword [rax + rax]	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002af8	        0x41f6c410	                         test r12b, 0x10	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002afc	     0xf84c6010000	                            je 0x4002cc8	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b02	          0x4489e2	                           mov edx, r12d	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b05	          0x83e20f	                            and edx, 0xf	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b08	          0x83fa01	                              cmp edx, 1	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b0b	     0xf8eb7010000	                           jle 0x4002cc8	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b11	        0x488b0424	                    mov rax, qword [rsp]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b15	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b1a	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b21	          0x488b10	                    mov rdx, qword [rax]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b24	        0x488d7a30	                   lea rdi, [rdx + 0x30]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b28	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002b2d	      0xe800000000	                          call 0x4002b32	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4002b32	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002b37	          0x4989c0	                             mov r8, rax	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4002b3a	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002b3e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b43	        0x48034248	             add rax, qword [rdx + 0x48]	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002b47	        0x483b4240	            cmp rax, qword [rdx + 0x40] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b4b	        0x48894248	             mov qword [rdx + 0x48], rax	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002b4f	     0xf84ce020000	                            je 0x4002e23	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b55	        0x488b7260	            mov rsi, qword [rdx + 0x60] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b59	        0x488b7a50	            mov rdi, qword [rdx + 0x50] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b5d	          0x4801f0	                            add rax, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b60	          0x48f7d6	                                 not rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b63	          0x4989fa	                            mov r10, rdi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b66	          0x4821f0	                            and rax, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b69	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b6d	          0x4989c1	                             mov r9, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b70	        0x48894248	             mov qword [rdx + 0x48], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b74	          0x4929f1	                             sub r9, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b77	          0x4929f2	                            sub r10, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b7a	          0x4d39d1	                             cmp r9, r10	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b7d	            0x7607	                           jbe 0x4002b86	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b7f	        0x48897a48	             mov qword [rdx + 0x48], rdi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b83	          0x4889f8	                            mov rax, rdi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b86	        0x48894240	             mov qword [rdx + 0x40], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002b8a	          0x498b06	                    mov rax, qword [r14]	        53	string3.h	FUNCTION_41	CALL_3
0x4002b8d	        0x498d787c	                    lea rdi, [r8 + 0x7c]	        53	string3.h	FUNCTION_41	CALL_3
0x4002b91	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        53	string3.h	FUNCTION_41	CALL_3
0x4002b96	          0x498900	                     mov qword [r8], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002b99	        0x498b4608	                mov rax, qword [r14 + 8]	        53	string3.h	FUNCTION_41	CALL_3
0x4002b9d	        0x49894008	                 mov qword [r8 + 8], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002ba1	        0x498b4610	            mov rax, qword [r14 + 0x10] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002ba5	        0x49894010	              mov qword [r8 + 0x10], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002ba9	        0x498b4618	            mov rax, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bad	        0x49894018	              mov qword [r8 + 0x18], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bb1	        0x498b4620	            mov rax, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bb5	        0x49894020	              mov qword [r8 + 0x20], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bb9	        0x498b4628	            mov rax, qword [r14 + 0x28] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bbd	        0x49894028	              mov qword [r8 + 0x28], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bc1	        0x498b4630	            mov rax, qword [r14 + 0x30] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bc5	        0x49894030	              mov qword [r8 + 0x30], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bc9	        0x498b4638	            mov rax, qword [r14 + 0x38] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bcd	        0x49894038	              mov qword [r8 + 0x38], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bd1	        0x498b4640	            mov rax, qword [r14 + 0x40] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bd5	        0x49894040	              mov qword [r8 + 0x40], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bd9	        0x498b4648	            mov rax, qword [r14 + 0x48] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bdd	        0x49894048	              mov qword [r8 + 0x48], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002be1	        0x498b4650	            mov rax, qword [r14 + 0x50] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002be5	        0x49894050	              mov qword [r8 + 0x50], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002be9	        0x498b4658	            mov rax, qword [r14 + 0x58] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bed	        0x49894058	              mov qword [r8 + 0x58], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bf1	        0x498b4660	            mov rax, qword [r14 + 0x60] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bf5	        0x49894060	              mov qword [r8 + 0x60], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002bf9	        0x498b4668	            mov rax, qword [r14 + 0x68] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002bfd	        0x49894068	              mov qword [r8 + 0x68], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002c01	        0x498b4670	            mov rax, qword [r14 + 0x70] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002c05	        0x49894070	              mov qword [r8 + 0x70], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002c09	        0x418b4678	            mov eax, dword [r14 + 0x78] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002c0d	      0x4c89442410	              mov qword [rsp + 0x10], r8	        53	string3.h	FUNCTION_41	CALL_3
0x4002c12	        0x41894078	              mov dword [r8 + 0x78], eax	        53	string3.h	FUNCTION_41	CALL_3
0x4002c16	        0x498b4610	            mov rax, qword [r14 + 0x10] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002c1a	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002c1e	      0x498d74067c	            lea rsi, [r14 + rax + 0x7c] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002c23	      0xe800000000	                          call 0x4002c28	        53	string3.h	FUNCTION_41	CALL_3
0x4002c28	          0x4c89fe	                            mov rsi, r15	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c2b	        0x49037610	             add rsi, qword [r14 + 0x10]	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c2f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c34	      0xbf01000000	                              mov edi, 1	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c39	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2908	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c3e	          0x4889f8	                            mov rax, rdi	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c41	          0x4801ce	                            add rsi, rcx	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c44	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c48	    0x41c7405c0100	                mov dword [r8 + 0x5c], 1	      2908	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c50	          0x498930	                     mov qword [r8], rsi	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c53	    0x49c740100000	                mov qword [r8 + 0x10], 0	      2910	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c5b	          0x48d3e0	                             shl rax, cl	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c5e	            0x4899	                                     cqo	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c60	        0x49f77e18	                 idiv qword [r14 + 0x18]	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c64	        0x49894020	              mov qword [r8 + 0x20], rax	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c68	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c6c	      0x490faf4018	             imul rax, qword [r8 + 0x18]	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c71	          0x48d3e7	                             shl rdi, cl	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c74	          0x4889fa	                            mov rdx, rdi	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c77	          0x4839f8	                            cmp rax, rdi	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c7a	            0x740c	                            je 0x4002c88	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c7c	        0x49897820	              mov qword [r8 + 0x20], rdi	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c80	    0x49c740180100	                mov qword [r8 + 0x18], 1	      2917	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4002c88	          0x4901d5	                            add r13, rdx	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c8b	          0x4889f1	                            mov rcx, rsi	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c8e	      0x498d442d00	                    lea rax, [r13 + rbp]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c93	          0x4829c1	                            sub rcx, rax	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c96	          0x498908	                     mov qword [r8], rcx	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c99	      0x410fb6485a	            movzx ecx, byte [r8 + 0x5a] 	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002c9e	            0x89c8	                            mov eax, ecx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002ca0	          0x83e001	                              and eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002ca3	          0x83f001	                              xor eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002ca6	            0x89c2	                            mov edx, eax	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002ca8	            0x89c8	                            mov eax, ecx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002caa	          0x83e0fe	                     and eax, 0xfffffffe	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002cad	             0x9d0	                             or eax, edx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002caf	          0x4c89c2	                             mov rdx, r8	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002cb2	        0x4188405a	                mov byte [r8 + 0x5a], al	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002cb6	        0x4d894638	              mov qword [r14 + 0x38], r8	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002cba	          0x4d85ed	                           test r13, r13	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002cbd	     0xf8599fbffff	                           jne 0x400285c	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002cc3	      0xe969fbffff	                           jmp 0x4002831	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002cc8	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ccc	          0x4c01ed	                            add rbp, r13	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ccf	      0xe998fbffff	                           jmp 0x400286c	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002cd4	         0xf1f4000	                         nop dword [rax]	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002cd8	            0x89c5	                            mov ebp, eax	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002cda	      0xe9ecfdffff	                           jmp 0x4002acb	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002cdf	              0x90	                                     nop	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ce0	          0x4839ca	                            cmp rdx, rcx	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002ce3	     0xf8237fbffff	                            jb 0x4002820	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002ce9	            0x31f6	                            xor esi, esi	      2882	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002ceb	      0xe973fdffff	                           jmp 0x4002a63	      2882	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002cf0	    0xc74424240100	               mov dword [rsp + 0x24], 1	      2973	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x4002cf8	      0xe92bfbffff	                           jmp 0x4002828	      2973	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x4002cfd	          0x4885ed	                           test rbp, rbp	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x4002d00	     0xf8499000000	                            je 0x4002d9f	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x4002d06	          0x4531e4	                          xor r12d, r12d	      3083	write.c	FUNCTION_36	DO_1	ELSE_5
0x4002d09	            0x85db	                           test ebx, ebx	      3086	write.c	FUNCTION_36
0x4002d0b	     0xf84cf000000	                            je 0x4002de0	      3086	write.c	FUNCTION_36
0x4002d11	    0x48836c242801	               sub qword [rsp + 0x28], 1	      3086	write.c	FUNCTION_36
0x4002d17	     0xf859ff8ffff	                           jne 0x40025bc	      3086	write.c	FUNCTION_36
0x4002d1d	        0x488b0424	                    mov rax, qword [rsp]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d21	      0xbe00000000	                              mov esi, 0	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d26	            0x31ff	                            xor edi, edi	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d28	      0xba05000000	                              mov edx, 5	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d2d	          0x488b18	                    mov rbx, qword [rax]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d30	      0xe800000000	                          call 0x4002d35	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d35	          0x4889c7	                            mov rdi, rax	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d38	            0x31c0	                            xor eax, eax	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d3a	          0x4889de	                            mov rsi, rbx	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d3d	      0xe800000000	                          call 0x4002d42	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002d42	          0x4c89c7	                             mov rdi, r8	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d45	      0x4889742418	             mov qword [rsp + 0x18], rsi	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d4a	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d4f	      0xe800000000	                          call 0x4002d54	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d54	            0x85c0	                           test eax, eax	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d56	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d5b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d60	     0xf859bfbffff	                           jne 0x4002901	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4002d66	          0x4c89c7	                             mov rdi, r8	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4002d69	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4002d6e	      0xe800000000	                          call 0x4002d73	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4002d73	            0x85c0	                           test eax, eax	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4002d75	     0xf8486fbffff	                            je 0x4002901	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4002d7b	          0x4d85ed	                           test r13, r13	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002d7e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002d83	     0xf885afaffff	                            js 0x40027e3	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002d89	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002d8d	          0x4889f0	                            mov rax, rsi	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002d90	          0x482b02	                    sub rax, qword [rdx]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002d93	        0x49034610	             add rax, qword [r14 + 0x10]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002d97	          0x4901c5	                            add r13, rax	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002d9a	      0xe91bffffff	                           jmp 0x4002cba	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002d9f	        0x41f6c410	                         test r12b, 0x10	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4002da3	     0xf855dffffff	                           jne 0x4002d06	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4002da9	    0x41f7c4f0ffff	                   test r12d, 0xfffffff0	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4002db0	     0xf8450ffffff	                            je 0x4002d06	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4002db6	        0x4183c401	                             add r12d, 1	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x4002dba	      0xe94affffff	                           jmp 0x4002d09	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x4002dbf	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2639	write.c	FUNCTION_36	FOR_1
0x4002dc8	      0xe9dff7ffff	                           jmp 0x40025ac	      2639	write.c	FUNCTION_36	FOR_1
0x4002dcd	        0x41f6c410	                         test r12b, 0x10	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4002dd1	            0x753d	                           jne 0x4002e10	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4002dd3	    0x41f7c4f0ffff	                   test r12d, 0xfffffff0	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4002dda	            0x7434	                            je 0x4002e10	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x4002ddc	            0x31db	                            xor ebx, ebx	      2779	write.c	FUNCTION_36	DO_1
0x4002dde	            0xebd6	                           jmp 0x4002db6	      2779	write.c	FUNCTION_36	DO_1
0x4002de0	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2779	write.c	FUNCTION_36	DO_1
0x4002de5	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2779	write.c	FUNCTION_36	DO_1
0x4002de9	          0x4d85ed	                           test r13, r13	      3093	write.c	FUNCTION_36	FOR_5
0x4002dec	            0x7422	                            je 0x4002e10	      3093	write.c	FUNCTION_36	FOR_5
0x4002dee	            0x6690	                                     nop	      3093	write.c	FUNCTION_36	FOR_5
0x4002df0	        0x498b4500	                    mov rax, qword [r13]	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x4002df4	        0x49394508	                cmp qword [r13 + 8], rax	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x4002df8	            0x7409	                            je 0x4002e03	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x4002dfa	        0x49894508	                mov qword [r13 + 8], rax	      3096	write.c	FUNCTION_36	FOR_5	IF_27
0x4002dfe	      0xba01000000	                              mov edx, 1	      3097	write.c	FUNCTION_36	FOR_5	IF_27
0x4002e03	        0x4d8b6d38	            mov r13, qword [r13 + 0x38] 	      3093	write.c	FUNCTION_36	FOR_5
0x4002e07	          0x4d85ed	                           test r13, r13	      3093	write.c	FUNCTION_36	FOR_5
0x4002e0a	            0x75e4	                           jne 0x4002df0	      3093	write.c	FUNCTION_36	FOR_5
0x4002e0c	        0x89542424	             mov dword [rsp + 0x24], edx	      3093	write.c	FUNCTION_36	FOR_5
0x4002e10	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3100	write.c	FUNCTION_36
0x4002e14	        0x4883c438	                           add rsp, 0x38	      3100	write.c	FUNCTION_36
0x4002e18	              0x5b	                                 pop rbx	      3100	write.c	FUNCTION_36
0x4002e19	              0x5d	                                 pop rbp	      3100	write.c	FUNCTION_36
0x4002e1a	            0x415c	                                 pop r12	      3100	write.c	FUNCTION_36
0x4002e1c	            0x415d	                                 pop r13	      3100	write.c	FUNCTION_36
0x4002e1e	            0x415e	                                 pop r14	      3100	write.c	FUNCTION_36
0x4002e20	            0x415f	                                 pop r15	      3100	write.c	FUNCTION_36
0x4002e22	              0xc3	                                     ret	      3100	write.c	FUNCTION_36
0x4002e23	    0x808a80000000	                 or byte [rdx + 0x80], 2	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002e2a	      0xe926fdffff	                           jmp 0x4002b55	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002e2f	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002e33	    0xc74424240100	               mov dword [rsp + 0x24], 1	      3013	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4002e3b	      0xe9e8f9ffff	                           jmp 0x4002828	      3013	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4002e40	      0xba00000000	                              mov edx, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002e45	      0xbe800b0000	                          mov esi, 0xb80	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002e4a	      0xbf00000000	                              mov edi, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002e4f	      0xe800000000	                          call 0x4002e54	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002e54	      0xba00000000	                              mov edx, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002e59	      0xbe840b0000	                          mov esi, 0xb84	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002e5e	      0xbf00000000	                              mov edi, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002e63	      0xe800000000	                          call 0x4002e68	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
append	FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:WHILE,0:IF,1:ELSE,0	16
0x4002310	          0x4885d2	                           test rdx, rdx	       342	write.c	FUNCTION_6	IF_1
0x4002313	            0x750b	                           jne 0x4002320	       342	write.c	FUNCTION_6	IF_1
0x4002315	              0xc3	                                     ret	       347	write.c	FUNCTION_6
0x4002316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       347	write.c	FUNCTION_6
0x4002320	              0x55	                                push rbp	       340	write.c	FUNCTION_6
0x4002321	              0x53	                                push rbx	       340	write.c	FUNCTION_6
0x4002322	          0x4889fd	                            mov rbp, rdi	       340	write.c	FUNCTION_6
0x4002325	          0x4889d3	                            mov rbx, rdx	       340	write.c	FUNCTION_6
0x4002328	        0x4883ec08	                              sub rsp, 8	       340	write.c	FUNCTION_6
0x400232c	          0x488b3f	                    mov rdi, qword [rdi]	        53	string3.h	FUNCTION_41	CALL_3
0x400232f	      0xe800000000	                          call 0x4002334	        53	string3.h	FUNCTION_41	CALL_3
0x4002334	        0x48015d00	                    add qword [rbp], rbx	       346	write.c	FUNCTION_6
0x4002338	        0x4883c408	                              add rsp, 8	       347	write.c	FUNCTION_6
0x400233c	              0x5b	                                 pop rbx	       347	write.c	FUNCTION_6
0x400233d	              0x5d	                                 pop rbp	       347	write.c	FUNCTION_6
0x400233e	              0xc3	                                     ret	       347	write.c	FUNCTION_6
generic_force_reloc	FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:WHILE,0:IF,2:ELSE,0	18
0x4001c30	          0x8b4750	            mov eax, dword [rdi + 0x50] 	       327	write.c	FUNCTION_5	IF_1
0x4001c33	          0x4889fa	                            mov rdx, rdi	       326	write.c	FUNCTION_5
0x4001c36	      0x2da3050000	                          sub eax, 0x5a3	       327	write.c	FUNCTION_5	IF_1
0x4001c3b	          0x83f801	                              cmp eax, 1	       327	write.c	FUNCTION_5	IF_1
0x4001c3e	            0x7620	                           jbe 0x4001c60	       327	write.c	FUNCTION_5	IF_1
0x4001c40	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       331	write.c	FUNCTION_5	IF_2
0x4001c44	          0x4885ff	                           test rdi, rdi	       331	write.c	FUNCTION_5	IF_2
0x4001c47	            0x7427	                            je 0x4001c70	       331	write.c	FUNCTION_5	IF_2
0x4001c49	            0x31f6	                            xor esi, esi	       334	write.c	FUNCTION_5	CALL_1
0x4001c4b	      0x48837a2000	               cmp qword [rdx + 0x20], 0	       334	write.c	FUNCTION_5	CALL_1
0x4001c50	        0x400f94c6	                                sete sil	       334	write.c	FUNCTION_5	CALL_1
0x4001c54	      0xe900000000	                           jmp 0x4001c59	       334	write.c	FUNCTION_5	CALL_1
0x4001c59	     0xf1f80000000	                         nop dword [rax]	       334	write.c	FUNCTION_5	CALL_1
0x4001c60	      0xb801000000	                              mov eax, 1	       329	write.c	FUNCTION_5	IF_1
0x4001c65	              0xc3	                                     ret	       329	write.c	FUNCTION_5	IF_1
0x4001c66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       329	write.c	FUNCTION_5	IF_1
0x4001c70	            0x31c0	                            xor eax, eax	       332	write.c	FUNCTION_5	IF_2
0x4001c72	              0xc3	                                     ret	       335	write.c	FUNCTION_5
size_seg	FOR,2:DO,0:SWITCH,0:functions,0:CALL,12:WHILE,1:IF,6:ELSE,3	257
0x4000ba0	            0x4157	                                push r15	       561	write.c	FUNCTION_14
0x4000ba2	            0x4156	                                push r14	       561	write.c	FUNCTION_14
0x4000ba4	            0x4155	                                push r13	       561	write.c	FUNCTION_14
0x4000ba6	            0x4154	                                push r12	       561	write.c	FUNCTION_14
0x4000ba8	          0x4989fd	                            mov r13, rdi	       561	write.c	FUNCTION_14
0x4000bab	              0x55	                                push rbp	       561	write.c	FUNCTION_14
0x4000bac	              0x53	                                push rbx	       561	write.c	FUNCTION_14
0x4000bad	          0x4889f5	                            mov rbp, rsi	       561	write.c	FUNCTION_14
0x4000bb0	          0x4889ef	                            mov rdi, rbp	       568	write.c	FUNCTION_14	CALL_1
0x4000bb3	            0x31f6	                            xor esi, esi	       568	write.c	FUNCTION_14	CALL_1
0x4000bb5	        0x4883ec08	                              sub rsp, 8	       561	write.c	FUNCTION_14
0x4000bb9	      0xe800000000	                          call 0x4000bbe	       568	write.c	FUNCTION_14	CALL_1
0x4000bbe	    0x4c8ba5a80000	            mov r12, qword [rbp + 0xa8] 	       570	write.c	FUNCTION_14	CALL_2
0x4000bc5	          0x4d85e4	                           test r12, r12	       571	write.c	FUNCTION_14	IF_1
0x4000bc8	     0xf8472020000	                            je 0x4000e40	       571	write.c	FUNCTION_14	IF_1
0x4000bce	        0x498b0424	                    mov rax, qword [r12]	       571	write.c	FUNCTION_14	IF_1
0x4000bd2	          0x4885c0	                           test rax, rax	       571	write.c	FUNCTION_14	IF_1
0x4000bd5	     0xf8465020000	                            je 0x4000e40	       571	write.c	FUNCTION_14	IF_1
0x4000bdb	          0x488b18	                    mov rbx, qword [rax]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000bde	          0x4885db	                           test rbx, rbx	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000be1	            0x7420	                            je 0x4000c03	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000be3	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	       436	write.c	FUNCTION_12	SWITCH_1
0x4000be6	          0x83f80d	                            cmp eax, 0xd	       436	write.c	FUNCTION_12	SWITCH_1
0x4000be9	          0x4189c6	                           mov r14d, eax	       436	write.c	FUNCTION_12	SWITCH_1
0x4000bec	     0xf871e020000	                            ja 0x4000e10	       436	write.c	FUNCTION_12	SWITCH_1
0x4000bf2	    0x42ff24f50000	                       jmp qword [r14*8]	       436	write.c	FUNCTION_12	SWITCH_1
0x4000bfa	    0x660f1f440000	                    nop word [rax + rax]	       436	write.c	FUNCTION_12	SWITCH_1
0x4000c00	          0x4889c3	                            mov rbx, rax	       436	write.c	FUNCTION_12	SWITCH_1
0x4000c03	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       576	write.c	FUNCTION_14	IF_1	FOR_2
0x4000c07	          0x4885c0	                           test rax, rax	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000c0a	            0x75f4	                           jne 0x4000c00	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000c0c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       580	write.c	FUNCTION_14	IF_1
0x4000c10	          0x480303	                    add rax, qword [rbx]	       586	write.c	FUNCTION_14	IF_2
0x4000c13	          0x8b5520	            mov edx, dword [rbp + 0x20] 	       585	write.c	FUNCTION_14
0x4000c16	          0x4889c3	                            mov rbx, rax	       586	write.c	FUNCTION_14	IF_2
0x4000c19	     0xf8424020000	                            je 0x4000e43	       586	write.c	FUNCTION_14	IF_2
0x4000c1f	            0x89d0	                            mov eax, edx	       591	write.c	FUNCTION_14	IF_3
0x4000c21	          0x80cc01	                                or ah, 1	       591	write.c	FUNCTION_14	IF_3
0x4000c24	    0x41f644240802	                  test byte [r12 + 8], 2	       591	write.c	FUNCTION_14	IF_3
0x4000c2a	           0xf44d0	                          cmove edx, eax	       591	write.c	FUNCTION_14	IF_3
0x4000c2d	          0x83e2fb	                     and edx, 0xfffffffb	       594	write.c	FUNCTION_14	CALL_4
0x4000c30	          0x4889ee	                            mov rsi, rbp	       594	write.c	FUNCTION_14	CALL_4
0x4000c33	          0x4c89ef	                            mov rdi, r13	       594	write.c	FUNCTION_14	CALL_4
0x4000c36	      0xe800000000	                          call 0x4000c3b	       594	write.c	FUNCTION_14	CALL_4
0x4000c3b	            0x85c0	                           test eax, eax	       595	write.c	FUNCTION_14	CALL_5
0x4000c3d	     0xf84e7020000	                            je 0x4000f2a	       595	write.c	FUNCTION_14	CALL_5
0x4000c43	    0x8b0500000000	            mov eax, dword [0x04000c49] 	       599	write.c	FUNCTION_14	IF_4
0x4000c49	            0x85c0	                           test eax, eax	       599	write.c	FUNCTION_14	IF_4
0x4000c4b	     0xf840f020000	                            je 0x4000e60	       599	write.c	FUNCTION_14	IF_4
0x4000c51	          0x4889da	                            mov rdx, rbx	       603	write.c	FUNCTION_14	CALL_7
0x4000c54	          0x4889ee	                            mov rsi, rbp	       603	write.c	FUNCTION_14	CALL_7
0x4000c57	          0x4c89ef	                            mov rdi, r13	       603	write.c	FUNCTION_14	CALL_7
0x4000c5a	      0xe800000000	                          call 0x4000c5f	       603	write.c	FUNCTION_14	CALL_7
0x4000c5f	            0x85c0	                           test eax, eax	       604	write.c	FUNCTION_14	CALL_8
0x4000c61	     0xf84eb020000	                            je 0x4000f52	       604	write.c	FUNCTION_14	CALL_8
0x4000c67	        0x4883c408	                              add rsp, 8	       632	write.c	FUNCTION_14
0x4000c6b	              0x5b	                                 pop rbx	       632	write.c	FUNCTION_14
0x4000c6c	              0x5d	                                 pop rbp	       632	write.c	FUNCTION_14
0x4000c6d	            0x415c	                                 pop r12	       632	write.c	FUNCTION_14
0x4000c6f	            0x415d	                                 pop r13	       632	write.c	FUNCTION_14
0x4000c71	            0x415e	                                 pop r14	       632	write.c	FUNCTION_14
0x4000c73	            0x415f	                                 pop r15	       632	write.c	FUNCTION_14
0x4000c75	              0xc3	                                     ret	       632	write.c	FUNCTION_14
0x4000c76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       632	write.c	FUNCTION_14
0x4000c80	          0x4889df	                            mov rdi, rbx	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000c83	      0xe800000000	                          call 0x4000c88	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000c88	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000c8c	          0x4885f6	                           test rsi, rsi	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000c8f	          0x4889f3	                            mov rbx, rsi	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000c92	     0xf854bffffff	                           jne 0x4000be3	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000c98	        0x498b0424	                    mov rax, qword [r12]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000c9c	          0x488b18	                    mov rbx, qword [rax]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000c9f	      0xe95fffffff	                           jmp 0x4000c03	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000ca4	         0xf1f4000	                         nop dword [rax]	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000ca8	          0x83f803	                              cmp eax, 3	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cab	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000caf	            0x7533	                           jne 0x4000ce4	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cb1	          0x488b16	                    mov rdx, qword [rsi]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cb4	          0x482b13	                    sub rdx, qword [rbx]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cb7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cbb	          0x4829c2	                            sub rdx, rax	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cbe	        0x488d4aff	                      lea rcx, [rdx - 1]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cc2	    0x4881f9fe0f00	                          cmp rcx, 0xffe	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cc9	            0x7722	                            ja 0x4000ced	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ccb	      0x488d74037c	            lea rsi, [rbx + rax + 0x7c] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cd0	            0x31c9	                            xor ecx, ecx	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cd2	          0x4889df	                            mov rdi, rbx	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cd5	      0xe800000000	                          call 0x4000cda	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000cda	    0x660f1f440000	                    nop word [rax + rax]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ce0	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ce4	          0x4885f6	                           test rsi, rsi	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000ce7	     0xf8429020000	                            je 0x4000f16	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000ced	          0x488b06	                    mov rax, qword [rsi]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000cf0	          0x482b03	                    sub rax, qword [rbx]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000cf3	            0x31d2	                            xor edx, edx	       450	write.c	FUNCTION_12	SWITCH_1
0x4000cf5	        0x482b4310	             sub rax, qword [rbx + 0x10]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000cf9	        0x48f77318	                  div qword [rbx + 0x18]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000cfd	          0x4885c0	                           test rax, rax	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000d00	          0x4989c6	                            mov r14, rax	       450	write.c	FUNCTION_12	SWITCH_1
0x4000d03	        0x48894320	             mov qword [rbx + 0x20], rax	       450	write.c	FUNCTION_12	SWITCH_1
0x4000d07	     0xf88d3010000	                            js 0x4000ee0	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000d0d	            0x31c0	                            xor eax, eax	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000d0f	        0x837b5c09	               cmp dword [rbx + 0x5c], 9	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000d13	           0xf94c0	                                 sete al	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000d16	        0x8d44c001	              lea eax, [rax + rax*8 + 1]	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000d1a	          0x89435c	             mov dword [rbx + 0x5c], eax	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000d1d	      0xe96affffff	                           jmp 0x4000c8c	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000d22	    0x660f1f440000	                    nop word [rax + rax]	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000d28	    0x488b3d000000	            mov rdi, qword [0x04000d2f] 	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000d2f	          0x4889da	                            mov rdx, rbx	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000d32	          0x4889ee	                            mov rsi, rbp	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000d35	      0xe800000000	                          call 0x4000d3a	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000d3a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d3e	          0x4885c0	                           test rax, rax	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d41	            0x7410	                            je 0x4000d53	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d43	          0x488b00	                    mov rax, qword [rax]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d46	          0x482b03	                    sub rax, qword [rbx]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d49	        0x483b4310	            cmp rax, qword [rbx + 0x10] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d4d	     0xf85eb010000	                           jne 0x4000f3e	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d53	          0x4889df	                            mov rdi, rbx	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000d56	      0xe800000000	                          call 0x4000d5b	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000d5b	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000d5f	      0xe928ffffff	                           jmp 0x4000c8c	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000d64	         0xf1f4000	                         nop dword [rax]	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000d68	          0x4889df	                            mov rdi, rbx	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000d6b	      0xe800000000	                          call 0x4000d70	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000d70	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000d74	      0xe913ffffff	                           jmp 0x4000c8c	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000d79	     0xf1f80000000	                         nop dword [rax]	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000d80	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000d84	      0xe800000000	                          call 0x4000d89	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000d89	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000d8d	          0x4989c6	                            mov r14, rax	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000d90	      0xe800000000	                          call 0x4000d95	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000d95	            0x85c0	                           test eax, eax	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000d97	            0x7531	                           jne 0x4000dca	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000d99	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000d9d	      0xe800000000	                          call 0x4000da2	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000da2	      0xba05000000	                              mov edx, 5	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000da7	      0xbe00000000	                              mov esi, 0	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000dac	            0x31ff	                            xor edi, edi	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000dae	          0x4989c7	                            mov r15, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000db1	      0xe800000000	                          call 0x4000db6	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000db6	          0x8b7348	            mov esi, dword [rbx + 0x48] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000db9	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000dbd	          0x4889c2	                            mov rdx, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000dc0	          0x4c89f9	                            mov rcx, r15	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000dc3	            0x31c0	                            xor eax, eax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000dc5	      0xe800000000	                          call 0x4000dca	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000dca	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000dce	          0x8b5360	            mov edx, dword [rbx + 0x60] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000dd1	          0x4c89f6	                            mov rsi, r14	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000dd4	      0x488d7c037c	            lea rdi, [rbx + rax + 0x7c] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000dd9	      0xe800000000	                          call 0x4000dde	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000dde	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	       486	write.c	FUNCTION_12	SWITCH_1
0x4000de5	            0x4898	                                    cdqe	       485	write.c	FUNCTION_12	SWITCH_1
0x4000de7	    0x48c743180000	               mov qword [rbx + 0x18], 0	       487	write.c	FUNCTION_12	SWITCH_1
0x4000def	        0x48014310	            add qword [rbx + 0x10], rax 	       485	write.c	FUNCTION_12	SWITCH_1
0x4000df3	    0x48c743200000	               mov qword [rbx + 0x20], 0	       488	write.c	FUNCTION_12	SWITCH_1
0x4000dfb	    0x48c743280000	               mov qword [rbx + 0x28], 0	       489	write.c	FUNCTION_12	SWITCH_1
0x4000e03	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       489	write.c	FUNCTION_12	SWITCH_1
0x4000e07	      0xe980feffff	                           jmp 0x4000c8c	       489	write.c	FUNCTION_12	SWITCH_1
0x4000e0c	         0xf1f4000	                         nop dword [rax]	       489	write.c	FUNCTION_12	SWITCH_1
0x4000e10	      0xba05000000	                              mov edx, 5	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e15	      0xbe00000000	                              mov esi, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e1a	            0x31ff	                            xor edi, edi	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e1c	      0xe800000000	                          call 0x4000e21	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e21	      0xb900000000	                              mov ecx, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e26	          0x4889c7	                            mov rdi, rax	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e29	      0xba16020000	                          mov edx, 0x216	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e2e	          0x4c89f6	                            mov rsi, r14	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e31	            0x31c0	                            xor eax, eax	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e33	      0xe800000000	                          call 0x4000e38	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e38	     0xf1f84000000	                   nop dword [rax + rax]	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000e40	          0x8b5520	            mov edx, dword [rbp + 0x20] 	       585	write.c	FUNCTION_14
0x4000e43	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       586	write.c	FUNCTION_14	IF_2
0x4000e48	            0x7409	                            je 0x4000e53	       586	write.c	FUNCTION_14	IF_2
0x4000e4a	          0xf6c601	                              test dh, 1	       586	write.c	FUNCTION_14	IF_2
0x4000e4d	     0xf8514feffff	                           jne 0x4000c67	       586	write.c	FUNCTION_14	IF_2
0x4000e53	            0x31db	                            xor ebx, ebx	       586	write.c	FUNCTION_14	IF_2
0x4000e55	      0xe9d3fdffff	                           jmp 0x4000c2d	       586	write.c	FUNCTION_14	IF_2
0x4000e5a	    0x660f1f440000	                    nop word [rax + rax]	       586	write.c	FUNCTION_14	IF_2
0x4000e60	          0x4889de	                            mov rsi, rbx	       602	write.c	FUNCTION_14	CALL_6
0x4000e63	          0x4889ef	                            mov rdi, rbp	       602	write.c	FUNCTION_14	CALL_6
0x4000e66	      0xe800000000	                          call 0x4000e6b	       602	write.c	FUNCTION_14	CALL_6
0x4000e6b	          0x4889ee	                            mov rsi, rbp	       603	write.c	FUNCTION_14	CALL_7
0x4000e6e	          0x4889c2	                            mov rdx, rax	       603	write.c	FUNCTION_14	CALL_7
0x4000e71	          0x4c89ef	                            mov rdi, r13	       603	write.c	FUNCTION_14	CALL_7
0x4000e74	          0x4989c6	                            mov r14, rax	       602	write.c	FUNCTION_14	CALL_6
0x4000e77	      0xe800000000	                          call 0x4000e7c	       603	write.c	FUNCTION_14	CALL_7
0x4000e7c	            0x85c0	                           test eax, eax	       604	write.c	FUNCTION_14	CALL_8
0x4000e7e	     0xf84ce000000	                            je 0x4000f52	       604	write.c	FUNCTION_14	CALL_8
0x4000e84	          0x4939de	                            cmp r14, rbx	       608	write.c	FUNCTION_14	CALL_9
0x4000e87	     0xf82ed000000	                            jb 0x4000f7a	       608	write.c	FUNCTION_14	CALL_9
0x4000e8d	     0xf84d4fdffff	                            je 0x4000c67	       609	write.c	FUNCTION_14	IF_5
0x4000e93	        0x498b0424	                    mov rax, qword [r12]	       611	write.c	FUNCTION_14	IF_5
0x4000e97	        0x488b7808	                mov rdi, qword [rax + 8]	       611	write.c	FUNCTION_14	IF_5
0x4000e9b	          0x488b30	                    mov rsi, qword [rax]	       612	write.c	FUNCTION_14	IF_5
0x4000e9e	            0xeb03	                           jmp 0x4000ea3	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ea0	          0x4889ce	                            mov rsi, rcx	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ea3	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000ea7	          0x4839cf	                            cmp rdi, rcx	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000eaa	            0x75f4	                           jne 0x4000ea0	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000eac	          0x4c89f0	                            mov rax, r14	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000eaf	            0x31d2	                            xor edx, edx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000eb1	          0x48891f	                    mov qword [rdi], rbx	       615	write.c	FUNCTION_14	IF_5
0x4000eb4	          0x4829d8	                            sub rax, rbx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000eb7	        0x48f77618	                  div qword [rsi + 0x18]	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000ebb	          0x4885d2	                           test rdx, rdx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000ebe	     0xf85a2000000	                           jne 0x4000f66	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000ec4	        0x48014620	            add qword [rsi + 0x20], rax 	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000ec8	        0x4883c408	                              add rsp, 8	       632	write.c	FUNCTION_14
0x4000ecc	              0x5b	                                 pop rbx	       632	write.c	FUNCTION_14
0x4000ecd	              0x5d	                                 pop rbp	       632	write.c	FUNCTION_14
0x4000ece	            0x415c	                                 pop r12	       632	write.c	FUNCTION_14
0x4000ed0	            0x415d	                                 pop r13	       632	write.c	FUNCTION_14
0x4000ed2	            0x415e	                                 pop r14	       632	write.c	FUNCTION_14
0x4000ed4	            0x415f	                                 pop r15	       632	write.c	FUNCTION_14
0x4000ed6	              0xc3	                                     ret	       632	write.c	FUNCTION_14
0x4000ed7	    0x660f1f840000	                    nop word [rax + rax]	       632	write.c	FUNCTION_14
0x4000ee0	      0xba05000000	                              mov edx, 5	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000ee5	      0xbe00000000	                              mov esi, 0	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000eea	            0x31ff	                            xor edi, edi	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000eec	      0xe800000000	                          call 0x4000ef1	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000ef1	          0x8b7348	            mov esi, dword [rbx + 0x48] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000ef4	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000ef8	          0x4889c2	                            mov rdx, rax	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000efb	          0x4c89f1	                            mov rcx, r14	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000efe	            0x31c0	                            xor eax, eax	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000f00	      0xe800000000	                          call 0x4000f05	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000f05	    0x48c743200000	               mov qword [rbx + 0x20], 0	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000f0d	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000f11	      0xe9f7fdffff	                           jmp 0x4000d0d	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000f16	      0xba00000000	                              mov edx, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f1b	      0xbec1010000	                          mov esi, 0x1c1	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f20	      0xbf00000000	                              mov edi, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f25	      0xe800000000	                          call 0x4000f2a	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f2a	      0xba00000000	                              mov edx, 0	       595	write.c	FUNCTION_14	CALL_5
0x4000f2f	      0xbe53020000	                          mov esi, 0x253	       595	write.c	FUNCTION_14	CALL_5
0x4000f34	      0xbf00000000	                              mov edi, 0	       595	write.c	FUNCTION_14	CALL_5
0x4000f39	      0xe800000000	                          call 0x4000f3e	       595	write.c	FUNCTION_14	CALL_5
0x4000f3e	      0xba00000000	                              mov edx, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000f43	      0xbefa010000	                          mov esi, 0x1fa	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000f48	      0xbf00000000	                              mov edi, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000f4d	      0xe800000000	                          call 0x4000f52	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000f52	      0xba00000000	                              mov edx, 0	       604	write.c	FUNCTION_14	CALL_8
0x4000f57	      0xbe5c020000	                          mov esi, 0x25c	       604	write.c	FUNCTION_14	CALL_8
0x4000f5c	      0xbf00000000	                              mov edi, 0	       604	write.c	FUNCTION_14	CALL_8
0x4000f61	      0xe800000000	                          call 0x4000f66	       604	write.c	FUNCTION_14	CALL_8
0x4000f66	      0xba00000000	                              mov edx, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f6b	      0xbe6f020000	                          mov esi, 0x26f	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f70	      0xbf00000000	                              mov edi, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f75	      0xe800000000	                          call 0x4000f7a	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000f7a	      0xba00000000	                              mov edx, 0	       608	write.c	FUNCTION_14	CALL_9
0x4000f7f	      0xbe60020000	                          mov esi, 0x260	       608	write.c	FUNCTION_14	CALL_9
0x4000f84	      0xbf00000000	                              mov edi, 0	       608	write.c	FUNCTION_14	CALL_9
0x4000f89	      0xe800000000	                          call 0x4000f8e	       608	write.c	FUNCTION_14	CALL_9
relax_seg	FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:WHILE,0:IF,1:ELSE,0	16
0x4002e70	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       551	write.c	FUNCTION_13	CALL_1
0x4002e77	          0x4885c0	                           test rax, rax	       554	write.c	FUNCTION_13	IF_1
0x4002e7a	            0x7422	                            je 0x4002e9e	       554	write.c	FUNCTION_13	IF_1
0x4002e7c	          0x488b00	                    mov rax, qword [rax]	       554	write.c	FUNCTION_13	IF_1
0x4002e7f	          0x4885c0	                           test rax, rax	       554	write.c	FUNCTION_13	IF_1
0x4002e82	            0x741a	                            je 0x4002e9e	       554	write.c	FUNCTION_13	IF_1
0x4002e84	              0x53	                                push rbx	       550	write.c	FUNCTION_13
0x4002e85	          0x4889d3	                            mov rbx, rdx	       550	write.c	FUNCTION_13
0x4002e88	          0x488b38	                    mov rdi, qword [rax]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4002e8b	            0x8b12	                    mov edx, dword [rdx]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4002e8d	      0xe800000000	                          call 0x4002e92	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4002e92	            0x85c0	                           test eax, eax	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4002e94	            0x7407	                            je 0x4002e9d	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x4002e96	    0xc74304010000	                  mov dword [rbx + 4], 1	       556	write.c	FUNCTION_13	IF_1
0x4002e9d	              0x5b	                                 pop rbx	       557	write.c	FUNCTION_13
0x4002e9e	            0xf3c3	                                     ret	       557	write.c	FUNCTION_13
write_object_file	FOR,8:DO,0:SWITCH,0:functions,0:CALL,91:WHILE,1:IF,28:ELSE,2	807
0x4002ea0	            0x4157	                                push r15	      2065	write.c	FUNCTION_33
0x4002ea2	            0x4156	                                push r14	      2065	write.c	FUNCTION_33
0x4002ea4	            0x4155	                                push r13	      2065	write.c	FUNCTION_33
0x4002ea6	            0x4154	                                push r12	      2065	write.c	FUNCTION_33
0x4002ea8	              0x55	                                push rbp	      2065	write.c	FUNCTION_33
0x4002ea9	              0x53	                                push rbx	      2065	write.c	FUNCTION_33
0x4002eaa	        0x4883ec48	                           sub rsp, 0x48	      2065	write.c	FUNCTION_33
0x4002eae	    0x488b3d000000	            mov rdi, qword [0x04002eb5] 	      1856	write.c	FUNCTION_29	FOR_1
0x4002eb5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2065	write.c	FUNCTION_33
0x4002ebe	      0x4889442438	             mov qword [rsp + 0x38], rax	      2065	write.c	FUNCTION_33
0x4002ec3	            0x31c0	                            xor eax, eax	      2065	write.c	FUNCTION_33
0x4002ec5	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1856	write.c	FUNCTION_29	FOR_1
0x4002ecc	          0x4885db	                           test rbx, rbx	      1856	write.c	FUNCTION_29	FOR_1
0x4002ecf	            0x741f	                            je 0x4002ef0	      1856	write.c	FUNCTION_29	FOR_1
0x4002ed1	     0xf1f80000000	                         nop dword [rax]	      1856	write.c	FUNCTION_29	FOR_1
0x4002ed8	          0x4889df	                            mov rdi, rbx	      1857	write.c	FUNCTION_29	CALL_1
0x4002edb	      0xe8b0e0ffff	         call sym.subsegs_finish_section	      1857	write.c	FUNCTION_29	CALL_1
0x4002ee0	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1856	write.c	FUNCTION_29	FOR_1
0x4002ee4	          0x4885db	                           test rbx, rbx	      1856	write.c	FUNCTION_29	FOR_1
0x4002ee7	            0x75ef	                           jne 0x4002ed8	      1856	write.c	FUNCTION_29	FOR_1
0x4002ee9	    0x488b3d000000	            mov rdi, qword [0x04002ef0] 	      1856	write.c	FUNCTION_29	FOR_1
0x4002ef0	    0x488b05000000	            mov rax, qword [0x04002ef7] 	      2088	write.c	FUNCTION_33
0x4002ef7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2088	write.c	FUNCTION_33
0x4002efb	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2088	write.c	FUNCTION_33
0x4002eff	          0x4885c0	                           test rax, rax	      2088	write.c	FUNCTION_33
0x4002f02	     0xf84280a0000	                            je 0x4003930	      2088	write.c	FUNCTION_33
0x4002f08	        0x48895010	             mov qword [rax + 0x10], rdx	      2088	write.c	FUNCTION_33
0x4002f0c	          0x4885d2	                           test rdx, rdx	      2088	write.c	FUNCTION_33
0x4002f0f	     0xf840b0a0000	                            je 0x4003920	      2088	write.c	FUNCTION_33
0x4002f15	        0x48894218	             mov qword [rdx + 0x18], rax	      2088	write.c	FUNCTION_33
0x4002f19	    0x488b05000000	            mov rax, qword [0x04002f20] 	      2089	write.c	FUNCTION_33
0x4002f20	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2089	write.c	FUNCTION_33
0x4002f24	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2089	write.c	FUNCTION_33
0x4002f28	          0x4885c0	                           test rax, rax	      2089	write.c	FUNCTION_33
0x4002f2b	     0xf84c7090000	                            je 0x40038f8	      2089	write.c	FUNCTION_33
0x4002f31	          0x4885d2	                           test rdx, rdx	      2089	write.c	FUNCTION_33
0x4002f34	        0x48895010	             mov qword [rax + 0x10], rdx	      2089	write.c	FUNCTION_33
0x4002f38	     0xf84d2090000	                            je 0x4003910	      2089	write.c	FUNCTION_33
0x4002f3e	        0x48894218	             mov qword [rdx + 0x18], rax	      2089	write.c	FUNCTION_33
0x4002f42	    0x83afa0000000	               sub dword [rdi + 0xa0], 2	      2090	write.c	FUNCTION_33
0x4002f49	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2092	write.c	FUNCTION_33	CALL_2
0x4002f4e	      0xbe00000000	                              mov esi, 0	      2092	write.c	FUNCTION_33	CALL_2
0x4002f53	    0xc74424300000	               mov dword [rsp + 0x30], 0	      2091	write.c	FUNCTION_33
0x4002f5b	      0xe800000000	                          call 0x4002f60	      2092	write.c	FUNCTION_33	CALL_2
0x4002f60	    0x488b3d000000	            mov rdi, qword [0x04002f67] 	      2095	write.c	FUNCTION_33	CALL_3
0x4002f67	            0x31d2	                            xor edx, edx	      2095	write.c	FUNCTION_33	CALL_3
0x4002f69	      0xbe00000000	                              mov esi, 0	      2095	write.c	FUNCTION_33	CALL_3
0x4002f6e	      0xe800000000	                          call 0x4002f73	      2095	write.c	FUNCTION_33	CALL_3
0x4002f73	    0x803d00000000	                cmp byte [0x04002f7a], 0	      2100	write.c	FUNCTION_33	IF_1
0x4002f7a	     0xf85d8070000	                           jne 0x4003758	      2100	write.c	FUNCTION_33	IF_1
0x4002f80	    0xc74424300000	               mov dword [rsp + 0x30], 0	      2105	write.c	FUNCTION_33
0x4002f88	     0xf1f84000000	                   nop dword [rax + rax]	      2105	write.c	FUNCTION_33
0x4002f90	    0x488b3d000000	            mov rdi, qword [0x04002f97] 	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002f97	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002f9c	      0xbe00000000	                              mov esi, 0	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002fa1	    0xc74424340000	               mov dword [rsp + 0x34], 0	      2128	write.c	FUNCTION_33	WHILE_1
0x4002fa9	      0xe800000000	                          call 0x4002fae	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002fae	      0x448b4c2434	            mov r9d, dword [rsp + 0x34] 	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x4002fb3	      0x8344243001	               add dword [rsp + 0x30], 1	      2130	write.c	FUNCTION_33	WHILE_1
0x4002fb8	          0x4585c9	                           test r9d, r9d	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x4002fbb	            0x75d3	                           jne 0x4002f90	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x4002fbd	    0x488b3d000000	            mov rdi, qword [0x04002fc4] 	      2144	write.c	FUNCTION_33	CALL_6
0x4002fc4	            0x31d2	                            xor edx, edx	      2144	write.c	FUNCTION_33	CALL_6
0x4002fc6	      0xbe00000000	                              mov esi, 0	      2144	write.c	FUNCTION_33	CALL_6
0x4002fcb	    0xc70500000000	               mov dword [0x04002fd5], 1	      2142	write.c	FUNCTION_33
0x4002fd5	      0xe800000000	                          call 0x4002fda	      2144	write.c	FUNCTION_33	CALL_6
0x4002fda	    0xc70500000000	               mov dword [0x04002fe4], 1	      2147	write.c	FUNCTION_33
0x4002fe4	      0xe800000000	                          call 0x4002fe9	      2149	write.c	FUNCTION_33	CALL_7
0x4002fe9	    0x488b3d000000	            mov rdi, qword [0x04002ff0] 	      1869	write.c	FUNCTION_30	CALL_1
0x4002ff0	      0xe800000000	                          call 0x4002ff5	      1869	write.c	FUNCTION_30	CALL_1
0x4002ff5	          0x4885c0	                           test rax, rax	      1870	write.c	FUNCTION_30	IF_1
0x4002ff8	          0x4889c5	                            mov rbp, rax	      1869	write.c	FUNCTION_30	CALL_1
0x4002ffb	     0xf84ad000000	                            je 0x40030ae	      1870	write.c	FUNCTION_30	IF_1
0x4003001	    0x488b05000000	            mov rax, qword [0x04003008] 	      1873	write.c	FUNCTION_30	CALL_2
0x4003008	        0x488b4008	                mov rax, qword [rax + 8]	      1873	write.c	FUNCTION_30	CALL_2
0x400300c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1873	write.c	FUNCTION_30	CALL_2
0x4003013	    0x488bb8280300	           mov rdi, qword [rax + 0x328] 	      1873	write.c	FUNCTION_30	CALL_2
0x400301a	      0xb800000000	                              mov eax, 0	      1875	write.c	FUNCTION_30	IF_2
0x400301f	          0x4885ff	                           test rdi, rdi	      1875	write.c	FUNCTION_30	IF_2
0x4003022	        0x480f44f8	                          cmove rdi, rax	      1875	write.c	FUNCTION_30	IF_2
0x4003026	            0x31f6	                            xor esi, esi	      1876	write.c	FUNCTION_30	CALL_3
0x4003028	      0xe800000000	                          call 0x400302d	      1876	write.c	FUNCTION_30	CALL_3
0x400302d	    0x488b3d000000	            mov rdi, qword [0x04003034] 	      1878	write.c	FUNCTION_30	CALL_5
0x4003034	          0x4889c3	                            mov rbx, rax	      1876	write.c	FUNCTION_30	CALL_3
0x4003037	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1878	write.c	FUNCTION_30	CALL_5
0x400303e	          0x4889de	                            mov rsi, rbx	      1879	write.c	FUNCTION_30	CALL_6
0x4003041	        0x488b5708	                mov rdx, qword [rdi + 8]	      1878	write.c	FUNCTION_30	CALL_5
0x4003045	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1878	write.c	FUNCTION_30	CALL_5
0x400304c	    0x8b9238030000	           mov edx, dword [rdx + 0x338] 	      1878	write.c	FUNCTION_30	CALL_5
0x4003052	          0x895004	                mov dword [rax + 4], edx	      1878	write.c	FUNCTION_30	CALL_5
0x4003055	      0xba28000000	                           mov edx, 0x28	      1879	write.c	FUNCTION_30	CALL_6
0x400305a	      0xe800000000	                          call 0x400305f	      1879	write.c	FUNCTION_30	CALL_6
0x400305f	      0xe800000000	                          call 0x4003064	      1880	write.c	FUNCTION_30	CALL_7
0x4003064	          0x4889ef	                            mov rdi, rbp	      1881	write.c	FUNCTION_30	CALL_8
0x4003067	      0xe800000000	                          call 0x400306c	      1881	write.c	FUNCTION_30	CALL_8
0x400306c	    0x488b3d000000	            mov rdi, qword [0x04003073] 	      1882	write.c	FUNCTION_30	CALL_9
0x4003073	          0x4889c6	                            mov rsi, rax	      1882	write.c	FUNCTION_30	CALL_9
0x4003076	          0x4889ea	                            mov rdx, rbp	      1882	write.c	FUNCTION_30	CALL_9
0x4003079	      0xe800000000	                          call 0x400307e	      1882	write.c	FUNCTION_30	CALL_9
0x400307e	          0x4889df	                            mov rdi, rbx	      1884	write.c	FUNCTION_30	CALL_10
0x4003081	      0xe80adfffff	         call sym.subsegs_finish_section	      1884	write.c	FUNCTION_30	CALL_10
0x4003086	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      1885	write.c	FUNCTION_30	CALL_12
0x400308d	            0x31d2	                            xor edx, edx	      1885	write.c	FUNCTION_30	CALL_12
0x400308f	          0x4889de	                            mov rsi, rbx	      1885	write.c	FUNCTION_30	CALL_12
0x4003092	          0x488b00	                    mov rax, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x4003095	          0x488b38	                    mov rdi, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x4003098	      0xe800000000	                          call 0x400309d	      1885	write.c	FUNCTION_30	CALL_12
0x400309d	    0x488b3d000000	            mov rdi, qword [0x040030a4] 	      1886	write.c	FUNCTION_30	CALL_13
0x40030a4	            0x31d2	                            xor edx, edx	      1886	write.c	FUNCTION_30	CALL_13
0x40030a6	          0x4889de	                            mov rsi, rbx	      1886	write.c	FUNCTION_30	CALL_13
0x40030a9	      0xe8f2daffff	                       call sym.size_seg	      1886	write.c	FUNCTION_30	CALL_13
0x40030ae	    0x488b1d000000	            mov rbx, qword [0x040030b5] 	      2261	write.c	FUNCTION_33	IF_9
0x40030b5	          0x4885db	                           test rbx, rbx	      2261	write.c	FUNCTION_33	IF_9
0x40030b8	            0x741e	                            je 0x40030d8	      2261	write.c	FUNCTION_33	IF_9
0x40030ba	    0x660f1f440000	                    nop word [rax + rax]	      2261	write.c	FUNCTION_33	IF_9
0x40030c0	          0x4889df	                            mov rdi, rbx	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x40030c3	      0xe800000000	                          call 0x40030c8	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x40030c8	          0x4889df	                            mov rdi, rbx	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40030cb	      0xe800000000	                          call 0x40030d0	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40030d0	          0x4885c0	                           test rax, rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40030d3	          0x4889c3	                            mov rbx, rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40030d6	            0x75e8	                           jne 0x40030c0	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40030d8	      0xe800000000	                          call 0x40030dd	      2268	write.c	FUNCTION_33	CALL_21
0x40030dd	    0x488b3d000000	            mov rdi, qword [0x040030e4] 	       679	write.c	FUNCTION_15	CALL_1
0x40030e4	    0x41bf02000000	                             mov r15d, 2	       679	write.c	FUNCTION_15	CALL_1
0x40030ea	      0xe800000000	                          call 0x40030ef	       679	write.c	FUNCTION_15	CALL_1
0x40030ef	          0x8d48ff	                      lea ecx, [rax - 1]	       679	write.c	FUNCTION_15	CALL_1
0x40030f2	    0x488b1d000000	            mov rbx, qword [0x040030f9] 	       683	write.c	FUNCTION_15	FOR_1
0x40030f9	          0x49d3e7	                             shl r15, cl	       680	write.c	FUNCTION_15
0x40030fc	        0x498d47ff	                      lea rax, [r15 - 1]	       681	write.c	FUNCTION_15
0x4003100	          0x4885db	                           test rbx, rbx	       683	write.c	FUNCTION_15	FOR_1
0x4003103	        0x48890424	                    mov qword [rsp], rax	       681	write.c	FUNCTION_15
0x4003107	     0xf858f000000	                           jne 0x400319c	       683	write.c	FUNCTION_15	FOR_1
0x400310d	      0xe9b6010000	                           jmp 0x40032c8	       683	write.c	FUNCTION_15	FOR_1
0x4003112	    0x660f1f440000	                    nop word [rax + rax]	       683	write.c	FUNCTION_15	FOR_1
0x4003118	      0xe800000000	                          call 0x400311d	       719	write.c	FUNCTION_15	FOR_1	IF_4	CALL_10
0x400311d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4003121	      0xe800000000	                          call 0x4003126	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4003126	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x400312a	          0x80fa02	                               cmp dl, 2	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x400312d	     0xf845d010000	                            je 0x4003290	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4003133	          0x4531e4	                          xor r12d, r12d	       715	write.c	FUNCTION_15	FOR_1
0x4003136	          0x80fa03	                               cmp dl, 3	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4003139	     0xf8481030000	                            je 0x40034c0	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x400313f	      0xba05000000	                              mov edx, 5	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003144	      0xbe00000000	                              mov esi, 0	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003149	            0x31ff	                            xor edi, edi	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400314b	      0xe800000000	                          call 0x4003150	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003150	          0x8b7340	            mov esi, dword [rbx + 0x40] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003153	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003157	          0x4889c2	                            mov rdx, rax	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400315a	            0x31ed	                            xor ebp, ebp	       732	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x400315c	            0x31c0	                            xor eax, eax	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400315e	      0xe800000000	                          call 0x4003163	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003163	          0x4d85e4	                           test r12, r12	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x4003166	     0xf8490000000	                            je 0x40031fc	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x400316c	        0x48896b08	                mov qword [rbx + 8], rbp	       767	write.c	FUNCTION_15	FOR_1
0x4003170	          0x4c89e7	                            mov rdi, r12	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x4003173	      0xe800000000	                          call 0x4003178	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x4003178	        0x48894310	             mov qword [rbx + 0x10], rax	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x400317c	        0x488d4310	                   lea rax, [rbx + 0x10]	       769	write.c	FUNCTION_15	FOR_1
0x4003180	        0x4c896b20	             mov qword [rbx + 0x20], r13	       770	write.c	FUNCTION_15	FOR_1
0x4003184	        0x4c897b28	             mov qword [rbx + 0x28], r15	       771	write.c	FUNCTION_15	FOR_1
0x4003188	        0x4c897330	             mov qword [rbx + 0x30], r14	       772	write.c	FUNCTION_15	FOR_1
0x400318c	        0x48894318	             mov qword [rbx + 0x18], rax	       769	write.c	FUNCTION_15	FOR_1
0x4003190	          0x488b1b	                    mov rbx, qword [rbx]	       683	write.c	FUNCTION_15	FOR_1
0x4003193	          0x4885db	                           test rbx, rbx	       683	write.c	FUNCTION_15	FOR_1
0x4003196	     0xf842c010000	                            je 0x40032c8	       683	write.c	FUNCTION_15	FOR_1
0x400319c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x40031a0	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	       685	write.c	FUNCTION_15	FOR_1
0x40031a4	      0xe800000000	                          call 0x40031a9	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x40031a9	        0x488b7b08	                mov rdi, qword [rbx + 8]	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x40031ad	      0xe800000000	                          call 0x40031b2	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x40031b2	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x40031b6	          0x80fa02	                               cmp dl, 2	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x40031b9	            0x746d	                            je 0x4003228	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x40031bb	          0x4531ed	                          xor r13d, r13d	       694	write.c	FUNCTION_15	FOR_1
0x40031be	          0x80fa03	                               cmp dl, 3	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x40031c1	     0xf84c9020000	                            je 0x4003490	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x40031c7	      0xba05000000	                              mov edx, 5	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031cc	      0xbe00000000	                              mov esi, 0	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031d1	            0x31ff	                            xor edi, edi	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031d3	      0xe800000000	                          call 0x40031d8	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031d8	          0x8b7340	            mov esi, dword [rbx + 0x40] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031db	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031df	          0x4889c2	                            mov rdx, rax	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031e2	            0x31ed	                            xor ebp, ebp	       710	write.c	FUNCTION_15	FOR_1	IF_3
0x40031e4	            0x31c0	                            xor eax, eax	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031e6	      0xe800000000	                          call 0x40031eb	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40031eb	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x40031ef	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	       716	write.c	FUNCTION_15	FOR_1
0x40031f3	          0x4885ff	                           test rdi, rdi	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x40031f6	     0xf851cffffff	                           jne 0x4003118	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x40031fc	    0x4c8b25000000	            mov r12, qword [0x04003203] 	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x4003203	          0x4d85e4	                           test r12, r12	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x4003206	     0xf8560ffffff	                           jne 0x400316c	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x400320c	      0xbf00000000	                              mov edi, 0	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003211	      0xe800000000	                          call 0x4003216	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003216	    0x488905000000	            mov qword [0x0400321d], rax 	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x400321d	          0x4989c4	                            mov r12, rax	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003220	      0xe947ffffff	                           jmp 0x400316c	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003225	           0xf1f00	                         nop dword [rax]	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003228	        0x4c8b6308	                mov r12, qword [rbx + 8]	       697	write.c	FUNCTION_15	FOR_1	IF_1
0x400322c	          0x4531ed	                          xor r13d, r13d	       694	write.c	FUNCTION_15	FOR_1
0x400322f	          0x4d85e4	                           test r12, r12	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4003232	            0x7493	                            je 0x40031c7	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4003234	          0x4c89e7	                            mov rdi, r12	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4003237	      0xe800000000	                          call 0x400323c	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x400323c	    0x483d00000000	                              cmp rax, 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003242	          0x4889c5	                            mov rbp, rax	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4003245	           0xf94c2	                                 sete dl	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003248	          0x4885c0	                           test rax, rax	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400324b	           0xf94c0	                                 sete al	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400324e	             0x8c2	                               or dl, al	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003250	     0xf8571ffffff	                           jne 0x40031c7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003256	    0x4881fd000000	                              cmp rbp, 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400325d	     0xf8464ffffff	                            je 0x40031c7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003263	    0x483b2d000000	            cmp rbp, qword [0x0400326a] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400326a	     0xf8457ffffff	                            je 0x40031c7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003270	    0x483b2d000000	            cmp rbp, qword [0x04003277] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003277	     0xf844affffff	                            je 0x40031c7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400327d	          0x4c89e7	                            mov rdi, r12	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x4003280	      0xe800000000	                          call 0x4003285	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x4003285	          0x4901c5	                            add r13, rax	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x4003288	      0xe95effffff	                           jmp 0x40031eb	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x400328d	           0xf1f00	                         nop dword [rax]	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x4003290	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4003294	          0x4d85e4	                           test r12, r12	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x4003297	     0xf84c6feffff	                            je 0x4003163	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x400329d	          0x4885ed	                           test rbp, rbp	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40032a0	     0xf84bdfeffff	                            je 0x4003163	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40032a6	          0x4c89e7	                            mov rdi, r12	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40032a9	      0xe800000000	                          call 0x40032ae	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40032ae	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40032b0	     0xf85ea040000	                           jne 0x40037a0	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40032b6	          0x4c89e7	                            mov rdi, r12	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40032b9	      0xe800000000	                          call 0x40032be	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40032be	      0xe9a0feffff	                           jmp 0x4003163	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40032c3	       0xf1f440000	                   nop dword [rax + rax]	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40032c8	    0x448b05000000	            mov r8d, dword [0x040032cf] 	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x40032cf	          0x4585c0	                           test r8d, r8d	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x40032d2	     0xf8588020000	                           jne 0x4003560	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x40032d8	      0xe800000000	                          call 0x40032dd	      2282	write.c	FUNCTION_33	CALL_26
0x40032dd	    0x488b3d000000	            mov rdi, qword [0x040032e4] 	      2285	write.c	FUNCTION_33	CALL_27
0x40032e4	            0x31d2	                            xor edx, edx	      2285	write.c	FUNCTION_33	CALL_27
0x40032e6	      0xbe00000000	                              mov esi, 0	      2285	write.c	FUNCTION_33	CALL_27
0x40032eb	            0x31ed	                            xor ebp, ebp	      2285	write.c	FUNCTION_33	CALL_27
0x40032ed	      0xe800000000	                          call 0x40032f2	      2285	write.c	FUNCTION_33	CALL_27
0x40032f2	    0x488b3d000000	            mov rdi, qword [0x040032f9] 	      2294	write.c	FUNCTION_33	CALL_30
0x40032f9	            0x31d2	                            xor edx, edx	      2294	write.c	FUNCTION_33	CALL_30
0x40032fb	      0xbe00000000	                              mov esi, 0	      2294	write.c	FUNCTION_33	CALL_30
0x4003300	      0xe800000000	                          call 0x4003305	      2294	write.c	FUNCTION_33	CALL_30
0x4003305	    0x488b1d000000	            mov rbx, qword [0x0400330c] 	      2297	write.c	FUNCTION_33	IF_11
0x400330c	          0x4885db	                           test rbx, rbx	      2297	write.c	FUNCTION_33	IF_11
0x400330f	            0x743c	                            je 0x400334d	      2297	write.c	FUNCTION_33	IF_11
0x4003311	     0xf1f80000000	                         nop dword [rax]	      2297	write.c	FUNCTION_33	IF_11
0x4003318	            0x85ed	                           test ebp, ebp	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x400331a	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      2304	write.c	FUNCTION_33	IF_11	FOR_8
0x4003322	          0x4889df	                            mov rdi, rbx	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003325	            0x7461	                            je 0x4003388	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x4003327	      0xe800000000	                          call 0x400332c	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400332c	          0x4889df	                            mov rdi, rbx	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400332f	          0x4889c5	                            mov rbp, rax	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003332	      0xe800000000	                          call 0x4003337	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003337	        0x48894510	            mov qword [rbp + 0x10], rax 	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400333b	            0x31ed	                            xor ebp, ebp	      2313	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x400333d	          0x4889df	                            mov rdi, rbx	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4003340	      0xe800000000	                          call 0x4003345	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4003345	          0x4885c0	                           test rax, rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4003348	          0x4889c3	                            mov rbx, rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x400334b	            0x75cb	                           jne 0x4003318	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x400334d	      0xe800000000	                          call 0x4003352	      2428	write.c	FUNCTION_33	CALL_81
0x4003352	      0xe800000000	                          call 0x4003357	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x4003357	            0x85c0	                           test eax, eax	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x4003359	     0xf84c1040000	                            je 0x4003820	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x400335f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2481	write.c	FUNCTION_33
0x4003364	    0x644833042528	                xor rax, qword fs:[0x28]	      2481	write.c	FUNCTION_33
0x400336d	     0xf85ca080000	                           jne 0x4003c3d	      2481	write.c	FUNCTION_33
0x4003373	        0x4883c448	                           add rsp, 0x48	      2481	write.c	FUNCTION_33
0x4003377	              0x5b	                                 pop rbx	      2481	write.c	FUNCTION_33
0x4003378	              0x5d	                                 pop rbp	      2481	write.c	FUNCTION_33
0x4003379	            0x415c	                                 pop r12	      2481	write.c	FUNCTION_33
0x400337b	            0x415d	                                 pop r13	      2481	write.c	FUNCTION_33
0x400337d	            0x415e	                                 pop r14	      2481	write.c	FUNCTION_33
0x400337f	            0x415f	                                 pop r15	      2481	write.c	FUNCTION_33
0x4003381	              0xc3	                                     ret	      2481	write.c	FUNCTION_33
0x4003382	    0x660f1f440000	                    nop word [rax + rax]	      2481	write.c	FUNCTION_33
0x4003388	      0xe800000000	                          call 0x400338d	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x400338d	            0x85c0	                           test eax, eax	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x400338f	          0x4889df	                            mov rdi, rbx	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4003392	            0x7424	                            je 0x40033b8	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x4003394	      0xe800000000	                          call 0x4003399	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4003399	            0x85c0	                           test eax, eax	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x400339b	     0xf853f010000	                           jne 0x40034e0	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x40033a1	      0xba00000000	                              mov edx, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40033a6	      0xbe00000000	                              mov esi, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40033ab	          0x4889df	                            mov rdi, rbx	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40033ae	      0xe800000000	                          call 0x40033b3	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40033b3	            0xeb86	                           jmp 0x400333b	      2397	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x40033b5	           0xf1f00	                         nop dword [rax]	      2397	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x40033b8	      0xe800000000	                          call 0x40033bd	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x40033bd	          0x4885c0	                           test rax, rax	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40033c0	          0x4889c5	                            mov rbp, rax	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x40033c3	            0x7428	                            je 0x40033ed	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40033c5	          0x4889df	                            mov rdi, rbx	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x40033c8	      0xe800000000	                          call 0x40033cd	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x40033cd	          0x4889c7	                            mov rdi, rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40033d0	      0xe800000000	                          call 0x40033d5	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40033d5	          0x4839c5	                            cmp rbp, rax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40033d8	          0x4989c4	                            mov r12, rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40033db	            0x7410	                            je 0x40033ed	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40033dd	          0x4889df	                            mov rdi, rbx	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40033e0	      0xe800000000	                          call 0x40033e5	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40033e5	            0x85c0	                           test eax, eax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40033e7	     0xf8443030000	                            je 0x4003730	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40033ed	          0x4889df	                            mov rdi, rbx	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x40033f0	      0xe800000000	                          call 0x40033f5	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x40033f5	          0x4889df	                            mov rdi, rbx	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x40033f8	      0xe800000000	                          call 0x40033fd	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x40033fd	            0x85c0	                           test eax, eax	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x40033ff	            0x7510	                           jne 0x4003411	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4003401	          0x4889df	                            mov rdi, rbx	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003404	      0xe800000000	                          call 0x4003409	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003409	            0x85c0	                           test eax, eax	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x400340b	     0xf848f020000	                            je 0x40036a0	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003411	          0x4889df	                            mov rdi, rbx	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4003414	      0xe800000000	                          call 0x4003419	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4003419	          0x4889df	                            mov rdi, rbx	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x400341c	          0x4889c5	                            mov rbp, rax	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x400341f	      0xe800000000	                          call 0x4003424	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4003424	            0x85c0	                           test eax, eax	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4003426	            0x7428	                            je 0x4003450	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4003428	        0x807d004c	                    cmp byte [rbp], 0x4c	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400342c	     0xf85de000000	                           jne 0x4003510	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003432	        0x807d0130	                cmp byte [rbp + 1], 0x30	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003436	     0xf85d4000000	                           jne 0x4003510	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400343c	        0x807d0201	                   cmp byte [rbp + 2], 1	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003440	     0xf85ca000000	                           jne 0x4003510	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003446	        0x807d0300	                   cmp byte [rbp + 3], 0	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400344a	     0xf85c0000000	                           jne 0x4003510	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003450	          0x4889df	                            mov rdi, rbx	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x4003453	      0xe800000000	                          call 0x4003458	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x4003458	    0x483b05000000	            cmp rax, qword [0x0400345f] 	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x400345f	     0xf853cffffff	                           jne 0x40033a1	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x4003465	          0x4889df	                            mov rdi, rbx	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x4003468	      0xe800000000	                          call 0x400346d	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x400346d	    0x488b15000000	            mov rdx, qword [0x04003474] 	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x4003474	          0x483b02	                    cmp rax, qword [rdx]	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x4003477	     0xf8424ffffff	                            je 0x40033a1	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x400347d	      0xba05000000	                              mov edx, 5	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003482	      0xbe00000000	                              mov esi, 0	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003487	            0xeb6c	                           jmp 0x40034f5	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003489	     0xf1f80000000	                         nop dword [rax]	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003490	          0x4c8b20	                    mov r12, qword [rax]	       700	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4003493	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       701	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4003497	          0x4c89e7	                            mov rdi, r12	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x400349a	      0xe800000000	                          call 0x400349f	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x400349f	          0x4d85e4	                           test r12, r12	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x40034a2	     0xf841ffdffff	                            je 0x40031c7	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x40034a8	        0x80781802	                cmp byte [rax + 0x18], 2	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40034ac	     0xf8515fdffff	                           jne 0x40031c7	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40034b2	      0xe97dfdffff	                           jmp 0x4003234	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40034b7	    0x660f1f840000	                    nop word [rax + rax]	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40034c0	          0x4c8b20	                    mov r12, qword [rax]	       725	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x40034c3	        0x4c037810	             add r15, qword [rax + 0x10]	       726	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x40034c7	          0x4c89e7	                            mov rdi, r12	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x40034ca	      0xe800000000	                          call 0x40034cf	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x40034cf	        0x80781802	                cmp byte [rax + 0x18], 2	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40034d3	     0xf8566fcffff	                           jne 0x400313f	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40034d9	      0xe9b6fdffff	                           jmp 0x4003294	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40034de	            0x6690	                                     nop	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40034e0	          0x4889df	                            mov rdi, rbx	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x40034e3	      0xe800000000	                          call 0x40034e8	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x40034e8	      0xba05000000	                              mov edx, 5	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x40034ed	          0x4889c5	                            mov rbp, rax	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x40034f0	      0xbe00000000	                              mov esi, 0	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x40034f5	            0x31ff	                            xor edi, edi	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40034f7	      0xe800000000	                          call 0x40034fc	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40034fc	          0x4889ee	                            mov rsi, rbp	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40034ff	          0x4889c7	                            mov rdi, rax	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003502	            0x31c0	                            xor eax, eax	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003504	      0xe800000000	                          call 0x4003509	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003509	      0xe993feffff	                           jmp 0x40033a1	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x400350e	            0x6690	                                     nop	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003510	          0x4889df	                            mov rdi, rbx	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003513	      0xe800000000	                          call 0x4003518	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003518	            0x85c0	                           test eax, eax	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x400351a	     0xf8530ffffff	                           jne 0x4003450	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003520	          0x4889df	                            mov rdi, rbx	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4003523	      0xe800000000	                          call 0x4003528	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4003528	          0x488b38	                    mov rdi, qword [rax]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400352b	      0xe800000000	                          call 0x4003530	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003530	            0x31ff	                            xor edi, edi	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003532	          0x4989c4	                            mov r12, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003535	      0xba05000000	                              mov edx, 5	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400353a	      0xbe00000000	                              mov esi, 0	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400353f	      0xe800000000	                          call 0x4003544	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003544	          0x4c89e2	                            mov rdx, r12	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003547	          0x4889c7	                            mov rdi, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400354a	          0x4889ee	                            mov rsi, rbp	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400354d	            0x31c0	                            xor eax, eax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400354f	      0xe800000000	                          call 0x4003554	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003554	      0xe9f7feffff	                           jmp 0x4003450	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003559	     0xf1f80000000	                         nop dword [rax]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003560	    0x488b3d000000	            mov rdi, qword [0x04003567] 	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003567	      0xbe00000000	                              mov esi, 0	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x400356c	      0xe800000000	                          call 0x4003571	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003571	          0x4885c0	                           test rax, rax	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003574	     0xf855efdffff	                           jne 0x40032d8	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x400357a	            0x31f6	                            xor esi, esi	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x400357c	      0xbf00000000	                              mov edi, 0	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4003581	      0xe800000000	                          call 0x4003586	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4003586	          0x4889c5	                            mov rbp, rax	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4003589	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x4003590	    0x488b3d000000	            mov rdi, qword [0x04003597] 	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4003597	      0xba28010000	                          mov edx, 0x128	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x400359c	          0x4889ee	                            mov rsi, rbp	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x400359f	    0xc74004070000	                  mov dword [rax + 4], 7	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x40035a6	      0xe800000000	                          call 0x40035ab	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x40035ab	    0x488b3d000000	            mov rdi, qword [0x040035b2] 	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40035b2	    0xc74570020000	               mov dword [rbp + 0x70], 2	      1696	bfd.h	FUNCTION_55
0x40035b9	      0xe800000000	                          call 0x40035be	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40035be	          0x83f820	                           cmp eax, 0x20	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40035c1	    0x488b05000000	            mov rax, qword [0x040035c8] 	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035c8	        0x488b4008	                mov rax, qword [rax + 8]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035cc	          0x488b18	                    mov rbx, qword [rax]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035cf	     0xf877a040000	                            ja 0x4003a4f	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40035d5	      0xbe00000000	                              mov esi, 0	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035da	          0x4889df	                            mov rdi, rbx	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035dd	      0xe800000000	                          call 0x40035e2	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035e2	          0x4885c0	                           test rax, rax	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035e5	     0xf84e8050000	                            je 0x4003bd3	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40035eb	    0x41bd67060000	                         mov r13d, 0x667	      1979	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3
0x40035f1	    0x48c704241800	                   mov qword [rsp], 0x18	      1973	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x40035f9	    0x41bb08000000	                             mov r11d, 8	      1972	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x40035ff	    0x41be1c000000	                          mov r14d, 0x1c	      1971	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x4003605	    0x488b1d000000	            mov rbx, qword [0x0400360c] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400360c	          0x4531e4	                          xor r12d, r12d	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400360f	          0x4531ff	                          xor r15d, r15d	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003612	          0x4489f0	                           mov eax, r14d	        90	string3.h	FUNCTION_44	CALL_6
0x4003615	      0x4889442410	             mov qword [rsp + 0x10], rax	        90	string3.h	FUNCTION_44	CALL_6
0x400361a	          0x4885db	                           test rbx, rbx	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400361d	            0x744c	                            je 0x400366b	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400361f	      0x44896c2408	               mov dword [rsp + 8], r13d	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003624	          0x4d89fd	                            mov r13, r15	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003627	          0x4d89df	                            mov r15, r11	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400362a	    0x660f1f440000	                    nop word [rax + rax]	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003630	        0x488b4308	                mov rax, qword [rbx + 8]	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003634	          0x4885c0	                           test rax, rax	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003637	            0x7420	                            je 0x4003659	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003639	        0xf6401901	               test byte [rax + 0x19], 1	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400363d	            0x741a	                            je 0x4003659	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400363f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003643	          0x4885c0	                           test rax, rax	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003646	            0x7411	                            je 0x4003659	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003648	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400364b	      0x2510000200	                        and eax, 0x20010	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003650	          0x83f810	                           cmp eax, 0x10	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003653	     0xf8439040000	                            je 0x4003a92	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003659	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400365d	          0x4885db	                           test rbx, rbx	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003660	            0x75ce	                           jne 0x4003630	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003662	          0x4d85ed	                           test r13, r13	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x4003665	     0xf8517050000	                           jne 0x4003b82	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x400366b	          0x4889ef	                            mov rdi, rbp	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x400366e	      0xe81dd9ffff	         call sym.subsegs_finish_section	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x4003673	    0x488b85a80000	            mov rax, qword [rbp + 0xa8] 	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400367a	            0x31d2	                            xor edx, edx	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400367c	          0x4889ee	                            mov rsi, rbp	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400367f	          0x488b00	                    mov rax, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003682	          0x488b38	                    mov rdi, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003685	      0xe800000000	                          call 0x400368a	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x400368a	    0x488b3d000000	            mov rdi, qword [0x04003691] 	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003691	            0x31d2	                            xor edx, edx	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003693	          0x4889ee	                            mov rsi, rbp	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003696	      0xe805d5ffff	                       call sym.size_seg	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x400369b	      0xe938fcffff	                           jmp 0x40032d8	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x40036a0	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x40036a5	          0x4889df	                            mov rdi, rbx	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x40036a8	      0xe800000000	                          call 0x40036ad	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x40036ad	    0x48391d000000	            cmp qword [0x040036b4], rbx 	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x40036b4	     0xf84e7fcffff	                            je 0x40033a1	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x40036ba	          0x4889df	                            mov rdi, rbx	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x40036bd	      0xe800000000	                          call 0x40036c2	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x40036c2	            0x85c0	                           test eax, eax	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x40036c4	            0x7528	                           jne 0x40036ee	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x40036c6	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x40036ca	            0x85d2	                           test edx, edx	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x40036cc	            0x7510	                           jne 0x40036de	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x40036ce	          0x4889df	                            mov rdi, rbx	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x40036d1	      0xe800000000	                          call 0x40036d6	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x40036d6	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x40036d8	     0xf8442030000	                            je 0x4003a20	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x40036de	          0x4889df	                            mov rdi, rbx	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x40036e1	      0xe800000000	                          call 0x40036e6	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x40036e6	            0x85c0	                           test eax, eax	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x40036e8	     0xf84b3fcffff	                            je 0x40033a1	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x40036ee	          0x4889df	                            mov rdi, rbx	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40036f1	      0xe800000000	                          call 0x40036f6	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40036f6	            0x85c0	                           test eax, eax	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40036f8	     0xf84d0020000	                            je 0x40039ce	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x40036fe	          0x4889df	                            mov rdi, rbx	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003701	      0xe800000000	                          call 0x4003706	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003706	          0x4889df	                            mov rdi, rbx	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003709	          0x4889c5	                            mov rbp, rax	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x400370c	      0xe800000000	                          call 0x4003711	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003711	          0x4889df	                            mov rdi, rbx	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x4003714	        0x48894510	            mov qword [rbp + 0x10], rax 	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003718	      0xe800000000	                          call 0x400371d	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x400371d	          0x8b6818	            mov ebp, dword [rax + 0x18] 	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003720	          0xc1ed0c	                            shr ebp, 0xc	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003723	          0x83e501	                              and ebp, 1	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003726	      0xe912fcffff	                           jmp 0x400333d	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x400372b	       0xf1f440000	                   nop dword [rax + rax]	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003730	            0x31ff	                            xor edi, edi	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003732	      0xba05000000	                              mov edx, 5	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003737	      0xbe00000000	                              mov esi, 0	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x400373c	      0xe800000000	                          call 0x4003741	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003741	          0x4c89e6	                            mov rsi, r12	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003744	          0x4889c7	                            mov rdi, rax	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003747	            0x31c0	                            xor eax, eax	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003749	      0xe800000000	                          call 0x400374e	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x400374e	      0xe99afcffff	                           jmp 0x40033ed	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003753	       0xf1f440000	                   nop dword [rax + rax]	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003758	    0x488b05000000	            mov rax, qword [0x0400375f] 	      1729	write.c	FUNCTION_26	CALL_1
0x400375f	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1729	write.c	FUNCTION_26	CALL_1
0x4003766	          0x488b10	                    mov rdx, qword [rax]	      1729	write.c	FUNCTION_26	CALL_1
0x4003769	    0x488b05000000	            mov rax, qword [0x04003770] 	      1730	write.c	FUNCTION_26	CALL_2
0x4003770	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1730	write.c	FUNCTION_26	CALL_2
0x4003777	        0x488b7208	                mov rsi, qword [rdx + 8]	      1729	write.c	FUNCTION_26	CALL_1
0x400377b	          0x488b08	                    mov rcx, qword [rax]	      1730	write.c	FUNCTION_26	CALL_2
0x400377e	          0x488b39	                    mov rdi, qword [rcx]	      1729	write.c	FUNCTION_26	CALL_1
0x4003781	        0x488b4908	                mov rcx, qword [rcx + 8]	      1732	write.c	FUNCTION_26	CALL_4
0x4003785	        0x48897e38	             mov qword [rsi + 0x38], rdi	      1729	write.c	FUNCTION_26	CALL_1
0x4003789	        0x48894a08	                mov qword [rdx + 8], rcx	      1731	write.c	FUNCTION_26	CALL_3
0x400378d	    0x48c700000000	                      mov qword [rax], 0	      1733	write.c	FUNCTION_26	CALL_5
0x4003794	      0xe9e7f7ffff	                           jmp 0x4002f80	      1733	write.c	FUNCTION_26	CALL_5
0x4003799	     0xf1f80000000	                         nop dword [rax]	      1733	write.c	FUNCTION_26	CALL_5
0x40037a0	          0x4c89e7	                            mov rdi, r12	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40037a3	      0xe800000000	                          call 0x40037a8	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40037a8	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40037aa	     0xf8506fbffff	                           jne 0x40032b6	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40037b0	        0xf6452504	               test byte [rbp + 0x25], 4	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037b4	            0x7518	                           jne 0x40037ce	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037b6	        0x418b7e30	            mov edi, dword [r14 + 0x30] 	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037ba	            0x85ff	                           test edi, edi	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037bc	     0xf84f4faffff	                            je 0x40032b6	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037c2	        0x418b7610	            mov esi, dword [r14 + 0x10] 	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037c6	            0x85f6	                           test esi, esi	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037c8	     0xf853f020000	                           jne 0x4003a0d	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x40037ce	          0x4c89e7	                            mov rdi, r12	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x40037d1	      0xe800000000	                          call 0x40037d6	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x40037d6	          0x4889c2	                            mov rdx, rax	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x40037d9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x40037dc	      0xa900008000	                      test eax, 0x800000	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x40037e1	            0x7409	                            je 0x40037ec	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x40037e3	          0x4d85ff	                           test r15, r15	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x40037e6	     0xf85cafaffff	                           jne 0x40032b6	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x40037ec	          0xf6c404	                              test ah, 4	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x40037ef	     0xf85c1faffff	                           jne 0x40032b6	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x40037f5	          0x4c89e7	                            mov rdi, r12	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x40037f8	      0x4889542408	                mov qword [rsp + 8], rdx	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x40037fd	      0xe800000000	                          call 0x4003802	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4003802	      0x488b542408	                mov rdx, qword [rsp + 8]	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003807	          0x4901c7	                            add r15, rax	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x400380a	          0x4889d7	                            mov rdi, rdx	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x400380d	      0xe800000000	                          call 0x4003812	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003812	          0x4989c4	                            mov r12, rax	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003815	      0xe99cfaffff	                           jmp 0x40032b6	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x400381a	    0x660f1f440000	                    nop word [rax + rax]	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003820	    0x488b05000000	            mov rax, qword [0x04003827] 	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003827	          0x4885c0	                           test rax, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x400382a	     0xf8415020000	                            je 0x4003a45	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003830	            0x31db	                            xor ebx, ebx	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003832	    0x660f1f440000	                    nop word [rax + rax]	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003838	          0x4889c7	                            mov rdi, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x400383b	          0x83c301	                              add ebx, 1	      1749	write.c	FUNCTION_27	FOR_1
0x400383e	      0xe800000000	                          call 0x4003843	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003843	          0x4885c0	                           test rax, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003846	            0x75f0	                           jne 0x4003838	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003848	    0x488b3d000000	            mov rdi, qword [0x0400384f] 	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x400384f	          0x4863f3	                         movsxd rsi, ebx	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003852	        0x48c1e603	                              shl rsi, 3	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003856	      0xe800000000	                          call 0x400385b	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x400385b	          0x4989c5	                            mov r13, rax	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x400385e	          0x4889c5	                            mov rbp, rax	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003861	          0x8d43ff	                      lea eax, [rbx - 1]	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003864	    0x4c8b25000000	            mov r12, qword [0x0400386b] 	      1757	write.c	FUNCTION_27	IF_1
0x400386b	      0x4d8d74c508	              lea r14, [r13 + rax*8 + 8]	      1757	write.c	FUNCTION_27	IF_1
0x4003870	            0xeb2c	                           jmp 0x400389e	      1757	write.c	FUNCTION_27	IF_1
0x4003872	    0x660f1f440000	                    nop word [rax + rax]	      1757	write.c	FUNCTION_27	IF_1
0x4003878	          0x83ca20	                            or edx, 0x20	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400387b	          0x895018	             mov dword [rax + 0x18], edx	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400387e	          0x4c89e7	                            mov rdi, r12	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x4003881	        0x4883c508	                              add rbp, 8	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x4003885	      0xe800000000	                          call 0x400388a	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x400388a	          0x4c89e7	                            mov rdi, r12	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x400388d	      0xe800000000	                          call 0x4003892	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003892	          0x4939ee	                            cmp r14, rbp	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003895	          0x4989c4	                            mov r12, rax	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003898	     0xf849e000000	                            je 0x400393c	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x400389e	          0x4c89e7	                            mov rdi, r12	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x40038a1	      0xe800000000	                          call 0x40038a6	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x40038a6	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038a9	        0x48894500	                    mov qword [rbp], rax	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x40038ad	    0x81fa00010000	                          cmp edx, 0x100	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038b3	            0x75c3	                           jne 0x4003878	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038b5	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038b9	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038c0	        0x400f95c7	                               setne dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038c4	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038cb	        0x400f95c6	                               setne sil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038cf	            0x21fe	                            and esi, edi	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038d1	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038d8	        0x400f95c7	                               setne dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038dc	          0x4084fe	                           test sil, dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038df	            0x7409	                            je 0x40038ea	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038e1	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038e8	            0x758e	                           jne 0x4003878	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038ea	    0x483b81f80000	            cmp rax, qword [rcx + 0xf8] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038f1	            0x7585	                           jne 0x4003878	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038f3	            0xeb89	                           jmp 0x400387e	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038f5	           0xf1f00	                         nop dword [rax]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40038f8	          0x4885d2	                           test rdx, rdx	      2089	write.c	FUNCTION_33
0x40038fb	    0x488997900000	             mov qword [rdi + 0x90], rdx	      2089	write.c	FUNCTION_33
0x4003902	     0xf8536f6ffff	                           jne 0x4002f3e	      2089	write.c	FUNCTION_33
0x4003908	     0xf1f84000000	                   nop dword [rax + rax]	      2089	write.c	FUNCTION_33
0x4003910	    0x488987980000	             mov qword [rdi + 0x98], rax	      2089	write.c	FUNCTION_33
0x4003917	      0xe926f6ffff	                           jmp 0x4002f42	      2089	write.c	FUNCTION_33
0x400391c	         0xf1f4000	                         nop dword [rax]	      2089	write.c	FUNCTION_33
0x4003920	    0x488987980000	             mov qword [rdi + 0x98], rax	      2088	write.c	FUNCTION_33
0x4003927	      0xe9edf5ffff	                           jmp 0x4002f19	      2088	write.c	FUNCTION_33
0x400392c	         0xf1f4000	                         nop dword [rax]	      2088	write.c	FUNCTION_33
0x4003930	    0x488997900000	             mov qword [rdi + 0x90], rdx	      2088	write.c	FUNCTION_33
0x4003937	      0xe9d0f5ffff	                           jmp 0x4002f0c	      2088	write.c	FUNCTION_33
0x400393c	            0x89da	                            mov edx, ebx	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x400393e	    0x488b3d000000	            mov rdi, qword [0x04003945] 	      1770	write.c	FUNCTION_27	CALL_6
0x4003945	          0x4c89ee	                            mov rsi, r13	      1770	write.c	FUNCTION_27	CALL_6
0x4003948	      0xe800000000	                          call 0x400394d	      1770	write.c	FUNCTION_27	CALL_6
0x400394d	            0x85c0	                           test eax, eax	      1771	write.c	FUNCTION_27	CALL_7
0x400394f	     0xf84d4020000	                            je 0x4003c29	      1771	write.c	FUNCTION_27	CALL_7
0x4003955	    0xc70500000000	               mov dword [0x0400395f], 1	      1772	write.c	FUNCTION_27
0x400395f	      0xe800000000	                          call 0x4003964	      2447	write.c	FUNCTION_33	CALL_85
0x4003964	    0x488b3d000000	            mov rdi, qword [0x0400396b] 	      2453	write.c	FUNCTION_33	CALL_87
0x400396b	            0x31d2	                            xor edx, edx	      2453	write.c	FUNCTION_33	CALL_87
0x400396d	      0xbe00000000	                              mov esi, 0	      2453	write.c	FUNCTION_33	CALL_87
0x4003972	      0xe800000000	                          call 0x4003977	      2453	write.c	FUNCTION_33	CALL_87
0x4003977	      0xe800000000	                          call 0x400397c	      2459	write.c	FUNCTION_33	CALL_89
0x400397c	    0x8b0500000000	            mov eax, dword [0x04003982] 	      2463	write.c	FUNCTION_33	IF_26
0x4003982	    0x488b3d000000	            mov rdi, qword [0x04003989] 	      2464	write.c	FUNCTION_33	IF_26
0x4003989	            0x85c0	                           test eax, eax	      2463	write.c	FUNCTION_33	IF_26
0x400398b	            0x7407	                            je 0x4003994	      2463	write.c	FUNCTION_33	IF_26
0x400398d	    0x814f44000080	        or dword [rdi + 0x44], 0x1800000	      2464	write.c	FUNCTION_33	IF_26
0x4003994	    0x8b0500000000	            mov eax, dword [0x0400399a] 	      2471	write.c	FUNCTION_33	IF_27
0x400399a	            0x85c0	                           test eax, eax	      2471	write.c	FUNCTION_33	IF_27
0x400399c	            0x741f	                            je 0x40039bd	      2471	write.c	FUNCTION_33	IF_27
0x400399e	          0x83f805	                              cmp eax, 5	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x40039a1	            0x7461	                            je 0x4003a04	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x40039a3	    0x814f44000008	          or dword [rdi + 0x44], 0x80000	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x40039aa	            0x31d2	                            xor edx, edx	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x40039ac	      0xbe00000000	                              mov esi, 0	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x40039b1	      0xe800000000	                          call 0x40039b6	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x40039b6	    0x488b3d000000	            mov rdi, qword [0x040039bd] 	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x40039bd	            0x31d2	                            xor edx, edx	      2480	write.c	FUNCTION_33	CALL_91
0x40039bf	      0xbe00000000	                              mov esi, 0	      2480	write.c	FUNCTION_33	CALL_91
0x40039c4	      0xe800000000	                          call 0x40039c9	      2480	write.c	FUNCTION_33	CALL_91
0x40039c9	      0xe991f9ffff	                           jmp 0x400335f	      2480	write.c	FUNCTION_33	CALL_91
0x40039ce	          0x4889df	                            mov rdi, rbx	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039d1	      0xe800000000	                          call 0x40039d6	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039d6	      0xba05000000	                              mov edx, 5	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039db	          0x4889c5	                            mov rbp, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039de	            0x31ff	                            xor edi, edi	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039e0	      0xbe00000000	                              mov esi, 0	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039e5	      0xe800000000	                          call 0x40039ea	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039ea	          0x4889ee	                            mov rsi, rbp	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039ed	          0x4889c7	                            mov rdi, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039f0	            0x31c0	                            xor eax, eax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039f2	      0xe800000000	                          call 0x40039f7	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40039f7	          0x4889df	                            mov rdi, rbx	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x40039fa	      0xe800000000	                          call 0x40039ff	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x40039ff	      0xe9fafcffff	                           jmp 0x40036fe	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x4003a04	    0x814f44000048	         or dword [rdi + 0x44], 0x480000	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4003a0b	            0xeb9d	                           jmp 0x40039aa	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4003a0d	        0x488b0424	                    mov rax, qword [rsp]	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003a11	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003a15	     0xf859bf8ffff	                           jne 0x40032b6	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003a1b	      0xe9aefdffff	                           jmp 0x40037ce	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003a20	          0x4889df	                            mov rdi, rbx	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003a23	      0xe800000000	                          call 0x4003a28	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003a28	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003a2a	     0xf84befcffff	                            je 0x40036ee	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003a30	          0x4889df	                            mov rdi, rbx	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003a33	      0xe800000000	                          call 0x4003a38	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003a38	            0x85c0	                           test eax, eax	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003a3a	     0xf849efcffff	                            je 0x40036de	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003a40	      0xe9a9fcffff	                           jmp 0x40036ee	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003a45	            0x31d2	                            xor edx, edx	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003a47	          0x4531ed	                          xor r13d, r13d	      1769	write.c	FUNCTION_27	ELSE_1
0x4003a4a	      0xe9effeffff	                           jmp 0x400393e	      1769	write.c	FUNCTION_27	ELSE_1
0x4003a4f	      0xbe00000000	                              mov esi, 0	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003a54	          0x4889df	                            mov rdi, rbx	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003a57	      0xe800000000	                          call 0x4003a5c	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003a5c	          0x4885c0	                           test rax, rax	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003a5f	     0xf8439010000	                            je 0x4003b9e	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003a65	    0x833d00000000	               cmp dword [0x04003a6c], 1	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a6c	    0x48c704241c00	                   mov qword [rsp], 0x1c	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a74	    0x41bb10000000	                          mov r11d, 0x10	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a7a	    0x41be24000000	                          mov r14d, 0x24	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a80	          0x4519ed	                          sbb r13d, r13d	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a83	          0x41f7d5	                                not r13d	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a86	    0x4181c5a90500	                         add r13d, 0x5a9	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a8d	      0xe973fbffff	                           jmp 0x4003605	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003a92	          0x4889df	                            mov rdi, rbx	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003a95	      0xe800000000	                          call 0x4003a9a	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003a9a	      0xbf00000000	                              mov edi, 0	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003a9f	      0xb90d000000	                            mov ecx, 0xd	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003aa4	          0x4889c6	                            mov rsi, rax	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003aa7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003aa9	     0xf84aafbffff	                            je 0x4003659	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003aaf	      0xe800000000	                          call 0x4003ab4	      2017	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_13
0x4003ab4	          0x4c89f7	                            mov rdi, r14	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x4003ab7	      0xe800000000	                          call 0x4003abc	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x4003abc	          0x4989c4	                            mov r12, rax	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x4003abf	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4003ac6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_44	CALL_6
0x4003acb	      0x498d4c2408	                      lea rcx, [r12 + 8]	        90	string3.h	FUNCTION_44	CALL_6
0x4003ad0	            0x31d2	                            xor edx, edx	        90	string3.h	FUNCTION_44	CALL_6
0x4003ad2	    0x49c74404f800	            mov qword [r12 + rax - 8], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4003adb	        0x4883e1f8	             and rcx, 0xfffffffffffffff8	        90	string3.h	FUNCTION_44	CALL_6
0x4003adf	          0x4c89e0	                            mov rax, r12	        90	string3.h	FUNCTION_44	CALL_6
0x4003ae2	          0x4829c8	                            sub rax, rcx	        90	string3.h	FUNCTION_44	CALL_6
0x4003ae5	          0x4401f0	                           add eax, r14d	        90	string3.h	FUNCTION_44	CALL_6
0x4003ae8	          0x83e0f8	                     and eax, 0xfffffff8	        90	string3.h	FUNCTION_44	CALL_6
0x4003aeb	            0x89d6	                            mov esi, edx	        90	string3.h	FUNCTION_44	CALL_6
0x4003aed	          0x83c208	                              add edx, 8	        90	string3.h	FUNCTION_44	CALL_6
0x4003af0	            0x39c2	                            cmp edx, eax	        90	string3.h	FUNCTION_44	CALL_6
0x4003af2	    0x48c704310000	                mov qword [rcx + rsi], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4003afa	            0x72ef	                            jb 0x4003aeb	        90	string3.h	FUNCTION_44	CALL_6
0x4003afc	    0x8b0d00000000	            mov ecx, dword [0x04003b02] 	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003b02	            0x85c9	                           test ecx, ecx	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003b04	     0xf8404010000	                            je 0x4003c0e	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003b0a	    0x41c644240308	                   mov byte [r12 + 3], 8	      2023	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003b10	      0x45887c2407	                mov byte [r12 + 7], r15b	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003b15	    0x41c644240a01	                 mov byte [r12 + 0xa], 1	      2025	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003b1b	    0x41c644240b00	                 mov byte [r12 + 0xb], 0	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003b21	    0x48b847412401	            movabs rax, 0x31613301244147	        53	string3.h	FUNCTION_41	CALL_3
0x4003b2b	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b2f	          0x4d89e1	                             mov r9, r12	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b32	      0x498944240c	              mov qword [r12 + 0xc], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003b37	        0x488d4308	                      lea rax, [rbx + 8]	        53	string3.h	FUNCTION_41	CALL_3
0x4003b3b	          0x4531c0	                            xor r8d, r8d	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b3e	      0xba14000000	                           mov edx, 0x14	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b43	          0x4889ef	                            mov rdi, rbp	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b46	          0x4d01f5	                            add r13, r14	      2048	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003b49	          0x4889c6	                            mov rsi, rax	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b4c	      0x4889442418	             mov qword [rsp + 0x18], rax	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b51	      0xe8faddffff	       call sym.create_note_reloc.isra.4	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003b56	        0x488b5308	                mov rdx, qword [rbx + 8]	      2045	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003b5a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b5f	          0x4d89e1	                             mov r9, r12	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b62	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b66	          0x4889ef	                            mov rdi, rbp	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b69	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b6d	          0x4889c6	                            mov rsi, rax	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b70	        0x4c8b4238	              mov r8, qword [rdx + 0x38]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b74	        0x488b1424	                    mov rdx, qword [rsp]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b78	      0xe8d3ddffff	       call sym.create_note_reloc.isra.4	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b7d	      0xe9d7faffff	                           jmp 0x4003659	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003b82	    0x488b3d000000	            mov rdi, qword [0x04003b89] 	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003b89	          0x4d89e8	                             mov r8, r13	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003b8c	            0x31c9	                            xor ecx, ecx	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003b8e	          0x4c89e2	                            mov rdx, r12	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003b91	          0x4889ee	                            mov rsi, rbp	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003b94	      0xe800000000	                          call 0x4003b99	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003b99	      0xe9cdfaffff	                           jmp 0x400366b	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003b9e	      0xbe00000000	                              mov esi, 0	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ba3	          0x4889df	                            mov rdi, rbx	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ba6	    0x41be24000000	                          mov r14d, 0x24	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bac	      0xe800000000	                          call 0x4003bb1	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003bb1	        0x4883f801	                              cmp rax, 1	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bb5	    0x48c704241c00	                   mov qword [rsp], 0x1c	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bbd	    0x41bb10000000	                          mov r11d, 0x10	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bc3	          0x4519ed	                          sbb r13d, r13d	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bc6	        0x4183e5b1	                    and r13d, 0xffffffb1	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bca	        0x4183c550	                          add r13d, 0x50	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bce	      0xe932faffff	                           jmp 0x4003605	      1997	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6
0x4003bd3	      0xbe00000000	                              mov esi, 0	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003bd8	          0x4889df	                            mov rdi, rbx	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003bdb	    0x41be1c000000	                          mov r14d, 0x1c	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003be1	      0xe800000000	                          call 0x4003be6	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4003be6	        0x4883f801	                              cmp rax, 1	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003bea	    0x48c704241800	                   mov qword [rsp], 0x18	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003bf2	    0x41bb08000000	                             mov r11d, 8	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003bf8	          0x4519ed	                          sbb r13d, r13d	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003bfb	    0x4181e5c8f9ff	                    and r13d, 0xfffff9c8	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003c02	    0x4181c53a0600	                         add r13d, 0x63a	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003c09	      0xe9f7f9ffff	                           jmp 0x4003605	      1981	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	ELSE_1
0x4003c0e	      0x41c6042408	                       mov byte [r12], 8	      2030	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003c13	      0x45887c2404	                mov byte [r12 + 4], r15b	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003c18	    0x41c644240800	                   mov byte [r12 + 8], 0	      2032	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003c1e	    0x41c644240901	                   mov byte [r12 + 9], 1	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003c24	      0xe9f8feffff	                           jmp 0x4003b21	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003c29	      0xba00000000	                              mov edx, 0	      1771	write.c	FUNCTION_27	CALL_7
0x4003c2e	      0xbeeb060000	                          mov esi, 0x6eb	      1771	write.c	FUNCTION_27	CALL_7
0x4003c33	      0xbf00000000	                              mov edi, 0	      1771	write.c	FUNCTION_27	CALL_7
0x4003c38	      0xe800000000	                          call 0x4003c3d	      1771	write.c	FUNCTION_27	CALL_7
0x4003c3d	      0xe800000000	                          call 0x4003c42	      2481	write.c	FUNCTION_33
fix_new	FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:WHILE,0:IF,0:ELSE,0	10
0x4001aa0	        0x4883ec10	                           sub rsp, 0x10	       238	write.c	ELSE_2	FUNCTION_2
0x4001aa4	            0x6a00	                                  push 0	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001aa6	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001aaa	              0x50	                                push rax	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001aab	            0x4151	                                 push r9	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001aad	          0x4d89c1	                              mov r9, r8	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001ab0	          0x4531c0	                            xor r8d, r8d	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001ab3	      0xe898e5ffff	               call sym.fix_new_internal	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001ab8	        0x4883c428	                           add rsp, 0x28	       241	write.c	ELSE_2	FUNCTION_2
0x4001abc	              0xc3	                                     ret	       241	write.c	ELSE_2	FUNCTION_2
record_alignment	FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:WHILE,0:IF,2:ELSE,0	6
0x4002340	    0x4881ff000000	                              cmp rdi, 0	       361	write.c	FUNCTION_7	IF_1
0x4002347	            0x7408	                            je 0x4002351	       361	write.c	FUNCTION_7	IF_1
0x4002349	          0x397770	            cmp dword [rdi + 0x70], esi 	       364	write.c	FUNCTION_7	IF_2
0x400234c	            0x7303	                           jae 0x4002351	       364	write.c	FUNCTION_7	IF_2
0x400234e	          0x897770	             mov dword [rdi + 0x70], esi	      1696	bfd.h	FUNCTION_55
0x4002351	            0xf3c3	                                     ret	      1696	bfd.h	FUNCTION_55
fix_at_start	FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:WHILE,0:IF,0:ELSE,0	12
0x4001c00	        0x4883ec10	                           sub rsp, 0x10	       318	write.c	FUNCTION_4
0x4001c04	            0x6a01	                                  push 1	       319	write.c	FUNCTION_4	CALL_1
0x4001c06	            0x4151	                                 push r9	       319	write.c	FUNCTION_4	CALL_1
0x4001c08	          0x4989c9	                             mov r9, rcx	       319	write.c	FUNCTION_4	CALL_1
0x4001c0b	            0x4150	                                 push r8	       319	write.c	FUNCTION_4	CALL_1
0x4001c0d	          0x4889d1	                            mov rcx, rdx	       319	write.c	FUNCTION_4	CALL_1
0x4001c10	          0x4531c0	                            xor r8d, r8d	       319	write.c	FUNCTION_4	CALL_1
0x4001c13	            0x89f2	                            mov edx, esi	       319	write.c	FUNCTION_4	CALL_1
0x4001c15	            0x31f6	                            xor esi, esi	       319	write.c	FUNCTION_4	CALL_1
0x4001c17	      0xe834e4ffff	               call sym.fix_new_internal	       319	write.c	FUNCTION_4	CALL_1
0x4001c1c	        0x4883c428	                           add rsp, 0x28	       321	write.c	FUNCTION_4
0x4001c20	              0xc3	                                     ret	       321	write.c	FUNCTION_4
write_relocs	FOR,5:DO,0:SWITCH,0:functions,0:CALL,14:WHILE,4:IF,12:ELSE,1	186
0x40016b0	            0x4157	                                push r15	      1221	write.c	FUNCTION_21
0x40016b2	            0x4156	                                push r14	      1221	write.c	FUNCTION_21
0x40016b4	            0x4155	                                push r13	      1221	write.c	FUNCTION_21
0x40016b6	            0x4154	                                push r12	      1221	write.c	FUNCTION_21
0x40016b8	              0x55	                                push rbp	      1221	write.c	FUNCTION_21
0x40016b9	              0x53	                                push rbx	      1221	write.c	FUNCTION_21
0x40016ba	        0x4883ec38	                           sub rsp, 0x38	      1221	write.c	FUNCTION_21
0x40016be	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1222	write.c	FUNCTION_21	CALL_1
0x40016c5	          0x4885c0	                           test rax, rax	      1231	write.c	FUNCTION_21	IF_1
0x40016c8	      0x4889442410	             mov qword [rsp + 0x10], rax	      1222	write.c	FUNCTION_21	CALL_1
0x40016cd	     0xf84c6010000	                            je 0x4001899	      1231	write.c	FUNCTION_21	IF_1
0x40016d3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1235	write.c	FUNCTION_21	FOR_1
0x40016d7	            0x31c9	                            xor ecx, ecx	      1235	write.c	FUNCTION_21	FOR_1
0x40016d9	          0x4885c0	                           test rax, rax	      1235	write.c	FUNCTION_21	FOR_1
0x40016dc	            0x7417	                            je 0x40016f5	      1235	write.c	FUNCTION_21	FOR_1
0x40016de	            0x6690	                                     nop	      1235	write.c	FUNCTION_21	FOR_1
0x40016e0	           0xfb610	                   movzx edx, byte [rax]	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x40016e3	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1235	write.c	FUNCTION_21	FOR_1
0x40016e7	          0x83e220	                           and edx, 0x20	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x40016ea	          0x80fa01	                               cmp dl, 1	      1237	write.c	FUNCTION_21	FOR_1	IF_2
0x40016ed	          0x83d100	                              adc ecx, 0	      1237	write.c	FUNCTION_21	FOR_1	IF_2
0x40016f0	          0x4885c0	                           test rax, rax	      1235	write.c	FUNCTION_21	FOR_1
0x40016f3	            0x75eb	                           jne 0x40016e0	      1235	write.c	FUNCTION_21	FOR_1
0x40016f5	      0xba00000000	                              mov edx, 0	      1235	write.c	FUNCTION_21	FOR_1
0x40016fa	          0x4531ff	                          xor r15d, r15d	      1235	write.c	FUNCTION_21	FOR_1
0x40016fd	          0x488b02	                    mov rax, qword [rdx]	      1246	write.c	FUNCTION_21	WHILE_1
0x4001700	          0x4885c0	                           test rax, rax	      1246	write.c	FUNCTION_21	WHILE_1
0x4001703	            0x7415	                            je 0x400171a	      1246	write.c	FUNCTION_21	WHILE_1
0x4001705	        0x483b7008	                cmp rsi, qword [rax + 8]	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x4001709	     0xf84a1010000	                            je 0x40018b0	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x400170f	          0x4889c2	                            mov rdx, rax	      1256	write.c	FUNCTION_21	WHILE_1	ELSE_1
0x4001712	          0x488b02	                    mov rax, qword [rdx]	      1246	write.c	FUNCTION_21	WHILE_1
0x4001715	          0x4885c0	                           test rax, rax	      1246	write.c	FUNCTION_21	WHILE_1
0x4001718	            0x75eb	                           jne 0x4001705	      1246	write.c	FUNCTION_21	WHILE_1
0x400171a	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1246	write.c	FUNCTION_21	WHILE_1
0x400171f	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      1246	write.c	FUNCTION_21	WHILE_1
0x4001724	      0xbe08000000	                              mov esi, 8	      1259	write.c	FUNCTION_21	CALL_2
0x4001729	            0x89cf	                            mov edi, ecx	      1259	write.c	FUNCTION_21	CALL_2
0x400172b	            0x31db	                            xor ebx, ebx	      1264	write.c	FUNCTION_21	FOR_2
0x400172d	          0x4531ed	                          xor r13d, r13d	      1264	write.c	FUNCTION_21	FOR_2
0x4001730	      0xe800000000	                          call 0x4001735	      1259	write.c	FUNCTION_21	CALL_2
0x4001735	      0x4889442420	             mov qword [rsp + 0x20], rax	      1259	write.c	FUNCTION_21	CALL_2
0x400173a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1264	write.c	FUNCTION_21	FOR_2
0x400173f	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1264	write.c	FUNCTION_21	FOR_2
0x4001743	          0x4885ed	                           test rbp, rbp	      1264	write.c	FUNCTION_21	FOR_2
0x4001746	     0xf84f6010000	                            je 0x4001942	      1264	write.c	FUNCTION_21	FOR_2
0x400174c	         0xf1f4000	                         nop dword [rax]	      1264	write.c	FUNCTION_21	FOR_2
0x4001750	        0xf6450020	                   test byte [rbp], 0x20	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x4001754	     0xf85d8000000	                           jne 0x4001832	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x400175a	        0x488b5508	                mov rdx, qword [rbp + 8]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x400175e	         0xfb64502	               movzx eax, byte [rbp + 2]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4001762	        0x48034510	             add rax, qword [rbp + 0x10]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4001766	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x400176a	     0xf8f58010000	                            jg 0x40018c8	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4001770	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4001775	          0x4889ee	                            mov rsi, rbp	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4001778	      0xe800000000	                          call 0x400177d	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x400177d	          0x4885c0	                           test rax, rax	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4001780	          0x4989c4	                            mov r12, rax	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4001783	     0xf84a9000000	                            je 0x4001832	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4001789	          0x4d85ff	                           test r15, r15	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400178c	     0xf84a8010000	                            je 0x400193a	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001792	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001796	      0x4939442408	                cmp qword [r12 + 8], rax	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400179b	          0x4589ee	                          mov r14d, r13d	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400179e	            0x7713	                            ja 0x40017b3	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40017a0	            0xeb67	                           jmp 0x4001809	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40017a2	    0x660f1f440000	                    nop word [rax + rax]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40017a8	      0x498b442408	                mov rax, qword [r12 + 8]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40017ad	        0x49394720	            cmp qword [r15 + 0x20], rax 	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40017b1	            0x7356	                           jae 0x4001809	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40017b3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x40017b8	          0x4c89fa	                            mov rdx, r15	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x40017bb	          0x4889df	                            mov rdi, rbx	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x40017be	      0xe83dfeffff	      call sym.get_frag_for_reloc.isra.2	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x40017c3	          0x4885c0	                           test rax, rax	      1298	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017c6	            0x7439	                            je 0x4001801	      1298	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017c8	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017cd	        0x498d7718	                   lea rsi, [r15 + 0x18]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017d1	          0x4489f1	                           mov ecx, r14d	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017d4	        0x458b4740	            mov r8d, dword [r15 + 0x40] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40017d8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40017dd	          0x4889c2	                            mov rdx, rax	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40017e0	      0x4889442408	                mov qword [rsp + 8], rax	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40017e5	        0x458d6e01	                     lea r13d, [r14 + 1]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017e9	        0x488934cb	            mov qword [rbx + rcx*8], rsi	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017ed	        0x498b4f38	            mov rcx, qword [r15 + 0x38] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40017f1	          0x4589ee	                          mov r14d, r13d	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017f4	      0xe867f0ffff	                  call sym.install_reloc	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40017f9	      0x488b442408	                mov rax, qword [rsp + 8]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x40017fe	          0x4889c3	                            mov rbx, rax	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4001801	          0x4d8b3f	                    mov r15, qword [r15]	      1304	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001804	          0x4d85ff	                           test r15, r15	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001807	            0x759f	                           jne 0x40017a8	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001809	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x400180e	          0x4489f1	                           mov ecx, r14d	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4001811	        0x448b4568	            mov r8d, dword [rbp + 0x68] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4001815	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x400181a	          0x4c89e6	                            mov rsi, r12	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x400181d	        0x458d6e01	                     lea r13d, [r14 + 1]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4001821	        0x4c8924c8	            mov qword [rax + rcx*8], r12	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4001825	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4001829	        0x488b5508	                mov rdx, qword [rbp + 8]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x400182d	      0xe82ef0ffff	                  call sym.install_reloc	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4001832	        0x488b6d40	            mov rbp, qword [rbp + 0x40] 	      1264	write.c	FUNCTION_21	FOR_2
0x4001836	          0x4885ed	                           test rbp, rbp	      1264	write.c	FUNCTION_21	FOR_2
0x4001839	     0xf8511ffffff	                           jne 0x4001750	      1264	write.c	FUNCTION_21	FOR_2
0x400183f	          0x4d85ff	                           test r15, r15	      1317	write.c	FUNCTION_21	WHILE_4
0x4001842	            0x7450	                            je 0x4001894	      1317	write.c	FUNCTION_21	WHILE_4
0x4001844	         0xf1f4000	                         nop dword [rax]	      1317	write.c	FUNCTION_21	WHILE_4
0x4001848	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x400184d	          0x4c89fa	                            mov rdx, r15	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4001850	          0x4889df	                            mov rdi, rbx	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4001853	      0xe8a8fdffff	      call sym.get_frag_for_reloc.isra.2	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4001858	          0x4885c0	                           test rax, rax	      1320	write.c	FUNCTION_21	WHILE_4	IF_8
0x400185b	          0x4989c4	                            mov r12, rax	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x400185e	            0x742c	                            je 0x400188c	      1320	write.c	FUNCTION_21	WHILE_4	IF_8
0x4001860	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4001865	        0x498d7718	                   lea rsi, [r15 + 0x18]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4001869	        0x418d6d01	                      lea ebp, [r13 + 1]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x400186d	        0x458b4740	            mov r8d, dword [r15 + 0x40] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001871	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001876	          0x4c89e2	                            mov rdx, r12	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001879	          0x4c89e3	                            mov rbx, r12	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x400187c	        0x4a8934e8	            mov qword [rax + r13*8], rsi	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4001880	        0x498b4f38	            mov rcx, qword [r15 + 0x38] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001884	          0x4189ed	                           mov r13d, ebp	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4001887	      0xe8d4efffff	                  call sym.install_reloc	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x400188c	          0x4d8b3f	                    mov r15, qword [r15]	      1326	write.c	FUNCTION_21	WHILE_4
0x400188f	          0x4d85ff	                           test r15, r15	      1317	write.c	FUNCTION_21	WHILE_4
0x4001892	            0x75b4	                           jne 0x4001848	      1317	write.c	FUNCTION_21	WHILE_4
0x4001894	          0x4585ed	                         test r13d, r13d	      1347	write.c	FUNCTION_21	IF_12
0x4001897	            0x7556	                           jne 0x40018ef	      1347	write.c	FUNCTION_21	IF_12
0x4001899	        0x4883c438	                           add rsp, 0x38	      1374	write.c	FUNCTION_21
0x400189d	              0x5b	                                 pop rbx	      1374	write.c	FUNCTION_21
0x400189e	              0x5d	                                 pop rbp	      1374	write.c	FUNCTION_21
0x400189f	            0x415c	                                 pop r12	      1374	write.c	FUNCTION_21
0x40018a1	            0x415d	                                 pop r13	      1374	write.c	FUNCTION_21
0x40018a3	            0x415e	                                 pop r14	      1374	write.c	FUNCTION_21
0x40018a5	            0x415f	                                 pop r15	      1374	write.c	FUNCTION_21
0x40018a7	              0xc3	                                     ret	      1374	write.c	FUNCTION_21
0x40018a8	     0xf1f84000000	                   nop dword [rax + rax]	      1374	write.c	FUNCTION_21
0x40018b0	          0x4c8b00	                     mov r8, qword [rax]	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x40018b3	          0x83c101	                              add ecx, 1	      1253	write.c	FUNCTION_21	WHILE_1	IF_3
0x40018b6	          0x4c8902	                     mov qword [rdx], r8	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x40018b9	          0x4c8938	                    mov qword [rax], r15	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x40018bc	          0x4989c7	                            mov r15, rax	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x40018bf	      0xe939feffff	                           jmp 0x40016fd	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x40018c4	         0xf1f4000	                         nop dword [rax]	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x40018c8	            0x31ff	                            xor edi, edi	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x40018ca	      0xba05000000	                              mov edx, 5	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x40018cf	      0xbe00000000	                              mov esi, 0	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x40018d4	      0xe800000000	                          call 0x40018d9	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x40018d9	          0x8b7568	            mov esi, dword [rbp + 0x68] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x40018dc	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x40018e0	          0x4889c2	                            mov rdx, rax	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x40018e3	            0x31c0	                            xor eax, eax	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x40018e5	      0xe800000000	                          call 0x40018ea	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x40018ea	      0xe981feffff	                           jmp 0x4001770	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x40018ef	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1349	write.c	FUNCTION_21	IF_12
0x40018f4	          0x8b7b20	            mov edi, dword [rbx + 0x20] 	      1349	write.c	FUNCTION_21	IF_12
0x40018f7	          0x4889de	                            mov rsi, rbx	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x40018fa	        0x897c2408	                mov dword [rsp + 8], edi	      1349	write.c	FUNCTION_21	IF_12
0x40018fe	            0x89fa	                            mov edx, edi	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4001900	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4001905	          0x83ca04	                               or edx, 4	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4001908	      0xe800000000	                          call 0x400190d	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x400190d	    0x488b3d000000	            mov rdi, qword [0x04001914] 	      1352	write.c	FUNCTION_21	IF_12
0x4001914	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1352	write.c	FUNCTION_21	IF_12
0x4001919	          0x4489e9	                           mov ecx, r13d	      1352	write.c	FUNCTION_21	IF_12
0x400191c	          0x4889de	                            mov rsi, rbx	      1352	write.c	FUNCTION_21	IF_12
0x400191f	        0x488b4708	                mov rax, qword [rdi + 8]	      1352	write.c	FUNCTION_21	IF_12
0x4001923	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      1352	write.c	FUNCTION_21	IF_12
0x400192a	        0x4883c438	                           add rsp, 0x38	      1374	write.c	FUNCTION_21
0x400192e	              0x5b	                                 pop rbx	      1374	write.c	FUNCTION_21
0x400192f	              0x5d	                                 pop rbp	      1374	write.c	FUNCTION_21
0x4001930	            0x415c	                                 pop r12	      1374	write.c	FUNCTION_21
0x4001932	            0x415d	                                 pop r13	      1374	write.c	FUNCTION_21
0x4001934	            0x415e	                                 pop r14	      1374	write.c	FUNCTION_21
0x4001936	            0x415f	                                 pop r15	      1374	write.c	FUNCTION_21
0x4001938	            0xffe0	                                 jmp rax	      1352	write.c	FUNCTION_21	IF_12
0x400193a	          0x4589ee	                          mov r14d, r13d	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400193d	      0xe9c7feffff	                           jmp 0x4001809	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001942	          0x4d85ff	                           test r15, r15	      1317	write.c	FUNCTION_21	WHILE_4
0x4001945	     0xf85fdfeffff	                           jne 0x4001848	      1317	write.c	FUNCTION_21	WHILE_4
0x400194b	      0xe949ffffff	                           jmp 0x4001899	      1317	write.c	FUNCTION_21	WHILE_4
write_print_statistics	FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:WHILE,0:IF,0:ELSE,0	5
0x4003ce0	    0x8b0d00000000	            mov ecx, dword [0x04003ce6] 	        97	stdio2.h	CALL_375
0x4003ce6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003ceb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003cf0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003cf2	      0xe900000000	                           jmp 0x4003cf7	        97	stdio2.h	CALL_375
fix_segment	FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:WHILE,0:IF,0:ELSE,0	381
0x4001c80	            0x4157	                                push r15	      1151	write.c	FUNCTION_18
0x4001c82	            0x4156	                                push r14	      1151	write.c	FUNCTION_18
0x4001c84	            0x4155	                                push r13	      1151	write.c	FUNCTION_18
0x4001c86	            0x4154	                                push r12	      1151	write.c	FUNCTION_18
0x4001c88	              0x55	                                push rbp	      1151	write.c	FUNCTION_18
0x4001c89	              0x53	                                push rbx	      1151	write.c	FUNCTION_18
0x4001c8a	    0x4881eca80000	                           sub rsp, 0xa8	      1151	write.c	FUNCTION_18
0x4001c91	    0x64488b042528	                mov rax, qword fs:[0x28]	      1151	write.c	FUNCTION_18
0x4001c9a	    0x488984249800	             mov qword [rsp + 0x98], rax	      1151	write.c	FUNCTION_18
0x4001ca2	            0x31c0	                            xor eax, eax	      1151	write.c	FUNCTION_18
0x4001ca4	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1154	write.c	FUNCTION_18	CALL_2
0x4001cab	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      1154	write.c	FUNCTION_18	CALL_2
0x4001caf	          0x4d85f6	                           test r14, r14	       923	write.c	FUNCTION_17	IF_1
0x4001cb2	            0x744b	                            je 0x4001cff	       923	write.c	FUNCTION_17	IF_1
0x4001cb4	    0x48833d000000	               cmp qword [0x04001cbc], 0	       923	write.c	FUNCTION_17	IF_1
0x4001cbc	          0x4889f5	                            mov rbp, rsi	       923	write.c	FUNCTION_17	IF_1
0x4001cbf	     0xf84c1050000	                            je 0x4002286	       923	write.c	FUNCTION_17	IF_1
0x4001cc5	    0x8b0500000000	            mov eax, dword [0x04001ccb] 	       930	write.c	FUNCTION_17	IF_2
0x4001ccb	            0x85c0	                           test eax, eax	       930	write.c	FUNCTION_17	IF_2
0x4001ccd	            0x7461	                            je 0x4001d30	       930	write.c	FUNCTION_17	IF_2
0x4001ccf	              0x90	                                     nop	       930	write.c	FUNCTION_17	IF_2
0x4001cd0	        0x41f60620	                   test byte [r14], 0x20	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001cd4	            0x7520	                           jne 0x4001cf6	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001cd6	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001cda	          0x4885ff	                           test rdi, rdi	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001cdd	     0xf8415050000	                            je 0x40021f8	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001ce3	      0xe800000000	                          call 0x4001ce8	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x4001ce8	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x4001cec	          0x4885ff	                           test rdi, rdi	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x4001cef	            0x7405	                            je 0x4001cf6	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x4001cf1	      0xe800000000	                          call 0x4001cf6	       945	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_3
0x4001cf6	        0x4d8b7640	            mov r14, qword [r14 + 0x40] 	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001cfa	          0x4d85f6	                           test r14, r14	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001cfd	            0x75d1	                           jne 0x4001cd0	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001cff	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1155	write.c	FUNCTION_18
0x4001d07	    0x644833042528	                xor rax, qword fs:[0x28]	      1155	write.c	FUNCTION_18
0x4001d10	     0xf85e9050000	                           jne 0x40022ff	      1155	write.c	FUNCTION_18
0x4001d16	    0x4881c4a80000	                           add rsp, 0xa8	      1155	write.c	FUNCTION_18
0x4001d1d	              0x5b	                                 pop rbx	      1155	write.c	FUNCTION_18
0x4001d1e	              0x5d	                                 pop rbp	      1155	write.c	FUNCTION_18
0x4001d1f	            0x415c	                                 pop r12	      1155	write.c	FUNCTION_18
0x4001d21	            0x415d	                                 pop r13	      1155	write.c	FUNCTION_18
0x4001d23	            0x415e	                                 pop r14	      1155	write.c	FUNCTION_18
0x4001d25	            0x415f	                                 pop r15	      1155	write.c	FUNCTION_18
0x4001d27	              0xc3	                                     ret	      1155	write.c	FUNCTION_18
0x4001d28	     0xf1f84000000	                   nop dword [rax + rax]	      1155	write.c	FUNCTION_18
0x4001d30	        0x4d8b6608	                mov r12, qword [r14 + 8]	       957	write.c	FUNCTION_17	FOR_2
0x4001d34	          0x4d85e4	                           test r12, r12	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001d37	     0xf849c050000	                            je 0x40022d9	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001d3d	      0xbb00000000	                              mov ebx, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001d42	      0xe933010000	                           jmp 0x4001e7a	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001d47	    0x660f1f840000	                    nop word [rax + rax]	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001d50	      0xe800000000	                          call 0x4001d55	       965	write.c	FUNCTION_17	FOR_2	CALL_7
0x4001d55	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001d59	          0x4889c3	                            mov rbx, rax	       965	write.c	FUNCTION_17	FOR_2	CALL_7
0x4001d5c	          0x4885ff	                           test rdi, rdi	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001d5f	     0xf84c5000000	                            je 0x4001e2a	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001d65	      0xe800000000	                          call 0x4001d6a	       970	write.c	FUNCTION_17	FOR_2	IF_7	CALL_8
0x4001d6a	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x4001d6e	      0xe800000000	                          call 0x4001d73	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x4001d73	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       972	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001d77	          0x4989c5	                            mov r13, rax	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x4001d7a	          0x4885ff	                           test rdi, rdi	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001d7d	            0x7409	                            je 0x4001d88	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001d7f	          0x4839d8	                            cmp rax, rbx	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001d82	     0xf84d8030000	                            je 0x4002160	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001d88	    0x4981fd000000	                              cmp r13, 0	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001d8f	     0xf846b020000	                            je 0x4002000	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001d95	          0x4c39ed	                            cmp rbp, r13	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001d98	     0xf8452030000	                            je 0x40020f0	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001d9e	    0x488b15000000	            mov rdx, qword [0x04001da5] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001da5	          0x4839da	                            cmp rdx, rbx	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001da8	     0xf8482020000	                            je 0x4002030	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001dae	        0x418b4650	            mov eax, dword [r14 + 0x50] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001db2	          0x83e845	                           sub eax, 0x45	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001db5	          0x83f801	                              cmp eax, 1	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001db8	            0x7670	                           jbe 0x4001e2a	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001dba	          0x4939d5	                            cmp r13, rdx	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001dbd	     0xf846d020000	                            je 0x4002030	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001dc3	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001dc7	        0x4d8b7d00	                    mov r15, qword [r13]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001dcb	      0xe800000000	                          call 0x4001dd0	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001dd0	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1030	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_22
0x4001dd4	        0x48890424	                    mov qword [rsp], rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001dd8	      0xb900000000	                              mov ecx, 0	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001ddd	          0x4c8b2b	                    mov r13, qword [rbx]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001de0	          0x4885ff	                           test rdi, rdi	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001de3	            0x7408	                            je 0x4001ded	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001de5	      0xe800000000	                          call 0x4001dea	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001dea	          0x4889c1	                            mov rcx, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001ded	      0xba05000000	                              mov edx, 5	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001df2	      0xbe00000000	                              mov esi, 0	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001df7	            0x31ff	                            xor edi, edi	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001df9	      0x48894c2408	                mov qword [rsp + 8], rcx	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001dfe	      0xe800000000	                          call 0x4001e03	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001e03	        0x4883ec08	                              sub rsp, 8	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e07	        0x418b7668	            mov esi, dword [r14 + 0x68] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e0b	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e0f	            0x4157	                                push r15	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e11	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e16	          0x4889c2	                            mov rdx, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e19	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e1e	          0x4d89e8	                             mov r8, r13	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e21	            0x31c0	                            xor eax, eax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e23	      0xe800000000	                          call 0x4001e28	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e28	              0x5a	                                 pop rdx	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e29	              0x59	                                 pop rcx	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001e2a	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001e2e	          0x4885ff	                           test rdi, rdi	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001e31	            0x7416	                            je 0x4001e49	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001e33	          0x4839dd	                            cmp rbp, rbx	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001e36	     0xf8484020000	                            je 0x40020c0	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001e3c	    0x4881fb000000	                              cmp rbx, 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001e43	     0xf8427020000	                            je 0x4002070	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001e49	        0x410fb606	                   movzx eax, byte [r14]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e4d	            0xa801	                              test al, 1	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e4f	            0x755f	                           jne 0x4001eb0	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e51	            0xa820	                           test al, 0x20	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001e53	            0x7479	                            je 0x4001ece	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001e55	      0x49837e4800	               cmp qword [r14 + 0x48], 0	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e5a	     0xf84b7000000	                            je 0x4001f17	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e60	        0x4d8b7640	            mov r14, qword [r14 + 0x40] 	       950	write.c	FUNCTION_17	FOR_2
0x4001e64	          0x4d85f6	                           test r14, r14	       950	write.c	FUNCTION_17	FOR_2
0x4001e67	     0xf8492feffff	                            je 0x4001cff	       950	write.c	FUNCTION_17	FOR_2
0x4001e6d	        0x4d8b6608	                mov r12, qword [r14 + 8]	       957	write.c	FUNCTION_17	FOR_2
0x4001e71	          0x4d85e4	                           test r12, r12	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001e74	     0xf845f040000	                            je 0x40022d9	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001e7a	          0x4c89f7	                            mov rdi, r14	       960	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001e7d	      0xe800000000	                          call 0x4001e82	       960	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001e82	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001e86	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       962	write.c	FUNCTION_17	FOR_2
0x4001e8a	          0x4885ff	                           test rdi, rdi	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001e8d	      0x4889442418	             mov qword [rsp + 0x18], rax	       962	write.c	FUNCTION_17	FOR_2
0x4001e92	     0xf85b8feffff	                           jne 0x4001d50	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001e98	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001e9c	          0x4885ff	                           test rdi, rdi	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001e9f	     0xf85c0feffff	                           jne 0x4001d65	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001ea5	        0x410fb606	                   movzx eax, byte [r14]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001ea9	            0xa801	                              test al, 1	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001eab	            0x74a4	                            je 0x4001e51	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001ead	           0xf1f00	                         nop dword [rax]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001eb0	          0x4c89f7	                            mov rdi, r14	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001eb3	      0xe800000000	                          call 0x4001eb8	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001eb8	      0x4829442418	             sub qword [rsp + 0x18], rax	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001ebd	        0x41f60620	                   test byte [r14], 0x20	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ec1	            0x7592	                           jne 0x4001e55	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ec3	      0x49837e1800	               cmp qword [r14 + 0x18], 0	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ec8	     0xf8422010000	                            je 0x4001ff0	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ece	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001ed3	          0x4889ea	                            mov rdx, rbp	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001ed6	          0x4c89f7	                            mov rdi, r14	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001ed9	      0xe800000000	                          call 0x4001ede	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001ede	        0x41f60620	                   test byte [r14], 0x20	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001ee2	     0xf856dffffff	                           jne 0x4001e55	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001ee8	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001eec	          0x4885ff	                           test rdi, rdi	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001eef	     0xf846b010000	                            je 0x4002060	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001ef5	      0xe800000000	                          call 0x4001efa	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_33
0x4001efa	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001efe	          0x4885ff	                           test rdi, rdi	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001f01	     0xf844effffff	                            je 0x4001e55	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001f07	      0xe800000000	                          call 0x4001f0c	      1093	write.c	FUNCTION_17	FOR_2	IF_23	CALL_34
0x4001f0c	      0x49837e4800	               cmp qword [r14 + 0x48], 0	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001f11	     0xf8549ffffff	                           jne 0x4001e60	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001f17	        0x410fbe06	                   movsx eax, byte [r14]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001f1b	            0xa840	                           test al, 0x40	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001f1d	     0xf853dffffff	                           jne 0x4001e60	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001f23	      0x410fb65602	               movzx edx, byte [r14 + 2]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001f28	          0x8d4aff	                      lea ecx, [rdx - 1]	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f2b	          0x80f906	                               cmp cl, 6	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f2e	     0xf872cffffff	                            ja 0x4001e60	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f34	           0xfb6ca	                           movzx ecx, dl	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f37	          0xc1e81f	                           shr eax, 0x1f	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f3a	          0xc1e103	                              shl ecx, 3	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f3d	            0x29c1	                            sub ecx, eax	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f3f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f46	          0x48d3e0	                             shl rax, cl	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001f49	          0x4889c2	                            mov rdx, rax	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f4c	      0x4823542418	             and rdx, qword [rsp + 0x18]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f51	          0x4839d0	                            cmp rax, rdx	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f54	     0xf8406ffffff	                            je 0x4001e60	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f5a	          0x4885d2	                           test rdx, rdx	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f5d	     0xf84fdfeffff	                            je 0x4001e60	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f63	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001f67	        0x49033424	                    add rsi, qword [r12]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001f6b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001f70	      0xe800000000	                          call 0x4001f75	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001f75	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f7a	    0x4981f8e80300	                           cmp r8, 0x3e8	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f81	     0xf8715030000	                            ja 0x400229c	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f87	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001f8c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001f91	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001f96	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001f9b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001f9d	      0xe800000000	                          call 0x4001fa2	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001fa2	      0x410fb64e02	               movzx ecx, byte [r14 + 2]	      1119	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001fa7	            0x31ff	                            xor edi, edi	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fa9	    0x41b805000000	                              mov r8d, 5	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001faf	      0xba00000000	                              mov edx, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fb4	      0xbe00000000	                              mov esi, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fb9	          0x4989cc	                            mov r12, rcx	      1119	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001fbc	      0xe800000000	                          call 0x4001fc1	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001fc1	        0x418b7668	            mov esi, dword [r14 + 0x68] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fc5	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fc9	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fce	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fd3	          0x4889c2	                            mov rdx, rax	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fd6	        0x450fb6c4	                         movzx r8d, r12b	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fda	            0x31c0	                            xor eax, eax	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fdc	      0xe800000000	                          call 0x4001fe1	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fe1	      0xe97afeffff	                           jmp 0x4001e60	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001fe6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001ff0	    0x488b05000000	            mov rax, qword [0x04001ff7] 	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ff7	        0x49894618	             mov qword [r14 + 0x18], rax	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001ffb	      0xe9cefeffff	                           jmp 0x4001ece	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4002000	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4002004	            0x31f6	                            xor esi, esi	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4002006	      0xe800000000	                          call 0x400200b	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x400200b	            0x85c0	                           test eax, eax	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x400200d	     0xf8582fdffff	                           jne 0x4001d95	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4002013	    0x48391d000000	            cmp qword [0x0400201a], rbx 	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x400201a	     0xf85f0010000	                           jne 0x4002210	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4002020	    0x4881fd000000	                              cmp rbp, 0	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002027	     0xf84c3000000	                            je 0x40020f0	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x400202d	           0xf1f00	                         nop dword [rax]	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002030	            0x31ff	                            xor edi, edi	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4002032	      0xba05000000	                              mov edx, 5	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4002037	      0xbe00000000	                              mov esi, 0	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x400203c	      0xe800000000	                          call 0x4002041	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4002041	        0x418b7668	            mov esi, dword [r14 + 0x68] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4002045	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4002049	          0x4889c2	                            mov rdx, rax	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x400204c	            0x31c0	                            xor eax, eax	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x400204e	      0xe800000000	                          call 0x4002053	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4002053	      0xe9d2fdffff	                           jmp 0x4001e2a	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4002058	     0xf1f84000000	                   nop dword [rax + rax]	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4002060	    0x488b3d000000	            mov rdi, qword [0x04002067] 	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4002067	        0x49897e18	             mov qword [r14 + 0x18], rdi	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x400206b	      0xe985feffff	                           jmp 0x4001ef5	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4002070	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4002074	            0x31f6	                            xor esi, esi	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4002076	      0xe800000000	                          call 0x400207b	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x400207b	            0x85c0	                           test eax, eax	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x400207d	     0xf85c6fdffff	                           jne 0x4001e49	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4002083	          0x4c89f7	                            mov rdi, r14	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4002086	      0xe800000000	                          call 0x400208b	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x400208b	            0x85c0	                           test eax, eax	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x400208d	     0xf85b6fdffff	                           jne 0x4001e49	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4002093	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4002097	      0xe800000000	                          call 0x400209c	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x400209c	      0x4803442418	             add rax, qword [rsp + 0x18]	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x40020a1	    0x49c746180000	               mov qword [r14 + 0x18], 0	      1063	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020a9	      0x4889442418	             mov qword [rsp + 0x18], rax	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x40020ae	        0x49894628	             mov qword [r14 + 0x28], rax	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020b2	      0xe992fdffff	                           jmp 0x4001e49	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020b7	    0x660f1f840000	                    nop word [rax + rax]	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020c0	            0x31f6	                            xor esi, esi	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x40020c2	      0xe800000000	                          call 0x40020c7	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x40020c7	            0x85c0	                           test eax, eax	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x40020c9	     0xf856dfdffff	                           jne 0x4001e3c	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x40020cf	        0x410fb606	                   movzx eax, byte [r14]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x40020d3	            0xa801	                              test al, 1	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x40020d5	     0xf855c010000	                           jne 0x4002237	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x40020db	    0x4881fd000000	                              cmp rbp, 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020e2	            0x748c	                            je 0x4002070	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020e4	          0x4889eb	                            mov rbx, rbp	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020e7	      0xe965fdffff	                           jmp 0x4001e51	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020ec	         0xf1f4000	                         nop dword [rax]	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x40020f0	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x40020f4	            0x31f6	                            xor esi, esi	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x40020f6	      0xe800000000	                          call 0x40020fb	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x40020fb	            0x85c0	                           test eax, eax	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x40020fd	     0xf859bfcffff	                           jne 0x4001d9e	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4002103	    0x48391d000000	            cmp qword [0x0400210a], rbx 	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x400210a	     0xf8420ffffff	                            je 0x4002030	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002110	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4002114	      0xe800000000	                          call 0x4002119	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4002119	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x400211e	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002122	          0x4829c1	                            sub rcx, rax	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4002125	          0x4889c8	                            mov rax, rcx	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4002128	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x400212d	        0x498b4e38	            mov rcx, qword [r14 + 0x38] 	      1002	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002131	          0x480311	                    add rdx, qword [rcx]	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002134	          0x4801d0	                            add rax, rdx	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002137	        0x41f60601	                      test byte [r14], 1	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x400213b	        0x49894628	             mov qword [r14 + 0x28], rax	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x400213f	     0xf8469010000	                            je 0x40022ae	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4002145	    0x49c746200000	               mov qword [r14 + 0x20], 0	      1017	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x400214d	        0x41800e01	                        or byte [r14], 1	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002151	      0xe9d4fcffff	                           jmp 0x4001e2a	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4002160	            0x31f6	                            xor esi, esi	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4002162	      0xe800000000	                          call 0x4002167	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4002167	            0x85c0	                           test eax, eax	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4002169	     0xf8519fcffff	                           jne 0x4001d88	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x400216f	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4002173	            0x31f6	                            xor esi, esi	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4002175	      0xe800000000	                          call 0x400217a	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x400217a	            0x85c0	                           test eax, eax	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x400217c	           0xf94c2	                                 sete dl	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x400217f	    0x4881fb000000	                              cmp rbx, 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4002186	           0xf95c0	                                setne al	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4002189	            0x84c2	                             test dl, al	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x400218b	     0xf84f7fbffff	                            je 0x4001d88	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4002191	    0x4881fb000000	                              cmp rbx, 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4002198	     0xf84eafbffff	                            je 0x4001d88	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x400219e	    0x48391d000000	            cmp qword [0x040021a5], rbx 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021a5	     0xf84ddfbffff	                            je 0x4001d88	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021ab	    0x48391d000000	            cmp qword [0x040021b2], rbx 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021b2	     0xf84d0fbffff	                            je 0x4001d88	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021b8	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x40021bc	      0xe800000000	                          call 0x40021c1	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x40021c1	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40021c5	      0x4801442418	            add qword [rsp + 0x18], rax 	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x40021ca	      0xe800000000	                          call 0x40021cf	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40021cf	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40021d4	    0x49c746180000	               mov qword [r14 + 0x18], 0	       981	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021dc	    0x49c746200000	               mov qword [r14 + 0x20], 0	       982	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021e4	          0x4829c1	                            sub rcx, rax	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40021e7	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x40021ec	        0x49894e28	             mov qword [r14 + 0x28], rcx	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021f0	      0xe954fcffff	                           jmp 0x4001e49	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021f5	           0xf1f00	                         nop dword [rax]	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40021f8	    0x488b3d000000	            mov rdi, qword [0x040021ff] 	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x40021ff	        0x49897e18	             mov qword [r14 + 0x18], rdi	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4002203	      0xe9dbfaffff	                           jmp 0x4001ce3	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4002208	     0xf1f84000000	                   nop dword [rax + rax]	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4002210	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4002214	      0xe800000000	                          call 0x4002219	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4002219	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x400221e	    0x49c746200000	               mov qword [r14 + 0x20], 0	       994	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4002226	          0x4829c1	                            sub rcx, rax	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4002229	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x400222e	        0x49894e28	             mov qword [r14 + 0x28], rcx	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4002232	      0xe9f3fbffff	                           jmp 0x4001e2a	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4002237	          0x4c89f7	                            mov rdi, r14	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x400223a	      0xe800000000	                          call 0x400223f	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x400223f	            0x85c0	                           test eax, eax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002241	     0xf85f5fbffff	                           jne 0x4001e3c	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002247	        0x418b4650	            mov eax, dword [r14 + 0x50] 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x400224b	      0x2d65010000	                          sub eax, 0x165	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002250	          0x83f836	                           cmp eax, 0x36	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002253	            0x766b	                           jbe 0x40022c0	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002255	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4002259	      0xe800000000	                          call 0x400225e	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x400225e	      0x4803442418	             add rax, qword [rsp + 0x18]	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4002263	        0x41f60601	                      test byte [r14], 1	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4002267	      0x4889442418	             mov qword [rsp + 0x18], rax	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x400226c	        0x49894628	             mov qword [r14 + 0x28], rax	      1051	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002270	            0x757b	                           jne 0x40022ed	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4002272	    0x49c746180000	               mov qword [r14 + 0x18], 0	      1054	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x400227a	        0x418026fe	                    and byte [r14], 0xfe	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x400227e	          0x4889eb	                            mov rbx, rbp	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002281	      0xe9c3fbffff	                           jmp 0x4001e49	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4002286	      0xbf00000000	                              mov edi, 0	       924	write.c	FUNCTION_17	CALL_1
0x400228b	      0xe800000000	                          call 0x4002290	       924	write.c	FUNCTION_17	CALL_1
0x4002290	    0x488905000000	            mov qword [0x04002297], rax 	       924	write.c	FUNCTION_17	CALL_1
0x4002297	      0xe929faffff	                           jmp 0x4001cc5	       924	write.c	FUNCTION_17	CALL_1
0x400229c	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x40022a1	          0x4c89c6	                             mov rsi, r8	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x40022a4	      0xe800000000	                          call 0x40022a9	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x40022a9	      0xe9f4fcffff	                           jmp 0x4001fa2	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x40022ae	          0x4c89f7	                            mov rdi, r14	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x40022b1	      0xe800000000	                          call 0x40022b6	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x40022b6	      0x4801442418	            add qword [rsp + 0x18], rax 	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x40022bb	      0xe985feffff	                           jmp 0x4002145	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x40022c0	    0x48b941000000	           movabs rcx, 0x60000000000041 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x40022ca	        0x480fa3c1	                             bt rcx, rax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x40022ce	     0xf8268fbffff	                            jb 0x4001e3c	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x40022d4	      0xe97cffffff	                           jmp 0x4002255	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x40022d9	      0xba00000000	                              mov edx, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40022de	      0xbebe030000	                          mov esi, 0x3be	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40022e3	      0xbf00000000	                              mov edi, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40022e8	      0xe800000000	                          call 0x40022ed	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40022ed	          0x4c89f7	                            mov rdi, r14	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x40022f0	      0xe800000000	                          call 0x40022f5	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x40022f5	      0x4829442418	             sub qword [rsp + 0x18], rax	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x40022fa	      0xe973ffffff	                           jmp 0x4002272	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x40022ff	      0xe800000000	                          call 0x4002304	      1155	write.c	FUNCTION_18
get_recorded_alignment	FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:WHILE,0:IF,1:ELSE,0	7
0x4002360	    0x4881ff000000	                              cmp rdi, 0	       371	write.c	FUNCTION_8	IF_1
0x4002367	            0x7407	                            je 0x4002370	       371	write.c	FUNCTION_8	IF_1
0x4002369	          0x8b4770	            mov eax, dword [rdi + 0x70] 	       374	write.c	FUNCTION_8
0x400236c	              0xc3	                                     ret	       374	write.c	FUNCTION_8
0x400236d	           0xf1f00	                         nop dword [rax]	       374	write.c	FUNCTION_8
0x4002370	            0x31c0	                            xor eax, eax	       372	write.c	FUNCTION_8	IF_1
0x4002372	              0xc3	                                     ret	       375	write.c	FUNCTION_8
number_to_chars_littleendian	FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:WHILE,1:IF,1:ELSE,0	16
0x4003ca0	            0x85d2	                           test edx, edx	      3117	write.c	FUNCTION_38	IF_1
0x4003ca2	            0x7e1f	                           jle 0x4003cc3	      3117	write.c	FUNCTION_38	IF_1
0x4003ca4	          0x8d42ff	                      lea eax, [rdx - 1]	      3117	write.c	FUNCTION_38	IF_1
0x4003ca7	      0x488d440701	                lea rax, [rdi + rax + 1]	      3117	write.c	FUNCTION_38	IF_1
0x4003cac	         0xf1f4000	                         nop dword [rax]	      3117	write.c	FUNCTION_38	IF_1
0x4003cb0	        0x4883c701	                              add rdi, 1	      3121	write.c	FUNCTION_38	WHILE_1
0x4003cb4	        0x408877ff	                 mov byte [rdi - 1], sil	      3121	write.c	FUNCTION_38	WHILE_1
0x4003cb8	        0x48c1ee08	                              shr rsi, 8	      3122	write.c	FUNCTION_38	WHILE_1
0x4003cbc	          0x4839c7	                            cmp rdi, rax	      3119	write.c	FUNCTION_38	WHILE_1
0x4003cbf	            0x75ef	                           jne 0x4003cb0	      3119	write.c	FUNCTION_38	WHILE_1
0x4003cc1	            0xf3c3	                                     ret	      3119	write.c	FUNCTION_38	WHILE_1
0x4003cc3	        0x4883ec08	                              sub rsp, 8	      3116	write.c	FUNCTION_38
0x4003cc7	      0xba00000000	                              mov edx, 0	      3118	write.c	FUNCTION_38	CALL_1
0x4003ccc	      0xbe2e0c0000	                          mov esi, 0xc2e	      3118	write.c	FUNCTION_38	CALL_1
0x4003cd1	      0xbf00000000	                              mov edi, 0	      3118	write.c	FUNCTION_38	CALL_1
0x4003cd6	      0xe800000000	                          call 0x4003cdb	      3118	write.c	FUNCTION_38	CALL_1
relax_frag	FOR,2:DO,0:SWITCH,0:functions,0:CALL,8:WHILE,0:IF,8:ELSE,4	103
0x4002380	            0x4157	                                push r15	      2488	write.c	FUNCTION_34
0x4002382	            0x4156	                                push r14	      2488	write.c	FUNCTION_34
0x4002384	          0x4989f7	                            mov r15, rsi	      2488	write.c	FUNCTION_34
0x4002387	            0x4155	                                push r13	      2488	write.c	FUNCTION_34
0x4002389	            0x4154	                                push r12	      2488	write.c	FUNCTION_34
0x400238b	              0x55	                                push rbp	      2488	write.c	FUNCTION_34
0x400238c	              0x53	                                push rbx	      2488	write.c	FUNCTION_34
0x400238d	        0x4883ec28	                           sub rsp, 0x28	      2488	write.c	FUNCTION_34
0x4002391	          0x488b06	                    mov rax, qword [rsi]	      2501	write.c	FUNCTION_34
0x4002394	        0x488b6e28	            mov rbp, qword [rsi + 0x28] 	      2505	write.c	FUNCTION_34
0x4002398	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2488	write.c	FUNCTION_34
0x400239d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2488	write.c	FUNCTION_34
0x40023a2	        0x488b5e20	            mov rbx, qword [rsi + 0x20] 	      2500	write.c	FUNCTION_34
0x40023a6	      0x4889442408	                mov qword [rsp + 8], rax	      2501	write.c	FUNCTION_34
0x40023ab	          0x8b4660	            mov eax, dword [rsi + 0x60] 	      2503	write.c	FUNCTION_34
0x40023ae	          0x4885ed	                           test rbp, rbp	      2507	write.c	FUNCTION_34	IF_1
0x40023b1	          0x4989c6	                            mov r14, rax	      2503	write.c	FUNCTION_34
0x40023b4	        0x488d0440	                  lea rax, [rax + rax*2]	      2504	write.c	FUNCTION_34
0x40023b8	    0x4c8d24c50000	                        lea r12, [rax*8]	      2504	write.c	FUNCTION_34
0x40023c0	            0x743f	                            je 0x4002401	      2507	write.c	FUNCTION_34	IF_1
0x40023c2	          0x4889ef	                            mov rdi, rbp	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x40023c5	      0xe800000000	                          call 0x40023ca	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x40023ca	          0x4889ef	                            mov rdi, rbp	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40023cd	          0x4989c5	                            mov r13, rax	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x40023d0	      0xe800000000	                          call 0x40023d5	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40023d5	    0x4981fd000000	                              cmp r13, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40023dc	            0x740c	                            je 0x40023ea	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40023de	    0x483d00000000	                              cmp rax, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40023e4	     0xf8404010000	                            je 0x40024ee	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40023ea	          0x4889ef	                            mov rdi, rbp	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x40023ed	      0xe800000000	                          call 0x40023f2	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x40023f2	          0x4801c3	                            add rbx, rax	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x40023f5	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x40023fb	     0xf858f000000	                           jne 0x4002490	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x4002401	      0x482b5c2408	                sub rbx, qword [rsp + 8]	      2545	write.c	FUNCTION_34
0x4002406	      0x418b542414	            mov edx, dword [r12 + 0x14] 	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x400240b	          0x4c89e0	                            mov rax, r12	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x400240e	          0x4889d9	                            mov rcx, rbx	      2545	write.c	FUNCTION_34
0x4002411	        0x492b4f10	             sub rcx, qword [r15 + 0x10]	      2556	write.c	FUNCTION_34	IF_5
0x4002415	            0x791d	                           jns 0x4002434	      2556	write.c	FUNCTION_34	IF_5
0x4002417	            0xeb63	                           jmp 0x400247c	      2556	write.c	FUNCTION_34	IF_5
0x4002419	     0xf1f80000000	                         nop dword [rax]	      2556	write.c	FUNCTION_34	IF_5
0x4002420	            0x89d0	                            mov eax, edx	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002422	          0x4189d6	                           mov r14d, edx	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002425	        0x488d0440	                  lea rax, [rax + rax*2]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002429	    0x488d04c50000	                        lea rax, [rax*8]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002431	          0x8b5014	            mov edx, dword [rax + 0x14] 	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002434	            0x85d2	                           test edx, edx	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4002436	            0x7405	                            je 0x400243d	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4002438	          0x483b08	                    cmp rcx, qword [rax]	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x400243b	            0x7fe3	                            jg 0x4002420	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x400243d	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      2585	write.c	FUNCTION_34
0x4002441	    0x410fb6442410	           movzx eax, byte [r12 + 0x10] 	      2585	write.c	FUNCTION_34
0x4002447	            0x29c2	                            sub edx, eax	      2585	write.c	FUNCTION_34
0x4002449	            0x85d2	                           test edx, edx	      2586	write.c	FUNCTION_34	IF_8
0x400244b	          0x4863c2	                         movsxd rax, edx	      2585	write.c	FUNCTION_34
0x400244e	            0x7404	                            je 0x4002454	      2586	write.c	FUNCTION_34	IF_8
0x4002450	        0x45897760	            mov dword [r15 + 0x60], r14d	      2587	write.c	FUNCTION_34	IF_8
0x4002454	        0x4883c428	                           add rsp, 0x28	      2589	write.c	FUNCTION_34
0x4002458	              0x5b	                                 pop rbx	      2589	write.c	FUNCTION_34
0x4002459	              0x5d	                                 pop rbp	      2589	write.c	FUNCTION_34
0x400245a	            0x415c	                                 pop r12	      2589	write.c	FUNCTION_34
0x400245c	            0x415d	                                 pop r13	      2589	write.c	FUNCTION_34
0x400245e	            0x415e	                                 pop r14	      2589	write.c	FUNCTION_34
0x4002460	            0x415f	                                 pop r15	      2589	write.c	FUNCTION_34
0x4002462	              0xc3	                                     ret	      2589	write.c	FUNCTION_34
0x4002463	       0xf1f440000	                   nop dword [rax + rax]	      2589	write.c	FUNCTION_34
0x4002468	            0x89d0	                            mov eax, edx	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x400246a	          0x4189d6	                           mov r14d, edx	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x400246d	        0x488d0440	                  lea rax, [rax + rax*2]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4002471	    0x488d04c50000	                        lea rax, [rax*8]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4002479	          0x8b5014	            mov edx, dword [rax + 0x14] 	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x400247c	            0x85d2	                           test edx, edx	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x400247e	            0x74bd	                            je 0x400243d	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4002480	        0x483b4808	                cmp rcx, qword [rax + 8]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4002484	            0x7ce2	                            jl 0x4002468	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4002486	            0xebb5	                           jmp 0x400243d	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4002488	     0xf1f84000000	                   nop dword [rax + rax]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4002490	      0x410fb6455a	           movzx eax, byte [r13 + 0x5a] 	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4002495	        0x4132475a	               xor al, byte [r15 + 0x5a]	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x4002499	            0xa801	                              test al, 1	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x400249b	     0xf8460ffffff	                            je 0x4002401	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40024a1	          0x4889ef	                            mov rdi, rbp	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40024a4	      0xe800000000	                          call 0x40024a9	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40024a9	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40024ae	     0xf854dffffff	                           jne 0x4002401	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40024b4	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40024ba	            0x7828	                            js 0x40024e4	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40024bc	      0x410fb74758	           movzx eax, word [r15 + 0x58] 	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40024c1	      0x6641394558	               cmp word [r13 + 0x58], ax	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40024c6	            0x741c	                            je 0x40024e4	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40024c8	      0x48395c2408	                cmp qword [rsp + 8], rbx	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40024cd	     0xf862effffff	                           jbe 0x4002401	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40024d3	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40024d7	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40024dc	          0x480318	                    add rbx, qword [rax]	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40024df	      0xe91dffffff	                           jmp 0x4002401	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40024e4	      0x48035c2410	             add rbx, qword [rsp + 0x10]	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40024e9	      0xe913ffffff	                           jmp 0x4002401	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40024ee	      0xba00000000	                              mov edx, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40024f3	      0xbed5090000	                          mov esi, 0x9d5	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40024f8	      0xbf00000000	                              mov edi, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40024fd	      0xe800000000	                          call 0x4002502	      2516	write.c	FUNCTION_34	IF_1	CALL_4
compress_frag	FOR,0:DO,0:SWITCH,0:functions,0:CALL,10:WHILE,1:IF,4:ELSE,0	108
0x4000270	            0x4156	                                push r14	      1379	write.c	FUNCTION_22
0x4000272	            0x4155	                                push r13	      1379	write.c	FUNCTION_22
0x4000274	          0x4989cd	                            mov r13, rcx	      1379	write.c	FUNCTION_22
0x4000277	            0x4154	                                push r12	      1379	write.c	FUNCTION_22
0x4000279	              0x55	                                push rbp	      1379	write.c	FUNCTION_22
0x400027a	          0x4989fc	                            mov r12, rdi	      1379	write.c	FUNCTION_22
0x400027d	              0x53	                                push rbx	      1379	write.c	FUNCTION_22
0x400027e	            0x31ed	                            xor ebp, ebp	      1381	write.c	FUNCTION_22
0x4000280	          0x4c89c3	                             mov rbx, r8	      1379	write.c	FUNCTION_22
0x4000283	        0x4883ec30	                           sub rsp, 0x30	      1379	write.c	FUNCTION_22
0x4000287	          0x4c8b31	                    mov r14, qword [rcx]	      1382	write.c	FUNCTION_22
0x400028a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	write.c	FUNCTION_22
0x4000293	      0x4889442428	             mov qword [rsp + 0x28], rax	      1379	write.c	FUNCTION_22
0x4000298	            0x31c0	                            xor eax, eax	      1379	write.c	FUNCTION_22
0x400029a	      0x4889742408	                mov qword [rsp + 8], rsi	      1379	write.c	FUNCTION_22
0x400029f	        0x89542404	                mov dword [rsp + 4], edx	      1379	write.c	FUNCTION_22
0x40002a3	       0xf1f440000	                   nop dword [rax + rax]	      1379	write.c	FUNCTION_22
0x40002a8	        0x8b442404	                mov eax, dword [rsp + 4]	      1388	write.c	FUNCTION_22	WHILE_1
0x40002ac	            0x85c0	                           test eax, eax	      1388	write.c	FUNCTION_22	WHILE_1
0x40002ae	            0x7e6a	                           jle 0x400031a	      1388	write.c	FUNCTION_22	WHILE_1
0x40002b0	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40002b4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40002b8	          0x4889f1	                            mov rcx, rsi	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40002bb	          0x4829c1	                            sub rcx, rax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40002be	            0x85c9	                           test ecx, ecx	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x40002c0	          0x4863d1	                         movsxd rdx, ecx	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40002c3	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40002c7	            0x7e77	                           jle 0x4000340	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x40002c9	          0x4801c2	                            add rdx, rax	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x40002cc	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40002d1	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40002d6	        0x48895318	             mov qword [rbx + 0x18], rdx	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x40002da	      0x488d742408	                      lea rsi, [rsp + 8]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40002df	      0x488d542404	                      lea rdx, [rsp + 4]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40002e4	          0x4c89e7	                            mov rdi, r12	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40002e7	      0x4889442420	             mov qword [rsp + 0x20], rax	      1404	write.c	FUNCTION_22	WHILE_1	CALL_7
0x40002ec	      0xe800000000	                          call 0x40002f1	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40002f1	            0x85c0	                           test eax, eax	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x40002f3	     0xf88e7000000	                            js 0x40003e0	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x40002f9	          0x4863d0	                         movsxd rdx, eax	      1411	write.c	FUNCTION_22	WHILE_1
0x40002fc	             0x1c5	                            add ebp, eax	      1412	write.c	FUNCTION_22	WHILE_1
0x40002fe	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x4000302	        0x49015610	            add qword [r14 + 0x10], rdx 	      1411	write.c	FUNCTION_22	WHILE_1
0x4000306	            0x85c0	                           test eax, eax	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x4000308	            0x7e9e	                           jle 0x40002a8	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x400030a	            0xf7d8	                                 neg eax	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x400030c	            0x4898	                                    cdqe	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x400030e	        0x48014318	            add qword [rbx + 0x18], rax 	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x4000312	        0x8b442404	                mov eax, dword [rsp + 4]	      1388	write.c	FUNCTION_22	WHILE_1
0x4000316	            0x85c0	                           test eax, eax	      1388	write.c	FUNCTION_22	WHILE_1
0x4000318	            0x7f96	                            jg 0x40002b0	      1388	write.c	FUNCTION_22	WHILE_1
0x400031a	            0x89e8	                            mov eax, ebp	      1388	write.c	FUNCTION_22	WHILE_1
0x400031c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1420	write.c	FUNCTION_22
0x4000321	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1420	write.c	FUNCTION_22
0x400032a	     0xf85ba000000	                           jne 0x40003ea	      1420	write.c	FUNCTION_22
0x4000330	        0x4883c430	                           add rsp, 0x30	      1420	write.c	FUNCTION_22
0x4000334	              0x5b	                                 pop rbx	      1420	write.c	FUNCTION_22
0x4000335	              0x5d	                                 pop rbp	      1420	write.c	FUNCTION_22
0x4000336	            0x415c	                                 pop r12	      1420	write.c	FUNCTION_22
0x4000338	            0x415d	                                 pop r13	      1420	write.c	FUNCTION_22
0x400033a	            0x415e	                                 pop r14	      1420	write.c	FUNCTION_22
0x400033c	              0xc3	                                     ret	      1420	write.c	FUNCTION_22
0x400033d	           0xf1f00	                         nop dword [rax]	      1420	write.c	FUNCTION_22
0x4000340	        0x483b4310	            cmp rax, qword [rbx + 0x10] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000344	     0xf8486000000	                            je 0x40003d0	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400034a	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400034e	          0x4889f7	                            mov rdi, rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000351	        0x488d1408	                    lea rdx, [rax + rcx]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000355	          0x48f7d1	                                 not rcx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000358	        0x488b4308	                mov rax, qword [rbx + 8]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400035c	          0x4821ca	                            and rdx, rcx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400035f	          0x4889d1	                            mov rcx, rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000362	          0x4829c7	                            sub rdi, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000365	        0x48895318	             mov qword [rbx + 0x18], rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000369	          0x4829c1	                            sub rcx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400036c	          0x4839f9	                            cmp rcx, rdi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400036f	            0x7607	                           jbe 0x4000378	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000371	        0x48897318	             mov qword [rbx + 0x18], rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000375	          0x4889f2	                            mov rdx, rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000378	        0x48895310	             mov qword [rbx + 0x10], rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400037c	          0x4889df	                            mov rdi, rbx	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x400037f	      0xe800000000	                          call 0x4000384	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4000384	          0x4989c6	                            mov r14, rax	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4000387	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1397	write.c	FUNCTION_22	WHILE_1	IF_1
0x400038e	        0x498b4500	                    mov rax, qword [r13]	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x4000392	        0x4c897038	             mov qword [rax + 0x38], r14	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x4000396	        0x4d897500	                    mov qword [r13], r14	      1399	write.c	FUNCTION_22	WHILE_1	IF_1
0x400039a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x400039e	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003a2	          0x4829c1	                            sub rcx, rax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003a5	            0x85c9	                           test ecx, ecx	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x40003a7	          0x4863d1	                         movsxd rdx, ecx	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003aa	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003ae	     0xf8f15ffffff	                            jg 0x40002c9	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x40003b4	            0x31ff	                            xor edi, edi	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003b6	      0xba05000000	                              mov edx, 5	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003bb	      0xbe00000000	                              mov esi, 0	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003c0	      0xe800000000	                          call 0x40003c5	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003c5	          0x4889c7	                            mov rdi, rax	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003c8	            0x31c0	                            xor eax, eax	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003ca	      0xe800000000	                          call 0x40003cf	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003cf	              0x90	                                     nop	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003d0	        0x804b5002	                 or byte [rbx + 0x50], 2	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003d4	      0xe971ffffff	                           jmp 0x400034a	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003d9	     0xf1f80000000	                         nop dword [rax]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003e0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1409	write.c	FUNCTION_22	WHILE_1	IF_3
0x40003e5	      0xe932ffffff	                           jmp 0x400031c	      1409	write.c	FUNCTION_22	WHILE_1	IF_3
0x40003ea	      0xe800000000	                          call 0x40003ef	      1420	write.c	FUNCTION_22
install_reloc	FOR,0:DO,0:SWITCH,1:functions,0:CALL,9:WHILE,0:IF,1:ELSE,0	85
0x4000860	            0x4156	                                push r14	      1160	write.c	FUNCTION_19
0x4000862	            0x4155	                                push r13	      1160	write.c	FUNCTION_19
0x4000864	          0x4989fe	                            mov r14, rdi	      1160	write.c	FUNCTION_19
0x4000867	            0x4154	                                push r12	      1160	write.c	FUNCTION_19
0x4000869	              0x55	                                push rbp	      1160	write.c	FUNCTION_19
0x400086a	          0x4989cc	                            mov r12, rcx	      1160	write.c	FUNCTION_19
0x400086d	              0x53	                                push rbx	      1160	write.c	FUNCTION_19
0x400086e	          0x4889d5	                            mov rbp, rdx	      1160	write.c	FUNCTION_19
0x4000871	          0x4889f3	                            mov rbx, rsi	      1160	write.c	FUNCTION_19
0x4000874	          0x4589c5	                           mov r13d, r8d	      1160	write.c	FUNCTION_19
0x4000877	        0x4883ec10	                           sub rsp, 0x10	      1160	write.c	FUNCTION_19
0x400087b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1160	write.c	FUNCTION_19
0x4000884	      0x4889442408	                mov qword [rsp + 8], rax	      1160	write.c	FUNCTION_19
0x4000889	            0x31c0	                            xor eax, eax	      1160	write.c	FUNCTION_19
0x400088b	          0x488b06	                    mov rax, qword [rsi]	      1165	write.c	FUNCTION_19	IF_1
0x400088e	          0x4885c0	                           test rax, rax	      1165	write.c	FUNCTION_19	IF_1
0x4000891	            0x7440	                            je 0x40008d3	      1165	write.c	FUNCTION_19	IF_1
0x4000893	          0x488b00	                    mov rax, qword [rax]	      1166	write.c	FUNCTION_19	IF_1
0x4000896	          0x4885c0	                           test rax, rax	      1166	write.c	FUNCTION_19	IF_1
0x4000899	            0x7438	                            je 0x40008d3	      1166	write.c	FUNCTION_19	IF_1
0x400089b	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1167	write.c	FUNCTION_19	IF_1
0x400089e	          0xf6c220	                           test dl, 0x20	      1167	write.c	FUNCTION_19	IF_1
0x40008a1	            0x7530	                           jne 0x40008d3	      1167	write.c	FUNCTION_19	IF_1
0x40008a3	          0x80e601	                               and dh, 1	      1168	write.c	FUNCTION_19	IF_1
0x40008a6	            0x740a	                            je 0x40008b2	      1168	write.c	FUNCTION_19	IF_1
0x40008a8	    0x488178200000	               cmp qword [rax + 0x20], 0	      1169	write.c	FUNCTION_19	IF_1
0x40008b0	            0x7421	                            je 0x40008d3	      1169	write.c	FUNCTION_19	IF_1
0x40008b2	      0xba05000000	                              mov edx, 5	      1171	write.c	FUNCTION_19	CALL_2
0x40008b7	      0xbe00000000	                              mov esi, 0	      1171	write.c	FUNCTION_19	CALL_2
0x40008bc	            0x31ff	                            xor edi, edi	      1171	write.c	FUNCTION_19	CALL_2
0x40008be	      0xe800000000	                          call 0x40008c3	      1171	write.c	FUNCTION_19	CALL_2
0x40008c3	          0x4489ee	                           mov esi, r13d	      1171	write.c	FUNCTION_19	CALL_2
0x40008c6	          0x4889c2	                            mov rdx, rax	      1171	write.c	FUNCTION_19	CALL_2
0x40008c9	          0x4c89e7	                            mov rdi, r12	      1171	write.c	FUNCTION_19	CALL_2
0x40008cc	            0x31c0	                            xor eax, eax	      1171	write.c	FUNCTION_19	CALL_2
0x40008ce	      0xe800000000	                          call 0x40008d3	      1171	write.c	FUNCTION_19	CALL_2
0x40008d3	        0x488b4d00	                    mov rcx, qword [rbp]	      1173	write.c	FUNCTION_19	CALL_3
0x40008d7	    0x488b3d000000	            mov rdi, qword [0x040008de] 	      1173	write.c	FUNCTION_19	CALL_3
0x40008de	        0x488d557c	                   lea rdx, [rbp + 0x7c]	      1174	write.c	FUNCTION_19
0x40008e2	          0x4889de	                            mov rsi, rbx	      1173	write.c	FUNCTION_19	CALL_3
0x40008e5	          0x4989e1	                             mov r9, rsp	      1173	write.c	FUNCTION_19	CALL_3
0x40008e8	          0x4d89f0	                             mov r8, r14	      1173	write.c	FUNCTION_19	CALL_3
0x40008eb	      0xe800000000	                          call 0x40008f0	      1173	write.c	FUNCTION_19	CALL_3
0x40008f0	          0x83f803	                              cmp eax, 3	      1176	write.c	FUNCTION_19	SWITCH_1
0x40008f3	            0x89c3	                            mov ebx, eax	      1173	write.c	FUNCTION_19	CALL_3
0x40008f5	            0x7479	                            je 0x4000970	      1176	write.c	FUNCTION_19	SWITCH_1
0x40008f7	          0x83f804	                              cmp eax, 4	      1176	write.c	FUNCTION_19	SWITCH_1
0x40008fa	            0x742c	                            je 0x4000928	      1176	write.c	FUNCTION_19	SWITCH_1
0x40008fc	          0x83f802	                              cmp eax, 2	      1176	write.c	FUNCTION_19	SWITCH_1
0x40008ff	            0x7448	                            je 0x4000949	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000901	      0xba05000000	                              mov edx, 5	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000906	      0xbe00000000	                              mov esi, 0	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x400090b	            0x31ff	                            xor edi, edi	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x400090d	      0xe800000000	                          call 0x4000912	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000912	            0x89d9	                            mov ecx, ebx	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000914	          0x4889c7	                            mov rdi, rax	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000917	          0x4489ea	                           mov edx, r13d	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x400091a	          0x4c89e6	                            mov rsi, r12	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x400091d	            0x31c0	                            xor eax, eax	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x400091f	      0xe800000000	                          call 0x4000924	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000924	         0xf1f4000	                         nop dword [rax]	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000928	      0xba05000000	                              mov edx, 5	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x400092d	      0xbe00000000	                              mov esi, 0	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000932	            0x31ff	                            xor edi, edi	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000934	      0xe800000000	                          call 0x4000939	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000939	          0x4489ee	                           mov esi, r13d	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x400093c	          0x4889c2	                            mov rdx, rax	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x400093f	          0x4c89e7	                            mov rdi, r12	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000942	            0x31c0	                            xor eax, eax	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000944	      0xe800000000	                          call 0x4000949	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000949	      0x488b442408	                mov rax, qword [rsp + 8]	      1190	write.c	FUNCTION_19
0x400094e	    0x644833042528	                xor rax, qword fs:[0x28]	      1190	write.c	FUNCTION_19
0x4000957	            0x7523	                           jne 0x400097c	      1190	write.c	FUNCTION_19
0x4000959	        0x4883c410	                           add rsp, 0x10	      1190	write.c	FUNCTION_19
0x400095d	              0x5b	                                 pop rbx	      1190	write.c	FUNCTION_19
0x400095e	              0x5d	                                 pop rbp	      1190	write.c	FUNCTION_19
0x400095f	            0x415c	                                 pop r12	      1190	write.c	FUNCTION_19
0x4000961	            0x415d	                                 pop r13	      1190	write.c	FUNCTION_19
0x4000963	            0x415e	                                 pop r14	      1190	write.c	FUNCTION_19
0x4000965	              0xc3	                                     ret	      1190	write.c	FUNCTION_19
0x4000966	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1190	write.c	FUNCTION_19
0x4000970	      0xba05000000	                              mov edx, 5	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000975	      0xbe00000000	                              mov esi, 0	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x400097a	            0xebb6	                           jmp 0x4000932	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x400097c	      0xe800000000	                          call 0x4000981	      1190	write.c	FUNCTION_19
number_to_chars_bigendian	FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:WHILE,1:IF,1:ELSE,0	21
0x4003c50	            0x85d2	                           test edx, edx	      3105	write.c	FUNCTION_37	IF_1
0x4003c52	            0x7e2e	                           jle 0x4003c82	      3105	write.c	FUNCTION_37	IF_1
0x4003c54	          0x83ea01	                              sub edx, 1	      3105	write.c	FUNCTION_37	IF_1
0x4003c57	          0x4863ca	                         movsxd rcx, edx	      3105	write.c	FUNCTION_37	IF_1
0x4003c5a	            0x89d2	                            mov edx, edx	      3105	write.c	FUNCTION_37	IF_1
0x4003c5c	        0x488d040f	                    lea rax, [rdi + rcx]	      3105	write.c	FUNCTION_37	IF_1
0x4003c60	        0x4883e901	                              sub rcx, 1	      3105	write.c	FUNCTION_37	IF_1
0x4003c64	          0x4829d1	                            sub rcx, rdx	      3105	write.c	FUNCTION_37	IF_1
0x4003c67	          0x4801cf	                            add rdi, rcx	      3105	write.c	FUNCTION_37	IF_1
0x4003c6a	    0x660f1f440000	                    nop word [rax + rax]	      3105	write.c	FUNCTION_37	IF_1
0x4003c70	          0x408830	                     mov byte [rax], sil	      3109	write.c	FUNCTION_37	WHILE_1
0x4003c73	        0x4883e801	                              sub rax, 1	      3109	write.c	FUNCTION_37	WHILE_1
0x4003c77	        0x48c1ee08	                              shr rsi, 8	      3110	write.c	FUNCTION_37	WHILE_1
0x4003c7b	          0x4839f8	                            cmp rax, rdi	      3107	write.c	FUNCTION_37	WHILE_1
0x4003c7e	            0x75f0	                           jne 0x4003c70	      3107	write.c	FUNCTION_37	WHILE_1
0x4003c80	            0xf3c3	                                     ret	      3107	write.c	FUNCTION_37	WHILE_1
0x4003c82	        0x4883ec08	                              sub rsp, 8	      3104	write.c	FUNCTION_37
0x4003c86	      0xba00000000	                              mov edx, 0	      3106	write.c	FUNCTION_37	CALL_1
0x4003c8b	      0xbe220c0000	                          mov esi, 0xc22	      3106	write.c	FUNCTION_37	CALL_1
0x4003c90	      0xbf00000000	                              mov edi, 0	      3106	write.c	FUNCTION_37	CALL_1
0x4003c95	      0xe800000000	                          call 0x4003c9a	      3106	write.c	FUNCTION_37	CALL_1
subsegs_finish_section	FOR,1:DO,0:SWITCH,0:functions,0:CALL,8:WHILE,1:IF,5:ELSE,1	61
0x4000f90	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      1800	write.c	FUNCTION_28	CALL_1
0x4000f97	          0x4885c0	                           test rax, rax	      1801	write.c	FUNCTION_28	IF_1
0x4000f9a	     0xf84b4000000	                            je 0x4001054	      1801	write.c	FUNCTION_28	IF_1
0x4000fa0	            0x4154	                                push r12	      1798	write.c	FUNCTION_28
0x4000fa2	              0x55	                                push rbp	      1798	write.c	FUNCTION_28
0x4000fa3	          0x4989fc	                            mov r12, rdi	      1798	write.c	FUNCTION_28
0x4000fa6	              0x53	                                push rbx	      1798	write.c	FUNCTION_28
0x4000fa7	          0x488b28	                    mov rbp, qword [rax]	      1804	write.c	FUNCTION_28	FOR_1
0x4000faa	          0x4885ed	                           test rbp, rbp	      1804	write.c	FUNCTION_28	FOR_1
0x4000fad	            0x753d	                           jne 0x4000fec	      1804	write.c	FUNCTION_28	FOR_1
0x4000faf	      0xe99c000000	                           jmp 0x4001050	      1804	write.c	FUNCTION_28	FOR_1
0x4000fb4	         0xf1f4000	                         nop dword [rax]	      1804	write.c	FUNCTION_28	FOR_1
0x4000fb8	            0x31f6	                            xor esi, esi	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4000fba	            0x89df	                            mov edi, ebx	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4000fbc	      0xe800000000	                          call 0x4000fc1	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4000fc1	    0x488b3d000000	            mov rdi, qword [0x04000fc8] 	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4000fc8	      0xe800000000	                          call 0x4000fcd	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4000fcd	    0x488b05000000	            mov rax, qword [0x04000fd4] 	      1846	write.c	FUNCTION_28	FOR_1
0x4000fd4	      0x4883783800	               cmp qword [rax + 0x38], 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4000fd9	    0x48c740100000	               mov qword [rax + 0x10], 0	      1846	write.c	FUNCTION_28	FOR_1
0x4000fe1	            0x7573	                           jne 0x4001056	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4000fe3	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1806	write.c	FUNCTION_28	FOR_1
0x4000fe7	          0x4885ed	                           test rbp, rbp	      1804	write.c	FUNCTION_28	FOR_1
0x4000fea	            0x7464	                            je 0x4001050	      1804	write.c	FUNCTION_28	FOR_1
0x4000fec	          0x8b7518	            mov esi, dword [rbp + 0x18] 	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4000fef	          0x4c89e7	                            mov rdi, r12	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4000ff2	      0xe800000000	                          call 0x4000ff7	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4000ff7	      0xe800000000	                          call 0x4000ffc	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4000ffc	            0x85c0	                           test eax, eax	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4000ffe	            0x740a	                            je 0x400100a	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4001000	    0xc70500000000	               mov dword [0x0400100a], 1	      1816	write.c	FUNCTION_28	FOR_1	IF_2
0x400100a	    0x488b3d000000	            mov rdi, qword [0x04001011] 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4001011	            0x31db	                            xor ebx, ebx	      1818	write.c	FUNCTION_28	FOR_1
0x4001013	        0xf6472280	           test byte [rdi + 0x22], 0x80 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4001017	            0x740a	                            je 0x4001023	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4001019	    0x8b87c4000000	            mov eax, dword [rdi + 0xc4] 	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x400101f	            0x85c0	                           test eax, eax	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4001021	            0x7522	                           jne 0x4001045	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4001023	      0xe800000000	                          call 0x4001028	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4001028	            0x85c0	                           test eax, eax	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x400102a	            0x758c	                           jne 0x4000fb8	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x400102c	            0x31d2	                            xor edx, edx	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x400102e	            0x31f6	                            xor esi, esi	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001030	            0x89df	                            mov edi, ebx	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001032	      0xe800000000	                          call 0x4001037	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001037	            0xeb88	                           jmp 0x4000fc1	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001039	     0xf1f80000000	                         nop dword [rax]	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001040	          0x83c301	                              add ebx, 1	      1827	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4001043	            0xd1e8	                              shr eax, 1	      1828	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4001045	            0xa801	                              test al, 1	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4001047	            0x74f7	                            je 0x4001040	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4001049	            0xebd8	                           jmp 0x4001023	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x400104b	       0xf1f440000	                   nop dword [rax + rax]	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4001050	              0x5b	                                 pop rbx	      1849	write.c	FUNCTION_28
0x4001051	              0x5d	                                 pop rbp	      1849	write.c	FUNCTION_28
0x4001052	            0x415c	                                 pop r12	      1849	write.c	FUNCTION_28
0x4001054	            0xf3c3	                                     ret	      1849	write.c	FUNCTION_28
0x4001056	      0xba00000000	                              mov edx, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x400105b	      0xbe37070000	                          mov esi, 0x737	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4001060	      0xbf00000000	                              mov edi, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4001065	      0xe800000000	                          call 0x400106a	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
print_fixup	FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:WHILE,0:IF,7:ELSE,0	136
0x4003d00	              0x55	                                push rbp	      3137	write.c	FUNCTION_40
0x4003d01	              0x53	                                push rbx	      3137	write.c	FUNCTION_40
0x4003d02	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_375
0x4003d07	          0x4889fb	                            mov rbx, rdi	      3137	write.c	FUNCTION_40
0x4003d0a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003d0f	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4003d14	        0x4883ec08	                              sub rsp, 8	      3137	write.c	FUNCTION_40
0x4003d18	    0x488b0d000000	            mov rcx, qword [0x04003d1f] 	        97	stdio2.h	CALL_375
0x4003d1f	    0xc70500000000	               mov dword [0x04003d29], 1	      3138	write.c	FUNCTION_40
0x4003d29	      0xe800000000	                          call 0x4003d2e	        97	stdio2.h	CALL_375
0x4003d2e	    0x488b3d000000	            mov rdi, qword [0x04003d35] 	        97	stdio2.h	CALL_375
0x4003d35	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_375
0x4003d38	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003d3d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003d42	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003d44	      0xe800000000	                          call 0x4003d49	        97	stdio2.h	CALL_375
0x4003d49	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	        97	stdio2.h	CALL_375
0x4003d4d	        0x448b4368	            mov r8d, dword [rbx + 0x68] 	        97	stdio2.h	CALL_375
0x4003d51	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003d53	    0x488b3d000000	            mov rdi, qword [0x04003d5a] 	        97	stdio2.h	CALL_375
0x4003d5a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003d5f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003d64	      0xe800000000	                          call 0x4003d69	        97	stdio2.h	CALL_375
0x4003d69	          0xf60301	                      test byte [rbx], 1	      3142	write.c	FUNCTION_40	IF_1
0x4003d6c	     0xf854e010000	                           jne 0x4003ec0	      3142	write.c	FUNCTION_40	IF_1
0x4003d72	         0xfbe4b01	               movsx ecx, byte [rbx + 1]	      3144	write.c	FUNCTION_40	IF_2
0x4003d76	            0x84c9	                             test cl, cl	      3144	write.c	FUNCTION_40	IF_2
0x4003d78	     0xf8569010000	                           jne 0x4003ee7	      3144	write.c	FUNCTION_40	IF_2
0x4003d7e	           0xfb603	                   movzx eax, byte [rbx]	      3146	write.c	FUNCTION_40	IF_3
0x4003d81	            0xa806	                              test al, 6	      3146	write.c	FUNCTION_40	IF_3
0x4003d83	     0xf8581010000	                           jne 0x4003f0a	      3146	write.c	FUNCTION_40	IF_3
0x4003d89	            0xa808	                              test al, 8	      3154	write.c	FUNCTION_40	IF_4
0x4003d8b	     0xf859f010000	                           jne 0x4003f30	      3154	write.c	FUNCTION_40	IF_4
0x4003d91	            0xa820	                           test al, 0x20	      3156	write.c	FUNCTION_40	IF_5
0x4003d93	     0xf85bd010000	                           jne 0x4003f56	      3156	write.c	FUNCTION_40	IF_5
0x4003d99	         0xfb64b02	               movzx ecx, byte [rbx + 2]	        97	stdio2.h	CALL_375
0x4003d9d	    0x488b3d000000	            mov rdi, qword [0x04003da4] 	        97	stdio2.h	CALL_375
0x4003da4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003da9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003dae	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003db0	      0xe800000000	                          call 0x4003db5	        97	stdio2.h	CALL_375
0x4003db5	        0x488b4b08	                mov rcx, qword [rbx + 8]	        97	stdio2.h	CALL_375
0x4003db9	    0x488b3d000000	            mov rdi, qword [0x04003dc0] 	        97	stdio2.h	CALL_375
0x4003dc0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003dc5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003dca	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003dcc	      0xe800000000	                          call 0x4003dd1	        97	stdio2.h	CALL_375
0x4003dd1	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        97	stdio2.h	CALL_375
0x4003dd5	        0x4c8b4b58	              mov r9, qword [rbx + 0x58]	        97	stdio2.h	CALL_375
0x4003dd9	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003dde	        0x4c8b4328	              mov r8, qword [rbx + 0x28]	        97	stdio2.h	CALL_375
0x4003de2	    0x488b3d000000	            mov rdi, qword [0x04003de9] 	        97	stdio2.h	CALL_375
0x4003de9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003dee	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003df0	      0xe800000000	                          call 0x4003df5	        97	stdio2.h	CALL_375
0x4003df5	          0x8b6b50	            mov ebp, dword [rbx + 0x50] 	      3164	write.c	FUNCTION_40	CALL_1
0x4003df8	            0x89ef	                            mov edi, ebp	      3164	write.c	FUNCTION_40	CALL_1
0x4003dfa	      0xe800000000	                          call 0x4003dff	      3164	write.c	FUNCTION_40	CALL_1
0x4003dff	    0x488b3d000000	            mov rdi, qword [0x04003e06] 	        97	stdio2.h	CALL_375
0x4003e06	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_375
0x4003e09	          0x4189e8	                            mov r8d, ebp	        97	stdio2.h	CALL_375
0x4003e0c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003e0e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003e13	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003e18	      0xe800000000	                          call 0x4003e1d	        97	stdio2.h	CALL_375
0x4003e1d	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      3166	write.c	FUNCTION_40	IF_6
0x4003e22	            0x743c	                            je 0x4003e60	      3166	write.c	FUNCTION_40	IF_6
0x4003e24	    0x488b0d000000	            mov rcx, qword [0x04003e2b] 	        97	stdio2.h	CALL_375
0x4003e2b	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x4003e30	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003e35	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4003e3a	      0xe800000000	                          call 0x4003e3f	        97	stdio2.h	CALL_375
0x4003e3f	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x4003e43	    0x488b3d000000	            mov rdi, qword [0x04003e4a] 	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x4003e4a	      0xe800000000	                          call 0x4003e4f	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x4003e4f	    0x488b35000000	            mov rsi, qword [0x04003e56] 	        97	stdio2.h	CALL_375
0x4003e56	      0xbf3e000000	                           mov edi, 0x3e	        97	stdio2.h	CALL_375
0x4003e5b	      0xe800000000	                          call 0x4003e60	        97	stdio2.h	CALL_375
0x4003e60	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      3172	write.c	FUNCTION_40	IF_7
0x4003e65	            0x743c	                            je 0x4003ea3	      3172	write.c	FUNCTION_40	IF_7
0x4003e67	    0x488b0d000000	            mov rcx, qword [0x04003e6e] 	        97	stdio2.h	CALL_375
0x4003e6e	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x4003e73	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003e78	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4003e7d	      0xe800000000	                          call 0x4003e82	        97	stdio2.h	CALL_375
0x4003e82	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x4003e86	    0x488b3d000000	            mov rdi, qword [0x04003e8d] 	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x4003e8d	      0xe800000000	                          call 0x4003e92	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x4003e92	    0x488b35000000	            mov rsi, qword [0x04003e99] 	        97	stdio2.h	CALL_375
0x4003e99	      0xbf3e000000	                           mov edi, 0x3e	        97	stdio2.h	CALL_375
0x4003e9e	      0xe800000000	                          call 0x4003ea3	        97	stdio2.h	CALL_375
0x4003ea3	    0x488b35000000	            mov rsi, qword [0x04003eaa] 	        97	stdio2.h	CALL_375
0x4003eaa	        0x4883c408	                              add rsp, 8	      3182	write.c	FUNCTION_40
0x4003eae	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_375
0x4003eb3	              0x5b	                                 pop rbx	      3182	write.c	FUNCTION_40
0x4003eb4	              0x5d	                                 pop rbp	      3182	write.c	FUNCTION_40
0x4003eb5	      0xe900000000	                           jmp 0x4003eba	        97	stdio2.h	CALL_375
0x4003eba	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_375
0x4003ec0	    0x488b0d000000	            mov rcx, qword [0x04003ec7] 	        97	stdio2.h	CALL_375
0x4003ec7	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x4003ecc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003ed1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4003ed6	      0xe800000000	                          call 0x4003edb	        97	stdio2.h	CALL_375
0x4003edb	         0xfbe4b01	               movsx ecx, byte [rbx + 1]	      3144	write.c	FUNCTION_40	IF_2
0x4003edf	            0x84c9	                             test cl, cl	      3144	write.c	FUNCTION_40	IF_2
0x4003ee1	     0xf8497feffff	                            je 0x4003d7e	      3144	write.c	FUNCTION_40	IF_2
0x4003ee7	    0x488b3d000000	            mov rdi, qword [0x04003eee] 	        97	stdio2.h	CALL_375
0x4003eee	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4003ef0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4003ef5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003efa	      0xe800000000	                          call 0x4003eff	        97	stdio2.h	CALL_375
0x4003eff	           0xfb603	                   movzx eax, byte [rbx]	      3146	write.c	FUNCTION_40	IF_3
0x4003f02	            0xa806	                              test al, 6	      3146	write.c	FUNCTION_40	IF_3
0x4003f04	     0xf847ffeffff	                            je 0x4003d89	      3146	write.c	FUNCTION_40	IF_3
0x4003f0a	    0x488b0d000000	            mov rcx, qword [0x04003f11] 	        97	stdio2.h	CALL_375
0x4003f11	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_375
0x4003f16	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003f1b	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4003f20	      0xe800000000	                          call 0x4003f25	        97	stdio2.h	CALL_375
0x4003f25	           0xfb603	                   movzx eax, byte [rbx]	        97	stdio2.h	CALL_375
0x4003f28	            0xa808	                              test al, 8	      3154	write.c	FUNCTION_40	IF_4
0x4003f2a	     0xf8461feffff	                            je 0x4003d91	      3154	write.c	FUNCTION_40	IF_4
0x4003f30	    0x488b0d000000	            mov rcx, qword [0x04003f37] 	        97	stdio2.h	CALL_375
0x4003f37	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x4003f3c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003f41	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4003f46	      0xe800000000	                          call 0x4003f4b	        97	stdio2.h	CALL_375
0x4003f4b	           0xfb603	                   movzx eax, byte [rbx]	        97	stdio2.h	CALL_375
0x4003f4e	            0xa820	                           test al, 0x20	      3156	write.c	FUNCTION_40	IF_5
0x4003f50	     0xf8443feffff	                            je 0x4003d99	      3156	write.c	FUNCTION_40	IF_5
0x4003f56	    0x488b0d000000	            mov rcx, qword [0x04003f5d] 	        97	stdio2.h	CALL_375
0x4003f5d	      0xba05000000	                              mov edx, 5	        97	stdio2.h	CALL_375
0x4003f62	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4003f67	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4003f6c	      0xe800000000	                          call 0x4003f71	        97	stdio2.h	CALL_375
0x4003f71	      0xe923feffff	                           jmp 0x4003d99	        97	stdio2.h	CALL_375
compress_debug	FOR,2:DO,0:SWITCH,0:functions,0:CALL,29:WHILE,1:IF,17:ELSE,1	279
0x40003f0	            0x4157	                                push r15	      1424	write.c	FUNCTION_23
0x40003f2	            0x4156	                                push r14	      1424	write.c	FUNCTION_23
0x40003f4	            0x4155	                                push r13	      1424	write.c	FUNCTION_23
0x40003f6	            0x4154	                                push r12	      1424	write.c	FUNCTION_23
0x40003f8	              0x55	                                push rbp	      1424	write.c	FUNCTION_23
0x40003f9	              0x53	                                push rbx	      1424	write.c	FUNCTION_23
0x40003fa	    0x4881ec880000	                           sub rsp, 0x88	      1424	write.c	FUNCTION_23
0x4000401	        0x4c8b7e38	            mov r15, qword [rsi + 0x38] 	      1430	write.c	FUNCTION_23
0x4000405	    0x64488b042528	                mov rax, qword fs:[0x28]	      1424	write.c	FUNCTION_23
0x400040e	      0x4889442478	             mov qword [rsp + 0x78], rax	      1424	write.c	FUNCTION_23
0x4000413	            0x31c0	                            xor eax, eax	      1424	write.c	FUNCTION_23
0x4000415	      0x48897c2408	                mov qword [rsp + 8], rdi	      1424	write.c	FUNCTION_23
0x400041a	        0x4983ff1f	                           cmp r15, 0x1f	      1441	write.c	FUNCTION_23	IF_1
0x400041e	            0x7626	                           jbe 0x4000446	      1441	write.c	FUNCTION_23	IF_1
0x4000420	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      1442	write.c	FUNCTION_23	IF_1
0x4000423	          0x4989f4	                            mov r12, rsi	      1442	write.c	FUNCTION_23	IF_1
0x4000426	      0x2501010000	                          and eax, 0x101	      1442	write.c	FUNCTION_23	IF_1
0x400042b	          0x83f801	                              cmp eax, 1	      1442	write.c	FUNCTION_23	IF_1
0x400042e	            0x7416	                            je 0x4000446	      1442	write.c	FUNCTION_23	IF_1
0x4000430	          0x488b36	                    mov rsi, qword [rsi]	      1445	write.c	FUNCTION_23
0x4000433	      0xbf00000000	                              mov edi, 0	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000438	      0xb907000000	                              mov ecx, 7	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x400043d	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1445	write.c	FUNCTION_23
0x4000442	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000444	            0x742a	                            je 0x4000470	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000446	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1576	write.c	FUNCTION_23
0x400044b	    0x644833042528	                xor rax, qword fs:[0x28]	      1576	write.c	FUNCTION_23
0x4000454	     0xf85d0030000	                           jne 0x400082a	      1576	write.c	FUNCTION_23
0x400045a	    0x4881c4880000	                           add rsp, 0x88	      1576	write.c	FUNCTION_23
0x4000461	              0x5b	                                 pop rbx	      1576	write.c	FUNCTION_23
0x4000462	              0x5d	                                 pop rbp	      1576	write.c	FUNCTION_23
0x4000463	            0x415c	                                 pop r12	      1576	write.c	FUNCTION_23
0x4000465	            0x415d	                                 pop r13	      1576	write.c	FUNCTION_23
0x4000467	            0x415e	                                 pop r14	      1576	write.c	FUNCTION_23
0x4000469	            0x415f	                                 pop r15	      1576	write.c	FUNCTION_23
0x400046b	              0xc3	                                     ret	      1576	write.c	FUNCTION_23
0x400046c	         0xf1f4000	                         nop dword [rax]	      1576	write.c	FUNCTION_23
0x4000470	    0x498b8424a800	            mov rax, qword [r12 + 0xa8] 	      1425	write.c	FUNCTION_23	CALL_1
0x4000478	      0x4889442440	             mov qword [rsp + 0x40], rax	      1425	write.c	FUNCTION_23	CALL_1
0x400047d	          0x488b00	                    mov rax, qword [rax]	      1429	write.c	FUNCTION_23
0x4000480	      0x4889442420	             mov qword [rsp + 0x20], rax	      1429	write.c	FUNCTION_23
0x4000485	      0xe800000000	                          call 0x400048a	      1449	write.c	FUNCTION_23	CALL_3
0x400048a	          0x4885c0	                           test rax, rax	      1450	write.c	FUNCTION_23	IF_3
0x400048d	      0x4889442438	             mov qword [rsp + 0x38], rax	      1449	write.c	FUNCTION_23	CALL_3
0x4000492	            0x74b2	                            je 0x4000446	      1450	write.c	FUNCTION_23	IF_3
0x4000494	    0x833d00000000	               cmp dword [0x0400049b], 5	      1453	write.c	FUNCTION_23	IF_4
0x400049b	     0xf84c7010000	                            je 0x4000668	      1453	write.c	FUNCTION_23	IF_4
0x40004a1	      0xbd0c000000	                            mov ebp, 0xc	      1453	write.c	FUNCTION_23	IF_4
0x40004a6	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      1461	write.c	FUNCTION_23	ELSE_1
0x40004ae	      0xbb0c000000	                            mov ebx, 0xc	      1462	write.c	FUNCTION_23	ELSE_1
0x40004b3	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      1429	write.c	FUNCTION_23
0x40004b8	          0x4c89f0	                            mov rax, r14	      1429	write.c	FUNCTION_23
0x40004bb	        0x4883c030	                           add rax, 0x30	      1429	write.c	FUNCTION_23
0x40004bf	          0x4889c7	                            mov rdi, rax	      1466	write.c	FUNCTION_23	CALL_5
0x40004c2	      0x4889442410	             mov qword [rsp + 0x10], rax	      1429	write.c	FUNCTION_23
0x40004c7	      0xe800000000	                          call 0x40004cc	      1466	write.c	FUNCTION_23	CALL_5
0x40004cc	        0x498b4e50	            mov rcx, qword [r14 + 0x50] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40004d0	      0x4889442430	             mov qword [rsp + 0x30], rax	      1466	write.c	FUNCTION_23	CALL_5
0x40004d5	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40004d9	          0x4889ca	                            mov rdx, rcx	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40004dc	          0x4829c2	                            sub rdx, rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40004df	          0x4839ea	                            cmp rdx, rbp	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40004e2	     0xf8228010000	                            jb 0x4000610	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40004e8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1474	write.c	FUNCTION_23
0x40004ed	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1475	write.c	FUNCTION_23	CALL_11
0x40004f2	          0x4801e8	                            add rax, rbp	      1475	write.c	FUNCTION_23	CALL_11
0x40004f5	        0x48894248	             mov qword [rdx + 0x48], rax	      1475	write.c	FUNCTION_23	CALL_11
0x40004f9	        0x48895f10	             mov qword [rdi + 0x10], rbx	      1477	write.c	FUNCTION_23
0x40004fd	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      1483	write.c	FUNCTION_23	FOR_1
0x4000502	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      1474	write.c	FUNCTION_23
0x4000507	    0xc7475c010000	               mov dword [rdi + 0x5c], 1	      1476	write.c	FUNCTION_23
0x400050e	          0x488b13	                    mov rdx, qword [rbx]	      1483	write.c	FUNCTION_23	FOR_1
0x4000511	          0x4c8b32	                    mov r14, qword [rdx]	      1483	write.c	FUNCTION_23	FOR_1
0x4000514	          0x4d85f6	                           test r14, r14	      1483	write.c	FUNCTION_23	FOR_1
0x4000517	     0xf847e010000	                            je 0x400069b	      1483	write.c	FUNCTION_23	FOR_1
0x400051d	      0x41837e5c01	               cmp dword [r14 + 0x5c], 1	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000522	     0xf859d000000	                           jne 0x40005c5	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000528	      0x4c897c2450	             mov qword [rsp + 0x50], r15	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x400052d	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4000532	      0x4c89642458	             mov qword [rsp + 0x58], r12	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4000537	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x400053b	        0x4d8d6e7c	                   lea r13, [r14 + 0x7c]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x400053f	          0x4885d2	                           test rdx, rdx	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4000542	     0xf8598000000	                           jne 0x40005e0	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4000548	        0x498b5e20	            mov rbx, qword [r14 + 0x20] 	      1503	write.c	FUNCTION_23	FOR_1
0x400054c	        0x4d8b6618	            mov r12, qword [r14 + 0x18] 	      1502	write.c	FUNCTION_23	FOR_1
0x4000550	          0x4885db	                           test rbx, rbx	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000553	     0xf88d6020000	                            js 0x400082f	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000559	          0x4d85e4	                           test r12, r12	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x400055c	            0x744f	                            je 0x40005ad	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x400055e	          0x4885db	                           test rbx, rbx	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000561	            0x744a	                            je 0x40005ad	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000563	      0x4c89742428	             mov qword [rsp + 0x28], r14	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000568	          0x4901d5	                            add r13, rdx	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x400056b	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000570	            0xeb11	                           jmp 0x4000583	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000572	    0x660f1f440000	                    nop word [rax + rax]	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000578	            0x4898	                                    cdqe	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x400057a	          0x4801c5	                            add rbp, rax	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x400057d	        0x4883eb01	                              sub rbx, 1	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000581	            0x7425	                            je 0x40005a8	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000583	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000588	          0x4d89f0	                             mov r8, r14	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x400058b	          0x4489e2	                           mov edx, r12d	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x400058e	          0x4c89ee	                            mov rsi, r13	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000591	          0x4c89ff	                            mov rdi, r15	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000594	      0xe8d7fcffff	                  call sym.compress_frag	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000599	            0x85c0	                           test eax, eax	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x400059b	            0x79db	                           jns 0x4000578	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x400059d	      0xe9a4feffff	                           jmp 0x4000446	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x40005a2	    0x660f1f440000	                    nop word [rax + rax]	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x40005a8	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x40005ad	        0x4d8b7638	            mov r14, qword [r14 + 0x38] 	      1485	write.c	FUNCTION_23	FOR_1
0x40005b1	          0x4d85f6	                           test r14, r14	      1483	write.c	FUNCTION_23	FOR_1
0x40005b4	     0xf84ca000000	                            je 0x4000684	      1483	write.c	FUNCTION_23	FOR_1
0x40005ba	      0x41837e5c01	               cmp dword [r14 + 0x5c], 1	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40005bf	     0xf8472ffffff	                            je 0x4000537	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40005c5	      0xba00000000	                              mov edx, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40005ca	      0xbed4050000	                          mov esi, 0x5d4	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40005cf	      0xbf00000000	                              mov edi, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40005d4	      0xe800000000	                          call 0x40005d9	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40005d9	     0xf1f80000000	                         nop dword [rax]	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40005e0	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40005e5	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40005ea	          0x4c89ee	                            mov rsi, r13	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40005ed	          0x4c89ff	                            mov rdi, r15	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40005f0	      0xe87bfcffff	                  call sym.compress_frag	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40005f5	            0x85c0	                           test eax, eax	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x40005f7	     0xf8849feffff	                            js 0x4000446	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x40005fd	            0x4898	                                    cdqe	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x40005ff	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x4000603	          0x4801c5	                            add rbp, rax	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x4000606	      0xe93dffffff	                           jmp 0x4000548	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x400060b	       0xf1f440000	                   nop dword [rax + rax]	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x4000610	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1468	write.c	FUNCTION_23	CALL_7
0x4000615	      0xe800000000	                          call 0x400061a	      1468	write.c	FUNCTION_23	CALL_7
0x400061a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x400061f	      0x4889442430	             mov qword [rsp + 0x30], rax	      1468	write.c	FUNCTION_23	CALL_7
0x4000624	        0x488b4f50	            mov rcx, qword [rdi + 0x50] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4000628	        0x488b4748	            mov rax, qword [rdi + 0x48] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x400062c	          0x4889ca	                            mov rdx, rcx	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x400062f	          0x4829c2	                            sub rdx, rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4000632	          0x4839ea	                            cmp rdx, rbp	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4000635	     0xf83adfeffff	                           jae 0x40004e8	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x400063b	      0xbe00000000	                              mov esi, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000640	            0x31ff	                            xor edi, edi	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000642	    0x41b805000000	                              mov r8d, 5	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000648	          0x4889e9	                            mov rcx, rbp	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x400064b	      0xba00000000	                              mov edx, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000650	      0xe800000000	                          call 0x4000655	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000655	          0x4889ee	                            mov rsi, rbp	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000658	          0x4889c7	                            mov rdi, rax	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x400065b	            0x31c0	                            xor eax, eax	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x400065d	      0xe800000000	                          call 0x4000662	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000662	    0x660f1f440000	                    nop word [rax + rax]	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000668	    0x488b3d000000	            mov rdi, qword [0x0400066f] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400066f	            0x31f6	                            xor esi, esi	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000671	      0xe800000000	                          call 0x4000676	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000676	            0x89c5	                            mov ebp, eax	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000678	          0x4889eb	                            mov rbx, rbp	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400067b	        0x896c244c	             mov dword [rsp + 0x4c], ebp	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400067f	      0xe92ffeffff	                           jmp 0x40004b3	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000684	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000689	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400068e	      0x4c8b642458	            mov r12, qword [rsp + 0x58] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000693	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000697	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400069b	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006a0	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006a5	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006aa	            0xeb61	                           jmp 0x400070d	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006ac	         0xf1f4000	                         nop dword [rax]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006b0	          0x4801c2	                            add rdx, rax	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x40006b3	      0x488d4c2464	                   lea rcx, [rsp + 0x64]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006b8	      0x488d742470	                   lea rsi, [rsp + 0x70]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006bd	        0x48895348	             mov qword [rbx + 0x48], rdx	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x40006c1	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006c6	          0x4c89ef	                            mov rdi, r13	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006c9	      0x4889442470	             mov qword [rsp + 0x70], rax	      1541	write.c	FUNCTION_23	FOR_2	CALL_22
0x40006ce	      0xe800000000	                          call 0x40006d3	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40006d3	            0x85c0	                           test eax, eax	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x40006d5	     0xf886bfdffff	                            js 0x4000446	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x40006db	      0x4863542464	         movsxd rdx, dword [rsp + 0x64] 	      1547	write.c	FUNCTION_23	FOR_2
0x40006e0	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1547	write.c	FUNCTION_23	FOR_2
0x40006e5	        0x48015110	            add qword [rcx + 0x10], rdx 	      1547	write.c	FUNCTION_23	FOR_2
0x40006e9	          0x4801d5	                            add rbp, rdx	      1548	write.c	FUNCTION_23	FOR_2
0x40006ec	        0x8b542460	            mov edx, dword [rsp + 0x60] 	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x40006f0	            0x85d2	                           test edx, edx	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x40006f2	            0x7e09	                           jle 0x40006fd	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x40006f4	            0xf7da	                                 neg edx	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x40006f6	          0x4863d2	                         movsxd rdx, edx	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x40006f9	        0x48015348	            add qword [rbx + 0x48], rdx 	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x40006fd	            0x85c0	                           test eax, eax	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x40006ff	     0xf84b7000000	                            je 0x40007bc	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x4000705	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x4000709	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x400070d	          0x4889ce	                            mov rsi, rcx	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000710	          0x4829c6	                            sub rsi, rax	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000713	            0x85f6	                           test esi, esi	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x4000715	          0x4863d6	                         movsxd rdx, esi	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000718	        0x89742460	             mov dword [rsp + 0x60], esi	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x400071c	            0x7f92	                            jg 0x40006b0	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x400071e	        0x48394340	            cmp qword [rbx + 0x40], rax 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000722	     0xf8488000000	                            je 0x40007b0	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000728	        0x488b7360	            mov rsi, qword [rbx + 0x60] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400072c	          0x4889cf	                            mov rdi, rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400072f	        0x488d1430	                    lea rdx, [rax + rsi]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000733	          0x48f7d6	                                 not rsi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000736	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400073a	          0x4821f2	                            and rdx, rsi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400073d	          0x4889d6	                            mov rsi, rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000740	          0x4829c7	                            sub rdi, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000743	        0x48895348	             mov qword [rbx + 0x48], rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000747	          0x4829c6	                            sub rsi, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400074a	          0x4839fe	                            cmp rsi, rdi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400074d	            0x7607	                           jbe 0x4000756	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400074f	        0x48894b48	             mov qword [rbx + 0x48], rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000753	          0x4889ca	                            mov rdx, rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000756	        0x48895340	             mov qword [rbx + 0x40], rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400075a	          0x4c89f7	                            mov rdi, r14	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x400075d	      0xe800000000	                          call 0x4000762	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4000762	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x4000767	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1534	write.c	FUNCTION_23	FOR_2	IF_11
0x400076e	      0x4889442468	             mov qword [rsp + 0x68], rax	      1536	write.c	FUNCTION_23	FOR_2	IF_11
0x4000773	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000777	        0x48894238	             mov qword [rdx + 0x38], rax	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x400077b	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x400077f	          0x4829c1	                            sub rcx, rax	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000782	            0x85c9	                           test ecx, ecx	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x4000784	          0x4863d1	                         movsxd rdx, ecx	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000787	        0x894c2460	             mov dword [rsp + 0x60], ecx	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x400078b	     0xf8f1fffffff	                            jg 0x40006b0	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x4000791	            0x31ff	                            xor edi, edi	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000793	      0xba05000000	                              mov edx, 5	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000798	      0xbe00000000	                              mov esi, 0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x400079d	      0xe800000000	                          call 0x40007a2	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007a2	          0x4889c7	                            mov rdi, rax	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007a5	            0x31c0	                            xor eax, eax	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007a7	      0xe800000000	                          call 0x40007ac	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007ac	         0xf1f4000	                         nop dword [rax]	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007b0	    0x808b80000000	                 or byte [rbx + 0x80], 2	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x40007b7	      0xe96cffffff	                           jmp 0x4000728	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x40007bc	          0x4939ef	                            cmp r15, rbp	      1560	write.c	FUNCTION_23	IF_16
0x40007bf	     0xf8681fcffff	                           jbe 0x4000446	      1560	write.c	FUNCTION_23	IF_16
0x40007c5	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1564	write.c	FUNCTION_23
0x40007ca	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      1564	write.c	FUNCTION_23
0x40007cf	          0x4c89e2	                            mov rdx, r12	      1568	write.c	FUNCTION_23	CALL_26
0x40007d2	          0x488b00	                    mov rax, qword [rax]	      1564	write.c	FUNCTION_23
0x40007d5	        0x488d737c	                   lea rsi, [rbx + 0x7c]	      1478	write.c	FUNCTION_23
0x40007d9	          0x488918	                    mov qword [rax], rbx	      1564	write.c	FUNCTION_23
0x40007dc	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1568	write.c	FUNCTION_23	CALL_26
0x40007e1	        0x48894808	                mov qword [rax + 8], rcx	      1565	write.c	FUNCTION_23
0x40007e5	          0x4889df	                            mov rdi, rbx	      1568	write.c	FUNCTION_23	CALL_26
0x40007e8	      0xe800000000	                          call 0x40007ed	      1568	write.c	FUNCTION_23	CALL_26
0x40007ed	          0x4889ea	                            mov rdx, rbp	      1569	write.c	FUNCTION_23	CALL_27
0x40007f0	          0x4c89e6	                            mov rsi, r12	      1569	write.c	FUNCTION_23	CALL_27
0x40007f3	          0x4889df	                            mov rdi, rbx	      1569	write.c	FUNCTION_23	CALL_27
0x40007f6	      0xe800000000	                          call 0x40007fb	      1569	write.c	FUNCTION_23	CALL_27
0x40007fb	            0x85c0	                           test eax, eax	      1570	write.c	FUNCTION_23	CALL_28
0x40007fd	            0x7444	                            je 0x4000843	      1570	write.c	FUNCTION_23	CALL_28
0x40007ff	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	      1571	write.c	FUNCTION_23	IF_17
0x4000804	     0xf853cfcffff	                           jne 0x4000446	      1571	write.c	FUNCTION_23	IF_17
0x400080a	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x400080f	            0x31d2	                            xor edx, edx	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000811	      0xbf00000000	                              mov edi, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000816	            0x31c0	                            xor eax, eax	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000818	        0x4883c601	                              add rsi, 1	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x400081c	      0xe800000000	                          call 0x4000821	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000821	        0x49890424	                    mov qword [r12], rax	      1574	write.c	FUNCTION_23	IF_17
0x4000825	      0xe91cfcffff	                           jmp 0x4000446	      1574	write.c	FUNCTION_23	IF_17
0x400082a	      0xe800000000	                          call 0x400082f	      1576	write.c	FUNCTION_23
0x400082f	      0xba00000000	                              mov edx, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000834	      0xbee0050000	                          mov esi, 0x5e0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000839	      0xbf00000000	                              mov edi, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x400083e	      0xe800000000	                          call 0x4000843	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000843	      0xba00000000	                              mov edx, 0	      1570	write.c	FUNCTION_23	CALL_28
0x4000848	      0xbe22060000	                          mov esi, 0x622	      1570	write.c	FUNCTION_23	CALL_28
0x400084d	      0xbf00000000	                              mov edi, 0	      1570	write.c	FUNCTION_23	CALL_28
0x4000852	      0xe800000000	                          call 0x4000857	      1570	write.c	FUNCTION_23	CALL_28
fix_new_internal	FOR,0:DO,0:SWITCH,0:functions,0:CALL,8:WHILE,0:IF,4:ELSE,2	131
0x4000050	            0x4155	                                push r13	       154	write.c	FUNCTION_1
0x4000052	            0x4154	                                push r12	       154	write.c	FUNCTION_1
0x4000054	          0x4c63e6	                         movsxd r12, esi	       154	write.c	FUNCTION_1
0x4000057	              0x55	                                push rbp	       154	write.c	FUNCTION_1
0x4000058	              0x53	                                push rbx	       154	write.c	FUNCTION_1
0x4000059	            0x89d5	                            mov ebp, edx	       154	write.c	FUNCTION_1
0x400005b	          0x4989fd	                            mov r13, rdi	       154	write.c	FUNCTION_1
0x400005e	        0x4883ec28	                           sub rsp, 0x28	       154	write.c	FUNCTION_1
0x4000062	    0x488b35000000	            mov rsi, qword [0x04000069] 	       159	write.c	FUNCTION_1	CALL_1
0x4000069	    0x488b05000000	            mov rax, qword [0x04000070] 	       159	write.c	FUNCTION_1	CALL_1
0x4000070	    0x830500000000	               add dword [0x04000077], 1	       157	write.c	FUNCTION_1
0x4000077	          0x4889f2	                            mov rdx, rsi	       159	write.c	FUNCTION_1	CALL_1
0x400007a	          0x4829c2	                            sub rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x400007d	        0x4883fa6f	                           cmp rdx, 0x6f	       159	write.c	FUNCTION_1	CALL_1
0x4000081	     0xf8651010000	                           jbe 0x40001d8	       159	write.c	FUNCTION_1	CALL_1
0x4000087	    0x488b1d000000	            mov rbx, qword [0x0400008e] 	       159	write.c	FUNCTION_1	CALL_1
0x400008e	        0x4883c070	                           add rax, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x4000092	          0x4839d8	                            cmp rax, rbx	       159	write.c	FUNCTION_1	CALL_1
0x4000095	     0xf8485010000	                            je 0x4000220	       159	write.c	FUNCTION_1	CALL_1
0x400009b	    0x488b15000000	            mov rdx, qword [0x040000a2] 	       159	write.c	FUNCTION_1	CALL_1
0x40000a2	          0x4989f2	                            mov r10, rsi	       159	write.c	FUNCTION_1	CALL_1
0x40000a5	          0x4801d0	                            add rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000a8	          0x48f7d2	                                 not rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000ab	          0x4821d0	                            and rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000ae	    0x488b15000000	            mov rdx, qword [0x040000b5] 	       159	write.c	FUNCTION_1	CALL_1
0x40000b5	          0x4889c7	                            mov rdi, rax	       159	write.c	FUNCTION_1	CALL_1
0x40000b8	    0x488905000000	            mov qword [0x040000bf], rax 	       159	write.c	FUNCTION_1	CALL_1
0x40000bf	          0x4829d7	                            sub rdi, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000c2	          0x4929d2	                            sub r10, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40000c5	          0x4c39d7	                            cmp rdi, r10	       159	write.c	FUNCTION_1	CALL_1
0x40000c8	            0x760a	                           jbe 0x40000d4	       159	write.c	FUNCTION_1	CALL_1
0x40000ca	    0x488935000000	            mov qword [0x040000d1], rsi 	       159	write.c	FUNCTION_1	CALL_1
0x40000d1	          0x4889f0	                            mov rax, rsi	       159	write.c	FUNCTION_1	CALL_1
0x40000d4	    0x488905000000	            mov qword [0x040000db], rax 	       159	write.c	FUNCTION_1	CALL_1
0x40000db	        0x400fb6c5	                          movzx eax, bpl	       165	write.c	FUNCTION_1	IF_1
0x40000df	        0x4c896b08	                mov qword [rbx + 8], r13	       161	write.c	FUNCTION_1
0x40000e3	            0x39c5	                            cmp ebp, eax	       165	write.c	FUNCTION_1	IF_1
0x40000e5	        0x4c896310	             mov qword [rbx + 0x10], r12	       162	write.c	FUNCTION_1
0x40000e9	        0x40886b02	                 mov byte [rbx + 2], bpl	       163	write.c	FUNCTION_1
0x40000ed	     0xf8542010000	                           jne 0x4000235	       165	write.c	FUNCTION_1	IF_1
0x40000f3	    0x488b05000000	            mov rax, qword [0x040000fa] 	       173	write.c	FUNCTION_1
0x40000fa	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       196	write.c	FUNCTION_1	CALL_6
0x40000fe	        0x48894b18	             mov qword [rbx + 0x18], rcx	       170	write.c	FUNCTION_1
0x4000102	        0x4c894320	              mov qword [rbx + 0x20], r8	       171	write.c	FUNCTION_1
0x4000106	        0x4c894b28	              mov qword [rbx + 0x28], r9	       172	write.c	FUNCTION_1
0x400010a	    0x48c743480000	               mov qword [rbx + 0x48], 0	       179	write.c	FUNCTION_1
0x4000112	    0x48c743580000	               mov qword [rbx + 0x58], 0	       180	write.c	FUNCTION_1
0x400011a	        0x48894330	             mov qword [rbx + 0x30], rax	       173	write.c	FUNCTION_1
0x400011e	    0x488b05000000	            mov rax, qword [0x04000125] 	       174	write.c	FUNCTION_1
0x4000125	        0xc6430100	                   mov byte [rbx + 1], 0	       178	write.c	FUNCTION_1
0x4000129	        0x48894338	             mov qword [rbx + 0x38], rax	       174	write.c	FUNCTION_1
0x400012d	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       176	write.c	FUNCTION_1
0x4000131	          0x894350	             mov dword [rbx + 0x50], eax	       176	write.c	FUNCTION_1
0x4000134	       0xfb6442450	           movzx eax, byte [rsp + 0x50] 	       185	write.c	FUNCTION_1
0x4000139	          0x83e001	                              and eax, 1	       185	write.c	FUNCTION_1
0x400013c	            0x8803	                      mov byte [rbx], al	       185	write.c	FUNCTION_1
0x400013e	      0xe800000000	                          call 0x4000143	       196	write.c	FUNCTION_1	CALL_6
0x4000143	    0x8b3500000000	            mov esi, dword [0x04000149] 	       202	write.c	FUNCTION_1
0x4000149	        0x48894360	             mov qword [rbx + 0x60], rax	       196	write.c	FUNCTION_1	CALL_6
0x400014d	            0x85f6	                           test esi, esi	       202	write.c	FUNCTION_1
0x400014f	            0x753f	                           jne 0x4000190	       202	write.c	FUNCTION_1
0x4000151	    0x488b05000000	            mov rax, qword [0x04000158] 	       202	write.c	FUNCTION_1
0x4000158	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	       207	write.c	FUNCTION_1	IF_2
0x400015c	        0x488d5020	                   lea rdx, [rax + 0x20]	       202	write.c	FUNCTION_1
0x4000160	        0x4883c028	                           add rax, 0x28	       205	write.c	FUNCTION_1
0x4000164	            0x85c9	                           test ecx, ecx	       207	write.c	FUNCTION_1	IF_2
0x4000166	            0x7446	                            je 0x40001ae	       207	write.c	FUNCTION_1	IF_2
0x4000168	          0x488b0a	                    mov rcx, qword [rdx]	       209	write.c	FUNCTION_1	IF_2
0x400016b	        0x48894b40	             mov qword [rbx + 0x40], rcx	       209	write.c	FUNCTION_1	IF_2
0x400016f	          0x48891a	                    mov qword [rdx], rbx	       210	write.c	FUNCTION_1	IF_2
0x4000172	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       211	write.c	FUNCTION_1	IF_2	IF_3
0x4000177	            0x7449	                            je 0x40001c2	       211	write.c	FUNCTION_1	IF_2	IF_3
0x4000179	        0x4883c428	                           add rsp, 0x28	       226	write.c	FUNCTION_1	ELSE_2
0x400017d	          0x4889d8	                            mov rax, rbx	       226	write.c	FUNCTION_1	ELSE_2
0x4000180	              0x5b	                                 pop rbx	       226	write.c	FUNCTION_1	ELSE_2
0x4000181	              0x5d	                                 pop rbp	       226	write.c	FUNCTION_1	ELSE_2
0x4000182	            0x415c	                                 pop r12	       226	write.c	FUNCTION_1	ELSE_2
0x4000184	            0x415d	                                 pop r13	       226	write.c	FUNCTION_1	ELSE_2
0x4000186	              0xc3	                                     ret	       226	write.c	FUNCTION_1	ELSE_2
0x4000187	    0x660f1f840000	                    nop word [rax + rax]	       226	write.c	FUNCTION_1	ELSE_2
0x4000190	    0x488b05000000	            mov rax, qword [0x04000197] 	       201	write.c	FUNCTION_1	CALL_7
0x4000197	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	       207	write.c	FUNCTION_1	IF_2
0x400019b	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       201	write.c	FUNCTION_1	CALL_7
0x40001a2	        0x488d5010	                   lea rdx, [rax + 0x10]	       202	write.c	FUNCTION_1
0x40001a6	        0x4883c018	                           add rax, 0x18	       205	write.c	FUNCTION_1
0x40001aa	            0x85c9	                           test ecx, ecx	       207	write.c	FUNCTION_1	IF_2
0x40001ac	            0x75ba	                           jne 0x4000168	       207	write.c	FUNCTION_1	IF_2
0x40001ae	    0x48c743400000	               mov qword [rbx + 0x40], 0	       216	write.c	FUNCTION_1	ELSE_1
0x40001b6	          0x488b08	                    mov rcx, qword [rax]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x40001b9	          0x4885c9	                           test rcx, rcx	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x40001bc	            0x7472	                            je 0x4000230	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x40001be	        0x48895940	             mov qword [rcx + 0x40], rbx	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x40001c2	          0x488918	                    mov qword [rax], rbx	       221	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x40001c5	        0x4883c428	                           add rsp, 0x28	       226	write.c	FUNCTION_1	ELSE_2
0x40001c9	          0x4889d8	                            mov rax, rbx	       226	write.c	FUNCTION_1	ELSE_2
0x40001cc	              0x5b	                                 pop rbx	       226	write.c	FUNCTION_1	ELSE_2
0x40001cd	              0x5d	                                 pop rbp	       226	write.c	FUNCTION_1	ELSE_2
0x40001ce	            0x415c	                                 pop r12	       226	write.c	FUNCTION_1	ELSE_2
0x40001d0	            0x415d	                                 pop r13	       226	write.c	FUNCTION_1	ELSE_2
0x40001d2	              0xc3	                                     ret	       226	write.c	FUNCTION_1	ELSE_2
0x40001d3	       0xf1f440000	                   nop dword [rax + rax]	       226	write.c	FUNCTION_1	ELSE_2
0x40001d8	      0xbe70000000	                           mov esi, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x40001dd	      0xbf00000000	                              mov edi, 0	       159	write.c	FUNCTION_1	CALL_1
0x40001e2	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       159	write.c	FUNCTION_1	CALL_1
0x40001e7	      0x4c89442410	              mov qword [rsp + 0x10], r8	       159	write.c	FUNCTION_1	CALL_1
0x40001ec	      0x48894c2408	                mov qword [rsp + 8], rcx	       159	write.c	FUNCTION_1	CALL_1
0x40001f1	      0xe800000000	                          call 0x40001f6	       159	write.c	FUNCTION_1	CALL_1
0x40001f6	    0x488b05000000	            mov rax, qword [0x040001fd] 	       159	write.c	FUNCTION_1	CALL_1
0x40001fd	    0x488b35000000	            mov rsi, qword [0x04000204] 	       159	write.c	FUNCTION_1	CALL_1
0x4000204	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       159	write.c	FUNCTION_1	CALL_1
0x4000209	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       159	write.c	FUNCTION_1	CALL_1
0x400020e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       159	write.c	FUNCTION_1	CALL_1
0x4000213	      0xe96ffeffff	                           jmp 0x4000087	       159	write.c	FUNCTION_1	CALL_1
0x4000218	     0xf1f84000000	                   nop dword [rax + rax]	       159	write.c	FUNCTION_1	CALL_1
0x4000220	    0x800d00000000	                 or byte [0x04000227], 2	       159	write.c	FUNCTION_1	CALL_1
0x4000227	      0xe96ffeffff	                           jmp 0x400009b	       159	write.c	FUNCTION_1	CALL_1
0x400022c	         0xf1f4000	                         nop dword [rax]	       159	write.c	FUNCTION_1	CALL_1
0x4000230	          0x48891a	                    mov qword [rdx], rbx	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4000233	            0xeb8d	                           jmp 0x40001c2	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4000235	      0xba05000000	                              mov edx, 5	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x400023a	      0xbe00000000	                              mov esi, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x400023f	            0x31ff	                            xor edi, edi	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000241	      0xe800000000	                          call 0x4000246	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000246	            0x89ee	                            mov esi, ebp	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000248	          0x4889c7	                            mov rdi, rax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x400024b	            0x31c0	                            xor eax, eax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x400024d	      0xe800000000	                          call 0x4000252	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000252	      0xba00000000	                              mov edx, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x4000257	      0xbea8000000	                           mov esi, 0xa8	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x400025c	      0xbf00000000	                              mov edi, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x4000261	      0xe800000000	                          call 0x4000266	       168	write.c	FUNCTION_1	IF_1	CALL_4
fix_new_exp	FOR,0:DO,0:SWITCH,1:functions,0:CALL,6:WHILE,0:IF,0:ELSE,0	90
0x4001ac0	            0x4156	                                push r14	       254	write.c	FUNCTION_3
0x4001ac2	            0x4155	                                push r13	       254	write.c	FUNCTION_3
0x4001ac4	          0x4189d6	                           mov r14d, edx	       254	write.c	FUNCTION_3
0x4001ac7	            0x4154	                                push r12	       254	write.c	FUNCTION_3
0x4001ac9	              0x55	                                push rbp	       254	write.c	FUNCTION_3
0x4001aca	          0x4989fc	                            mov r12, rdi	       254	write.c	FUNCTION_3
0x4001acd	              0x53	                                push rbx	       254	write.c	FUNCTION_3
0x4001ace	          0x4189f5	                           mov r13d, esi	       254	write.c	FUNCTION_3
0x4001ad1	          0x4889cb	                            mov rbx, rcx	       254	write.c	FUNCTION_3
0x4001ad4	          0x4489cd	                            mov ebp, r9d	       254	write.c	FUNCTION_3
0x4001ad7	        0x4883ec10	                           sub rsp, 0x10	       254	write.c	FUNCTION_3
0x4001adb	        0x80791814	            cmp byte [rcx + 0x18], 0x14 	       259	write.c	FUNCTION_3	SWITCH_1
0x4001adf	     0xf87eb000000	                            ja 0x4001bd0	       259	write.c	FUNCTION_3	SWITCH_1
0x4001ae5	         0xfb64118	           movzx eax, byte [rcx + 0x18] 	       259	write.c	FUNCTION_3	SWITCH_1
0x4001ae9	    0xff24c5000000	                       jmp qword [rax*8]	       259	write.c	FUNCTION_3	SWITCH_1
0x4001af0	            0x31d2	                            xor edx, edx	       256	write.c	FUNCTION_3
0x4001af2	            0x31c9	                            xor ecx, ecx	       255	write.c	FUNCTION_3
0x4001af4	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	       300	write.c	FUNCTION_3	SWITCH_1
0x4001af8	        0x4883ec08	                              sub rsp, 8	       308	write.c	FUNCTION_3	CALL_6
0x4001afc	          0x4489ee	                           mov esi, r13d	       308	write.c	FUNCTION_3	CALL_6
0x4001aff	          0x4c89e7	                            mov rdi, r12	       308	write.c	FUNCTION_3	CALL_6
0x4001b02	            0x6a00	                                  push 0	       308	write.c	FUNCTION_3	CALL_6
0x4001b04	              0x55	                                push rbp	       308	write.c	FUNCTION_3	CALL_6
0x4001b05	            0x4150	                                 push r8	       308	write.c	FUNCTION_3	CALL_6
0x4001b07	          0x4989d0	                             mov r8, rdx	       308	write.c	FUNCTION_3	CALL_6
0x4001b0a	          0x4489f2	                           mov edx, r14d	       308	write.c	FUNCTION_3	CALL_6
0x4001b0d	      0xe83ee5ffff	               call sym.fix_new_internal	       308	write.c	FUNCTION_3	CALL_6
0x4001b12	        0x4883c430	                           add rsp, 0x30	       310	write.c	FUNCTION_3
0x4001b16	              0x5b	                                 pop rbx	       310	write.c	FUNCTION_3
0x4001b17	              0x5d	                                 pop rbp	       310	write.c	FUNCTION_3
0x4001b18	            0x415c	                                 pop r12	       310	write.c	FUNCTION_3
0x4001b1a	            0x415d	                                 pop r13	       310	write.c	FUNCTION_3
0x4001b1c	            0x415e	                                 pop r14	       310	write.c	FUNCTION_3
0x4001b1e	              0xc3	                                     ret	       310	write.c	FUNCTION_3
0x4001b1f	              0x90	                                     nop	       310	write.c	FUNCTION_3
0x4001b20	          0x4531c9	                            xor r9d, r9d	       257	write.c	FUNCTION_3
0x4001b23	            0x31d2	                            xor edx, edx	       256	write.c	FUNCTION_3
0x4001b25	            0x31c9	                            xor ecx, ecx	       255	write.c	FUNCTION_3
0x4001b27	            0xebcf	                           jmp 0x4001af8	       255	write.c	FUNCTION_3
0x4001b29	     0xf1f80000000	                         nop dword [rax]	       255	write.c	FUNCTION_3
0x4001b30	        0x488b5108	                mov rdx, qword [rcx + 8]	       294	write.c	FUNCTION_3	SWITCH_1
0x4001b34	          0x488b0b	                    mov rcx, qword [rbx]	       297	write.c	FUNCTION_3	SWITCH_1
0x4001b37	            0xebbb	                           jmp 0x4001af4	       297	write.c	FUNCTION_3	SWITCH_1
0x4001b39	     0xf1f80000000	                         nop dword [rax]	       297	write.c	FUNCTION_3	SWITCH_1
0x4001b40	          0x488b11	                    mov rdx, qword [rcx]	       289	write.c	FUNCTION_3	SWITCH_1
0x4001b43	        0x4c8b4910	              mov r9, qword [rcx + 0x10]	       290	write.c	FUNCTION_3	SWITCH_1
0x4001b47	            0x31c9	                            xor ecx, ecx	       255	write.c	FUNCTION_3
0x4001b49	            0xebad	                           jmp 0x4001af8	       291	write.c	FUNCTION_3	SWITCH_1
0x4001b4b	       0xf1f440000	                   nop dword [rax + rax]	       291	write.c	FUNCTION_3	SWITCH_1
0x4001b50	          0x4889cf	                            mov rdi, rcx	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x4001b53	      0x448944240c	              mov dword [rsp + 0xc], r8d	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x4001b58	      0xe800000000	                          call 0x4001b5d	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x4001b5d	        0xc6431803	                mov byte [rbx + 0x18], 3	       274	write.c	FUNCTION_3	SWITCH_1
0x4001b61	    0x48c743080000	                  mov qword [rbx + 8], 0	       275	write.c	FUNCTION_3	SWITCH_1
0x4001b69	            0x31d2	                            xor edx, edx	       256	write.c	FUNCTION_3
0x4001b6b	          0x488903	                    mov qword [rbx], rax	       276	write.c	FUNCTION_3	SWITCH_1
0x4001b6e	    0x48c743100000	               mov qword [rbx + 0x10], 0	       277	write.c	FUNCTION_3	SWITCH_1
0x4001b76	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       277	write.c	FUNCTION_3	SWITCH_1
0x4001b7b	            0xebb7	                           jmp 0x4001b34	       277	write.c	FUNCTION_3	SWITCH_1
0x4001b7d	           0xf1f00	                         nop dword [rax]	       277	write.c	FUNCTION_3	SWITCH_1
0x4001b80	          0x488b09	                    mov rcx, qword [rcx]	       283	write.c	FUNCTION_3	SWITCH_1
0x4001b83	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	       284	write.c	FUNCTION_3	SWITCH_1
0x4001b87	            0x31d2	                            xor edx, edx	       256	write.c	FUNCTION_3
0x4001b89	      0xbd3e000000	                           mov ebp, 0x3e	       285	write.c	FUNCTION_3	SWITCH_1
0x4001b8e	      0xe965ffffff	                           jmp 0x4001af8	       286	write.c	FUNCTION_3	SWITCH_1
0x4001b93	       0xf1f440000	                   nop dword [rax + rax]	       286	write.c	FUNCTION_3	SWITCH_1
0x4001b98	      0xba05000000	                              mov edx, 5	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001b9d	      0xbe00000000	                              mov esi, 0	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001ba2	            0x31ff	                            xor edi, edi	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001ba4	      0x448944240c	              mov dword [rsp + 0xc], r8d	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001ba9	      0xe800000000	                          call 0x4001bae	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001bae	          0x4889c7	                            mov rdi, rax	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001bb1	            0x31c0	                            xor eax, eax	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001bb3	      0xe800000000	                          call 0x4001bb8	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4001bb8	          0x4531c9	                            xor r9d, r9d	       257	write.c	FUNCTION_3
0x4001bbb	            0x31d2	                            xor edx, edx	       256	write.c	FUNCTION_3
0x4001bbd	            0x31c9	                            xor ecx, ecx	       255	write.c	FUNCTION_3
0x4001bbf	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       266	write.c	FUNCTION_3	SWITCH_1
0x4001bc4	      0xe92fffffff	                           jmp 0x4001af8	       266	write.c	FUNCTION_3	SWITCH_1
0x4001bc9	     0xf1f80000000	                         nop dword [rax]	       266	write.c	FUNCTION_3	SWITCH_1
0x4001bd0	          0x4889df	                            mov rdi, rbx	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4001bd3	      0x448944240c	              mov dword [rsp + 0xc], r8d	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4001bd8	      0xe800000000	                          call 0x4001bdd	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4001bdd	          0x4531c9	                            xor r9d, r9d	       257	write.c	FUNCTION_3
0x4001be0	          0x4889c1	                            mov rcx, rax	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4001be3	            0x31d2	                            xor edx, edx	       256	write.c	FUNCTION_3
0x4001be5	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       305	write.c	FUNCTION_3	SWITCH_1
0x4001bea	      0xe909ffffff	                           jmp 0x4001af8	       305	write.c	FUNCTION_3	SWITCH_1
0x4001bef	            0x31d2	                            xor edx, edx	       256	write.c	FUNCTION_3
0x4001bf1	      0xe93effffff	                           jmp 0x4001b34	       256	write.c	FUNCTION_3
renumber_sections	FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:WHILE,0:IF,0:ELSE,0	4
0x4000040	            0x8b02	                    mov eax, dword [rdx]	       384	write.c	FUNCTION_9
0x4000042	          0x89460c	              mov dword [rsi + 0xc], eax	       384	write.c	FUNCTION_9
0x4000045	          0x830201	                      add dword [rdx], 1	       385	write.c	FUNCTION_9
0x4000048	              0xc3	                                     ret	       385	write.c	FUNCTION_9
chain_frchains_together	FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:WHILE,0:IF,1:ELSE,0	64
0x4001070	    0x4881ec080100	                          sub rsp, 0x108	       418	write.c	FUNCTION_11
0x4001077	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	write.c	FUNCTION_11
0x4001080	    0x48898424f800	             mov qword [rsp + 0xf8], rax	       418	write.c	FUNCTION_11
0x4001088	            0x31c0	                            xor eax, eax	       418	write.c	FUNCTION_11
0x400108a	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       423	write.c	FUNCTION_11	CALL_1
0x4001091	          0x4885c0	                           test rax, rax	       424	write.c	FUNCTION_11	IF_1
0x4001094	     0xf849b000000	                            je 0x4001135	       424	write.c	FUNCTION_11	IF_1
0x400109a	          0x4c8b08	                     mov r9, qword [rax]	       426	write.c	FUNCTION_11	CALL_2
0x400109d	          0x4d85c9	                             test r9, r9	       394	write.c	FUNCTION_10	FOR_1
0x40010a0	     0xf84b4000000	                            je 0x400115a	       394	write.c	FUNCTION_10	FOR_1
0x40010a6	        0x498b5108	                 mov rdx, qword [r9 + 8]	       397	write.c	FUNCTION_10	FOR_1
0x40010aa	          0x498b01	                     mov rax, qword [r9]	       396	write.c	FUNCTION_10	FOR_1
0x40010ad	          0x8b7a5c	            mov edi, dword [rdx + 0x5c] 	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010b0	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       396	write.c	FUNCTION_10	FOR_1
0x40010b8	            0x85ff	                           test edi, edi	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010ba	     0xf84ae000000	                            je 0x400116e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010c0	          0x4c89c8	                             mov rax, r9	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010c3	          0x4989e0	                             mov r8, rsp	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010c6	            0xeb2f	                           jmp 0x40010f7	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010c8	     0xf1f84000000	                   nop dword [rax + rax]	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010d0	        0x49894840	              mov qword [r8 + 0x40], rcx	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x40010d4	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x40010d8	        0x4c894718	              mov qword [rdi + 0x18], r8	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x40010dc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       394	write.c	FUNCTION_10	FOR_1
0x40010e0	          0x4885c0	                           test rax, rax	       394	write.c	FUNCTION_10	FOR_1
0x40010e3	            0x7433	                            je 0x4001118	       394	write.c	FUNCTION_10	FOR_1
0x40010e5	          0x488b08	                    mov rcx, qword [rax]	       396	write.c	FUNCTION_10	FOR_1
0x40010e8	        0x48894a38	             mov qword [rdx + 0x38], rcx	       396	write.c	FUNCTION_10	FOR_1
0x40010ec	        0x488b5008	                mov rdx, qword [rax + 8]	       397	write.c	FUNCTION_10	FOR_1
0x40010f0	          0x8b4a5c	            mov ecx, dword [rdx + 0x5c] 	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010f3	            0x85c9	                           test ecx, ecx	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010f5	            0x7477	                            je 0x400116e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40010f7	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40010fb	          0x4885c9	                           test rcx, rcx	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40010fe	            0x74dc	                            je 0x40010dc	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x4001100	    0x488bbea80000	            mov rdi, qword [rsi + 0xa8] 	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4001107	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x400110c	            0x75c2	                           jne 0x40010d0	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x400110e	        0x48894f10	             mov qword [rdi + 0x10], rcx	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4001112	            0xebbc	                           jmp 0x40010d0	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4001114	         0xf1f4000	                         nop dword [rax]	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4001118	      0x488d442470	                   lea rax, [rsp + 0x70]	       408	write.c	FUNCTION_10	CALL_5
0x400111d	          0x4839c2	                            cmp rdx, rax	       408	write.c	FUNCTION_10	CALL_5
0x4001120	            0x7438	                            je 0x400115a	       408	write.c	FUNCTION_10	CALL_5
0x4001122	          0x8b425c	            mov eax, dword [rdx + 0x5c] 	       408	write.c	FUNCTION_10	CALL_5
0x4001125	            0x85c0	                           test eax, eax	       408	write.c	FUNCTION_10	CALL_5
0x4001127	            0x7431	                            je 0x400115a	       408	write.c	FUNCTION_10	CALL_5
0x4001129	    0x48c742380000	               mov qword [rdx + 0x38], 0	       410	write.c	FUNCTION_10
0x4001131	        0x49895108	                 mov qword [r9 + 8], rdx	       426	write.c	FUNCTION_11	CALL_2
0x4001135	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	       431	write.c	FUNCTION_11
0x400113d	    0x644833042528	                xor rax, qword fs:[0x28]	       431	write.c	FUNCTION_11
0x4001146	    0xc70500000000	               mov dword [0x04001150], 1	       430	write.c	FUNCTION_11
0x4001150	            0x7530	                           jne 0x4001182	       431	write.c	FUNCTION_11
0x4001152	    0x4881c4080100	                          add rsp, 0x108	       431	write.c	FUNCTION_11
0x4001159	              0xc3	                                     ret	       431	write.c	FUNCTION_11
0x400115a	      0xba00000000	                              mov edx, 0	       408	write.c	FUNCTION_10	CALL_5
0x400115f	      0xbe99010000	                          mov esi, 0x199	       408	write.c	FUNCTION_10	CALL_5
0x4001164	      0xbf00000000	                              mov edi, 0	       408	write.c	FUNCTION_10	CALL_5
0x4001169	      0xe800000000	                          call 0x400116e	       408	write.c	FUNCTION_10	CALL_5
0x400116e	      0xba00000000	                              mov edx, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4001173	      0xbe8e010000	                          mov esi, 0x18e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4001178	      0xbf00000000	                              mov edi, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x400117d	      0xe800000000	                          call 0x4001182	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4001182	      0xe800000000	                          call 0x4001187	       431	write.c	FUNCTION_11
write_contents	FOR,3:DO,0:SWITCH,0:functions,0:CALL,29:WHILE,1:IF,11:ELSE,2	281
0x4001190	            0x4157	                                push r15	      1596	write.c	FUNCTION_25
0x4001192	            0x4156	                                push r14	      1596	write.c	FUNCTION_25
0x4001194	            0x4155	                                push r13	      1596	write.c	FUNCTION_25
0x4001196	            0x4154	                                push r12	      1596	write.c	FUNCTION_25
0x4001198	              0x55	                                push rbp	      1596	write.c	FUNCTION_25
0x4001199	              0x53	                                push rbx	      1596	write.c	FUNCTION_25
0x400119a	    0x4881ec280100	                          sub rsp, 0x128	      1596	write.c	FUNCTION_25
0x40011a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1596	write.c	FUNCTION_25
0x40011aa	    0x488984241801	            mov qword [rsp + 0x118], rax	      1596	write.c	FUNCTION_25
0x40011b2	            0x31c0	                            xor eax, eax	      1596	write.c	FUNCTION_25
0x40011b4	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1597	write.c	FUNCTION_25	CALL_1
0x40011bb	      0x4889742408	                mov qword [rsp + 8], rsi	      1596	write.c	FUNCTION_25
0x40011c0	          0x4885c0	                           test rax, rax	      1602	write.c	FUNCTION_25	IF_1
0x40011c3	     0xf845f020000	                            je 0x4001428	      1602	write.c	FUNCTION_25	IF_1
0x40011c9	        0xf6462101	               test byte [rsi + 0x21], 1	      1603	write.c	FUNCTION_25	IF_1
0x40011cd	     0xf8455020000	                            je 0x4001428	      1603	write.c	FUNCTION_25	IF_1
0x40011d3	          0x488b00	                    mov rax, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x40011d6	          0x488b00	                    mov rax, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x40011d9	          0x4885c0	                           test rax, rax	      1606	write.c	FUNCTION_25	FOR_1
0x40011dc	        0x48890424	                    mov qword [rsp], rax	      1606	write.c	FUNCTION_25	FOR_1
0x40011e0	     0xf8442020000	                            je 0x4001428	      1606	write.c	FUNCTION_25	FOR_1
0x40011e6	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40011e9	          0x83f80a	                            cmp eax, 0xa	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40011ec	            0x7409	                            je 0x40011f7	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40011ee	          0x83f801	                              cmp eax, 1	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40011f1	     0xf85c7000000	                           jne 0x40012be	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40011f7	            0x31ed	                            xor ebp, ebp	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40011f9	     0xf1f80000000	                         nop dword [rax]	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4001200	        0x488b0424	                    mov rax, qword [rsp]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001204	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001208	          0x4d85c0	                             test r8, r8	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x400120b	     0xf85c7000000	                           jne 0x40012d8	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001211	        0x488d587c	                   lea rbx, [rax + 0x7c]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001215	          0x4531ff	                          xor r15d, r15d	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001218	        0x488b0424	                    mov rax, qword [rsp]	      1633	write.c	FUNCTION_25	FOR_1
0x400121c	          0x4901df	                            add r15, rbx	      1635	write.c	FUNCTION_25	FOR_1
0x400121f	        0x83785c0a	            cmp dword [rax + 0x5c], 0xa 	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x4001223	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      1633	write.c	FUNCTION_25	FOR_1
0x4001227	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	      1634	write.c	FUNCTION_25	FOR_1
0x400122b	     0xf84df000000	                            je 0x4001310	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x4001231	          0x4d85ed	                           test r13, r13	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001234	     0xf88e9020000	                            js 0x4001523	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x400123a	          0x4d85e4	                           test r12, r12	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x400123d	            0x7451	                            je 0x4001290	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x400123f	          0x4d85ed	                           test r13, r13	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4001242	            0x744c	                            je 0x4001290	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4001244	    0x4981fc000100	                          cmp r12, 0x100	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x400124b	     0xf8637010000	                           jbe 0x4001388	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001251	          0x4c89eb	                            mov rbx, r13	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001254	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001259	     0xf1f80000000	                         nop dword [rax]	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001260	    0x488b3d000000	            mov rdi, qword [0x04001267] 	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001267	          0x4d89e0	                             mov r8, r12	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x400126a	          0x4889e9	                            mov rcx, rbp	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x400126d	          0x4c89fa	                            mov rdx, r15	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001270	          0x4c89ee	                            mov rsi, r13	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001273	      0xe800000000	                          call 0x4001278	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001278	            0x85c0	                           test eax, eax	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x400127a	     0xf8401020000	                            je 0x4001481	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x4001280	          0x4c01e5	                            add rbp, r12	      1683	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001283	        0x4883eb01	                              sub rbx, 1	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001287	            0x75d7	                           jne 0x4001260	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001289	     0xf1f80000000	                         nop dword [rax]	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001290	        0x488b0424	                    mov rax, qword [rsp]	      1608	write.c	FUNCTION_25	FOR_1
0x4001294	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1608	write.c	FUNCTION_25	FOR_1
0x4001298	          0x4885c0	                           test rax, rax	      1606	write.c	FUNCTION_25	FOR_1
0x400129b	        0x48890424	                    mov qword [rsp], rax	      1608	write.c	FUNCTION_25	FOR_1
0x400129f	     0xf8483010000	                            je 0x4001428	      1606	write.c	FUNCTION_25	FOR_1
0x40012a5	        0x488b0424	                    mov rax, qword [rsp]	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012a9	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012ac	          0x83f801	                              cmp eax, 1	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012af	     0xf844bffffff	                            je 0x4001200	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012b5	          0x83f80a	                            cmp eax, 0xa	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012b8	     0xf8442ffffff	                            je 0x4001200	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012be	      0xba00000000	                              mov edx, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012c3	      0xbe4f060000	                          mov esi, 0x64f	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012c8	      0xbf00000000	                              mov edi, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012cd	      0xe800000000	                          call 0x40012d2	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012d2	    0x660f1f440000	                    nop word [rax + rax]	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40012d8	        0x488b0424	                    mov rax, qword [rsp]	      1619	write.c	FUNCTION_25	FOR_1	IF_2
0x40012dc	      0x488b742408	                mov rsi, qword [rsp + 8]	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40012e1	          0x4889e9	                            mov rcx, rbp	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40012e4	    0x488b3d000000	            mov rdi, qword [0x040012eb] 	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40012eb	        0x488d587c	                   lea rbx, [rax + 0x7c]	      1619	write.c	FUNCTION_25	FOR_1	IF_2
0x40012ef	          0x4889da	                            mov rdx, rbx	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40012f2	      0xe800000000	                          call 0x40012f7	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40012f7	            0x85c0	                           test eax, eax	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40012f9	     0xf8438020000	                            je 0x4001537	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40012ff	        0x488b0424	                    mov rax, qword [rsp]	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x4001303	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x4001307	          0x4c01fd	                            add rbp, r15	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x400130a	      0xe909ffffff	                           jmp 0x4001218	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x400130f	              0x90	                                     nop	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x4001310	          0x4c89e8	                            mov rax, r13	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001313	        0x48c1e83f	                           shr rax, 0x3f	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001317	            0x84c0	                             test al, al	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001319	     0xf8571020000	                           jne 0x4001590	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400131f	        0x4983fc01	                              cmp r12, 1	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001323	     0xf8567020000	                           jne 0x4001590	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001329	          0x4d85ed	                           test r13, r13	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x400132c	     0xf845effffff	                            je 0x4001290	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x4001332	          0x4c89ef	                            mov rdi, r13	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x4001335	      0xe800000000	                          call 0x400133a	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x400133a	        0x410fbe0f	                   movsx ecx, byte [r15]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x400133e	        0x488b3c24	                    mov rdi, qword [rsp]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4001342	          0x4889c6	                            mov rsi, rax	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4001345	          0x4c89ea	                            mov rdx, r13	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4001348	          0x4889c3	                            mov rbx, rax	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x400134b	      0xe800000000	                          call 0x4001350	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4001350	      0x488b742408	                mov rsi, qword [rsp + 8]	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x4001355	    0x488b3d000000	            mov rdi, qword [0x0400135c] 	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x400135c	          0x4d89e8	                             mov r8, r13	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x400135f	          0x4889e9	                            mov rcx, rbp	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x4001362	          0x4889da	                            mov rdx, rbx	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x4001365	      0xe800000000	                          call 0x400136a	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x400136a	            0x85c0	                           test eax, eax	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x400136c	     0xf8432020000	                            je 0x40015a4	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x4001372	          0x4889df	                            mov rdi, rbx	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4001375	          0x4c01ed	                            add rbp, r13	      1655	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x4001378	      0xe800000000	                          call 0x400137d	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x400137d	      0xe90effffff	                           jmp 0x4001290	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4001382	    0x660f1f440000	                    nop word [rax + rax]	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4001388	        0x4983fc01	                              cmp r12, 1	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x400138c	     0xf84bf000000	                            je 0x4001451	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4001392	      0xb800010000	                          mov eax, 0x100	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x4001397	            0x31d2	                            xor edx, edx	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x4001399	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400139e	          0x49f7f4	                                 div r12	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x40013a1	            0x89c3	                            mov ebx, eax	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x40013a3	          0x4189c6	                           mov r14d, eax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013b0	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_41	CALL_3
0x40013b3	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_41	CALL_3
0x40013b6	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_41	CALL_3
0x40013b9	      0xe800000000	                          call 0x40013be	        53	string3.h	FUNCTION_41	CALL_3
0x40013be	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_41	CALL_3
0x40013c1	          0x4c01e1	                            add rcx, r12	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013c4	        0x4183ee01	                             sub r14d, 1	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013c8	            0x75e6	                           jne 0x40013b0	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013ca	            0x89d8	                            mov eax, ebx	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013cc	          0x4889eb	                            mov rbx, rbp	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013cf	            0x89c5	                            mov ebp, eax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013d1	     0xf1f80000000	                         nop dword [rax]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40013d8	          0x4c63f5	                         movsxd r14, ebp	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40013db	      0x488b742408	                mov rsi, qword [rsp + 8]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40013e0	    0x488b3d000000	            mov rdi, qword [0x040013e7] 	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40013e7	          0x4d39ee	                            cmp r14, r13	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40013ea	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40013ef	          0x4889d9	                            mov rcx, rbx	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40013f2	        0x4d0f4ff5	                          cmovg r14, r13	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40013f6	          0x4d89f7	                            mov r15, r14	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40013f9	          0x4489f5	                           mov ebp, r14d	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40013fc	        0x4d0faffc	                           imul r15, r12	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4001400	          0x4d89f8	                             mov r8, r15	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4001403	      0xe800000000	                          call 0x4001408	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x4001408	            0x85c0	                           test eax, eax	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x400140a	     0xf84c2000000	                            je 0x40014d2	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x4001410	          0x4d29f5	                            sub r13, r14	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001413	          0x4c01fb	                            add rbx, r15	      1719	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001416	          0x4d85ed	                           test r13, r13	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001419	            0x7fbd	                            jg 0x40013d8	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400141b	          0x4889dd	                            mov rbp, rbx	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400141e	      0xe96dfeffff	                           jmp 0x4001290	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001423	       0xf1f440000	                   nop dword [rax + rax]	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001428	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	      1724	write.c	FUNCTION_25
0x4001430	    0x644833042528	                xor rax, qword fs:[0x28]	      1724	write.c	FUNCTION_25
0x4001439	     0xf85b6010000	                           jne 0x40015f5	      1724	write.c	FUNCTION_25
0x400143f	    0x4881c4280100	                          add rsp, 0x128	      1724	write.c	FUNCTION_25
0x4001446	              0x5b	                                 pop rbx	      1724	write.c	FUNCTION_25
0x4001447	              0x5d	                                 pop rbp	      1724	write.c	FUNCTION_25
0x4001448	            0x415c	                                 pop r12	      1724	write.c	FUNCTION_25
0x400144a	            0x415d	                                 pop r13	      1724	write.c	FUNCTION_25
0x400144c	            0x415e	                                 pop r14	      1724	write.c	FUNCTION_25
0x400144e	            0x415f	                                 pop r15	      1724	write.c	FUNCTION_25
0x4001450	              0xc3	                                     ret	      1724	write.c	FUNCTION_25
0x4001451	        0x410fb607	                   movzx eax, byte [r15]	        90	string3.h	FUNCTION_44	CALL_6
0x4001455	    0x48ba01010101	           movabs rdx, 0x101010101010101	        90	string3.h	FUNCTION_44	CALL_6
0x400145f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        90	string3.h	FUNCTION_44	CALL_6
0x4001464	      0xbb00010000	                          mov ebx, 0x100	      1694	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4001469	      0xb920000000	                           mov ecx, 0x20	        90	string3.h	FUNCTION_44	CALL_6
0x400146e	        0x480fafc2	                           imul rax, rdx	        90	string3.h	FUNCTION_44	CALL_6
0x4001472	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_44	CALL_6
0x4001475	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_44	CALL_6
0x4001477	          0x4889eb	                            mov rbx, rbp	        90	string3.h	FUNCTION_44	CALL_6
0x400147a	            0x89c5	                            mov ebp, eax	        90	string3.h	FUNCTION_44	CALL_6
0x400147c	      0xe957ffffff	                           jmp 0x40013d8	        90	string3.h	FUNCTION_44	CALL_6
0x4001481	      0xe800000000	                          call 0x4001486	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001486	            0x89c7	                            mov edi, eax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001488	      0xe800000000	                          call 0x400148d	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400148d	          0x4989c5	                            mov r13, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001490	    0x488b05000000	            mov rax, qword [0x04001497] 	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001497	    0x41b805000000	                              mov r8d, 5	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400149d	          0x4c89e1	                            mov rcx, r12	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014a0	      0xba00000000	                              mov edx, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014a5	      0xbe00000000	                              mov esi, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014aa	            0x31ff	                            xor edi, edi	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014ac	          0x488b28	                    mov rbp, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014af	      0x488b442408	                mov rax, qword [rsp + 8]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014b4	          0x488b18	                    mov rbx, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014b7	      0xe800000000	                          call 0x40014bc	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014bc	          0x4d89e8	                             mov r8, r13	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014bf	          0x4889c7	                            mov rdi, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014c2	          0x4889e9	                            mov rcx, rbp	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014c5	          0x4889da	                            mov rdx, rbx	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014c8	          0x4c89e6	                            mov rsi, r12	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014cb	            0x31c0	                            xor eax, eax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014cd	      0xe800000000	                          call 0x40014d2	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40014d2	      0xe800000000	                          call 0x40014d7	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014d7	            0x89c7	                            mov edi, eax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014d9	      0xe800000000	                          call 0x40014de	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014de	          0x4989c4	                            mov r12, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014e1	    0x488b05000000	            mov rax, qword [0x040014e8] 	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014e8	    0x41b805000000	                              mov r8d, 5	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014ee	          0x4c89f9	                            mov rcx, r15	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014f1	      0xba00000000	                              mov edx, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014f6	      0xbe00000000	                              mov esi, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014fb	            0x31ff	                            xor edi, edi	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40014fd	          0x488b28	                    mov rbp, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001500	      0x488b442408	                mov rax, qword [rsp + 8]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001505	          0x488b18	                    mov rbx, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001508	      0xe800000000	                          call 0x400150d	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400150d	          0x4d89e0	                             mov r8, r12	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001510	          0x4889c7	                            mov rdi, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001513	          0x4889e9	                            mov rcx, rbp	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001516	          0x4889da	                            mov rdx, rbx	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001519	          0x4c89fe	                            mov rsi, r15	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400151c	            0x31c0	                            xor eax, eax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400151e	      0xe800000000	                          call 0x4001523	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001523	      0xba00000000	                              mov edx, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001528	      0xbe7d060000	                          mov esi, 0x67d	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x400152d	      0xbf00000000	                              mov edi, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001532	      0xe800000000	                          call 0x4001537	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001537	      0xe800000000	                          call 0x400153c	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400153c	            0x89c7	                            mov edi, eax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400153e	      0xe800000000	                          call 0x4001543	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001543	          0x4989c4	                            mov r12, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001546	    0x488b05000000	            mov rax, qword [0x0400154d] 	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400154d	    0x41b805000000	                              mov r8d, 5	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001553	      0xba00000000	                              mov edx, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001558	      0xbe00000000	                              mov esi, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400155d	            0x31ff	                            xor edi, edi	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400155f	          0x488b28	                    mov rbp, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001562	      0x488b442408	                mov rax, qword [rsp + 8]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001567	          0x4c8b28	                    mov r13, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400156a	        0x488b0424	                    mov rax, qword [rsp]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400156e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001572	          0x4889d9	                            mov rcx, rbx	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001575	      0xe800000000	                          call 0x400157a	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400157a	          0x4d89e0	                             mov r8, r12	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400157d	          0x4889c7	                            mov rdi, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001580	          0x4889e9	                            mov rcx, rbp	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001583	          0x4c89ea	                            mov rdx, r13	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001586	          0x4889de	                            mov rsi, rbx	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001589	            0x31c0	                            xor eax, eax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400158b	      0xe800000000	                          call 0x4001590	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001590	      0xba00000000	                              mov edx, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001595	      0xbe67060000	                          mov esi, 0x667	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400159a	      0xbf00000000	                              mov edi, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400159f	      0xe800000000	                          call 0x40015a4	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015a4	      0xe800000000	                          call 0x40015a9	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015a9	            0x89c7	                            mov edi, eax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015ab	      0xe800000000	                          call 0x40015b0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015b0	          0x4989c4	                            mov r12, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015b3	    0x488b05000000	            mov rax, qword [0x040015ba] 	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015ba	    0x41b805000000	                              mov r8d, 5	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015c0	          0x4c89e9	                            mov rcx, r13	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015c3	      0xba00000000	                              mov edx, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015c8	      0xbe00000000	                              mov esi, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015cd	            0x31ff	                            xor edi, edi	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015cf	          0x488b28	                    mov rbp, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015d2	      0x488b442408	                mov rax, qword [rsp + 8]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015d7	          0x488b18	                    mov rbx, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015da	      0xe800000000	                          call 0x40015df	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015df	          0x4d89e0	                             mov r8, r12	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015e2	          0x4889c7	                            mov rdi, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015e5	          0x4889e9	                            mov rcx, rbp	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015e8	          0x4889da	                            mov rdx, rbx	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015eb	          0x4c89ee	                            mov rsi, r13	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015ee	            0x31c0	                            xor eax, eax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015f0	      0xe800000000	                          call 0x40015f5	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40015f5	      0xe800000000	                          call 0x40015fa	      1724	write.c	FUNCTION_25
adjust_reloc_syms	FOR,1:DO,0:SWITCH,0:functions,0:CALL,23:WHILE,1:IF,15:ELSE,1	129
0x4000990	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       784	write.c	FUNCTION_16	CALL_1
0x4000997	          0x4885c0	                           test rax, rax	       787	write.c	FUNCTION_16	IF_1
0x400099a	     0xf84e8000000	                            je 0x4000a88	       787	write.c	FUNCTION_16	IF_1
0x40009a0	            0x4155	                                push r13	       783	write.c	FUNCTION_16
0x40009a2	            0x4154	                                push r12	       783	write.c	FUNCTION_16
0x40009a4	          0x4989f5	                            mov r13, rsi	       783	write.c	FUNCTION_16
0x40009a7	              0x55	                                push rbp	       783	write.c	FUNCTION_16
0x40009a8	              0x53	                                push rbx	       783	write.c	FUNCTION_16
0x40009a9	        0x4883ec08	                              sub rsp, 8	       783	write.c	FUNCTION_16
0x40009ad	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       792	write.c	FUNCTION_16	FOR_1
0x40009b1	          0x4d85e4	                           test r12, r12	       792	write.c	FUNCTION_16	FOR_1
0x40009b4	     0xf84c4000000	                            je 0x4000a7e	       792	write.c	FUNCTION_16	FOR_1
0x40009ba	    0x660f1f440000	                    nop word [rax + rax]	       792	write.c	FUNCTION_16	FOR_1
0x40009c0	      0x41f6042420	                   test byte [r12], 0x20	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x40009c5	     0xf85a5000000	                           jne 0x4000a70	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x40009cb	      0x498b5c2418	            mov rbx, qword [r12 + 0x18] 	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x40009d0	          0x4885db	                           test rbx, rbx	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x40009d3	     0xf8497000000	                            je 0x4000a70	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x40009d9	          0x4889df	                            mov rdi, rbx	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_3
0x40009dc	      0xe800000000	                          call 0x40009e1	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_3
0x40009e1	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40009e6	          0x4885ff	                           test rdi, rdi	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40009e9	            0x7426	                            je 0x4000a11	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40009eb	      0xe800000000	                          call 0x40009f0	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40009f0	            0xeb1f	                           jmp 0x4000a11	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40009f2	    0x660f1f440000	                    nop word [rax + rax]	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40009f8	          0x4889df	                            mov rdi, rbx	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40009fb	          0x4889eb	                            mov rbx, rbp	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40009fe	      0xe800000000	                          call 0x4000a03	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x4000a03	        0x488b4010	            mov rax, qword [rax + 0x10] 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x4000a07	      0x4901442428	            add qword [r12 + 0x28], rax 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x4000a0c	      0x49896c2418	             mov qword [r12 + 0x18], rbp	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4000a11	          0x4889df	                            mov rdi, rbx	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000a14	      0xe800000000	                          call 0x4000a19	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000a19	            0x85c0	                           test eax, eax	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000a1b	            0x7510	                           jne 0x4000a2d	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000a1d	          0x4889df	                            mov rdi, rbx	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000a20	      0xe800000000	                          call 0x4000a25	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000a25	            0x85c0	                           test eax, eax	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000a27	     0xf8443010000	                            je 0x4000b70	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000a2d	          0x4889df	                            mov rdi, rbx	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000a30	      0xe800000000	                          call 0x4000a35	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000a35	          0x488b28	                    mov rbp, qword [rax]	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000a38	          0x4839eb	                            cmp rbx, rbp	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x4000a3b	            0x75bb	                           jne 0x40009f8	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x4000a3d	          0x4889ef	                            mov rdi, rbp	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000a40	      0xe800000000	                          call 0x4000a45	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000a45	            0x85c0	                           test eax, eax	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000a47	            0x7447	                            je 0x4000a90	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000a49	          0x4889ef	                            mov rdi, rbp	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000a4c	      0xe800000000	                          call 0x4000a51	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000a51	      0x4901442428	            add qword [r12 + 0x28], rax 	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000a56	          0x4889ef	                            mov rdi, rbp	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000a59	      0xe800000000	                          call 0x4000a5e	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000a5e	          0x488b00	                    mov rax, qword [rax]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000a61	      0x4989442418	             mov qword [r12 + 0x18], rax	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000a66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000a70	      0x4d8b642440	            mov r12, qword [r12 + 0x40] 	       792	write.c	FUNCTION_16	FOR_1
0x4000a75	          0x4d85e4	                           test r12, r12	       792	write.c	FUNCTION_16	FOR_1
0x4000a78	     0xf8542ffffff	                           jne 0x40009c0	       792	write.c	FUNCTION_16	FOR_1
0x4000a7e	        0x4883c408	                              add rsp, 8	       905	write.c	FUNCTION_16
0x4000a82	              0x5b	                                 pop rbx	       905	write.c	FUNCTION_16
0x4000a83	              0x5d	                                 pop rbp	       905	write.c	FUNCTION_16
0x4000a84	            0x415c	                                 pop r12	       905	write.c	FUNCTION_16
0x4000a86	            0x415d	                                 pop r13	       905	write.c	FUNCTION_16
0x4000a88	            0xf3c3	                                     ret	       905	write.c	FUNCTION_16
0x4000a8a	    0x660f1f440000	                    nop word [rax + rax]	       905	write.c	FUNCTION_16
0x4000a90	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000a95	      0xbe01000000	                              mov esi, 1	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000a9a	      0xe800000000	                          call 0x4000a9f	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000a9f	            0x85c0	                           test eax, eax	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000aa1	            0x75cd	                           jne 0x4000a70	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000aa3	          0x4c89e7	                            mov rdi, r12	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000aa6	      0xe800000000	                          call 0x4000aab	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000aab	            0x85c0	                           test eax, eax	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000aad	            0x74c1	                            je 0x4000a70	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000aaf	          0x4889ef	                            mov rdi, rbp	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000ab2	      0xe800000000	                          call 0x4000ab7	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000ab7	            0x85c0	                           test eax, eax	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000ab9	            0x75b5	                           jne 0x4000a70	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000abb	          0x4889ef	                            mov rdi, rbp	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x4000abe	      0xe800000000	                          call 0x4000ac3	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x4000ac3	          0x4885c0	                           test rax, rax	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x4000ac6	          0x4889c3	                            mov rbx, rax	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x4000ac9	     0xf84af000000	                            je 0x4000b7e	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x4000acf	    0x483d00000000	                              cmp rax, 0	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000ad5	            0x7499	                            je 0x4000a70	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000ad7	    0x483b05000000	            cmp rax, qword [0x04000ade] 	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000ade	            0x7490	                            je 0x4000a70	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000ae0	          0x4939c5	                            cmp r13, rax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000ae3	     0xf848f000000	                            je 0x4000b78	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000ae9	          0x4889ef	                            mov rdi, rbp	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000aec	      0xe800000000	                          call 0x4000af1	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000af1	            0x85c0	                           test eax, eax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000af3	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000af6	            0x7520	                           jne 0x4000b18	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000af8	      0xa900000200	                       test eax, 0x20000	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000afd	     0xf856dffffff	                           jne 0x4000a70	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000b03	          0x488b33	                    mov rsi, qword [rbx]	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000b06	      0xbf00000000	                              mov edi, 0	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000b0b	      0xb90d000000	                            mov ecx, 0xd	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000b10	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000b12	     0xf8458ffffff	                            je 0x4000a70	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000b18	      0xa900008000	                      test eax, 0x800000	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000b1d	            0x7418	                            je 0x4000b37	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000b1f	    0x49837c242800	               cmp qword [r12 + 0x28], 0	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000b25	     0xf8545ffffff	                           jne 0x4000a70	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000b2b	    0x49837c242000	               cmp qword [r12 + 0x20], 0	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000b31	     0xf8539ffffff	                           jne 0x4000a70	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000b37	          0xf6c404	                              test ah, 4	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x4000b3a	     0xf8530ffffff	                           jne 0x4000a70	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x4000b40	          0x4889ef	                            mov rdi, rbp	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000b43	      0xe800000000	                          call 0x4000b48	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000b48	      0x4901442428	            add qword [r12 + 0x28], rax 	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000b4d	          0x4889ef	                            mov rdi, rbp	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b50	      0xe800000000	                          call 0x4000b55	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b55	          0x4889c7	                            mov rdi, rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b58	      0xe800000000	                          call 0x4000b5d	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b5d	      0x4989442418	             mov qword [r12 + 0x18], rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b62	      0xe909ffffff	                           jmp 0x4000a70	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b67	    0x660f1f840000	                    nop word [rax + rax]	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b70	          0x4889dd	                            mov rbp, rbx	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b73	      0xe9c5feffff	                           jmp 0x4000a3d	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b78	        0x418b4520	            mov eax, dword [r13 + 0x20] 	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b7c	            0xeb9a	                           jmp 0x4000b18	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000b7e	      0xba00000000	                              mov edx, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000b83	      0xbe59030000	                          mov esi, 0x359	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000b88	      0xbf00000000	                              mov edi, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000b8d	      0xe800000000	                          call 0x4000b92	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
