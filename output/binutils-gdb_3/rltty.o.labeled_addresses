_rl_disable_tty_signals	FOR,0:functions,0:SWITCH,0:ELSE,0:DO,0:CALL,6:WHILE,0:IF,3	58
0x40007e0	              0x53	                                push rbx	       939	rltty.c	FUNCTION_24
0x40007e1	    0x8b1d00000000	            mov ebx, dword [0x040007e7] 	       940	rltty.c	FUNCTION_24	IF_1
0x40007e7	            0x85db	                           test ebx, ebx	       940	rltty.c	FUNCTION_24	IF_1
0x40007e9	            0x740d	                            je 0x40007f8	       940	rltty.c	FUNCTION_24	IF_1
0x40007eb	            0x31db	                            xor ebx, ebx	       941	rltty.c	FUNCTION_24	IF_1
0x40007ed	            0x89d8	                            mov eax, ebx	       956	rltty.c	FUNCTION_24
0x40007ef	              0x5b	                                 pop rbx	       956	rltty.c	FUNCTION_24
0x40007f0	              0xc3	                                     ret	       956	rltty.c	FUNCTION_24
0x40007f1	     0xf1f80000000	                         nop dword [rax]	       956	rltty.c	FUNCTION_24
0x40007f8	    0x488b3d000000	            mov rdi, qword [0x040007ff] 	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x40007ff	      0xe800000000	                          call 0x4000804	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000804	      0xbe00000000	                              mov esi, 0	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000809	            0x89c7	                            mov edi, eax	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x400080b	      0xe870f9ffff	              call sym._get_tty_settings	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000810	            0x85c0	                           test eax, eax	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000812	     0xf88d8000000	                            js 0x40008f0	       943	rltty.c	FUNCTION_24	IF_2	CALL_2
0x4000818	    0x488b0d000000	            mov rcx, qword [0x0400081f] 	       946	rltty.c	FUNCTION_24
0x400081f	    0x488b05000000	            mov rax, qword [0x04000826] 	       946	rltty.c	FUNCTION_24
0x4000826	    0x488b15000000	            mov rdx, qword [0x0400082d] 	       946	rltty.c	FUNCTION_24
0x400082d	    0x488b3d000000	            mov rdi, qword [0x04000834] 	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x4000834	    0x48890d000000	            mov qword [0x0400083b], rcx 	       946	rltty.c	FUNCTION_24
0x400083b	    0x488b0d000000	            mov rcx, qword [0x04000842] 	       946	rltty.c	FUNCTION_24
0x4000842	    0x488905000000	            mov qword [0x04000849], rax 	       946	rltty.c	FUNCTION_24
0x4000849	        0x48c1e820	                           shr rax, 0x20	       948	rltty.c	FUNCTION_24
0x400084d	    0x488915000000	            mov qword [0x04000854], rdx 	       946	rltty.c	FUNCTION_24
0x4000854	          0x83e0fe	                     and eax, 0xfffffffe	       948	rltty.c	FUNCTION_24
0x4000857	          0x80e6fb	                            and dh, 0xfb	       949	rltty.c	FUNCTION_24
0x400085a	    0x48890d000000	            mov qword [0x04000861], rcx 	       946	rltty.c	FUNCTION_24
0x4000861	    0x488b0d000000	            mov rcx, qword [0x04000868] 	       946	rltty.c	FUNCTION_24
0x4000868	    0x891500000000	            mov dword [0x0400086e], edx 	       949	rltty.c	FUNCTION_24
0x400086e	    0x890500000000	            mov dword [0x04000874], eax 	       948	rltty.c	FUNCTION_24
0x4000874	    0x48890d000000	            mov qword [0x0400087b], rcx 	       946	rltty.c	FUNCTION_24
0x400087b	    0x488b0d000000	            mov rcx, qword [0x04000882] 	       946	rltty.c	FUNCTION_24
0x4000882	    0x48890d000000	            mov qword [0x04000889], rcx 	       946	rltty.c	FUNCTION_24
0x4000889	    0x488b0d000000	            mov rcx, qword [0x04000890] 	       946	rltty.c	FUNCTION_24
0x4000890	    0x48890d000000	            mov qword [0x04000897], rcx 	       946	rltty.c	FUNCTION_24
0x4000897	    0x8b0d00000000	            mov ecx, dword [0x0400089d] 	       946	rltty.c	FUNCTION_24
0x400089d	    0x890d00000000	            mov dword [0x040008a3], ecx 	       946	rltty.c	FUNCTION_24
0x40008a3	      0xe800000000	                          call 0x40008a8	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x40008a8	      0xbe00000000	                              mov esi, 0	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x40008ad	            0x89c7	                            mov edi, eax	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x40008af	      0xe8ecf7ffff	              call sym._set_tty_settings	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x40008b4	            0x85c0	                           test eax, eax	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x40008b6	            0x7818	                            js 0x40008d0	       951	rltty.c	FUNCTION_24	IF_3	CALL_4
0x40008b8	            0x89d8	                            mov eax, ebx	       956	rltty.c	FUNCTION_24
0x40008ba	    0xc70500000000	               mov dword [0x040008c4], 1	       954	rltty.c	FUNCTION_24
0x40008c4	              0x5b	                                 pop rbx	       956	rltty.c	FUNCTION_24
0x40008c5	              0xc3	                                     ret	       956	rltty.c	FUNCTION_24
0x40008c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       956	rltty.c	FUNCTION_24
0x40008d0	    0x488b3d000000	            mov rdi, qword [0x040008d7] 	       952	rltty.c	FUNCTION_24	CALL_6
0x40008d7	      0xe800000000	                          call 0x40008dc	       952	rltty.c	FUNCTION_24	CALL_6
0x40008dc	              0x5b	                                 pop rbx	       956	rltty.c	FUNCTION_24
0x40008dd	      0xbe00000000	                              mov esi, 0	       952	rltty.c	FUNCTION_24	CALL_6
0x40008e2	            0x89c7	                            mov edi, eax	       952	rltty.c	FUNCTION_24	CALL_6
0x40008e4	      0xe9b7f7ffff	               jmp sym._set_tty_settings	       952	rltty.c	FUNCTION_24	CALL_6
0x40008e9	     0xf1f80000000	                         nop dword [rax]	       952	rltty.c	FUNCTION_24	CALL_6
0x40008f0	      0xbbffffffff	                     mov ebx, 0xffffffff	       944	rltty.c	FUNCTION_24	IF_2
0x40008f5	      0xe9f3feffff	                           jmp 0x40007ed	       944	rltty.c	FUNCTION_24	IF_2
rl_prep_terminal	FOR,0:functions,0:SWITCH,0:ELSE,2:DO,0:CALL,18:WHILE,0:IF,10	191
0x4000320	            0x4154	                                push r12	       597	rltty.c	FUNCTION_13
0x4000322	              0x55	                                push rbp	       597	rltty.c	FUNCTION_13
0x4000323	              0x53	                                push rbx	       597	rltty.c	FUNCTION_13
0x4000324	        0x4883ec50	                           sub rsp, 0x50	       597	rltty.c	FUNCTION_13
0x4000328	    0x448b15000000	           mov r10d, dword [0x0400032f] 	       601	rltty.c	FUNCTION_13	IF_1
0x400032f	    0x64488b042528	                mov rax, qword fs:[0x28]	       597	rltty.c	FUNCTION_13
0x4000338	      0x4889442448	             mov qword [rsp + 0x48], rax	       597	rltty.c	FUNCTION_13
0x400033d	            0x31c0	                            xor eax, eax	       597	rltty.c	FUNCTION_13
0x400033f	          0x4585d2	                         test r10d, r10d	       601	rltty.c	FUNCTION_13	IF_1
0x4000342	            0x7424	                            je 0x4000368	       601	rltty.c	FUNCTION_13	IF_1
0x4000344	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       667	rltty.c	FUNCTION_13
0x4000349	    0x644833042528	                xor rax, qword fs:[0x28]	       667	rltty.c	FUNCTION_13
0x4000352	     0xf8574030000	                           jne 0x40006cc	       667	rltty.c	FUNCTION_13
0x4000358	        0x4883c450	                           add rsp, 0x50	       667	rltty.c	FUNCTION_13
0x400035c	              0x5b	                                 pop rbx	       667	rltty.c	FUNCTION_13
0x400035d	              0x5d	                                 pop rbp	       667	rltty.c	FUNCTION_13
0x400035e	            0x415c	                                 pop r12	       667	rltty.c	FUNCTION_13
0x4000360	              0xc3	                                     ret	       667	rltty.c	FUNCTION_13
0x4000361	     0xf1f80000000	                         nop dword [rax]	       667	rltty.c	FUNCTION_13
0x4000368	            0x89fb	                            mov ebx, edi	       667	rltty.c	FUNCTION_13
0x400036a	      0xe800000000	                          call 0x400036f	       605	rltty.c	FUNCTION_13	CALL_1
0x400036f	    0x488b3d000000	            mov rdi, qword [0x04000376] 	       607	rltty.c	FUNCTION_13	CALL_3
0x4000376	          0x4885ff	                           test rdi, rdi	       607	rltty.c	FUNCTION_13	CALL_3
0x4000379	     0xf8441030000	                            je 0x40006c0	       607	rltty.c	FUNCTION_13	CALL_3
0x400037f	      0xe800000000	                          call 0x4000384	       607	rltty.c	FUNCTION_13	CALL_3
0x4000384	            0x89c5	                            mov ebp, eax	       607	rltty.c	FUNCTION_13	CALL_3
0x4000386	            0x89c7	                            mov edi, eax	       458	rltty.c	FUNCTION_8	CALL_1
0x4000388	      0xe8b3fcffff	                    call sym.set_winsize	       458	rltty.c	FUNCTION_8	CALL_1
0x400038d	      0xe800000000	                          call 0x4000392	       460	rltty.c	FUNCTION_8
0x4000392	          0x4889e6	                            mov rsi, rsp	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000395	    0xc70000000000	                      mov dword [rax], 0	       460	rltty.c	FUNCTION_8
0x400039b	            0x89ef	                            mov edi, ebp	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x400039d	          0x4989c4	                            mov r12, rax	       460	rltty.c	FUNCTION_8
0x40003a0	      0xe8dbfdffff	              call sym._get_tty_settings	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x40003a5	            0x85c0	                           test eax, eax	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x40003a7	     0xf887b020000	                            js 0x4000628	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x40003ad	        0x488b0424	                    mov rax, qword [rsp]	       624	rltty.c	FUNCTION_13
0x40003b1	    0x448b05000000	            mov r8d, dword [0x040003b8] 	       626	rltty.c	FUNCTION_13	IF_5
0x40003b8	    0x8b3d00000000	            mov edi, dword [0x040003be] 	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x40003be	    0x488905000000	            mov qword [0x040003c5], rax 	       624	rltty.c	FUNCTION_13
0x40003c5	      0x488b442408	                mov rax, qword [rsp + 8]	       624	rltty.c	FUNCTION_13
0x40003ca	          0x4585c0	                           test r8d, r8d	       626	rltty.c	FUNCTION_13	IF_5
0x40003cd	    0x488905000000	            mov qword [0x040003d4], rax 	       624	rltty.c	FUNCTION_13
0x40003d4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       624	rltty.c	FUNCTION_13
0x40003d9	    0x488905000000	            mov qword [0x040003e0], rax 	       624	rltty.c	FUNCTION_13
0x40003e0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       624	rltty.c	FUNCTION_13
0x40003e5	    0x488905000000	            mov qword [0x040003ec], rax 	       624	rltty.c	FUNCTION_13
0x40003ec	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       624	rltty.c	FUNCTION_13
0x40003f1	    0x488905000000	            mov qword [0x040003f8], rax 	       624	rltty.c	FUNCTION_13
0x40003f8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       624	rltty.c	FUNCTION_13
0x40003fd	    0x488905000000	            mov qword [0x04000404], rax 	       624	rltty.c	FUNCTION_13
0x4000404	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       624	rltty.c	FUNCTION_13
0x4000409	    0x488905000000	            mov qword [0x04000410], rax 	       624	rltty.c	FUNCTION_13
0x4000410	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       624	rltty.c	FUNCTION_13
0x4000414	    0x890500000000	            mov dword [0x0400041a], eax 	       624	rltty.c	FUNCTION_13
0x400041a	            0x7424	                            je 0x4000440	       626	rltty.c	FUNCTION_13	IF_5
0x400041c	    0x448b0d000000	            mov r9d, dword [0x04000423] 	       631	rltty.c	FUNCTION_13	IF_5	IF_6
0x4000423	          0x4585c9	                           test r9d, r9d	       631	rltty.c	FUNCTION_13	IF_5	IF_6
0x4000426	     0xf8524020000	                           jne 0x4000650	       631	rltty.c	FUNCTION_13	IF_5	IF_6
0x400042c	    0xf7c700000400	                       test edi, 0x40000	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000432	     0xf8568020000	                           jne 0x40006a0	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000438	     0xf1f84000000	                   nop dword [rax + rax]	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000440	    0x440fb60d0000	           movzx r9d, byte [0x04000448] 	       360	rltty.c	FUNCTION_5
0x4000448	     0xfb605000000	           movzx eax, byte [0x0400044f] 	       360	rltty.c	FUNCTION_5
0x400044f	    0x81cf00000400	                         or edi, 0x40000	       638	rltty.c	FUNCTION_13	CALL_9
0x4000455	     0xfb60d000000	           movzx ecx, byte [0x0400045c] 	       638	rltty.c	FUNCTION_13	CALL_9
0x400045c	     0xfb615000000	           movzx edx, byte [0x04000463] 	       638	rltty.c	FUNCTION_13	CALL_9
0x4000463	          0x4585c0	                           test r8d, r8d	       639	rltty.c	FUNCTION_13	IF_7
0x4000466	     0xfb635000000	           movzx esi, byte [0x0400046d] 	       639	rltty.c	FUNCTION_13	IF_7
0x400046d	    0x893d00000000	            mov dword [0x04000473], edi 	       638	rltty.c	FUNCTION_13	CALL_9
0x4000473	    0x44880d000000	              mov byte [0x0400047a], r9b	       360	rltty.c	FUNCTION_5
0x400047a	    0x440fb60d0000	           movzx r9d, byte [0x04000482] 	       362	rltty.c	FUNCTION_5
0x4000482	    0x880500000000	               mov byte [0x04000488], al	       375	rltty.c	FUNCTION_5
0x4000488	    0x890500000000	            mov dword [0x0400048e], eax 	       375	rltty.c	FUNCTION_5
0x400048e	     0xfb605000000	           movzx eax, byte [0x04000495] 	       381	rltty.c	FUNCTION_5
0x4000495	    0x408835000000	              mov byte [0x0400049c], sil	       359	rltty.c	FUNCTION_5
0x400049c	    0x880d00000000	               mov byte [0x040004a2], cl	       372	rltty.c	FUNCTION_5
0x40004a2	    0x890d00000000	            mov dword [0x040004a8], ecx 	       372	rltty.c	FUNCTION_5
0x40004a8	    0x44880d000000	              mov byte [0x040004af], r9b	       362	rltty.c	FUNCTION_5
0x40004af	    0x440fb60d0000	           movzx r9d, byte [0x040004b7] 	       364	rltty.c	FUNCTION_5
0x40004b7	    0x881500000000	               mov byte [0x040004bd], dl	       373	rltty.c	FUNCTION_5
0x40004bd	    0x891500000000	            mov dword [0x040004c3], edx 	       373	rltty.c	FUNCTION_5
0x40004c3	    0x880500000000	               mov byte [0x040004c9], al	       381	rltty.c	FUNCTION_5
0x40004c9	     0xfb605000000	           movzx eax, byte [0x040004d0] 	       384	rltty.c	FUNCTION_5
0x40004d0	    0x44880d000000	              mov byte [0x040004d7], r9b	       364	rltty.c	FUNCTION_5
0x40004d7	    0x440fb60d0000	           movzx r9d, byte [0x040004df] 	       366	rltty.c	FUNCTION_5
0x40004df	    0x880500000000	               mov byte [0x040004e5], al	       384	rltty.c	FUNCTION_5
0x40004e5	     0xfb605000000	           movzx eax, byte [0x040004ec] 	       387	rltty.c	FUNCTION_5
0x40004ec	    0x44880d000000	              mov byte [0x040004f3], r9b	       366	rltty.c	FUNCTION_5
0x40004f3	    0x440fb60d0000	           movzx r9d, byte [0x040004fb] 	       368	rltty.c	FUNCTION_5
0x40004fb	    0x880500000000	               mov byte [0x04000501], al	       387	rltty.c	FUNCTION_5
0x4000501	     0xfb605000000	           movzx eax, byte [0x04000508] 	       390	rltty.c	FUNCTION_5
0x4000508	    0x44880d000000	              mov byte [0x0400050f], r9b	       368	rltty.c	FUNCTION_5
0x400050f	    0x440fb60d0000	           movzx r9d, byte [0x04000517] 	       370	rltty.c	FUNCTION_5
0x4000517	    0x880500000000	               mov byte [0x0400051d], al	       390	rltty.c	FUNCTION_5
0x400051d	    0x44880d000000	              mov byte [0x04000524], r9b	       370	rltty.c	FUNCTION_5
0x4000524	            0x7434	                            je 0x400055a	       639	rltty.c	FUNCTION_13	IF_7
0x4000526	    0x8b3d00000000	            mov edi, dword [0x0400052c] 	       644	rltty.c	FUNCTION_13	IF_7	IF_8
0x400052c	    0x440fb6442420	           movzx r8d, byte [rsp + 0x20] 	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000532	       0xfb64c241f	           movzx ecx, byte [rsp + 0x1f] 	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000537	       0xfb6542414	           movzx edx, byte [rsp + 0x14] 	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400053c	       0xfb6742413	           movzx esi, byte [rsp + 0x13] 	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000541	            0x85ff	                           test edi, edi	       644	rltty.c	FUNCTION_13	IF_7	IF_8
0x4000543	     0xf8537010000	                           jne 0x4000680	       644	rltty.c	FUNCTION_13	IF_7	IF_8
0x4000549	      0xbf00000000	                              mov edi, 0	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400054e	      0xe89dfbffff	call sym._rl_bind_tty_special_chars.isra.2	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x4000553	     0xfb635000000	           movzx esi, byte [0x0400055a] 	       645	rltty.c	FUNCTION_13	IF_7	CALL_10
0x400055a	    0x8b0500000000	            mov eax, dword [0x04000560] 	       519	rltty.c	
0x4000560	            0x89c2	                            mov edx, eax	       519	rltty.c	
0x4000562	      0x2500020000	                          and eax, 0x200	       521	rltty.c	
0x4000567	    0x890500000000	            mov dword [0x0400056d], eax 	       521	rltty.c	
0x400056d	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       524	rltty.c	
0x4000571	          0x83e208	                              and edx, 8	       519	rltty.c	
0x4000574	    0x891500000000	            mov dword [0x0400057a], edx 	       519	rltty.c	
0x400057a	            0x89c1	                            mov ecx, eax	       524	rltty.c	
0x400057c	          0x83e1f5	                     and ecx, 0xfffffff5	       524	rltty.c	
0x400057f	          0x4084f6	                           test sil, sil	       526	rltty.c	IF_4
0x4000582	            0x7406	                            je 0x400058a	       526	rltty.c	IF_4
0x4000584	    0x893500000000	            mov dword [0x0400058a], esi 	       527	rltty.c	IF_4
0x400058a	        0x8b542408	                mov edx, dword [rsp + 8]	       539	rltty.c	IF_5
0x400058e	          0x83e230	                           and edx, 0x30	       539	rltty.c	IF_5
0x4000591	          0x83fa30	                           cmp edx, 0x30	       539	rltty.c	IF_5
0x4000594	          0x8b1424	                    mov edx, dword [rsp]	       540	rltty.c	IF_5
0x4000597	     0xf8483000000	                            je 0x4000620	       539	rltty.c	IF_5
0x400059d	            0x85db	                           test ebx, ebx	       539	rltty.c	IF_5
0x400059f	            0x757f	                           jne 0x4000620	       539	rltty.c	IF_5
0x40005a1	    0x81e2bffeffff	                     and edx, 0xfffffebf	       543	rltty.c	
0x40005a7	          0x83c901	                               or ecx, 1	       548	rltty.c	
0x40005aa	          0xf6c410	                           test ah, 0x10	       555	rltty.c	IF_6
0x40005ad	          0x891424	                    mov dword [rsp], edx	       543	rltty.c	
0x40005b0	        0x894c240c	              mov dword [rsp + 0xc], ecx	       548	rltty.c	
0x40005b4	      0xc644241701	                mov byte [rsp + 0x17], 1	       551	rltty.c	
0x40005b9	      0xc644241600	                mov byte [rsp + 0x16], 0	       552	rltty.c	
0x40005be	            0x740c	                            je 0x40005cc	       555	rltty.c	IF_6
0x40005c0	      0x25f5efffff	                     and eax, 0xffffeff5	       557	rltty.c	IF_6
0x40005c5	          0x83c801	                               or eax, 1	       557	rltty.c	IF_6
0x40005c8	        0x8944240c	              mov dword [rsp + 0xc], eax	       557	rltty.c	IF_6
0x40005cc	          0x4889e6	                            mov rsi, rsp	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40005cf	            0x89ef	                            mov edi, ebp	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40005d1	      0xc644242000	                mov byte [rsp + 0x20], 0	       568	rltty.c	
0x40005d6	      0xe8c5faffff	              call sym._set_tty_settings	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40005db	            0x85c0	                           test eax, eax	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40005dd	            0x7831	                            js 0x4000610	       490	rltty.c	FUNCTION_10	IF_1	CALL_1
0x40005df	    0x8b0500000000	            mov eax, dword [0x040005e5] 	       659	rltty.c	FUNCTION_13	IF_10
0x40005e5	            0x85c0	                           test eax, eax	       659	rltty.c	FUNCTION_13	IF_10
0x40005e7	            0x740a	                            je 0x40005f3	       659	rltty.c	FUNCTION_13	IF_10
0x40005e9	      0xbf01000000	                              mov edi, 1	       660	rltty.c	FUNCTION_13	CALL_15
0x40005ee	      0xe800000000	                          call 0x40005f3	       660	rltty.c	FUNCTION_13	CALL_15
0x40005f3	    0x488b3d000000	            mov rdi, qword [0x040005fa] 	       662	rltty.c	FUNCTION_13	CALL_16
0x40005fa	      0xe800000000	                          call 0x40005ff	       662	rltty.c	FUNCTION_13	CALL_16
0x40005ff	    0x830d00000000	                or dword [0x04000606], 4	       664	rltty.c	FUNCTION_13	CALL_17
0x4000606	    0xc70500000000	               mov dword [0x04000610], 1	       663	rltty.c	FUNCTION_13
0x4000610	      0xe800000000	                          call 0x4000615	       666	rltty.c	FUNCTION_13	CALL_18
0x4000615	      0xe92afdffff	                           jmp 0x4000344	       666	rltty.c	FUNCTION_13	CALL_18
0x400061a	    0x660f1f440000	                    nop word [rax + rax]	       666	rltty.c	FUNCTION_13	CALL_18
0x4000620	          0x83e2cf	                     and edx, 0xffffffcf	       540	rltty.c	IF_5
0x4000623	      0xe979ffffff	                           jmp 0x40005a1	       540	rltty.c	IF_5
0x4000628	        0x418b0424	                    mov eax, dword [r12]	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400062c	          0x83f819	                           cmp eax, 0x19	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400062f	           0xf94c1	                                 sete cl	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000632	          0x83f816	                           cmp eax, 0x16	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000635	           0xf94c2	                                 sete dl	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000638	             0x8d1	                               or cl, dl	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400063a	            0x7505	                           jne 0x4000641	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400063c	          0x83f85f	                           cmp eax, 0x5f	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x400063f	            0x75cf	                           jne 0x4000610	       614	rltty.c	FUNCTION_13	IF_2	IF_3
0x4000641	    0xc70500000000	               mov dword [0x0400064b], 1	       618	rltty.c	FUNCTION_13	IF_2	IF_3	IF_4
0x400064b	            0xebc3	                           jmp 0x4000610	       618	rltty.c	FUNCTION_13	IF_2	IF_3	IF_4
0x400064d	           0xf1f00	                         nop dword [rax]	       618	rltty.c	FUNCTION_13	IF_2	IF_3	IF_4
0x4000650	    0xf7c700000400	                       test edi, 0x40000	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000656	     0xf84e4fdffff	                            je 0x4000440	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x400065c	    0x488b3d000000	            mov rdi, qword [0x04000663] 	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000663	      0xe818fcffff	call sym.rl_tty_unset_default_bindings.part.5	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000668	    0x8b3d00000000	            mov edi, dword [0x0400066e] 	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x400066e	    0x448b05000000	            mov r8d, dword [0x04000675] 	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000675	      0xe9c6fdffff	                           jmp 0x4000440	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x400067a	    0x660f1f440000	                    nop word [rax + rax]	       903	rltty.c	FUNCTION_21	IF_1	CALL_1
0x4000680	    0x488b3d000000	            mov rdi, qword [0x04000687] 	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x4000687	      0xe864faffff	call sym._rl_bind_tty_special_chars.isra.2	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x400068c	     0xfb635000000	           movzx esi, byte [0x04000693] 	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x4000693	      0xe9c2feffff	                           jmp 0x400055a	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x4000698	     0xf1f84000000	                   nop dword [rax + rax]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40006a0	      0xbf00000000	                              mov edi, 0	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40006a5	      0xe8d6fbffff	call sym.rl_tty_unset_default_bindings.part.5	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40006aa	    0x8b3d00000000	            mov edi, dword [0x040006b0] 	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40006b0	    0x448b05000000	            mov r8d, dword [0x040006b7] 	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40006b7	      0xe984fdffff	                           jmp 0x4000440	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40006bc	         0xf1f4000	                         nop dword [rax]	       648	rltty.c	FUNCTION_13	IF_7	CALL_11
0x40006c0	    0x488b3d000000	            mov rdi, qword [0x040006c7] 	       607	rltty.c	FUNCTION_13	CALL_3
0x40006c7	      0xe9b3fcffff	                           jmp 0x400037f	       607	rltty.c	FUNCTION_13	CALL_3
0x40006cc	      0xe800000000	                          call 0x40006d1	       667	rltty.c	FUNCTION_13
_set_tty_settings	FOR,0:functions,0:SWITCH,0:ELSE,0:DO,0:CALL,0:WHILE,1:IF,1	28
0x40000a0	              0x55	                                push rbp	       475	rltty.c	FUNCTION_9
0x40000a1	              0x53	                                push rbx	       475	rltty.c	FUNCTION_9
0x40000a2	            0x89fd	                            mov ebp, edi	       475	rltty.c	FUNCTION_9
0x40000a4	          0x4889f3	                            mov rbx, rsi	       475	rltty.c	FUNCTION_9
0x40000a7	        0x4883ec08	                              sub rsp, 8	       475	rltty.c	FUNCTION_9
0x40000ab	            0xeb13	                           jmp 0x40000c0	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000ad	           0xf1f00	                         nop dword [rax]	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000b0	      0xe800000000	                          call 0x40000b5	       478	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x40000b5	          0x833804	                      cmp dword [rax], 4	       478	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x40000b8	            0x7526	                           jne 0x40000e0	       478	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x40000ba	    0xc70000000000	                      mov dword [rax], 0	       480	rltty.c	FUNCTION_9	WHILE_1
0x40000c0	          0x4889da	                            mov rdx, rbx	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000c3	      0xbe01000000	                              mov esi, 1	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000c8	            0x89ef	                            mov edi, ebp	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000ca	      0xe800000000	                          call 0x40000cf	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000cf	            0x85c0	                           test eax, eax	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000d1	            0x78dd	                            js 0x40000b0	       476	rltty.c	FUNCTION_9	WHILE_1
0x40000d3	        0x4883c408	                              add rsp, 8	       483	rltty.c	FUNCTION_9
0x40000d7	            0x31c0	                            xor eax, eax	       482	rltty.c	FUNCTION_9
0x40000d9	              0x5b	                                 pop rbx	       483	rltty.c	FUNCTION_9
0x40000da	              0x5d	                                 pop rbp	       483	rltty.c	FUNCTION_9
0x40000db	              0xc3	                                     ret	       483	rltty.c	FUNCTION_9
0x40000dc	         0xf1f4000	                         nop dword [rax]	       483	rltty.c	FUNCTION_9
0x40000e0	        0x4883c408	                              add rsp, 8	       483	rltty.c	FUNCTION_9
0x40000e4	      0xb8ffffffff	                     mov eax, 0xffffffff	       479	rltty.c	FUNCTION_9	WHILE_1	IF_1
0x40000e9	              0x5b	                                 pop rbx	       483	rltty.c	FUNCTION_9
0x40000ea	              0x5d	                                 pop rbp	       483	rltty.c	FUNCTION_9
0x40000eb	              0xc3	                                     ret	       483	rltty.c	FUNCTION_9
set_winsize	FOR,0:functions,0:SWITCH,0:ELSE,0:DO,0:CALL,2:WHILE,0:IF,1	22
0x4000040	              0x53	                                push rbx	        79	rltty.c	FUNCTION_1
0x4000041	      0xbe13540000	                         mov esi, 0x5413	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000046	            0x89fb	                            mov ebx, edi	        79	rltty.c	FUNCTION_1
0x4000048	        0x4883ec10	                           sub rsp, 0x10	        79	rltty.c	FUNCTION_1
0x400004c	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	rltty.c	FUNCTION_1
0x4000055	      0x4889442408	                mov qword [rsp + 8], rax	        79	rltty.c	FUNCTION_1
0x400005a	            0x31c0	                            xor eax, eax	        79	rltty.c	FUNCTION_1
0x400005c	          0x4889e2	                            mov rdx, rsp	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x400005f	      0xe800000000	                          call 0x4000064	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000064	            0x85c0	                           test eax, eax	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000066	            0x750f	                           jne 0x4000077	        83	rltty.c	FUNCTION_1	IF_1	CALL_1
0x4000068	          0x4889e2	                            mov rdx, rsp	        84	rltty.c	FUNCTION_1	CALL_2
0x400006b	      0xbe14540000	                         mov esi, 0x5414	        84	rltty.c	FUNCTION_1	CALL_2
0x4000070	            0x89df	                            mov edi, ebx	        84	rltty.c	FUNCTION_1	CALL_2
0x4000072	      0xe800000000	                          call 0x4000077	        84	rltty.c	FUNCTION_1	CALL_2
0x4000077	      0x488b442408	                mov rax, qword [rsp + 8]	        86	rltty.c	FUNCTION_1
0x400007c	    0x644833042528	                xor rax, qword fs:[0x28]	        86	rltty.c	FUNCTION_1
0x4000085	            0x7506	                           jne 0x400008d	        86	rltty.c	FUNCTION_1
0x4000087	        0x4883c410	                           add rsp, 0x10	        86	rltty.c	FUNCTION_1
0x400008b	              0x5b	                                 pop rbx	        86	rltty.c	FUNCTION_1
0x400008c	              0xc3	                                     ret	        86	rltty.c	FUNCTION_1
0x400008d	      0xe800000000	                          call 0x4000092	        86	rltty.c	FUNCTION_1
rltty_set_default_bindings	FOR,0:functions,0:SWITCH,0:ELSE,0:DO,0:CALL,3:WHILE,0:IF,1	33
0x4000730	              0x55	                                push rbp	       873	rltty.c	FUNCTION_19
0x4000731	              0x53	                                push rbx	       873	rltty.c	FUNCTION_19
0x4000732	          0x4889fd	                            mov rbp, rdi	       873	rltty.c	FUNCTION_19
0x4000735	        0x4883ec58	                           sub rsp, 0x58	       873	rltty.c	FUNCTION_19
0x4000739	    0x488b3d000000	            mov rdi, qword [0x04000740] 	       878	rltty.c	FUNCTION_19	CALL_1
0x4000740	    0x64488b042528	                mov rax, qword fs:[0x28]	       873	rltty.c	FUNCTION_19
0x4000749	      0x4889442448	             mov qword [rsp + 0x48], rax	       873	rltty.c	FUNCTION_19
0x400074e	            0x31c0	                            xor eax, eax	       873	rltty.c	FUNCTION_19
0x4000750	      0xe800000000	                          call 0x4000755	       878	rltty.c	FUNCTION_19	CALL_1
0x4000755	            0x89c3	                            mov ebx, eax	       878	rltty.c	FUNCTION_19	CALL_1
0x4000757	            0x89c7	                            mov edi, eax	       458	rltty.c	FUNCTION_8	CALL_1
0x4000759	      0xe8e2f8ffff	                    call sym.set_winsize	       458	rltty.c	FUNCTION_8	CALL_1
0x400075e	      0xe800000000	                          call 0x4000763	       460	rltty.c	FUNCTION_8
0x4000763	          0x4889e6	                            mov rsi, rsp	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000766	    0xc70000000000	                      mov dword [rax], 0	       460	rltty.c	FUNCTION_8
0x400076c	            0x89df	                            mov edi, ebx	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x400076e	      0xe80dfaffff	              call sym._get_tty_settings	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000773	            0x85c0	                           test eax, eax	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000775	            0x781d	                            js 0x4000794	       461	rltty.c	FUNCTION_8	IF_1	CALL_2
0x4000777	    0x440fb6442420	           movzx r8d, byte [rsp + 0x20] 	       881	rltty.c	FUNCTION_19	CALL_3
0x400077d	       0xfb64c241f	           movzx ecx, byte [rsp + 0x1f] 	       881	rltty.c	FUNCTION_19	CALL_3
0x4000782	          0x4889ef	                            mov rdi, rbp	       881	rltty.c	FUNCTION_19	CALL_3
0x4000785	       0xfb6542414	           movzx edx, byte [rsp + 0x14] 	       881	rltty.c	FUNCTION_19	CALL_3
0x400078a	       0xfb6742413	           movzx esi, byte [rsp + 0x13] 	       881	rltty.c	FUNCTION_19	CALL_3
0x400078f	      0xe85cf9ffff	call sym._rl_bind_tty_special_chars.isra.2	       881	rltty.c	FUNCTION_19	CALL_3
0x4000794	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       883	rltty.c	FUNCTION_19
0x4000799	    0x644833042528	                xor rax, qword fs:[0x28]	       883	rltty.c	FUNCTION_19
0x40007a2	            0x7507	                           jne 0x40007ab	       883	rltty.c	FUNCTION_19
0x40007a4	        0x4883c458	                           add rsp, 0x58	       883	rltty.c	FUNCTION_19
0x40007a8	              0x5b	                                 pop rbx	       883	rltty.c	FUNCTION_19
0x40007a9	              0x5d	                                 pop rbp	       883	rltty.c	FUNCTION_19
0x40007aa	              0xc3	                                     ret	       883	rltty.c	FUNCTION_19
0x40007ab	      0xe800000000	    call sym.rl_tty_set_default_bindings	       883	rltty.c	FUNCTION_19
_rl_restore_tty_signals	FOR,0:functions,0:SWITCH,0:ELSE,0:DO,0:CALL,2:WHILE,0:IF,2	16
0x4000900	    0x8b0500000000	            mov eax, dword [0x04000906] 	       963	rltty.c	FUNCTION_25	IF_1
0x4000906	            0x85c0	                           test eax, eax	       963	rltty.c	FUNCTION_25	IF_1
0x4000908	            0x7506	                           jne 0x4000910	       963	rltty.c	FUNCTION_25	IF_1
0x400090a	              0xc3	                                     ret	       972	rltty.c	FUNCTION_25
0x400090b	       0xf1f440000	                   nop dword [rax + rax]	       972	rltty.c	FUNCTION_25
0x4000910	        0x4883ec08	                              sub rsp, 8	       960	rltty.c	FUNCTION_25
0x4000914	    0x488b3d000000	            mov rdi, qword [0x0400091b] 	       966	rltty.c	FUNCTION_25	CALL_2
0x400091b	      0xe800000000	                          call 0x4000920	       966	rltty.c	FUNCTION_25	CALL_2
0x4000920	      0xbe00000000	                              mov esi, 0	       966	rltty.c	FUNCTION_25	CALL_2
0x4000925	            0x89c7	                            mov edi, eax	       966	rltty.c	FUNCTION_25	CALL_2
0x4000927	      0xe874f7ffff	              call sym._set_tty_settings	       966	rltty.c	FUNCTION_25	CALL_2
0x400092c	            0x85c0	                           test eax, eax	       968	rltty.c	FUNCTION_25	IF_2
0x400092e	            0x750a	                           jne 0x400093a	       968	rltty.c	FUNCTION_25	IF_2
0x4000930	    0xc70500000000	               mov dword [0x0400093a], 0	       969	rltty.c	FUNCTION_25	IF_2
0x400093a	        0x4883c408	                              add rsp, 8	       972	rltty.c	FUNCTION_25
0x400093e	              0xc3	                                     ret	       972	rltty.c	FUNCTION_25
rl_tty_set_default_bindings	FOR,0:functions,0:SWITCH,0:ELSE,0:DO,0:CALL,1:WHILE,0:IF,0	2
0x40007b0	            0x31c0	                            xor eax, eax	       891	rltty.c	FUNCTION_20	CALL_1
0x40007b2	      0xe979ffffff	      jmp sym.rltty_set_default_bindings	       891	rltty.c	FUNCTION_20	CALL_1
