srec_sizeof_headers	functions,0:WHILE,0:ELSE,0:CALL,0:DO,0:IF,0:FOR,0:SWITCH,0	2
0x4000040	            0x31c0	                            xor eax, eax	      1178	srec.c	FUNCTION_21
0x4000042	              0xc3	                                     ret	      1178	srec.c	FUNCTION_21
srec_set_arch_mach	functions,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,1:FOR,0:SWITCH,0	7
0x4000300	            0x85f6	                           test esi, esi	       872	srec.c	FUNCTION_11	IF_1
0x4000302	            0x7514	                           jne 0x4000318	       872	srec.c	FUNCTION_11	IF_1
0x4000304	    0x48c787c00000	               mov qword [rdi + 0xc0], 0	       875	srec.c	FUNCTION_11
0x400030f	      0xb801000000	                              mov eax, 1	       877	srec.c	FUNCTION_11
0x4000314	              0xc3	                                     ret	       877	srec.c	FUNCTION_11
0x4000315	           0xf1f00	                         nop dword [rax]	       877	srec.c	FUNCTION_11
0x4000318	      0xe900000000	                           jmp 0x400031d	       873	srec.c	FUNCTION_11	CALL_1
srec_set_section_contents	functions,0:WHILE,0:ELSE,4:CALL,4:DO,0:IF,8:FOR,1:SWITCH,0	120
0x4000140	            0x4157	                                push r15	       887	srec.c	FUNCTION_12
0x4000142	            0x4156	                                push r14	       887	srec.c	FUNCTION_12
0x4000144	          0x4d89c7	                             mov r15, r8	       887	srec.c	FUNCTION_12
0x4000147	            0x4155	                                push r13	       887	srec.c	FUNCTION_12
0x4000149	            0x4154	                                push r12	       887	srec.c	FUNCTION_12
0x400014b	          0x4989cd	                            mov r13, rcx	       887	srec.c	FUNCTION_12
0x400014e	              0x55	                                push rbp	       887	srec.c	FUNCTION_12
0x400014f	              0x53	                                push rbx	       887	srec.c	FUNCTION_12
0x4000150	          0x4889fb	                            mov rbx, rdi	       887	srec.c	FUNCTION_12
0x4000153	          0x4889f5	                            mov rbp, rsi	       887	srec.c	FUNCTION_12
0x4000156	          0x4989d4	                            mov r12, rdx	       887	srec.c	FUNCTION_12
0x4000159	        0x4883ec18	                           sub rsp, 0x18	       887	srec.c	FUNCTION_12
0x400015d	      0xe800000000	                          call 0x4000162	       888	srec.c	FUNCTION_12	CALL_1
0x4000162	      0xbe20000000	                           mov esi, 0x20	       892	srec.c	FUNCTION_12	CALL_2
0x4000167	          0x4889df	                            mov rdi, rbx	       892	srec.c	FUNCTION_12	CALL_2
0x400016a	        0x89442404	                mov dword [rsp + 4], eax	       888	srec.c	FUNCTION_12	CALL_1
0x400016e	    0x4c8bb3f80000	            mov r14, qword [rbx + 0xf8] 	       889	srec.c	FUNCTION_12
0x4000175	      0xe800000000	                          call 0x400017a	       892	srec.c	FUNCTION_12	CALL_2
0x400017a	          0x4885c0	                           test rax, rax	       893	srec.c	FUNCTION_12	IF_1
0x400017d	     0xf8415010000	                            je 0x4000298	       893	srec.c	FUNCTION_12	IF_1
0x4000183	          0x4d85ff	                           test r15, r15	       896	srec.c	FUNCTION_12	IF_2
0x4000186	            0x740e	                            je 0x4000196	       896	srec.c	FUNCTION_12	IF_2
0x4000188	          0x4889c1	                            mov rcx, rax	       896	srec.c	FUNCTION_12	IF_2
0x400018b	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       898	srec.c	FUNCTION_12	IF_2
0x400018e	          0x83e003	                              and eax, 3	       898	srec.c	FUNCTION_12	IF_2
0x4000191	          0x83f803	                              cmp eax, 3	       898	srec.c	FUNCTION_12	IF_2
0x4000194	            0x741a	                            je 0x40001b0	       898	srec.c	FUNCTION_12	IF_2
0x4000196	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x400019b	        0x4883c418	                           add rsp, 0x18	       947	srec.c	FUNCTION_12
0x400019f	              0x5b	                                 pop rbx	       947	srec.c	FUNCTION_12
0x40001a0	              0x5d	                                 pop rbp	       947	srec.c	FUNCTION_12
0x40001a1	            0x415c	                                 pop r12	       947	srec.c	FUNCTION_12
0x40001a3	            0x415d	                                 pop r13	       947	srec.c	FUNCTION_12
0x40001a5	            0x415e	                                 pop r14	       947	srec.c	FUNCTION_12
0x40001a7	            0x415f	                                 pop r15	       947	srec.c	FUNCTION_12
0x40001a9	              0xc3	                                     ret	       947	srec.c	FUNCTION_12
0x40001aa	    0x660f1f440000	                    nop word [rax + rax]	       947	srec.c	FUNCTION_12
0x40001b0	          0x4c89fe	                            mov rsi, r15	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001b3	          0x4889df	                            mov rdi, rbx	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001b6	      0x48894c2408	                mov qword [rsp + 8], rcx	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001bb	      0xe800000000	                          call 0x40001c0	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001c0	          0x4885c0	                           test rax, rax	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x40001c3	     0xf84cf000000	                            je 0x4000298	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x40001c9	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_26	CALL_3
0x40001cc	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_26	CALL_3
0x40001cf	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_26	CALL_3
0x40001d2	      0xe800000000	                          call 0x40001d7	        53	string3.h	FUNCTION_26	CALL_3
0x40001d7	          0x4989c1	                             mov r9, rax	        53	string3.h	FUNCTION_26	CALL_3
0x40001da	    0x8b0500000000	            mov eax, dword [0x040001e0] 	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001e0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001e5	            0x85c0	                           test eax, eax	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001e7	     0xf85c3000000	                           jne 0x40002b0	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001ed	      0x4c63642404	            movsxd r12, dword [rsp + 4] 	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f2	      0x4b8d443d00	                    lea rax, [r13 + r15]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f7	            0x31d2	                            xor edx, edx	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f9	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001fd	          0x49f7f4	                                 div r12	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4000200	      0x488d4406ff	                lea rax, [rsi + rax - 1]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4000205	    0x483dffff0000	                         cmp rax, 0xffff	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x400020b	            0x7623	                           jbe 0x4000230	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x400020d	    0x483dffffff00	                       cmp rax, 0xffffff	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000213	     0xf87d7000000	                            ja 0x40002f0	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000219	      0x41837e1002	               cmp dword [r14 + 0x10], 2	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x400021e	     0xf87cc000000	                            ja 0x40002f0	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000224	    0x41c746100200	               mov dword [r14 + 0x10], 2	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x400022c	         0xf1f4000	                         nop dword [rax]	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000230	          0x4c89e8	                            mov rax, r13	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000233	        0x4c894908	                 mov qword [rcx + 8], r9	       919	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000237	        0x4c897918	             mov qword [rcx + 0x18], r15	       921	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400023b	            0x4899	                                     cqo	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400023d	          0x49f7fc	                                idiv r12	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000240	        0x498b5608	                mov rdx, qword [r14 + 8]	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000244	          0x4801f0	                            add rax, rsi	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000247	          0x4885d2	                           test rdx, rdx	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x400024a	        0x48894110	             mov qword [rcx + 0x10], rax	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400024e	            0x7406	                            je 0x4000256	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000250	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000254	            0x737a	                           jae 0x40002d0	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000256	          0x498b16	                    mov rdx, qword [r14]	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000259	          0x4c89f6	                            mov rsi, r14	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400025c	          0x4885d2	                           test rdx, rdx	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400025f	            0x7512	                           jne 0x4000273	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000261	            0xeb16	                           jmp 0x4000279	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000263	       0xf1f440000	                   nop dword [rax + rax]	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000268	          0x4889d6	                            mov rsi, rdx	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400026b	          0x488b12	                    mov rdx, qword [rdx]	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400026e	          0x4885d2	                           test rdx, rdx	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000271	            0x7406	                            je 0x4000279	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000273	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000277	            0x77ef	                            ja 0x4000268	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000279	          0x488911	                    mov qword [rcx], rdx	       940	srec.c	FUNCTION_12	IF_2	ELSE_4
0x400027c	          0x48890e	                    mov qword [rsi], rcx	       941	srec.c	FUNCTION_12	IF_2	ELSE_4
0x400027f	        0x48833900	                      cmp qword [rcx], 0	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000283	     0xf850dffffff	                           jne 0x4000196	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000289	        0x49894e08	                mov qword [r14 + 8], rcx	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x400028d	      0xe904ffffff	                           jmp 0x4000196	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000292	    0x660f1f440000	                    nop word [rax + rax]	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000298	        0x4883c418	                           add rsp, 0x18	       947	srec.c	FUNCTION_12
0x400029c	            0x31c0	                            xor eax, eax	       894	srec.c	FUNCTION_12	IF_1
0x400029e	              0x5b	                                 pop rbx	       947	srec.c	FUNCTION_12
0x400029f	              0x5d	                                 pop rbp	       947	srec.c	FUNCTION_12
0x40002a0	            0x415c	                                 pop r12	       947	srec.c	FUNCTION_12
0x40002a2	            0x415d	                                 pop r13	       947	srec.c	FUNCTION_12
0x40002a4	            0x415e	                                 pop r14	       947	srec.c	FUNCTION_12
0x40002a6	            0x415f	                                 pop r15	       947	srec.c	FUNCTION_12
0x40002a8	              0xc3	                                     ret	       947	srec.c	FUNCTION_12
0x40002a9	     0xf1f80000000	                         nop dword [rax]	       947	srec.c	FUNCTION_12
0x40002b0	    0x41c746100300	               mov dword [r14 + 0x10], 3	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002b8	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002bc	      0x4c63642404	            movsxd r12, dword [rsp + 4] 	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002c1	      0xe96affffff	                           jmp 0x4000230	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002d0	          0x48890a	                    mov qword [rdx], rcx	       928	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002d3	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x40002d8	    0x48c701000000	                      mov qword [rcx], 0	       929	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002df	        0x49894e08	                mov qword [r14 + 8], rcx	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002e3	      0xe9b3feffff	                           jmp 0x400019b	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002e8	     0xf1f84000000	                   nop dword [rax + rax]	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002f0	    0x41c746100300	               mov dword [r14 + 0x10], 3	       917	srec.c	FUNCTION_12	IF_2	ELSE_3
0x40002f8	      0xe933ffffff	                           jmp 0x4000230	       917	srec.c	FUNCTION_12	IF_2	ELSE_3
internal_srec_write_object_contents	functions,0:WHILE,1:ELSE,0:CALL,4:DO,0:IF,4:FOR,0:SWITCH,0	216
0x4000b50	            0x4157	                                push r15	      1136	srec.c	FUNCTION_18
0x4000b52	            0x4156	                                push r14	      1136	srec.c	FUNCTION_18
0x4000b54	          0x4889f8	                            mov rax, rdi	      1136	srec.c	FUNCTION_18
0x4000b57	            0x4155	                                push r13	      1136	srec.c	FUNCTION_18
0x4000b59	            0x4154	                                push r12	      1136	srec.c	FUNCTION_18
0x4000b5b	              0x55	                                push rbp	      1136	srec.c	FUNCTION_18
0x4000b5c	              0x53	                                push rbx	      1136	srec.c	FUNCTION_18
0x4000b5d	        0x4883ec58	                           sub rsp, 0x58	      1136	srec.c	FUNCTION_18
0x4000b61	    0x4c8ba8f80000	            mov r13, qword [rax + 0xf8] 	      1137	srec.c	FUNCTION_18
0x4000b68	        0x48893c24	                    mov qword [rsp], rdi	      1136	srec.c	FUNCTION_18
0x4000b6c	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      1136	srec.c	FUNCTION_18
0x4000b75	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      1136	srec.c	FUNCTION_18
0x4000b7a	            0x31ff	                            xor edi, edi	      1136	srec.c	FUNCTION_18
0x4000b7c	            0x85f6	                           test esi, esi	      1140	srec.c	FUNCTION_18	IF_1
0x4000b7e	            0x740e	                            je 0x4000b8e	      1140	srec.c	FUNCTION_18	IF_1
0x4000b80	    0x8b98b8000000	            mov ebx, dword [rax + 0xb8] 	      1084	srec.c	FUNCTION_17	CALL_1
0x4000b86	            0x85db	                           test ebx, ebx	      1086	srec.c	FUNCTION_17	IF_1
0x4000b88	     0xf854e010000	                           jne 0x4000cdc	      1086	srec.c	FUNCTION_17	IF_1
0x4000b8e	        0x4c8b3c24	                    mov r15, qword [rsp]	      1018	srec.c	FUNCTION_14	CALL_1
0x4000b92	          0x498b1f	                    mov rbx, qword [r15]	      1018	srec.c	FUNCTION_14	CALL_1
0x4000b95	          0x4889df	                            mov rdi, rbx	      1018	srec.c	FUNCTION_14	CALL_1
0x4000b98	      0xe800000000	                          call 0x4000b9d	      1018	srec.c	FUNCTION_14	CALL_1
0x4000b9d	    0x41b828000000	                           mov r8d, 0x28	      1024	srec.c	FUNCTION_14	CALL_2
0x4000ba3	          0x83f828	                           cmp eax, 0x28	      1024	srec.c	FUNCTION_14	CALL_2
0x4000ba6	          0x4889d9	                            mov rcx, rbx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000ba9	        0x410f47c0	                          cmova eax, r8d	      1024	srec.c	FUNCTION_14	CALL_2
0x4000bad	          0x4c89ff	                            mov rdi, r15	      1024	srec.c	FUNCTION_14	CALL_2
0x4000bb0	            0x31d2	                            xor edx, edx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000bb2	          0x4189c0	                            mov r8d, eax	      1024	srec.c	FUNCTION_14	CALL_2
0x4000bb5	            0x31f6	                            xor esi, esi	      1024	srec.c	FUNCTION_14	CALL_2
0x4000bb7	          0x4901d8	                             add r8, rbx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000bba	      0xe871f7ffff	              call sym.srec_write_record	      1024	srec.c	FUNCTION_14	CALL_2
0x4000bbf	            0x85c0	                           test eax, eax	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x4000bc1	     0xf84a0000000	                            je 0x4000c67	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x4000bc7	        0x4d8b7500	                    mov r14, qword [r13]	      1150	srec.c	FUNCTION_18
0x4000bcb	          0x4d85f6	                           test r14, r14	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000bce	     0xf84c8000000	                            je 0x4000c9c	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000bd4	         0xf1f4000	                         nop dword [rax]	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000bd8	    0x8b0500000000	            mov eax, dword [0x04000bde] 	      1043	srec.c	FUNCTION_15	IF_1
0x4000bde	        0x498b4e08	                mov rcx, qword [r14 + 8]	      1035	srec.c	FUNCTION_15
0x4000be2	            0x85c0	                           test eax, eax	      1043	srec.c	FUNCTION_15	IF_1
0x4000be4	     0xf85d6000000	                           jne 0x4000cc0	      1043	srec.c	FUNCTION_15	IF_1
0x4000bea	    0xc70500000000	               mov dword [0x04000bf4], 1	      1044	srec.c	FUNCTION_15	IF_1
0x4000bf4	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000bf8	          0x4885c0	                           test rax, rax	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000bfb	     0xf848f000000	                            je 0x4000c90	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c01	            0x31ed	                            xor ebp, ebp	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c03	            0xeb16	                           jmp 0x4000c1b	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c05	           0xf1f00	                         nop dword [rax]	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c08	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c0c	        0x8d541d00	                    lea edx, [rbp + rbx]	      1065	srec.c	FUNCTION_15	WHILE_1
0x4000c10	          0x4c89e1	                            mov rcx, r12	      1066	srec.c	FUNCTION_15	WHILE_1
0x4000c13	          0x4889d5	                            mov rbp, rdx	      1065	srec.c	FUNCTION_15	WHILE_1
0x4000c16	          0x4839d0	                            cmp rax, rdx	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c19	            0x7675	                           jbe 0x4000c90	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c1b	    0x8b1d00000000	            mov ebx, dword [0x04000c21] 	      1053	srec.c	FUNCTION_15	WHILE_1	IF_3
0x4000c21	        0x488b3c24	                    mov rdi, qword [rsp]	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000c25	            0x29e8	                            sub eax, ebp	      1051	srec.c	FUNCTION_15	WHILE_1
0x4000c27	      0x48894c2408	                mov qword [rsp + 8], rcx	      1051	srec.c	FUNCTION_15	WHILE_1
0x4000c2c	        0x4d8b7e10	            mov r15, qword [r14 + 0x10] 	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000c30	            0x39d8	                            cmp eax, ebx	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000c32	           0xf46d8	                         cmovbe ebx, eax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000c35	      0xe800000000	                          call 0x4000c3a	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000c3a	            0x31d2	                            xor edx, edx	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c3c	            0x89c6	                            mov esi, eax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000c3e	            0x89e8	                            mov eax, ebp	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c40	            0xf7f6	                                 div esi	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c42	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c47	          0x4189d9	                            mov r9d, ebx	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c4a	        0x418b7510	            mov esi, dword [r13 + 0x10] 	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c4e	        0x488b3c24	                    mov rdi, qword [rsp]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c52	        0x4e8d2409	                     lea r12, [rcx + r9]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c56	            0x89c2	                            mov edx, eax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c58	          0x4d89e0	                             mov r8, r12	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c5b	          0x4c01fa	                            add rdx, r15	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c5e	      0xe8cdf6ffff	              call sym.srec_write_record	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c63	            0x85c0	                           test eax, eax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c65	            0x75a1	                           jne 0x4000c08	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000c67	            0x31c0	                            xor eax, eax	      1143	srec.c	FUNCTION_18	IF_1	IF_2
0x4000c69	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1159	srec.c	FUNCTION_18
0x4000c6e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1159	srec.c	FUNCTION_18
0x4000c77	     0xf850f020000	                           jne 0x4000e8c	      1159	srec.c	FUNCTION_18
0x4000c7d	        0x4883c458	                           add rsp, 0x58	      1159	srec.c	FUNCTION_18
0x4000c81	              0x5b	                                 pop rbx	      1159	srec.c	FUNCTION_18
0x4000c82	              0x5d	                                 pop rbp	      1159	srec.c	FUNCTION_18
0x4000c83	            0x415c	                                 pop r12	      1159	srec.c	FUNCTION_18
0x4000c85	            0x415d	                                 pop r13	      1159	srec.c	FUNCTION_18
0x4000c87	            0x415e	                                 pop r14	      1159	srec.c	FUNCTION_18
0x4000c89	            0x415f	                                 pop r15	      1159	srec.c	FUNCTION_18
0x4000c8b	              0xc3	                                     ret	      1159	srec.c	FUNCTION_18
0x4000c8c	         0xf1f4000	                         nop dword [rax]	      1159	srec.c	FUNCTION_18
0x4000c90	          0x4d8b36	                    mov r14, qword [r14]	      1156	srec.c	FUNCTION_18	WHILE_1
0x4000c93	          0x4d85f6	                           test r14, r14	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000c96	     0xf853cffffff	                           jne 0x4000bd8	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000c9c	        0x488b0424	                    mov rax, qword [rsp]	      1075	srec.c	FUNCTION_16	CALL_1
0x4000ca0	      0xbe0a000000	                            mov esi, 0xa	      1075	srec.c	FUNCTION_16	CALL_1
0x4000ca5	        0x412b7510	             sub esi, dword [r13 + 0x10]	      1075	srec.c	FUNCTION_16	CALL_1
0x4000ca9	          0x4531c0	                            xor r8d, r8d	      1075	srec.c	FUNCTION_16	CALL_1
0x4000cac	            0x31c9	                            xor ecx, ecx	      1075	srec.c	FUNCTION_16	CALL_1
0x4000cae	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      1075	srec.c	FUNCTION_16	CALL_1
0x4000cb5	          0x4889c7	                            mov rdi, rax	      1075	srec.c	FUNCTION_16	CALL_1
0x4000cb8	      0xe873f6ffff	              call sym.srec_write_record	      1075	srec.c	FUNCTION_16	CALL_1
0x4000cbd	            0xebaa	                           jmp 0x4000c69	      1158	srec.c	FUNCTION_18	CALL_4
0x4000cbf	              0x90	                                     nop	      1158	srec.c	FUNCTION_18	CALL_4
0x4000cc0	      0xbafd000000	                           mov edx, 0xfd	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000cc5	        0x412b5510	             sub edx, dword [r13 + 0x10]	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000cc9	            0x39d0	                            cmp eax, edx	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000ccb	     0xf8623ffffff	                           jbe 0x4000bf4	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000cd1	    0x891500000000	            mov dword [0x04000cd7], edx 	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000cd7	      0xe918ffffff	                           jmp 0x4000bf4	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000cdc	          0x488b38	                    mov rdi, qword [rax]	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000cdf	          0x4989c7	                            mov r15, rax	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4000ce2	    0x488ba8b00000	            mov rbp, qword [rax + 0xb0] 	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4000ce9	      0xe800000000	                          call 0x4000cee	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000cee	          0x4c89fa	                            mov rdx, r15	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000cf1	      0xbe03000000	                              mov esi, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000cf6	      0xbf00000000	                              mov edi, 0	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000cfb	          0x4989c6	                            mov r14, rax	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000cfe	      0xe800000000	                          call 0x4000d03	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000d03	        0x4883f803	                              cmp rax, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000d07	     0xf855affffff	                           jne 0x4000c67	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000d0d	        0x488b0424	                    mov rax, qword [rsp]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000d11	          0x4c89f6	                            mov rsi, r14	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000d14	          0x488b38	                    mov rdi, qword [rax]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000d17	          0x4889c2	                            mov rdx, rax	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000d1a	      0xe800000000	                          call 0x4000d1f	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000d1f	          0x4939c6	                            cmp r14, rax	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000d22	     0xf853fffffff	                           jne 0x4000c67	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000d28	        0x488b1424	                    mov rdx, qword [rsp]	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000d2c	      0xbe02000000	                              mov esi, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000d31	      0xbf00000000	                              mov edi, 0	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000d36	      0xe800000000	                          call 0x4000d3b	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000d3b	        0x4883f802	                              cmp rax, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000d3f	     0xf8522ffffff	                           jne 0x4000c67	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000d45	          0x8d43ff	                      lea eax, [rbx - 1]	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000d48	            0x85db	                           test ebx, ebx	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d4a	      0x4c8d74c508	              lea r14, [rbp + rax*8 + 8]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d4f	            0x7f1c	                            jg 0x4000d6d	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d51	      0xe914010000	                           jmp 0x4000e6a	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d60	        0x4883c508	                              add rbp, 8	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d64	          0x4939ee	                            cmp r14, rbp	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d67	     0xf84fd000000	                            je 0x4000e6a	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d6d	        0x488b5d00	                    mov rbx, qword [rbp]	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000d71	        0x488b3c24	                    mov rdi, qword [rsp]	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000d75	          0x4889de	                            mov rsi, rbx	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000d78	      0xe800000000	                          call 0x4000d7d	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000d7d	            0x85c0	                           test eax, eax	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000d7f	            0x75df	                           jne 0x4000d60	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000d81	        0xf6431804	               test byte [rbx + 0x18], 4	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000d85	            0x75d9	                           jne 0x4000d60	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000d87	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000d8b	      0xe800000000	                          call 0x4000d90	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000d90	        0x4c8b2424	                    mov r12, qword [rsp]	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000d94	      0xbe02000000	                              mov esi, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000d99	      0xbf00000000	                              mov edi, 0	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000d9e	          0x4989c7	                            mov r15, rax	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000da1	          0x4c89e2	                            mov rdx, r12	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000da4	      0xe800000000	                          call 0x4000da9	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000da9	        0x4883f802	                              cmp rax, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000dad	     0xf85b4feffff	                           jne 0x4000c67	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000db3	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000db7	          0x4c89e2	                            mov rdx, r12	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000dba	          0x4c89fe	                            mov rsi, r15	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000dbd	      0xe800000000	                          call 0x4000dc2	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000dc2	          0x4939c7	                            cmp r15, rax	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000dc5	     0xf859cfeffff	                           jne 0x4000c67	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000dcb	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4000dcf	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000dd3	      0x488d7c2412	                   lea rdi, [rsp + 0x12]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000dd8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000ddd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000de2	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4000de6	        0x4c034230	              add r8, qword [rdx + 0x30]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000dea	      0xba29000000	                           mov edx, 0x29	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000def	        0x4c034060	              add r8, qword [rax + 0x60]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000df3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000df5	      0xe800000000	                          call 0x4000dfa	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000dfa	      0x807c241230	            cmp byte [rsp + 0x12], 0x30 	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000dff	            0x7562	                           jne 0x4000e63	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e01	       0xfb6442413	           movzx eax, byte [rsp + 0x13] 	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e06	      0x488d5c2412	                   lea rbx, [rsp + 0x12]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e0b	            0x84c0	                             test al, al	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e0d	            0x7511	                           jne 0x4000e20	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e0f	            0xeb17	                           jmp 0x4000e28	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e11	     0xf1f80000000	                         nop dword [rax]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e18	         0xfb64301	               movzx eax, byte [rbx + 1]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e1c	            0x84c0	                             test al, al	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e1e	            0x7408	                            je 0x4000e28	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e20	        0x4883c301	                              add rbx, 1	      1116	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e24	            0x3c30	                            cmp al, 0x30	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e26	            0x74f0	                            je 0x4000e18	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000e28	          0x4889df	                            mov rdi, rbx	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000e2b	      0xe800000000	                          call 0x4000e30	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000e30	        0x488b1424	                    mov rdx, qword [rsp]	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000e34	        0x4c8d7804	                      lea r15, [rax + 4]	      1122	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e38	        0x488d7bfe	                      lea rdi, [rbx - 2]	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e3c	        0xc604030d	               mov byte [rbx + rax], 0xd	      1118	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e40	      0xc64403010a	           mov byte [rbx + rax + 1], 0xa	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e45	          0x4c89fe	                            mov rsi, r15	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000e48	        0xc643ff24	                mov byte [rbx - 1], 0x24	      1120	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e4c	        0xc643fe20	                mov byte [rbx - 2], 0x20	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e50	      0xe800000000	                          call 0x4000e55	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000e55	          0x4939c7	                            cmp r15, rax	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000e58	     0xf8402ffffff	                            je 0x4000d60	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000e5e	      0xe904feffff	                           jmp 0x4000c67	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000e63	      0x488d5c2412	                   lea rbx, [rsp + 0x12]	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e68	            0xebbe	                           jmp 0x4000e28	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000e6a	        0x488b1424	                    mov rdx, qword [rsp]	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000e6e	      0xbe05000000	                              mov esi, 5	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000e73	      0xbf00000000	                              mov edi, 0	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000e78	      0xe800000000	                          call 0x4000e7d	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000e7d	        0x4883f805	                              cmp rax, 5	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000e81	     0xf85e0fdffff	                           jne 0x4000c67	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000e87	      0xe902fdffff	                           jmp 0x4000b8e	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000e8c	      0xe800000000	                          call 0x4000e91	      1159	srec.c	FUNCTION_18
srec_object_p	functions,0:WHILE,0:ELSE,0:CALL,7:DO,0:IF,5:FOR,0:SWITCH,0	75
0x40018e0	              0x55	                                push rbp	       651	srec.c	FUNCTION_7
0x40018e1	              0x53	                                push rbx	       651	srec.c	FUNCTION_7
0x40018e2	          0x4889fb	                            mov rbx, rdi	       651	srec.c	FUNCTION_7
0x40018e5	        0x4883ec18	                           sub rsp, 0x18	       651	srec.c	FUNCTION_7
0x40018e9	    0x8b1500000000	            mov edx, dword [0x040018ef] 	       183	srec.c	FUNCTION_1	IF_1
0x40018ef	    0x64488b042528	                mov rax, qword fs:[0x28]	       651	srec.c	FUNCTION_7
0x40018f8	      0x4889442408	                mov qword [rsp + 8], rax	       651	srec.c	FUNCTION_7
0x40018fd	            0x31c0	                            xor eax, eax	       651	srec.c	FUNCTION_7
0x40018ff	            0x85d2	                           test edx, edx	       183	srec.c	FUNCTION_1	IF_1
0x4001901	     0xf84c1000000	                            je 0x40019c8	       183	srec.c	FUNCTION_1	IF_1
0x4001907	            0x31d2	                            xor edx, edx	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001909	            0x31f6	                            xor esi, esi	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x400190b	          0x4889df	                            mov rdi, rbx	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x400190e	      0xe800000000	                          call 0x4001913	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001913	            0x85c0	                           test eax, eax	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001915	     0xf858f000000	                           jne 0x40019aa	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x400191b	          0x4889da	                            mov rdx, rbx	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x400191e	      0xbe04000000	                              mov esi, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001923	          0x4889e7	                            mov rdi, rsp	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001926	      0xe800000000	                          call 0x400192b	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x400192b	        0x4883f804	                              cmp rax, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x400192f	            0x7579	                           jne 0x40019aa	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001931	        0x803c2453	                    cmp byte [rsp], 0x53	       661	srec.c	FUNCTION_7	IF_2
0x4001935	            0x7569	                           jne 0x40019a0	       661	srec.c	FUNCTION_7	IF_2
0x4001937	       0xfb6442401	               movzx eax, byte [rsp + 1]	       661	srec.c	FUNCTION_7	IF_2
0x400193c	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x4001943	            0x745b	                            je 0x40019a0	       661	srec.c	FUNCTION_7	IF_2
0x4001945	       0xfb6442402	               movzx eax, byte [rsp + 2]	       661	srec.c	FUNCTION_7	IF_2
0x400194a	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x4001951	            0x744d	                            je 0x40019a0	       661	srec.c	FUNCTION_7	IF_2
0x4001953	       0xfb6442403	               movzx eax, byte [rsp + 3]	       661	srec.c	FUNCTION_7	IF_2
0x4001958	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x400195f	            0x743f	                            je 0x40019a0	       661	srec.c	FUNCTION_7	IF_2
0x4001961	          0x4889df	                            mov rdi, rbx	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001964	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	       667	srec.c	FUNCTION_7
0x400196b	      0xe830ecffff	                  call sym.srec_mkobject	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001970	            0x85c0	                           test eax, eax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001972	            0x746c	                            je 0x40019e0	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001974	          0x4889df	                            mov rdi, rbx	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001977	      0xe814f6ffff	                      call sym.srec_scan	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x400197c	            0x85c0	                           test eax, eax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x400197e	            0x7460	                            je 0x40019e0	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001980	    0x8b83b8000000	            mov eax, dword [rbx + 0xb8] 	       676	srec.c	FUNCTION_7	IF_5
0x4001986	            0x85c0	                           test eax, eax	       676	srec.c	FUNCTION_7	IF_5
0x4001988	            0x7407	                            je 0x4001991	       676	srec.c	FUNCTION_7	IF_5
0x400198a	    0x814b44000200	            or dword [rbx + 0x44], 0x200	       677	srec.c	FUNCTION_7	IF_5
0x4001991	        0x488b4308	                mov rax, qword [rbx + 8]	       679	srec.c	FUNCTION_7
0x4001995	            0xeb15	                           jmp 0x40019ac	       679	srec.c	FUNCTION_7
0x4001997	    0x660f1f840000	                    nop word [rax + rax]	       679	srec.c	FUNCTION_7
0x40019a0	      0xbf03000000	                              mov edi, 3	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x40019a5	      0xe800000000	                          call 0x40019aa	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x40019aa	            0x31c0	                            xor eax, eax	       664	srec.c	FUNCTION_7	IF_2
0x40019ac	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       680	srec.c	FUNCTION_7
0x40019b1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       680	srec.c	FUNCTION_7
0x40019ba	            0x7548	                           jne 0x4001a04	       680	srec.c	FUNCTION_7
0x40019bc	        0x4883c418	                           add rsp, 0x18	       680	srec.c	FUNCTION_7
0x40019c0	              0x5b	                                 pop rbx	       680	srec.c	FUNCTION_7
0x40019c1	              0x5d	                                 pop rbp	       680	srec.c	FUNCTION_7
0x40019c2	              0xc3	                                     ret	       680	srec.c	FUNCTION_7
0x40019c3	       0xf1f440000	                   nop dword [rax + rax]	       680	srec.c	FUNCTION_7
0x40019c8	    0xc70500000000	               mov dword [0x040019d2], 1	       185	srec.c	FUNCTION_1	IF_1
0x40019d2	      0xe800000000	                          call 0x40019d7	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x40019d7	      0xe92bffffff	                           jmp 0x4001907	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x40019dc	         0xf1f4000	                         nop dword [rax]	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x40019e0	    0x488bb3f80000	            mov rsi, qword [rbx + 0xf8] 	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40019e7	          0x4885f6	                           test rsi, rsi	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40019ea	            0x740d	                            je 0x40019f9	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40019ec	          0x4839f5	                            cmp rbp, rsi	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40019ef	            0x7408	                            je 0x40019f9	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40019f1	          0x4889df	                            mov rdi, rbx	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40019f4	      0xe800000000	                          call 0x40019f9	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x40019f9	    0x4889abf80000	             mov qword [rbx + 0xf8], rbp	       672	srec.c	FUNCTION_7	IF_3
0x4001a00	            0x31c0	                            xor eax, eax	       673	srec.c	FUNCTION_7	IF_3
0x4001a02	            0xeba8	                           jmp 0x40019ac	       673	srec.c	FUNCTION_7	IF_3
0x4001a04	      0xe800000000	                          call 0x4001a09	       680	srec.c	FUNCTION_7
srec_canonicalize_symtab	functions,0:WHILE,0:ELSE,0:CALL,2:DO,0:IF,2:FOR,2:SWITCH,0	57
0x4000060	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1197	srec.c	FUNCTION_23
0x4000067	            0x4154	                                push r12	      1192	srec.c	FUNCTION_23
0x4000069	              0x55	                                push rbp	      1192	srec.c	FUNCTION_23
0x400006a	              0x53	                                push rbx	      1192	srec.c	FUNCTION_23
0x400006b	          0x4889f3	                            mov rbx, rsi	      1192	srec.c	FUNCTION_23
0x400006e	    0x8bafb8000000	            mov ebp, dword [rdi + 0xb8] 	      1193	srec.c	FUNCTION_23	CALL_1
0x4000074	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1197	srec.c	FUNCTION_23
0x4000078	          0x4885c0	                           test rax, rax	      1198	srec.c	FUNCTION_23	IF_1
0x400007b	            0x7505	                           jne 0x4000082	      1198	srec.c	FUNCTION_23	IF_1
0x400007d	          0x4885ed	                           test rbp, rbp	      1198	srec.c	FUNCTION_23	IF_1
0x4000080	            0x753e	                           jne 0x40000c0	      1198	srec.c	FUNCTION_23	IF_1
0x4000082	          0x4885ed	                           test rbp, rbp	      1221	srec.c	FUNCTION_23	FOR_2
0x4000085	            0x7420	                            je 0x40000a7	      1221	srec.c	FUNCTION_23	FOR_2
0x4000087	            0x31d2	                            xor edx, edx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000089	     0xf1f80000000	                         nop dword [rax]	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000090	          0x8d4a01	                      lea ecx, [rdx + 1]	      1221	srec.c	FUNCTION_23	FOR_2
0x4000093	        0x4883c308	                              add rbx, 8	      1222	srec.c	FUNCTION_23	FOR_2
0x4000097	        0x488943f8	                mov qword [rbx - 8], rax	      1222	srec.c	FUNCTION_23	FOR_2
0x400009b	        0x4883c030	                           add rax, 0x30	      1222	srec.c	FUNCTION_23	FOR_2
0x400009f	          0x4839cd	                            cmp rbp, rcx	      1221	srec.c	FUNCTION_23	FOR_2
0x40000a2	          0x4889ca	                            mov rdx, rcx	      1221	srec.c	FUNCTION_23	FOR_2
0x40000a5	            0x77e9	                            ja 0x4000090	      1221	srec.c	FUNCTION_23	FOR_2
0x40000a7	    0x48c703000000	                      mov qword [rbx], 0	      1223	srec.c	FUNCTION_23
0x40000ae	          0x4889e8	                            mov rax, rbp	      1225	srec.c	FUNCTION_23
0x40000b1	              0x5b	                                 pop rbx	      1226	srec.c	FUNCTION_23
0x40000b2	              0x5d	                                 pop rbp	      1226	srec.c	FUNCTION_23
0x40000b3	            0x415c	                                 pop r12	      1226	srec.c	FUNCTION_23
0x40000b5	              0xc3	                                     ret	      1226	srec.c	FUNCTION_23
0x40000b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1226	srec.c	FUNCTION_23
0x40000c0	      0x488d746d00	                  lea rsi, [rbp + rbp*2]	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000c5	          0x4989fc	                            mov r12, rdi	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000c8	        0x48c1e604	                              shl rsi, 4	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000cc	      0xe800000000	                          call 0x40000d1	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000d1	          0x4885c0	                           test rax, rax	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x40000d4	            0x7455	                            je 0x400012b	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x40000d6	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	      1206	srec.c	FUNCTION_23	IF_1
0x40000de	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000e2	        0x48894228	             mov qword [rdx + 0x28], rax	      1206	srec.c	FUNCTION_23	IF_1
0x40000e6	          0x4885c9	                           test rcx, rcx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000e9	            0x749c	                            je 0x4000087	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000eb	          0x4889c2	                            mov rdx, rax	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000ee	            0x6690	                                     nop	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f0	          0x4c8922	                    mov qword [rdx], r12	      1212	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f3	        0x488b7108	                mov rsi, qword [rcx + 8]	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f7	        0x4883c230	                           add rdx, 0x30	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000fb	        0x488972d8	             mov qword [rdx - 0x28], rsi	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000ff	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000103	    0x48c742f00000	               mov qword [rdx - 0x10], 0	      1216	srec.c	FUNCTION_23	IF_1	FOR_1
0x400010b	    0x48c742f80000	                  mov qword [rdx - 8], 0	      1217	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000113	          0x488b09	                    mov rcx, qword [rcx]	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000116	    0xc742e8020000	               mov dword [rdx - 0x18], 2	      1215	srec.c	FUNCTION_23	IF_1	FOR_1
0x400011d	        0x488972e0	             mov qword [rdx - 0x20], rsi	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000121	          0x4885c9	                           test rcx, rcx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000124	            0x75ca	                           jne 0x40000f0	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000126	      0xe95cffffff	                           jmp 0x4000087	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x400012b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1205	srec.c	FUNCTION_23	IF_1	IF_2
0x4000132	      0xe97affffff	                           jmp 0x40000b1	      1205	srec.c	FUNCTION_23	IF_1	IF_2
srec_write_record	functions,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,0:FOR,1:SWITCH,1	156
0x4000330	              0x53	                                push rbx	       959	srec.c	FUNCTION_13
0x4000331	          0x4989fb	                            mov r11, rdi	       959	srec.c	FUNCTION_13
0x4000334	          0x4889cb	                            mov rbx, rcx	       959	srec.c	FUNCTION_13
0x4000337	    0x4881ec100200	                          sub rsp, 0x210	       959	srec.c	FUNCTION_13
0x400033e	    0x64488b042528	                mov rax, qword fs:[0x28]	       959	srec.c	FUNCTION_13
0x4000347	    0x488984240802	            mov qword [rsp + 0x208], rax	       959	srec.c	FUNCTION_13
0x400034f	            0x31c0	                            xor eax, eax	       959	srec.c	FUNCTION_13
0x4000351	          0x8d4630	                   lea eax, [rsi + 0x30]	       968	srec.c	FUNCTION_13
0x4000354	          0x83fe09	                              cmp esi, 9	       968	srec.c	FUNCTION_13
0x4000357	        0xc6042453	                    mov byte [rsp], 0x53	       967	srec.c	FUNCTION_13
0x400035b	        0x88442401	                  mov byte [rsp + 1], al	       968	srec.c	FUNCTION_13
0x400035f	     0xf8783000000	                            ja 0x40003e8	       968	srec.c	FUNCTION_13
0x4000365	      0xb801000000	                              mov eax, 1	       968	srec.c	FUNCTION_13
0x400036a	            0x89f1	                            mov ecx, esi	       968	srec.c	FUNCTION_13
0x400036c	          0x48d3e0	                             shl rax, cl	       968	srec.c	FUNCTION_13
0x400036f	      0xa903020000	                         test eax, 0x203	       968	srec.c	FUNCTION_13
0x4000374	     0xf847e010000	                            je 0x40004f8	       968	srec.c	FUNCTION_13
0x400037a	      0x488d742404	                      lea rsi, [rsp + 4]	       971	srec.c	FUNCTION_13
0x400037f	          0x4889e7	                            mov rdi, rsp	       971	srec.c	FUNCTION_13
0x4000382	          0x4531d2	                          xor r10d, r10d	       961	srec.c	FUNCTION_13
0x4000385	          0x4889d0	                            mov rax, rdx	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000388	        0x4883c604	                              add rsi, 4	       991	srec.c	FUNCTION_13	SWITCH_1
0x400038c	        0x48c1e808	                              shr rax, 8	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000390	          0x4889c1	                            mov rcx, rax	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000393	           0xfb6c0	                           movzx eax, al	       990	srec.c	FUNCTION_13	SWITCH_1
0x4000396	          0x83e10f	                            and ecx, 0xf	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000399	     0xfb689000000	                   movzx ecx, byte [rcx]	       988	srec.c	FUNCTION_13	SWITCH_1
0x40003a0	          0x884efd	                  mov byte [rsi - 3], cl	       988	srec.c	FUNCTION_13	SWITCH_1
0x40003a3	          0x4889d1	                            mov rcx, rdx	       988	srec.c	FUNCTION_13	SWITCH_1
0x40003a6	        0x48c1e90c	                            shr rcx, 0xc	       988	srec.c	FUNCTION_13	SWITCH_1
0x40003aa	          0x83e10f	                            and ecx, 0xf	       988	srec.c	FUNCTION_13	SWITCH_1
0x40003ad	     0xfb689000000	                   movzx ecx, byte [rcx]	       988	srec.c	FUNCTION_13	SWITCH_1
0x40003b4	          0x884efc	                  mov byte [rsi - 4], cl	       988	srec.c	FUNCTION_13	SWITCH_1
0x40003b7	          0x4889d1	                            mov rcx, rdx	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003ba	          0x83e10f	                            and ecx, 0xf	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003bd	     0xfb689000000	                   movzx ecx, byte [rcx]	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003c4	          0x884eff	                  mov byte [rsi - 1], cl	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003c7	          0x4889d1	                            mov rcx, rdx	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003ca	           0xfb6d2	                           movzx edx, dl	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003cd	        0x48c1e904	                              shr rcx, 4	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003d1	             0x1c2	                            add edx, eax	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003d3	          0x83e10f	                            and ecx, 0xf	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003d6	          0x4101d2	                           add r10d, edx	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003d9	     0xfb689000000	                   movzx ecx, byte [rcx]	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003e0	          0x884efe	                  mov byte [rsi - 2], cl	       990	srec.c	FUNCTION_13	SWITCH_1
0x40003e3	            0xeb0e	                           jmp 0x40003f3	       992	srec.c	FUNCTION_13	SWITCH_1
0x40003e5	           0xf1f00	                         nop dword [rax]	       992	srec.c	FUNCTION_13	SWITCH_1
0x40003e8	      0x488d742404	                      lea rsi, [rsp + 4]	       971	srec.c	FUNCTION_13
0x40003ed	          0x4889e7	                            mov rdi, rsp	       971	srec.c	FUNCTION_13
0x40003f0	          0x4531d2	                          xor r10d, r10d	       961	srec.c	FUNCTION_13
0x40003f3	          0x4c39c3	                             cmp rbx, r8	       995	srec.c	FUNCTION_13	FOR_1
0x40003f6	            0x734c	                           jae 0x4000444	       995	srec.c	FUNCTION_13	FOR_1
0x40003f8	          0x4889f1	                            mov rcx, rsi	       995	srec.c	FUNCTION_13	FOR_1
0x40003fb	          0x4889da	                            mov rdx, rbx	       995	srec.c	FUNCTION_13	FOR_1
0x40003fe	            0x6690	                                     nop	       995	srec.c	FUNCTION_13	FOR_1
0x4000400	           0xfb602	                   movzx eax, byte [rdx]	       997	srec.c	FUNCTION_13	FOR_1
0x4000403	        0x4883c201	                              add rdx, 1	       995	srec.c	FUNCTION_13	FOR_1
0x4000407	        0x4883c102	                              add rcx, 2	       998	srec.c	FUNCTION_13	FOR_1
0x400040b	          0x4989c1	                             mov r9, rax	       997	srec.c	FUNCTION_13	FOR_1
0x400040e	          0x4101c2	                           add r10d, eax	       997	srec.c	FUNCTION_13	FOR_1
0x4000411	        0x4183e10f	                            and r9d, 0xf	       997	srec.c	FUNCTION_13	FOR_1
0x4000415	    0x450fb6890000	                    movzx r9d, byte [r9]	       997	srec.c	FUNCTION_13	FOR_1
0x400041d	        0x448849ff	                 mov byte [rcx - 1], r9b	       997	srec.c	FUNCTION_13	FOR_1
0x4000421	          0x4189c1	                            mov r9d, eax	       997	srec.c	FUNCTION_13	FOR_1
0x4000424	        0x41c0e904	                              shr r9b, 4	       997	srec.c	FUNCTION_13	FOR_1
0x4000428	        0x4183e10f	                            and r9d, 0xf	       997	srec.c	FUNCTION_13	FOR_1
0x400042c	    0x450fb6890000	                    movzx r9d, byte [r9]	       997	srec.c	FUNCTION_13	FOR_1
0x4000434	        0x448849fe	                 mov byte [rcx - 2], r9b	       997	srec.c	FUNCTION_13	FOR_1
0x4000438	          0x4939d0	                             cmp r8, rdx	       995	srec.c	FUNCTION_13	FOR_1
0x400043b	            0x75c3	                           jne 0x4000400	       995	srec.c	FUNCTION_13	FOR_1
0x400043d	          0x4929d8	                             sub r8, rbx	       995	srec.c	FUNCTION_13	FOR_1
0x4000440	        0x4a8d3446	                   lea rsi, [rsi + r8*2]	       995	srec.c	FUNCTION_13	FOR_1
0x4000444	        0x488d4702	                      lea rax, [rdi + 2]	      1002	srec.c	FUNCTION_13
0x4000448	          0x4889f3	                            mov rbx, rsi	      1002	srec.c	FUNCTION_13
0x400044b	          0x4829c3	                            sub rbx, rax	      1002	srec.c	FUNCTION_13
0x400044e	          0x4889da	                            mov rdx, rbx	      1002	srec.c	FUNCTION_13
0x4000451	          0x4889d8	                            mov rax, rbx	      1002	srec.c	FUNCTION_13
0x4000454	        0x488d5e04	                      lea rbx, [rsi + 4]	      1009	srec.c	FUNCTION_13
0x4000458	        0x48c1ea3f	                           shr rdx, 0x3f	      1002	srec.c	FUNCTION_13
0x400045c	          0x4801d0	                            add rax, rdx	      1002	srec.c	FUNCTION_13
0x400045f	          0x4829fb	                            sub rbx, rdi	      1010	srec.c	FUNCTION_13
0x4000462	          0x4889c2	                            mov rdx, rax	      1002	srec.c	FUNCTION_13
0x4000465	        0x48c1f805	                              sar rax, 5	      1002	srec.c	FUNCTION_13
0x4000469	          0x48d1fa	                              sar rdx, 1	      1002	srec.c	FUNCTION_13
0x400046c	          0x83e00f	                            and eax, 0xf	      1002	srec.c	FUNCTION_13
0x400046f	     0xfb680000000	                   movzx eax, byte [rax]	      1002	srec.c	FUNCTION_13
0x4000476	          0x4889d1	                            mov rcx, rdx	      1002	srec.c	FUNCTION_13
0x4000479	           0xfb6d2	                           movzx edx, dl	      1002	srec.c	FUNCTION_13
0x400047c	          0x4101d2	                           add r10d, edx	      1002	srec.c	FUNCTION_13
0x400047f	          0x83e10f	                            and ecx, 0xf	      1002	srec.c	FUNCTION_13
0x4000482	          0x4c89da	                            mov rdx, r11	      1012	srec.c	FUNCTION_13	CALL_1
0x4000485	          0x41f7d2	                                not r10d	      1004	srec.c	FUNCTION_13
0x4000488	     0xfb689000000	                   movzx ecx, byte [rcx]	      1002	srec.c	FUNCTION_13
0x400048f	        0x450fb6d2	                        movzx r10d, r10b	      1004	srec.c	FUNCTION_13
0x4000493	        0x88442402	                  mov byte [rsp + 2], al	      1002	srec.c	FUNCTION_13
0x4000497	          0x4489d0	                           mov eax, r10d	      1005	srec.c	FUNCTION_13
0x400049a	        0x41c1ea04	                             shr r10d, 4	      1005	srec.c	FUNCTION_13
0x400049e	          0x83e00f	                            and eax, 0xf	      1005	srec.c	FUNCTION_13
0x40004a1	     0xfb680000000	                   movzx eax, byte [rax]	      1005	srec.c	FUNCTION_13
0x40004a8	        0x884c2403	                  mov byte [rsp + 3], cl	      1002	srec.c	FUNCTION_13
0x40004ac	        0xc646020d	                 mov byte [rsi + 2], 0xd	      1008	srec.c	FUNCTION_13
0x40004b0	        0xc646030a	                 mov byte [rsi + 3], 0xa	      1009	srec.c	FUNCTION_13
0x40004b4	          0x884601	                  mov byte [rsi + 1], al	      1005	srec.c	FUNCTION_13
0x40004b7	    0x410fb6820000	                   movzx eax, byte [r10]	      1005	srec.c	FUNCTION_13
0x40004bf	            0x8806	                      mov byte [rsi], al	      1005	srec.c	FUNCTION_13
0x40004c1	          0x4889de	                            mov rsi, rbx	      1012	srec.c	FUNCTION_13	CALL_1
0x40004c4	      0xe800000000	                          call 0x40004c9	      1012	srec.c	FUNCTION_13	CALL_1
0x40004c9	          0x4839c3	                            cmp rbx, rax	      1012	srec.c	FUNCTION_13	CALL_1
0x40004cc	           0xf94c0	                                 sete al	      1012	srec.c	FUNCTION_13	CALL_1
0x40004cf	    0x488bbc240802	           mov rdi, qword [rsp + 0x208] 	      1013	srec.c	FUNCTION_13
0x40004d7	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1013	srec.c	FUNCTION_13
0x40004e0	           0xfb6c0	                           movzx eax, al	      1012	srec.c	FUNCTION_13	CALL_1
0x40004e3	     0xf85a4000000	                           jne 0x400058d	      1013	srec.c	FUNCTION_13
0x40004e9	    0x4881c4100200	                          add rsp, 0x210	      1013	srec.c	FUNCTION_13
0x40004f0	              0x5b	                                 pop rbx	      1013	srec.c	FUNCTION_13
0x40004f1	              0xc3	                                     ret	      1013	srec.c	FUNCTION_13
0x40004f2	    0x660f1f440000	                    nop word [rax + rax]	      1013	srec.c	FUNCTION_13
0x40004f8	      0xa904010000	                         test eax, 0x104	      1013	srec.c	FUNCTION_13
0x40004fd	            0x7549	                           jne 0x4000548	      1013	srec.c	FUNCTION_13
0x40004ff	            0xa888	                           test al, 0x88	      1013	srec.c	FUNCTION_13
0x4000501	     0xf84e1feffff	                            je 0x40003e8	      1013	srec.c	FUNCTION_13
0x4000507	          0x4989d2	                            mov r10, rdx	       977	srec.c	FUNCTION_13	SWITCH_1
0x400050a	          0x4889e7	                            mov rdi, rsp	       978	srec.c	FUNCTION_13	SWITCH_1
0x400050d	      0x488d742406	                      lea rsi, [rsp + 6]	       978	srec.c	FUNCTION_13	SWITCH_1
0x4000512	        0x49c1ea18	                           shr r10, 0x18	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000516	          0x4c89d0	                            mov rax, r10	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000519	        0x450fb6d2	                        movzx r10d, r10b	       977	srec.c	FUNCTION_13	SWITCH_1
0x400051d	          0x83e00f	                            and eax, 0xf	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000520	     0xfb680000000	                   movzx eax, byte [rax]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000527	        0x88442405	                  mov byte [rsp + 5], al	       977	srec.c	FUNCTION_13	SWITCH_1
0x400052b	          0x4889d0	                            mov rax, rdx	       977	srec.c	FUNCTION_13	SWITCH_1
0x400052e	        0x48c1e81c	                           shr rax, 0x1c	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000532	          0x83e00f	                            and eax, 0xf	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000535	     0xfb680000000	                   movzx eax, byte [rax]	       977	srec.c	FUNCTION_13	SWITCH_1
0x400053c	        0x88442404	                  mov byte [rsp + 4], al	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000540	            0xeb11	                           jmp 0x4000553	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000542	    0x660f1f440000	                    nop word [rax + rax]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000548	      0x488d742404	                      lea rsi, [rsp + 4]	       971	srec.c	FUNCTION_13
0x400054d	          0x4889e7	                            mov rdi, rsp	       971	srec.c	FUNCTION_13
0x4000550	          0x4531d2	                          xor r10d, r10d	       961	srec.c	FUNCTION_13
0x4000553	          0x4889d0	                            mov rax, rdx	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000556	        0x4883c602	                              add rsi, 2	       983	srec.c	FUNCTION_13	SWITCH_1
0x400055a	        0x48c1e810	                           shr rax, 0x10	       982	srec.c	FUNCTION_13	SWITCH_1
0x400055e	          0x4889c1	                            mov rcx, rax	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000561	           0xfb6c0	                           movzx eax, al	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000564	          0x83e10f	                            and ecx, 0xf	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000567	          0x4101c2	                           add r10d, eax	       982	srec.c	FUNCTION_13	SWITCH_1
0x400056a	     0xfb689000000	                   movzx ecx, byte [rcx]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000571	          0x884eff	                  mov byte [rsi - 1], cl	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000574	          0x4889d1	                            mov rcx, rdx	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000577	        0x48c1e914	                           shr rcx, 0x14	       982	srec.c	FUNCTION_13	SWITCH_1
0x400057b	          0x83e10f	                            and ecx, 0xf	       982	srec.c	FUNCTION_13	SWITCH_1
0x400057e	     0xfb689000000	                   movzx ecx, byte [rcx]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000585	          0x884efe	                  mov byte [rsi - 2], cl	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000588	      0xe9f8fdffff	                           jmp 0x4000385	       982	srec.c	FUNCTION_13	SWITCH_1
0x400058d	      0xe800000000	                          call 0x4000592	      1013	srec.c	FUNCTION_13
srec_get_symbol_info	functions,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,0:FOR,0:SWITCH,0	3
0x4000320	          0x4889f7	                            mov rdi, rsi	      1232	srec.c	FUNCTION_24
0x4000323	          0x4889d6	                            mov rsi, rdx	      1233	srec.c	FUNCTION_24	CALL_1
0x4000326	      0xe900000000	                           jmp 0x400032b	      1233	srec.c	FUNCTION_24	CALL_1
srec_scan	functions,0:WHILE,7:ELSE,4:CALL,47:DO,1:IF,36:FOR,0:SWITCH,2	586
0x4000f90	            0x4157	                                push r15	       297	srec.c	ELSE_1	FUNCTION_6
0x4000f92	            0x4156	                                push r14	       297	srec.c	ELSE_1	FUNCTION_6
0x4000f94	            0x31d2	                            xor edx, edx	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f96	            0x4155	                                push r13	       297	srec.c	ELSE_1	FUNCTION_6
0x4000f98	            0x4154	                                push r12	       297	srec.c	ELSE_1	FUNCTION_6
0x4000f9a	            0x31f6	                            xor esi, esi	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f9c	              0x55	                                push rbp	       297	srec.c	ELSE_1	FUNCTION_6
0x4000f9d	              0x53	                                push rbx	       297	srec.c	ELSE_1	FUNCTION_6
0x4000f9e	          0x4889fb	                            mov rbx, rdi	       297	srec.c	ELSE_1	FUNCTION_6
0x4000fa1	        0x4883ec78	                           sub rsp, 0x78	       297	srec.c	ELSE_1	FUNCTION_6
0x4000fa5	    0x64488b042528	                mov rax, qword fs:[0x28]	       297	srec.c	ELSE_1	FUNCTION_6
0x4000fae	      0x4889442468	             mov qword [rsp + 0x68], rax	       297	srec.c	ELSE_1	FUNCTION_6
0x4000fb3	            0x31c0	                            xor eax, eax	       297	srec.c	ELSE_1	FUNCTION_6
0x4000fb5	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       300	srec.c	ELSE_1	FUNCTION_6
0x4000fbd	      0xe800000000	                          call 0x4000fc2	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000fc2	            0x85c0	                           test eax, eax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000fc4	     0xf85a6000000	                           jne 0x4001070	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000fca	    0x48c704240000	                      mov qword [rsp], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000fd2	    0x48c744241800	               mov qword [rsp + 0x18], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000fdb	    0x48c744240800	                  mov qword [rsp + 8], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000fe4	    0xc74424140100	               mov dword [rsp + 0x14], 1	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000fec	        0x89442428	             mov dword [rsp + 0x28], eax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000ff0	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4000ff5	          0x4889df	                            mov rdi, rbx	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4000ff8	      0xe873f6ffff	                  call sym.srec_get_byte	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4000ffd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001000	     0xf8424080000	                            je 0x400182a	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001006	          0x83f853	                           cmp eax, 0x53	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001009	           0xf95c1	                                setne cl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400100c	          0x83f80d	                            cmp eax, 0xd	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400100f	           0xf95c2	                                setne dl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001012	            0x84d1	                             test cl, dl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001014	            0x7411	                            je 0x4001027	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001016	          0x83f80a	                            cmp eax, 0xa	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001019	      0xb900000000	                              mov ecx, 0	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400101e	      0x480f440c24	                  cmove rcx, qword [rsp]	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001023	        0x48890c24	                    mov qword [rsp], rcx	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001027	          0x83f820	                           cmp eax, 0x20	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x400102a	     0xf84d0020000	                            je 0x4001300	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001030	            0x7f6e	                            jg 0x40010a0	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001032	          0x83f80a	                            cmp eax, 0xa	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001035	     0xf84a0010000	                            je 0x40011db	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x400103b	          0x83f80d	                            cmp eax, 0xd	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x400103e	            0x74b0	                            je 0x4000ff0	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001040	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4001044	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4001048	            0x89c2	                            mov edx, eax	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x400104a	          0x4889df	                            mov rdi, rbx	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x400104d	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4001052	      0xe869feffff	                  call sym.srec_bad_byte	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4001057	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x400105c	          0x4885ff	                           test rdi, rdi	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x400105f	            0x740f	                            je 0x4001070	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x4001061	      0xe800000000	                          call 0x4001066	       643	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x4001066	            0xeb0b	                           jmp 0x4001073	       643	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x4001068	     0xf1f84000000	                   nop dword [rax + rax]	       643	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x4001070	          0x4531ed	                          xor r13d, r13d	       644	srec.c	FUNCTION_6	ELSE_1
0x4001073	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       645	srec.c	FUNCTION_6	ELSE_1
0x4001078	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       645	srec.c	FUNCTION_6	ELSE_1
0x4001081	          0x4489e8	                           mov eax, r13d	       645	srec.c	FUNCTION_6	ELSE_1
0x4001084	     0xf8548080000	                           jne 0x40018d2	       645	srec.c	FUNCTION_6	ELSE_1
0x400108a	        0x4883c478	                           add rsp, 0x78	       645	srec.c	FUNCTION_6	ELSE_1
0x400108e	              0x5b	                                 pop rbx	       645	srec.c	FUNCTION_6	ELSE_1
0x400108f	              0x5d	                                 pop rbp	       645	srec.c	FUNCTION_6	ELSE_1
0x4001090	            0x415c	                                 pop r12	       645	srec.c	FUNCTION_6	ELSE_1
0x4001092	            0x415d	                                 pop r13	       645	srec.c	FUNCTION_6	ELSE_1
0x4001094	            0x415e	                                 pop r14	       645	srec.c	FUNCTION_6	ELSE_1
0x4001096	            0x415f	                                 pop r15	       645	srec.c	FUNCTION_6	ELSE_1
0x4001098	              0xc3	                                     ret	       645	srec.c	FUNCTION_6	ELSE_1
0x4001099	     0xf1f80000000	                         nop dword [rax]	       645	srec.c	FUNCTION_6	ELSE_1
0x40010a0	          0x83f824	                           cmp eax, 0x24	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40010a3	     0xf8420010000	                            je 0x40011c9	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40010a9	          0x83f853	                           cmp eax, 0x53	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40010ac	            0x7592	                           jne 0x4001040	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40010ae	          0x4889df	                            mov rdi, rbx	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40010b1	      0xe800000000	                          call 0x40010b6	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40010b6	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40010bb	          0x4889da	                            mov rdx, rbx	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40010be	      0xbe03000000	                              mov esi, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40010c3	          0x4989c5	                            mov r13, rax	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40010c6	      0xe800000000	                          call 0x40010cb	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40010cb	        0x4883f803	                              cmp rax, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40010cf	     0xf854b070000	                           jne 0x4001820	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40010d5	       0xfb6442441	           movzx eax, byte [rsp + 0x41] 	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010da	          0x4889c2	                            mov rdx, rax	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010dd	     0xfb680000000	                   movzx eax, byte [rax]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010e4	            0x3c63	                            cmp al, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010e6	     0xf8488070000	                            je 0x4001874	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010ec	       0xfb64c2442	           movzx ecx, byte [rsp + 0x42] 	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010f1	          0x4889ca	                            mov rdx, rcx	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010f4	     0xfb689000000	                   movzx ecx, byte [rcx]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010fb	          0x80f963	                            cmp cl, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40010fe	     0xf8470070000	                            je 0x4001874	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001104	          0xc1e004	                              shl eax, 4	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001107	        0x448d3c08	                   lea r15d, [rax + rcx]	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400110b	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001110	          0x4589fc	                          mov r12d, r15d	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001113	            0x3c32	                            cmp al, 0x32	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001115	     0xf84fd020000	                            je 0x4001418	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400111b	            0x3c38	                            cmp al, 0x38	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400111d	     0xf84f5020000	                            je 0x4001418	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001123	          0x83e0fb	                     and eax, 0xfffffffb	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x4001126	            0x3c33	                            cmp al, 0x33	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001128	           0xf94c0	                                 sete al	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400112b	           0xfb6c0	                           movzx eax, al	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400112e	        0x8d440003	                lea eax, [rax + rax + 3]	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001132	          0x4439f8	                           cmp eax, r15d	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x4001135	     0xf875b070000	                            ja 0x4001896	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x400113b	          0x4489fe	                           mov esi, r15d	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x400113e	        0x438d2c3f	                    lea ebp, [r15 + r15]	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4001142	          0x4801f6	                            add rsi, rsi	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4001145	      0x48396c2418	            cmp qword [rsp + 0x18], rbp 	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x400114a	            0x733d	                           jae 0x4001189	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x400114c	      0x488b442408	                mov rax, qword [rsp + 8]	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001151	          0x4885c0	                           test rax, rax	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001154	            0x7408	                            je 0x400115e	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001156	          0x4889c7	                            mov rdi, rax	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x4001159	      0xe800000000	                          call 0x400115e	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x400115e	          0x4489fe	                           mov esi, r15d	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001161	          0x4801f6	                            add rsi, rsi	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001164	          0x4889f7	                            mov rdi, rsi	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001167	      0x4889742420	             mov qword [rsp + 0x20], rsi	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x400116c	      0xe800000000	                          call 0x4001171	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001171	          0x4885c0	                           test rax, rax	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001174	      0x4889442408	                mov qword [rsp + 8], rax	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001179	     0xf84f1feffff	                            je 0x4001070	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x400117f	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001184	      0x48896c2418	             mov qword [rsp + 0x18], rbp	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001189	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x400118e	          0x4889da	                            mov rdx, rbx	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001191	      0xe800000000	                          call 0x4001196	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001196	          0x4839c5	                            cmp rbp, rax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001199	     0xf8581060000	                           jne 0x4001820	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x400119f	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011a4	        0x458d4fff	                      lea r9d, [r15 - 1]	       508	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x40011a8	          0x83e830	                           sub eax, 0x30	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011ab	            0x3c09	                               cmp al, 9	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011ad	     0xf873dfeffff	                            ja 0x4000ff0	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011b3	           0xfb6c0	                           movzx eax, al	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011b6	    0xff24c5000000	                       jmp qword [rax*8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011bd	           0xf1f00	                         nop dword [rax]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40011c0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x40011c3	     0xf8477feffff	                            je 0x4001040	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x40011c9	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x40011ce	          0x4889df	                            mov rdi, rbx	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x40011d1	      0xe89af4ffff	                  call sym.srec_get_byte	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x40011d6	          0x83f80a	                            cmp eax, 0xa	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x40011d9	            0x75e5	                           jne 0x40011c0	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x40011db	      0x8344241401	               add dword [rsp + 0x14], 1	       340	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40011e0	      0xe90bfeffff	                           jmp 0x4000ff0	       341	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40011e5	           0xf1f00	                         nop dword [rax]	       341	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40011e8	      0x498d742401	                      lea rsi, [r12 + 1]	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40011ed	      0x41c6042400	                       mov byte [r12], 0	       396	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x40011f2	          0x4889df	                            mov rdi, rbx	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40011f5	          0x4829ee	                            sub rsi, rbp	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40011f8	      0xe800000000	                          call 0x40011fd	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40011fd	          0x4885c0	                           test rax, rax	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x4001200	          0x4989c4	                            mov r12, rax	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4001203	     0xf84f0050000	                            je 0x40017f9	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x4001209	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_32	CALL_3
0x400120c	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_32	CALL_3
0x400120f	      0xe800000000	                          call 0x4001214	       110	string3.h	FUNCTION_32	CALL_3
0x4001214	          0x4889ef	                            mov rdi, rbp	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x4001217	      0xe800000000	                          call 0x400121c	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x400121c	         0xf1f4000	                         nop dword [rax]	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x4001220	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x4001225	          0x4889df	                            mov rdi, rbx	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x4001228	      0xe843f4ffff	                  call sym.srec_get_byte	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x400122d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x4001230	          0x4189c7	                           mov r15d, eax	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x4001233	     0xf8497010000	                            je 0x40013d0	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x4001239	          0x83f820	                           cmp eax, 0x20	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x400123c	            0x74e2	                            je 0x4001220	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x400123e	          0x83f809	                              cmp eax, 9	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x4001241	            0x74dd	                            je 0x4001220	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x4001243	          0x83f824	                           cmp eax, 0x24	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x4001246	            0x7520	                           jne 0x4001268	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x4001248	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x400124d	          0x4889df	                            mov rdi, rbx	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4001250	      0xe81bf4ffff	                  call sym.srec_get_byte	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4001255	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       417	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4001258	          0x4189c7	                           mov r15d, eax	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x400125b	     0xf846f010000	                            je 0x40013d0	       417	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4001261	     0xf1f80000000	                         nop dword [rax]	       417	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4001268	            0x31ed	                            xor ebp, ebp	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x400126a	            0xeb24	                           jmp 0x4001290	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x400126c	         0xf1f4000	                         nop dword [rax]	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x4001270	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x4001275	        0x48c1e504	                              shl rbp, 4	       427	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001279	          0x4889df	                            mov rdi, rbx	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x400127c	          0x4801c5	                            add rbp, rax	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400127f	      0xe8ecf3ffff	                  call sym.srec_get_byte	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x4001284	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       430	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x4001287	          0x4189c7	                           mov r15d, eax	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x400128a	     0xf8440010000	                            je 0x40013d0	       430	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x4001290	        0x410fb6c7	                         movzx eax, r15b	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001294	     0xfb680000000	                   movzx eax, byte [rax]	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400129b	            0x3c63	                            cmp al, 0x63	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400129d	            0x75d1	                           jne 0x4001270	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400129f	      0xbe18000000	                           mov esi, 0x18	       273	srec.c	FUNCTION_5	CALL_1
0x40012a4	          0x4889df	                            mov rdi, rbx	       273	srec.c	FUNCTION_5	CALL_1
0x40012a7	      0xe800000000	                          call 0x40012ac	       273	srec.c	FUNCTION_5	CALL_1
0x40012ac	          0x4885c0	                           test rax, rax	       274	srec.c	FUNCTION_5	IF_1
0x40012af	     0xf846b050000	                            je 0x4001820	       274	srec.c	FUNCTION_5	IF_1
0x40012b5	        0x4c896008	                mov qword [rax + 8], r12	       277	srec.c	FUNCTION_5
0x40012b9	        0x48896810	             mov qword [rax + 0x10], rbp	       278	srec.c	FUNCTION_5
0x40012bd	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	       280	srec.c	FUNCTION_5	IF_2
0x40012c4	      0x48837a1800	               cmp qword [rdx + 0x18], 0	       280	srec.c	FUNCTION_5	IF_2
0x40012c9	     0xf849c050000	                            je 0x400186b	       280	srec.c	FUNCTION_5	IF_2
0x40012cf	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	       283	srec.c	FUNCTION_5	ELSE_1
0x40012d3	          0x488901	                    mov qword [rcx], rax	       283	srec.c	FUNCTION_5	ELSE_1
0x40012d6	        0x48894220	             mov qword [rdx + 0x20], rax	       284	srec.c	FUNCTION_5	ELSE_1
0x40012da	    0x48c700000000	                      mov qword [rax], 0	       285	srec.c	FUNCTION_5	ELSE_1
0x40012e1	    0x8383b8000000	               add dword [rbx + 0xb8], 1	       287	srec.c	FUNCTION_5	ELSE_1
0x40012e8	        0x4183ff20	                          cmp r15d, 0x20	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40012ec	            0x7412	                            je 0x4001300	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40012ee	        0x4183ff09	                             cmp r15d, 9	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40012f2	     0xf85c2000000	                           jne 0x40013ba	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40012f8	     0xf1f84000000	                   nop dword [rax + rax]	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x4001300	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4001305	          0x4889df	                            mov rdi, rbx	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4001308	      0xe863f3ffff	                  call sym.srec_get_byte	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x400130d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4001310	          0x4189c7	                           mov r15d, eax	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4001313	     0xf84b7000000	                            je 0x40013d0	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4001319	          0x83f820	                           cmp eax, 0x20	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400131c	            0x74e2	                            je 0x4001300	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400131e	          0x83f809	                              cmp eax, 9	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001321	            0x74dd	                            je 0x4001300	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001323	          0x83f80d	                            cmp eax, 0xd	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001326	     0xf848e000000	                            je 0x40013ba	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x400132c	          0x83f80a	                            cmp eax, 0xa	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x400132f	     0xf8485000000	                            je 0x40013ba	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001335	      0xbf0b000000	                            mov edi, 0xb	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x400133a	      0xe800000000	                          call 0x400133f	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x400133f	          0x4885c0	                           test rax, rax	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x4001342	          0x4889c5	                            mov rbp, rax	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4001345	     0xf84d5040000	                            je 0x4001820	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x400134b	          0x448838	                    mov byte [rax], r15b	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400134e	        0x4c8d6001	                      lea r12, [rax + 1]	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001352	    0x41bf0a000000	                           mov r15d, 0xa	       364	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001358	            0xeb0e	                           jmp 0x4001368	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x400135a	    0x660f1f440000	                    nop word [rax + rax]	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001360	        0x45883424	                    mov byte [r12], r14b	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x4001364	        0x4983c401	                              add r12, 1	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x4001368	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x400136d	          0x4889df	                            mov rdi, rbx	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001370	      0xe8fbf2ffff	                  call sym.srec_get_byte	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001375	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001378	          0x4189c6	                           mov r14d, eax	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x400137b	            0x7473	                            je 0x40013f0	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x400137d	           0xfb6c0	                           movzx eax, al	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4001380	    0xf68400000000	            test byte [rax + rax], 0x40 	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4001388	     0xf855afeffff	                           jne 0x40011e8	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x400138e	          0x4d89e5	                            mov r13, r12	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4001391	          0x4929ed	                            sub r13, rbp	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4001394	          0x4d39ef	                            cmp r15, r13	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4001397	            0x77c7	                            ja 0x4001360	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4001399	          0x4d01ff	                            add r15, r15	       379	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400139c	          0x4889ef	                            mov rdi, rbp	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x400139f	        0x498d7701	                      lea rsi, [r15 + 1]	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x40013a3	      0xe800000000	                          call 0x40013a8	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x40013a8	          0x4885c0	                           test rax, rax	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x40013ab	     0xf8448040000	                            je 0x40017f9	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x40013b1	        0x4e8d2428	                    lea r12, [rax + r13]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40013b5	          0x4889c5	                            mov rbp, rax	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40013b8	            0xeba6	                           jmp 0x4001360	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40013ba	        0x4183ff0a	                           cmp r15d, 0xa	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x40013be	     0xf8417feffff	                            je 0x40011db	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x40013c4	        0x4183ff0d	                           cmp r15d, 0xd	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x40013c8	     0xf8422fcffff	                            je 0x4000ff0	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x40013ce	            0x6690	                                     nop	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x40013d0	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40013d4	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40013d8	          0x4489fa	                           mov edx, r15d	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40013db	          0x4889df	                            mov rdi, rbx	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40013de	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40013e3	      0xe8d8faffff	                  call sym.srec_bad_byte	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40013e8	      0xe96afcffff	                           jmp 0x4001057	       361	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5
0x40013ed	           0xf1f00	                         nop dword [rax]	       361	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5
0x40013f0	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x40013f4	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x40013f8	          0x4489f2	                           mov edx, r14d	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x40013fb	          0x4889df	                            mov rdi, rbx	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x40013fe	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4001403	      0xe8b8faffff	                  call sym.srec_bad_byte	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4001408	          0x4889ef	                            mov rdi, rbp	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x400140b	      0xe800000000	                          call 0x4001410	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x4001410	      0xe942fcffff	                           jmp 0x4001057	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x4001415	           0xf1f00	                         nop dword [rax]	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x4001418	      0xb804000000	                              mov eax, 4	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400141d	      0xe910fdffff	                           jmp 0x4001132	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001422	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001427	      0x488b742408	                mov rsi, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400142c	          0x4531c9	                            xor r9d, r9d	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400142f	           0xfb606	                   movzx eax, byte [rsi]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001432	         0xfb67e03	               movzx edi, byte [rsi + 3]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001436	         0xfb65602	               movzx edx, byte [rsi + 2]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400143a	     0xfb688000000	                   movzx ecx, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001441	         0xfb64601	               movzx eax, byte [rsi + 1]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001445	    0x440fb6870000	                   movzx r8d, byte [rdi]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400144d	     0xfb692000000	                   movzx edx, byte [rdx]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001454	     0xfb680000000	                   movzx eax, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400145b	        0x428d3c00	                     lea edi, [rax + r8]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400145f	          0x4101fc	                           add r12d, edi	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001462	            0x89cf	                            mov edi, ecx	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001464	          0xc1e104	                              shl ecx, 4	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001467	          0x4189ca	                           mov r10d, ecx	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400146a	           0xfb6c8	                           movzx ecx, al	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400146d	          0xc1e704	                              shl edi, 4	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001470	        0x428d0411	                    lea eax, [rcx + r10]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001474	          0x4101fc	                           add r12d, edi	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001477	            0x89d7	                            mov edi, edx	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001479	          0xc1e704	                              shl edi, 4	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400147c	          0x4c09c8	                              or rax, r9	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400147f	          0x4401e7	                           add edi, r12d	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001482	        0x48c1e008	                              shl rax, 8	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001486	            0xf7d7	                                 not edi	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001488	          0x4889c1	                            mov rcx, rax	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400148b	            0x89d0	                            mov eax, edx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400148d	        0x410fb6d0	                          movzx edx, r8b	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001491	          0xc1e004	                              shl eax, 4	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001494	             0x1d0	                            add eax, edx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001496	          0x4809c8	                             or rax, rcx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001499	    0x488983a80000	             mov qword [rbx + 0xa8], rax	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40014a0	         0xfb65604	               movzx edx, byte [rsi + 4]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014a4	        0x400fb6c7	                          movzx eax, dil	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014a8	     0xfb692000000	                   movzx edx, byte [rdx]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014af	            0x89d1	                            mov ecx, edx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014b1	         0xfb65605	               movzx edx, byte [rsi + 5]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014b5	          0xc1e104	                              shl ecx, 4	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014b8	     0xfb692000000	                   movzx edx, byte [rdx]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014bf	             0x1ca	                            add edx, ecx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014c1	            0x39d0	                            cmp eax, edx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014c3	     0xf843a030000	                            je 0x4001803	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014c9	      0xba05000000	                              mov edx, 5	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40014ce	      0xbe00000000	                              mov esi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40014d3	      0xbf00000000	                              mov edi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40014d8	      0xe800000000	                          call 0x40014dd	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x40014dd	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x40014e1	          0x4889c7	                            mov rdi, rax	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x40014e4	          0x4889de	                            mov rsi, rbx	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x40014e7	            0x31c0	                            xor eax, eax	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x40014e9	      0xe800000000	                          call 0x40014ee	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x40014ee	      0xbf11000000	                           mov edi, 0x11	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x40014f3	      0xe800000000	                          call 0x40014f8	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x40014f8	      0xe95afbffff	                           jmp 0x4001057	       618	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40014fd	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       618	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001502	      0x488b742408	                mov rsi, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001507	          0x4531c9	                            xor r9d, r9d	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400150a	           0xfb606	                   movzx eax, byte [rsi]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400150d	        0x4883c602	                              add rsi, 2	       597	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001511	     0xfb6b8000000	                   movzx edi, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001518	         0xfb646ff	               movzx eax, byte [rsi - 1]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400151c	     0xfb690000000	                   movzx edx, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001523	            0x89f8	                            mov eax, edi	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001525	          0xc1e704	                              shl edi, 4	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001528	          0xc1e004	                              shl eax, 4	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400152b	          0x4101d4	                           add r12d, edx	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400152e	          0x4101c4	                           add r12d, eax	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001531	          0x8d043a	                    lea eax, [rdx + rdi]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001534	          0x4c09c8	                              or rax, r9	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001537	        0x48c1e008	                              shl rax, 8	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400153b	          0x4989c1	                             mov r9, rax	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400153e	      0xe9ecfeffff	                           jmp 0x400142f	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001543	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001548	            0x31f6	                            xor esi, esi	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400154a	         0xfb64500	                   movzx eax, byte [rbp]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400154e	        0x4183e901	                              sub r9d, 1	       531	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001552	        0x4883c502	                              add rbp, 2	       530	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001556	     0xfb688000000	                   movzx ecx, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400155d	         0xfb645ff	               movzx eax, byte [rbp - 1]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001561	     0xfb690000000	                   movzx edx, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001568	            0x89c8	                            mov eax, ecx	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400156a	          0xc1e104	                              shl ecx, 4	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400156d	          0xc1e004	                              shl eax, 4	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001570	          0x4101d4	                           add r12d, edx	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001573	          0x4101c4	                           add r12d, eax	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001576	          0x8d040a	                    lea eax, [rdx + rcx]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001579	          0x4809f0	                             or rax, rsi	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400157c	        0x48c1e008	                              shl rax, 8	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001580	         0xfb65500	                   movzx edx, byte [rbp]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001584	        0x4883c504	                              add rbp, 4	       539	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001588	        0x458d79fe	                      lea r15d, [r9 - 2]	       540	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400158c	    0x440fb6920000	                  movzx r10d, byte [rdx]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001594	         0xfb655fd	               movzx edx, byte [rbp - 3]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001598	     0xfb68a000000	                   movzx ecx, byte [rdx]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400159f	         0xfb655fe	               movzx edx, byte [rbp - 2]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015a3	          0x4489d7	                           mov edi, r10d	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015a6	          0xc1e704	                              shl edi, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015a9	     0xfb6b2000000	                   movzx esi, byte [rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015b0	         0xfb655ff	               movzx edx, byte [rbp - 1]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015b4	     0xfb692000000	                   movzx edx, byte [rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015bb	        0x448d0411	                    lea r8d, [rcx + rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015bf	          0x4501c4	                           add r12d, r8d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015c2	          0x4589d0	                           mov r8d, r10d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015c5	        0x448d140f	                   lea r10d, [rdi + rcx]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015c9	        0x41c1e004	                              shl r8d, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015cd	        0x488b0c24	                    mov rcx, qword [rsp]	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40015d1	          0x4501e0	                           add r8d, r12d	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40015d4	          0x4909c2	                             or r10, rax	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015d7	          0x4189f4	                           mov r12d, esi	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015da	          0xc1e604	                              shl esi, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015dd	        0x41c1e404	                             shl r12d, 4	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015e1	        0x49c1e208	                              shl r10, 8	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015e5	             0x1f2	                            add edx, esi	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015e7	          0x4501c4	                           add r12d, r8d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015ea	          0x4909d2	                             or r10, rdx	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015ed	          0x4885c9	                           test rcx, rcx	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40015f0	            0x7414	                            je 0x4001606	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40015f2	        0x488b4138	            mov rax, qword [rcx + 0x38] 	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40015f6	          0x4889c2	                            mov rdx, rax	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40015f9	        0x48035128	             add rdx, qword [rcx + 0x28]	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40015fd	          0x4939d2	                            cmp r10, rdx	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001600	     0xf8456020000	                            je 0x400185c	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001606	    0x448b83a00000	            mov r8d, dword [rbx + 0xa0] 	        33	stdio2.h	FUNCTION_38	CALL_1
0x400160d	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001612	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001617	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x400161c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001621	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001623	      0x4c89542420	             mov qword [rsp + 0x20], r10	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001628	        0x44890c24	                    mov dword [rsp], r9d	        33	stdio2.h	FUNCTION_38	CALL_1
0x400162c	        0x4183c001	                              add r8d, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001630	      0xe800000000	                          call 0x4001635	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001635	        0x448b0c24	                    mov r9d, dword [rsp]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001639	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400163e	      0x488d542450	                   lea rdx, [rsp + 0x50]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001643	            0x8b0a	                    mov ecx, dword [rdx]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001645	        0x4883c204	                              add rdx, 4	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001649	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400164f	            0xf7d1	                                 not ecx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001651	            0x21c8	                            and eax, ecx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001653	      0x2580808080	                     and eax, 0x80808080	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001658	            0x74e9	                            je 0x4001643	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400165a	            0x89c1	                            mov ecx, eax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400165c	          0x4889df	                            mov rdi, rbx	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x400165f	      0x44894c242c	             mov dword [rsp + 0x2c], r9d	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4001664	          0xc1e910	                           shr ecx, 0x10	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001667	      0xa980800000	                        test eax, 0x8080	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400166c	      0x4c89542420	             mov qword [rsp + 0x20], r10	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001671	           0xf44c1	                          cmove eax, ecx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001674	        0x488d4a02	                      lea rcx, [rdx + 2]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001678	        0x480f44d1	                          cmove rdx, rcx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400167c	            0x89c1	                            mov ecx, eax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400167e	              0xc1	                              add cl, al	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001680	      0x488d442450	                   lea rax, [rsp + 0x50]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001685	        0x4883da03	                              sbb rdx, 3	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001689	          0x4829c2	                            sub rdx, rax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400168c	        0x488d7201	                      lea rsi, [rdx + 1]	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4001690	      0xe800000000	                          call 0x4001695	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4001695	      0x488d742450	                   lea rsi, [rsp + 0x50]	       110	string3.h	FUNCTION_32	CALL_3
0x400169a	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_32	CALL_3
0x400169d	      0xe800000000	                          call 0x40016a2	       110	string3.h	FUNCTION_32	CALL_3
0x40016a2	      0xba03010000	                          mov edx, 0x103	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x40016a7	          0x4889c6	                            mov rsi, rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x40016aa	          0x4889df	                            mov rdi, rbx	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x40016ad	      0xe800000000	                          call 0x40016b2	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x40016b2	          0x4885c0	                           test rax, rax	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x40016b5	          0x4889c1	                            mov rcx, rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x40016b8	        0x48890424	                    mov qword [rsp], rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x40016bc	     0xf845e010000	                            je 0x4001820	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x40016c2	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016c7	          0x4489fa	                           mov edx, r15d	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016ca	      0x448b4c242c	            mov r9d, dword [rsp + 0x2c] 	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016cf	        0x48895038	             mov qword [rax + 0x38], rdx	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016d3	        0x4c895028	             mov qword [rax + 0x28], r10	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016d7	        0x4c895030	             mov qword [rax + 0x30], r10	       565	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016db	        0x498d45ff	                      lea rax, [r13 - 1]	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016df	    0x488981900000	             mov qword [rcx + 0x90], rax	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016e6	        0x418d41fd	                       lea eax, [r9 - 3]	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x40016ea	          0x4585ff	                         test r15d, r15d	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40016ed	      0x488d4c4502	              lea rcx, [rbp + rax*2 + 2]	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40016f2	     0xf8496010000	                            je 0x400188e	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40016f8	     0xf1f84000000	                   nop dword [rax + rax]	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001700	         0xfb64500	                   movzx eax, byte [rbp]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001704	         0xfb65501	               movzx edx, byte [rbp + 1]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001708	        0x4883c502	                              add rbp, 2	       573	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x400170c	     0xfb680000000	                   movzx eax, byte [rax]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001713	          0xc1e004	                              shl eax, 4	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001716	     0x28200000000	                      add al, byte [rdx]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x400171c	          0x4101c4	                           add r12d, eax	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x400171f	          0x4839cd	                            cmp rbp, rcx	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001722	            0x75dc	                           jne 0x4001700	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001724	           0xfb611	                   movzx edx, byte [rcx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001727	          0x41f7d4	                                not r12d	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x400172a	        0x410fb6c4	                         movzx eax, r12b	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x400172e	     0xfb692000000	                   movzx edx, byte [rdx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001735	          0xc1e204	                              shl edx, 4	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001738	            0x89d6	                            mov esi, edx	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x400173a	         0xfb65101	               movzx edx, byte [rcx + 1]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x400173e	     0xfb692000000	                   movzx edx, byte [rdx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001745	             0x1f2	                            add edx, esi	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001747	            0x39d0	                            cmp eax, edx	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001749	     0xf84a1f8ffff	                            je 0x4000ff0	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x400174f	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001754	      0xe970fdffff	                           jmp 0x40014c9	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001759	     0xf1f80000000	                         nop dword [rax]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x4001760	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001765	            0x31c0	                            xor eax, eax	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001767	      0xe914feffff	                           jmp 0x4001580	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400176c	    0x48c704240000	                      mov qword [rsp], 0	       518	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001774	      0xe977f8ffff	                           jmp 0x4000ff0	       627	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001779	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400177e	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001783	           0xfb607	                   movzx eax, byte [rdi]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001786	        0x488d7702	                      lea rsi, [rdi + 2]	       592	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400178a	     0xfb690000000	                   movzx edx, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001791	         0xfb64701	               movzx eax, byte [rdi + 1]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001795	     0xfb680000000	                   movzx eax, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400179c	            0x89d1	                            mov ecx, edx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400179e	          0xc1e204	                              shl edx, 4	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017a1	          0xc1e104	                              shl ecx, 4	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017a4	          0x4101c4	                           add r12d, eax	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017a7	             0x1d0	                            add eax, edx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017a9	        0x48c1e008	                              shl rax, 8	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017ad	          0x4101cc	                           add r12d, ecx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017b0	          0x4989c1	                             mov r9, rax	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017b3	      0xe952fdffff	                           jmp 0x400150a	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017b8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017bd	        0x458d4ffe	                      lea r9d, [r15 - 2]	       525	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017c1	           0xfb601	                   movzx eax, byte [rcx]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017c4	        0x488d6902	                      lea rbp, [rcx + 2]	       524	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017c8	     0xfb690000000	                   movzx edx, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017cf	         0xfb64101	               movzx eax, byte [rcx + 1]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017d3	     0xfb680000000	                   movzx eax, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017da	          0x4189d4	                           mov r12d, edx	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017dd	          0xc1e204	                              shl edx, 4	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017e0	        0x41c1e404	                             shl r12d, 4	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017e4	        0x428d3438	                    lea esi, [rax + r15]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017e8	             0x1d0	                            add eax, edx	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017ea	        0x48c1e008	                              shl rax, 8	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017ee	          0x4101f4	                           add r12d, esi	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017f1	          0x4889c6	                            mov rsi, rax	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017f4	      0xe951fdffff	                           jmp 0x400154a	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017f9	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40017fe	      0xe905fcffff	                           jmp 0x4001408	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001803	      0x488b442408	                mov rax, qword [rsp + 8]	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x4001808	          0x4885c0	                           test rax, rax	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x400180b	            0x7408	                            je 0x4001815	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x400180d	          0x4889c7	                            mov rdi, rax	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_44
0x4001810	      0xe800000000	                          call 0x4001815	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_44
0x4001815	    0x41bd01000000	                             mov r13d, 1	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400181b	      0xe953f8ffff	                           jmp 0x4001073	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001820	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001825	      0xe92df8ffff	                           jmp 0x4001057	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400182a	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x400182e	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001833	            0x85c0	                           test eax, eax	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001835	     0xf851cf8ffff	                           jne 0x4001057	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x400183b	      0x488b442408	                mov rax, qword [rsp + 8]	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x4001840	    0x41bd01000000	                             mov r13d, 1	       637	srec.c	FUNCTION_6	ELSE_1
0x4001846	          0x4885c0	                           test rax, rax	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x4001849	     0xf8424f8ffff	                            je 0x4001073	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x400184f	          0x4889c7	                            mov rdi, rax	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x4001852	      0xe800000000	                          call 0x4001857	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x4001857	      0xe917f8ffff	                           jmp 0x4001073	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x400185c	          0x4489fa	                           mov edx, r15d	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x400185f	          0x4801d0	                            add rax, rdx	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001862	        0x48894138	             mov qword [rcx + 0x38], rax	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001866	      0xe97bfeffff	                           jmp 0x40016e6	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x400186b	        0x48894218	             mov qword [rdx + 0x18], rax	       281	srec.c	FUNCTION_5	IF_2
0x400186f	      0xe962faffff	                           jmp 0x40012d6	       281	srec.c	FUNCTION_5	IF_2
0x4001874	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4001878	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x400187c	          0x4889df	                            mov rdi, rbx	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x400187f	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4001884	      0xe837f6ffff	                  call sym.srec_bad_byte	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4001889	      0xe9c9f7ffff	                           jmp 0x4001057	       476	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x400188e	          0x4889e9	                            mov rcx, rbp	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001891	      0xe98efeffff	                           jmp 0x4001724	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001896	      0xba05000000	                              mov edx, 5	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x400189b	      0xbe00000000	                              mov esi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018a0	      0xbf00000000	                              mov edi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018a5	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018aa	      0xe800000000	                          call 0x40018af	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018af	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018b3	          0x4889c7	                            mov rdi, rax	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018b6	          0x4489f9	                           mov ecx, r15d	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018b9	          0x4889de	                            mov rsi, rbx	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018bc	            0x31c0	                            xor eax, eax	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018be	      0xe800000000	                          call 0x40018c3	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40018c3	      0xbf11000000	                           mov edi, 0x11	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x40018c8	      0xe800000000	                          call 0x40018cd	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x40018cd	      0xe985f7ffff	                           jmp 0x4001057	       491	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x40018d2	      0xe800000000	                          call 0x40018d7	       645	srec.c	FUNCTION_6	ELSE_1
srec_write_object_contents	functions,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,0:FOR,0:SWITCH,0	2
0x4000ea0	            0x31f6	                            xor esi, esi	      1164	srec.c	FUNCTION_19	CALL_1
0x4000ea2	      0xe9a9fcffff	jmp sym.internal_srec_write_object_contents	      1164	srec.c	FUNCTION_19	CALL_1
symbolsrec_write_object_contents	functions,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,0:FOR,0:SWITCH,0	2
0x4000eb0	      0xbe01000000	                              mov esi, 1	      1170	srec.c	FUNCTION_20	CALL_1
0x4000eb5	      0xe996fcffff	jmp sym.internal_srec_write_object_contents	      1170	srec.c	FUNCTION_20	CALL_1
srec_get_symtab_upper_bound	functions,0:WHILE,0:ELSE,0:CALL,1:DO,0:IF,0:FOR,0:SWITCH,0	4
0x4000050	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	      1185	srec.c	FUNCTION_22	CALL_1
0x4000056	          0x83c001	                              add eax, 1	      1185	srec.c	FUNCTION_22	CALL_1
0x4000059	        0x48c1e003	                              shl rax, 3	      1185	srec.c	FUNCTION_22	CALL_1
0x400005d	              0xc3	                                     ret	      1186	srec.c	FUNCTION_22
srec_mkobject	functions,0:WHILE,0:ELSE,0:CALL,2:DO,0:IF,1:FOR,0:SWITCH,0	28
0x40005a0	    0x8b0500000000	            mov eax, dword [0x040005a6] 	       183	srec.c	FUNCTION_1	IF_1
0x40005a6	              0x53	                                push rbx	       194	srec.c	FUNCTION_2
0x40005a7	          0x4889fb	                            mov rbx, rdi	       194	srec.c	FUNCTION_2
0x40005aa	            0x85c0	                           test eax, eax	       183	srec.c	FUNCTION_1	IF_1
0x40005ac	            0x7452	                            je 0x4000600	       183	srec.c	FUNCTION_1	IF_1
0x40005ae	      0xbe30000000	                           mov esi, 0x30	       199	srec.c	FUNCTION_2	CALL_2
0x40005b3	          0x4889df	                            mov rdi, rbx	       199	srec.c	FUNCTION_2	CALL_2
0x40005b6	      0xe800000000	                          call 0x40005bb	       199	srec.c	FUNCTION_2	CALL_2
0x40005bb	          0x4885c0	                           test rax, rax	       200	srec.c	FUNCTION_2	IF_1
0x40005be	            0x7458	                            je 0x4000618	       200	srec.c	FUNCTION_2	IF_1
0x40005c0	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       203	srec.c	FUNCTION_2
0x40005c7	    0xc74010010000	               mov dword [rax + 0x10], 1	       204	srec.c	FUNCTION_2
0x40005ce	    0x48c700000000	                      mov qword [rax], 0	       205	srec.c	FUNCTION_2
0x40005d5	    0x48c740080000	                  mov qword [rax + 8], 0	       206	srec.c	FUNCTION_2
0x40005dd	    0x48c740180000	               mov qword [rax + 0x18], 0	       207	srec.c	FUNCTION_2
0x40005e5	    0x48c740200000	               mov qword [rax + 0x20], 0	       208	srec.c	FUNCTION_2
0x40005ed	    0x48c740280000	               mov qword [rax + 0x28], 0	       209	srec.c	FUNCTION_2
0x40005f5	      0xb801000000	                              mov eax, 1	       211	srec.c	FUNCTION_2
0x40005fa	              0x5b	                                 pop rbx	       212	srec.c	FUNCTION_2
0x40005fb	              0xc3	                                     ret	       212	srec.c	FUNCTION_2
0x40005fc	         0xf1f4000	                         nop dword [rax]	       212	srec.c	FUNCTION_2
0x4000600	    0xc70500000000	               mov dword [0x0400060a], 1	       185	srec.c	FUNCTION_1	IF_1
0x400060a	      0xe800000000	                          call 0x400060f	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x400060f	            0xeb9d	                           jmp 0x40005ae	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4000611	     0xf1f80000000	                         nop dword [rax]	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4000618	            0x31c0	                            xor eax, eax	       201	srec.c	FUNCTION_2	IF_1
0x400061a	              0x5b	                                 pop rbx	       212	srec.c	FUNCTION_2
0x400061b	              0xc3	                                     ret	       212	srec.c	FUNCTION_2
