get_frag_count	CALL,0:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	2
0x40000b0	    0x8b0500000000	            mov eax, dword [0x040000b6] 	        34	frags.c	FUNCTION_1
0x40000b6	              0xc3	                                     ret	        34	frags.c	FUNCTION_1
frag_more	CALL,4:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	13
0x40004c0	    0x488b05000000	            mov rax, qword [0x040004c7] 	       211	frags.c	FUNCTION_8
0x40004c7	              0x53	                                push rbx	       211	frags.c	FUNCTION_8
0x40004c8	          0x4889fb	                            mov rbx, rdi	       211	frags.c	FUNCTION_8
0x40004cb	        0x488b7830	            mov rdi, qword [rax + 0x30] 	       214	frags.c	FUNCTION_8	CALL_1
0x40004cf	      0xe86cfbffff	        call sym.frag_alloc_check.isra.0	       214	frags.c	FUNCTION_8	CALL_1
0x40004d4	          0x4889df	                            mov rdi, rbx	       215	frags.c	FUNCTION_8	CALL_2
0x40004d7	      0xe800000000	                          call 0x40004dc	       215	frags.c	FUNCTION_8	CALL_2
0x40004dc	    0x488b15000000	            mov rdx, qword [0x040004e3] 	       216	frags.c	FUNCTION_8	CALL_3
0x40004e3	        0x488b4248	            mov rax, qword [rdx + 0x48] 	       216	frags.c	FUNCTION_8	CALL_3
0x40004e7	          0x4801c3	                            add rbx, rax	       217	frags.c	FUNCTION_8	CALL_4
0x40004ea	        0x48895a48	             mov qword [rdx + 0x48], rbx	       217	frags.c	FUNCTION_8	CALL_4
0x40004ee	              0x5b	                                 pop rbx	       219	frags.c	FUNCTION_8
0x40004ef	              0xc3	                                     ret	       219	frags.c	FUNCTION_8
frag_var	CALL,4:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	35
0x40004f0	            0x4156	                                push r14	       259	frags.c	FUNCTION_10
0x40004f2	            0x4155	                                push r13	       259	frags.c	FUNCTION_10
0x40004f4	          0x4189ce	                           mov r14d, ecx	       259	frags.c	FUNCTION_10
0x40004f7	            0x4154	                                push r12	       259	frags.c	FUNCTION_10
0x40004f9	              0x55	                                push rbp	       259	frags.c	FUNCTION_10
0x40004fa	          0x4189fc	                           mov r12d, edi	       259	frags.c	FUNCTION_10
0x40004fd	              0x53	                                push rbx	       259	frags.c	FUNCTION_10
0x40004fe	          0x4889f7	                            mov rdi, rsi	       262	frags.c	FUNCTION_10	CALL_1
0x4000501	          0x4889f3	                            mov rbx, rsi	       259	frags.c	FUNCTION_10
0x4000504	          0x4989d5	                            mov r13, rdx	       259	frags.c	FUNCTION_10
0x4000507	        0x4883ec10	                           sub rsp, 0x10	       259	frags.c	FUNCTION_10
0x400050b	      0x4c89442408	                 mov qword [rsp + 8], r8	       259	frags.c	FUNCTION_10
0x4000510	        0x4c890c24	                     mov qword [rsp], r9	       259	frags.c	FUNCTION_10
0x4000514	      0xe800000000	                          call 0x4000519	       262	frags.c	FUNCTION_10	CALL_1
0x4000519	    0x488b05000000	            mov rax, qword [0x04000520] 	       263	frags.c	FUNCTION_10	CALL_2
0x4000520	        0x4883ec08	                              sub rsp, 8	       265	frags.c	FUNCTION_10	CALL_4
0x4000524	          0x4489f1	                           mov ecx, r14d	       265	frags.c	FUNCTION_10	CALL_4
0x4000527	          0x4889de	                            mov rsi, rbx	       265	frags.c	FUNCTION_10	CALL_4
0x400052a	          0x4489e7	                           mov edi, r12d	       265	frags.c	FUNCTION_10	CALL_4
0x400052d	        0x488b6848	            mov rbp, qword [rax + 0x48] 	       263	frags.c	FUNCTION_10	CALL_2
0x4000531	      0x488d541d00	                    lea rdx, [rbp + rbx]	       264	frags.c	FUNCTION_10	CALL_3
0x4000536	        0x48895048	             mov qword [rax + 0x48], rdx	       264	frags.c	FUNCTION_10	CALL_3
0x400053a	        0xff742448	                 push qword [rsp + 0x48]	       265	frags.c	FUNCTION_10	CALL_4
0x400053e	          0x4c89ea	                            mov rdx, r13	       265	frags.c	FUNCTION_10	CALL_4
0x4000541	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       265	frags.c	FUNCTION_10	CALL_4
0x4000546	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       265	frags.c	FUNCTION_10	CALL_4
0x400054b	      0xe800ffffff	                  call sym.frag_var_init	       265	frags.c	FUNCTION_10	CALL_4
0x4000550	        0x4883c420	                           add rsp, 0x20	       267	frags.c	FUNCTION_10
0x4000554	          0x4889e8	                            mov rax, rbp	       267	frags.c	FUNCTION_10
0x4000557	              0x5b	                                 pop rbx	       267	frags.c	FUNCTION_10
0x4000558	              0x5d	                                 pop rbp	       267	frags.c	FUNCTION_10
0x4000559	            0x415c	                                 pop r12	       267	frags.c	FUNCTION_10
0x400055b	            0x415d	                                 pop r13	       267	frags.c	FUNCTION_10
0x400055d	            0x415e	                                 pop r14	       267	frags.c	FUNCTION_10
0x400055f	              0xc3	                                     ret	       267	frags.c	FUNCTION_10
frag_now_fix	CALL,1:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	11
0x40006a0	    0x48813d000000	               cmp qword [0x040006ab], 0	       386	frags.c	FUNCTION_17	IF_1
0x40006ab	            0x7423	                            je 0x40006d0	       386	frags.c	FUNCTION_17	IF_1
0x40006ad	    0x488b05000000	            mov rax, qword [0x040006b4] 	       390	frags.c	FUNCTION_17
0x40006b4	        0x488d507c	                   lea rdx, [rax + 0x7c]	       390	frags.c	FUNCTION_17
0x40006b8	    0x488b05000000	            mov rax, qword [0x040006bf] 	       389	frags.c	FUNCTION_17	CALL_1
0x40006bf	        0x488b4048	            mov rax, qword [rax + 0x48] 	       389	frags.c	FUNCTION_17	CALL_1
0x40006c3	          0x4829d0	                            sub rax, rdx	       389	frags.c	FUNCTION_17	CALL_1
0x40006c6	              0xc3	                                     ret	       397	frags.c	FUNCTION_18
0x40006c7	    0x660f1f840000	                    nop word [rax + rax]	       397	frags.c	FUNCTION_18
0x40006d0	    0x488b05000000	            mov rax, qword [0x040006d7] 	       387	frags.c	FUNCTION_17	IF_1
0x40006d7	              0xc3	                                     ret	       387	frags.c	FUNCTION_17	IF_1
frag_init	CALL,0:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	3
0x40000d0	    0xc70500000000	               mov dword [0x040000da], 1	        47	frags.c	FUNCTION_3
0x40000da	    0xc70500000000	               mov dword [0x040000e4], 1	        48	frags.c	FUNCTION_3
0x40000e4	              0xc3	                                     ret	        48	frags.c	FUNCTION_3
frag_variant	CALL,2:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	11
0x4000560	    0x488b05000000	            mov rax, qword [0x04000567] 	       280	frags.c	FUNCTION_11	CALL_1
0x4000567	              0x53	                                push rbx	       277	frags.c	FUNCTION_11
0x4000568	        0x4883ec08	                              sub rsp, 8	       281	frags.c	FUNCTION_11	CALL_2
0x400056c	        0x488b5848	            mov rbx, qword [rax + 0x48] 	       280	frags.c	FUNCTION_11	CALL_1
0x4000570	        0xff742418	                 push qword [rsp + 0x18]	       281	frags.c	FUNCTION_11	CALL_2
0x4000574	      0xe8d7feffff	                  call sym.frag_var_init	       281	frags.c	FUNCTION_11	CALL_2
0x4000579	              0x58	                                 pop rax	       283	frags.c	FUNCTION_11
0x400057a	          0x4889d8	                            mov rax, rbx	       284	frags.c	FUNCTION_11
0x400057d	              0x5a	                                 pop rdx	       283	frags.c	FUNCTION_11
0x400057e	              0x5b	                                 pop rbx	       284	frags.c	FUNCTION_11
0x400057f	              0xc3	                                     ret	       284	frags.c	FUNCTION_11
frag_append_1_char	CALL,5:FOR,0:DO,0:functions,0:IF,1:WHILE,0:SWITCH,0:ELSE,0	40
0x40006f0	              0x55	                                push rbp	       401	frags.c	FUNCTION_19
0x40006f1	              0x53	                                push rbx	       401	frags.c	FUNCTION_19
0x40006f2	            0x89fd	                            mov ebp, edi	       401	frags.c	FUNCTION_19
0x40006f4	        0x4883ec08	                              sub rsp, 8	       401	frags.c	FUNCTION_19
0x40006f8	    0x488b05000000	            mov rax, qword [0x040006ff] 	       401	frags.c	FUNCTION_19
0x40006ff	        0x488b7830	            mov rdi, qword [rax + 0x30] 	       402	frags.c	FUNCTION_19	CALL_1
0x4000703	      0xe838f9ffff	        call sym.frag_alloc_check.isra.0	       402	frags.c	FUNCTION_19	CALL_1
0x4000708	    0x488b1d000000	            mov rbx, qword [0x0400070f] 	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x400070f	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x4000713	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x4000717	          0x4889d1	                            mov rcx, rdx	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x400071a	          0x4829c1	                            sub rcx, rax	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x400071d	        0x4883f901	                              cmp rcx, 1	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x4000721	            0x7635	                           jbe 0x4000758	       403	frags.c	FUNCTION_19	IF_1	CALL_2
0x4000723	          0x4839c2	                            cmp rdx, rax	       408	frags.c	FUNCTION_19	CALL_5
0x4000726	            0x7418	                            je 0x4000740	       408	frags.c	FUNCTION_19	CALL_5
0x4000728	        0x488d5001	                      lea rdx, [rax + 1]	       408	frags.c	FUNCTION_19	CALL_5
0x400072c	        0x48895348	             mov qword [rbx + 0x48], rdx	       408	frags.c	FUNCTION_19	CALL_5
0x4000730	          0x408828	                     mov byte [rax], bpl	       408	frags.c	FUNCTION_19	CALL_5
0x4000733	        0x4883c408	                              add rsp, 8	       409	frags.c	FUNCTION_19
0x4000737	              0x5b	                                 pop rbx	       409	frags.c	FUNCTION_19
0x4000738	              0x5d	                                 pop rbp	       409	frags.c	FUNCTION_19
0x4000739	              0xc3	                                     ret	       409	frags.c	FUNCTION_19
0x400073a	    0x660f1f440000	                    nop word [rax + rax]	       409	frags.c	FUNCTION_19
0x4000740	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       408	frags.c	FUNCTION_19	CALL_5
0x4000744	      0xbe01000000	                              mov esi, 1	       408	frags.c	FUNCTION_19	CALL_5
0x4000749	      0xe800000000	                          call 0x400074e	       408	frags.c	FUNCTION_19	CALL_5
0x400074e	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       408	frags.c	FUNCTION_19	CALL_5
0x4000752	            0xebd4	                           jmp 0x4000728	       408	frags.c	FUNCTION_19	CALL_5
0x4000754	         0xf1f4000	                         nop dword [rax]	       408	frags.c	FUNCTION_19	CALL_5
0x4000758	    0x488b05000000	            mov rax, qword [0x0400075f] 	       405	frags.c	FUNCTION_19	IF_1	CALL_3
0x400075f	            0x31ff	                            xor edi, edi	       406	frags.c	FUNCTION_19	IF_1	CALL_4
0x4000761	    0xc7405c010000	               mov dword [rax + 0x5c], 1	       291	frags.c	FUNCTION_12
0x4000768	    0x48c740200000	               mov qword [rax + 0x20], 0	       292	frags.c	FUNCTION_12
0x4000770	    0x48c740180000	               mov qword [rax + 0x18], 0	       293	frags.c	FUNCTION_12
0x4000778	      0xe800000000	                          call 0x400077d	       406	frags.c	FUNCTION_19	IF_1	CALL_4
0x400077d	    0x488b1d000000	            mov rbx, qword [0x04000784] 	       406	frags.c	FUNCTION_19	IF_1	CALL_4
0x4000784	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	       406	frags.c	FUNCTION_19	IF_1	CALL_4
0x4000788	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       406	frags.c	FUNCTION_19	IF_1	CALL_4
0x400078c	            0xeb95	                           jmp 0x4000723	       406	frags.c	FUNCTION_19	IF_1	CALL_4
frag_alloc	CALL,6:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	91
0x40000f0	              0x55	                                push rbp	        77	frags.c	FUNCTION_5
0x40000f1	              0x53	                                push rbx	        77	frags.c	FUNCTION_5
0x40000f2	          0x4889fb	                            mov rbx, rdi	        77	frags.c	FUNCTION_5
0x40000f5	        0x4883ec08	                              sub rsp, 8	        77	frags.c	FUNCTION_5
0x40000f9	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        81	frags.c	FUNCTION_5	CALL_1
0x40000fd	        0x483b4710	            cmp rax, qword [rdi + 0x10] 	        81	frags.c	FUNCTION_5	CALL_1
0x4000101	        0x4c8b4720	              mov r8, qword [rdi + 0x20]	        81	frags.c	FUNCTION_5	CALL_1
0x4000105	     0xf8435010000	                            je 0x4000240	        81	frags.c	FUNCTION_5	CALL_1
0x400010b	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	        81	frags.c	FUNCTION_5	CALL_1
0x400010f	        0x488b4b08	                mov rcx, qword [rbx + 8]	        81	frags.c	FUNCTION_5	CALL_1
0x4000113	          0x4d89c1	                              mov r9, r8	        81	frags.c	FUNCTION_5	CALL_1
0x4000116	          0x4889f2	                            mov rdx, rsi	        81	frags.c	FUNCTION_5	CALL_1
0x4000119	          0x4801f0	                            add rax, rsi	        81	frags.c	FUNCTION_5	CALL_1
0x400011c	          0x4929c9	                             sub r9, rcx	        81	frags.c	FUNCTION_5	CALL_1
0x400011f	          0x48f7d2	                                 not rdx	        81	frags.c	FUNCTION_5	CALL_1
0x4000122	          0x4821d0	                            and rax, rdx	        81	frags.c	FUNCTION_5	CALL_1
0x4000125	          0x4889c2	                            mov rdx, rax	        81	frags.c	FUNCTION_5	CALL_1
0x4000128	        0x48894318	             mov qword [rbx + 0x18], rax	        81	frags.c	FUNCTION_5	CALL_1
0x400012c	          0x4829ca	                            sub rdx, rcx	        81	frags.c	FUNCTION_5	CALL_1
0x400012f	          0x4c39ca	                             cmp rdx, r9	        81	frags.c	FUNCTION_5	CALL_1
0x4000132	     0xf86b0000000	                           jbe 0x40001e8	        81	frags.c	FUNCTION_5	CALL_1
0x4000138	        0x4c894318	              mov qword [rbx + 0x18], r8	        81	frags.c	FUNCTION_5	CALL_1
0x400013c	        0x4c894310	              mov qword [rbx + 0x10], r8	        81	frags.c	FUNCTION_5	CALL_1
0x4000140	            0x89f5	                            mov ebp, esi	        82	frags.c	FUNCTION_5	CALL_2
0x4000142	    0x48c743300000	               mov qword [rbx + 0x30], 0	        83	frags.c	FUNCTION_5	CALL_3
0x400014a	      0xbe7c000000	                           mov esi, 0x7c	        84	frags.c	FUNCTION_5	CALL_4
0x400014f	          0x4889df	                            mov rdi, rbx	        84	frags.c	FUNCTION_5	CALL_4
0x4000152	      0xe800000000	                          call 0x4000157	        84	frags.c	FUNCTION_5	CALL_4
0x4000157	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        84	frags.c	FUNCTION_5	CALL_4
0x400015b	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        84	frags.c	FUNCTION_5	CALL_4
0x400015f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	        84	frags.c	FUNCTION_5	CALL_4
0x4000163	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	        84	frags.c	FUNCTION_5	CALL_4
0x4000167	        0x488b4b08	                mov rcx, qword [rbx + 8]	        84	frags.c	FUNCTION_5	CALL_4
0x400016b	        0x4883c07c	                           add rax, 0x7c	        84	frags.c	FUNCTION_5	CALL_4
0x400016f	          0x4d89c1	                              mov r9, r8	        84	frags.c	FUNCTION_5	CALL_4
0x4000172	          0x4889fe	                            mov rsi, rdi	        84	frags.c	FUNCTION_5	CALL_4
0x4000175	        0x48894318	             mov qword [rbx + 0x18], rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000179	          0x4929c9	                             sub r9, rcx	        84	frags.c	FUNCTION_5	CALL_4
0x400017c	          0x4839d0	                            cmp rax, rdx	        84	frags.c	FUNCTION_5	CALL_4
0x400017f	          0x48f7d6	                                 not rsi	        84	frags.c	FUNCTION_5	CALL_4
0x4000182	     0xf849b000000	                            je 0x4000223	        84	frags.c	FUNCTION_5	CALL_4
0x4000188	          0x4801f8	                            add rax, rdi	        84	frags.c	FUNCTION_5	CALL_4
0x400018b	          0x4821f0	                            and rax, rsi	        84	frags.c	FUNCTION_5	CALL_4
0x400018e	          0x4889c6	                            mov rsi, rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000191	          0x4829ce	                            sub rsi, rcx	        84	frags.c	FUNCTION_5	CALL_4
0x4000194	          0x4c39ce	                             cmp rsi, r9	        84	frags.c	FUNCTION_5	CALL_4
0x4000197	     0xf8693000000	                           jbe 0x4000230	        84	frags.c	FUNCTION_5	CALL_4
0x400019d	        0x4c894318	              mov qword [rbx + 0x18], r8	        84	frags.c	FUNCTION_5	CALL_4
0x40001a1	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_24	CALL_6
0x40001a5	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_24	CALL_6
0x40001a8	          0x4863c5	                         movsxd rax, ebp	        85	frags.c	FUNCTION_5	CALL_5
0x40001ab	        0x48894330	             mov qword [rbx + 0x30], rax	        85	frags.c	FUNCTION_5	CALL_5
0x40001af	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_24	CALL_6
0x40001b1	        0x4c894310	              mov qword [rbx + 0x10], r8	        84	frags.c	FUNCTION_5	CALL_4
0x40001b5	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_24	CALL_6
0x40001b9	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_24	CALL_6
0x40001c0	    0x48c742740000	               mov qword [rdx + 0x74], 0	        90	string3.h	FUNCTION_24	CALL_6
0x40001c8	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_24	CALL_6
0x40001cb	          0x83c17c	                           add ecx, 0x7c	        90	string3.h	FUNCTION_24	CALL_6
0x40001ce	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_24	CALL_6
0x40001d1	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_24	CALL_6
0x40001d4	          0x4889d0	                            mov rax, rdx	        89	frags.c	FUNCTION_5
0x40001d7	    0x830500000000	               add dword [0x040001de], 1	        87	frags.c	FUNCTION_5
0x40001de	        0x4883c408	                              add rsp, 8	        89	frags.c	FUNCTION_5
0x40001e2	              0x5b	                                 pop rbx	        89	frags.c	FUNCTION_5
0x40001e3	              0x5d	                                 pop rbp	        89	frags.c	FUNCTION_5
0x40001e4	              0xc3	                                     ret	        89	frags.c	FUNCTION_5
0x40001e5	           0xf1f00	                         nop dword [rax]	        89	frags.c	FUNCTION_5
0x40001e8	          0x4c89c2	                             mov rdx, r8	        84	frags.c	FUNCTION_5	CALL_4
0x40001eb	        0x48894310	             mov qword [rbx + 0x10], rax	        81	frags.c	FUNCTION_5	CALL_1
0x40001ef	            0x89f5	                            mov ebp, esi	        82	frags.c	FUNCTION_5	CALL_2
0x40001f1	          0x4829c2	                            sub rdx, rax	        84	frags.c	FUNCTION_5	CALL_4
0x40001f4	    0x48c743300000	               mov qword [rbx + 0x30], 0	        83	frags.c	FUNCTION_5	CALL_3
0x40001fc	        0x4883fa7b	                           cmp rdx, 0x7b	        84	frags.c	FUNCTION_5	CALL_4
0x4000200	     0xf8644ffffff	                           jbe 0x400014a	        84	frags.c	FUNCTION_5	CALL_4
0x4000206	          0x4889c2	                            mov rdx, rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000209	        0x4883c07c	                           add rax, 0x7c	        84	frags.c	FUNCTION_5	CALL_4
0x400020d	            0x31ff	                            xor edi, edi	        84	frags.c	FUNCTION_5	CALL_4
0x400020f	          0x4839d0	                            cmp rax, rdx	        84	frags.c	FUNCTION_5	CALL_4
0x4000212	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	        84	frags.c	FUNCTION_5	CALL_4
0x4000219	        0x48894318	             mov qword [rbx + 0x18], rax	        84	frags.c	FUNCTION_5	CALL_4
0x400021d	     0xf8565ffffff	                           jne 0x4000188	        84	frags.c	FUNCTION_5	CALL_4
0x4000223	        0x804b5002	                 or byte [rbx + 0x50], 2	        84	frags.c	FUNCTION_5	CALL_4
0x4000227	      0xe95cffffff	                           jmp 0x4000188	        84	frags.c	FUNCTION_5	CALL_4
0x400022c	         0xf1f4000	                         nop dword [rax]	        84	frags.c	FUNCTION_5	CALL_4
0x4000230	          0x4989c0	                             mov r8, rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000233	        0x48894318	             mov qword [rbx + 0x18], rax	        84	frags.c	FUNCTION_5	CALL_4
0x4000237	      0xe965ffffff	                           jmp 0x40001a1	        84	frags.c	FUNCTION_5	CALL_4
0x400023c	         0xf1f4000	                         nop dword [rax]	        84	frags.c	FUNCTION_5	CALL_4
0x4000240	        0x804f5002	                 or byte [rdi + 0x50], 2	        81	frags.c	FUNCTION_5	CALL_1
0x4000244	      0xe9c2feffff	                           jmp 0x400010b	        81	frags.c	FUNCTION_5	CALL_1
clear_frag_count	CALL,0:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	2
0x40000c0	    0xc70500000000	               mov dword [0x040000ca], 0	        39	frags.c	FUNCTION_2
0x40000ca	              0xc3	                                     ret	        39	frags.c	FUNCTION_2
frag_var_init	CALL,3:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	28
0x4000450	              0x55	                                push rbp	       228	frags.c	FUNCTION_9
0x4000451	              0x53	                                push rbx	       228	frags.c	FUNCTION_9
0x4000452	          0x4889f5	                            mov rbp, rsi	       228	frags.c	FUNCTION_9
0x4000455	        0x4883ec08	                              sub rsp, 8	       228	frags.c	FUNCTION_9
0x4000459	    0x488b1d000000	            mov rbx, qword [0x04000460] 	       229	frags.c	FUNCTION_9
0x4000460	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       234	frags.c	FUNCTION_9
0x4000465	        0x48895318	             mov qword [rbx + 0x18], rdx	       229	frags.c	FUNCTION_9
0x4000469	    0x488b15000000	            mov rdx, qword [0x04000470] 	       241	frags.c	FUNCTION_9	CALL_1
0x4000470	        0x48894330	             mov qword [rbx + 0x30], rax	       234	frags.c	FUNCTION_9
0x4000474	    0x8b0500000000	            mov eax, dword [0x0400047a] 	       241	frags.c	FUNCTION_9	CALL_1
0x400047a	          0x897b5c	             mov dword [rbx + 0x5c], edi	       230	frags.c	FUNCTION_9
0x400047d	        0x488d7b48	                   lea rdi, [rbx + 0x48]	       243	frags.c	FUNCTION_9	CALL_2
0x4000481	          0x894b60	             mov dword [rbx + 0x60], ecx	       231	frags.c	FUNCTION_9
0x4000484	        0x4c894328	              mov qword [rbx + 0x28], r8	       232	frags.c	FUNCTION_9
0x4000488	        0x4c894b20	              mov qword [rbx + 0x20], r9	       233	frags.c	FUNCTION_9
0x400048c	          0x894364	             mov dword [rbx + 0x64], eax	       241	frags.c	FUNCTION_9	CALL_1
0x400048f	    0x488b05000000	            mov rax, qword [0x04000496] 	       241	frags.c	FUNCTION_9	CALL_1
0x4000496	        0x48895370	             mov qword [rbx + 0x70], rdx	       241	frags.c	FUNCTION_9	CALL_1
0x400049a	        0x48894368	             mov qword [rbx + 0x68], rax	       241	frags.c	FUNCTION_9	CALL_1
0x400049e	    0x8b0500000000	            mov eax, dword [0x040004a4] 	       241	frags.c	FUNCTION_9	CALL_1
0x40004a4	          0x894378	             mov dword [rbx + 0x78], eax	       241	frags.c	FUNCTION_9	CALL_1
0x40004a7	      0xe800000000	                          call 0x40004ac	       243	frags.c	FUNCTION_9	CALL_2
0x40004ac	        0x48894340	             mov qword [rbx + 0x40], rax	       243	frags.c	FUNCTION_9	CALL_2
0x40004b0	        0x4883c408	                              add rsp, 8	       246	frags.c	FUNCTION_9
0x40004b4	          0x4889ef	                            mov rdi, rbp	       245	frags.c	FUNCTION_9	CALL_3
0x40004b7	              0x5b	                                 pop rbx	       246	frags.c	FUNCTION_9
0x40004b8	              0x5d	                                 pop rbp	       246	frags.c	FUNCTION_9
0x40004b9	      0xe992fdffff	                        jmp sym.frag_new	       245	frags.c	FUNCTION_9	CALL_3
frag_offset_fixed_p	CALL,0:FOR,0:DO,0:functions,0:IF,5:WHILE,2:SWITCH,0:ELSE,0	43
0x4000790	          0x4c8b0f	                     mov r9, qword [rdi]	       423	frags.c	FUNCTION_20
0x4000793	          0x4c2b0e	                     sub r9, qword [rsi]	       423	frags.c	FUNCTION_20
0x4000796	          0x4839f7	                            cmp rdi, rsi	       424	frags.c	FUNCTION_20	IF_1
0x4000799	          0x4889f8	                            mov rax, rdi	       424	frags.c	FUNCTION_20	IF_1
0x400079c	          0x4d89c8	                              mov r8, r9	       424	frags.c	FUNCTION_20	IF_1
0x400079f	            0x7525	                           jne 0x40007c6	       424	frags.c	FUNCTION_20	IF_1
0x40007a1	            0xeb5d	                           jmp 0x4000800	       424	frags.c	FUNCTION_20	IF_1
0x40007a3	       0xf1f440000	                   nop dword [rax + rax]	       424	frags.c	FUNCTION_20	IF_1
0x40007a8	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       434	frags.c	FUNCTION_20	WHILE_1
0x40007ac	      0x480faf4818	            imul rcx, qword [rax + 0x18]	       434	frags.c	FUNCTION_20	WHILE_1
0x40007b1	        0x48034810	             add rcx, qword [rax + 0x10]	       434	frags.c	FUNCTION_20	WHILE_1
0x40007b5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       435	frags.c	FUNCTION_20	WHILE_1
0x40007b9	          0x4901c8	                             add r8, rcx	       434	frags.c	FUNCTION_20	WHILE_1
0x40007bc	          0x4885c0	                           test rax, rax	       436	frags.c	FUNCTION_20	WHILE_1	IF_2
0x40007bf	            0x7435	                            je 0x40007f6	       436	frags.c	FUNCTION_20	WHILE_1	IF_2
0x40007c1	          0x4839c6	                            cmp rsi, rax	       438	frags.c	FUNCTION_20	WHILE_1	IF_3
0x40007c4	            0x744a	                            je 0x4000810	       438	frags.c	FUNCTION_20	WHILE_1	IF_3
0x40007c6	        0x83785c01	               cmp dword [rax + 0x5c], 1	       432	frags.c	FUNCTION_20	WHILE_1
0x40007ca	            0x74dc	                            je 0x40007a8	       432	frags.c	FUNCTION_20	WHILE_1
0x40007cc	        0x837e5c01	               cmp dword [rsi + 0x5c], 1	       448	frags.c	FUNCTION_20	WHILE_2
0x40007d0	            0x752a	                           jne 0x40007fc	       448	frags.c	FUNCTION_20	WHILE_2
0x40007d2	    0x660f1f440000	                    nop word [rax + rax]	       448	frags.c	FUNCTION_20	WHILE_2
0x40007d8	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       450	frags.c	FUNCTION_20	WHILE_2
0x40007dc	      0x480faf4618	            imul rax, qword [rsi + 0x18]	       450	frags.c	FUNCTION_20	WHILE_2
0x40007e1	        0x48034610	             add rax, qword [rsi + 0x10]	       450	frags.c	FUNCTION_20	WHILE_2
0x40007e5	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	       451	frags.c	FUNCTION_20	WHILE_2
0x40007e9	          0x4929c1	                             sub r9, rax	       450	frags.c	FUNCTION_20	WHILE_2
0x40007ec	          0x4885f6	                           test rsi, rsi	       452	frags.c	FUNCTION_20	WHILE_2	IF_4
0x40007ef	            0x740b	                            je 0x40007fc	       452	frags.c	FUNCTION_20	WHILE_2	IF_4
0x40007f1	          0x4839f7	                            cmp rdi, rsi	       454	frags.c	FUNCTION_20	WHILE_2	IF_5
0x40007f4	            0x740a	                            je 0x4000800	       454	frags.c	FUNCTION_20	WHILE_2	IF_5
0x40007f6	        0x837e5c01	               cmp dword [rsi + 0x5c], 1	       448	frags.c	FUNCTION_20	WHILE_2
0x40007fa	            0x74dc	                            je 0x40007d8	       448	frags.c	FUNCTION_20	WHILE_2
0x40007fc	            0x31c0	                            xor eax, eax	       461	frags.c	FUNCTION_20
0x40007fe	              0xc3	                                     ret	       462	frags.c	FUNCTION_20
0x40007ff	              0x90	                                     nop	       462	frags.c	FUNCTION_20
0x4000800	          0x4c890a	                     mov qword [rdx], r9	       456	frags.c	FUNCTION_20	WHILE_2	IF_5
0x4000803	      0xb801000000	                              mov eax, 1	       457	frags.c	FUNCTION_20	WHILE_2	IF_5
0x4000808	              0xc3	                                     ret	       457	frags.c	FUNCTION_20	WHILE_2	IF_5
0x4000809	     0xf1f80000000	                         nop dword [rax]	       457	frags.c	FUNCTION_20	WHILE_2	IF_5
0x4000810	          0x4c8902	                     mov qword [rdx], r8	       440	frags.c	FUNCTION_20	WHILE_1	IF_3
0x4000813	      0xb801000000	                              mov eax, 1	       441	frags.c	FUNCTION_20	WHILE_1	IF_3
0x4000818	              0xc3	                                     ret	       441	frags.c	FUNCTION_20	WHILE_1	IF_3
frag_room	CALL,1:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	4
0x40005a0	    0x488b15000000	            mov rdx, qword [0x040005a7] 	       301	frags.c	FUNCTION_13	CALL_1
0x40005a7	        0x488b4250	            mov rax, qword [rdx + 0x50] 	       301	frags.c	FUNCTION_13	CALL_1
0x40005ab	        0x482b4248	             sub rax, qword [rdx + 0x48]	       301	frags.c	FUNCTION_13	CALL_1
0x40005af	              0xc3	                                     ret	       302	frags.c	FUNCTION_13
frag_align_code	CALL,1:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	12
0x4000670	        0x4883ec10	                           sub rsp, 0x10	       374	frags.c	FUNCTION_16
0x4000674	            0x89f1	                            mov ecx, esi	       374	frags.c	FUNCTION_16
0x4000676	          0x4c63cf	                          movsxd r9, edi	       377	frags.c	FUNCTION_16	CALL_1
0x4000679	            0x6a00	                                  push 0	       377	frags.c	FUNCTION_16	CALL_1
0x400067b	          0x4531c0	                            xor r8d, r8d	       377	frags.c	FUNCTION_16	CALL_1
0x400067e	      0xba01000000	                              mov edx, 1	       377	frags.c	FUNCTION_16	CALL_1
0x4000683	      0xbeff0f0000	                          mov esi, 0xfff	       377	frags.c	FUNCTION_16	CALL_1
0x4000688	      0xbf03000000	                              mov edi, 3	       377	frags.c	FUNCTION_16	CALL_1
0x400068d	      0xe800000000	                          call 0x4000692	       377	frags.c	FUNCTION_16	CALL_1
0x4000692	          0xc60090	                    mov byte [rax], 0x90	       380	frags.c	FUNCTION_16
0x4000695	        0x4883c418	                           add rsp, 0x18	       381	frags.c	FUNCTION_16
0x4000699	              0xc3	                                     ret	       381	frags.c	FUNCTION_16
frag_align_pattern	CALL,2:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	18
0x4000630	              0x55	                                push rbp	       344	frags.c	FUNCTION_15
0x4000631	              0x53	                                push rbx	       344	frags.c	FUNCTION_15
0x4000632	          0x4889f5	                            mov rbp, rsi	       344	frags.c	FUNCTION_15
0x4000635	          0x4c63cf	                          movsxd r9, edi	       347	frags.c	FUNCTION_15	CALL_1
0x4000638	          0x4889d6	                            mov rsi, rdx	       347	frags.c	FUNCTION_15	CALL_1
0x400063b	      0xbf02000000	                              mov edi, 2	       347	frags.c	FUNCTION_15	CALL_1
0x4000640	        0x4883ec10	                           sub rsp, 0x10	       344	frags.c	FUNCTION_15
0x4000644	          0x4531c0	                            xor r8d, r8d	       347	frags.c	FUNCTION_15	CALL_1
0x4000647	          0x4889d3	                            mov rbx, rdx	       344	frags.c	FUNCTION_15
0x400064a	            0x6a00	                                  push 0	       347	frags.c	FUNCTION_15	CALL_1
0x400064c	      0xe800000000	                          call 0x4000651	       347	frags.c	FUNCTION_15	CALL_1
0x4000651	        0x4883c418	                           add rsp, 0x18	       350	frags.c	FUNCTION_15
0x4000655	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_21	CALL_3
0x4000658	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_21	CALL_3
0x400065b	              0x5b	                                 pop rbx	       350	frags.c	FUNCTION_15
0x400065c	              0x5d	                                 pop rbp	       350	frags.c	FUNCTION_15
0x400065d	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_21	CALL_3
0x4000660	      0xe900000000	                           jmp 0x4000665	        53	string3.h	FUNCTION_21	CALL_3
frag_new	CALL,10:FOR,0:DO,0:functions,0:IF,0:WHILE,0:SWITCH,0:ELSE,0	75
0x4000250	            0x4154	                                push r12	       161	frags.c	FUNCTION_7
0x4000252	              0x55	                                push rbp	       161	frags.c	FUNCTION_7
0x4000253	              0x53	                                push rbx	       161	frags.c	FUNCTION_7
0x4000254	    0x488b1d000000	            mov rbx, qword [0x0400025b] 	       165	frags.c	FUNCTION_7	CALL_1
0x400025b	        0x488b6b08	                mov rbp, qword [rbx + 8]	       165	frags.c	FUNCTION_7	CALL_1
0x400025f	    0x483b2d000000	            cmp rbp, qword [0x04000266] 	       165	frags.c	FUNCTION_7	CALL_1
0x4000266	     0xf8510010000	                           jne 0x400037c	       165	frags.c	FUNCTION_7	CALL_1
0x400026c	    0x48813d000000	               cmp qword [0x04000277], 0	       386	frags.c	FUNCTION_17	IF_1
0x4000277	    0x488b05000000	            mov rax, qword [0x0400027e] 	       387	frags.c	FUNCTION_17	IF_1
0x400027e	            0x740e	                            je 0x400028e	       386	frags.c	FUNCTION_17	IF_1
0x4000280	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	       389	frags.c	FUNCTION_17	CALL_1
0x4000284	        0x488d457c	                   lea rax, [rbp + 0x7c]	       390	frags.c	FUNCTION_17
0x4000288	          0x4829c1	                            sub rcx, rax	       389	frags.c	FUNCTION_17	CALL_1
0x400028b	          0x4889c8	                            mov rax, rcx	       389	frags.c	FUNCTION_17	CALL_1
0x400028e	          0x4829f8	                            sub rax, rdi	       168	frags.c	FUNCTION_7	CALL_2
0x4000291	        0x48894510	            mov qword [rbp + 0x10], rax 	       168	frags.c	FUNCTION_7	CALL_2
0x4000295	          0x8b455c	            mov eax, dword [rbp + 0x5c] 	       170	frags.c	FUNCTION_7	CALL_3
0x4000298	            0x85c0	                           test eax, eax	       170	frags.c	FUNCTION_7	CALL_3
0x400029a	     0xf84c8000000	                            je 0x4000368	       170	frags.c	FUNCTION_7	CALL_3
0x40002a0	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002a4	        0x48394340	            cmp qword [rbx + 0x40], rax 	       174	frags.c	FUNCTION_7	CALL_4
0x40002a8	     0xf849a000000	                            je 0x4000348	       174	frags.c	FUNCTION_7	CALL_4
0x40002ae	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002b2	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002b6	          0x4801d0	                            add rax, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002b9	          0x48f7d2	                                 not rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002bc	          0x4889cf	                            mov rdi, rcx	       174	frags.c	FUNCTION_7	CALL_4
0x40002bf	          0x4821d0	                            and rax, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002c2	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       174	frags.c	FUNCTION_7	CALL_4
0x40002c6	          0x4889c6	                            mov rsi, rax	       174	frags.c	FUNCTION_7	CALL_4
0x40002c9	        0x48894348	             mov qword [rbx + 0x48], rax	       174	frags.c	FUNCTION_7	CALL_4
0x40002cd	          0x4829d6	                            sub rsi, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002d0	          0x4829d7	                            sub rdi, rdx	       174	frags.c	FUNCTION_7	CALL_4
0x40002d3	          0x4839fe	                            cmp rsi, rdi	       174	frags.c	FUNCTION_7	CALL_4
0x40002d6	            0x7760	                            ja 0x4000338	       174	frags.c	FUNCTION_7	CALL_4
0x40002d8	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       180	frags.c	FUNCTION_7	CALL_8
0x40002dc	        0x48894340	             mov qword [rbx + 0x40], rax	       174	frags.c	FUNCTION_7	CALL_4
0x40002e0	      0xe800000000	                          call 0x40002e5	       180	frags.c	FUNCTION_7	CALL_8
0x40002e5	        0x488d7848	                   lea rdi, [rax + 0x48]	       182	frags.c	FUNCTION_7	CALL_9
0x40002e9	          0x4989c4	                            mov r12, rax	       180	frags.c	FUNCTION_7	CALL_8
0x40002ec	    0x488905000000	            mov qword [0x040002f3], rax 	       180	frags.c	FUNCTION_7	CALL_8
0x40002f3	      0xe800000000	                          call 0x40002f8	       182	frags.c	FUNCTION_7	CALL_9
0x40002f8	    0x488b15000000	            mov rdx, qword [0x040002ff] 	       194	frags.c	FUNCTION_7
0x40002ff	      0x4989442440	             mov qword [r12 + 0x40], rax	       182	frags.c	FUNCTION_7	CALL_9
0x4000304	    0x488b05000000	            mov rax, qword [0x0400030b] 	       188	frags.c	FUNCTION_7
0x400030b	        0x48894538	            mov qword [rbp + 0x38], rax 	       188	frags.c	FUNCTION_7
0x400030f	        0x48894308	                mov qword [rbx + 8], rax	       189	frags.c	FUNCTION_7
0x4000313	        0x48895050	             mov qword [rax + 0x50], rdx	       194	frags.c	FUNCTION_7
0x4000317	    0x488b15000000	            mov rdx, qword [0x0400031e] 	       198	frags.c	FUNCTION_7	CALL_10
0x400031e	        0x483b4208	                cmp rax, qword [rdx + 8]	       198	frags.c	FUNCTION_7	CALL_10
0x4000322	            0x7530	                           jne 0x4000354	       198	frags.c	FUNCTION_7	CALL_10
0x4000324	    0x48c740380000	               mov qword [rax + 0x38], 0	       200	frags.c	FUNCTION_7
0x400032c	              0x5b	                                 pop rbx	       201	frags.c	FUNCTION_7
0x400032d	              0x5d	                                 pop rbp	       201	frags.c	FUNCTION_7
0x400032e	            0x415c	                                 pop r12	       201	frags.c	FUNCTION_7
0x4000330	              0xc3	                                     ret	       201	frags.c	FUNCTION_7
0x4000331	     0xf1f80000000	                         nop dword [rax]	       201	frags.c	FUNCTION_7
0x4000338	        0x48894b48	             mov qword [rbx + 0x48], rcx	       174	frags.c	FUNCTION_7	CALL_4
0x400033c	          0x4889c8	                            mov rax, rcx	       174	frags.c	FUNCTION_7	CALL_4
0x400033f	            0xeb97	                           jmp 0x40002d8	       174	frags.c	FUNCTION_7	CALL_4
0x4000341	     0xf1f80000000	                         nop dword [rax]	       174	frags.c	FUNCTION_7	CALL_4
0x4000348	    0x808b80000000	                 or byte [rbx + 0x80], 2	       174	frags.c	FUNCTION_7	CALL_4
0x400034f	      0xe95affffff	                           jmp 0x40002ae	       174	frags.c	FUNCTION_7	CALL_4
0x4000354	      0xba00000000	                              mov edx, 0	       198	frags.c	FUNCTION_7	CALL_10
0x4000359	      0xbec6000000	                           mov esi, 0xc6	       198	frags.c	FUNCTION_7	CALL_10
0x400035e	      0xbf00000000	                              mov edi, 0	       198	frags.c	FUNCTION_7	CALL_10
0x4000363	      0xe800000000	                          call 0x4000368	       198	frags.c	FUNCTION_7	CALL_10
0x4000368	      0xba00000000	                              mov edx, 0	       170	frags.c	FUNCTION_7	CALL_3
0x400036d	      0xbeaa000000	                           mov esi, 0xaa	       170	frags.c	FUNCTION_7	CALL_3
0x4000372	      0xbf00000000	                              mov edi, 0	       170	frags.c	FUNCTION_7	CALL_3
0x4000377	      0xe800000000	                          call 0x400037c	       170	frags.c	FUNCTION_7	CALL_3
0x400037c	      0xba00000000	                              mov edx, 0	       165	frags.c	FUNCTION_7	CALL_1
0x4000381	      0xbea5000000	                           mov esi, 0xa5	       165	frags.c	FUNCTION_7	CALL_1
0x4000386	      0xbf00000000	                              mov edi, 0	       165	frags.c	FUNCTION_7	CALL_1
0x400038b	      0xe800000000	                      call sym.frag_grow	       165	frags.c	FUNCTION_7	CALL_1
frag_align	CALL,1:FOR,0:DO,0:functions,0:IF,2:WHILE,0:SWITCH,0:ELSE,1	35
0x40005b0	    0x48813d000000	               cmp qword [0x040005bb], 0	       314	frags.c	FUNCTION_14	IF_1
0x40005bb	            0x7433	                            je 0x40005f0	       314	frags.c	FUNCTION_14	IF_1
0x40005bd	              0x53	                                push rbx	       313	frags.c	FUNCTION_14
0x40005be	            0x89d1	                            mov ecx, edx	       313	frags.c	FUNCTION_14
0x40005c0	            0x89f3	                            mov ebx, esi	       313	frags.c	FUNCTION_14
0x40005c2	          0x4c63cf	                          movsxd r9, edi	       313	frags.c	FUNCTION_14
0x40005c5	      0xba01000000	                              mov edx, 1	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005ca	          0x4531c0	                            xor r8d, r8d	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005cd	        0x4883ec08	                              sub rsp, 8	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005d1	      0xbe01000000	                              mov esi, 1	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005d6	      0xbf02000000	                              mov edi, 2	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005db	            0x6a00	                                  push 0	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005dd	      0xe800000000	                          call 0x40005e2	       328	frags.c	FUNCTION_14	ELSE_1	CALL_1
0x40005e2	            0x8818	                      mov byte [rax], bl	       330	frags.c	FUNCTION_14	ELSE_1
0x40005e4	              0x58	                                 pop rax	       330	frags.c	FUNCTION_14	ELSE_1
0x40005e5	              0x5a	                                 pop rdx	       330	frags.c	FUNCTION_14	ELSE_1
0x40005e6	              0x5b	                                 pop rbx	       332	frags.c	FUNCTION_14
0x40005e7	            0xf3c3	                                     ret	       332	frags.c	FUNCTION_14
0x40005e9	     0xf1f80000000	                         nop dword [rax]	       332	frags.c	FUNCTION_14
0x40005f0	    0x488b35000000	            mov rsi, qword [0x040005f7] 	       320	frags.c	FUNCTION_14	IF_1
0x40005f7	            0x89f9	                            mov ecx, edi	       319	frags.c	FUNCTION_14	IF_1
0x40005f9	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       319	frags.c	FUNCTION_14	IF_1
0x4000600	          0x48d3e0	                             shl rax, cl	       319	frags.c	FUNCTION_14	IF_1
0x4000603	        0x488d4eff	                      lea rcx, [rsi - 1]	       320	frags.c	FUNCTION_14	IF_1
0x4000607	          0x4829c1	                            sub rcx, rax	       320	frags.c	FUNCTION_14	IF_1
0x400060a	          0x4821c8	                            and rax, rcx	       320	frags.c	FUNCTION_14	IF_1
0x400060d	            0x85d2	                           test edx, edx	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400060f	            0x740e	                            je 0x400061f	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x4000611	          0x4889c1	                            mov rcx, rax	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x4000614	          0x4863d2	                         movsxd rdx, edx	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x4000617	          0x4829f1	                            sub rcx, rsi	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400061a	          0x4839d1	                            cmp rcx, rdx	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400061d	            0x77c8	                            ja 0x40005e7	       321	frags.c	FUNCTION_14	IF_1	IF_2
0x400061f	    0x488905000000	            mov qword [0x04000626], rax 	       322	frags.c	FUNCTION_14	IF_1	IF_2
0x4000626	              0xc3	                                     ret	       322	frags.c	FUNCTION_14	IF_1	IF_2
