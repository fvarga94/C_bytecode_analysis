__glob_pattern_type	ELSE,0:WHILE,0:DO,0:functions,0:FOR,1:CALL,0:IF,3:SWITCH,1	39
0x4000340	           0xfb617	                   movzx edx, byte [rdi]	      1452	glob.c	FUNCTION_14	FOR_1
0x4000343	            0x31c0	                            xor eax, eax	      1452	glob.c	FUNCTION_14	FOR_1
0x4000345	            0x84d2	                             test dl, dl	      1452	glob.c	FUNCTION_14	FOR_1
0x4000347	            0x7460	                            je 0x40003a9	      1452	glob.c	FUNCTION_14	FOR_1
0x4000349	          0x80fa5b	                            cmp dl, 0x5b	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400034c	            0x7452	                            je 0x40003a0	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400034e	            0x7e20	                           jle 0x4000370	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000350	          0x80fa5c	                            cmp dl, 0x5c	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000353	            0x742b	                            je 0x4000380	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000355	          0x80fa5d	                            cmp dl, 0x5d	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000358	            0x7504	                           jne 0x400035e	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400035a	            0xa804	                              test al, 4	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x400035c	            0x751c	                           jne 0x400037a	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x400035e	         0xfb65701	               movzx edx, byte [rdi + 1]	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4000362	        0x4883c701	                              add rdi, 1	      1452	glob.c	FUNCTION_14	FOR_1
0x4000366	            0x84d2	                             test dl, dl	      1452	glob.c	FUNCTION_14	FOR_1
0x4000368	            0x75df	                           jne 0x4000349	      1452	glob.c	FUNCTION_14	FOR_1
0x400036a	            0xf3c3	                                     ret	      1452	glob.c	FUNCTION_14	FOR_1
0x400036c	         0xf1f4000	                         nop dword [rax]	      1452	glob.c	FUNCTION_14	FOR_1
0x4000370	          0x80fa2a	                            cmp dl, 0x2a	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000373	            0x7405	                            je 0x400037a	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000375	          0x80fa3f	                            cmp dl, 0x3f	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000378	            0x75e4	                           jne 0x400035e	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400037a	      0xb801000000	                              mov eax, 1	      1474	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x400037f	              0xc3	                                     ret	      1479	glob.c	FUNCTION_14
0x4000380	            0x85f6	                           test esi, esi	      1460	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000382	         0xfb65701	               movzx edx, byte [rdi + 1]	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4000386	            0x74da	                            je 0x4000362	      1460	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000388	            0x84d2	                             test dl, dl	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x400038a	            0x7408	                            je 0x4000394	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x400038c	         0xfb65702	               movzx edx, byte [rdi + 2]	      1462	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4000390	        0x4883c701	                              add rdi, 1	      1463	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4000394	          0x83c802	                               or eax, 2	      1464	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000397	            0xebc9	                           jmp 0x4000362	      1464	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000399	     0xf1f80000000	                         nop dword [rax]	      1464	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x40003a0	          0x83c804	                               or eax, 4	      1469	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40003a3	         0xfb65701	               movzx edx, byte [rdi + 1]	      1469	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40003a7	            0xebb9	                           jmp 0x4000362	      1470	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x40003a9	            0xf3c3	                                     ret	      1470	glob.c	FUNCTION_14	FOR_1	SWITCH_1
next_brace_sub	ELSE,1:WHILE,1:DO,0:functions,0:FOR,0:CALL,0:IF,4:SWITCH,0	46
0x4000040	          0xc1ee06	                              shr esi, 6	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000043	            0x31c0	                            xor eax, eax	       295	glob.c	FUNCTION_9
0x4000045	          0x83f601	                              xor esi, 1	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000048	          0x83e601	                              and esi, 1	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000050	           0xfb617	                   movzx edx, byte [rdi]	       296	glob.c	FUNCTION_9	WHILE_1
0x4000053	            0x84d2	                             test dl, dl	       296	glob.c	FUNCTION_9	WHILE_1
0x4000055	            0x742b	                            je 0x4000082	       296	glob.c	FUNCTION_9	WHILE_1
0x4000057	          0x4084f6	                           test sil, sil	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x400005a	            0x7405	                            je 0x4000061	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x400005c	          0x80fa5c	                            cmp dl, 0x5c	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x400005f	            0x744f	                            je 0x40000b0	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000061	          0x80fa7d	                            cmp dl, 0x7d	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000064	            0x7422	                            je 0x4000088	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000066	          0x80fa2c	                            cmp dl, 0x2c	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000069	            0x7435	                            je 0x40000a0	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400006b	        0x4883c701	                              add rdi, 1	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400006f	          0x80fa7b	                            cmp dl, 0x7b	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000072	           0xf94c2	                                 sete dl	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000075	           0xfb6d2	                           movzx edx, dl	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000078	          0x4801d0	                            add rax, rdx	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400007b	           0xfb617	                   movzx edx, byte [rdi]	       296	glob.c	FUNCTION_9	WHILE_1
0x400007e	            0x84d2	                             test dl, dl	       296	glob.c	FUNCTION_9	WHILE_1
0x4000080	            0x75d5	                           jne 0x4000057	       296	glob.c	FUNCTION_9	WHILE_1
0x4000082	            0x31c0	                            xor eax, eax	       312	glob.c	FUNCTION_9
0x4000084	              0xc3	                                     ret	       312	glob.c	FUNCTION_9
0x4000085	           0xf1f00	                         nop dword [rax]	       312	glob.c	FUNCTION_9
0x4000088	          0x4885c0	                           test rax, rax	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400008b	        0x488d50ff	                      lea rdx, [rax - 1]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400008f	            0x742f	                            je 0x40000c0	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000091	        0x4883c701	                              add rdi, 1	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000095	          0x4889d0	                            mov rax, rdx	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000098	            0xebb6	                           jmp 0x4000050	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400009a	    0x660f1f440000	                    nop word [rax + rax]	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x40000a0	          0x4885c0	                           test rax, rax	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40000a3	            0x741b	                            je 0x40000c0	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40000a5	        0x4883c701	                              add rdi, 1	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x40000a9	            0xeba5	                           jmp 0x4000050	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x40000ab	       0xf1f440000	                   nop dword [rax + rax]	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x40000b0	        0x807f0100	                   cmp byte [rdi + 1], 0	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x40000b4	            0x74cc	                            je 0x4000082	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x40000b6	        0x4883c702	                              add rdi, 2	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40000ba	            0xeb94	                           jmp 0x4000050	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40000bc	         0xf1f4000	                         nop dword [rax]	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40000c0	          0x4889f8	                            mov rax, rdi	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x40000c3	              0xc3	                                     ret	       312	glob.c	FUNCTION_9
prefix_array	ELSE,2:WHILE,1:DO,0:functions,0:FOR,1:CALL,7:IF,5:SWITCH,0	78
0x4000110	            0x4157	                                push r15	      1391	glob.c	FUNCTION_13
0x4000112	            0x4156	                                push r14	      1391	glob.c	FUNCTION_13
0x4000114	            0x4155	                                push r13	      1391	glob.c	FUNCTION_13
0x4000116	            0x4154	                                push r12	      1391	glob.c	FUNCTION_13
0x4000118	          0x4989f4	                            mov r12, rsi	      1391	glob.c	FUNCTION_13
0x400011b	              0x55	                                push rbp	      1391	glob.c	FUNCTION_13
0x400011c	              0x53	                                push rbx	      1391	glob.c	FUNCTION_13
0x400011d	        0x4883ec28	                           sub rsp, 0x28	      1391	glob.c	FUNCTION_13
0x4000121	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1391	glob.c	FUNCTION_13
0x4000126	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1391	glob.c	FUNCTION_13
0x400012b	      0xe800000000	                          call 0x4000130	      1393	glob.c	FUNCTION_13	CALL_1
0x4000130	        0x4883f801	                              cmp rax, 1	      1401	glob.c	FUNCTION_13	IF_1
0x4000134	      0x4889442408	                mov qword [rsp + 8], rax	      1393	glob.c	FUNCTION_13	CALL_1
0x4000139	     0xf84c9000000	                            je 0x4000208	      1401	glob.c	FUNCTION_13	IF_1
0x400013f	          0x4531f6	                          xor r14d, r14d	      1420	glob.c	FUNCTION_13	FOR_1
0x4000142	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1420	glob.c	FUNCTION_13	FOR_1
0x4000148	      0x488b442408	                mov rax, qword [rsp + 8]	      1420	glob.c	FUNCTION_13	FOR_1
0x400014d	        0x4c8d7801	                      lea r15, [rax + 1]	      1420	glob.c	FUNCTION_13	FOR_1
0x4000151	            0x7548	                           jne 0x400019b	      1420	glob.c	FUNCTION_13	FOR_1
0x4000153	      0xe998000000	                           jmp 0x40001f0	      1420	glob.c	FUNCTION_13	FOR_1
0x4000158	     0xf1f84000000	                   nop dword [rax + rax]	      1420	glob.c	FUNCTION_13	FOR_1
0x4000160	      0x488b542408	                mov rdx, qword [rsp + 8]	        67	string3.h	FUNCTION_20	CALL_3
0x4000165	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        67	string3.h	FUNCTION_20	CALL_3
0x400016a	          0x4889c7	                            mov rdi, rax	        67	string3.h	FUNCTION_20	CALL_3
0x400016d	      0xe800000000	                          call 0x4000172	        67	string3.h	FUNCTION_20	CALL_3
0x4000172	        0x488d7801	                      lea rdi, [rax + 1]	        67	string3.h	FUNCTION_20	CALL_3
0x4000176	          0x4889da	                            mov rdx, rbx	        67	string3.h	FUNCTION_20	CALL_3
0x4000179	          0x4889ee	                            mov rsi, rbp	        67	string3.h	FUNCTION_20	CALL_3
0x400017c	          0xc6002f	                    mov byte [rax], 0x2f	      1433	glob.c	FUNCTION_13	FOR_1
0x400017f	      0xe800000000	                          call 0x4000184	        67	string3.h	FUNCTION_20	CALL_3
0x4000184	          0x4889ef	                            mov rdi, rbp	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x4000187	      0xe800000000	                          call 0x400018c	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x400018c	        0x4f892cf4	            mov qword [r12 + r14*8], r13	      1437	glob.c	FUNCTION_13	FOR_1
0x4000190	        0x4983c601	                              add r14, 1	      1420	glob.c	FUNCTION_13	FOR_1
0x4000194	      0x4c39742410	            cmp qword [rsp + 0x10], r14 	      1420	glob.c	FUNCTION_13	FOR_1
0x4000199	            0x7455	                            je 0x40001f0	      1420	glob.c	FUNCTION_13	FOR_1
0x400019b	        0x4b8b2cf4	            mov rbp, qword [r12 + r14*8]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x400019f	          0x4889ef	                            mov rdi, rbp	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x40001a2	      0xe800000000	                          call 0x40001a7	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x40001a7	        0x488d5801	                      lea rbx, [rax + 1]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x40001ab	        0x4a8d3c3b	                    lea rdi, [rbx + r15]	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40001af	      0xe800000000	                          call 0x40001b4	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40001b4	          0x4885c0	                           test rax, rax	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x40001b7	          0x4989c5	                            mov r13, rax	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x40001ba	            0x75a4	                           jne 0x4000160	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x40001bc	            0xeb0f	                           jmp 0x40001cd	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x40001be	            0x6690	                                     nop	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x40001c0	        0x4983ee01	                              sub r14, 1	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40001c4	        0x4b8b3cf4	            mov rdi, qword [r12 + r14*8]	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40001c8	      0xe800000000	                          call 0x40001cd	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x40001cd	          0x4d85f6	                           test r14, r14	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x40001d0	            0x75ee	                           jne 0x40001c0	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x40001d2	        0x4883c428	                           add rsp, 0x28	      1441	glob.c	FUNCTION_13
0x40001d6	      0xb801000000	                              mov eax, 1	      1428	glob.c	FUNCTION_13	FOR_1	IF_5
0x40001db	              0x5b	                                 pop rbx	      1441	glob.c	FUNCTION_13
0x40001dc	              0x5d	                                 pop rbp	      1441	glob.c	FUNCTION_13
0x40001dd	            0x415c	                                 pop r12	      1441	glob.c	FUNCTION_13
0x40001df	            0x415d	                                 pop r13	      1441	glob.c	FUNCTION_13
0x40001e1	            0x415e	                                 pop r14	      1441	glob.c	FUNCTION_13
0x40001e3	            0x415f	                                 pop r15	      1441	glob.c	FUNCTION_13
0x40001e5	              0xc3	                                     ret	      1441	glob.c	FUNCTION_13
0x40001e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1441	glob.c	FUNCTION_13
0x40001f0	        0x4883c428	                           add rsp, 0x28	      1441	glob.c	FUNCTION_13
0x40001f4	            0x31c0	                            xor eax, eax	      1440	glob.c	FUNCTION_13
0x40001f6	              0x5b	                                 pop rbx	      1441	glob.c	FUNCTION_13
0x40001f7	              0x5d	                                 pop rbp	      1441	glob.c	FUNCTION_13
0x40001f8	            0x415c	                                 pop r12	      1441	glob.c	FUNCTION_13
0x40001fa	            0x415d	                                 pop r13	      1441	glob.c	FUNCTION_13
0x40001fc	            0x415e	                                 pop r14	      1441	glob.c	FUNCTION_13
0x40001fe	            0x415f	                                 pop r15	      1441	glob.c	FUNCTION_13
0x4000200	              0xc3	                                     ret	      1441	glob.c	FUNCTION_13
0x4000201	     0xf1f80000000	                         nop dword [rax]	      1441	glob.c	FUNCTION_13
0x4000208	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1441	glob.c	FUNCTION_13
0x400020d	          0x80382f	                    cmp byte [rax], 0x2f	      1441	glob.c	FUNCTION_13
0x4000210	           0xf95c0	                                setne al	      1441	glob.c	FUNCTION_13
0x4000213	           0xfb6c0	                           movzx eax, al	      1441	glob.c	FUNCTION_13
0x4000216	      0x4889442408	                mov qword [rsp + 8], rax	      1441	glob.c	FUNCTION_13
0x400021b	      0xe91fffffff	                           jmp 0x400013f	      1441	glob.c	FUNCTION_13
collated_compare	ELSE,0:WHILE,0:DO,0:functions,0:FOR,0:CALL,1:IF,3:SWITCH,0	17
0x40000d0	          0x488b3f	                    mov rdi, qword [rdi]	      1372	glob.c	FUNCTION_12
0x40000d3	          0x488b36	                    mov rsi, qword [rsi]	      1373	glob.c	FUNCTION_12
0x40000d6	          0x4839f7	                            cmp rdi, rsi	      1375	glob.c	FUNCTION_12	IF_1
0x40000d9	            0x7415	                            je 0x40000f0	      1375	glob.c	FUNCTION_12	IF_1
0x40000db	          0x4885ff	                           test rdi, rdi	      1377	glob.c	FUNCTION_12	IF_2
0x40000de	            0x7418	                            je 0x40000f8	      1377	glob.c	FUNCTION_12	IF_2
0x40000e0	          0x4885f6	                           test rsi, rsi	      1379	glob.c	FUNCTION_12	IF_3
0x40000e3	            0x7419	                            je 0x40000fe	      1379	glob.c	FUNCTION_12	IF_3
0x40000e5	      0xe900000000	                           jmp 0x40000ea	      1381	glob.c	FUNCTION_12	CALL_1
0x40000ea	    0x660f1f440000	                    nop word [rax + rax]	      1381	glob.c	FUNCTION_12	CALL_1
0x40000f0	            0x31c0	                            xor eax, eax	      1376	glob.c	FUNCTION_12	IF_1
0x40000f2	              0xc3	                                     ret	      1376	glob.c	FUNCTION_12	IF_1
0x40000f3	       0xf1f440000	                   nop dword [rax + rax]	      1376	glob.c	FUNCTION_12	IF_1
0x40000f8	      0xb801000000	                              mov eax, 1	      1378	glob.c	FUNCTION_12	IF_2
0x40000fd	              0xc3	                                     ret	      1378	glob.c	FUNCTION_12	IF_2
0x40000fe	      0xb8ffffffff	                     mov eax, 0xffffffff	      1380	glob.c	FUNCTION_12	IF_3
0x4000103	              0xc3	                                     ret	      1382	glob.c	FUNCTION_12
