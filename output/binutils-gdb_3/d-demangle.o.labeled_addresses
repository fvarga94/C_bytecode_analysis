dlang_parse_qualified	SWITCH,0:functions,0:CALL,15:FOR,0:DO,1:WHILE,1:IF,4:ELSE,0	157
0x4001490	            0x4157	                                push r15	      1414	d-demangle.c	FUNCTION_28
0x4001492	            0x4156	                                push r14	      1414	d-demangle.c	FUNCTION_28
0x4001494	            0x4155	                                push r13	      1414	d-demangle.c	FUNCTION_28
0x4001496	            0x4154	                                push r12	      1414	d-demangle.c	FUNCTION_28
0x4001498	          0x4189d5	                           mov r13d, edx	      1414	d-demangle.c	FUNCTION_28
0x400149b	              0x55	                                push rbp	      1414	d-demangle.c	FUNCTION_28
0x400149c	              0x53	                                push rbx	      1414	d-demangle.c	FUNCTION_28
0x400149d	          0x4889fd	                            mov rbp, rdi	      1414	d-demangle.c	FUNCTION_28
0x40014a0	          0x4889f3	                            mov rbx, rsi	      1414	d-demangle.c	FUNCTION_28
0x40014a3	          0x4531e4	                          xor r12d, r12d	      1414	d-demangle.c	FUNCTION_28
0x40014a6	        0x4883ec08	                              sub rsp, 8	      1414	d-demangle.c	FUNCTION_28
0x40014aa	    0x660f1f440000	                    nop word [rax + rax]	      1414	d-demangle.c	FUNCTION_28
0x40014b0	          0x4d85e4	                           test r12, r12	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x40014b3	            0x7417	                            je 0x40014cc	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x40014b5	      0xbe00000000	                              mov esi, 0	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x40014ba	          0x4889ef	                            mov rdi, rbp	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x40014bd	      0xe87eecffff	                  call sym.string_append	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x40014c2	            0xeb08	                           jmp 0x40014cc	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x40014c4	         0xf1f4000	                         nop dword [rax]	      1431	d-demangle.c	FUNCTION_28	DO_1	CALL_1
0x40014c8	        0x4883c301	                              add rbx, 1	      1435	d-demangle.c	FUNCTION_28	DO_1
0x40014cc	          0x803b30	                    cmp byte [rbx], 0x30	      1434	d-demangle.c	FUNCTION_28	DO_1
0x40014cf	            0x74f7	                            je 0x40014c8	      1434	d-demangle.c	FUNCTION_28	DO_1
0x40014d1	          0x4889de	                            mov rsi, rbx	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x40014d4	          0x4489ea	                           mov edx, r13d	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x40014d7	          0x4889ef	                            mov rdi, rbp	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x40014da	      0xe841faffff	               call sym.dlang_identifier	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x40014df	          0x4885c0	                           test rax, rax	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40014e2	          0x4889c3	                            mov rbx, rax	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x40014e5	     0xf84ea000000	                            je 0x40015d5	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40014eb	           0xfb600	                   movzx eax, byte [rax]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40014ee	            0x3c4d	                            cmp al, 0x4d	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40014f0	     0xf84fa000000	                            je 0x40015f0	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40014f6	          0x8d48ba	                   lea ecx, [rax - 0x46]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40014f9	          0x80f913	                            cmp cl, 0x13	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x40014fc	     0xf87c9000000	                            ja 0x40015cb	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001502	      0xba01000000	                              mov edx, 1	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001507	          0x48d3e2	                             shl rdx, cl	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400150a	    0xf7c201900b00	                       test edx, 0xb9001	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001510	     0xf84b5000000	                            je 0x40015cb	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4001516	        0x488b4500	                    mov rax, qword [rbp]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400151a	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400151e	          0x4939c7	                            cmp r15, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001521	     0xf8557010000	                           jne 0x400167e	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001527	          0x4889de	                            mov rsi, rbx	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x400152a	          0x4889ef	                            mov rdi, rbp	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x400152d	          0x4531ff	                          xor r15d, r15d	       103	d-demangle.c	FUNCTION_4	IF_1
0x4001530	      0xe82bedffff	          call sym.dlang_call_convention	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x4001535	          0x4889ef	                            mov rdi, rbp	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001538	          0x4889c6	                            mov rsi, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x400153b	      0xe8e0edffff	               call sym.dlang_attributes	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001540	        0x488b4d00	                    mov rcx, qword [rbp]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001544	        0x488b5508	                mov rdx, qword [rbp + 8]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001548	          0x4989c6	                            mov r14, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x400154b	          0x4839d1	                            cmp rcx, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x400154e	            0x740b	                            je 0x400155b	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001550	            0x29ca	                            sub edx, ecx	       105	d-demangle.c	FUNCTION_4
0x4001552	          0x4139d7	                           cmp r15d, edx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4001555	     0xf8805010000	                            js 0x4001660	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400155b	      0xbe00000000	                              mov esi, 0	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4001560	          0x4889ef	                            mov rdi, rbp	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4001563	      0xe8d8ebffff	                  call sym.string_append	      1467	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_10
0x4001568	          0x4c89f6	                            mov rsi, r14	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x400156b	          0x4889ef	                            mov rdi, rbp	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x400156e	      0xe89d080000	            call sym.dlang_function_args	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4001573	      0xbe00000000	                              mov esi, 0	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4001578	          0x4989c6	                            mov r14, rax	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x400157b	          0x4889ef	                            mov rdi, rbp	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x400157e	      0xe8bdebffff	                  call sym.string_append	      1469	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_12
0x4001583	          0x4d85f6	                           test r14, r14	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001586	            0x7420	                            je 0x40015a8	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001588	        0x410fb616	                   movzx edx, byte [r14]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x400158c	    0xf68412000000	                test byte [rdx + rdx], 4	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001594	            0x7412	                            je 0x40015a8	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001596	          0x4c89f3	                            mov rbx, r14	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4001599	        0x4983c401	                              add r12, 1	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x400159d	      0xe90effffff	                           jmp 0x40014b0	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40015a2	    0x660f1f440000	                    nop word [rax + rax]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40015a8	        0x488b4d08	                mov rcx, qword [rbp + 8]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40015ac	        0x488b4500	                    mov rax, qword [rbp]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x40015b0	            0x89ca	                            mov edx, ecx	       105	d-demangle.c	FUNCTION_4
0x40015b2	            0x29c2	                            sub edx, eax	       105	d-demangle.c	FUNCTION_4
0x40015b4	          0x4839c8	                            cmp rax, rcx	       105	d-demangle.c	FUNCTION_4
0x40015b7	      0xb900000000	                              mov ecx, 0	       105	d-demangle.c	FUNCTION_4
0x40015bc	           0xf44d1	                          cmove edx, ecx	       105	d-demangle.c	FUNCTION_4
0x40015bf	          0x4139d7	                           cmp r15d, edx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40015c2	     0xf88a7000000	                            js 0x400166f	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40015c8	           0xfb603	                   movzx eax, byte [rbx]	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40015cb	    0xf68400000000	                test byte [rax + rax], 4	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40015d3	            0x75c4	                           jne 0x4001599	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x40015d5	        0x4883c408	                              add rsp, 8	      1482	d-demangle.c	FUNCTION_28
0x40015d9	          0x4889d8	                            mov rax, rbx	      1482	d-demangle.c	FUNCTION_28
0x40015dc	              0x5b	                                 pop rbx	      1482	d-demangle.c	FUNCTION_28
0x40015dd	              0x5d	                                 pop rbp	      1482	d-demangle.c	FUNCTION_28
0x40015de	            0x415c	                                 pop r12	      1482	d-demangle.c	FUNCTION_28
0x40015e0	            0x415d	                                 pop r13	      1482	d-demangle.c	FUNCTION_28
0x40015e2	            0x415e	                                 pop r14	      1482	d-demangle.c	FUNCTION_28
0x40015e4	            0x415f	                                 pop r15	      1482	d-demangle.c	FUNCTION_28
0x40015e6	              0xc3	                                     ret	      1482	d-demangle.c	FUNCTION_28
0x40015e7	    0x660f1f840000	                    nop word [rax + rax]	      1482	d-demangle.c	FUNCTION_28
0x40015f0	        0x488b4500	                    mov rax, qword [rbp]	      1482	d-demangle.c	FUNCTION_28
0x40015f4	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      1482	d-demangle.c	FUNCTION_28
0x40015f8	          0x4939c7	                            cmp r15, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x40015fb	     0xf8498000000	                            je 0x4001699	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001601	        0x488d7301	                      lea rsi, [rbx + 1]	      1451	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x4001605	          0x4889ef	                            mov rdi, rbp	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4001608	          0x4129c7	                           sub r15d, eax	       105	d-demangle.c	FUNCTION_4
0x400160b	      0xe870ebffff	           call sym.dlang_type_modifiers	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4001610	        0x488b5500	                    mov rdx, qword [rbp]	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4001614	          0x4889c6	                            mov rsi, rax	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x4001617	        0x488b4508	                mov rax, qword [rbp + 8]	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x400161b	          0x4839c2	                            cmp rdx, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x400161e	            0x7466	                            je 0x4001686	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001620	            0x29d0	                            sub eax, edx	       105	d-demangle.c	FUNCTION_4
0x4001622	          0x4139c7	                           cmp r15d, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4001625	            0x7866	                            js 0x400168d	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4001627	          0x4889ef	                            mov rdi, rbp	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x400162a	      0xe831ecffff	          call sym.dlang_call_convention	      1463	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_7
0x400162f	          0x4889ef	                            mov rdi, rbp	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001632	          0x4889c6	                            mov rsi, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001635	      0xe8e6ecffff	               call sym.dlang_attributes	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x400163a	        0x488b4d00	                    mov rcx, qword [rbp]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x400163e	        0x488b5508	                mov rdx, qword [rbp + 8]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001642	          0x4989c6	                            mov r14, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4001645	          0x4839d1	                            cmp rcx, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001648	     0xf8502ffffff	                           jne 0x4001550	       101	d-demangle.c	FUNCTION_4	IF_1
0x400164e	            0x31d2	                            xor edx, edx	       103	d-demangle.c	FUNCTION_4	IF_1
0x4001650	          0x4139d7	                           cmp r15d, edx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4001653	     0xf8902ffffff	                           jns 0x400155b	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4001659	     0xf1f80000000	                         nop dword [rax]	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4001660	          0x4963d7	                        movsxd rdx, r15d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001663	          0x4801d1	                            add rcx, rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001666	        0x48894d08	                mov qword [rbp + 8], rcx	       113	d-demangle.c	FUNCTION_5	IF_1
0x400166a	      0xe9ecfeffff	                           jmp 0x400155b	       113	d-demangle.c	FUNCTION_5	IF_1
0x400166f	          0x4d63ff	                        movsxd r15, r15d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001672	          0x4c01f8	                            add rax, r15	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001675	        0x48894508	                mov qword [rbp + 8], rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001679	      0xe94affffff	                           jmp 0x40015c8	       113	d-demangle.c	FUNCTION_5	IF_1
0x400167e	          0x4129c7	                           sub r15d, eax	       105	d-demangle.c	FUNCTION_4
0x4001681	          0x4889de	                            mov rsi, rbx	       105	d-demangle.c	FUNCTION_4
0x4001684	            0xeba1	                           jmp 0x4001627	       105	d-demangle.c	FUNCTION_4
0x4001686	            0x31c0	                            xor eax, eax	       103	d-demangle.c	FUNCTION_4	IF_1
0x4001688	          0x4139c7	                           cmp r15d, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400168b	            0x799a	                           jns 0x4001627	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400168d	          0x4963c7	                        movsxd rax, r15d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001690	          0x4801c2	                            add rdx, rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001693	        0x48895508	                mov qword [rbp + 8], rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001697	            0xeb8e	                           jmp 0x4001627	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001699	        0x488d7301	                      lea rsi, [rbx + 1]	      1451	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3
0x400169d	          0x4889ef	                            mov rdi, rbp	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40016a0	          0x4531ff	                          xor r15d, r15d	       103	d-demangle.c	FUNCTION_4	IF_1
0x40016a3	      0xe8d8eaffff	           call sym.dlang_type_modifiers	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40016a8	        0x488b5500	                    mov rdx, qword [rbp]	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40016ac	          0x4889c6	                            mov rsi, rax	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40016af	        0x488b4508	                mov rax, qword [rbp + 8]	      1452	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_3	CALL_5
0x40016b3	          0x4839c2	                            cmp rdx, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x40016b6	     0xf8564ffffff	                           jne 0x4001620	       101	d-demangle.c	FUNCTION_4	IF_1
0x40016bc	      0xe966ffffff	                           jmp 0x4001627	       101	d-demangle.c	FUNCTION_4	IF_1
dlang_type	SWITCH,2:functions,0:CALL,69:FOR,0:DO,0:WHILE,1:IF,4:ELSE,2	411
0x40016d0	            0x4155	                                push r13	       532	d-demangle.c	FUNCTION_18
0x40016d2	            0x4154	                                push r12	       532	d-demangle.c	FUNCTION_18
0x40016d4	              0x55	                                push rbp	       532	d-demangle.c	FUNCTION_18
0x40016d5	              0x53	                                push rbx	       532	d-demangle.c	FUNCTION_18
0x40016d6	        0x4883ec28	                           sub rsp, 0x28	       532	d-demangle.c	FUNCTION_18
0x40016da	    0x64488b042528	                mov rax, qword fs:[0x28]	       532	d-demangle.c	FUNCTION_18
0x40016e3	      0x4889442418	             mov qword [rsp + 0x18], rax	       532	d-demangle.c	FUNCTION_18
0x40016e8	            0x31c0	                            xor eax, eax	       532	d-demangle.c	FUNCTION_18
0x40016ea	          0x4885f6	                           test rsi, rsi	       533	d-demangle.c	FUNCTION_18	IF_1
0x40016ed	            0x7421	                            je 0x4001710	       533	d-demangle.c	FUNCTION_18	IF_1
0x40016ef	           0xfb606	                   movzx eax, byte [rsi]	       533	d-demangle.c	FUNCTION_18	IF_1
0x40016f2	            0x84c0	                             test al, al	       533	d-demangle.c	FUNCTION_18	IF_1
0x40016f4	            0x741a	                            je 0x4001710	       533	d-demangle.c	FUNCTION_18	IF_1
0x40016f6	          0x83e841	                           sub eax, 0x41	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40016f9	            0x3c39	                            cmp al, 0x39	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40016fb	            0x7713	                            ja 0x4001710	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40016fd	           0xfb6c0	                           movzx eax, al	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001700	          0x4889fd	                            mov rbp, rdi	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001703	    0xff24c5000000	                       jmp qword [rax*8]	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x400170a	    0x660f1f440000	                    nop word [rax + rax]	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001710	            0x31c0	                            xor eax, eax	       774	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001712	    0x660f1f440000	                    nop word [rax + rax]	       774	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001718	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       779	d-demangle.c	FUNCTION_18
0x400171d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       779	d-demangle.c	FUNCTION_18
0x4001726	     0xf85df060000	                           jne 0x4001e0b	       779	d-demangle.c	FUNCTION_18
0x400172c	        0x4883c428	                           add rsp, 0x28	       779	d-demangle.c	FUNCTION_18
0x4001730	              0x5b	                                 pop rbx	       779	d-demangle.c	FUNCTION_18
0x4001731	              0x5d	                                 pop rbp	       779	d-demangle.c	FUNCTION_18
0x4001732	            0x415c	                                 pop r12	       779	d-demangle.c	FUNCTION_18
0x4001734	            0x415d	                                 pop r13	       779	d-demangle.c	FUNCTION_18
0x4001736	              0xc3	                                     ret	       779	d-demangle.c	FUNCTION_18
0x4001737	    0x660f1f840000	                    nop word [rax + rax]	       779	d-demangle.c	FUNCTION_18
0x4001740	          0x4889ef	                            mov rdi, rbp	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001743	      0xe8a8080000	            call sym.dlang_function_type	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001748	      0xbe00000000	                              mov esi, 0	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x400174d	          0x4889c3	                            mov rbx, rax	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4001750	          0x4889ef	                            mov rdi, rbp	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x4001753	      0xe8e8e9ffff	                  call sym.string_append	       634	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_35
0x4001758	          0x4889d8	                            mov rax, rbx	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x400175b	            0xebbb	                           jmp 0x4001718	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x400175d	           0xf1f00	                         nop dword [rax]	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001760	        0x4883c601	                              add rsi, 1	       647	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001764	          0x4889e7	                            mov rdi, rsp	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x4001767	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4001770	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4001779	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x4001781	      0xe8fae9ffff	           call sym.dlang_type_modifiers	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x4001786	        0x488b0c24	                    mov rcx, qword [rsp]	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x400178a	      0x488b542408	                mov rdx, qword [rsp + 8]	       650	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_38
0x400178f	          0x4839d1	                            cmp rcx, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001792	     0xf8424060000	                            je 0x4001dbc	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001798	          0x4829ca	                            sub rdx, rcx	       105	d-demangle.c	FUNCTION_4
0x400179b	          0x4889c6	                            mov rsi, rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x400179e	          0x4889ef	                            mov rdi, rbp	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40017a1	          0x4989d4	                            mov r12, rdx	       105	d-demangle.c	FUNCTION_4
0x40017a4	      0xe847080000	            call sym.dlang_function_type	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40017a9	          0x4889ef	                            mov rdi, rbp	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40017ac	      0xbe00000000	                              mov esi, 0	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40017b1	          0x4889c3	                            mov rbx, rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x40017b4	      0xe887e9ffff	                  call sym.string_append	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x40017b9	          0x4585e4	                         test r12d, r12d	       129	d-demangle.c	FUNCTION_7	IF_1
0x40017bc	        0x488b3c24	                    mov rdi, qword [rsp]	       655	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_42
0x40017c0	            0x7412	                            je 0x40017d4	       129	d-demangle.c	FUNCTION_7	IF_1
0x40017c2	          0x4889fe	                            mov rsi, rdi	       129	d-demangle.c	FUNCTION_7	IF_1
0x40017c5	          0x4489e2	                           mov edx, r12d	       129	d-demangle.c	FUNCTION_7	IF_1
0x40017c8	          0x4889ef	                            mov rdi, rbp	       129	d-demangle.c	FUNCTION_7	IF_1
0x40017cb	      0xe8d0ecffff	          call sym.string_appendn.part.5	       129	d-demangle.c	FUNCTION_7	IF_1
0x40017d0	        0x488b3c24	                    mov rdi, qword [rsp]	       129	d-demangle.c	FUNCTION_7	IF_1
0x40017d4	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x40017d7	            0x7405	                            je 0x40017de	        85	d-demangle.c	FUNCTION_2	IF_1
0x40017d9	      0xe800000000	                          call 0x40017de	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40017de	          0x4889d8	                            mov rax, rbx	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40017e1	      0xe932ffffff	                           jmp 0x4001718	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40017e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40017f0	        0x4883c601	                              add rsi, 1	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40017f4	      0xba02000000	                              mov edx, 2	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40017f9	      0xe892fcffff	          call sym.dlang_parse_qualified	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40017fe	      0xe915ffffff	                           jmp 0x4001718	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x4001803	       0xf1f440000	                   nop dword [rax + rax]	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x4001808	        0x488d7e01	                      lea rdi, [rsi + 1]	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x400180c	          0x4889e6	                            mov rsi, rsp	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x400180f	      0xe82ce8ffff	                   call sym.dlang_number	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x4001814	          0x4885c0	                           test rax, rax	      1492	d-demangle.c	FUNCTION_29	IF_1
0x4001817	          0x4889c3	                            mov rbx, rax	      1491	d-demangle.c	FUNCTION_29	CALL_1
0x400181a	     0xf84f0feffff	                            je 0x4001710	      1492	d-demangle.c	FUNCTION_29	IF_1
0x4001820	      0xbe00000000	                              mov esi, 0	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4001825	          0x4889ef	                            mov rdi, rbp	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4001828	      0xe813e9ffff	                  call sym.string_append	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x400182d	        0x488b1424	                    mov rdx, qword [rsp]	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4001831	     0xf1f80000000	                         nop dword [rax]	      1495	d-demangle.c	FUNCTION_29	CALL_2
0x4001838	        0x488d4aff	                      lea rcx, [rdx - 1]	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x400183c	          0x4885d2	                           test rdx, rdx	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x400183f	        0x48890c24	                    mov qword [rsp], rcx	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4001843	     0xf84a6000000	                            je 0x40018ef	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x4001849	          0x4889de	                            mov rsi, rbx	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x400184c	          0x4889ef	                            mov rdi, rbp	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x400184f	      0xe87cfeffff	                     call sym.dlang_type	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x4001854	        0x488b1424	                    mov rdx, qword [rsp]	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x4001858	          0x4889c3	                            mov rbx, rax	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x400185b	          0x4885d2	                           test rdx, rdx	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x400185e	            0x74d8	                            je 0x4001838	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x4001860	      0xbe00000000	                              mov esi, 0	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4001865	          0x4889ef	                            mov rdi, rbp	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4001868	      0xe8d3e8ffff	                  call sym.string_append	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x400186d	        0x488b1424	                    mov rdx, qword [rsp]	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4001871	            0xebc5	                           jmp 0x4001838	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4001873	       0xf1f440000	                   nop dword [rax + rax]	      1501	d-demangle.c	FUNCTION_29	WHILE_1	CALL_4
0x4001878	        0x4883c601	                              add rsi, 1	       577	d-demangle.c	FUNCTION_18	SWITCH_1
0x400187c	      0xe84ffeffff	                     call sym.dlang_type	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4001881	      0xbe00000000	                              mov esi, 0	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4001886	          0x4889c3	                            mov rbx, rax	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4001889	          0x4889ef	                            mov rdi, rbp	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x400188c	      0xe8afe8ffff	                  call sym.string_append	       579	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_17
0x4001891	          0x4889d8	                            mov rax, rbx	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001894	      0xe97ffeffff	                           jmp 0x4001718	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001899	     0xf1f80000000	                         nop dword [rax]	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x40018a0	         0xfb64601	               movzx eax, byte [rsi + 1]	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40018a4	            0x3c69	                            cmp al, 0x69	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40018a6	     0xf84da040000	                            je 0x4001d86	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40018ac	            0x3c6b	                            cmp al, 0x6b	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40018ae	     0xf855cfeffff	                           jne 0x4001710	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40018b4	        0x488d5e02	                      lea rbx, [rsi + 2]	       770	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40018b8	      0xbe00000000	                              mov esi, 0	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x40018bd	      0xe87ee8ffff	                  call sym.string_append	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x40018c2	      0xe917ffffff	                           jmp 0x40017de	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x40018c7	    0x660f1f840000	                    nop word [rax + rax]	       771	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_69
0x40018d0	        0x488d5e01	                      lea rbx, [rsi + 1]	       551	d-demangle.c	FUNCTION_18	SWITCH_1
0x40018d4	      0xbe00000000	                              mov esi, 0	       552	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_7
0x40018d9	          0x4889ef	                            mov rdi, rbp	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x40018dc	      0xe85fe8ffff	                  call sym.string_append	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x40018e1	          0x4889de	                            mov rsi, rbx	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x40018e4	          0x4889ef	                            mov rdi, rbp	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x40018e7	      0xe8e4fdffff	                     call sym.dlang_type	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x40018ec	          0x4889c3	                            mov rbx, rax	       547	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_5
0x40018ef	      0xbe00000000	                              mov esi, 0	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x40018f4	          0x4889ef	                            mov rdi, rbp	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x40018f7	      0xe844e8ffff	                  call sym.string_append	       548	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_6
0x40018fc	          0x4889d8	                            mov rax, rbx	       549	d-demangle.c	FUNCTION_18	SWITCH_1
0x40018ff	      0xe914feffff	                           jmp 0x4001718	       549	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001904	         0xf1f4000	                         nop dword [rax]	       549	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001908	        0x488d5e01	                      lea rbx, [rsi + 1]	       694	d-demangle.c	FUNCTION_18	SWITCH_1
0x400190c	      0xbe00000000	                              mov esi, 0	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x4001911	      0xe82ae8ffff	                  call sym.string_append	       695	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_52
0x4001916	          0x4889d8	                            mov rax, rbx	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001919	      0xe9fafdffff	                           jmp 0x4001718	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x400191e	            0x6690	                                     nop	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001920	        0x488d5e01	                      lea rbx, [rsi + 1]	       728	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001924	      0xbe00000000	                              mov esi, 0	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x4001929	      0xe812e8ffff	                  call sym.string_append	       729	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_60
0x400192e	          0x4889d8	                            mov rax, rbx	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001931	      0xe9e2fdffff	                           jmp 0x4001718	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001936	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001940	        0x488d5e01	                      lea rbx, [rsi + 1]	       690	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001944	      0xbe00000000	                              mov esi, 0	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x4001949	      0xe8f2e7ffff	                  call sym.string_append	       691	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_51
0x400194e	          0x4889d8	                            mov rax, rbx	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001951	      0xe9c2fdffff	                           jmp 0x4001718	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001956	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001960	        0x488d5e01	                      lea rbx, [rsi + 1]	       678	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001964	      0xbe00000000	                              mov esi, 0	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x4001969	      0xe8d2e7ffff	                  call sym.string_append	       679	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_48
0x400196e	          0x4889d8	                            mov rax, rbx	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001971	      0xe9a2fdffff	                           jmp 0x4001718	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001976	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001980	        0x488d5e01	                      lea rbx, [rsi + 1]	       674	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001984	      0xbe00000000	                              mov esi, 0	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x4001989	      0xe8b2e7ffff	                  call sym.string_append	       675	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_47
0x400198e	          0x4889d8	                            mov rax, rbx	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001991	      0xe982fdffff	                           jmp 0x4001718	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019a0	        0x488d5e01	                      lea rbx, [rsi + 1]	       706	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019a4	      0xbe00000000	                              mov esi, 0	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x40019a9	      0xe892e7ffff	                  call sym.string_append	       707	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_55
0x40019ae	          0x4889d8	                            mov rax, rbx	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019b1	      0xe962fdffff	                           jmp 0x4001718	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019c0	        0x488d5e01	                      lea rbx, [rsi + 1]	       714	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019c4	      0xbe00000000	                              mov esi, 0	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x40019c9	      0xe872e7ffff	                  call sym.string_append	       715	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_57
0x40019ce	          0x4889d8	                            mov rax, rbx	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019d1	      0xe942fdffff	                           jmp 0x4001718	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019e0	        0x488d5e01	                      lea rbx, [rsi + 1]	       710	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019e4	      0xbe00000000	                              mov esi, 0	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x40019e9	      0xe852e7ffff	                  call sym.string_append	       711	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_56
0x40019ee	          0x4889d8	                            mov rax, rbx	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019f1	      0xe922fdffff	                           jmp 0x4001718	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x40019f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a00	        0x488d5e01	                      lea rbx, [rsi + 1]	       740	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a04	      0xbe00000000	                              mov esi, 0	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x4001a09	      0xe832e7ffff	                  call sym.string_append	       741	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_63
0x4001a0e	          0x4889d8	                            mov rax, rbx	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a11	      0xe902fdffff	                           jmp 0x4001718	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a20	        0x488d5e01	                      lea rbx, [rsi + 1]	       746	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a24	      0xbe00000000	                              mov esi, 0	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x4001a29	      0xe812e7ffff	                  call sym.string_append	       747	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_64
0x4001a2e	          0x4889d8	                            mov rax, rbx	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a31	      0xe9e2fcffff	                           jmp 0x4001718	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a40	        0x488d5e01	                      lea rbx, [rsi + 1]	       750	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a44	      0xbe00000000	                              mov esi, 0	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x4001a49	      0xe8f2e6ffff	                  call sym.string_append	       751	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_65
0x4001a4e	          0x4889d8	                            mov rax, rbx	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a51	      0xe9c2fcffff	                           jmp 0x4001718	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a60	         0xfb64e01	               movzx ecx, byte [rsi + 1]	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a64	        0x488d4601	                      lea rax, [rsi + 1]	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001a68	          0x4889c6	                            mov rsi, rax	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a6b	          0x83e946	                           sub ecx, 0x46	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a6e	          0x80f913	                            cmp cl, 0x13	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a71	            0x7714	                            ja 0x4001a87	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a73	      0xba01000000	                              mov edx, 1	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a78	          0x48d3e2	                             shl rdx, cl	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a7b	    0xf7c201900b00	                       test edx, 0xb9001	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a81	     0xf85b9fcffff	                           jne 0x4001740	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a87	          0x4889ef	                            mov rdi, rbp	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a8a	      0xe841fcffff	                     call sym.dlang_type	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a8f	      0xbe00000000	                              mov esi, 0	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x4001a94	          0x4889c3	                            mov rbx, rax	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4001a97	          0x4889ef	                            mov rdi, rbp	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x4001a9a	      0xe8a1e6ffff	                  call sym.string_append	       622	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_33
0x4001a9f	          0x4889d8	                            mov rax, rbx	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x4001aa2	      0xe971fcffff	                           jmp 0x4001718	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x4001aa7	    0x660f1f840000	                    nop word [rax + rax]	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x4001ab0	        0x488d5e01	                      lea rbx, [rsi + 1]	       539	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001ab4	      0xbe00000000	                              mov esi, 0	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4001ab9	      0xe91bfeffff	                           jmp 0x40018d9	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4001abe	            0x6690	                                     nop	       540	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_1
0x4001ac0	         0xfb65601	               movzx edx, byte [rsi + 1]	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4001ac4	          0x80fa67	                            cmp dl, 0x67	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4001ac7	     0xf8413030000	                            je 0x4001de0	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4001acd	            0x31c0	                            xor eax, eax	       534	d-demangle.c	FUNCTION_18	IF_1
0x4001acf	          0x80fa68	                            cmp dl, 0x68	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4001ad2	     0xf8540fcffff	                           jne 0x4001718	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4001ad8	        0x488d5e02	                      lea rbx, [rsi + 2]	       568	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4001adc	      0xbe00000000	                              mov esi, 0	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4001ae1	      0xe9f3fdffff	                           jmp 0x40018d9	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4001ae6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       569	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_13
0x4001af0	        0x4883c601	                              add rsi, 1	       603	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001af4	          0x4889e7	                            mov rdi, rsp	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001af7	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4001b00	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4001b09	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x4001b11	      0xe8bafbffff	                     call sym.dlang_type	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001b16	        0x488b0c24	                    mov rcx, qword [rsp]	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001b1a	      0x488b542408	                mov rdx, qword [rsp + 8]	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4001b1f	          0x4839d1	                            cmp rcx, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001b22	     0xf8474020000	                            je 0x4001d9c	       101	d-demangle.c	FUNCTION_4	IF_1
0x4001b28	          0x4829ca	                            sub rdx, rcx	       105	d-demangle.c	FUNCTION_4
0x4001b2b	          0x4889c6	                            mov rsi, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001b2e	          0x4889ef	                            mov rdi, rbp	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001b31	          0x4989d4	                            mov r12, rdx	       105	d-demangle.c	FUNCTION_4
0x4001b34	      0xe897fbffff	                     call sym.dlang_type	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001b39	      0xbe00000000	                              mov esi, 0	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001b3e	          0x4889ef	                            mov rdi, rbp	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001b41	          0x4889c3	                            mov rbx, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001b44	      0xe8f7e5ffff	                  call sym.string_append	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001b49	          0x4585e4	                         test r12d, r12d	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001b4c	            0x740f	                            je 0x4001b5d	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001b4e	        0x488b3424	                    mov rsi, qword [rsp]	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001b52	          0x4489e2	                           mov edx, r12d	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001b55	          0x4889ef	                            mov rdi, rbp	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001b58	      0xe843e9ffff	          call sym.string_appendn.part.5	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001b5d	          0x4889ef	                            mov rdi, rbp	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x4001b60	      0xbe00000000	                              mov esi, 0	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x4001b65	      0xe8d6e5ffff	                  call sym.string_append	       612	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_29
0x4001b6a	        0x488b3c24	                    mov rdi, qword [rsp]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4001b6e	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x4001b71	     0xf8562fcffff	                           jne 0x40017d9	        85	d-demangle.c	FUNCTION_2	IF_1
0x4001b77	      0xe962fcffff	                           jmp 0x40017de	        85	d-demangle.c	FUNCTION_2	IF_1
0x4001b7c	         0xf1f4000	                         nop dword [rax]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4001b80	         0xfb64601	               movzx eax, byte [rsi + 1]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001b84	        0x4c8d6e01	                      lea r13, [rsi + 1]	       585	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001b88	    0xf68400000000	                test byte [rax + rax], 4	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001b90	     0xf8458020000	                            je 0x4001dee	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001b96	          0x4c89e8	                            mov rax, r13	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001b99	     0xf1f80000000	                         nop dword [rax]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001ba0	          0x4989c4	                            mov r12, rax	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001ba3	        0x4883c001	                              add rax, 1	       591	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1
0x4001ba7	           0xfb608	                   movzx ecx, byte [rax]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001baa	          0x4929f4	                            sub r12, rsi	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001bad	    0xf68409000000	                test byte [rcx + rcx], 4	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001bb5	            0x75e9	                           jne 0x4001ba0	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4001bb7	          0x4889c6	                            mov rsi, rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4001bba	          0x4889ef	                            mov rdi, rbp	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4001bbd	      0xe80efbffff	                     call sym.dlang_type	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4001bc2	      0xbe00000000	                              mov esi, 0	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4001bc7	          0x4889ef	                            mov rdi, rbp	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4001bca	          0x4889c3	                            mov rbx, rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4001bcd	      0xe86ee5ffff	                  call sym.string_append	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4001bd2	          0x4585e4	                         test r12d, r12d	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001bd5	            0x740e	                            je 0x4001be5	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001bd7	          0x4489e2	                           mov edx, r12d	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001bda	          0x4c89ee	                            mov rsi, r13	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001bdd	          0x4889ef	                            mov rdi, rbp	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001be0	      0xe8bbe8ffff	          call sym.string_appendn.part.5	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001be5	      0xbe00000000	                              mov esi, 0	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x4001bea	          0x4889ef	                            mov rdi, rbp	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x4001bed	      0xe84ee5ffff	                  call sym.string_append	       596	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_22
0x4001bf2	          0x4889d8	                            mov rax, rbx	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001bf5	      0xe91efbffff	                           jmp 0x4001718	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001bfa	    0x660f1f440000	                    nop word [rax + rax]	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c00	        0x488d5e01	                      lea rbx, [rsi + 1]	       682	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c04	      0xbe00000000	                              mov esi, 0	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x4001c09	      0xe832e5ffff	                  call sym.string_append	       683	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_49
0x4001c0e	          0x4889d8	                            mov rax, rbx	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c11	      0xe902fbffff	                           jmp 0x4001718	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c20	        0x488d5e01	                      lea rbx, [rsi + 1]	       736	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c24	      0xbe00000000	                              mov esi, 0	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x4001c29	      0xe812e5ffff	                  call sym.string_append	       737	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_62
0x4001c2e	          0x4889d8	                            mov rax, rbx	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c31	      0xe9e2faffff	                           jmp 0x4001718	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c40	        0x488d5e01	                      lea rbx, [rsi + 1]	       758	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c44	      0xbe00000000	                              mov esi, 0	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x4001c49	      0xe8f2e4ffff	                  call sym.string_append	       759	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_67
0x4001c4e	          0x4889d8	                            mov rax, rbx	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c51	      0xe9c2faffff	                           jmp 0x4001718	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c60	        0x488d5e01	                      lea rbx, [rsi + 1]	       670	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c64	      0xbe00000000	                              mov esi, 0	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x4001c69	      0xe8d2e4ffff	                  call sym.string_append	       671	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_46
0x4001c6e	          0x4889d8	                            mov rax, rbx	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c71	      0xe9a2faffff	                           jmp 0x4001718	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c80	        0x488d5e01	                      lea rbx, [rsi + 1]	       754	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c84	      0xbe00000000	                              mov esi, 0	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x4001c89	      0xe8b2e4ffff	                  call sym.string_append	       755	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_66
0x4001c8e	          0x4889d8	                            mov rax, rbx	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c91	      0xe982faffff	                           jmp 0x4001718	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001ca0	        0x488d5e01	                      lea rbx, [rsi + 1]	       686	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001ca4	      0xbe00000000	                              mov esi, 0	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x4001ca9	      0xe892e4ffff	                  call sym.string_append	       687	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_50
0x4001cae	          0x4889d8	                            mov rax, rbx	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001cb1	      0xe962faffff	                           jmp 0x4001718	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001cb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001cc0	        0x488d5e01	                      lea rbx, [rsi + 1]	       545	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001cc4	      0xbe00000000	                              mov esi, 0	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4001cc9	      0xe90bfcffff	                           jmp 0x40018d9	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4001cce	            0x6690	                                     nop	       546	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_4
0x4001cd0	        0x488d5e01	                      lea rbx, [rsi + 1]	       720	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001cd4	      0xbe00000000	                              mov esi, 0	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x4001cd9	      0xe862e4ffff	                  call sym.string_append	       721	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_58
0x4001cde	          0x4889d8	                            mov rax, rbx	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001ce1	      0xe932faffff	                           jmp 0x4001718	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001ce6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001cf0	        0x488d5e01	                      lea rbx, [rsi + 1]	       666	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001cf4	      0xbe00000000	                              mov esi, 0	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x4001cf9	      0xe842e4ffff	                  call sym.string_append	       667	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_45
0x4001cfe	          0x4889d8	                            mov rax, rbx	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d01	      0xe912faffff	                           jmp 0x4001718	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d10	        0x488d5e01	                      lea rbx, [rsi + 1]	       702	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d14	      0xbe00000000	                              mov esi, 0	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x4001d19	      0xe822e4ffff	                  call sym.string_append	       703	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_54
0x4001d1e	          0x4889d8	                            mov rax, rbx	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d21	      0xe9f2f9ffff	                           jmp 0x4001718	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d30	        0x488d5e01	                      lea rbx, [rsi + 1]	       698	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d34	      0xbe00000000	                              mov esi, 0	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x4001d39	      0xe802e4ffff	                  call sym.string_append	       699	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_53
0x4001d3e	          0x4889d8	                            mov rax, rbx	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d41	      0xe9d2f9ffff	                           jmp 0x4001718	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d50	        0x488d5e01	                      lea rbx, [rsi + 1]	       732	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d54	      0xbe00000000	                              mov esi, 0	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x4001d59	      0xe8e2e3ffff	                  call sym.string_append	       733	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_61
0x4001d5e	          0x4889d8	                            mov rax, rbx	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d61	      0xe9b2f9ffff	                           jmp 0x4001718	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d70	        0x488d5e01	                      lea rbx, [rsi + 1]	       724	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d74	      0xbe00000000	                              mov esi, 0	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x4001d79	      0xe8c2e3ffff	                  call sym.string_append	       725	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_59
0x4001d7e	          0x4889d8	                            mov rax, rbx	       726	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d81	      0xe992f9ffff	                           jmp 0x4001718	       726	d-demangle.c	FUNCTION_18	SWITCH_1
0x4001d86	        0x488d5e02	                      lea rbx, [rsi + 2]	       766	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001d8a	      0xbe00000000	                              mov esi, 0	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x4001d8f	      0xe8ace3ffff	                  call sym.string_append	       767	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2	CALL_68
0x4001d94	          0x4889d8	                            mov rax, rbx	       768	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001d97	      0xe97cf9ffff	                           jmp 0x4001718	       768	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x4001d9c	          0x4889ef	                            mov rdi, rbp	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001d9f	          0x4889c6	                            mov rsi, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001da2	      0xe829f9ffff	                     call sym.dlang_type	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001da7	      0xbe00000000	                              mov esi, 0	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001dac	          0x4889ef	                            mov rdi, rbp	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001daf	          0x4889c3	                            mov rbx, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4001db2	      0xe889e3ffff	                  call sym.string_append	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001db7	      0xe9a1fdffff	                           jmp 0x4001b5d	       610	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_27
0x4001dbc	          0x4889c6	                            mov rsi, rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x4001dbf	          0x4889ef	                            mov rdi, rbp	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x4001dc2	      0xe829020000	            call sym.dlang_function_type	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x4001dc7	          0x4889ef	                            mov rdi, rbp	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x4001dca	      0xbe00000000	                              mov esi, 0	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x4001dcf	          0x4889c3	                            mov rbx, rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x4001dd2	      0xe869e3ffff	                  call sym.string_append	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x4001dd7	        0x488b3c24	                    mov rdi, qword [rsp]	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x4001ddb	      0xe9f4f9ffff	                           jmp 0x40017d4	       654	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_41
0x4001de0	        0x488d5e02	                      lea rbx, [rsi + 2]	       560	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4001de4	      0xbe00000000	                              mov esi, 0	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x4001de9	      0xe9ebfaffff	                           jmp 0x40018d9	       561	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_10
0x4001dee	          0x4c89ee	                            mov rsi, r13	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4001df1	      0xe8daf8ffff	                     call sym.dlang_type	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4001df6	      0xbe00000000	                              mov esi, 0	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4001dfb	          0x4889ef	                            mov rdi, rbp	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4001dfe	          0x4889c3	                            mov rbx, rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4001e01	      0xe83ae3ffff	                  call sym.string_append	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4001e06	      0xe9dafdffff	                           jmp 0x4001be5	       594	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_20
0x4001e0b	      0xe800000000	            call sym.dlang_function_args	       779	d-demangle.c	FUNCTION_18
dlang_attributes	SWITCH,1:functions,0:CALL,9:FOR,0:DO,0:WHILE,1:IF,1:ELSE,0	75
0x4000320	          0x4885f6	                           test rsi, rsi	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000323	     0xf84ef000000	                            je 0x4000418	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000329	           0xfb616	                   movzx edx, byte [rsi]	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x400032c	            0x84d2	                             test dl, dl	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x400032e	     0xf84e4000000	                            je 0x4000418	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000334	              0x55	                                push rbp	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000335	              0x53	                                push rbx	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000336	        0x488d5e02	                      lea rbx, [rsi + 2]	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x400033a	          0x4889fd	                            mov rbp, rdi	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x400033d	        0x4883ec08	                              sub rsp, 8	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000341	          0x80fa4e	                            cmp dl, 0x4e	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x4000344	        0x488d43fe	                      lea rax, [rbx - 2]	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x4000348	            0x7518	                           jne 0x4000362	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x400034a	         0xfb64bff	               movzx ecx, byte [rbx - 1]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400034e	          0x8d519f	                   lea edx, [rcx - 0x61]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000351	          0x80fa0b	                             cmp dl, 0xb	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000354	            0x770a	                            ja 0x4000360	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000356	           0xfb6d2	                           movzx edx, dl	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000359	    0xff24d5000000	                       jmp qword [rdx*8]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000360	            0x31c0	                            xor eax, eax	       409	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000362	        0x4883c408	                              add rsp, 8	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000366	              0x5b	                                 pop rbx	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000367	              0x5d	                                 pop rbp	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000368	              0xc3	                                     ret	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000369	     0xf1f80000000	                         nop dword [rax]	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000370	      0xbe00000000	                              mov esi, 0	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000375	          0x4889ef	                            mov rdi, rbp	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000378	      0xe8c3fdffff	                  call sym.string_append	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x400037d	           0xf1f00	                         nop dword [rax]	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000380	           0xfb613	                   movzx edx, byte [rbx]	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000383	        0x4883c302	                              add rbx, 2	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000387	            0xebb8	                           jmp 0x4000341	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000389	     0xf1f80000000	                         nop dword [rax]	       401	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_8
0x4000390	      0xbe00000000	                              mov esi, 0	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x4000395	          0x4889ef	                            mov rdi, rbp	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x4000398	      0xe8a3fdffff	                  call sym.string_append	       397	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_7
0x400039d	            0xebe1	                           jmp 0x4000380	       398	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400039f	              0x90	                                     nop	       398	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003a0	      0xbe00000000	                              mov esi, 0	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x40003a5	          0x4889ef	                            mov rdi, rbp	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x40003a8	      0xe893fdffff	                  call sym.string_append	       383	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_6
0x40003ad	            0xebd1	                           jmp 0x4000380	       384	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003af	              0x90	                                     nop	       384	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003b0	      0xbe00000000	                              mov esi, 0	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x40003b5	          0x4889ef	                            mov rdi, rbp	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x40003b8	      0xe883fdffff	                  call sym.string_append	       379	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_5
0x40003bd	            0xebc1	                           jmp 0x4000380	       380	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003bf	              0x90	                                     nop	       380	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003c0	      0xbe00000000	                              mov esi, 0	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x40003c5	          0x4889ef	                            mov rdi, rbp	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x40003c8	      0xe873fdffff	                  call sym.string_append	       375	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_4
0x40003cd	            0xebb1	                           jmp 0x4000380	       376	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003cf	              0x90	                                     nop	       376	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003d0	      0xbe00000000	                              mov esi, 0	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x40003d5	          0x4889ef	                            mov rdi, rbp	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x40003d8	      0xe863fdffff	                  call sym.string_append	       371	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_3
0x40003dd	            0xeba1	                           jmp 0x4000380	       372	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003df	              0x90	                                     nop	       372	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003e0	      0xbe00000000	                              mov esi, 0	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x40003e5	          0x4889ef	                            mov rdi, rbp	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x40003e8	      0xe853fdffff	                  call sym.string_append	       367	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_2
0x40003ed	            0xeb91	                           jmp 0x4000380	       368	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003ef	              0x90	                                     nop	       368	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003f0	      0xbe00000000	                              mov esi, 0	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x40003f5	          0x4889ef	                            mov rdi, rbp	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x40003f8	      0xe843fdffff	                  call sym.string_append	       363	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_1
0x40003fd	            0xeb81	                           jmp 0x4000380	       364	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003ff	              0x90	                                     nop	       364	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000400	      0xbe00000000	                              mov esi, 0	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x4000405	          0x4889ef	                            mov rdi, rbp	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x4000408	      0xe833fdffff	                  call sym.string_append	       405	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1	CALL_9
0x400040d	      0xe96effffff	                           jmp 0x4000380	       406	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000412	    0x660f1f440000	                    nop word [rax + rax]	       406	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000418	            0x31c0	                            xor eax, eax	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x400041a	              0xc3	                                     ret	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
dlang_value	SWITCH,1:functions,0:CALL,13:FOR,0:DO,0:WHILE,0:IF,3:ELSE,1	345
0x40009a0	            0x4154	                                push r12	      1258	d-demangle.c	FUNCTION_26
0x40009a2	              0x55	                                push rbp	      1258	d-demangle.c	FUNCTION_26
0x40009a3	              0x53	                                push rbx	      1258	d-demangle.c	FUNCTION_26
0x40009a4	        0x4883ec30	                           sub rsp, 0x30	      1258	d-demangle.c	FUNCTION_26
0x40009a8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1258	d-demangle.c	FUNCTION_26
0x40009b1	      0x4889442428	             mov qword [rsp + 0x28], rax	      1258	d-demangle.c	FUNCTION_26
0x40009b6	            0x31c0	                            xor eax, eax	      1258	d-demangle.c	FUNCTION_26
0x40009b8	          0x4885f6	                           test rsi, rsi	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009bb	            0x7423	                            je 0x40009e0	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009bd	          0x4889fd	                            mov rbp, rdi	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009c0	           0xfb63e	                   movzx edi, byte [rsi]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009c3	          0x4084ff	                           test dil, dil	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009c6	            0x7418	                            je 0x40009e0	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40009c8	          0x8d47d0	                   lea eax, [rdi - 0x30]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009cb	            0x3c47	                            cmp al, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009cd	            0x7711	                            ja 0x40009e0	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009cf	           0xfb6c0	                           movzx eax, al	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009d2	    0xff24c5000000	                       jmp qword [rax*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009d9	     0xf1f80000000	                         nop dword [rax]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009e0	            0x31c0	                            xor eax, eax	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x40009e2	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1334	d-demangle.c	FUNCTION_26
0x40009e7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1334	d-demangle.c	FUNCTION_26
0x40009f0	     0xf851b050000	                           jne 0x4000f11	      1334	d-demangle.c	FUNCTION_26
0x40009f6	        0x4883c430	                           add rsp, 0x30	      1334	d-demangle.c	FUNCTION_26
0x40009fa	              0x5b	                                 pop rbx	      1334	d-demangle.c	FUNCTION_26
0x40009fb	              0x5d	                                 pop rbp	      1334	d-demangle.c	FUNCTION_26
0x40009fc	            0x415c	                                 pop r12	      1334	d-demangle.c	FUNCTION_26
0x40009fe	              0xc3	                                     ret	      1334	d-demangle.c	FUNCTION_26
0x40009ff	              0x90	                                     nop	      1334	d-demangle.c	FUNCTION_26
0x4000a00	        0x4883c601	                              add rsi, 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a04	           0xfbed1	                           movsx edx, cl	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4000a07	          0x4889ef	                            mov rdi, rbp	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4000a0a	      0xe8c1faffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4000a0f	            0xebd1	                           jmp 0x40009e2	      1287	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a11	     0xf1f80000000	                         nop dword [rax]	      1287	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a18	          0x80f948	                            cmp cl, 0x48	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x4000a1b	        0x488d7e01	                      lea rdi, [rsi + 1]	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a1f	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x4000a24	     0xf845e040000	                            je 0x4000e88	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x4000a2a	      0xe811f6ffff	                   call sym.dlang_number	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x4000a2f	          0x4885c0	                           test rax, rax	      1187	d-demangle.c	FUNCTION_23	IF_1
0x4000a32	          0x4889c3	                            mov rbx, rax	      1186	d-demangle.c	FUNCTION_23	CALL_1
0x4000a35	            0x74a9	                            je 0x40009e0	      1187	d-demangle.c	FUNCTION_23	IF_1
0x4000a37	      0xbe00000000	                              mov esi, 0	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000a3c	          0x4889ef	                            mov rdi, rbp	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000a3f	      0xe8fcf6ffff	                  call sym.string_append	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000a44	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000a49	     0xf1f80000000	                         nop dword [rax]	      1190	d-demangle.c	FUNCTION_23	CALL_2
0x4000a50	        0x488d50ff	                      lea rdx, [rax - 1]	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000a54	          0x4885c0	                           test rax, rax	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000a57	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000a5c	     0xf849e020000	                            je 0x4000d00	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4000a62	            0x31c9	                            xor ecx, ecx	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000a64	            0x31d2	                            xor edx, edx	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000a66	          0x4889de	                            mov rsi, rbx	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000a69	          0x4889ef	                            mov rdi, rbp	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000a6c	      0xe82fffffff	                    call sym.dlang_value	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000a71	          0x4889c3	                            mov rbx, rax	      1193	d-demangle.c	FUNCTION_23	WHILE_1	CALL_3
0x4000a74	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4000a79	          0x4885c0	                           test rax, rax	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4000a7c	            0x74d2	                            je 0x4000a50	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4000a7e	      0xbe00000000	                              mov esi, 0	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000a83	          0x4889ef	                            mov rdi, rbp	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000a86	      0xe8b5f6ffff	                  call sym.string_append	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000a8b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000a90	            0xebbe	                           jmp 0x4000a50	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000a92	    0x660f1f440000	                    nop word [rax + rax]	      1195	d-demangle.c	FUNCTION_23	WHILE_1	CALL_4
0x4000a98	        0x488d5e01	                      lea rbx, [rsi + 1]	      1272	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000a9c	          0x4889ef	                            mov rdi, rbp	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x4000a9f	      0xbe00000000	                              mov esi, 0	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x4000aa4	        0x894c2408	                mov dword [rsp + 8], ecx	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x4000aa8	      0xe893f6ffff	                  call sym.string_append	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x4000aad	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4000ab1	          0x4889de	                            mov rsi, rbx	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4000ab4	          0x4889ef	                            mov rdi, rbp	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4000ab7	           0xfbed1	                           movsx edx, cl	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4000aba	      0xe811faffff	            call sym.dlang_parse_integer	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4000abf	      0xe91effffff	                           jmp 0x40009e2	      1275	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000ac4	         0xf1f4000	                         nop dword [rax]	      1275	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000ac8	        0x488d7e01	                      lea rdi, [rsi + 1]	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000acc	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000ad1	      0x4889542408	                mov qword [rsp + 8], rdx	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000ad6	      0xe865f5ffff	                   call sym.dlang_number	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000adb	          0x4885c0	                           test rax, rax	      1236	d-demangle.c	FUNCTION_25	IF_1
0x4000ade	          0x4889c3	                            mov rbx, rax	      1235	d-demangle.c	FUNCTION_25	CALL_1
0x4000ae1	     0xf84f9feffff	                            je 0x40009e0	      1236	d-demangle.c	FUNCTION_25	IF_1
0x4000ae7	      0x488b542408	                mov rdx, qword [rsp + 8]	      1239	d-demangle.c	FUNCTION_25	IF_2
0x4000aec	          0x4885d2	                           test rdx, rdx	      1239	d-demangle.c	FUNCTION_25	IF_2
0x4000aef	            0x740b	                            je 0x4000afc	      1239	d-demangle.c	FUNCTION_25	IF_2
0x4000af1	          0x4889d6	                            mov rsi, rdx	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x4000af4	          0x4889ef	                            mov rdi, rbp	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x4000af7	      0xe844f6ffff	                  call sym.string_append	      1240	d-demangle.c	FUNCTION_25	CALL_2
0x4000afc	      0xbe00000000	                              mov esi, 0	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000b01	          0x4889ef	                            mov rdi, rbp	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000b04	      0xe837f6ffff	                  call sym.string_append	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000b09	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000b0e	            0x6690	                                     nop	      1242	d-demangle.c	FUNCTION_25	CALL_3
0x4000b10	        0x488d50ff	                      lea rdx, [rax - 1]	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000b14	          0x4885c0	                           test rax, rax	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000b17	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000b1c	     0xf84c6010000	                            je 0x4000ce8	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4000b22	            0x31c9	                            xor ecx, ecx	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000b24	            0x31d2	                            xor edx, edx	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000b26	          0x4889de	                            mov rsi, rbx	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000b29	          0x4889ef	                            mov rdi, rbp	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000b2c	      0xe86ffeffff	                    call sym.dlang_value	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000b31	          0x4889c3	                            mov rbx, rax	      1245	d-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000b34	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4000b39	          0x4885c0	                           test rax, rax	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4000b3c	            0x74d2	                            je 0x4000b10	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4000b3e	      0xbe00000000	                              mov esi, 0	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000b43	          0x4889ef	                            mov rdi, rbp	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000b46	      0xe8f5f5ffff	                  call sym.string_append	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000b4b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000b50	            0xebbe	                           jmp 0x4000b10	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000b52	    0x660f1f440000	                    nop word [rax + rax]	      1247	d-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000b58	      0x40887c241e	              mov byte [rsp + 0x1e], dil	      1119	d-demangle.c	FUNCTION_22
0x4000b5d	        0x488d7e01	                      lea rdi, [rsi + 1]	      1122	d-demangle.c	FUNCTION_22
0x4000b61	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4000b66	      0xe8d5f4ffff	                   call sym.dlang_number	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4000b6b	          0x4889c3	                            mov rbx, rax	      1123	d-demangle.c	FUNCTION_22	CALL_1
0x4000b6e	            0x31c0	                            xor eax, eax	      1125	d-demangle.c	FUNCTION_22	IF_1
0x4000b70	          0x4885db	                           test rbx, rbx	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000b73	     0xf8469feffff	                            je 0x40009e2	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000b79	          0x803b5f	                    cmp byte [rbx], 0x5f	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000b7c	     0xf8560feffff	                           jne 0x40009e2	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000b82	      0xbe00000000	                              mov esi, 0	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4000b87	          0x4889ef	                            mov rdi, rbp	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4000b8a	        0x4c8d6301	                      lea r12, [rbx + 1]	      1127	d-demangle.c	FUNCTION_22
0x4000b8e	      0xe8adf5ffff	                  call sym.string_append	      1128	d-demangle.c	FUNCTION_22	CALL_2
0x4000b93	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000b98	        0x488d50ff	                      lea rdx, [rax - 1]	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000b9c	          0x4885c0	                           test rax, rax	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000b9f	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000ba4	     0xf845f020000	                            je 0x4000e09	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000baa	          0x4d85e4	                           test r12, r12	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bad	     0xf842dfeffff	                            je 0x40009e0	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bb3	         0xfb64301	               movzx eax, byte [rbx + 1]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bb7	     0xfb78c000000	             movzx ecx, word [rax + rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bbf	          0x4889c2	                            mov rdx, rax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bc2	          0xf6c501	                              test ch, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bc5	     0xf8415feffff	                            je 0x40009e0	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bcb	         0xfb67302	               movzx esi, byte [rbx + 2]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bcf	          0x4889f0	                            mov rax, rsi	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bd2	     0xfb7b4360000	             movzx esi, word [rsi + rsi]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bda	      0x66f7c60001	                          test si, 0x100	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000bdf	     0xf84fbfdffff	                            je 0x40009e0	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000be5	           0xf1f00	                         nop dword [rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000be8	          0xf6c104	                              test cl, 4	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000beb	          0x8d7ad0	                   lea edi, [rdx - 0x30]	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x4000bee	            0x7513	                           jne 0x4000c03	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000bf0	      0x6681e18000	                            and cx, 0x80	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000bf5	        0x6683f901	                               cmp cx, 1	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000bf9	            0x19c9	                            sbb ecx, ecx	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000bfb	          0x83e120	                           and ecx, 0x20	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000bfe	            0x29ca	                            sub edx, ecx	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000c00	          0x8d7ac9	                   lea edi, [rdx - 0x37]	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000c03	          0xc1e704	                              shl edi, 4	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c06	        0x40f6c604	                             test sil, 4	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x4000c0a	            0x89fa	                            mov edx, edi	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c0c	     0xf853e020000	                           jne 0x4000e50	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x4000c12	      0x6681e68000	                            and si, 0x80	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c17	        0x6683fe01	                               cmp si, 1	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c1b	            0x19c9	                            sbb ecx, ecx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c1d	          0x83e120	                           and ecx, 0x20	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c20	            0x29c8	                            sub eax, ecx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c22	          0x8d78c9	                   lea edi, [rax - 0x37]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c25	             0x9fa	                             or edx, edi	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c27	        0x8854241f	               mov byte [rsp + 0x1f], dl	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000c2b	          0x4c89e3	                            mov rbx, r12	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000c2e	        0x4883c302	                              add rbx, 2	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000c32	     0xf84a8fdffff	                            je 0x40009e0	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000c38	       0xfb654241f	           movzx edx, byte [rsp + 0x1f] 	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000c3d	          0x8d42f7	                      lea eax, [rdx - 9]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000c40	            0x3c17	                            cmp al, 0x17	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000c42	     0xf87a0010000	                            ja 0x4000de8	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000c48	           0xfb6c0	                           movzx eax, al	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000c4b	    0xff24c5000000	                       jmp qword [rax*8]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000c52	    0x660f1f440000	                    nop word [rax + rax]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000c58	        0x4883c601	                              add rsi, 1	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000c5c	          0x4889ef	                            mov rdi, rbp	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4000c5f	      0xe87cfbffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4000c64	      0xbe00000000	                              mov esi, 0	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4000c69	          0x4889c3	                            mov rbx, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4000c6c	          0x4889ef	                            mov rdi, rbp	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4000c6f	      0xe8ccf4ffff	                  call sym.string_append	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4000c74	          0x4885db	                           test rbx, rbx	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000c77	     0xf8463fdffff	                            je 0x40009e0	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000c7d	          0x803b63	                    cmp byte [rbx], 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000c80	     0xf855afdffff	                           jne 0x40009e0	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4000c86	        0x488d7301	                      lea rsi, [rbx + 1]	      1302	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000c8a	          0x4889ef	                            mov rdi, rbp	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000c8d	      0xe84efbffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000c92	      0xbe00000000	                              mov esi, 0	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4000c97	          0x4889c3	                            mov rbx, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000c9a	          0x4889ef	                            mov rdi, rbp	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4000c9d	      0xe89ef4ffff	                  call sym.string_append	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4000ca2	          0x4889d8	                            mov rax, rbx	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4000ca5	      0xe938fdffff	                           jmp 0x40009e2	      1305	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000caa	    0x660f1f440000	                    nop word [rax + rax]	      1305	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000cb0	        0x4883c601	                              add rsi, 1	      1291	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000cb4	          0x4889ef	                            mov rdi, rbp	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4000cb7	      0xe824fbffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4000cbc	      0xe921fdffff	                           jmp 0x40009e2	      1293	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000cc1	     0xf1f80000000	                         nop dword [rax]	      1293	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000cc8	        0x488d5e01	                      lea rbx, [rsi + 1]	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000ccc	          0x4889ef	                            mov rdi, rbp	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x4000ccf	      0xbe00000000	                              mov esi, 0	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x4000cd4	      0xe867f4ffff	                  call sym.string_append	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x4000cd9	          0x4889d8	                            mov rax, rbx	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000cdc	      0xe901fdffff	                           jmp 0x40009e2	      1268	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000ce1	     0xf1f80000000	                         nop dword [rax]	      1268	d-demangle.c	FUNCTION_26	SWITCH_1
0x4000ce8	      0xbe00000000	                              mov esi, 0	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000ced	          0x4889ef	                            mov rdi, rbp	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000cf0	      0xe84bf4ffff	                  call sym.string_append	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000cf5	          0x4889d8	                            mov rax, rbx	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000cf8	      0xe9e5fcffff	                           jmp 0x40009e2	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000cfd	           0xf1f00	                         nop dword [rax]	      1250	d-demangle.c	FUNCTION_25	CALL_6
0x4000d00	      0xbe00000000	                              mov esi, 0	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000d05	          0x4889ef	                            mov rdi, rbp	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000d08	      0xe833f4ffff	                  call sym.string_append	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000d0d	          0x4889d8	                            mov rax, rbx	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000d10	      0xe9cdfcffff	                           jmp 0x40009e2	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000d15	           0xf1f00	                         nop dword [rax]	      1198	d-demangle.c	FUNCTION_23	CALL_5
0x4000d18	      0xbe00000000	                              mov esi, 0	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000d1d	          0x4889ef	                            mov rdi, rbp	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000d20	      0xe81bf4ffff	                  call sym.string_append	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000d25	           0xf1f00	                         nop dword [rax]	      1141	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_4
0x4000d28	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000d2d	        0x488d50ff	                      lea rdx, [rax - 1]	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000d31	          0x4885c0	                           test rax, rax	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000d34	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000d39	     0xf84d1000000	                            je 0x4000e10	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000d3f	           0xfb603	                   movzx eax, byte [rbx]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d42	     0xfb78c000000	             movzx ecx, word [rax + rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d4a	          0x4889c2	                            mov rdx, rax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d4d	          0xf6c501	                              test ch, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d50	     0xf848afcffff	                            je 0x40009e0	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d56	         0xfb67301	               movzx esi, byte [rbx + 1]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d5a	          0x4889f0	                            mov rax, rsi	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d5d	     0xfb7b4360000	             movzx esi, word [rsi + rsi]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d65	      0x66f7c60001	                          test si, 0x100	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d6a	     0xf8470fcffff	                            je 0x40009e0	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d70	          0x4989dc	                            mov r12, rbx	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d73	      0xe970feffff	                           jmp 0x4000be8	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d78	     0xf1f84000000	                   nop dword [rax + rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000d80	      0xbe00000000	                              mov esi, 0	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000d85	          0x4889ef	                            mov rdi, rbp	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000d88	      0xe8b3f3ffff	                  call sym.string_append	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000d8d	            0xeb99	                           jmp 0x4000d28	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000d8f	              0x90	                                     nop	      1150	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_7
0x4000d90	      0xbe00000000	                              mov esi, 0	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000d95	          0x4889ef	                            mov rdi, rbp	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000d98	      0xe8a3f3ffff	                  call sym.string_append	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000d9d	            0xeb89	                           jmp 0x4000d28	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000d9f	              0x90	                                     nop	      1153	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_8
0x4000da0	      0xbe00000000	                              mov esi, 0	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000da5	          0x4889ef	                            mov rdi, rbp	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000da8	      0xe893f3ffff	                  call sym.string_append	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000dad	      0xe976ffffff	                           jmp 0x4000d28	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000db2	    0x660f1f440000	                    nop word [rax + rax]	      1156	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_9
0x4000db8	      0xbe00000000	                              mov esi, 0	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000dbd	          0x4889ef	                            mov rdi, rbp	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000dc0	      0xe87bf3ffff	                  call sym.string_append	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000dc5	      0xe95effffff	                           jmp 0x4000d28	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000dca	    0x660f1f440000	                    nop word [rax + rax]	      1147	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_6
0x4000dd0	      0xbe00000000	                              mov esi, 0	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000dd5	          0x4889ef	                            mov rdi, rbp	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000dd8	      0xe863f3ffff	                  call sym.string_append	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000ddd	      0xe946ffffff	                           jmp 0x4000d28	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000de2	    0x660f1f440000	                    nop word [rax + rax]	      1144	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	CALL_5
0x4000de8	    0xf68412000000	            test byte [rdx + rdx], 0x10 	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000df0	            0x746e	                            je 0x4000e60	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000df2	      0x488d74241f	                   lea rsi, [rsp + 0x1f]	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000df7	      0xba01000000	                              mov edx, 1	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000dfc	          0x4889ef	                            mov rdi, rbp	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000dff	      0xe89cf6ffff	          call sym.string_appendn.part.5	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000e04	      0xe91fffffff	                           jmp 0x4000d28	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000e09	          0x4c89e3	                            mov rbx, r12	      1127	d-demangle.c	FUNCTION_22
0x4000e0c	         0xf1f4000	                         nop dword [rax]	      1127	d-demangle.c	FUNCTION_22
0x4000e10	      0xbe00000000	                              mov esi, 0	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4000e15	          0x4889ef	                            mov rdi, rbp	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4000e18	      0xe823f3ffff	                  call sym.string_append	      1171	d-demangle.c	FUNCTION_22	CALL_14
0x4000e1d	      0x807c241e61	            cmp byte [rsp + 0x1e], 0x61 	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e22	          0x4889d8	                            mov rax, rbx	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e25	     0xf84b7fbffff	                            je 0x40009e2	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e2b	      0x488d74241e	                   lea rsi, [rsp + 0x1e]	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e30	      0xba01000000	                              mov edx, 1	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e35	          0x4889ef	                            mov rdi, rbp	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e38	      0x48895c2408	                mov qword [rsp + 8], rbx	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e3d	      0xe85ef6ffff	          call sym.string_appendn.part.5	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e42	      0x488b442408	                mov rax, qword [rsp + 8]	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e47	      0xe996fbffff	                           jmp 0x40009e2	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e4c	         0xf1f4000	                         nop dword [rax]	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000e50	          0x8d78d0	                   lea edi, [rax - 0x30]	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000e53	             0x9fa	                             or edx, edi	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000e55	        0x8854241f	               mov byte [rsp + 0x1f], dl	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000e59	      0xe9cdfdffff	                           jmp 0x4000c2b	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000e5e	            0x6690	                                     nop	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000e60	          0x4889ef	                            mov rdi, rbp	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e63	      0xbe00000000	                              mov esi, 0	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e68	      0xe8d3f2ffff	                  call sym.string_append	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e6d	      0xba02000000	                              mov edx, 2	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e72	          0x4c89e6	                            mov rsi, r12	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e75	          0x4889ef	                            mov rdi, rbp	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e78	      0xe823f6ffff	          call sym.string_appendn.part.5	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e7d	      0xe9a6feffff	                           jmp 0x4000d28	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e82	    0x660f1f440000	                    nop word [rax + rax]	      1164	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	ELSE_1	CALL_12
0x4000e88	      0xe8b3f1ffff	                   call sym.dlang_number	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x4000e8d	          0x4885c0	                           test rax, rax	      1210	d-demangle.c	FUNCTION_24	IF_1
0x4000e90	          0x4889c3	                            mov rbx, rax	      1209	d-demangle.c	FUNCTION_24	CALL_1
0x4000e93	     0xf8447fbffff	                            je 0x40009e0	      1210	d-demangle.c	FUNCTION_24	IF_1
0x4000e99	      0xbe00000000	                              mov esi, 0	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000e9e	          0x4889ef	                            mov rdi, rbp	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000ea1	      0xe89af2ffff	                  call sym.string_append	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000ea6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000eab	       0xf1f440000	                   nop dword [rax + rax]	      1213	d-demangle.c	FUNCTION_24	CALL_2
0x4000eb0	        0x488d50ff	                      lea rdx, [rax - 1]	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000eb4	          0x4885c0	                           test rax, rax	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000eb7	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000ebc	     0xf843efeffff	                            je 0x4000d00	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4000ec2	            0x31c9	                            xor ecx, ecx	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000ec4	            0x31d2	                            xor edx, edx	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000ec6	          0x4889de	                            mov rsi, rbx	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000ec9	          0x4889ef	                            mov rdi, rbp	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000ecc	      0xe8cffaffff	                    call sym.dlang_value	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000ed1	      0xbe00000000	                              mov esi, 0	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4000ed6	          0x4889c3	                            mov rbx, rax	      1216	d-demangle.c	FUNCTION_24	WHILE_1	CALL_3
0x4000ed9	          0x4889ef	                            mov rdi, rbp	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4000edc	      0xe85ff2ffff	                  call sym.string_append	      1217	d-demangle.c	FUNCTION_24	WHILE_1	CALL_4
0x4000ee1	            0x31c9	                            xor ecx, ecx	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000ee3	            0x31d2	                            xor edx, edx	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000ee5	          0x4889de	                            mov rsi, rbx	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000ee8	          0x4889ef	                            mov rdi, rbp	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000eeb	      0xe8b0faffff	                    call sym.dlang_value	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000ef0	          0x4889c3	                            mov rbx, rax	      1218	d-demangle.c	FUNCTION_24	WHILE_1	CALL_5
0x4000ef3	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4000ef8	          0x4885c0	                           test rax, rax	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4000efb	            0x74b3	                            je 0x4000eb0	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4000efd	      0xbe00000000	                              mov esi, 0	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000f02	          0x4889ef	                            mov rdi, rbp	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000f05	      0xe836f2ffff	                  call sym.string_append	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000f0a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000f0f	            0xeb9f	                           jmp 0x4000eb0	      1221	d-demangle.c	FUNCTION_24	WHILE_1	CALL_6
0x4000f11	      0xe800000000	                          call 0x4000f16	      1334	d-demangle.c	FUNCTION_26
dlang_function_type	SWITCH,0:functions,0:CALL,18:FOR,0:DO,0:WHILE,0:IF,1:ELSE,0	131
0x4001ff0	            0x4155	                                push r13	       421	d-demangle.c	FUNCTION_16
0x4001ff2	            0x4154	                                push r12	       421	d-demangle.c	FUNCTION_16
0x4001ff4	              0x55	                                push rbp	       421	d-demangle.c	FUNCTION_16
0x4001ff5	              0x53	                                push rbx	       421	d-demangle.c	FUNCTION_16
0x4001ff6	            0x31ed	                            xor ebp, ebp	       426	d-demangle.c	FUNCTION_16	IF_1
0x4001ff8	        0x4883ec68	                           sub rsp, 0x68	       421	d-demangle.c	FUNCTION_16
0x4001ffc	    0x64488b042528	                mov rax, qword fs:[0x28]	       421	d-demangle.c	FUNCTION_16
0x4002005	      0x4889442458	             mov qword [rsp + 0x58], rax	       421	d-demangle.c	FUNCTION_16
0x400200a	            0x31c0	                            xor eax, eax	       421	d-demangle.c	FUNCTION_16
0x400200c	          0x4885f6	                           test rsi, rsi	       425	d-demangle.c	FUNCTION_16	IF_1
0x400200f	     0xf8467010000	                            je 0x400217c	       425	d-demangle.c	FUNCTION_16	IF_1
0x4002015	          0x803e00	                       cmp byte [rsi], 0	       425	d-demangle.c	FUNCTION_16	IF_1
0x4002018	     0xf845e010000	                            je 0x400217c	       425	d-demangle.c	FUNCTION_16	IF_1
0x400201e	          0x4889fb	                            mov rbx, rdi	       425	d-demangle.c	FUNCTION_16	IF_1
0x4002021	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x400202a	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4002033	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x400203b	    0x48c744243000	               mov qword [rsp + 0x30], 0	        95	d-demangle.c	FUNCTION_3
0x4002044	    0x48c744242800	               mov qword [rsp + 0x28], 0	        95	d-demangle.c	FUNCTION_3
0x400204d	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x4002056	    0x48c744245000	               mov qword [rsp + 0x50], 0	        95	d-demangle.c	FUNCTION_3
0x400205f	    0x48c744244800	               mov qword [rsp + 0x48], 0	        95	d-demangle.c	FUNCTION_3
0x4002068	    0x48c744244000	               mov qword [rsp + 0x40], 0	        95	d-demangle.c	FUNCTION_3
0x4002071	      0xe8eae1ffff	          call sym.dlang_call_convention	       439	d-demangle.c	FUNCTION_16	CALL_4
0x4002076	          0x4889e7	                            mov rdi, rsp	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4002079	          0x4889c6	                            mov rsi, rax	       442	d-demangle.c	FUNCTION_16	CALL_5
0x400207c	      0xe89fe2ffff	               call sym.dlang_attributes	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4002081	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4002086	        0x488b3c24	                    mov rdi, qword [rsp]	       442	d-demangle.c	FUNCTION_16	CALL_5
0x400208a	      0xba00000000	                              mov edx, 0	       105	d-demangle.c	FUNCTION_4
0x400208f	          0x4889c6	                            mov rsi, rax	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4002092	          0x4189cd	                           mov r13d, ecx	       105	d-demangle.c	FUNCTION_4
0x4002095	          0x4129fd	                           sub r13d, edi	       105	d-demangle.c	FUNCTION_4
0x4002098	          0x4839cf	                            cmp rdi, rcx	       105	d-demangle.c	FUNCTION_4
0x400209b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       446	d-demangle.c	FUNCTION_16	CALL_7
0x40020a0	        0x440f44ea	                         cmove r13d, edx	       105	d-demangle.c	FUNCTION_4
0x40020a4	      0xe867fdffff	            call sym.dlang_function_args	       446	d-demangle.c	FUNCTION_16	CALL_7
0x40020a9	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       446	d-demangle.c	FUNCTION_16	CALL_7
0x40020ae	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       446	d-demangle.c	FUNCTION_16	CALL_7
0x40020b3	          0x4839ea	                            cmp rdx, rbp	       101	d-demangle.c	FUNCTION_4	IF_1
0x40020b6	     0xf8434010000	                            je 0x40021f0	       101	d-demangle.c	FUNCTION_4	IF_1
0x40020bc	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40020c1	          0x4889c6	                            mov rsi, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40020c4	            0x29d5	                            sub ebp, edx	       105	d-demangle.c	FUNCTION_4
0x40020c6	      0xe805f6ffff	                     call sym.dlang_type	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40020cb	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40020d0	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40020d5	          0x4989c4	                            mov r12, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40020d8	          0x4839d6	                            cmp rsi, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x40020db	            0x7410	                            je 0x40020ed	       101	d-demangle.c	FUNCTION_4	IF_1
0x40020dd	          0x4889d1	                            mov rcx, rdx	       105	d-demangle.c	FUNCTION_4
0x40020e0	          0x4829f1	                            sub rcx, rsi	       105	d-demangle.c	FUNCTION_4
0x40020e3	            0x85c9	                           test ecx, ecx	       129	d-demangle.c	FUNCTION_7	IF_1
0x40020e5	            0x89ca	                            mov edx, ecx	       105	d-demangle.c	FUNCTION_4
0x40020e7	     0xf85d3000000	                           jne 0x40021c0	       129	d-demangle.c	FUNCTION_7	IF_1
0x40020ed	      0xbe00000000	                              mov esi, 0	       455	d-demangle.c	FUNCTION_16	CALL_12
0x40020f2	          0x4889df	                            mov rdi, rbx	       455	d-demangle.c	FUNCTION_16	CALL_12
0x40020f5	      0xe846e0ffff	                  call sym.string_append	       455	d-demangle.c	FUNCTION_16	CALL_12
0x40020fa	            0x85ed	                           test ebp, ebp	       129	d-demangle.c	FUNCTION_7	IF_1
0x40020fc	     0xf859e000000	                           jne 0x40021a0	       129	d-demangle.c	FUNCTION_7	IF_1
0x4002102	          0x4889df	                            mov rdi, rbx	       457	d-demangle.c	FUNCTION_16	CALL_14
0x4002105	      0xbe00000000	                              mov esi, 0	       457	d-demangle.c	FUNCTION_16	CALL_14
0x400210a	      0xe831e0ffff	                  call sym.string_append	       457	d-demangle.c	FUNCTION_16	CALL_14
0x400210f	          0x4585ed	                         test r13d, r13d	       129	d-demangle.c	FUNCTION_7	IF_1
0x4002112	        0x488b3c24	                    mov rdi, qword [rsp]	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4002116	     0xf85b4000000	                           jne 0x40021d0	       129	d-demangle.c	FUNCTION_7	IF_1
0x400211c	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x400211f	            0x741f	                            je 0x4002140	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002121	      0xe800000000	                          call 0x4002126	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4002126	    0x48c744240800	                  mov qword [rsp + 8], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x400212f	    0x48c744241000	               mov qword [rsp + 0x10], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4002138	    0x48c704240000	                      mov qword [rsp], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4002140	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002145	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002148	            0x7420	                            je 0x400216a	        85	d-demangle.c	FUNCTION_2	IF_1
0x400214a	      0xe800000000	                          call 0x400214f	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400214f	    0x48c744242800	               mov qword [rsp + 0x28], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4002158	    0x48c744243000	               mov qword [rsp + 0x30], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4002161	    0x48c744242000	               mov qword [rsp + 0x20], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x400216a	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x400216f	          0x4c89e5	                            mov rbp, r12	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002172	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002175	            0x7405	                            je 0x400217c	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002177	      0xe800000000	                          call 0x400217c	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400217c	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	       464	d-demangle.c	FUNCTION_16
0x4002181	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       464	d-demangle.c	FUNCTION_16
0x400218a	          0x4889e8	                            mov rax, rbp	       464	d-demangle.c	FUNCTION_16
0x400218d	     0xf8597000000	                           jne 0x400222a	       464	d-demangle.c	FUNCTION_16
0x4002193	        0x4883c468	                           add rsp, 0x68	       464	d-demangle.c	FUNCTION_16
0x4002197	              0x5b	                                 pop rbx	       464	d-demangle.c	FUNCTION_16
0x4002198	              0x5d	                                 pop rbp	       464	d-demangle.c	FUNCTION_16
0x4002199	            0x415c	                                 pop r12	       464	d-demangle.c	FUNCTION_16
0x400219b	            0x415d	                                 pop r13	       464	d-demangle.c	FUNCTION_16
0x400219d	              0xc3	                                     ret	       464	d-demangle.c	FUNCTION_16
0x400219e	            0x6690	                                     nop	       464	d-demangle.c	FUNCTION_16
0x40021a0	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       464	d-demangle.c	FUNCTION_16
0x40021a5	            0x89ea	                            mov edx, ebp	       464	d-demangle.c	FUNCTION_16
0x40021a7	          0x4889df	                            mov rdi, rbx	       464	d-demangle.c	FUNCTION_16
0x40021aa	      0xe8f1e2ffff	          call sym.string_appendn.part.5	       464	d-demangle.c	FUNCTION_16
0x40021af	      0xe94effffff	                           jmp 0x4002102	       464	d-demangle.c	FUNCTION_16
0x40021b4	         0xf1f4000	                         nop dword [rax]	       464	d-demangle.c	FUNCTION_16
0x40021b8	            0x31ed	                            xor ebp, ebp	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021ba	    0x660f1f440000	                    nop word [rax + rax]	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021c0	          0x4889df	                            mov rdi, rbx	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021c3	      0xe8d8e2ffff	          call sym.string_appendn.part.5	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021c8	      0xe920ffffff	                           jmp 0x40020ed	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021cd	           0xf1f00	                         nop dword [rax]	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021d0	          0x4889fe	                            mov rsi, rdi	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021d3	          0x4489ea	                           mov edx, r13d	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021d6	          0x4889df	                            mov rdi, rbx	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021d9	      0xe8c2e2ffff	          call sym.string_appendn.part.5	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021de	        0x488b3c24	                    mov rdi, qword [rsp]	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021e2	      0xe935ffffff	                           jmp 0x400211c	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021e7	    0x660f1f840000	                    nop word [rax + rax]	       103	d-demangle.c	FUNCTION_4	IF_1
0x40021f0	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40021f5	          0x4889c6	                            mov rsi, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40021f8	      0xe8d3f4ffff	                     call sym.dlang_type	       450	d-demangle.c	FUNCTION_16	CALL_9
0x40021fd	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4002202	          0x4989c4	                            mov r12, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4002205	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       450	d-demangle.c	FUNCTION_16	CALL_9
0x400220a	          0x4839f0	                            cmp rax, rsi	       101	d-demangle.c	FUNCTION_4	IF_1
0x400220d	            0x7409	                            je 0x4002218	       101	d-demangle.c	FUNCTION_4	IF_1
0x400220f	          0x4829f0	                            sub rax, rsi	       105	d-demangle.c	FUNCTION_4
0x4002212	            0x85c0	                           test eax, eax	       129	d-demangle.c	FUNCTION_7	IF_1
0x4002214	            0x89c2	                            mov edx, eax	       105	d-demangle.c	FUNCTION_4
0x4002216	            0x75a0	                           jne 0x40021b8	       129	d-demangle.c	FUNCTION_7	IF_1
0x4002218	      0xbe00000000	                              mov esi, 0	       455	d-demangle.c	FUNCTION_16	CALL_12
0x400221d	          0x4889df	                            mov rdi, rbx	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4002220	      0xe81bdfffff	                  call sym.string_append	       455	d-demangle.c	FUNCTION_16	CALL_12
0x4002225	      0xe9d8feffff	                           jmp 0x4002102	       455	d-demangle.c	FUNCTION_16	CALL_12
0x400222a	      0xe800000000	                          call 0x400222f	       464	d-demangle.c	FUNCTION_16
dlang_parse_mangle	SWITCH,0:functions,0:CALL,17:FOR,0:DO,0:WHILE,0:IF,6:ELSE,1	171
0x4002230	            0x4155	                                push r13	      1341	d-demangle.c	FUNCTION_27
0x4002232	            0x4154	                                push r12	      1341	d-demangle.c	FUNCTION_27
0x4002234	        0x4883c602	                              add rsi, 2	      1352	d-demangle.c	FUNCTION_27
0x4002238	              0x55	                                push rbp	      1341	d-demangle.c	FUNCTION_27
0x4002239	              0x53	                                push rbx	      1341	d-demangle.c	FUNCTION_27
0x400223a	            0x89d5	                            mov ebp, edx	      1341	d-demangle.c	FUNCTION_27
0x400223c	            0x31d2	                            xor edx, edx	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x400223e	          0x4889fb	                            mov rbx, rdi	      1341	d-demangle.c	FUNCTION_27
0x4002241	        0x4883ec38	                           sub rsp, 0x38	      1341	d-demangle.c	FUNCTION_27
0x4002245	    0x64488b042528	                mov rax, qword fs:[0x28]	      1341	d-demangle.c	FUNCTION_27
0x400224e	      0x4889442428	             mov qword [rsp + 0x28], rax	      1341	d-demangle.c	FUNCTION_27
0x4002253	            0x31c0	                            xor eax, eax	      1341	d-demangle.c	FUNCTION_27
0x4002255	      0xe836f2ffff	          call sym.dlang_parse_qualified	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x400225a	          0x4885c0	                           test rax, rax	      1356	d-demangle.c	FUNCTION_27	IF_1
0x400225d	     0xf84ed010000	                            je 0x4002450	      1356	d-demangle.c	FUNCTION_27	IF_1
0x4002263	           0xfb610	                   movzx edx, byte [rax]	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x4002266	          0x80fa5a	                            cmp dl, 0x5a	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x4002269	     0xf8489010000	                            je 0x40023f8	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x400226f	          0x80fa4d	                            cmp dl, 0x4d	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x4002272	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x4002277	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x4002280	           0xf94c2	                                 sete dl	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x4002283	    0x48c744241800	               mov qword [rsp + 0x18], 0	        95	d-demangle.c	FUNCTION_3
0x400228c	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4002295	           0xfb6d2	                           movzx edx, dl	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x4002298	          0x4801d0	                            add rax, rdx	      1368	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x400229b	          0x4889c6	                            mov rsi, rax	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x400229e	      0xe8dddeffff	           call sym.dlang_type_modifiers	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40022a3	          0x4885c0	                           test rax, rax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022a6	          0x4989c5	                            mov r13, rax	      1372	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_3
0x40022a9	            0x740f	                            je 0x40022ba	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022ab	           0xfb600	                   movzx eax, byte [rax]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022ae	          0x8d48ba	                   lea ecx, [rax - 0x46]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022b1	          0x80f913	                            cmp cl, 0x13	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022b4	     0xf868e000000	                           jbe 0x4002348	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022ba	          0x488b03	                    mov rax, qword [rbx]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022bd	        0x488b5308	                mov rdx, qword [rbx + 8]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40022c1	          0x4839d0	                            cmp rax, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x40022c4	     0xf84a6010000	                            je 0x4002470	       101	d-demangle.c	FUNCTION_4	IF_1
0x40022ca	          0x4189d4	                           mov r12d, edx	       105	d-demangle.c	FUNCTION_4
0x40022cd	          0x4c89ee	                            mov rsi, r13	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40022d0	          0x4889df	                            mov rdi, rbx	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40022d3	          0x4129c4	                           sub r12d, eax	       105	d-demangle.c	FUNCTION_4
0x40022d6	      0xe8f5f3ffff	                     call sym.dlang_type	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40022db	          0x488b33	                    mov rsi, qword [rbx]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40022de	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40022e2	          0x4839ce	                            cmp rsi, rcx	       101	d-demangle.c	FUNCTION_4	IF_1
0x40022e5	     0xf8445010000	                            je 0x4002430	       101	d-demangle.c	FUNCTION_4	IF_1
0x40022eb	            0x29f1	                            sub ecx, esi	       105	d-demangle.c	FUNCTION_4
0x40022ed	          0x4139cc	                           cmp r12d, ecx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40022f0	     0xf881a010000	                            js 0x4002410	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40022f6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x40022fb	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x40022fe	            0x740f	                            je 0x400230f	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002300	      0x4889442408	                mov qword [rsp + 8], rax	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002305	      0xe800000000	                          call 0x400230a	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400230a	      0x488b442408	                mov rax, qword [rsp + 8]	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400230f	            0x85ed	                           test ebp, ebp	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002311	            0x7512	                           jne 0x4002325	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002313	          0x4885c0	                           test rax, rax	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002316	     0xf8444010000	                            je 0x4002460	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x400231c	          0x803800	                       cmp byte [rax], 0	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x400231f	     0xf853b010000	                           jne 0x4002460	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002325	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1407	d-demangle.c	FUNCTION_27
0x400232a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1407	d-demangle.c	FUNCTION_27
0x4002333	     0xf8598010000	                           jne 0x40024d1	      1407	d-demangle.c	FUNCTION_27
0x4002339	        0x4883c438	                           add rsp, 0x38	      1407	d-demangle.c	FUNCTION_27
0x400233d	              0x5b	                                 pop rbx	      1407	d-demangle.c	FUNCTION_27
0x400233e	              0x5d	                                 pop rbp	      1407	d-demangle.c	FUNCTION_27
0x400233f	            0x415c	                                 pop r12	      1407	d-demangle.c	FUNCTION_27
0x4002341	            0x415d	                                 pop r13	      1407	d-demangle.c	FUNCTION_27
0x4002343	              0xc3	                                     ret	      1407	d-demangle.c	FUNCTION_27
0x4002344	         0xf1f4000	                         nop dword [rax]	      1407	d-demangle.c	FUNCTION_27
0x4002348	      0xb801000000	                              mov eax, 1	      1407	d-demangle.c	FUNCTION_27
0x400234d	          0x48d3e0	                             shl rax, cl	      1407	d-demangle.c	FUNCTION_27
0x4002350	      0xa901900b00	                       test eax, 0xb9001	      1407	d-demangle.c	FUNCTION_27
0x4002355	     0xf845fffffff	                            je 0x40022ba	      1407	d-demangle.c	FUNCTION_27
0x400235b	          0x488b03	                    mov rax, qword [rbx]	      1407	d-demangle.c	FUNCTION_27
0x400235e	        0x4c8b6308	                mov r12, qword [rbx + 8]	      1407	d-demangle.c	FUNCTION_27
0x4002362	          0x4c39e0	                            cmp rax, r12	       101	d-demangle.c	FUNCTION_4	IF_1
0x4002365	     0xf8435010000	                            je 0x40024a0	       101	d-demangle.c	FUNCTION_4	IF_1
0x400236b	          0x4c89ee	                            mov rsi, r13	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x400236e	          0x4889df	                            mov rdi, rbx	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4002371	          0x4129c4	                           sub r12d, eax	       105	d-demangle.c	FUNCTION_4
0x4002374	      0xe8e7deffff	          call sym.dlang_call_convention	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x4002379	          0x4889df	                            mov rdi, rbx	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x400237c	          0x4889c6	                            mov rsi, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x400237f	      0xe89cdfffff	               call sym.dlang_attributes	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4002384	          0x488b0b	                    mov rcx, qword [rbx]	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x4002387	        0x488b5308	                mov rdx, qword [rbx + 8]	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x400238b	          0x4989c5	                            mov r13, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x400238e	          0x4839d1	                            cmp rcx, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x4002391	     0xf8401010000	                            je 0x4002498	       101	d-demangle.c	FUNCTION_4	IF_1
0x4002397	            0x29ca	                            sub edx, ecx	       105	d-demangle.c	FUNCTION_4
0x4002399	          0x4139d4	                           cmp r12d, edx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400239c	     0xf889e000000	                            js 0x4002440	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40023a2	      0xbe00000000	                              mov esi, 0	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x40023a7	          0x4889df	                            mov rdi, rbx	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x40023aa	      0xe891ddffff	                  call sym.string_append	      1382	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_9
0x40023af	          0x4c89ee	                            mov rsi, r13	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x40023b2	          0x4889df	                            mov rdi, rbx	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x40023b5	      0xe856faffff	            call sym.dlang_function_args	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x40023ba	      0xbe00000000	                              mov esi, 0	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x40023bf	          0x4889df	                            mov rdi, rbx	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x40023c2	          0x4989c5	                            mov r13, rax	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x40023c5	      0xe876ddffff	                  call sym.string_append	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x40023ca	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x40023cf	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1384	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_11
0x40023d4	          0x4839d6	                            cmp rsi, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x40023d7	     0xf84ddfeffff	                            je 0x40022ba	       101	d-demangle.c	FUNCTION_4	IF_1
0x40023dd	          0x4829f2	                            sub rdx, rsi	       105	d-demangle.c	FUNCTION_4
0x40023e0	            0x85d2	                           test edx, edx	       129	d-demangle.c	FUNCTION_7	IF_1
0x40023e2	     0xf84d2feffff	                            je 0x40022ba	       129	d-demangle.c	FUNCTION_7	IF_1
0x40023e8	          0x4889df	                            mov rdi, rbx	       129	d-demangle.c	FUNCTION_7	IF_1
0x40023eb	      0xe8b0e0ffff	          call sym.string_appendn.part.5	       129	d-demangle.c	FUNCTION_7	IF_1
0x40023f0	      0xe9c5feffff	                           jmp 0x40022ba	       129	d-demangle.c	FUNCTION_7	IF_1
0x40023f5	           0xf1f00	                         nop dword [rax]	       129	d-demangle.c	FUNCTION_7	IF_1
0x40023f8	        0x4883c001	                              add rax, 1	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40023fc	            0x85ed	                           test ebp, ebp	      1400	d-demangle.c	FUNCTION_27	IF_5
0x40023fe	     0xf840fffffff	                            je 0x4002313	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002404	      0xe91cffffff	                           jmp 0x4002325	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002409	     0xf1f80000000	                         nop dword [rax]	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002410	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002415	          0x4963d4	                        movsxd rdx, r12d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4002418	          0x4801f2	                            add rdx, rsi	       113	d-demangle.c	FUNCTION_5	IF_1
0x400241b	        0x48895308	                mov qword [rbx + 8], rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x400241f	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002422	     0xf85d8feffff	                           jne 0x4002300	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002428	      0xe9e2feffff	                           jmp 0x400230f	        85	d-demangle.c	FUNCTION_2	IF_1
0x400242d	           0xf1f00	                         nop dword [rax]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002430	            0x31c9	                            xor ecx, ecx	       103	d-demangle.c	FUNCTION_4	IF_1
0x4002432	      0xe9b6feffff	                           jmp 0x40022ed	       103	d-demangle.c	FUNCTION_4	IF_1
0x4002437	    0x660f1f840000	                    nop word [rax + rax]	       103	d-demangle.c	FUNCTION_4	IF_1
0x4002440	          0x4d63e4	                        movsxd r12, r12d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4002443	          0x4c01e1	                            add rcx, r12	       113	d-demangle.c	FUNCTION_5	IF_1
0x4002446	        0x48894b08	                mov qword [rbx + 8], rcx	       113	d-demangle.c	FUNCTION_5	IF_1
0x400244a	      0xe953ffffff	                           jmp 0x40023a2	       113	d-demangle.c	FUNCTION_5	IF_1
0x400244f	              0x90	                                     nop	       113	d-demangle.c	FUNCTION_5	IF_1
0x4002450	            0x85ed	                           test ebp, ebp	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002452	     0xf85cdfeffff	                           jne 0x4002325	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002458	     0xf1f84000000	                   nop dword [rax + rax]	      1400	d-demangle.c	FUNCTION_27	IF_5
0x4002460	            0x31c0	                            xor eax, eax	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002462	      0xe9befeffff	                           jmp 0x4002325	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002467	    0x660f1f840000	                    nop word [rax + rax]	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4002470	          0x4c89ee	                            mov rsi, r13	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4002473	          0x4889df	                            mov rdi, rbx	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4002476	      0xe855f2ffff	                     call sym.dlang_type	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x400247b	          0x488b33	                    mov rsi, qword [rbx]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x400247e	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4002482	          0x4839f1	                            cmp rcx, rsi	       101	d-demangle.c	FUNCTION_4	IF_1
0x4002485	     0xf846bfeffff	                            je 0x40022f6	       101	d-demangle.c	FUNCTION_4	IF_1
0x400248b	          0x4531e4	                          xor r12d, r12d	       103	d-demangle.c	FUNCTION_4	IF_1
0x400248e	      0xe958feffff	                           jmp 0x40022eb	       103	d-demangle.c	FUNCTION_4	IF_1
0x4002493	       0xf1f440000	                   nop dword [rax + rax]	       103	d-demangle.c	FUNCTION_4	IF_1
0x4002498	            0x31d2	                            xor edx, edx	       103	d-demangle.c	FUNCTION_4	IF_1
0x400249a	      0xe9fafeffff	                           jmp 0x4002399	       103	d-demangle.c	FUNCTION_4	IF_1
0x400249f	              0x90	                                     nop	       103	d-demangle.c	FUNCTION_4	IF_1
0x40024a0	          0x4c89ee	                            mov rsi, r13	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x40024a3	          0x4889df	                            mov rdi, rbx	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x40024a6	      0xe8b5ddffff	          call sym.dlang_call_convention	      1378	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_6
0x40024ab	          0x4889df	                            mov rdi, rbx	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40024ae	          0x4889c6	                            mov rsi, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40024b1	      0xe86adeffff	               call sym.dlang_attributes	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40024b6	          0x488b0b	                    mov rcx, qword [rbx]	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40024b9	        0x488b5308	                mov rdx, qword [rbx + 8]	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40024bd	          0x4989c5	                            mov r13, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40024c0	          0x4839d1	                            cmp rcx, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x40024c3	     0xf84d9feffff	                            je 0x40023a2	       101	d-demangle.c	FUNCTION_4	IF_1
0x40024c9	          0x4531e4	                          xor r12d, r12d	       103	d-demangle.c	FUNCTION_4	IF_1
0x40024cc	      0xe9c6feffff	                           jmp 0x4002397	       103	d-demangle.c	FUNCTION_4	IF_1
0x40024d1	      0xe800000000	                          call 0x40024d6	      1407	d-demangle.c	FUNCTION_27
string_append	SWITCH,0:functions,0:CALL,3:FOR,0:DO,0:WHILE,0:IF,0:ELSE,0	21
0x4000140	            0x4154	                                push r12	       119	d-demangle.c	FUNCTION_6
0x4000142	              0x55	                                push rbp	       119	d-demangle.c	FUNCTION_6
0x4000143	          0x4889fd	                            mov rbp, rdi	       119	d-demangle.c	FUNCTION_6
0x4000146	              0x53	                                push rbx	       119	d-demangle.c	FUNCTION_6
0x4000147	          0x4889f7	                            mov rdi, rsi	       120	d-demangle.c	FUNCTION_6	CALL_1
0x400014a	          0x4989f4	                            mov r12, rsi	       119	d-demangle.c	FUNCTION_6
0x400014d	      0xe800000000	                          call 0x4000152	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4000152	          0x4889ef	                            mov rdi, rbp	       121	d-demangle.c	FUNCTION_6	CALL_2
0x4000155	            0x89c6	                            mov esi, eax	       121	d-demangle.c	FUNCTION_6	CALL_2
0x4000157	          0x4889c3	                            mov rbx, rax	       120	d-demangle.c	FUNCTION_6	CALL_1
0x400015a	      0xe851ffffff	                    call sym.string_need	       121	d-demangle.c	FUNCTION_6	CALL_2
0x400015f	        0x488b7d08	                mov rdi, qword [rbp + 8]	        53	string3.h	FUNCTION_33	CALL_3
0x4000163	          0x4863db	                         movsxd rbx, ebx	       122	d-demangle.c	FUNCTION_6	CALL_3
0x4000166	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_33	CALL_3
0x4000169	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_33	CALL_3
0x400016c	      0xe800000000	                          call 0x4000171	        53	string3.h	FUNCTION_33	CALL_3
0x4000171	        0x48015d08	                add qword [rbp + 8], rbx	       123	d-demangle.c	FUNCTION_6
0x4000175	              0x5b	                                 pop rbx	       124	d-demangle.c	FUNCTION_6
0x4000176	              0x5d	                                 pop rbp	       124	d-demangle.c	FUNCTION_6
0x4000177	            0x415c	                                 pop r12	       124	d-demangle.c	FUNCTION_6
0x4000179	              0xc3	                                     ret	       124	d-demangle.c	FUNCTION_6
dlang_function_args	SWITCH,2:functions,0:CALL,10:FOR,0:DO,0:WHILE,1:IF,4:ELSE,0	131
0x4001e10	          0x4885f6	                           test rsi, rsi	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001e13	     0xf84c7010000	                            je 0x4001fe0	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001e19	            0x4155	                                push r13	       470	d-demangle.c	FUNCTION_17
0x4001e1b	            0x4154	                                push r12	       470	d-demangle.c	FUNCTION_17
0x4001e1d	              0x55	                                push rbp	       470	d-demangle.c	FUNCTION_17
0x4001e1e	              0x53	                                push rbx	       470	d-demangle.c	FUNCTION_17
0x4001e1f	          0x4889f3	                            mov rbx, rsi	       470	d-demangle.c	FUNCTION_17
0x4001e22	        0x4883ec08	                              sub rsp, 8	       470	d-demangle.c	FUNCTION_17
0x4001e26	           0xfb606	                   movzx eax, byte [rsi]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001e29	            0x84c0	                             test al, al	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001e2b	     0xf8426010000	                            je 0x4001f57	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001e31	          0x4889fd	                            mov rbp, rdi	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001e34	          0x4531e4	                          xor r12d, r12d	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001e37	            0x3c59	                            cmp al, 0x59	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001e39	     0xf8491000000	                            je 0x4001ed0	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001e3f	            0x3c5a	                            cmp al, 0x5a	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001e41	            0x747d	                            je 0x4001ec0	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001e43	            0x3c58	                            cmp al, 0x58	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001e45	            0x7451	                            je 0x4001e98	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001e47	          0x4d85e4	                           test r12, r12	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4001e4a	     0xf8510010000	                           jne 0x4001f60	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4001e50	           0xfb603	                   movzx eax, byte [rbx]	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001e53	            0x3c4d	                            cmp al, 0x4d	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001e55	     0xf8465010000	                            je 0x4001fc0	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001e5b	            0x3c4e	                            cmp al, 0x4e	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001e5d	     0xf8415010000	                            je 0x4001f78	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001e63	            0x3c4b	                            cmp al, 0x4b	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e65	     0xf84b5000000	                            je 0x4001f20	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e6b	            0x3c4c	                            cmp al, 0x4c	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e6d	     0xf842d010000	                            je 0x4001fa0	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e73	            0x3c4a	                            cmp al, 0x4a	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e75	     0xf85b6000000	                           jne 0x4001f31	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e7b	      0xbe00000000	                              mov esi, 0	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x4001e80	          0x4889ef	                            mov rdi, rbp	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x4001e83	        0x4883c301	                              add rbx, 1	       510	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e87	      0xe8b4e2ffff	                  call sym.string_append	       511	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_7
0x4001e8c	      0xe9a0000000	                           jmp 0x4001f31	       512	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e91	     0xf1f80000000	                         nop dword [rax]	       512	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001e98	        0x4883c301	                              add rbx, 1	       478	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001e9c	      0xbe00000000	                              mov esi, 0	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4001ea1	          0x4889ef	                            mov rdi, rbp	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4001ea4	      0xe897e2ffff	                  call sym.string_append	       479	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4001ea9	          0x4889d8	                            mov rax, rbx	       480	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001eac	        0x4883c408	                              add rsp, 8	       526	d-demangle.c	FUNCTION_17
0x4001eb0	              0x5b	                                 pop rbx	       526	d-demangle.c	FUNCTION_17
0x4001eb1	              0x5d	                                 pop rbp	       526	d-demangle.c	FUNCTION_17
0x4001eb2	            0x415c	                                 pop r12	       526	d-demangle.c	FUNCTION_17
0x4001eb4	            0x415d	                                 pop r13	       526	d-demangle.c	FUNCTION_17
0x4001eb6	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x4001eb7	    0x660f1f840000	                    nop word [rax + rax]	       526	d-demangle.c	FUNCTION_17
0x4001ec0	        0x4883c408	                              add rsp, 8	       526	d-demangle.c	FUNCTION_17
0x4001ec4	        0x488d4301	                      lea rax, [rbx + 1]	       489	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001ec8	              0x5b	                                 pop rbx	       526	d-demangle.c	FUNCTION_17
0x4001ec9	              0x5d	                                 pop rbp	       526	d-demangle.c	FUNCTION_17
0x4001eca	            0x415c	                                 pop r12	       526	d-demangle.c	FUNCTION_17
0x4001ecc	            0x415d	                                 pop r13	       526	d-demangle.c	FUNCTION_17
0x4001ece	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x4001ecf	              0x90	                                     nop	       526	d-demangle.c	FUNCTION_17
0x4001ed0	        0x4883c301	                              add rbx, 1	       482	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001ed4	          0x4d85e4	                           test r12, r12	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001ed7	            0x751f	                           jne 0x4001ef8	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001ed9	      0xbe00000000	                              mov esi, 0	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001ede	          0x4889ef	                            mov rdi, rbp	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001ee1	      0xe85ae2ffff	                  call sym.string_append	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001ee6	          0x4889d8	                            mov rax, rbx	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001ee9	        0x4883c408	                              add rsp, 8	       526	d-demangle.c	FUNCTION_17
0x4001eed	              0x5b	                                 pop rbx	       526	d-demangle.c	FUNCTION_17
0x4001eee	              0x5d	                                 pop rbp	       526	d-demangle.c	FUNCTION_17
0x4001eef	            0x415c	                                 pop r12	       526	d-demangle.c	FUNCTION_17
0x4001ef1	            0x415d	                                 pop r13	       526	d-demangle.c	FUNCTION_17
0x4001ef3	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x4001ef4	         0xf1f4000	                         nop dword [rax]	       526	d-demangle.c	FUNCTION_17
0x4001ef8	      0xbe00000000	                              mov esi, 0	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4001efd	          0x4889ef	                            mov rdi, rbp	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4001f00	      0xe83be2ffff	                  call sym.string_append	       484	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4001f05	      0xbe00000000	                              mov esi, 0	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001f0a	          0x4889ef	                            mov rdi, rbp	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001f0d	      0xe82ee2ffff	                  call sym.string_append	       485	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0x4001f12	          0x4889d8	                            mov rax, rbx	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001f15	            0xebd2	                           jmp 0x4001ee9	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001f17	    0x660f1f840000	                    nop word [rax + rax]	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001f20	      0xbe00000000	                              mov esi, 0	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x4001f25	          0x4889ef	                            mov rdi, rbp	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x4001f28	        0x4883c301	                              add rbx, 1	       514	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001f2c	      0xe80fe2ffff	                  call sym.string_append	       515	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_8
0x4001f31	          0x4889de	                            mov rsi, rbx	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001f34	          0x4889ef	                            mov rdi, rbp	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001f37	      0xe894f7ffff	                     call sym.dlang_type	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001f3c	          0x4885c0	                           test rax, rax	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f3f	          0x4889c3	                            mov rbx, rax	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4001f42	     0xf849b000000	                            je 0x4001fe3	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f48	           0xfb600	                   movzx eax, byte [rax]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f4b	        0x4983c401	                              add r12, 1	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f4f	            0x84c0	                             test al, al	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f51	     0xf85e0feffff	                           jne 0x4001e37	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f57	          0x4889d8	                            mov rax, rbx	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f5a	      0xe94dffffff	                           jmp 0x4001eac	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f5f	              0x90	                                     nop	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001f60	      0xbe00000000	                              mov esi, 0	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001f65	          0x4889ef	                            mov rdi, rbp	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001f68	      0xe8d3e1ffff	                  call sym.string_append	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001f6d	      0xe9defeffff	                           jmp 0x4001e50	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001f72	    0x660f1f440000	                    nop word [rax + rax]	       493	d-demangle.c	FUNCTION_17	WHILE_1	CALL_4
0x4001f78	        0x807b016b	                cmp byte [rbx + 1], 0x6b	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001f7c	            0x75b3	                           jne 0x4001f31	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001f7e	        0x4c8d6b02	                      lea r13, [rbx + 2]	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001f82	      0xbe00000000	                              mov esi, 0	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4001f87	          0x4889ef	                            mov rdi, rbp	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4001f8a	      0xe8b1e1ffff	                  call sym.string_append	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4001f8f	         0xfb64302	               movzx eax, byte [rbx + 2]	       504	d-demangle.c	FUNCTION_17	WHILE_1	IF_4	CALL_6
0x4001f93	          0x4c89eb	                            mov rbx, r13	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001f96	      0xe9c8feffff	                           jmp 0x4001e63	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001f9b	       0xf1f440000	                   nop dword [rax + rax]	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4001fa0	      0xbe00000000	                              mov esi, 0	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4001fa5	          0x4889ef	                            mov rdi, rbp	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4001fa8	        0x4883c301	                              add rbx, 1	       518	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001fac	      0xe88fe1ffff	                  call sym.string_append	       519	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2	CALL_9
0x4001fb1	      0xe97bffffff	                           jmp 0x4001f31	       520	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001fb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       520	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4001fc0	        0x4c8d6b01	                      lea r13, [rbx + 1]	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001fc4	      0xbe00000000	                              mov esi, 0	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4001fc9	          0x4889ef	                            mov rdi, rbp	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4001fcc	      0xe86fe1ffff	                  call sym.string_append	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4001fd1	         0xfb64301	               movzx eax, byte [rbx + 1]	       498	d-demangle.c	FUNCTION_17	WHILE_1	IF_3	CALL_5
0x4001fd5	          0x4c89eb	                            mov rbx, r13	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001fd8	      0xe97efeffff	                           jmp 0x4001e5b	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001fdd	           0xf1f00	                         nop dword [rax]	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4001fe0	            0x31c0	                            xor eax, eax	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001fe2	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x4001fe3	            0x31c0	                            xor eax, eax	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4001fe5	      0xe9c2feffff	                           jmp 0x4001eac	       473	d-demangle.c	FUNCTION_17	WHILE_1
dlang_identifier	SWITCH,1:functions,0:CALL,36:FOR,1:DO,0:WHILE,0:IF,16:ELSE,5	347
0x4000f20	            0x4157	                                push r15	       786	d-demangle.c	FUNCTION_19
0x4000f22	            0x4156	                                push r14	       786	d-demangle.c	FUNCTION_19
0x4000f24	          0x4989ff	                            mov r15, rdi	       786	d-demangle.c	FUNCTION_19
0x4000f27	            0x4155	                                push r13	       786	d-demangle.c	FUNCTION_19
0x4000f29	            0x4154	                                push r12	       786	d-demangle.c	FUNCTION_19
0x4000f2b	          0x4889f7	                            mov rdi, rsi	       786	d-demangle.c	FUNCTION_19
0x4000f2e	              0x55	                                push rbp	       786	d-demangle.c	FUNCTION_19
0x4000f2f	              0x53	                                push rbx	       786	d-demangle.c	FUNCTION_19
0x4000f30	          0x4189d6	                           mov r14d, edx	       786	d-demangle.c	FUNCTION_19
0x4000f33	        0x4883ec48	                           sub rsp, 0x48	       786	d-demangle.c	FUNCTION_19
0x4000f37	      0x488d742418	                   lea rsi, [rsp + 0x18]	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4000f3c	    0x64488b042528	                mov rax, qword fs:[0x28]	       786	d-demangle.c	FUNCTION_19
0x4000f45	      0x4889442438	             mov qword [rsp + 0x38], rax	       786	d-demangle.c	FUNCTION_19
0x4000f4a	            0x31c0	                            xor eax, eax	       786	d-demangle.c	FUNCTION_19
0x4000f4c	      0xe8eff0ffff	                   call sym.dlang_number	       788	d-demangle.c	FUNCTION_19	CALL_1
0x4000f51	          0x4885c0	                           test rax, rax	       790	d-demangle.c	FUNCTION_19	IF_1
0x4000f54	     0xf84fe000000	                            je 0x4001058	       790	d-demangle.c	FUNCTION_19	IF_1
0x4000f5a	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       790	d-demangle.c	FUNCTION_19	IF_1
0x4000f5f	          0x4885db	                           test rbx, rbx	       790	d-demangle.c	FUNCTION_19	IF_1
0x4000f62	     0xf84f0000000	                            je 0x4001058	       790	d-demangle.c	FUNCTION_19	IF_1
0x4000f68	        0x4183fe04	                             cmp r14d, 4	       796	d-demangle.c	FUNCTION_19	IF_2
0x4000f6c	          0x4989c4	                            mov r12, rax	       796	d-demangle.c	FUNCTION_19	IF_2
0x4000f6f	     0xf840b010000	                            je 0x4001080	       796	d-demangle.c	FUNCTION_19	IF_2
0x4000f75	          0x4889c7	                            mov rdi, rax	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4000f78	      0xe800000000	                          call 0x4000f7d	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4000f7d	          0x4839d8	                            cmp rax, rbx	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4000f80	     0xf82d2000000	                            jb 0x4001058	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4000f86	        0x4883fb04	                              cmp rbx, 4	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000f8a	            0x7f1c	                            jg 0x4000fa8	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000f8c	        0x488d43fa	                      lea rax, [rbx - 6]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4000f90	        0x4883f806	                              cmp rax, 6	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4000f94	     0xf87c6020000	                            ja 0x4001260	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4000f9a	    0xff24c5000000	                       jmp qword [rax*8]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4000fa1	     0xf1f80000000	                         nop dword [rax]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4000fa8	      0x41803c245f	                    cmp byte [r12], 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000fad	            0x75dd	                           jne 0x4000f8c	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000faf	    0x41807c24015f	                cmp byte [r12 + 1], 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000fb5	            0x75d5	                           jne 0x4000f8c	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000fb7	    0x410fb6442402	               movzx eax, byte [r12 + 2]	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000fbd	          0x83e854	                           sub eax, 0x54	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000fc0	            0x3c01	                               cmp al, 1	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000fc2	            0x77c8	                            ja 0x4000f8c	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4000fc4	    0x410fb6542403	               movzx edx, byte [r12 + 3]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4000fca	    0xf68412000000	                test byte [rdx + rdx], 4	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4000fd2	     0xf8480000000	                            je 0x4001058	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4000fd8	          0x80fa30	                            cmp dl, 0x30	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4000fdb	            0x747b	                            je 0x4001058	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4000fdd	      0x498d742403	                      lea rsi, [r12 + 3]	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4000fe2	      0xba03000000	                              mov edx, 3	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4000fe7	          0x4c89ff	                            mov rdi, r15	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4000fea	      0xe831ffffff	               call sym.dlang_identifier	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4000fef	      0xbe00000000	                              mov esi, 0	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x4000ff4	          0x4889c5	                            mov rbp, rax	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4000ff7	          0x4c89ff	                            mov rdi, r15	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x4000ffa	      0xe841f1ffff	                  call sym.string_append	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x4000fff	          0x4885ed	                           test rbp, rbp	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001002	            0x7444	                            je 0x4001048	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001004	         0xfb64500	                   movzx eax, byte [rbp]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001008	            0x84c0	                             test al, al	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x400100a	     0xf849d030000	                            je 0x40013ad	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001010	          0x4531ed	                          xor r13d, r13d	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001013	            0x3c5a	                            cmp al, 0x5a	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4001015	     0xf8445040000	                            je 0x4001460	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x400101b	          0x4d85ed	                           test r13, r13	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x400101e	     0xf854a030000	                           jne 0x400136e	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x4001024	         0xfb64500	                   movzx eax, byte [rbp]	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4001028	            0x3c48	                            cmp al, 0x48	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x400102a	     0xf8431030000	                            je 0x4001361	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4001030	            0x3c54	                            cmp al, 0x54	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001032	     0xf840f040000	                            je 0x4001447	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001038	            0x3c56	                            cmp al, 0x56	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x400103a	     0xf8491030000	                            je 0x40013d1	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001040	            0x3c53	                            cmp al, 0x53	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001042	     0xf8438030000	                            je 0x4001380	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001048	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x400104d	          0x4c89ff	                            mov rdi, r15	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001050	      0xe8ebf0ffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001055	           0xf1f00	                         nop dword [rax]	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001058	            0x31c0	                            xor eax, eax	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x400105a	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       931	d-demangle.c	FUNCTION_19
0x400105f	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       931	d-demangle.c	FUNCTION_19
0x4001068	     0xf85ed030000	                           jne 0x400145b	       931	d-demangle.c	FUNCTION_19
0x400106e	        0x4883c448	                           add rsp, 0x48	       931	d-demangle.c	FUNCTION_19
0x4001072	              0x5b	                                 pop rbx	       931	d-demangle.c	FUNCTION_19
0x4001073	              0x5d	                                 pop rbp	       931	d-demangle.c	FUNCTION_19
0x4001074	            0x415c	                                 pop r12	       931	d-demangle.c	FUNCTION_19
0x4001076	            0x415d	                                 pop r13	       931	d-demangle.c	FUNCTION_19
0x4001078	            0x415e	                                 pop r14	       931	d-demangle.c	FUNCTION_19
0x400107a	            0x415f	                                 pop r15	       931	d-demangle.c	FUNCTION_19
0x400107c	              0xc3	                                     ret	       931	d-demangle.c	FUNCTION_19
0x400107d	           0xf1f00	                         nop dword [rax]	       931	d-demangle.c	FUNCTION_19
0x4001080	        0x498b4708	                mov rax, qword [r15 + 8]	       931	d-demangle.c	FUNCTION_19
0x4001084	          0x498b17	                    mov rdx, qword [r15]	       931	d-demangle.c	FUNCTION_19
0x4001087	          0x4d89e6	                            mov r14, r12	       813	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x400108a	    0x49bd67666666	          movabs r13, 0x6666666666666667	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001094	            0x89c5	                            mov ebp, eax	       105	d-demangle.c	FUNCTION_4
0x4001096	            0x29d5	                            sub ebp, edx	       105	d-demangle.c	FUNCTION_4
0x4001098	          0x4839c2	                            cmp rdx, rax	       105	d-demangle.c	FUNCTION_4
0x400109b	      0xb800000000	                              mov eax, 0	       105	d-demangle.c	FUNCTION_4
0x40010a0	           0xf44e8	                          cmove ebp, eax	       105	d-demangle.c	FUNCTION_4
0x40010a3	          0x4c89e0	                            mov rax, r12	       813	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40010a6	          0x4863fd	                         movsxd rdi, ebp	       113	d-demangle.c	FUNCTION_5	IF_1
0x40010a9	      0x48897c2408	                mov qword [rsp + 8], rdi	       113	d-demangle.c	FUNCTION_5	IF_1
0x40010ae	            0x6690	                                     nop	       113	d-demangle.c	FUNCTION_5	IF_1
0x40010b0	           0xfb610	                   movzx edx, byte [rax]	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40010b3	    0xf68412000000	                test byte [rdx + rdx], 4	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40010bb	            0x757f	                           jne 0x400113c	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40010bd	      0xbf00000000	                              mov edi, 0	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40010c2	      0xb902000000	                              mov ecx, 2	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40010c7	          0x4889c6	                            mov rsi, rax	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40010ca	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40010cc	     0xf8496000000	                            je 0x4001168	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x40010d2	          0x4889c2	                            mov rdx, rax	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x40010d5	          0x4c29f2	                            sub rdx, r14	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x40010d8	          0x4839d3	                            cmp rbx, rdx	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x40010db	     0xf8479ffffff	                            je 0x400105a	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x40010e1	          0x4889d8	                            mov rax, rbx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40010e4	        0x498b7708	                mov rsi, qword [r15 + 8]	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40010e8	        0x48c1fb3f	                           sar rbx, 0x3f	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40010ec	          0x49f7ed	                                imul r13	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40010ef	          0x498b07	                    mov rax, qword [r15]	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40010f2	            0x89f1	                            mov ecx, esi	       105	d-demangle.c	FUNCTION_4
0x40010f4	            0x29c1	                            sub ecx, eax	       105	d-demangle.c	FUNCTION_4
0x40010f6	        0x48c1fa02	                              sar rdx, 2	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40010fa	          0x4829da	                            sub rdx, rbx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40010fd	          0x4839f0	                            cmp rax, rsi	       105	d-demangle.c	FUNCTION_4
0x4001100	      0xbe00000000	                              mov esi, 0	       105	d-demangle.c	FUNCTION_4
0x4001105	           0xf44ce	                          cmove ecx, esi	       105	d-demangle.c	FUNCTION_4
0x4001108	          0x4889d3	                            mov rbx, rdx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400110b	            0x39cd	                            cmp ebp, ecx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400110d	            0x7849	                            js 0x4001158	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x400110f	          0x4d85e4	                           test r12, r12	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001112	        0x498d46ff	                      lea rax, [r14 - 1]	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001116	     0xf843cffffff	                            je 0x4001058	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400111c	          0x4885d2	                           test rdx, rdx	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x400111f	          0x4989c6	                            mov r14, rax	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4001122	            0x758c	                           jne 0x40010b0	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x4001124	           0xfb610	                   movzx edx, byte [rax]	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x4001127	          0x4d89e6	                            mov r14, r12	       811	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x400112a	          0x4531e4	                          xor r12d, r12d	       813	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x400112d	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       811	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x4001132	    0xf68412000000	                test byte [rdx + rdx], 4	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x400113a	            0x7481	                            je 0x40010bd	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x400113c	      0xba03000000	                              mov edx, 3	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001141	          0x4889c6	                            mov rsi, rax	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001144	          0x4c89ff	                            mov rdi, r15	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x4001147	      0xe844030000	          call sym.dlang_parse_qualified	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x400114c	          0x4885c0	                           test rax, rax	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400114f	            0x7581	                           jne 0x40010d2	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001151	            0xeb8e	                           jmp 0x40010e1	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001153	       0xf1f440000	                   nop dword [rax + rax]	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4001158	      0x4803442408	                add rax, qword [rsp + 8]	       113	d-demangle.c	FUNCTION_5	IF_1
0x400115d	        0x49894708	                mov qword [r15 + 8], rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001161	            0xebac	                           jmp 0x400110f	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001163	       0xf1f440000	                   nop dword [rax + rax]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4001168	      0xba01000000	                              mov edx, 1	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x400116d	          0x4889c6	                            mov rsi, rax	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001170	          0x4c89ff	                            mov rdi, r15	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001173	      0xe8b8100000	             call sym.dlang_parse_mangle	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001178	            0xebd2	                           jmp 0x400114c	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x400117a	    0x660f1f440000	                    nop word [rax + rax]	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4001180	      0xbf00000000	                              mov edi, 0	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001185	      0xb90d000000	                            mov ecx, 0xd	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x400118a	          0x4c89e6	                            mov rsi, r12	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x400118d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x400118f	     0xf842a010000	                            je 0x40012bf	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4001195	            0x89da	                            mov edx, ebx	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001197	          0x4c89e6	                            mov rsi, r12	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x400119a	          0x4c89ff	                            mov rdi, r15	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x400119d	      0xe8fef2ffff	          call sym.string_appendn.part.5	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x40011a2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x40011a7	          0x4c01e0	                            add rax, r12	       930	d-demangle.c	FUNCTION_19
0x40011aa	      0xe9abfeffff	                           jmp 0x400105a	       930	d-demangle.c	FUNCTION_19
0x40011af	              0x90	                                     nop	       930	d-demangle.c	FUNCTION_19
0x40011b0	          0x4c89e6	                            mov rsi, r12	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011b3	      0xbf00000000	                              mov edi, 0	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011b8	      0xb908000000	                              mov ecx, 8	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011bd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011bf	      0xbe00000000	                              mov esi, 0	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011c4	            0x75cf	                           jne 0x4001195	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011c6	          0x4c89ff	                            mov rdi, r15	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011c9	      0xe852f2ffff	          call sym.string_prepend.part.4	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011ce	          0x498b0f	                    mov rcx, qword [r15]	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011d1	        0x498b4708	                mov rax, qword [r15 + 8]	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40011d5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       101	d-demangle.c	FUNCTION_4	IF_1
0x40011dc	          0x4839c1	                            cmp rcx, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x40011df	            0x7409	                            je 0x40011ea	       101	d-demangle.c	FUNCTION_4	IF_1
0x40011e1	          0x4829c8	                            sub rax, rcx	       101	d-demangle.c	FUNCTION_4	IF_1
0x40011e4	          0x83e801	                              sub eax, 1	       101	d-demangle.c	FUNCTION_4	IF_1
0x40011e7	          0x4863d0	                         movsxd rdx, eax	       101	d-demangle.c	FUNCTION_4	IF_1
0x40011ea	        0x488d0411	                    lea rax, [rcx + rdx]	       113	d-demangle.c	FUNCTION_5	IF_1
0x40011ee	        0x49894708	                mov qword [r15 + 8], rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x40011f2	          0x4c89e0	                            mov rax, r12	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x40011f5	      0x4803442418	             add rax, qword [rsp + 0x18]	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x40011fa	      0xe95bfeffff	                           jmp 0x400105a	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x40011ff	              0x90	                                     nop	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4001200	      0xbf00000000	                              mov edi, 0	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001205	      0xb90d000000	                            mov ecx, 0xd	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400120a	          0x4c89e6	                            mov rsi, r12	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400120d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400120f	     0xf8580ffffff	                           jne 0x4001195	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4001215	      0xbe00000000	                              mov esi, 0	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x400121a	          0x4c89ff	                            mov rdi, r15	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x400121d	      0xe81eefffff	                  call sym.string_append	       897	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_27
0x4001222	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001227	      0x498d440403	                lea rax, [r12 + rax + 3]	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x400122c	      0xe929feffff	                           jmp 0x400105a	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001231	     0xf1f80000000	                         nop dword [rax]	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4001238	          0x4c89e6	                            mov rsi, r12	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x400123b	      0xbf00000000	                              mov edi, 0	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001240	      0xb90c000000	                            mov ecx, 0xc	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001245	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001247	      0xbe00000000	                              mov esi, 0	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x400124c	     0xf8543ffffff	                           jne 0x4001195	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001252	      0xe96fffffff	                           jmp 0x40011c6	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001257	    0x660f1f840000	                    nop word [rax + rax]	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x4001260	            0x85db	                           test ebx, ebx	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001262	            0x89da	                            mov edx, ebx	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x4001264	     0xf852dffffff	                           jne 0x4001197	       129	d-demangle.c	FUNCTION_7	IF_1
0x400126a	          0x4889d8	                            mov rax, rbx	       129	d-demangle.c	FUNCTION_7	IF_1
0x400126d	      0xe935ffffff	                           jmp 0x40011a7	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001272	    0x660f1f440000	                    nop word [rax + rax]	       129	d-demangle.c	FUNCTION_7	IF_1
0x4001278	        0x4883fb06	                              cmp rbx, 6	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400127c	            0x764b	                           jbe 0x40012c9	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400127e	      0xbf00000000	                              mov edi, 0	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001283	      0xb907000000	                              mov ecx, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4001288	          0x4c89e6	                            mov rsi, r12	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400128b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400128d	            0x7459	                            je 0x40012e8	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400128f	      0xbf00000000	                              mov edi, 0	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001294	      0xb907000000	                              mov ecx, 7	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001299	          0x4c89e6	                            mov rsi, r12	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400129c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400129e	           0xf94c0	                                 sete al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40012a1	            0x84c0	                             test al, al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40012a3	            0x7463	                            je 0x4001308	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x40012a5	      0xbe00000000	                              mov esi, 0	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x40012aa	          0x4c89ff	                            mov rdi, r15	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x40012ad	      0xe88eeeffff	                  call sym.string_append	       860	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_13
0x40012b2	          0x4c89e0	                            mov rax, r12	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40012b5	      0x4803442418	             add rax, qword [rsp + 0x18]	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40012ba	      0xe99bfdffff	                           jmp 0x400105a	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40012bf	      0xbe00000000	                              mov esi, 0	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40012c4	      0xe9fdfeffff	                           jmp 0x40011c6	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x40012c9	      0xb807000000	                              mov eax, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012ce	        0x4883fb07	                              cmp rbx, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012d2	      0xbf00000000	                              mov edi, 0	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012d7	          0x4889c1	                            mov rcx, rax	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012da	          0x4c89e6	                            mov rsi, r12	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012dd	        0x480f4ecb	                         cmovle rcx, rbx	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012e1	          0x4839c9	                            cmp rcx, rcx	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012e4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012e6	            0x7559	                           jne 0x4001341	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40012e8	      0xbe00000000	                              mov esi, 0	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x40012ed	          0x4c89ff	                            mov rdi, r15	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x40012f0	      0xe84beeffff	                  call sym.string_append	       853	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_11
0x40012f5	          0x4c89e0	                            mov rax, r12	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x40012f8	      0x4803442418	             add rax, qword [rsp + 0x18]	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x40012fd	      0xe958fdffff	                           jmp 0x400105a	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x4001302	    0x660f1f440000	                    nop word [rax + rax]	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x4001308	          0x4c89e6	                            mov rsi, r12	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400130b	      0xbf00000000	                              mov edi, 0	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001310	      0xb907000000	                              mov ecx, 7	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001315	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001317	      0xbe00000000	                              mov esi, 0	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400131c	     0xf84a4feffff	                            je 0x40011c6	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4001322	          0x4c89e6	                            mov rsi, r12	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001325	      0xbf00000000	                              mov edi, 0	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400132a	      0xb907000000	                              mov ecx, 7	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400132f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001331	      0xbe00000000	                              mov esi, 0	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001336	     0xf8559feffff	                           jne 0x4001195	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400133c	      0xe985feffff	                           jmp 0x40011c6	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4001341	        0x4883fb07	                              cmp rbx, 7	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001345	      0xbf00000000	                              mov edi, 0	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400134a	          0x4c89e6	                            mov rsi, r12	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400134d	        0x480f4ec3	                         cmovle rax, rbx	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001351	          0x4889c1	                            mov rcx, rax	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001354	          0x4839c0	                            cmp rax, rax	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001357	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001359	           0xf94c0	                                 sete al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400135c	      0xe940ffffff	                           jmp 0x40012a1	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001361	         0xfb64501	               movzx eax, byte [rbp + 1]	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4001365	        0x4883c501	                              add rbp, 1	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x4001369	      0xe9c2fcffff	                           jmp 0x4001030	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x400136e	      0xbe00000000	                              mov esi, 0	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4001373	          0x4c89ff	                            mov rdi, r15	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4001376	      0xe8c5edffff	                  call sym.string_append	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x400137b	      0xe9a4fcffff	                           jmp 0x4001024	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4001380	        0x488d7501	                      lea rsi, [rbp + 1]	      1534	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001384	      0xba04000000	                              mov edx, 4	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4001389	          0x4c89ff	                            mov rdi, r15	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x400138c	      0xe88ffbffff	               call sym.dlang_identifier	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4001391	          0x4889c5	                            mov rbp, rax	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x4001394	          0x4885ed	                           test rbp, rbp	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4001397	     0xf84abfcffff	                            je 0x4001048	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x400139d	         0xfb64500	                   movzx eax, byte [rbp]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40013a1	        0x4983c501	                              add r13, 1	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40013a5	            0x84c0	                             test al, al	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40013a7	     0xf8566fcffff	                           jne 0x4001013	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40013ad	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40013b2	          0x4c89ff	                            mov rdi, r15	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40013b5	      0xe886edffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40013ba	          0x4889e8	                            mov rax, rbp	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40013bd	          0x4889c2	                            mov rdx, rax	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40013c0	          0x4c29e2	                            sub rdx, r12	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40013c3	          0x4839d3	                            cmp rbx, rdx	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40013c6	     0xf848efcffff	                            je 0x400105a	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40013cc	      0xe987fcffff	                           jmp 0x4001058	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40013d1	        0x488d7501	                      lea rsi, [rbp + 1]	      1547	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40013d5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x40013da	         0xfb66d01	               movzx ebp, byte [rbp + 1]	      1548	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40013de	    0x48c744243000	               mov qword [rsp + 0x30], 0	        95	d-demangle.c	FUNCTION_3
0x40013e7	    0x48c744242800	               mov qword [rsp + 0x28], 0	        95	d-demangle.c	FUNCTION_3
0x40013f0	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x40013f9	      0xe8d2020000	                     call sym.dlang_type	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x40013fe	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x4001403	      0xbe01000000	                              mov esi, 1	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x4001408	          0x4989c6	                            mov r14, rax	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x400140b	      0xe8a0ecffff	                    call sym.string_need	      1554	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_6
0x4001410	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1555	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001415	        0x400fbecd	                          movsx ecx, bpl	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4001419	          0x4c89ff	                            mov rdi, r15	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x400141c	          0x4c89f6	                            mov rsi, r14	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x400141f	          0xc60000	                       mov byte [rax], 0	      1555	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4001422	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4001427	      0xe874f5ffff	                    call sym.dlang_value	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x400142c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x4001431	          0x4889c5	                            mov rbp, rax	      1557	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_7
0x4001434	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x4001437	     0xf8457ffffff	                            je 0x4001394	        85	d-demangle.c	FUNCTION_2	IF_1
0x400143d	      0xe800000000	                          call 0x4001442	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4001442	      0xe94dffffff	                           jmp 0x4001394	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4001447	        0x488d7501	                      lea rsi, [rbp + 1]	      1538	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x400144b	          0x4c89ff	                            mov rdi, r15	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x400144e	      0xe87d020000	                     call sym.dlang_type	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4001453	          0x4889c5	                            mov rbp, rax	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4001456	      0xe939ffffff	                           jmp 0x4001394	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x400145b	      0xe800000000	                          call 0x4001460	       931	d-demangle.c	FUNCTION_19
0x4001460	        0x4883c501	                              add rbp, 1	      1520	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x4001464	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001469	          0x4c89ff	                            mov rdi, r15	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x400146c	      0xe8cfecffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4001471	          0x4885ed	                           test rbp, rbp	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4001474	          0x4889e8	                            mov rax, rbp	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4001477	     0xf8540ffffff	                           jne 0x40013bd	      1604	d-demangle.c	FUNCTION_31	IF_2
0x400147d	      0xe9d8fbffff	                           jmp 0x400105a	      1604	d-demangle.c	FUNCTION_31	IF_2
dlang_demangle	SWITCH,0:functions,0:CALL,8:FOR,0:DO,0:WHILE,0:IF,5:ELSE,1	67
0x40024e0	              0x53	                                push rbx	      1615	d-demangle.c	FUNCTION_32
0x40024e1	        0x4883ec20	                           sub rsp, 0x20	      1615	d-demangle.c	FUNCTION_32
0x40024e5	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      1615	d-demangle.c	FUNCTION_32
0x40024ee	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      1615	d-demangle.c	FUNCTION_32
0x40024f3	            0x31db	                            xor ebx, ebx	      1615	d-demangle.c	FUNCTION_32
0x40024f5	          0x4885ff	                           test rdi, rdi	      1619	d-demangle.c	FUNCTION_32	IF_1
0x40024f8	     0xf84e2000000	                            je 0x40025e0	      1619	d-demangle.c	FUNCTION_32	IF_1
0x40024fe	          0x803f00	                       cmp byte [rdi], 0	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002501	          0x4889f8	                            mov rax, rdi	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4002504	     0xf84d6000000	                            je 0x40025e0	      1619	d-demangle.c	FUNCTION_32	IF_1
0x400250a	      0xbf00000000	                              mov edi, 0	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x400250f	      0xb902000000	                              mov ecx, 2	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002514	          0x4889c6	                            mov rsi, rax	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002517	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4002519	     0xf85c1000000	                           jne 0x40025e0	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x400251f	      0xb907000000	                              mov ecx, 7	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002524	      0xbf00000000	                              mov edi, 0	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002529	          0x4889c6	                            mov rsi, rax	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x400252c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x400252e	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4002537	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4002540	          0x4889e3	                            mov rbx, rsp	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x4002543	           0xf97c1	                                 seta cl	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002546	           0xf92c2	                                 setb dl	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002549	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x4002551	            0x38d1	                              cmp cl, dl	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002553	            0x745b	                            je 0x40025b0	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4002555	            0x31d2	                            xor edx, edx	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002557	          0x4889e7	                            mov rdi, rsp	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x400255a	          0x4889c6	                            mov rsi, rax	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x400255d	      0xe8cefcffff	             call sym.dlang_parse_mangle	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002562	          0x4885c0	                           test rax, rax	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002565	        0x488b3c24	                    mov rdi, qword [rsp]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4002569	            0x7465	                            je 0x40025d0	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x400256b	      0x488b442408	                mov rax, qword [rsp + 8]	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4002570	          0x4839c7	                            cmp rdi, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x4002573	            0x746b	                            je 0x40025e0	       101	d-demangle.c	FUNCTION_4	IF_1
0x4002575	          0x4829f8	                            sub rax, rdi	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4002578	            0x85c0	                           test eax, eax	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x400257a	            0x7e64	                           jle 0x40025e0	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x400257c	      0xbe01000000	                              mov esi, 1	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x4002581	          0x4889df	                            mov rdi, rbx	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x4002584	      0xe827dbffff	                    call sym.string_need	      1639	d-demangle.c	FUNCTION_32	IF_5	CALL_8
0x4002589	      0x488b442408	                mov rax, qword [rsp + 8]	      1640	d-demangle.c	FUNCTION_32	IF_5
0x400258e	          0xc60000	                       mov byte [rax], 0	      1640	d-demangle.c	FUNCTION_32	IF_5
0x4002591	        0x488b0424	                    mov rax, qword [rsp]	      1641	d-demangle.c	FUNCTION_32	IF_5
0x4002595	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1645	d-demangle.c	FUNCTION_32
0x400259a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1645	d-demangle.c	FUNCTION_32
0x40025a3	            0x753f	                           jne 0x40025e4	      1645	d-demangle.c	FUNCTION_32
0x40025a5	        0x4883c420	                           add rsp, 0x20	      1645	d-demangle.c	FUNCTION_32
0x40025a9	              0x5b	                                 pop rbx	      1645	d-demangle.c	FUNCTION_32
0x40025aa	              0xc3	                                     ret	      1645	d-demangle.c	FUNCTION_32
0x40025ab	       0xf1f440000	                   nop dword [rax + rax]	      1645	d-demangle.c	FUNCTION_32
0x40025b0	          0x4889e7	                            mov rdi, rsp	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x40025b3	      0xbe00000000	                              mov esi, 0	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x40025b8	      0xe883dbffff	                  call sym.string_append	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x40025bd	        0x488b3c24	                    mov rdi, qword [rsp]	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x40025c1	      0x488b442408	                mov rax, qword [rsp + 8]	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x40025c6	            0xeba8	                           jmp 0x4002570	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x40025c8	     0xf1f84000000	                   nop dword [rax + rax]	      1629	d-demangle.c	FUNCTION_32	IF_3	CALL_4
0x40025d0	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x40025d3	            0x7496	                            je 0x400256b	        85	d-demangle.c	FUNCTION_2	IF_1
0x40025d5	      0xe800000000	                          call 0x40025da	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40025da	    0x660f1f440000	                    nop word [rax + rax]	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40025e0	            0x31c0	                            xor eax, eax	      1620	d-demangle.c	FUNCTION_32	IF_1
0x40025e2	            0xebb1	                           jmp 0x4002595	      1620	d-demangle.c	FUNCTION_32	IF_1
0x40025e4	      0xe800000000	                          call 0x40025e9	      1645	d-demangle.c	FUNCTION_32
dlang_parse_integer	SWITCH,2:functions,0:CALL,16:FOR,1:DO,0:WHILE,2:IF,7:ELSE,4	189
0x40004d0	            0x4154	                                push r12	       938	d-demangle.c	FUNCTION_20
0x40004d2	              0x55	                                push rbp	       938	d-demangle.c	FUNCTION_20
0x40004d3	          0x4189d4	                           mov r12d, edx	       938	d-demangle.c	FUNCTION_20
0x40004d6	              0x53	                                push rbx	       938	d-demangle.c	FUNCTION_20
0x40004d7	          0x4889fd	                            mov rbp, rdi	       938	d-demangle.c	FUNCTION_20
0x40004da	          0x4889f7	                            mov rdi, rsi	       938	d-demangle.c	FUNCTION_20
0x40004dd	        0x4883ec30	                           sub rsp, 0x30	       938	d-demangle.c	FUNCTION_20
0x40004e1	    0x64488b042528	                mov rax, qword fs:[0x28]	       938	d-demangle.c	FUNCTION_20
0x40004ea	      0x4889442428	             mov qword [rsp + 0x28], rax	       938	d-demangle.c	FUNCTION_20
0x40004ef	            0x31c0	                            xor eax, eax	       938	d-demangle.c	FUNCTION_20
0x40004f1	            0x89d0	                            mov eax, edx	       939	d-demangle.c	FUNCTION_20	IF_1
0x40004f3	          0x83e0fd	                     and eax, 0xfffffffd	       939	d-demangle.c	FUNCTION_20	IF_1
0x40004f6	            0x3c75	                            cmp al, 0x75	       939	d-demangle.c	FUNCTION_20	IF_1
0x40004f8	            0x7466	                            je 0x4000560	       939	d-demangle.c	FUNCTION_20	IF_1
0x40004fa	          0x80fa61	                            cmp dl, 0x61	       939	d-demangle.c	FUNCTION_20	IF_1
0x40004fd	            0x7461	                            je 0x4000560	       939	d-demangle.c	FUNCTION_20	IF_1
0x40004ff	          0x80fa62	                            cmp dl, 0x62	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x4000502	     0xf84e8010000	                            je 0x40006f0	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x4000508	           0xfb606	                   movzx eax, byte [rsi]	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x400050b	    0xf68400000000	                test byte [rax + rax], 4	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4000513	     0xf84b7020000	                            je 0x40007d0	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4000519	          0x4889f3	                            mov rbx, rsi	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x400051c	            0x31d2	                            xor edx, edx	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x400051e	            0x6690	                                     nop	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4000520	        0x4883c301	                              add rbx, 1	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4000524	           0xfb603	                   movzx eax, byte [rbx]	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4000527	        0x4883c201	                              add rdx, 1	      1020	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x400052b	    0xf68400000000	                test byte [rax + rax], 4	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4000533	            0x75eb	                           jne 0x4000520	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4000535	            0x85d2	                           test edx, edx	       129	d-demangle.c	FUNCTION_7	IF_1
0x4000537	     0xf8543020000	                           jne 0x4000780	       129	d-demangle.c	FUNCTION_7	IF_1
0x400053d	        0x4183ec68	                          sub r12d, 0x68	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4000541	        0x4180fc0c	                           cmp r12b, 0xc	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4000545	     0xf87e5010000	                            ja 0x4000730	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x400054b	        0x450fb6e4	                        movzx r12d, r12b	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x400054f	    0x42ff24e50000	                       jmp qword [r12*8]	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4000557	    0x660f1f840000	                    nop word [rax + rax]	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x4000560	      0x488d742408	                      lea rsi, [rsp + 8]	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4000565	      0xe8d6faffff	                   call sym.dlang_number	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x400056a	          0x4885c0	                           test rax, rax	       948	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x400056d	          0x4889c3	                            mov rbx, rax	       947	d-demangle.c	FUNCTION_20	IF_1	CALL_1
0x4000570	     0xf845a020000	                            je 0x40007d0	       948	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4000576	      0xbe00000000	                              mov esi, 0	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x400057b	          0x4889ef	                            mov rdi, rbp	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x400057e	      0xe8bdfbffff	                  call sym.string_append	       951	d-demangle.c	FUNCTION_20	IF_1	CALL_2
0x4000583	        0x4180fc61	                          cmp r12b, 0x61	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000587	     0xf84bb010000	                            je 0x4000748	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400058d	        0x4180fc75	                          cmp r12b, 0x75	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4000591	     0xf8419020000	                            je 0x40007b0	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4000597	        0x4180fc77	                          cmp r12b, 0x77	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x400059b	     0xf84ef010000	                            je 0x4000790	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005a1	        0x4180fc61	                          cmp r12b, 0x61	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005a5	     0xf8415010000	                            je 0x40006c0	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40005ab	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005b0	          0x4885c9	                           test rcx, rcx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005b3	     0xf8e92000000	                           jle 0x400064b	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005b9	            0x31f6	                            xor esi, esi	       944	d-demangle.c	FUNCTION_20	IF_1
0x40005bb	      0xb809000000	                              mov eax, 9	       944	d-demangle.c	FUNCTION_20	IF_1
0x40005c0	            0xeb1d	                           jmp 0x40005df	       944	d-demangle.c	FUNCTION_20	IF_1
0x40005c2	    0x660f1f440000	                    nop word [rax + rax]	       944	d-demangle.c	FUNCTION_20	IF_1
0x40005c8	        0x48c1f904	                              sar rcx, 4	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005cc	          0x83c230	                           add edx, 0x30	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40005cf	          0x83ee01	                              sub esi, 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005d2	          0x83e801	                              sub eax, 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005d5	          0x4885c9	                           test rcx, rcx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005d8	      0x4288540410	          mov byte [rsp + r8 + 0x10], dl	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40005dd	            0x7429	                            je 0x4000608	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005df	          0x4889ca	                            mov rdx, rcx	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005e2	          0x4863f8	                         movsxd rdi, eax	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40005e5	          0x4c63c0	                          movsxd r8, eax	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40005e8	          0x83e20f	                            and edx, 0xf	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005eb	        0x4883fa09	                              cmp rdx, 9	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40005ef	            0x7ed7	                           jle 0x40005c8	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40005f1	        0x48c1f904	                              sar rcx, 4	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005f5	          0x83c257	                           add edx, 0x57	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x40005f8	          0x83ee01	                              sub esi, 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005fb	          0x83e801	                              sub eax, 1	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40005fe	          0x4885c9	                           test rcx, rcx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000601	      0x4288540410	          mov byte [rsp + r8 + 0x10], dl	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4000606	            0x75d7	                           jne 0x40005df	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000608	            0x85f6	                           test esi, esi	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400060a	    0x48c744240800	                  mov qword [rsp + 8], 0	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000613	     0xf8e1f010000	                           jle 0x4000738	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000619	            0x89f8	                            mov eax, edi	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400061b	       0xf1f440000	                   nop dword [rax + rax]	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4000620	          0x83e801	                              sub eax, 1	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000623	          0x4863d0	                         movsxd rdx, eax	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000626	      0xc644141030	      mov byte [rsp + rdx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400062b	          0x8d1406	                    lea edx, [rsi + rax]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400062e	            0x29fa	                            sub edx, edi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000630	            0x85d2	                           test edx, edx	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000632	            0x7fec	                            jg 0x4000620	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4000634	      0xba0a000000	                            mov edx, 0xa	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4000639	          0x4863f8	                         movsxd rdi, eax	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400063c	            0x29c2	                            sub edx, eax	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x400063e	      0x488d743c10	            lea rsi, [rsp + rdi + 0x10] 	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4000643	          0x4889ef	                            mov rdi, rbp	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4000646	      0xe855feffff	          call sym.string_appendn.part.5	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x400064b	      0xbe00000000	                              mov esi, 0	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x4000650	          0x4889ef	                            mov rdi, rbp	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x4000653	      0xe8e8faffff	                  call sym.string_append	       996	d-demangle.c	FUNCTION_20	IF_1	CALL_8
0x4000658	          0x4889d8	                            mov rax, rbx	       940	d-demangle.c	FUNCTION_20	IF_1
0x400065b	            0xeb13	                           jmp 0x4000670	       940	d-demangle.c	FUNCTION_20	IF_1
0x400065d	           0xf1f00	                         nop dword [rax]	       940	d-demangle.c	FUNCTION_20	IF_1
0x4000660	      0xbe00000000	                              mov esi, 0	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x4000665	          0x4889ef	                            mov rdi, rbp	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x4000668	      0xe8d3faffff	                  call sym.string_append	      1037	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_16
0x400066d	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4000670	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1043	d-demangle.c	FUNCTION_20
0x4000675	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1043	d-demangle.c	FUNCTION_20
0x400067e	     0xf8553010000	                           jne 0x40007d7	      1043	d-demangle.c	FUNCTION_20
0x4000684	        0x4883c430	                           add rsp, 0x30	      1043	d-demangle.c	FUNCTION_20
0x4000688	              0x5b	                                 pop rbx	      1043	d-demangle.c	FUNCTION_20
0x4000689	              0x5d	                                 pop rbp	      1043	d-demangle.c	FUNCTION_20
0x400068a	            0x415c	                                 pop r12	      1043	d-demangle.c	FUNCTION_20
0x400068c	              0xc3	                                     ret	      1043	d-demangle.c	FUNCTION_20
0x400068d	           0xf1f00	                         nop dword [rax]	      1043	d-demangle.c	FUNCTION_20
0x4000690	      0xbe00000000	                              mov esi, 0	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4000695	          0x4889ef	                            mov rdi, rbp	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x4000698	      0xe8a3faffff	                  call sym.string_append	      1034	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_15
0x400069d	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x40006a0	            0xebce	                           jmp 0x4000670	      1035	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40006a2	    0x660f1f440000	                    nop word [rax + rax]	      1035	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40006a8	      0xbe00000000	                              mov esi, 0	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x40006ad	          0x4889ef	                            mov rdi, rbp	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x40006b0	      0xe88bfaffff	                  call sym.string_append	      1031	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2	CALL_14
0x40006b5	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x40006b8	            0xebb6	                           jmp 0x4000670	      1032	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40006ba	    0x660f1f440000	                    nop word [rax + rax]	      1032	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40006c0	      0xbe00000000	                              mov esi, 0	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x40006c5	          0x4889ef	                            mov rdi, rbp	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x40006c8	      0xe873faffff	                  call sym.string_append	       965	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_4
0x40006cd	      0xbe02000000	                              mov esi, 2	       966	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40006d2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40006d7	      0xbf0a000000	                            mov edi, 0xa	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40006dc	          0x4885c9	                           test rcx, rcx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40006df	     0xf8fd6feffff	                            jg 0x40005bb	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40006e5	      0xe92fffffff	                           jmp 0x4000619	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40006ea	    0x660f1f440000	                    nop word [rax + rax]	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40006f0	      0x488d742408	                      lea rsi, [rsp + 8]	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x40006f5	      0xe846f9ffff	                   call sym.dlang_number	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x40006fa	          0x4885c0	                           test rax, rax	      1004	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x40006fd	          0x4889c3	                            mov rbx, rax	      1003	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_9
0x4000700	     0xf84ca000000	                            je 0x40007d0	      1004	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	IF_6
0x4000706	    0x48837c240800	                  cmp qword [rsp + 8], 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x400070c	      0xb800000000	                              mov eax, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000711	      0xbe00000000	                              mov esi, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000716	          0x4889ef	                            mov rdi, rbp	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000719	        0x480f45f0	                         cmovne rsi, rax	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x400071d	      0xe81efaffff	                  call sym.string_append	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000722	          0x4889d8	                            mov rax, rbx	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000725	      0xe946ffffff	                           jmp 0x4000670	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x400072a	    0x660f1f440000	                    nop word [rax + rax]	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4000730	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4000733	      0xe938ffffff	                           jmp 0x4000670	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4000738	      0xba0a000000	                            mov edx, 0xa	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x400073d	            0x29fa	                            sub edx, edi	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x400073f	      0xe9fafeffff	                           jmp 0x400063e	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4000744	         0xf1f4000	                         nop dword [rax]	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4000748	      0x488b442408	                mov rax, qword [rsp + 8]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400074d	        0x488d50e0	                   lea rdx, [rax - 0x20]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000751	        0x4883fa5e	                           cmp rdx, 0x5e	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000755	     0xf8732feffff	                            ja 0x400058d	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400075b	      0x488d742407	                      lea rsi, [rsp + 7]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000760	      0xba01000000	                              mov edx, 1	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000765	          0x4889ef	                            mov rdi, rbp	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000768	        0x88442407	                  mov byte [rsp + 7], al	       956	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400076c	      0xe82ffdffff	          call sym.string_appendn.part.5	       956	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000771	      0xe9d5feffff	                           jmp 0x400064b	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000776	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000780	          0x4889fe	                            mov rsi, rdi	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000783	          0x4889ef	                            mov rdi, rbp	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000786	      0xe815fdffff	          call sym.string_appendn.part.5	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400078b	      0xe9adfdffff	                           jmp 0x400053d	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4000790	      0xbe00000000	                              mov esi, 0	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4000795	          0x4889ef	                            mov rdi, rbp	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x4000798	      0xe8a3f9ffff	                  call sym.string_append	       973	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_6
0x400079d	      0xbe08000000	                              mov esi, 8	       974	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40007a2	      0xe92bffffff	                           jmp 0x40006d2	       975	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40007a7	    0x660f1f840000	                    nop word [rax + rax]	       975	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40007b0	      0xbe00000000	                              mov esi, 0	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x40007b5	          0x4889ef	                            mov rdi, rbp	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x40007b8	      0xe883f9ffff	                  call sym.string_append	       969	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1	CALL_5
0x40007bd	      0xbe04000000	                              mov esi, 4	       970	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40007c2	      0xe90bffffff	                           jmp 0x40006d2	       971	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40007c7	    0x660f1f840000	                    nop word [rax + rax]	       971	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40007d0	            0x31c0	                            xor eax, eax	      1016	d-demangle.c	FUNCTION_20	ELSE_4	IF_7
0x40007d2	      0xe999feffff	                           jmp 0x4000670	      1016	d-demangle.c	FUNCTION_20	ELSE_4	IF_7
0x40007d7	      0xe800000000	                          call 0x40007dc	      1043	d-demangle.c	FUNCTION_20
dlang_type_modifiers	SWITCH,1:functions,0:CALL,6:FOR,0:DO,0:WHILE,0:IF,2:ELSE,1	68
0x4000180	          0x4885f6	                           test rsi, rsi	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000183	     0xf84c7000000	                            je 0x4000250	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000189	              0x55	                                push rbp	       314	d-demangle.c	FUNCTION_14
0x400018a	              0x53	                                push rbx	       314	d-demangle.c	FUNCTION_14
0x400018b	          0x4889fd	                            mov rbp, rdi	       314	d-demangle.c	FUNCTION_14
0x400018e	          0x4889f3	                            mov rbx, rsi	       314	d-demangle.c	FUNCTION_14
0x4000191	        0x4883ec08	                              sub rsp, 8	       314	d-demangle.c	FUNCTION_14
0x4000195	           0xfb606	                   movzx eax, byte [rsi]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000198	            0x84c0	                             test al, al	       315	d-demangle.c	FUNCTION_14	IF_1
0x400019a	            0x7476	                            je 0x4000212	       315	d-demangle.c	FUNCTION_14	IF_1
0x400019c	            0x3c4f	                            cmp al, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400019e	     0xf848c000000	                            je 0x4000230	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001a4	            0x7e4a	                           jle 0x40001f0	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001a6	            0x3c78	                            cmp al, 0x78	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001a8	            0x7426	                            je 0x40001d0	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001aa	            0x3c79	                            cmp al, 0x79	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001ac	            0x7572	                           jne 0x4000220	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001ae	        0x4883c301	                              add rbx, 1	       325	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001b2	      0xbe00000000	                              mov esi, 0	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x40001b7	          0x4889ef	                            mov rdi, rbp	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x40001ba	      0xe881ffffff	                  call sym.string_append	       326	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_2
0x40001bf	          0x4889d8	                            mov rax, rbx	       327	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001c2	        0x4883c408	                              add rsp, 8	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001c6	              0x5b	                                 pop rbx	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001c7	              0x5d	                                 pop rbp	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001c8	              0xc3	                                     ret	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001c9	     0xf1f80000000	                         nop dword [rax]	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001d0	          0x4889ef	                            mov rdi, rbp	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x40001d3	      0xbe00000000	                              mov esi, 0	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x40001d8	        0x4883c301	                              add rbx, 1	       321	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001dc	      0xe85fffffff	                  call sym.string_append	       322	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_1
0x40001e1	        0x4883c408	                              add rsp, 8	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001e5	          0x4889d8	                            mov rax, rbx	       323	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001e8	              0x5b	                                 pop rbx	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001e9	              0x5d	                                 pop rbp	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001ea	              0xc3	                                     ret	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001eb	       0xf1f440000	                   nop dword [rax + rax]	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x40001f0	            0x3c4e	                            cmp al, 0x4e	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001f2	            0x752c	                           jne 0x4000220	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40001f4	        0x807b0167	                cmp byte [rbx + 1], 0x67	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x40001f8	            0x7518	                           jne 0x4000212	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x40001fa	      0xbe00000000	                              mov esi, 0	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x40001ff	          0x4889ef	                            mov rdi, rbp	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x4000202	        0x4883c302	                              add rbx, 2	       336	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4000206	      0xe835ffffff	                  call sym.string_append	       337	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2	CALL_5
0x400020b	           0xfb603	                   movzx eax, byte [rbx]	       315	d-demangle.c	FUNCTION_14	IF_1
0x400020e	            0x84c0	                             test al, al	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000210	            0x758a	                           jne 0x400019c	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000212	            0x31c0	                            xor eax, eax	       316	d-demangle.c	FUNCTION_14	IF_1
0x4000214	            0xebac	                           jmp 0x40001c2	       316	d-demangle.c	FUNCTION_14	IF_1
0x4000216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       316	d-demangle.c	FUNCTION_14	IF_1
0x4000220	        0x4883c408	                              add rsp, 8	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x4000224	          0x4889d8	                            mov rax, rbx	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000227	              0x5b	                                 pop rbx	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x4000228	              0x5d	                                 pop rbp	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x4000229	              0xc3	                                     ret	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x400022a	    0x660f1f440000	                    nop word [rax + rax]	       346	d-demangle.c	FUNCTION_14	ELSE_1
0x4000230	        0x4883c301	                              add rbx, 1	       329	d-demangle.c	FUNCTION_14	SWITCH_1
0x4000234	      0xbe00000000	                              mov esi, 0	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x4000239	          0x4889ef	                            mov rdi, rbp	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x400023c	      0xe8fffeffff	                  call sym.string_append	       330	d-demangle.c	FUNCTION_14	SWITCH_1	CALL_3
0x4000241	          0x4885db	                           test rbx, rbx	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000244	            0x75c5	                           jne 0x400020b	       315	d-demangle.c	FUNCTION_14	IF_1
0x4000246	            0x31c0	                            xor eax, eax	       316	d-demangle.c	FUNCTION_14	IF_1
0x4000248	      0xe975ffffff	                           jmp 0x40001c2	       316	d-demangle.c	FUNCTION_14	IF_1
0x400024d	           0xf1f00	                         nop dword [rax]	       316	d-demangle.c	FUNCTION_14	IF_1
0x4000250	            0x31c0	                            xor eax, eax	       316	d-demangle.c	FUNCTION_14	IF_1
0x4000252	              0xc3	                                     ret	       346	d-demangle.c	FUNCTION_14	ELSE_1
dlang_call_convention	SWITCH,1:functions,0:CALL,5:FOR,0:DO,0:WHILE,0:IF,1:ELSE,0	54
0x4000260	          0x4885f6	                           test rsi, rsi	       275	d-demangle.c	FUNCTION_13	IF_1
0x4000263	              0x53	                                push rbx	       274	d-demangle.c	FUNCTION_13
0x4000264	     0xf84a6000000	                            je 0x4000310	       275	d-demangle.c	FUNCTION_13	IF_1
0x400026a	           0xfb606	                   movzx eax, byte [rsi]	       275	d-demangle.c	FUNCTION_13	IF_1
0x400026d	            0x84c0	                             test al, al	       275	d-demangle.c	FUNCTION_13	IF_1
0x400026f	     0xf849b000000	                            je 0x4000310	       275	d-demangle.c	FUNCTION_13	IF_1
0x4000275	          0x83e846	                           sub eax, 0x46	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000278	            0x3c13	                            cmp al, 0x13	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x400027a	     0xf8790000000	                            ja 0x4000310	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000280	           0xfb6c0	                           movzx eax, al	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000283	    0xff24c5000000	                       jmp qword [rax*8]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x400028a	    0x660f1f440000	                    nop word [rax + rax]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000290	        0x488d5e01	                      lea rbx, [rsi + 1]	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000294	      0xbe00000000	                              mov esi, 0	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x4000299	      0xe8a2feffff	                  call sym.string_append	       301	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_5
0x400029e	          0x4889d8	                            mov rax, rbx	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002a1	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x40002a2	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
0x40002a3	       0xf1f440000	                   nop dword [rax + rax]	       308	d-demangle.c	FUNCTION_13
0x40002a8	        0x488d4601	                      lea rax, [rsi + 1]	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002ac	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x40002ad	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
0x40002ae	            0x6690	                                     nop	       308	d-demangle.c	FUNCTION_13
0x40002b0	        0x488d5e01	                      lea rbx, [rsi + 1]	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002b4	      0xbe00000000	                              mov esi, 0	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x40002b9	      0xe882feffff	                  call sym.string_append	       297	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_4
0x40002be	          0x4889d8	                            mov rax, rbx	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002c1	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x40002c2	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
0x40002c3	       0xf1f440000	                   nop dword [rax + rax]	       308	d-demangle.c	FUNCTION_13
0x40002c8	        0x488d5e01	                      lea rbx, [rsi + 1]	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002cc	      0xbe00000000	                              mov esi, 0	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x40002d1	      0xe86afeffff	                  call sym.string_append	       285	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_1
0x40002d6	          0x4889d8	                            mov rax, rbx	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002d9	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x40002da	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
0x40002db	       0xf1f440000	                   nop dword [rax + rax]	       308	d-demangle.c	FUNCTION_13
0x40002e0	        0x488d5e01	                      lea rbx, [rsi + 1]	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002e4	      0xbe00000000	                              mov esi, 0	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x40002e9	      0xe852feffff	                  call sym.string_append	       293	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_3
0x40002ee	          0x4889d8	                            mov rax, rbx	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002f1	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x40002f2	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
0x40002f3	       0xf1f440000	                   nop dword [rax + rax]	       308	d-demangle.c	FUNCTION_13
0x40002f8	        0x488d5e01	                      lea rbx, [rsi + 1]	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x40002fc	      0xbe00000000	                              mov esi, 0	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x4000301	      0xe83afeffff	                  call sym.string_append	       289	d-demangle.c	FUNCTION_13	SWITCH_1	CALL_2
0x4000306	          0x4889d8	                            mov rax, rbx	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000309	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x400030a	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
0x400030b	       0xf1f440000	                   nop dword [rax + rax]	       308	d-demangle.c	FUNCTION_13
0x4000310	            0x31c0	                            xor eax, eax	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4000312	              0x5b	                                 pop rbx	       308	d-demangle.c	FUNCTION_13
0x4000313	              0xc3	                                     ret	       308	d-demangle.c	FUNCTION_13
