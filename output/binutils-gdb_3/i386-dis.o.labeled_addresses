OP_LWPCB_E	IF,2:CALL,1:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	21
0x4002ed0	        0x4883ec08	                              sub rsp, 8	     17859	i386-dis.c	FUNCTION_97
0x4002ed4	    0x803d00000000	                cmp byte [0x04002edb], 0	     17864	i386-dis.c	FUNCTION_97
0x4002edb	            0x7453	                            je 0x4002f30	     17864	i386-dis.c	FUNCTION_97
0x4002edd	    0x8b0d00000000	            mov ecx, dword [0x04002ee3] 	     17867	i386-dis.c	FUNCTION_97	IF_1
0x4002ee3	    0x488305000000	               add qword [0x04002eeb], 1	     17865	i386-dis.c	FUNCTION_97
0x4002eeb	    0x488b15000000	            mov rdx, qword [0x04002ef2] 	     17868	i386-dis.c	FUNCTION_97	IF_1
0x4002ef2	    0x8b0500000000	            mov eax, dword [0x04002ef8] 	     17872	i386-dis.c	FUNCTION_97
0x4002ef8	          0xf6c108	                              test cl, 8	     17868	i386-dis.c	FUNCTION_97	IF_1
0x4002efb	    0x480f44150000	           cmove rdx, qword [0x04002f03]	     17868	i386-dis.c	FUNCTION_97	IF_1
0x4002f03	          0x83e101	                              and ecx, 1	     17873	i386-dis.c	FUNCTION_97
0x4002f06	            0x740a	                            je 0x4002f12	     17873	i386-dis.c	FUNCTION_97
0x4002f08	    0x830d00000000	            or dword [0x04002f0f], 0x41 	     17873	i386-dis.c	FUNCTION_97
0x4002f0f	          0x83c008	                              add eax, 8	     17875	i386-dis.c	FUNCTION_97	IF_2
0x4002f12	            0x4898	                                    cdqe	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x4002f14	    0x488b3d000000	            mov rdi, qword [0x04002f1b] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002f1b	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4002f1f	      0xe800000000	                          call 0x4002f24	       117	string3.h	FUNCTION_108	CALL_3
0x4002f24	    0x488905000000	            mov qword [0x04002f2b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002f2b	        0x4883c408	                              add rsp, 8	     17878	i386-dis.c	FUNCTION_97
0x4002f2f	              0xc3	                                     ret	     17878	i386-dis.c	FUNCTION_97
0x4002f30	      0xe800000000	                          call 0x4002f35	     17864	i386-dis.c	FUNCTION_97
HLE_Fixup1	IF,3:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	14
0x4006150	    0x833d00000000	               cmp dword [0x04006157], 3	     16982	i386-dis.c	FUNCTION_71	IF_1
0x4006157	            0x7436	                            je 0x400618f	     16982	i386-dis.c	FUNCTION_71	IF_1
0x4006159	    0x8b0500000000	            mov eax, dword [0x0400615f] 	     16983	i386-dis.c	FUNCTION_71	IF_1
0x400615f	            0xa804	                              test al, 4	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4006161	            0x742c	                            je 0x400618f	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4006163	            0xa801	                              test al, 1	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4006165	            0x7412	                            je 0x4006179	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4006167	    0x486315000000	         movsxd rdx, dword [0x0400616e] 	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x400616e	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4006179	            0xa802	                              test al, 2	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x400617b	            0x7412	                            je 0x400618f	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x400617d	    0x486305000000	         movsxd rax, dword [0x04006184] 	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4006184	    0xc70485000000	                mov dword [rax*4], 0x2f2	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x400618f	      0xe9bcfeffff	                            jmp sym.OP_E	     16991	i386-dis.c	FUNCTION_71	CALL_1
get64	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	27
0x4001d20	        0x4883ec08	                              sub rsp, 8	     15770	i386-dis.c	FUNCTION_28
0x4001d24	    0x488b3d000000	            mov rdi, qword [0x04001d2b] 	     15776	i386-dis.c	FUNCTION_28
0x4001d2b	    0x488b0d000000	            mov rcx, qword [0x04001d32] 	     15776	i386-dis.c	FUNCTION_28
0x4001d32	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15776	i386-dis.c	FUNCTION_28
0x4001d36	        0x488d7108	                      lea rsi, [rcx + 8]	     15776	i386-dis.c	FUNCTION_28
0x4001d3a	          0x483b30	                    cmp rsi, qword [rax]	     15776	i386-dis.c	FUNCTION_28
0x4001d3d	            0x7610	                           jbe 0x4001d4f	     15776	i386-dis.c	FUNCTION_28
0x4001d3f	      0xe88cfeffff	                     call sym.fetch_data	     15776	i386-dis.c	FUNCTION_28
0x4001d44	    0x488b0d000000	            mov rcx, qword [0x04001d4b] 	     15776	i386-dis.c	FUNCTION_28
0x4001d4b	        0x488d7108	                      lea rsi, [rcx + 8]	     15776	i386-dis.c	FUNCTION_28
0x4001d4f	         0xfb64107	               movzx eax, byte [rcx + 7]	     15776	i386-dis.c	FUNCTION_28
0x4001d53	      0x440fb64904	               movzx r9d, byte [rcx + 4]	     15781	i386-dis.c	FUNCTION_28
0x4001d58	      0x440fb64105	               movzx r8d, byte [rcx + 5]	     15782	i386-dis.c	FUNCTION_28
0x4001d5d	         0xfb65106	               movzx edx, byte [rcx + 6]	     15783	i386-dis.c	FUNCTION_28
0x4001d61	            0x8b39	                    mov edi, dword [rcx]	     15780	i386-dis.c	FUNCTION_28
0x4001d63	    0x488935000000	            mov qword [0x04001d6a], rsi 	     15784	i386-dis.c	FUNCTION_28
0x4001d6a	        0x4883c408	                              add rsp, 8	     15791	i386-dis.c	FUNCTION_28
0x4001d6e	          0xc1e018	                           shl eax, 0x18	     15791	i386-dis.c	FUNCTION_28
0x4001d71	        0x41c1e008	                              shl r8d, 8	     15782	i386-dis.c	FUNCTION_28
0x4001d75	          0x4409c8	                             or eax, r9d	     15782	i386-dis.c	FUNCTION_28
0x4001d78	          0xc1e210	                           shl edx, 0x10	     15783	i386-dis.c	FUNCTION_28
0x4001d7b	          0x4409c0	                             or eax, r8d	     15783	i386-dis.c	FUNCTION_28
0x4001d7e	             0x9d0	                             or eax, edx	     15790	i386-dis.c	FUNCTION_28
0x4001d80	            0x89fa	                            mov edx, edi	     15790	i386-dis.c	FUNCTION_28
0x4001d82	        0x48c1e020	                           shl rax, 0x20	     15790	i386-dis.c	FUNCTION_28
0x4001d86	          0x4801d0	                            add rax, rdx	     15790	i386-dis.c	FUNCTION_28
0x4001d89	              0xc3	                                     ret	     15791	i386-dis.c	FUNCTION_28
prefix_name	IF,1:CALL,0:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,1:FOR,0	98
0x4000040	          0x83ff67	                           cmp edi, 0x67	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000043	     0xf8437010000	                            je 0x4000180	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000049	            0x7e45	                           jle 0x4000090	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400004b	    0x81ff3e010000	                          cmp edi, 0x13e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000051	     0xf84a1000000	                            je 0x40000f8	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000057	            0x7f6f	                            jg 0x40000c8	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000059	    0x81fff0000000	                           cmp edi, 0xf0	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400005f	      0xb800000000	                              mov eax, 0	     12602	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000064	            0x7420	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000066	     0xf8ec4000000	                           jle 0x4000130	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400006c	    0x81fff2000000	                           cmp edi, 0xf2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000072	      0xb800000000	                              mov eax, 0	     12600	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000077	            0x740d	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000079	    0x81fff3000000	                           cmp edi, 0xf3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400007f	      0xb800000000	                              mov eax, 0	     12598	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000084	            0x7538	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000086	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x4000088	     0xf1f84000000	                   nop dword [rax + rax]	     12637	i386-dis.c	FUNCTION_3
0x4000090	          0x83ff4f	                           cmp edi, 0x4f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000093	            0x7f6b	                            jg 0x4000100	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000095	          0x83ff40	                           cmp edi, 0x40	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000098	     0xf8dd2000000	                           jge 0x4000170	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400009e	          0x83ff2e	                           cmp edi, 0x2e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a1	      0xb800000000	                              mov eax, 0	     12604	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a6	            0x74de	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a8	            0x7e76	                           jle 0x4000120	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000aa	          0x83ff36	                           cmp edi, 0x36	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ad	      0xb800000000	                              mov eax, 0	     12606	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b2	            0x74d2	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b4	          0x83ff3e	                           cmp edi, 0x3e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b7	      0xb800000000	                              mov eax, 0	     12608	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000bc	            0x74c8	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000be	            0x31c0	                            xor eax, eax	     12635	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000c0	              0xc3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x40000c1	     0xf1f80000000	                         nop dword [rax]	     12637	i386-dis.c	FUNCTION_3
0x40000c8	    0x81fff2020000	                          cmp edi, 0x2f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ce	      0xb800000000	                              mov eax, 0	     12627	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d3	            0x74b1	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d5	            0x7e69	                           jle 0x4000140	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d7	    0x81fff2040000	                          cmp edi, 0x4f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000dd	      0xb800000000	                              mov eax, 0	     12631	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000e2	            0x74a2	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000e4	    0x81fff3040000	                          cmp edi, 0x4f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ea	      0xb800000000	                              mov eax, 0	     12629	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ef	            0x75cd	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000f1	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x40000f3	       0xf1f440000	                   nop dword [rax + rax]	     12637	i386-dis.c	FUNCTION_3
0x40000f8	      0xb800000000	                              mov eax, 0	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000fd	              0xc3	                                     ret	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000fe	            0x6690	                                     nop	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000100	          0x83ff65	                           cmp edi, 0x65	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000103	      0xb800000000	                              mov eax, 0	     12614	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000108	     0xf8478ffffff	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400010e	            0x7f48	                            jg 0x4000158	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000110	          0x83ff64	                           cmp edi, 0x64	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000113	      0xb800000000	                              mov eax, 0	     12612	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000118	            0x75a4	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400011a	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x400011c	         0xf1f4000	                         nop dword [rax]	     12637	i386-dis.c	FUNCTION_3
0x4000120	          0x83ff26	                           cmp edi, 0x26	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000123	      0xb800000000	                              mov eax, 0	     12610	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000128	            0x7594	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400012a	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x400012c	         0xf1f4000	                         nop dword [rax]	     12637	i386-dis.c	FUNCTION_3
0x4000130	    0x81ff9b000000	                           cmp edi, 0x9b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000136	      0xb800000000	                              mov eax, 0	     12623	i386-dis.c	FUNCTION_3	SWITCH_1
0x400013b	            0x7581	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400013d	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x400013f	              0x90	                                     nop	     12637	i386-dis.c	FUNCTION_3
0x4000140	    0x81fff3010000	                          cmp edi, 0x1f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000146	      0xb800000000	                              mov eax, 0	     12625	i386-dis.c	FUNCTION_3	SWITCH_1
0x400014b	     0xf856dffffff	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000151	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x4000153	       0xf1f440000	                   nop dword [rax + rax]	     12637	i386-dis.c	FUNCTION_3
0x4000158	          0x83e601	                              and esi, 1	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x400015b	      0xba00000000	                              mov edx, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000160	      0xb800000000	                              mov eax, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000165	        0x480f44c2	                          cmove rax, rdx	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000169	              0xc3	                                     ret	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x400016a	    0x660f1f440000	                    nop word [rax + rax]	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000170	          0x83ef40	                           sub edi, 0x40	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000173	          0x4863ff	                         movsxd rdi, edi	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000176	    0x488b04fd0000	                  mov rax, qword [rdi*8]	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x400017e	              0xc3	                                     ret	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x400017f	              0x90	                                     nop	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000180	    0x833d00000000	               cmp dword [0x04000187], 2	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000187	            0x7417	                            je 0x40001a0	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000189	          0x83e602	                              and esi, 2	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400018c	      0xba00000000	                              mov edx, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000191	      0xb800000000	                              mov eax, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000196	        0x480f45c2	                         cmovne rax, rdx	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400019a	              0xc3	                                     ret	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400019b	       0xf1f440000	                   nop dword [rax + rax]	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x40001a0	          0x83e602	                              and esi, 2	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a3	      0xba00000000	                              mov edx, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a8	      0xb800000000	                              mov eax, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001ad	        0x480f44c2	                          cmove rax, rdx	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001b1	              0xc3	                                     ret	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
OP_MXC	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	12
0x4002420	        0x4883ec08	                              sub rsp, 8	     16554	i386-dis.c	FUNCTION_54
0x4002424	    0x8b0500000000	            mov eax, dword [0x0400242a] 	     16555	i386-dis.c	FUNCTION_54
0x400242a	    0x486315000000	         movsxd rdx, dword [0x04002431] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4002431	    0x488b3d000000	            mov rdi, qword [0x04002438] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002438	      0x2500020000	                          and eax, 0x200	     16555	i386-dis.c	FUNCTION_54
0x400243d	     0x90500000000	              or dword [0x04002443], eax	     16555	i386-dis.c	FUNCTION_54
0x4002443	    0x488b05000000	            mov rax, qword [0x0400244a] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x400244a	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400244e	      0xe800000000	                          call 0x4002453	       117	string3.h	FUNCTION_108	CALL_3
0x4002453	    0x488905000000	            mov qword [0x0400245a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400245a	        0x4883c408	                              add rsp, 8	     16557	i386-dis.c	FUNCTION_54
0x400245e	              0xc3	                                     ret	     16557	i386-dis.c	FUNCTION_54
REP_Fixup	IF,1:CALL,4:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,1:FOR,0	22
0x4003550	        0x4883ec08	                              sub rsp, 8	     16923	i386-dis.c	FUNCTION_68
0x4003554	    0xf60500000000	               test byte [0x0400355b], 1	     16926	i386-dis.c	FUNCTION_68	IF_1
0x400355b	            0x7412	                            je 0x400356f	     16926	i386-dis.c	FUNCTION_68	IF_1
0x400355d	    0x486305000000	         movsxd rax, dword [0x04003564] 	     16927	i386-dis.c	FUNCTION_68	IF_1
0x4003564	    0xc70485000000	                mov dword [rax*4], 0x1f3	     16927	i386-dis.c	FUNCTION_68	IF_1
0x400356f	          0x8d47b4	                   lea eax, [rdi - 0x4c]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003572	          0x83f821	                           cmp eax, 0x21	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003575	            0x7739	                            ja 0x40035b0	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003577	    0xff24c5000000	                       jmp qword [rax*8]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x400357e	            0x6690	                                     nop	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003580	      0xbf53000000	                           mov edi, 0x53	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4003585	        0x4883c408	                              add rsp, 8	     16946	i386-dis.c	FUNCTION_68
0x4003589	      0xe9d2f6ffff	                        jmp sym.OP_ESreg	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x400358e	            0x6690	                                     nop	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4003590	      0xbf52000000	                           mov edi, 0x52	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x4003595	        0x4883c408	                              add rsp, 8	     16946	i386-dis.c	FUNCTION_68
0x4003599	      0xe932f6ffff	                        jmp sym.OP_DSreg	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x400359e	            0x6690	                                     nop	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x40035a0	        0x4883c408	                              add rsp, 8	     16946	i386-dis.c	FUNCTION_68
0x40035a4	      0xe907feffff	                        jmp sym.OP_IMREG	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x40035a9	     0xf1f80000000	                         nop dword [rax]	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x40035b0	      0xe800000000	                          call 0x40035b5	     16943	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_4
OP_MS	IF,1:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	5
0x4006290	    0x833d00000000	               cmp dword [0x04006297], 3	     16653	i386-dis.c	FUNCTION_56	IF_1
0x4006297	            0x7407	                            je 0x40062a0	     16653	i386-dis.c	FUNCTION_56	IF_1
0x4006299	      0xe9c2c1ffff	                           jmp sym.BadOp	     16656	i386-dis.c	FUNCTION_56	CALL_2
0x400629e	            0x6690	                                     nop	     16656	i386-dis.c	FUNCTION_56	CALL_2
0x40062a0	      0xe9fbfeffff	                           jmp sym.OP_EM	     16654	i386-dis.c	FUNCTION_56	CALL_1
OP_XMM_VexW	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	2
0x4002e10	    0x832500000000	      and dword [0x04002e17], 0xfffffff7	     17565	i386-dis.c	FUNCTION_88
0x4002e17	      0xe9e4feffff	                          jmp sym.OP_XMM	     17566	i386-dis.c	FUNCTION_88	CALL_1
intel_operand_size	IF,31:CALL,83:functions,0:WHILE,0:ELSE,12:DO,0:SWITCH,13:FOR,0	321
0x40024f0	        0x4883ec08	                              sub rsp, 8	     14724	i386-dis.c	FUNCTION_23
0x40024f4	    0x8b0500000000	            mov eax, dword [0x040024fa] 	     14725	i386-dis.c	FUNCTION_23	IF_1
0x40024fa	            0x85c0	                           test eax, eax	     14725	i386-dis.c	FUNCTION_23	IF_1
0x40024fc	            0x7410	                            je 0x400250e	     14725	i386-dis.c	FUNCTION_23	IF_1
0x40024fe	    0x448b05000000	            mov r8d, dword [0x04002505] 	     14726	i386-dis.c	FUNCTION_23	IF_1
0x4002505	          0x4585c0	                           test r8d, r8d	     14726	i386-dis.c	FUNCTION_23	IF_1
0x4002508	     0xf8582000000	                           jne 0x4002590	     14726	i386-dis.c	FUNCTION_23	IF_1
0x400250e	          0x83ff45	                           cmp edi, 0x45	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002511	            0x7775	                            ja 0x4002588	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002513	            0x89fa	                            mov edx, edi	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002515	    0xff24d5000000	                       jmp qword [rdx*8]	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x400251c	         0xf1f4000	                         nop dword [rax]	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002520	    0x803d00000000	                cmp byte [0x04002527], 0	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x4002527	     0xf84fb020000	                            je 0x4002828	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x400252d	            0x85c0	                           test eax, eax	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x400252f	            0x746d	                            je 0x400259e	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x4002531	    0x8b0500000000	            mov eax, dword [0x04002537] 	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002537	      0x3d00010000	                          cmp eax, 0x100	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x400253c	     0xf841e060000	                            je 0x4002b60	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002542	      0x3d00020000	                          cmp eax, 0x200	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002547	     0xf84e8050000	                            je 0x4002b35	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x400254d	          0x83c080	             add eax, 0xffffffffffffff80	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002550	    0x48ba584d4d57	          movabs rdx, 0x2044524f574d4d58	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x400255a	    0x488b05000000	            mov rax, qword [0x04002561] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002561	     0xf85c1020000	                           jne 0x4002828	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002567	    0x660f1f840000	                    nop word [rax + rax]	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002570	          0x488910	                    mov qword [rax], rdx	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002573	    0xc74008505452	        mov dword [rax + 8], 0x20525450 	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x400257a	        0x4883c00c	                            add rax, 0xc	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400257e	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002581	    0x488905000000	            mov qword [0x04002588], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002588	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x400258c	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x400258d	           0xf1f00	                         nop dword [rax]	     15089	i386-dis.c	FUNCTION_23
0x4002590	          0x83ff0d	                            cmp edi, 0xd	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4002593	            0x7409	                            je 0x400259e	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4002595	          0x83ff13	                           cmp edi, 0x13	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4002598	     0xf8570ffffff	                           jne 0x400250e	     14727	i386-dis.c	FUNCTION_23	IF_1
0x400259e	    0x8b3500000000	            mov esi, dword [0x040025a4] 	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x40025a4	            0x85f6	                           test esi, esi	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x40025a6	            0x753c	                           jne 0x40025e4	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x40025a8	    0x488b05000000	            mov rax, qword [0x040025af] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025af	    0x48b944574f52	          movabs rcx, 0x54502044524f5744	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025b9	            0xeb3a	                           jmp 0x40025f5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025bb	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025c0	    0x833d00000000	               cmp dword [0x040025c7], 2	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40025c7	     0xf847d010000	                            je 0x400274a	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40025cd	          0x83e601	                              and esi, 1	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40025d0	    0xf60500000000	               test byte [0x040025d7], 8	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x40025d7	     0xf8485010000	                            je 0x4002762	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x40025dd	    0x830d00000000	            or dword [0x040025e4], 0x48 	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x40025e4	    0x488b05000000	            mov rax, qword [0x040025eb] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025eb	    0x48b951574f52	          movabs rcx, 0x54502044524f5751	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025f5	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025f8	      0xb952200000	                         mov ecx, 0x2052	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40025fd	        0xc6400a00	                 mov byte [rax + 0xa], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002601	        0x66894808	                  mov word [rax + 8], cx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002605	        0x4883c00a	                            add rax, 0xa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002609	    0x488905000000	            mov qword [0x04002610], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002610	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x4002614	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x4002615	           0xf1f00	                         nop dword [rax]	     15089	i386-dis.c	FUNCTION_23
0x4002618	    0x803d00000000	                cmp byte [0x0400261f], 0	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x400261f	            0x742f	                            je 0x4002650	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x4002621	    0x8b0500000000	            mov eax, dword [0x04002627] 	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4002627	      0x3d00010000	                          cmp eax, 0x100	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x400262c	     0xf84ae010000	                            je 0x40027e0	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4002632	      0x3d00020000	                          cmp eax, 0x200	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4002637	     0xf8474050000	                            je 0x4002bb1	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x400263d	          0x83c080	             add eax, 0xffffffffffffff80	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4002640	     0xf85e2010000	                           jne 0x4002828	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4002646	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4002650	    0x488b05000000	            mov rax, qword [0x04002657] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002657	    0x48b9584d4d57	          movabs rcx, 0x2044524f574d4d58	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002661	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002664	    0xc74008505452	        mov dword [rax + 8], 0x20525450 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400266b	        0x4883c00c	                            add rax, 0xc	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400266f	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002672	    0x488905000000	            mov qword [0x04002679], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002679	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x400267d	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x400267e	            0x6690	                                     nop	     15089	i386-dis.c	FUNCTION_23
0x4002680	    0x803d00000000	                cmp byte [0x04002687], 0	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x4002687	     0xf849b010000	                            je 0x4002828	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x400268d	    0x448b05000000	            mov r8d, dword [0x04002694] 	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x4002694	          0x4585c0	                           test r8d, r8d	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x4002697	     0xf8547ffffff	                           jne 0x40025e4	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x400269d	    0x488b05000000	            mov rax, qword [0x040026a4] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026a4	    0x48b9574f5244	          movabs rcx, 0x5254502044524f57	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026ae	      0xbf20000000	                           mov edi, 0x20	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026b3	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026b6	        0x66897808	                  mov word [rax + 8], di	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026ba	        0x4883c009	                              add rax, 9	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026be	    0x488905000000	            mov qword [0x040026c5], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026c5	      0xe9befeffff	                           jmp 0x4002588	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026ca	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026d0	    0x803d00000000	                cmp byte [0x040026d7], 0	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40026d7	     0xf844b010000	                            je 0x4002828	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40026dd	    0x813d00000000	           cmp dword [0x040026e7], 0x80 	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40026e7	     0xf853b010000	                           jne 0x4002828	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x40026ed	    0x448b15000000	           mov r10d, dword [0x040026f4] 	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x40026f4	          0x4585d2	                         test r10d, r10d	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x40026f7	     0xf85abfeffff	                           jne 0x40025a8	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x40026fd	    0x488b05000000	            mov rax, qword [0x04002704] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002704	    0x48b942595445	          movabs rcx, 0x5254502045545942	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400270e	    0x41b920000000	                           mov r9d, 0x20	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002714	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002717	      0x6644894808	                 mov word [rax + 8], r9w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400271c	        0x4883c009	                              add rax, 9	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002720	    0x488905000000	            mov qword [0x04002727], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002727	      0xe95cfeffff	                           jmp 0x4002588	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400272c	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002730	    0x833d00000000	               cmp dword [0x04002737], 2	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x4002737	     0xf8590feffff	                           jne 0x40025cd	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400273d	    0x833d00000000	               cmp dword [0x04002744], 1	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x4002744	     0xf849afeffff	                            je 0x40025e4	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400274a	          0x83e601	                              and esi, 1	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400274d	     0xf8591feffff	                           jne 0x40025e4	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4002753	    0x8b3500000000	            mov esi, dword [0x04002759] 	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4002759	          0x83e608	                              and esi, 8	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400275c	     0xf8582feffff	                           jne 0x40025e4	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4002762	          0x83ff23	                           cmp edi, 0x23	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x4002765	     0xf84e5030000	                            je 0x4002b50	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x400276b	          0x83e601	                              and esi, 1	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x400276e	     0xf85dc030000	                           jne 0x4002b50	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x4002774	    0x488b05000000	            mov rax, qword [0x0400277b] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400277b	    0x48b9574f5244	          movabs rcx, 0x5254502044524f57	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002785	      0xbe20000000	                           mov esi, 0x20	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400278a	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400278d	        0x66897008	                  mov word [rax + 8], si	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002791	        0x4883c009	                              add rax, 9	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002795	    0x488905000000	            mov qword [0x0400279c], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400279c	    0x8b0500000000	            mov eax, dword [0x040027a2] 	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x40027a2	      0x2500020000	                          and eax, 0x200	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x40027a7	     0x90500000000	              or dword [0x040027ad], eax	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x40027ad	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x40027b1	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x40027b2	    0x660f1f440000	                    nop word [rax + rax]	     15089	i386-dis.c	FUNCTION_23
0x40027b8	    0x803d00000000	                cmp byte [0x040027bf], 0	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x40027bf	            0x7467	                            je 0x4002828	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x40027c1	    0x8b0500000000	            mov eax, dword [0x040027c7] 	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40027c7	      0x3d00010000	                          cmp eax, 0x100	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40027cc	     0xf847efeffff	                            je 0x4002650	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40027d2	      0x3d00020000	                          cmp eax, 0x200	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40027d7	     0xf8584020000	                           jne 0x4002a61	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40027dd	           0xf1f00	                         nop dword [rax]	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x40027e0	    0x488b05000000	            mov rax, qword [0x040027e7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40027e7	    0x48b9594d4d57	          movabs rcx, 0x2044524f574d4d59	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40027f1	      0xe96bfeffff	                           jmp 0x4002661	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40027f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002800	    0x803d00000000	                cmp byte [0x04002807], 0	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4002807	            0x741f	                            je 0x4002828	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4002809	    0x8b0500000000	            mov eax, dword [0x0400280f] 	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x400280f	      0x3d80000000	                           cmp eax, 0x80	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4002814	     0xf8436feffff	                            je 0x4002650	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x400281a	      0x3d00010000	                          cmp eax, 0x100	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x400281f	     0xf842bfeffff	                            je 0x4002650	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4002825	           0xf1f00	                         nop dword [rax]	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4002828	      0xe800000000	                          call 0x400282d	     15065	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_77
0x400282d	           0xf1f00	                         nop dword [rax]	     15065	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_77
0x4002830	          0x83e601	                              and esi, 1	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4002833	    0x488b05000000	            mov rax, qword [0x0400283a] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400283a	    0x48b946574f52	          movabs rcx, 0x54502044524f5746	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002844	            0x750a	                           jne 0x4002850	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4002846	    0x48b944574f52	          movabs rcx, 0x54502044524f5744	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4002850	      0xba52200000	                         mov edx, 0x2052	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4002855	          0x488908	                    mov qword [rax], rcx	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4002858	        0xc6400a00	                 mov byte [rax + 0xa], 0	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x400285c	        0x66895008	                  mov word [rax + 8], dx	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4002860	        0x4883c00a	                            add rax, 0xa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002864	    0x488905000000	            mov qword [0x0400286b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400286b	      0xe92cffffff	                           jmp 0x400279c	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002870	          0x83e601	                              and esi, 1	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002873	    0x488b05000000	            mov rax, qword [0x0400287a] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400287a	    0x48b951574f52	          movabs rcx, 0x54502044524f5751	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002884	            0x75ca	                           jne 0x4002850	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002886	            0xebbe	                           jmp 0x4002846	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002888	     0xf1f84000000	                   nop dword [rax + rax]	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002890	    0x833d00000000	               cmp dword [0x04002897], 2	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x4002897	     0xf850bfdffff	                           jne 0x40025a8	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x400289d	      0xe942fdffff	                           jmp 0x40025e4	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x40028a2	    0x660f1f440000	                    nop word [rax + rax]	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x40028a8	    0x488b05000000	            mov rax, qword [0x040028af] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40028af	    0x48b954425954	          movabs rcx, 0x5450204554594254	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40028b9	      0xe937fdffff	                           jmp 0x40025f5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40028be	            0x6690	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40028c0	    0x803d00000000	                cmp byte [0x040028c7], 0	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x40028c7	     0xf845bffffff	                            je 0x4002828	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x40028cd	            0x85c0	                           test eax, eax	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x40028cf	     0xf8453ffffff	                            je 0x4002828	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x40028d5	    0x8b0500000000	            mov eax, dword [0x040028db] 	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x40028db	      0x3d00010000	                          cmp eax, 0x100	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x40028e0	     0xf846afdffff	                            je 0x4002650	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x40028e6	      0x3d00020000	                          cmp eax, 0x200	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x40028eb	     0xf846f020000	                            je 0x4002b60	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x40028f1	          0x83c080	             add eax, 0xffffffffffffff80	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x40028f4	     0xf852effffff	                           jne 0x4002828	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x40028fa	    0x488b05000000	            mov rax, qword [0x04002901] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002901	    0x48ba51574f52	          movabs rdx, 0x54502044524f5751	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400290b	    0x41bb52200000	                        mov r11d, 0x2052	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002911	          0x488910	                    mov qword [rax], rdx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002914	      0x6644895808	                mov word [rax + 8], r11w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002919	        0x4883c00a	                            add rax, 0xa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400291d	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002920	    0x488905000000	            mov qword [0x04002927], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002927	      0xe95cfcffff	                           jmp 0x4002588	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400292c	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002930	    0x488b05000000	            mov rax, qword [0x04002937] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002937	    0x48b94f574f52	          movabs rcx, 0x54502044524f574f	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002941	      0xe9affcffff	                           jmp 0x40025f5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002946	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002950	    0xf60500000000	               test byte [0x04002957], 8	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002957	     0xf8523020000	                           jne 0x4002b80	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400295d	          0x83e601	                              and esi, 1	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002960	     0xf840efeffff	                            je 0x4002774	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002966	    0x488b05000000	            mov rax, qword [0x0400296d] 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400296d	    0x48ba574f5244	          movabs rdx, 0x5254502044524f57	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002977	      0xb920000000	                           mov ecx, 0x20	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400297c	          0xc60044	                    mov byte [rax], 0x44	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400297f	        0x48895001	                mov qword [rax + 1], rdx	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002983	        0x4883c00a	                            add rax, 0xa	       117	string3.h	FUNCTION_108	CALL_3
0x4002987	        0x668948ff	                  mov word [rax - 1], cx	       117	string3.h	FUNCTION_108	CALL_3
0x400298b	    0x488905000000	            mov qword [0x04002992], rax 	       117	string3.h	FUNCTION_108	CALL_3
0x4002992	      0xe905feffff	                           jmp 0x400279c	       117	string3.h	FUNCTION_108	CALL_3
0x4002997	    0x660f1f840000	                    nop word [rax + rax]	       117	string3.h	FUNCTION_108	CALL_3
0x40029a0	    0x803d00000000	                cmp byte [0x040029a7], 0	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x40029a7	     0xf847bfeffff	                            je 0x4002828	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x40029ad	    0x8b0500000000	            mov eax, dword [0x040029b3] 	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029b3	      0x3d00010000	                          cmp eax, 0x100	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029b8	     0xf8426fcffff	                            je 0x40025e4	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029be	      0x3d00020000	                          cmp eax, 0x200	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029c3	     0xf8487fcffff	                            je 0x4002650	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029c9	          0x83c080	             add eax, 0xffffffffffffff80	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029cc	     0xf8556feffff	                           jne 0x4002828	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029d2	      0xe9d1fbffff	                           jmp 0x40025a8	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029d7	    0x660f1f840000	                    nop word [rax + rax]	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x40029e0	    0x803d00000000	                cmp byte [0x040029e7], 0	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x40029e7	     0xf843bfeffff	                            je 0x4002828	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x40029ed	    0x8b0500000000	            mov eax, dword [0x040029f3] 	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40029f3	      0x3d00010000	                          cmp eax, 0x100	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40029f8	     0xf84aafbffff	                            je 0x40025a8	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40029fe	      0x3d00020000	                          cmp eax, 0x200	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002a03	     0xf84dbfbffff	                            je 0x40025e4	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002a09	          0x83c080	             add eax, 0xffffffffffffff80	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002a0c	     0xf8516feffff	                           jne 0x4002828	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002a12	      0xe986fcffff	                           jmp 0x400269d	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002a17	    0x660f1f840000	                    nop word [rax + rax]	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002a20	    0x803d00000000	                cmp byte [0x04002a27], 0	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x4002a27	     0xf8571fbffff	                           jne 0x400259e	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x4002a2d	      0xe9f6fdffff	                           jmp 0x4002828	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x4002a32	    0x660f1f440000	                    nop word [rax + rax]	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x4002a38	    0x803d00000000	                cmp byte [0x04002a3f], 0	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x4002a3f	     0xf84e3fdffff	                            je 0x4002828	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x4002a45	    0x8b0500000000	            mov eax, dword [0x04002a4b] 	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4002a4b	      0x3d00010000	                          cmp eax, 0x100	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4002a50	     0xf848efbffff	                            je 0x40025e4	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4002a56	      0x3d00020000	                          cmp eax, 0x200	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4002a5b	     0xf8483fbffff	                            je 0x40025e4	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4002a61	          0x83c080	             add eax, 0xffffffffffffff80	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002a64	     0xf85befdffff	                           jne 0x4002828	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002a6a	      0xe975fbffff	                           jmp 0x40025e4	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002a6f	              0x90	                                     nop	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002a70	    0x803d00000000	                cmp byte [0x04002a77], 0	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x4002a77	     0xf84abfdffff	                            je 0x4002828	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x4002a7d	    0x8b0500000000	            mov eax, dword [0x04002a83] 	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002a83	      0x3d00010000	                          cmp eax, 0x100	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002a88	     0xf841afbffff	                            je 0x40025a8	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002a8e	      0x3d00020000	                          cmp eax, 0x200	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002a93	     0xf8530ffffff	                           jne 0x40029c9	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002a99	      0xe90afbffff	                           jmp 0x40025a8	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002a9e	            0x6690	                                     nop	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002aa0	    0x803d00000000	                cmp byte [0x04002aa7], 0	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x4002aa7	     0xf847bfdffff	                            je 0x4002828	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x4002aad	    0x8b0500000000	            mov eax, dword [0x04002ab3] 	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002ab3	      0x3d00010000	                          cmp eax, 0x100	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002ab8	     0xf84dffbffff	                            je 0x400269d	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002abe	      0x3d00020000	                          cmp eax, 0x200	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002ac3	     0xf8540ffffff	                           jne 0x4002a09	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002ac9	      0xe9cffbffff	                           jmp 0x400269d	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002ace	            0x6690	                                     nop	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002ad0	    0x803d00000000	                cmp byte [0x04002ad7], 0	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x4002ad7	     0xf844bfdffff	                            je 0x4002828	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x4002add	    0x8b0500000000	            mov eax, dword [0x04002ae3] 	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002ae3	      0x3d00010000	                          cmp eax, 0x100	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002ae8	     0xf840ffcffff	                            je 0x40026fd	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002aee	      0x3d00020000	                          cmp eax, 0x200	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002af3	     0xf8404fcffff	                            je 0x40026fd	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002af9	          0x83c080	             add eax, 0xffffffffffffff80	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002afc	     0xf8526fdffff	                           jne 0x4002828	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002b02	      0xe9f6fbffff	                           jmp 0x40026fd	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002b07	    0x660f1f840000	                    nop word [rax + rax]	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002b10	    0x803d00000000	                cmp byte [0x04002b17], 0	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x4002b17	     0xf840bfdffff	                            je 0x4002828	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x4002b1d	    0x8b0500000000	            mov eax, dword [0x04002b23] 	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002b23	      0x3d00010000	                          cmp eax, 0x100	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002b28	            0x7436	                            je 0x4002b60	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002b2a	      0x3d00020000	                          cmp eax, 0x200	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002b2f	     0xf852cffffff	                           jne 0x4002a61	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002b35	    0x488b05000000	            mov rax, qword [0x04002b3c] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b3c	    0x48b95a4d4d57	          movabs rcx, 0x2044524f574d4d5a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b46	      0xe916fbffff	                           jmp 0x4002661	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b4b	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b50	    0x488b05000000	            mov rax, qword [0x04002b57] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b57	      0xe9eafcffff	                           jmp 0x4002846	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b5c	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b60	    0x488b05000000	            mov rax, qword [0x04002b67] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b67	    0x48ba594d4d57	          movabs rdx, 0x2044524f574d4d59	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b71	      0xe9faf9ffff	                           jmp 0x4002570	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002b80	    0x488b05000000	            mov rax, qword [0x04002b87] 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002b87	    0x48b9574f5244	          movabs rcx, 0x5254502044524f57	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002b91	      0xba20000000	                           mov edx, 0x20	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002b96	          0xc60044	                    mov byte [rax], 0x44	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002b99	        0x48894801	                mov qword [rax + 1], rcx	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002b9d	        0x4883c00a	                            add rax, 0xa	       117	string3.h	FUNCTION_108	CALL_3
0x4002ba1	        0x668950ff	                  mov word [rax - 1], dx	       117	string3.h	FUNCTION_108	CALL_3
0x4002ba5	    0x488905000000	            mov qword [0x04002bac], rax 	       117	string3.h	FUNCTION_108	CALL_3
0x4002bac	      0xe9d7f9ffff	                           jmp 0x4002588	       117	string3.h	FUNCTION_108	CALL_3
0x4002bb1	    0x488b05000000	            mov rax, qword [0x04002bb8] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002bb8	    0x48ba5a4d4d57	          movabs rdx, 0x2044524f574d4d5a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002bc2	      0xe9a9f9ffff	                           jmp 0x4002570	     14577	i386-dis.c	FUNCTION_18	CALL_1
PCLMUL_Fixup	IF,1:CALL,3:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,1:FOR,0	68
0x40042f0	              0x53	                                push rbx	     17782	i386-dis.c	FUNCTION_95
0x40042f1	        0x4883ec10	                           sub rsp, 0x10	     17782	i386-dis.c	FUNCTION_95
0x40042f5	    0x488b3d000000	            mov rdi, qword [0x040042fc] 	     17785	i386-dis.c	FUNCTION_95
0x40042fc	    0x64488b042528	                mov rax, qword fs:[0x28]	     17782	i386-dis.c	FUNCTION_95
0x4004305	      0x4889442408	                mov qword [rsp + 8], rax	     17782	i386-dis.c	FUNCTION_95
0x400430a	            0x31c0	                            xor eax, eax	     17782	i386-dis.c	FUNCTION_95
0x400430c	    0x488b05000000	            mov rax, qword [0x04004313] 	     17785	i386-dis.c	FUNCTION_95
0x4004313	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17785	i386-dis.c	FUNCTION_95
0x4004317	        0x488d7001	                      lea rsi, [rax + 1]	     17785	i386-dis.c	FUNCTION_95
0x400431b	          0x483b32	                    cmp rsi, qword [rdx]	     17785	i386-dis.c	FUNCTION_95
0x400431e	     0xf87ec000000	                            ja 0x4004410	     17785	i386-dis.c	FUNCTION_95
0x4004324	    0x488935000000	            mov qword [0x0400432b], rsi 	     17786	i386-dis.c	FUNCTION_95
0x400432b	           0xfb630	                   movzx esi, byte [rax]	     17786	i386-dis.c	FUNCTION_95
0x400432e	        0x4080fe10	                           cmp sil, 0x10	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004332	     0xf84c8000000	                            je 0x4004400	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004338	        0x4080fe11	                           cmp sil, 0x11	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x400433c	            0x7462	                            je 0x40043a0	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x400433e	        0x400fb6c6	                          movzx eax, sil	     17786	i386-dis.c	FUNCTION_95
0x4004342	          0x83f803	                              cmp eax, 3	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x4004345	     0xf86df000000	                           jbe 0x400442a	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x400434b	      0xbf00000000	                              mov edi, 0	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_2
0x4004350	    0xc60500000000	            mov byte [0x04004357], 0x24 	     17812	i386-dis.c	FUNCTION_95	ELSE_1
0x4004357	      0xe8c4fdffff	call sym.print_operand_value.constprop.18	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_2
0x400435c	    0x480fbe350000	           movsx rsi, byte [0x04004364] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004364	    0x488b3d000000	            mov rdi, qword [0x0400436b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400436b	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004372	      0xe800000000	                          call 0x4004377	       117	string3.h	FUNCTION_108	CALL_3
0x4004377	    0xc60500000000	                mov byte [0x0400437e], 0	     17815	i386-dis.c	FUNCTION_95	ELSE_1
0x400437e	    0x488905000000	            mov qword [0x04004385], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004385	      0x488b442408	                mov rax, qword [rsp + 8]	     17817	i386-dis.c	FUNCTION_95
0x400438a	    0x644833042528	                xor rax, qword fs:[0x28]	     17817	i386-dis.c	FUNCTION_95
0x4004393	     0xf858c000000	                           jne 0x4004425	     17817	i386-dis.c	FUNCTION_95
0x4004399	        0x4883c410	                           add rsp, 0x10	     17817	i386-dis.c	FUNCTION_95
0x400439d	              0x5b	                                 pop rbx	     17817	i386-dis.c	FUNCTION_95
0x400439e	              0xc3	                                     ret	     17817	i386-dis.c	FUNCTION_95
0x400439f	              0x90	                                     nop	     17817	i386-dis.c	FUNCTION_95
0x40043a0	    0x41b800000000	                              mov r8d, 0	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x40043a6	      0xbb03000000	                              mov ebx, 3	     17782	i386-dis.c	FUNCTION_95
0x40043ab	    0x488b3d000000	            mov rdi, qword [0x040043b2] 	     17801	i386-dis.c	FUNCTION_95	IF_1
0x40043b2	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x40043b5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40043ba	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x40043c1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40043c6	         0xfb647fd	               movzx eax, byte [rdi - 3]	     17802	i386-dis.c	FUNCTION_95	IF_1
0x40043ca	        0x4883ef03	                              sub rdi, 3	        33	stdio2.h	FUNCTION_113	CALL_1
0x40043ce	          0x880424	                      mov byte [rsp], al	     17802	i386-dis.c	FUNCTION_95	IF_1
0x40043d1	         0xfb64701	               movzx eax, byte [rdi + 1]	     17803	i386-dis.c	FUNCTION_95	IF_1
0x40043d5	        0x88442401	                  mov byte [rsp + 1], al	     17803	i386-dis.c	FUNCTION_95	IF_1
0x40043d9	         0xfb64702	               movzx eax, byte [rdi + 2]	     17804	i386-dis.c	FUNCTION_95	IF_1
0x40043dd	      0xc644240300	                   mov byte [rsp + 3], 0	     17805	i386-dis.c	FUNCTION_95	IF_1
0x40043e2	        0x88442402	                  mov byte [rsp + 2], al	     17804	i386-dis.c	FUNCTION_95	IF_1
0x40043e6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40043e8	      0xe800000000	                          call 0x40043ed	        33	stdio2.h	FUNCTION_113	CALL_1
0x40043ed	    0x48011d000000	            add qword [0x040043f4], rbx 	     17807	i386-dis.c	FUNCTION_95	IF_1
0x40043f4	            0xeb8f	                           jmp 0x4004385	     17807	i386-dis.c	FUNCTION_95	IF_1
0x40043f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17807	i386-dis.c	FUNCTION_95	IF_1
0x4004400	    0x41b800000000	                              mov r8d, 0	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004406	            0xeb9e	                           jmp 0x40043a6	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004408	     0xf1f84000000	                   nop dword [rax + rax]	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004410	      0xe8bbd7ffff	                     call sym.fetch_data	     17785	i386-dis.c	FUNCTION_95
0x4004415	    0x488b05000000	            mov rax, qword [0x0400441c] 	     17785	i386-dis.c	FUNCTION_95
0x400441c	        0x488d7001	                      lea rsi, [rax + 1]	     17785	i386-dis.c	FUNCTION_95
0x4004420	      0xe9fffeffff	                           jmp 0x4004324	     17785	i386-dis.c	FUNCTION_95
0x4004425	      0xe800000000	                          call 0x400442a	     17817	i386-dis.c	FUNCTION_95
0x400442a	        0x48c1e004	                              shl rax, 4	     17817	i386-dis.c	FUNCTION_95
0x400442e	    0x4c8b80000000	                     mov r8, qword [rax]	     17817	i386-dis.c	FUNCTION_95
0x4004435	    0x8b9800000000	                    mov ebx, dword [rax]	     17817	i386-dis.c	FUNCTION_95
0x400443b	      0xe96bffffff	                           jmp 0x40043ab	     17817	i386-dis.c	FUNCTION_95
OP_C	IF,2:CALL,1:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,0:FOR,0	30
0x4002250	        0x4883ec08	                              sub rsp, 8	     16353	i386-dis.c	FUNCTION_46
0x4002254	    0xf60500000000	               test byte [0x0400225b], 4	     16355	i386-dis.c	FUNCTION_46	IF_1
0x400225b	            0x745b	                            je 0x40022b8	     16355	i386-dis.c	FUNCTION_46	IF_1
0x400225d	    0x830d00000000	            or dword [0x04002264], 0x44 	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4002264	    0x41b808000000	                              mov r8d, 8	     16358	i386-dis.c	FUNCTION_46	IF_1
0x400226a	    0x440305000000	             add r8d, dword [0x04002271]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002271	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002276	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x400227b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002280	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002285	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002287	      0xe800000000	                          call 0x400228c	        33	stdio2.h	FUNCTION_113	CALL_1
0x400228c	    0x480fbe350000	           movsx rsi, byte [0x04002294] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002294	    0x488b3d000000	            mov rdi, qword [0x0400229b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400229b	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40022a2	      0xe800000000	                          call 0x40022a7	       117	string3.h	FUNCTION_108	CALL_3
0x40022a7	    0x488905000000	            mov qword [0x040022ae], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022ae	        0x4883c408	                              add rsp, 8	     16370	i386-dis.c	FUNCTION_46
0x40022b2	              0xc3	                                     ret	     16370	i386-dis.c	FUNCTION_46
0x40022b3	       0xf1f440000	                   nop dword [rax + rax]	     16370	i386-dis.c	FUNCTION_46
0x40022b8	          0x4531c0	                            xor r8d, r8d	     16367	i386-dis.c	FUNCTION_46	ELSE_2
0x40022bb	    0x833d00000000	               cmp dword [0x040022c2], 2	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022c2	            0x74a6	                            je 0x400226a	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022c4	    0xf60500000000	               test byte [0x040022cb], 4	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022cb	            0x749d	                            je 0x400226a	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022cd	    0x486305000000	         movsxd rax, dword [0x040022d4] 	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022d4	    0x830d00000000	                or dword [0x040022db], 4	     16363	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022db	    0x41b808000000	                              mov r8d, 8	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022e1	    0xc70485000000	                    mov dword [rax*4], 0	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x40022ec	      0xe979ffffff	                           jmp 0x400226a	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
OP_XMM	IF,7:CALL,3:functions,0:WHILE,0:ELSE,4:DO,0:SWITCH,2:FOR,0	61
0x4002d00	        0x4883ec08	                              sub rsp, 8	     16425	i386-dis.c	FUNCTION_51
0x4002d04	    0xf60500000000	               test byte [0x04002d0b], 4	     16429	i386-dis.c	FUNCTION_51
0x4002d0b	    0x8b0500000000	            mov eax, dword [0x04002d11] 	     16426	i386-dis.c	FUNCTION_51
0x4002d11	            0x740a	                            je 0x4002d1d	     16429	i386-dis.c	FUNCTION_51
0x4002d13	    0x830d00000000	            or dword [0x04002d1a], 0x44 	     16429	i386-dis.c	FUNCTION_51
0x4002d1a	          0x83c008	                              add eax, 8	     16431	i386-dis.c	FUNCTION_51	IF_1
0x4002d1d	    0x8b3500000000	            mov esi, dword [0x04002d23] 	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4002d23	            0x85f6	                           test esi, esi	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4002d25	            0x740e	                            je 0x4002d35	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4002d27	    0x8b0d00000000	            mov ecx, dword [0x04002d2d] 	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4002d2d	          0x8d5010	                   lea edx, [rax + 0x10]	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4002d30	            0x85c9	                           test ecx, ecx	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4002d32	           0xf44c2	                          cmove eax, edx	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4002d35	    0x803d00000000	                cmp byte [0x04002d3c], 0	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4002d3c	            0x7442	                            je 0x4002d80	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4002d3e	          0x83ff39	                           cmp edi, 0x39	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4002d41	            0x762d	                           jbe 0x4002d70	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4002d43	    0x8b1500000000	            mov edx, dword [0x04002d49] 	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002d49	    0x81fa00010000	                          cmp edx, 0x100	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002d4f	     0xf849b000000	                            je 0x4002df0	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002d55	    0x81fa00020000	                          cmp edx, 0x200	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002d5b	     0xf847f000000	                            je 0x4002de0	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002d61	          0x83c280	             add edx, 0xffffffffffffff80	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002d64	            0x7427	                            je 0x4002d8d	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002d66	      0xe800000000	                          call 0x4002d6b	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x4002d6b	       0xf1f440000	                   nop dword [rax + rax]	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x4002d70	    0x48ba00000e08	           movabs rdx, 0x2000000080e0000	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4002d7a	        0x480fa3fa	                             bt rdx, rdi	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4002d7e	            0x73c3	                           jae 0x4002d43	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4002d80	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4002d83	          0x83fa01	                              cmp edx, 1	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4002d86	            0x7630	                           jbe 0x4002db8	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4002d88	          0x83ff1b	                           cmp edi, 0x1b	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4002d8b	            0x7441	                            je 0x4002dce	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4002d8d	    0x488b15000000	            mov rdx, qword [0x04002d94] 	     16472	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002d94	            0x4898	                                    cdqe	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x4002d96	    0x488b3d000000	            mov rdi, qword [0x04002d9d] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002d9d	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4002da1	      0xe800000000	                          call 0x4002da6	       117	string3.h	FUNCTION_108	CALL_3
0x4002da6	    0x488905000000	            mov qword [0x04002dad], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002dad	        0x4883c408	                              add rsp, 8	     16486	i386-dis.c	FUNCTION_51
0x4002db1	              0xc3	                                     ret	     16486	i386-dis.c	FUNCTION_51
0x4002db2	    0x660f1f440000	                    nop word [rax + rax]	     16486	i386-dis.c	FUNCTION_51
0x4002db8	    0x8b1500000000	            mov edx, dword [0x04002dbe] 	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002dbe	    0x81fa00010000	                          cmp edx, 0x100	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002dc4	            0x74c7	                            je 0x4002d8d	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002dc6	    0x81fa00020000	                          cmp edx, 0x200	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002dcc	            0x7593	                           jne 0x4002d61	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002dce	    0x488b15000000	            mov rdx, qword [0x04002dd5] 	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002dd5	            0xebbd	                           jmp 0x4002d94	     16476	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002dd7	    0x660f1f840000	                    nop word [rax + rax]	     16476	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4002de0	    0x488b15000000	            mov rdx, qword [0x04002de7] 	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002de7	            0xebab	                           jmp 0x4002d94	     16460	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002de9	     0xf1f80000000	                         nop dword [rax]	     16460	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4002df0	    0x8b1500000000	            mov edx, dword [0x04002df6] 	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4002df6	            0x85d2	                           test edx, edx	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4002df8	            0x75d4	                           jne 0x4002dce	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4002dfa	          0x83ef37	                           sub edi, 0x37	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4002dfd	          0x83ff01	                              cmp edi, 1	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4002e00	            0x77cc	                            ja 0x4002dce	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4002e02	            0xeb89	                           jmp 0x4002d8d	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
BND_Fixup	IF,1:CALL,0:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	5
0x40001c0	    0xf60500000000	               test byte [0x040001c7], 2	     16954	i386-dis.c	FUNCTION_69	IF_1
0x40001c7	            0x7412	                            je 0x40001db	     16954	i386-dis.c	FUNCTION_69	IF_1
0x40001c9	    0x486305000000	         movsxd rax, dword [0x040001d0] 	     16955	i386-dis.c	FUNCTION_69	IF_1
0x40001d0	    0xc70485000000	                mov dword [rax*4], 0x4f2	     16955	i386-dis.c	FUNCTION_69	IF_1
0x40001db	            0xf3c3	                                     ret	     16955	i386-dis.c	FUNCTION_69	IF_1
print_insn	IF,55:CALL,37:functions,0:WHILE,0:ELSE,22:DO,0:SWITCH,0:FOR,12	1700
0x40062b0	            0x4157	                                push r15	     13168	i386-dis.c	FUNCTION_10
0x40062b2	            0x4156	                                push r14	     13168	i386-dis.c	FUNCTION_10
0x40062b4	          0x4889f0	                            mov rax, rsi	     13168	i386-dis.c	FUNCTION_10
0x40062b7	            0x4155	                                push r13	     13168	i386-dis.c	FUNCTION_10
0x40062b9	            0x4154	                                push r12	     13168	i386-dis.c	FUNCTION_10
0x40062bb	              0x55	                                push rbp	     13168	i386-dis.c	FUNCTION_10
0x40062bc	              0x53	                                push rbx	     13168	i386-dis.c	FUNCTION_10
0x40062bd	          0x4889fb	                            mov rbx, rdi	     13168	i386-dis.c	FUNCTION_10
0x40062c0	    0x4881ecc80100	                          sub rsp, 0x1c8	     13168	i386-dis.c	FUNCTION_10
0x40062c7	        0x488b6820	            mov rbp, qword [rax + 0x20] 	     13179	i386-dis.c	FUNCTION_10	IF_1
0x40062cb	      0x4889742408	                mov qword [rsp + 8], rsi	     13168	i386-dis.c	FUNCTION_10
0x40062d0	    0xc78424e80000	               mov dword [rsp + 0xe8], 3	     13178	i386-dis.c	FUNCTION_10
0x40062db	    0x64488b342528	                mov rsi, qword fs:[0x28]	     13168	i386-dis.c	FUNCTION_10
0x40062e4	    0x4889b424b801	            mov qword [rsp + 0x1b8], rsi	     13168	i386-dis.c	FUNCTION_10
0x40062ec	            0x31f6	                            xor esi, esi	     13168	i386-dis.c	FUNCTION_10
0x40062ee	        0x40f6c504	                             test bpl, 4	     13179	i386-dis.c	FUNCTION_10	IF_1
0x40062f2	     0xf84d8030000	                            je 0x40066d0	     13179	i386-dis.c	FUNCTION_10	IF_1
0x40062f8	    0xc70500000000	               mov dword [0x04006302], 1	     13180	i386-dis.c	FUNCTION_10	IF_1
0x4006302	    0x803d00000000	            cmp byte [0x04006309], 0xff 	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4006309	     0xf84e2030000	                            je 0x40066f1	     13189	i386-dis.c	FUNCTION_10	IF_3
0x400630f	      0x488b442408	                mov rax, qword [rsp + 8]	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006314	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x400631b	          0x4885c0	                           test rax, rax	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x400631e	            0x752a	                           jne 0x400634a	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006320	      0xe98b000000	                           jmp 0x40063b0	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006325	           0xf1f00	                         nop dword [rax]	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006328	    0xc70500000000	               mov dword [0x04006332], 0	     13195	i386-dis.c	FUNCTION_10	FOR_1	IF_4
0x4006332	      0xbe2c000000	                           mov esi, 0x2c	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4006337	          0x4889c7	                            mov rdi, rax	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x400633a	      0xe800000000	                          call 0x400633f	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x400633f	          0x4885c0	                           test rax, rax	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4006342	            0x746c	                            je 0x40063b0	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4006344	        0x4883c001	                              add rax, 1	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006348	            0x7466	                            je 0x40063b0	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x400634a	      0xbf00000000	                              mov edi, 0	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x400634f	      0xb905000000	                              mov ecx, 5	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006354	          0x4889c6	                            mov rsi, rax	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006357	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006359	            0x74cd	                            je 0x4006328	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x400635b	      0xbf00000000	                              mov edi, 0	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006360	      0xb907000000	                              mov ecx, 7	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006365	          0x4889c6	                            mov rsi, rax	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006368	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x400636a	            0x7514	                           jne 0x4006380	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x400636c	    0xc70500000000	               mov dword [0x04006376], 1	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4006376	            0xebba	                           jmp 0x4006332	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4006378	     0xf1f84000000	                   nop dword [rax + rax]	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4006380	      0xbf00000000	                              mov edi, 0	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006385	      0xb906000000	                              mov ecx, 6	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x400638a	          0x4889c6	                            mov rsi, rax	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x400638d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x400638f	     0xf850b020000	                           jne 0x40065a0	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006395	    0xc70500000000	               mov dword [0x0400639f], 2	     13200	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x400639f	    0xc78424e80000	               mov dword [rsp + 0xe8], 3	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x40063aa	            0xeb86	                           jmp 0x4006332	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x40063ac	         0xf1f4000	                         nop dword [rax]	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x40063b0	    0x803d00000000	                cmp byte [0x040063b7], 0	     13264	i386-dis.c	FUNCTION_10	IF_25
0x40063b7	     0xf8443020000	                            je 0x4006600	     13264	i386-dis.c	FUNCTION_10	IF_25
0x40063bd	    0x48c705000000	               mov qword [0x040063c8], 0	     13266	i386-dis.c	FUNCTION_10	IF_25
0x40063c8	    0x48c705000000	               mov qword [0x040063d3], 0	     13267	i386-dis.c	FUNCTION_10	IF_25
0x40063d3	    0x48c705000000	               mov qword [0x040063de], 0	     13268	i386-dis.c	FUNCTION_10	IF_25
0x40063de	    0x48c705000000	               mov qword [0x040063e9], 0	     13269	i386-dis.c	FUNCTION_10	IF_25
0x40063e9	    0x48c705000000	               mov qword [0x040063f4], 0	     13270	i386-dis.c	FUNCTION_10	IF_25
0x40063f4	    0x48c705000000	               mov qword [0x040063ff], 0	     13271	i386-dis.c	FUNCTION_10	IF_25
0x40063ff	    0x48c705000000	               mov qword [0x0400640a], 0	     13272	i386-dis.c	FUNCTION_10	IF_25
0x400640a	    0x48c705000000	               mov qword [0x04006415], 0	     13273	i386-dis.c	FUNCTION_10	IF_25
0x4006415	    0x48c705000000	               mov qword [0x04006420], 0	     13274	i386-dis.c	FUNCTION_10	IF_25
0x4006420	    0x48c705000000	               mov qword [0x0400642b], 0	     13275	i386-dis.c	FUNCTION_10	IF_25
0x400642b	    0x48c705000000	               mov qword [0x04006436], 0	     13276	i386-dis.c	FUNCTION_10	IF_25
0x4006436	    0x48c705000000	               mov qword [0x04006441], 0	     13277	i386-dis.c	FUNCTION_10	IF_25
0x4006441	    0x48c705000000	               mov qword [0x0400644c], 0	     13278	i386-dis.c	FUNCTION_10	IF_25
0x400644c	    0x48c705000000	               mov qword [0x04006457], 0	     13279	i386-dis.c	FUNCTION_10	IF_25
0x4006457	    0x48c705000000	               mov qword [0x04006462], 0	     13280	i386-dis.c	FUNCTION_10	IF_25
0x4006462	    0xc60500000000	            mov byte [0x04006469], 0x5b 	     13281	i386-dis.c	FUNCTION_10	IF_25
0x4006469	    0xc60500000000	            mov byte [0x04006470], 0x5d 	     13282	i386-dis.c	FUNCTION_10	IF_25
0x4006470	    0xc60500000000	            mov byte [0x04006477], 0x2b 	     13283	i386-dis.c	FUNCTION_10	IF_25
0x4006477	    0xc60500000000	            mov byte [0x0400647e], 0x2a 	     13284	i386-dis.c	FUNCTION_10	IF_25
0x400647e	          0x83e520	                           and ebp, 0x20	     13312	i386-dis.c	FUNCTION_10	IF_26
0x4006481	      0x488b742408	                mov rsi, qword [rsp + 8]	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4006486	    0x48899c24e000	             mov qword [rsp + 0xe0], rbx	     13319	i386-dis.c	FUNCTION_10	ELSE_17
0x400648e	        0x4883fd01	                              cmp rbp, 1	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4006492	    0xc60500000000	                mov byte [0x04006499], 0	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x4006499	      0xba00000000	                              mov edx, 0	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x400649e	            0x19c0	                            sbb eax, eax	     13313	i386-dis.c	FUNCTION_10	IF_26
0x40064a0	          0x83c008	                              add eax, 8	     13313	i386-dis.c	FUNCTION_10	IF_26
0x40064a3	    0x8986b0000000	             mov dword [rsi + 0xb0], eax	     13313	i386-dis.c	FUNCTION_10	IF_26
0x40064a9	    0x488d8424c000	                   lea rax, [rsp + 0xc0]	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x40064b1	        0x48894668	             mov qword [rsi + 0x68], rax	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x40064b5	    0x488d8424c800	                   lea rax, [rsp + 0xc8]	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x40064bd	    0x48898424c000	             mov qword [rsp + 0xc0], rax	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x40064c5	            0x31c0	                            xor eax, eax	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x40064c7	    0xc78000000000	            mov dword [rax], 0xffffffff 	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40064d1	        0x4883c004	                              add rax, 4	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40064d5	          0xc60200	                       mov byte [rdx], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40064d8	        0x4883c264	                           add rdx, 0x64	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40064dc	        0x4883f814	                           cmp rax, 0x14	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40064e0	            0x75e5	                           jne 0x40064c7	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x40064e2	      0x488b442408	                mov rax, qword [rsp + 8]	     13328	i386-dis.c	FUNCTION_10
0x40064e7	    0x488d9424c000	                   lea rdx, [rsp + 0xc0]	     13330	i386-dis.c	FUNCTION_10
0x40064ef	            0x31f6	                            xor esi, esi	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x40064f1	    0x48891d000000	            mov qword [0x040064f8], rbx 	     13329	i386-dis.c	FUNCTION_10
0x40064f8	        0x488d7a30	                   lea rdi, [rdx + 0x30]	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x40064fc	    0x488905000000	            mov qword [0x04006503], rax 	     13328	i386-dis.c	FUNCTION_10
0x4006503	    0x488d8424c800	                   lea rax, [rsp + 0xc8]	     13330	i386-dis.c	FUNCTION_10
0x400650b	    0x488905000000	            mov qword [0x04006512], rax 	     13330	i386-dis.c	FUNCTION_10
0x4006512	    0x488905000000	            mov qword [0x04006519], rax 	     13331	i386-dis.c	FUNCTION_10
0x4006519	      0xe800000000	                          call 0x400651e	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400651e	            0x85c0	                           test eax, eax	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4006520	     0xf842a020000	                            je 0x4006750	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4006526	    0x488d8424c800	                   lea rax, [rsp + 0xc8]	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400652e	    0x483905000000	            cmp qword [0x04006535], rax 	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4006535	     0xf86630a0000	                           jbe 0x4006f9e	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400653b	    0x440fb6b424c8	          movzx r14d, byte [rsp + 0xc8] 	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x4006544	    0x8bb424e80000	            mov esi, dword [rsp + 0xe8] 	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x400654b	          0x4489f7	                           mov edi, r14d	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x400654e	      0xe8ed9affff	                    call sym.prefix_name	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x4006553	          0x4885c0	                           test rax, rax	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4006556	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400655b	     0xf84af080000	                            je 0x4006e10	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4006561	          0x4889c2	                            mov rdx, rax	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4006564	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4006568	      0xbe00000000	                              mov esi, 0	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400656d	            0x31c0	                            xor eax, eax	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400656f	            0xff13	                        call qword [rbx]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4006571	      0xb801000000	                              mov eax, 1	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4006576	    0x488b9c24b801	           mov rbx, qword [rsp + 0x1b8] 	     13586	i386-dis.c	FUNCTION_10
0x400657e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     13586	i386-dis.c	FUNCTION_10
0x4006587	     0xf853c1e0000	                           jne 0x40083c9	     13586	i386-dis.c	FUNCTION_10
0x400658d	    0x4881c4c80100	                          add rsp, 0x1c8	     13586	i386-dis.c	FUNCTION_10
0x4006594	              0x5b	                                 pop rbx	     13586	i386-dis.c	FUNCTION_10
0x4006595	              0x5d	                                 pop rbp	     13586	i386-dis.c	FUNCTION_10
0x4006596	            0x415c	                                 pop r12	     13586	i386-dis.c	FUNCTION_10
0x4006598	            0x415d	                                 pop r13	     13586	i386-dis.c	FUNCTION_10
0x400659a	            0x415e	                                 pop r14	     13586	i386-dis.c	FUNCTION_10
0x400659c	            0x415f	                                 pop r15	     13586	i386-dis.c	FUNCTION_10
0x400659e	              0xc3	                                     ret	     13586	i386-dis.c	FUNCTION_10
0x400659f	              0x90	                                     nop	     13586	i386-dis.c	FUNCTION_10
0x40065a0	      0xbf00000000	                              mov edi, 0	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x40065a5	      0xb904000000	                              mov ecx, 4	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x40065aa	          0x4889c6	                            mov rsi, rax	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x40065ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x40065af	            0x751f	                           jne 0x40065d0	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x40065b1	    0xc70500000000	               mov dword [0x040065bb], 1	     13205	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x40065bb	    0xc78424e80000	               mov dword [rsp + 0xe8], 3	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x40065c6	      0xe967fdffff	                           jmp 0x4006332	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x40065cb	       0xf1f440000	                   nop dword [rax + rax]	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x40065d0	      0xbf00000000	                              mov edi, 0	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x40065d5	      0xb905000000	                              mov ecx, 5	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x40065da	          0x4889c6	                            mov rsi, rax	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x40065dd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x40065df	     0xf8523010000	                           jne 0x4006708	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x40065e5	    0xc70500000000	               mov dword [0x040065ef], 0	     13210	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x40065ef	    0xc78424e80000	               mov dword [rsp + 0xe8], 0	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x40065fa	      0xe933fdffff	                           jmp 0x4006332	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x40065ff	              0x90	                                     nop	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x4006600	    0x48c705000000	               mov qword [0x0400660b], 0	     13288	i386-dis.c	FUNCTION_10	ELSE_16
0x400660b	    0x48c705000000	               mov qword [0x04006616], 0	     13289	i386-dis.c	FUNCTION_10	ELSE_16
0x4006616	    0x48c705000000	               mov qword [0x04006621], 0	     13290	i386-dis.c	FUNCTION_10	ELSE_16
0x4006621	    0x48c705000000	               mov qword [0x0400662c], 0	     13291	i386-dis.c	FUNCTION_10	ELSE_16
0x400662c	    0x48c705000000	               mov qword [0x04006637], 0	     13292	i386-dis.c	FUNCTION_10	ELSE_16
0x4006637	    0x48c705000000	               mov qword [0x04006642], 0	     13293	i386-dis.c	FUNCTION_10	ELSE_16
0x4006642	    0x48c705000000	               mov qword [0x0400664d], 0	     13294	i386-dis.c	FUNCTION_10	ELSE_16
0x400664d	    0x48c705000000	               mov qword [0x04006658], 0	     13295	i386-dis.c	FUNCTION_10	ELSE_16
0x4006658	    0x48c705000000	               mov qword [0x04006663], 0	     13296	i386-dis.c	FUNCTION_10	ELSE_16
0x4006663	    0x48c705000000	               mov qword [0x0400666e], 0	     13297	i386-dis.c	FUNCTION_10	ELSE_16
0x400666e	    0x48c705000000	               mov qword [0x04006679], 0	     13298	i386-dis.c	FUNCTION_10	ELSE_16
0x4006679	    0x48c705000000	               mov qword [0x04006684], 0	     13299	i386-dis.c	FUNCTION_10	ELSE_16
0x4006684	    0x48c705000000	               mov qword [0x0400668f], 0	     13300	i386-dis.c	FUNCTION_10	ELSE_16
0x400668f	    0x48c705000000	               mov qword [0x0400669a], 0	     13301	i386-dis.c	FUNCTION_10	ELSE_16
0x400669a	    0x48c705000000	               mov qword [0x040066a5], 0	     13302	i386-dis.c	FUNCTION_10	ELSE_16
0x40066a5	    0xc60500000000	            mov byte [0x040066ac], 0x28 	     13303	i386-dis.c	FUNCTION_10	ELSE_16
0x40066ac	    0xc60500000000	            mov byte [0x040066b3], 0x29 	     13304	i386-dis.c	FUNCTION_10	ELSE_16
0x40066b3	    0xc60500000000	            mov byte [0x040066ba], 0x2c 	     13305	i386-dis.c	FUNCTION_10	ELSE_16
0x40066ba	    0xc60500000000	            mov byte [0x040066c1], 0x2c 	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x40066c1	      0xe9b8fdffff	                           jmp 0x400647e	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x40066c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x40066d0	        0x4883fd02	                              cmp rbp, 2	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x40066d4	     0xf84f6050000	                            je 0x4006cd0	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x40066da	    0x803d00000000	            cmp byte [0x040066e1], 0xff 	     13189	i386-dis.c	FUNCTION_10	IF_3
0x40066e1	    0xc70500000000	               mov dword [0x040066eb], 2	     13187	i386-dis.c	FUNCTION_10	ELSE_2
0x40066eb	     0xf851efcffff	                           jne 0x400630f	     13189	i386-dis.c	FUNCTION_10	IF_3
0x40066f1	    0x40882d000000	              mov byte [0x040066f8], bpl	     13190	i386-dis.c	FUNCTION_10	IF_3
0x40066f8	    0x802500000000	                and byte [0x040066ff], 1	     13190	i386-dis.c	FUNCTION_10	IF_3
0x40066ff	      0xe90bfcffff	                           jmp 0x400630f	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006704	         0xf1f4000	                         nop dword [rax]	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006708	      0xbf00000000	                              mov edi, 0	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x400670d	      0xb905000000	                              mov ecx, 5	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006712	          0x4889c6	                            mov rsi, rax	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006715	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006717	     0xf8573050000	                           jne 0x4006c90	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x400671d	        0x488d7005	                      lea rsi, [rax + 5]	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006721	    0xc60500000000	                mov byte [0x04006728], 1	     13215	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9
0x4006728	      0xbf00000000	                              mov edi, 0	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x400672d	      0xb909000000	                              mov ecx, 9	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006732	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006734	     0xf85f8fbffff	                           jne 0x4006332	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x400673a	    0xc60500000000	                mov byte [0x04006741], 1	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x4006741	      0xe9ecfbffff	                           jmp 0x4006332	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x4006746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x4006750	    0x8bac24e80000	            mov ebp, dword [rsp + 0xe8] 	     13359	i386-dis.c	FUNCTION_10
0x4006757	      0xbb00000000	                              mov ebx, 0	     13359	i386-dis.c	FUNCTION_10
0x400675c	    0x48c705000000	               mov qword [0x04006767], 0	     13358	i386-dis.c	FUNCTION_10
0x4006767	    0xc70500000000	               mov dword [0x04006771], 0	     12419	i386-dis.c	FUNCTION_2
0x4006771	    0xc70500000000	               mov dword [0x0400677b], 0	     12420	i386-dis.c	FUNCTION_2
0x400677b	    0x41bf00000000	                             mov r15d, 0	     12420	i386-dis.c	FUNCTION_2
0x4006781	    0xc70500000000	               mov dword [0x0400678b], 0	     12421	i386-dis.c	FUNCTION_2
0x400678b	    0xc70500000000	               mov dword [0x04006795], 0	     12422	i386-dis.c	FUNCTION_2
0x4006795	          0x4889d8	                            mov rax, rbx	     12432	i386-dis.c	FUNCTION_2
0x4006798	    0xc70500000000	               mov dword [0x040067a2], 0	     12423	i386-dis.c	FUNCTION_2
0x40067a2	    0xc70500000000	     mov dword [0x040067ac], 0xffffffff 	     12424	i386-dis.c	FUNCTION_2
0x40067ac	    0xc70500000000	     mov dword [0x040067b6], 0xffffffff 	     12425	i386-dis.c	FUNCTION_2
0x40067b6	    0xc70500000000	     mov dword [0x040067c0], 0xffffffff 	     12426	i386-dis.c	FUNCTION_2
0x40067c0	    0xc70500000000	     mov dword [0x040067ca], 0xffffffff 	     12427	i386-dis.c	FUNCTION_2
0x40067ca	    0xc70500000000	     mov dword [0x040067d4], 0xffffffff 	     12428	i386-dis.c	FUNCTION_2
0x40067d4	    0xc70500000000	     mov dword [0x040067de], 0xffffffff 	     12429	i386-dis.c	FUNCTION_2
0x40067de	    0xc70500000000	     mov dword [0x040067e8], 0xffffffff 	     12430	i386-dis.c	FUNCTION_2
0x40067e8	    0xc70500000000	     mov dword [0x040067f2], 0xffffffff 	     12431	i386-dis.c	FUNCTION_2
0x40067f2	    0xc70500000000	               mov dword [0x040067fc], 0	     12432	i386-dis.c	FUNCTION_2
0x40067fc	         0xf1f4000	                         nop dword [rax]	     12432	i386-dis.c	FUNCTION_2
0x4006800	    0xc70000000000	                      mov dword [rax], 0	     12434	i386-dis.c	FUNCTION_2	FOR_1
0x4006806	        0x4883c004	                              add rax, 4	     12434	i386-dis.c	FUNCTION_2	FOR_1
0x400680a	          0x4c39f8	                            cmp rax, r15	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x400680d	            0x75f1	                           jne 0x4006800	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x400680f	    0x488b15000000	            mov rdx, qword [0x04006816] 	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x4006816	    0x41bd0e000000	                           mov r13d, 0xe	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x400681c	          0x4531e4	                          xor r12d, r12d	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x400681f	              0x90	                                     nop	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x4006820	    0x488b3d000000	            mov rdi, qword [0x04006827] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4006827	        0x488d7201	                      lea rsi, [rdx + 1]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400682b	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400682f	          0x483b30	                    cmp rsi, qword [rax]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4006832	     0xf8718010000	                            ja 0x4006950	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4006838	           0xfb602	                   movzx eax, byte [rdx]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400683b	            0x3c64	                            cmp al, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400683d	     0xf8424010000	                            je 0x4006967	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006843	            0x765b	                           jbe 0x40068a0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006845	            0x3c9b	                            cmp al, 0x9b	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006847	     0xf8473050000	                            je 0x4006dc0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400684d	     0xf873d010000	                            ja 0x4006990	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006853	            0x3c66	                            cmp al, 0x66	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006855	     0xf8445050000	                            je 0x4006da0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400685b	     0xf828f040000	                            jb 0x4006cf0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006861	            0x3c67	                            cmp al, 0x67	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006863	     0xf853f010000	                           jne 0x40069a8	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006869	    0x810d00000000	            or dword [0x04006873], 0x400	     12514	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006873	    0x448925000000	           mov dword [0x0400687a], r12d 	     12515	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400687a	    0x660f1f440000	                    nop word [rax + rax]	     12515	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006880	    0x8b0d00000000	            mov ecx, dword [0x04006886] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4006886	            0x85c9	                           test ecx, ecx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4006888	            0x7556	                           jne 0x40068e0	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400688a	    0x488b15000000	            mov rdx, qword [0x04006891] 	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4006891	            0x31f6	                            xor esi, esi	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4006893	           0xfb602	                   movzx eax, byte [rdx]	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4006896	      0xe9c5030000	                           jmp 0x4006c60	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400689b	       0xf1f440000	                   nop dword [rax + rax]	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x40068a0	            0x3c36	                            cmp al, 0x36	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40068a2	     0xf84c0040000	                            je 0x4006d68	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40068a8	     0xf876a030000	                            ja 0x4006c18	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40068ae	            0x3c26	                            cmp al, 0x26	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40068b0	     0xf845a040000	                            je 0x4006d10	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40068b6	            0x3c2e	                            cmp al, 0x2e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40068b8	     0xf85ea000000	                           jne 0x40069a8	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40068be	    0x8b0d00000000	            mov ecx, dword [0x040068c4] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40068c4	    0x830d00000000	                or dword [0x040068cb], 8	     12480	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40068cb	    0x448925000000	           mov dword [0x040068d2], r12d 	     12481	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40068d2	    0xc70500000000	               mov dword [0x040068dc], 8	     12482	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40068dc	            0x85c9	                           test ecx, ecx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40068de	            0x74aa	                            je 0x400688a	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40068e0	    0x890d00000000	            mov dword [0x040068e6], ecx 	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40068e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40068f0	            0x31db	                            xor ebx, ebx	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40068f2	    0x41bc00000000	                             mov r12d, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40068f8	     0xf1f84000000	                   nop dword [rax + rax]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006900	    0x8b3c9d000000	                  mov edi, dword [rbx*4]	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x4006907	            0x85ff	                           test edi, edi	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x4006909	     0xf8468050000	                            je 0x4006e77	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x400690f	      0x4c8b742408	                mov r14, qword [rsp + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006914	            0x89ee	                            mov esi, ebp	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006916	      0xe82597ffff	                    call sym.prefix_name	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400691b	          0x4885db	                           test rbx, rbx	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400691e	      0xba00000000	                              mov edx, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006923	          0x4889c1	                            mov rcx, rax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006926	        0x490f44d4	                          cmove rdx, r12	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400692a	        0x4883c301	                              add rbx, 1	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400692e	            0x31c0	                            xor eax, eax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006930	          0x4d8b3e	                    mov r15, qword [r14]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006933	        0x498b7e08	                mov rdi, qword [r14 + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006937	      0xbe00000000	                              mov esi, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400693c	          0x41ffd7	                                call r15	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400693f	        0x4883fb0e	                            cmp rbx, 0xe	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006943	            0x75bb	                           jne 0x4006900	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006945	      0xb80e000000	                            mov eax, 0xe	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400694a	      0xe927fcffff	                           jmp 0x4006576	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400694f	              0x90	                                     nop	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4006950	      0xe87bb2ffff	                     call sym.fetch_data	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4006955	    0x488b15000000	            mov rdx, qword [0x0400695c] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400695c	           0xfb602	                   movzx eax, byte [rdx]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400695f	            0x3c64	                            cmp al, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006961	     0xf85dcfeffff	                           jne 0x4006843	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006967	    0x810d00000000	             or dword [0x04006971], 0x80	     12500	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006971	    0x448925000000	           mov dword [0x04006978], r12d 	     12501	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006978	    0xc70500000000	           mov dword [0x04006982], 0x80 	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006982	      0xe9f9feffff	                           jmp 0x4006880	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006987	    0x660f1f840000	                    nop word [rax + rax]	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006990	            0x3cf2	                            cmp al, 0xf2	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006992	     0xf84f0030000	                            je 0x4006d88	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006998	            0x3cf3	                            cmp al, 0xf3	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400699a	     0xf84b0030000	                            je 0x4006d50	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40069a0	            0x3cf0	                            cmp al, 0xf0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40069a2	     0xf844e040000	                            je 0x4006df6	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40069a8	    0x448b05000000	            mov r8d, dword [0x040069af] 	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40069af	          0x4585c0	                           test r8d, r8d	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x40069b2	     0xf8538ffffff	                           jne 0x40068f0	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x40069b8	      0x488b542408	                mov rdx, qword [rsp + 8]	     13375	i386-dis.c	FUNCTION_10
0x40069bd	    0x488b05000000	            mov rax, qword [0x040069c4] 	     13373	i386-dis.c	FUNCTION_10
0x40069c4	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     13375	i386-dis.c	FUNCTION_10
0x40069c8	        0x488d7001	                      lea rsi, [rax + 1]	     13375	i386-dis.c	FUNCTION_10
0x40069cc	    0x488905000000	            mov qword [0x040069d3], rax 	     13373	i386-dis.c	FUNCTION_10
0x40069d3	          0x483b32	                    cmp rsi, qword [rdx]	     13375	i386-dis.c	FUNCTION_10
0x40069d6	     0xf8789070000	                            ja 0x4007165	     13375	i386-dis.c	FUNCTION_10
0x40069dc	           0xfb610	                   movzx edx, byte [rax]	     13376	i386-dis.c	FUNCTION_10
0x40069df	          0x80fa62	                            cmp dl, 0x62	     13376	i386-dis.c	FUNCTION_10
0x40069e2	        0x400f94c6	                                sete sil	     13376	i386-dis.c	FUNCTION_10
0x40069e6	          0x80fac8	                            cmp dl, 0xc8	     13376	i386-dis.c	FUNCTION_10
0x40069e9	           0xf94c1	                                 sete cl	     13376	i386-dis.c	FUNCTION_10
0x40069ec	             0x9f1	                             or ecx, esi	     13376	i386-dis.c	FUNCTION_10
0x40069ee	           0xfb6c9	                           movzx ecx, cl	     13376	i386-dis.c	FUNCTION_10
0x40069f1	    0x890d00000000	            mov dword [0x040069f7], ecx 	     13376	i386-dis.c	FUNCTION_10
0x40069f7	    0x8b0d00000000	            mov ecx, dword [0x040069fd] 	     13378	i386-dis.c	FUNCTION_10	IF_31
0x40069fd	          0xf6c508	                              test ch, 8	     13378	i386-dis.c	FUNCTION_10	IF_31
0x4006a00	     0xf8512050000	                           jne 0x4006f18	     13378	i386-dis.c	FUNCTION_10	IF_31
0x4006a06	          0x80fa0f	                             cmp dl, 0xf	     13390	i386-dis.c	FUNCTION_10	IF_32
0x4006a09	     0xf84ca100000	                            je 0x4007ad9	     13390	i386-dis.c	FUNCTION_10	IF_32
0x4006a0f	        0x4c8d2452	                  lea r12, [rdx + rdx*2]	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4006a13	     0xfb692000000	                   movzx edx, byte [rdx]	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x4006a1a	        0x4883c001	                              add rax, 1	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x4006a1e	    0x488905000000	            mov qword [0x04006a25], rax 	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x4006a25	        0x49c1e405	                              shl r12, 5	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4006a29	    0x4981c4000000	                              add r12, 0	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4006a30	    0x881500000000	               mov byte [0x04006a36], dl	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x4006a36	          0x4189ed	                           mov r13d, ebp	     13413	i386-dis.c	FUNCTION_10	IF_33
0x4006a39	    0x488905000000	            mov qword [0x04006a40], rax 	     13417	i386-dis.c	FUNCTION_10
0x4006a40	        0x4183f502	                             xor r13d, 2	     13413	i386-dis.c	FUNCTION_10	IF_33
0x4006a44	          0xf6c504	                              test ch, 4	     13413	i386-dis.c	FUNCTION_10	IF_33
0x4006a47	        0x440f44ed	                         cmove r13d, ebp	     13413	i386-dis.c	FUNCTION_10	IF_33
0x4006a4b	          0x4489ee	                           mov esi, r13d	     13415	i386-dis.c	FUNCTION_10	IF_34
0x4006a4e	          0x83f601	                              xor esi, 1	     13415	i386-dis.c	FUNCTION_10	IF_34
0x4006a51	          0x80e502	                               and ch, 2	     13415	i386-dis.c	FUNCTION_10	IF_34
0x4006a54	        0x440f45ee	                        cmovne r13d, esi	     13415	i386-dis.c	FUNCTION_10	IF_34
0x4006a58	            0x84d2	                             test dl, dl	     13418	i386-dis.c	FUNCTION_10	IF_35
0x4006a5a	            0x743e	                            je 0x4006a9a	     13418	i386-dis.c	FUNCTION_10	IF_35
0x4006a5c	      0x488b542408	                mov rdx, qword [rsp + 8]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4006a61	        0x488d7001	                      lea rsi, [rax + 1]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4006a65	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4006a69	          0x483b32	                    cmp rsi, qword [rdx]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4006a6c	     0xf87de100000	                            ja 0x4007b50	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4006a72	           0xfb600	                   movzx eax, byte [rax]	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4006a75	            0x89c2	                            mov edx, eax	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4006a77	          0xc0ea06	                               shr dl, 6	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4006a7a	           0xfb6d2	                           movzx edx, dl	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4006a7d	    0x891500000000	            mov dword [0x04006a83], edx 	     13421	i386-dis.c	FUNCTION_10	IF_35
0x4006a83	            0x89c2	                            mov edx, eax	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4006a85	          0x83e007	                              and eax, 7	     13423	i386-dis.c	FUNCTION_10	IF_35
0x4006a88	          0xc0ea03	                               shr dl, 3	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4006a8b	    0x890500000000	            mov dword [0x04006a91], eax 	     13423	i386-dis.c	FUNCTION_10	IF_35
0x4006a91	          0x83e207	                              and edx, 7	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4006a94	    0x891500000000	            mov dword [0x04006a9a], edx 	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4006a9a	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_104	CALL_6
0x4006a9f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_104	CALL_6
0x4006aa1	      0xb905000000	                              mov ecx, 5	        90	string3.h	FUNCTION_104	CALL_6
0x4006aa6	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_104	CALL_6
0x4006aa9	    0xc60500000000	                mov byte [0x04006ab0], 0	     13426	i386-dis.c	FUNCTION_10
0x4006ab0	    0xc60500000000	                mov byte [0x04006ab7], 0	     13427	i386-dis.c	FUNCTION_10
0x4006ab7	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_104	CALL_6
0x4006aba	    0xc60500000000	                mov byte [0x04006ac1], 0	     13428	i386-dis.c	FUNCTION_10
0x4006ac1	    0xc70700000000	                      mov dword [rdi], 0	        90	string3.h	FUNCTION_104	CALL_6
0x4006ac7	        0x498b3c24	                    mov rdi, qword [r12]	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4006acb	          0x4885ff	                           test rdi, rdi	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4006ace	     0xf84d3060000	                            je 0x40071a7	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4006ad4	          0x4489ee	                           mov esi, r13d	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4006ad7	      0xe82497ffff	                          call sym.putop	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4006adc	            0x85c0	                           test eax, eax	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4006ade	     0xf848f130000	                            je 0x4007e73	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4006ae4	    0x8b3d00000000	            mov edi, dword [0x04006aea] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4006aea	            0x85ff	                           test edi, edi	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4006aec	            0x7512	                           jne 0x4006b00	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4006aee	    0x8b0500000000	            mov eax, dword [0x04006af4] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4006af4	    0x390500000000	            cmp dword [0x04006afa], eax 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4006afa	     0xf84c7140000	                            je 0x4007fc7	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4006b00	    0x8b0500000000	            mov eax, dword [0x04006b06] 	     13471	i386-dis.c	FUNCTION_10	IF_43
0x4006b06	      0xa9f8010000	                         test eax, 0x1f8	     13471	i386-dis.c	FUNCTION_10	IF_43
0x4006b0b	            0x7420	                            je 0x4006b2d	     13471	i386-dis.c	FUNCTION_10	IF_43
0x4006b0d	    0x8b1500000000	            mov edx, dword [0x04006b13] 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x4006b13	    0x851500000000	           test dword [0x04006b19], edx 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x4006b19	            0x7412	                            je 0x4006b2d	     13473	i386-dis.c	FUNCTION_10	IF_43
0x4006b1b	    0x486315000000	         movsxd rdx, dword [0x04006b22] 	     13474	i386-dis.c	FUNCTION_10	IF_43
0x4006b22	    0xc70495000000	                    mov dword [rdx*4], 0	     13474	i386-dis.c	FUNCTION_10	IF_43
0x4006b2d	          0xf6c404	                              test ah, 4	     13477	i386-dis.c	FUNCTION_10	IF_44
0x4006b30	            0x741b	                            je 0x4006b4d	     13477	i386-dis.c	FUNCTION_10	IF_44
0x4006b32	    0xf60500000000	               test byte [0x04006b39], 4	     13478	i386-dis.c	FUNCTION_10	IF_44
0x4006b39	            0x7412	                            je 0x4006b4d	     13478	i386-dis.c	FUNCTION_10	IF_44
0x4006b3b	    0x486315000000	         movsxd rdx, dword [0x04006b42] 	     13479	i386-dis.c	FUNCTION_10	IF_44
0x4006b42	    0xc70495000000	                    mov dword [rdx*4], 0	     13479	i386-dis.c	FUNCTION_10	IF_44
0x4006b4d	          0xf6c402	                              test ah, 2	     13482	i386-dis.c	FUNCTION_10	IF_45
0x4006b50	            0x741b	                            je 0x4006b6d	     13482	i386-dis.c	FUNCTION_10	IF_45
0x4006b52	    0xf60500000000	               test byte [0x04006b59], 2	     13483	i386-dis.c	FUNCTION_10	IF_45
0x4006b59	            0x7412	                            je 0x4006b6d	     13483	i386-dis.c	FUNCTION_10	IF_45
0x4006b5b	    0x486305000000	         movsxd rax, dword [0x04006b62] 	     13484	i386-dis.c	FUNCTION_10	IF_45
0x4006b62	    0xc70485000000	                    mov dword [rax*4], 0	     13484	i386-dis.c	FUNCTION_10	IF_45
0x4006b6d	          0x4531ed	                          xor r13d, r13d	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4006b70	            0x8b3b	                    mov edi, dword [rbx]	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006b72	            0x85ff	                           test edi, edi	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006b74	            0x7435	                            je 0x4006bab	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006b76	            0x89ee	                            mov esi, ebp	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4006b78	      0xe8c394ffff	                    call sym.prefix_name	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4006b7d	          0x4885c0	                           test rax, rax	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x4006b80	          0x4989c6	                            mov r14, rax	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4006b83	     0xf841f040000	                            je 0x4006fa8	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x4006b89	          0x4889c7	                            mov rdi, rax	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4006b8c	      0xe800000000	                          call 0x4006b91	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4006b91	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006b96	      0x458d6c0501	               lea r13d, [r13 + rax + 1]	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4006b9b	          0x4c89f2	                            mov rdx, r14	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006b9e	      0xbe00000000	                              mov esi, 0	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006ba3	            0x31c0	                            xor eax, eax	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006ba5	        0x488b7908	                mov rdi, qword [rcx + 8]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006ba9	            0xff11	                        call qword [rcx]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006bab	        0x4883c304	                              add rbx, 4	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4006baf	          0x4c39fb	                            cmp rbx, r15	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4006bb2	            0x75bc	                           jne 0x4006b70	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4006bb4	    0x41817c245803	          cmp dword [r12 + 0x58], 0x203 	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4006bbd	     0xf8503040000	                           jne 0x4006fc6	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4006bc3	    0x4981fc000000	                              cmp r12, 0	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4006bca	     0xf84f6030000	                            je 0x4006fc6	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4006bd0	    0x8b0500000000	            mov eax, dword [0x04006bd6] 	     13507	i386-dis.c	FUNCTION_10	IF_48
0x4006bd6	            0xa803	                              test al, 3	     13506	i386-dis.c	FUNCTION_10	IF_48
0x4006bd8	     0xf84cf030000	                            je 0x4006fad	     13506	i386-dis.c	FUNCTION_10	IF_48
0x4006bde	    0xf60500000000	               test byte [0x04006be5], 3	     13508	i386-dis.c	FUNCTION_10	IF_48
0x4006be5	     0xf85c2030000	                           jne 0x4006fad	     13508	i386-dis.c	FUNCTION_10	IF_48
0x4006beb	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4006bf0	      0xbe00000000	                              mov esi, 0	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4006bf5	            0x31c0	                            xor eax, eax	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4006bf7	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4006bfb	            0xff13	                        call qword [rbx]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4006bfd	    0x8b1d00000000	            mov ebx, dword [0x04006c03] 	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4006c03	    0x488d8424c800	                   lea rax, [rsp + 0xc8]	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4006c0b	            0x29c3	                            sub ebx, eax	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4006c0d	            0x89d8	                            mov eax, ebx	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4006c0f	      0xe962f9ffff	                           jmp 0x4006576	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4006c14	         0xf1f4000	                         nop dword [rax]	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4006c18	            0x3c3e	                            cmp al, 0x3e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006c1a	     0xf8410010000	                            je 0x4006d30	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006c20	     0xf8282fdffff	                            jb 0x40069a8	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006c26	          0x8d48c0	                   lea ecx, [rax - 0x40]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006c29	          0x80f90f	                             cmp cl, 0xf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006c2c	     0xf8776fdffff	                            ja 0x40069a8	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006c32	    0x833d00000000	               cmp dword [0x04006c39], 2	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x4006c39	     0xf8569fdffff	                           jne 0x40069a8	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x4006c3f	    0x8b0d00000000	            mov ecx, dword [0x04006c45] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4006c45	           0xfb6f0	                           movzx esi, al	     12462	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x4006c48	    0x448925000000	           mov dword [0x04006c4f], r12d 	     12465	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006c4f	            0x85c9	                           test ecx, ecx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4006c51	     0xf8589fcffff	                           jne 0x40068e0	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4006c57	    0x660f1f840000	                    nop word [rax + rax]	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4006c60	          0x4963cc	                        movsxd rcx, r12d	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4006c63	        0x4183c401	                             add r12d, 1	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4006c67	    0x89048d000000	                  mov dword [rcx*4], eax	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4006c6e	        0x4883c201	                              add rdx, 1	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x4006c72	        0x4183ed01	                             sub r13d, 1	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x4006c76	    0x893500000000	            mov dword [0x04006c7c], esi 	     12544	i386-dis.c	FUNCTION_2	WHILE_1
0x4006c7c	    0x488915000000	            mov qword [0x04006c83], rdx 	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x4006c83	     0xf8597fbffff	                           jne 0x4006820	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x4006c89	      0xe962fcffff	                           jmp 0x40068f0	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x4006c8e	            0x6690	                                     nop	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x4006c90	      0xbf00000000	                              mov edi, 0	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c95	      0xb903000000	                              mov ecx, 3	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c9a	          0x4889c6	                            mov rsi, rax	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c9d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c9f	     0xf85d9010000	                           jne 0x4006e7e	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006ca5	        0x488d7003	                      lea rsi, [rax + 3]	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006ca9	    0xc60500000000	                mov byte [0x04006cb0], 0	     13221	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11
0x4006cb0	      0xbf00000000	                              mov edi, 0	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006cb5	      0xb909000000	                              mov ecx, 9	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006cba	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006cbc	     0xf8570f6ffff	                           jne 0x4006332	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006cc2	    0xc60500000000	                mov byte [0x04006cc9], 0	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x4006cc9	      0xe964f6ffff	                           jmp 0x4006332	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x4006cce	            0x6690	                                     nop	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x4006cd0	    0xc70500000000	               mov dword [0x04006cda], 0	     13183	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006cda	    0xc78424e80000	               mov dword [rsp + 0xe8], 0	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006ce5	      0xe918f6ffff	                           jmp 0x4006302	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006cea	    0x660f1f440000	                    nop word [rax + rax]	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006cf0	    0x810d00000000	            or dword [0x04006cfa], 0x100	     12505	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006cfa	    0x448925000000	           mov dword [0x04006d01], r12d 	     12506	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d01	    0xc70500000000	          mov dword [0x04006d0b], 0x100 	     12507	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d0b	      0xe970fbffff	                           jmp 0x4006880	     12507	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d10	    0x830d00000000	            or dword [0x04006d17], 0x40 	     12495	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d17	    0x448925000000	           mov dword [0x04006d1e], r12d 	     12496	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d1e	    0xc70500000000	           mov dword [0x04006d28], 0x40 	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d28	      0xe953fbffff	                           jmp 0x4006880	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d2d	           0xf1f00	                         nop dword [rax]	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d30	    0x830d00000000	             or dword [0x04006d37], 0x20	     12490	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d37	    0x448925000000	           mov dword [0x04006d3e], r12d 	     12491	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d3e	    0xc70500000000	           mov dword [0x04006d48], 0x20 	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d48	      0xe933fbffff	                           jmp 0x4006880	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d4d	           0xf1f00	                         nop dword [rax]	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d50	    0x830d00000000	                or dword [0x04006d57], 1	     12468	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d57	    0x448925000000	           mov dword [0x04006d5e], r12d 	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d5e	      0xe91dfbffff	                           jmp 0x4006880	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d63	       0xf1f440000	                   nop dword [rax + rax]	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d68	    0x830d00000000	             or dword [0x04006d6f], 0x10	     12485	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d6f	    0x448925000000	           mov dword [0x04006d76], r12d 	     12486	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d76	    0xc70500000000	           mov dword [0x04006d80], 0x10 	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d80	      0xe9fbfaffff	                           jmp 0x4006880	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d85	           0xf1f00	                         nop dword [rax]	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d88	    0x830d00000000	                or dword [0x04006d8f], 2	     12472	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d8f	    0x448925000000	           mov dword [0x04006d96], r12d 	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d96	      0xe9e5faffff	                           jmp 0x4006880	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006d9b	       0xf1f440000	                   nop dword [rax + rax]	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006da0	    0x810d00000000	            or dword [0x04006daa], 0x200	     12510	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006daa	    0x448925000000	           mov dword [0x04006db1], r12d 	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006db1	      0xe9cafaffff	                           jmp 0x4006880	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006db6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006dc0	    0x8b0500000000	            mov eax, dword [0x04006dc6] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4006dc6	    0x448925000000	           mov dword [0x04006dcd], r12d 	     12521	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006dcd	            0x85c0	                           test eax, eax	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4006dcf	     0xf8566140000	                           jne 0x400823b	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4006dd5	    0x448b05000000	            mov r8d, dword [0x04006ddc] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4006ddc	          0x4585c0	                           test r8d, r8d	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4006ddf	     0xf857d140000	                           jne 0x4008262	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4006de5	    0xc70500000000	          mov dword [0x04006def], 0x800 	     12531	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4006def	            0x31f6	                            xor esi, esi	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x4006df1	      0xe978feffff	                           jmp 0x4006c6e	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x4006df6	    0x830d00000000	                or dword [0x04006dfd], 4	     12476	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006dfd	    0x448925000000	           mov dword [0x04006e04], r12d 	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006e04	      0xe977faffff	                           jmp 0x4006880	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006e09	     0xf1f80000000	                         nop dword [rax]	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4006e10	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4006e14	          0x4489f2	                           mov edx, r14d	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4006e17	      0xbe00000000	                              mov esi, 0	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4006e1c	            0x31c0	                            xor eax, eax	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4006e1e	            0xff13	                        call qword [rbx]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4006e20	      0xe94cf7ffff	                           jmp 0x4006571	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4006e25	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e2a	      0xbe00000000	                              mov esi, 0	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e2f	            0x31c0	                            xor eax, eax	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e31	        0x498b7f08	                mov rdi, qword [r15 + 8]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e35	          0x41ff17	                        call qword [r15]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e38	    0x4863049d0000	               movsxd rax, dword [rbx*4]	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e40	    0x488b3d000000	            mov rdi, qword [0x04006e47] 	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e47	          0x4c89fe	                            mov rsi, r15	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e4a	    0x482b3d000000	             sub rdi, qword [0x04006e51]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e51	    0x48033d000000	             add rdi, qword [0x04006e58]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e58	    0x48033cc50000	                  add rdi, qword [rax*8]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e60	    0x41ff97800000	                 call qword [r15 + 0x80]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4006e67	    0x8b1d00000000	            mov ebx, dword [0x04006e6d] 	     13585	i386-dis.c	FUNCTION_10
0x4006e6d	    0x488d8424c800	                   lea rax, [rsp + 0xc8]	     13585	i386-dis.c	FUNCTION_10
0x4006e75	            0x29c3	                            sub ebx, eax	     13585	i386-dis.c	FUNCTION_10
0x4006e77	            0x89d8	                            mov eax, ebx	     13585	i386-dis.c	FUNCTION_10
0x4006e79	      0xe9f8f6ffff	                           jmp 0x4006576	     13585	i386-dis.c	FUNCTION_10
0x4006e7e	      0xbf00000000	                              mov edi, 0	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006e83	      0xb904000000	                              mov ecx, 4	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006e88	          0x4889c6	                            mov rsi, rax	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006e8b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006e8d	            0x7541	                           jne 0x4006ed0	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006e8f	    0x833d00000000	               cmp dword [0x04006e96], 2	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x4006e96	         0xfb65004	               movzx edx, byte [rax + 4]	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006e9a	     0xf84d00c0000	                            je 0x4007b70	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x4006ea0	          0x80fa31	                            cmp dl, 0x31	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006ea3	     0xf84780e0000	                            je 0x4007d21	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006ea9	          0x80fa33	                            cmp dl, 0x33	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006eac	     0xf8580f4ffff	                           jne 0x4006332	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006eb2	        0x80780532	                cmp byte [rax + 5], 0x32	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006eb6	     0xf8576f4ffff	                           jne 0x4006332	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006ebc	    0x838c24e80000	                or dword [rsp + 0xe8], 2	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006ec4	      0xe969f4ffff	                           jmp 0x4006332	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006ec9	     0xf1f80000000	                         nop dword [rax]	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006ed0	      0xbf00000000	                              mov edi, 0	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006ed5	      0xb904000000	                              mov ecx, 4	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006eda	          0x4889c6	                            mov rsi, rax	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006edd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006edf	     0xf85a0020000	                           jne 0x4007185	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006ee5	         0xfb65004	               movzx edx, byte [rax + 4]	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006ee9	          0x80fa31	                            cmp dl, 0x31	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006eec	     0xf84f90f0000	                            je 0x4007eeb	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006ef2	          0x80fa33	                            cmp dl, 0x33	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006ef5	     0xf8537f4ffff	                           jne 0x4006332	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006efb	        0x80780532	                cmp byte [rax + 5], 0x32	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006eff	     0xf852df4ffff	                           jne 0x4006332	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006f05	    0x838c24e80000	                or dword [rsp + 0xe8], 1	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006f0d	      0xe920f4ffff	                           jmp 0x4006332	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006f12	    0x660f1f440000	                    nop word [rax + rax]	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006f18	          0x8d7228	                   lea esi, [rdx + 0x28]	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4006f1b	        0x4080fe07	                              cmp sil, 7	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4006f1f	     0xf86eafaffff	                           jbe 0x4006a0f	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4006f25	    0x8b0d00000000	            mov ecx, dword [0x04006f2b] 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f2b	            0x85c9	                           test ecx, ecx	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f2d	     0xf8ef8130000	                           jle 0x400832b	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f33	    0x8b3d00000000	            mov edi, dword [0x04006f39] 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f39	            0x85ff	                           test edi, edi	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f3b	     0xf84ea130000	                            je 0x400832b	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f41	    0x41bc00000000	                             mov r12d, 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f47	            0x31db	                            xor ebx, ebx	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f49	            0xeb12	                           jmp 0x4006f5d	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f4b	       0xf1f440000	                   nop dword [rax + rax]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f50	        0x4983c404	                              add r12, 4	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f54	      0x418b7c24fc	                mov edi, dword [r12 - 4]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f59	            0x85ff	                           test edi, edi	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f5b	            0x7427	                            je 0x4006f84	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f5d	            0x89ee	                            mov esi, ebp	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f5f	          0x83c301	                              add ebx, 1	     13383	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f62	      0xe8d990ffff	                    call sym.prefix_name	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f67	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f6c	          0x4889c2	                            mov rdx, rax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f6f	      0xbe00000000	                              mov esi, 0	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f74	            0x31c0	                            xor eax, eax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f76	        0x488b7908	                mov rdi, qword [rcx + 8]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f7a	            0xff11	                        call qword [rcx]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f7c	    0x391d00000000	            cmp dword [0x04006f82], ebx 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f82	            0x7fcc	                            jg 0x4006f50	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4006f84	      0x488b542408	                mov rdx, qword [rsp + 8]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4006f89	      0xbe00000000	                              mov esi, 0	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4006f8e	            0x31c0	                            xor eax, eax	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4006f90	        0x488b7a08	                mov rdi, qword [rdx + 8]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4006f94	            0xff12	                        call qword [rdx]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x4006f96	          0x8d4301	                      lea eax, [rbx + 1]	     13387	i386-dis.c	FUNCTION_10	IF_31
0x4006f99	      0xe9d8f5ffff	                           jmp 0x4006576	     13387	i386-dis.c	FUNCTION_10	IF_31
0x4006f9e	      0xb8ffffffff	                     mov eax, 0xffffffff	     13355	i386-dis.c	FUNCTION_10	IF_27
0x4006fa3	      0xe9cef5ffff	                           jmp 0x4006576	     13355	i386-dis.c	FUNCTION_10	IF_27
0x4006fa8	      0xe800000000	                          call 0x4006fad	     13141	i386-dis.c	FOR_1	FUNCTION_8	CALL_5
0x4006fad	      0x2503020000	                          and eax, 0x203	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4006fb2	      0x3d00020000	                          cmp eax, 0x200	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4006fb7	            0x750d	                           jne 0x4006fc6	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4006fb9	    0xf60500000000	               test byte [0x04006fc0], 2	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4006fc0	     0xf8425fcffff	                            je 0x4006beb	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4006fc6	    0x488b05000000	            mov rax, qword [0x04006fcd] 	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4006fcd	    0x482b05000000	             sub rax, qword [0x04006fd4]	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4006fd4	        0x4883f80f	                            cmp rax, 0xf	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4006fd8	     0xf8f270d0000	                            jg 0x4007d05	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4006fde	    0x488b05000000	            mov rax, qword [0x04006fe5] 	     13526	i386-dis.c	FUNCTION_10
0x4006fe5	      0xba00000000	                              mov edx, 0	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4006fea	    0x488905000000	            mov qword [0x04006ff1], rax 	     13526	i386-dis.c	FUNCTION_10
0x4006ff1	            0x8b32	                    mov esi, dword [rdx]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4006ff3	        0x4883c204	                              add rdx, 4	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4006ff7	    0x8d8efffefefe	              lea ecx, [rsi - 0x1010101]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4006ffd	            0xf7d6	                                 not esi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4006fff	            0x21f1	                            and ecx, esi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007001	    0x81e180808080	                     and ecx, 0x80808080	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007007	            0x74e8	                            je 0x4006ff1	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007009	            0x89ce	                            mov esi, ecx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400700b	          0xc1ee10	                           shr esi, 0x10	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400700e	    0xf7c180800000	                        test ecx, 0x8080	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007014	           0xf44ce	                          cmove ecx, esi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007017	        0x488d7202	                      lea rsi, [rdx + 2]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400701b	            0x89cb	                            mov ebx, ecx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400701d	        0x480f44d6	                          cmove rdx, rsi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007021	              0xcb	                              add bl, cl	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007023	    0x4881da000000	                              sbb rdx, 0	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400702a	          0x4401ea	                           add edx, r13d	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400702d	          0x83fa05	                              cmp edx, 5	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007030	     0xf8f66120000	                            jg 0x400829c	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007036	      0xb905000000	                              mov ecx, 5	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400703b	            0x89cb	                            mov ebx, ecx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400703d	            0x29d3	                            sub ebx, edx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400703f	      0x488d541801	                lea rdx, [rax + rbx + 1]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007044	         0xf1f4000	                         nop dword [rax]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007048	      0xbe20000000	                           mov esi, 0x20	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400704d	        0x4883c001	                              add rax, 1	       117	string3.h	FUNCTION_108	CALL_3
0x4007051	        0x668970ff	                  mov word [rax - 1], si	       117	string3.h	FUNCTION_108	CALL_3
0x4007055	          0x4839c2	                            cmp rdx, rax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007058	            0x75ee	                           jne 0x4007048	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400705a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13530	i386-dis.c	FUNCTION_10
0x400705f	      0xb920000000	                           mov ecx, 0x20	     13530	i386-dis.c	FUNCTION_10
0x4007064	        0x4883c201	                              add rdx, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007068	        0x66894aff	                  mov word [rdx - 1], cx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400706c	            0x31c0	                            xor eax, eax	     13530	i386-dis.c	FUNCTION_10
0x400706e	    0x488915000000	            mov qword [0x04007075], rdx 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007075	      0xbe00000000	                              mov esi, 0	     13530	i386-dis.c	FUNCTION_10
0x400707a	      0xba00000000	                              mov edx, 0	     13530	i386-dis.c	FUNCTION_10
0x400707f	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13530	i386-dis.c	FUNCTION_10
0x4007083	            0xff13	                        call qword [rbx]	     13530	i386-dis.c	FUNCTION_10
0x4007085	    0x803d00000000	                cmp byte [0x0400708c], 0	     13534	i386-dis.c	FUNCTION_10	IF_50
0x400708c	     0xf85b00b0000	                           jne 0x4007c42	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007092	    0x8b0500000000	            mov eax, dword [0x04007098] 	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007098	            0x85c0	                           test eax, eax	     13534	i386-dis.c	FUNCTION_10	IF_50
0x400709a	     0xf85be0e0000	                           jne 0x4007f5e	     13534	i386-dis.c	FUNCTION_10	IF_50
0x40070a0	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070ac	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070b8	      0xba00000000	                              mov edx, 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070bd	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070c9	    0x48c784249800	               mov qword [rsp + 0x98], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070d5	    0x48c784249000	               mov qword [rsp + 0x90], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070e1	            0x31db	                            xor ebx, ebx	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070e3	            0x31c0	                            xor eax, eax	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070e5	            0xeb08	                           jmp 0x40070ef	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070e7	    0x488b945c9000	    mov rdx, qword [rsp + rbx*2 + 0x90] 	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x40070ef	          0x803a00	                       cmp byte [rdx], 0	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x40070f2	            0x743a	                            je 0x400712e	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x40070f4	            0x85c0	                           test eax, eax	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x40070f6	     0xf852d0a0000	                           jne 0x4007b29	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x40070fc	    0x486383000000	                 movsxd rax, dword [rbx]	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007103	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007106	            0x740f	                            je 0x4007117	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007108	    0x4883bc1b0000	                cmp qword [rbx + rbx], 0	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007111	     0xf847a0a0000	                            je 0x4007b91	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007117	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x400711c	      0xbe00000000	                              mov esi, 0	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007121	            0x31c0	                            xor eax, eax	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007123	        0x488b7908	                mov rdi, qword [rcx + 8]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007127	            0xff11	                        call qword [rcx]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007129	      0xb801000000	                              mov eax, 1	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x400712e	        0x4883c304	                              add rbx, 4	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007132	        0x4883fb14	                           cmp rbx, 0x14	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4007136	            0x75af	                           jne 0x40070e7	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4007138	            0x31c0	                            xor eax, eax	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x400713a	    0x833c85000000	   cmp dword [rax*4], 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007142	          0x4863d8	                         movsxd rbx, eax	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007145	            0x740f	                            je 0x4007156	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007147	    0x48833cc50000	                    cmp qword [rax*8], 0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007150	     0xf85cffcffff	                           jne 0x4006e25	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007156	        0x4883c001	                              add rax, 1	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400715a	        0x4883f805	                              cmp rax, 5	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400715e	            0x75da	                           jne 0x400713a	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4007160	      0xe902fdffff	                           jmp 0x4006e67	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4007165	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13375	i386-dis.c	FUNCTION_10
0x400716a	      0x4489442414	             mov dword [rsp + 0x14], r8d	     13375	i386-dis.c	FUNCTION_10
0x400716f	      0xe85caaffff	                     call sym.fetch_data	     13375	i386-dis.c	FUNCTION_10
0x4007174	    0x488b05000000	            mov rax, qword [0x0400717b] 	     13375	i386-dis.c	FUNCTION_10
0x400717b	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	     13375	i386-dis.c	FUNCTION_10
0x4007180	      0xe957f8ffff	                           jmp 0x40069dc	     13375	i386-dis.c	FUNCTION_10
0x4007185	      0xbf00000000	                              mov edi, 0	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400718a	      0xb906000000	                              mov ecx, 6	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400718f	          0x4889c6	                            mov rsi, rax	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4007192	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4007194	     0xf8598f1ffff	                           jne 0x4006332	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400719a	    0x838c24e80000	                or dword [rsp + 0xe8], 4	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x40071a2	      0xe98bf1ffff	                           jmp 0x4006332	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x40071a7	    0x41837c241001	               cmp dword [r12 + 0x10], 1	     13431	i386-dis.c	FUNCTION_10	IF_36
0x40071ad	     0xf845e0f0000	                            je 0x4008111	     13431	i386-dis.c	FUNCTION_10	IF_36
0x40071b3	       0xf1f440000	                   nop dword [rax + rax]	     13431	i386-dis.c	FUNCTION_10	IF_36
0x40071b8	    0x41837c24100d	            cmp dword [r12 + 0x10], 0xd 	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40071be	     0xf87e4fdffff	                            ja 0x4006fa8	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40071c4	      0x418b442410	            mov eax, dword [r12 + 0x10] 	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40071c9	    0xff24c5000000	                       jmp qword [rax*8]	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40071d0	      0xbf00000000	                              mov edi, 0	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40071d5	    0x41bc00000000	                             mov r12d, 0	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40071db	      0xe9f4f8ffff	                           jmp 0x4006ad4	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40071e0	      0x488b542408	                mov rdx, qword [rsp + 8]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40071e5	    0x488b05000000	            mov rax, qword [0x040071ec] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x40071ec	    0xc70500000000	               mov dword [0x040071f6], 0	     13033	i386-dis.c	FOR_1	FUNCTION_8
0x40071f6	    0xc70500000000	               mov dword [0x04007200], 1	     13035	i386-dis.c	FOR_1	FUNCTION_8
0x4007200	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007204	        0x488d7004	                      lea rsi, [rax + 4]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007208	          0x483b32	                    cmp rsi, qword [rdx]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400720b	     0xf87de0b0000	                            ja 0x4007def	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007211	    0x8b1500000000	            mov edx, dword [0x04007217] 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x4007217	    0x891500000000	            mov dword [0x0400721d], edx 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x400721d	           0xfb610	                   movzx edx, byte [rax]	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4007220	            0x89d1	                            mov ecx, edx	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4007222	          0x83e210	                           and edx, 0x10	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x4007225	           0xfb6d2	                           movzx edx, dl	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x4007228	          0xc0e905	                               shr cl, 5	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400722b	    0x891500000000	            mov dword [0x04007231], edx 	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x4007231	           0xfb610	                   movzx edx, byte [rax]	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007234	            0xf7d1	                                 not ecx	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4007236	          0x83e107	                              and ecx, 7	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4007239	    0x890d00000000	            mov dword [0x0400723f], ecx 	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400723f	          0x83e20f	                            and edx, 0xf	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007242	          0x80fa02	                               cmp dl, 2	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007245	     0xf84a60d0000	                            je 0x4007ff1	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400724b	          0x80fa03	                               cmp dl, 3	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400724e	     0xf84920d0000	                            je 0x4007fe6	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007254	          0x80fa01	                               cmp dl, 1	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007257	     0xf8573ffffff	                           jne 0x40071d0	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400725d	          0x4531f6	                          xor r14d, r14d	     13047	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007260	        0x488d7001	                      lea rsi, [rax + 1]	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x4007264	    0x488935000000	            mov qword [0x0400726b], rsi 	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x400726b	         0xfb67001	               movzx esi, byte [rax + 1]	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x400726f	          0x83e680	                     and esi, 0xffffff80	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x4007272	        0x400fb6fe	                          movzx edi, sil	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x4007276	          0x4084f6	                           test sil, sil	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4007279	    0x893d00000000	            mov dword [0x0400727f], edi 	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x400727f	            0x7412	                            je 0x4007293	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4007281	    0x833d00000000	               cmp dword [0x04007288], 2	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4007288	            0x7509	                           jne 0x4007293	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400728a	          0x83c908	                               or ecx, 8	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400728d	    0x890d00000000	            mov dword [0x04007293], ecx 	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4007293	         0xfb64801	               movzx ecx, byte [rax + 1]	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x4007297	          0xc0e903	                               shr cl, 3	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400729a	            0xf7d1	                                 not ecx	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400729c	          0x83e10f	                            and ecx, 0xf	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400729f	    0x890d00000000	            mov dword [0x040072a5], ecx 	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x40072a5	         0xfb64801	               movzx ecx, byte [rax + 1]	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40072a9	          0xf6c104	                              test cl, 4	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40072ac	     0xf841effffff	                            je 0x40071d0	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x40072b2	          0x83e103	                              and ecx, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072b5	          0x80f902	                               cmp cl, 2	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072b8	     0xf84810d0000	                            je 0x400803f	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072be	          0x80f903	                               cmp cl, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072c1	     0xf84690d0000	                            je 0x4008030	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072c7	          0x80f901	                               cmp cl, 1	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072ca	            0x750a	                           jne 0x40072d6	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072cc	    0xc70500000000	           mov dword [0x040072d6], 0x66 	     13074	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x40072d6	        0x488d4802	                      lea rcx, [rax + 2]	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x40072da	    0x48890d000000	            mov qword [0x040072e1], rcx 	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x40072e1	         0xfb64802	               movzx ecx, byte [rax + 2]	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x40072e5	          0xc0e905	                               shr cl, 5	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x40072e8	          0x83e103	                              and ecx, 3	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x40072eb	    0x890d00000000	            mov dword [0x040072f1], ecx 	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x40072f1	         0xfb64802	               movzx ecx, byte [rax + 2]	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x40072f5	          0xc0e904	                               shr cl, 4	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x40072f8	          0x83e101	                              and ecx, 1	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x40072fb	    0x890d00000000	            mov dword [0x04007301], ecx 	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4007301	         0xfb64802	               movzx ecx, byte [rax + 2]	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4007305	          0x83e108	                              and ecx, 8	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4007308	           0xfb6c9	                           movzx ecx, cl	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400730b	    0x890d00000000	            mov dword [0x04007311], ecx 	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4007311	         0xfb64802	               movzx ecx, byte [rax + 2]	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x4007315	          0x83e107	                              and ecx, 7	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x4007318	    0x890d00000000	            mov dword [0x0400731e], ecx 	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x400731e	         0xfb64802	               movzx ecx, byte [rax + 2]	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x4007322	          0x83e180	                     and ecx, 0xffffff80	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x4007325	    0x833d00000000	               cmp dword [0x0400732c], 2	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400732c	           0xfb6c9	                           movzx ecx, cl	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x400732f	    0x890d00000000	            mov dword [0x04007335], ecx 	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x4007335	            0x741b	                            je 0x4007352	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x4007337	    0x832500000000	      and dword [0x0400733e], 0xfffffffe	     13098	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400733e	    0xc70500000000	               mov dword [0x04007348], 1	     13099	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x4007348	    0xc70500000000	               mov dword [0x04007352], 1	     13100	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x4007352	         0xfb67003	               movzx esi, byte [rax + 3]	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x4007356	        0x488d7804	                      lea rdi, [rax + 4]	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400735a	    0xc60500000000	                mov byte [0x04007361], 1	     13103	i386-dis.c	FOR_1	FUNCTION_8
0x4007361	    0xc60500000000	                mov byte [0x04007368], 1	     13104	i386-dis.c	FOR_1	FUNCTION_8
0x4007368	    0x48893d000000	            mov qword [0x0400736f], rdi 	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400736f	    0x48893d000000	            mov qword [0x04007376], rdi 	     13108	i386-dis.c	FOR_1	FUNCTION_8
0x4007376	        0x4c8d0c76	                   lea r9, [rsi + rsi*2]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400737a	          0x4889f1	                            mov rcx, rsi	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400737d	          0x4963f6	                        movsxd rsi, r14d	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4007380	        0x488d3476	                  lea rsi, [rsi + rsi*2]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4007384	        0x49c1e105	                               shl r9, 5	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4007388	        0x48c1e60d	                            shl rsi, 0xd	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400738c	    0x4d8da4310000	                     lea r12, [r9 + rsi]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4007394	        0x488d7005	                      lea rsi, [rax + 5]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4007398	      0x488b442408	                mov rax, qword [rsp + 8]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400739d	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40073a1	          0x483b30	                    cmp rsi, qword [rax]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40073a4	     0xf87fa0c0000	                            ja 0x40080a4	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40073aa	           0xfb607	                   movzx eax, byte [rdi]	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x40073ad	            0x89c7	                            mov edi, eax	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x40073af	        0x40c0ef06	                              shr dil, 6	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x40073b3	        0x400fb6f7	                          movzx esi, dil	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x40073b7	    0x893500000000	            mov dword [0x040073bd], esi 	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x40073bd	            0x89c6	                            mov esi, eax	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40073bf	          0x83e007	                              and eax, 7	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x40073c2	        0x40c0ee03	                              shr sil, 3	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40073c6	    0x890500000000	            mov dword [0x040073cc], eax 	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x40073cc	          0x83e607	                              and esi, 7	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40073cf	        0x4080ff03	                              cmp dil, 3	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40073d3	    0x893500000000	            mov dword [0x040073d9], esi 	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x40073d9	     0xf84770a0000	                            je 0x4007e56	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x40073df	    0x8b0500000000	            mov eax, dword [0x040073e5] 	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40073e5	          0x83f801	                              cmp eax, 1	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40073e8	     0xf84a70c0000	                            je 0x4008095	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40073ee	          0x83f802	                              cmp eax, 2	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40073f1	     0xf846d0a0000	                            je 0x4007e64	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40073f7	            0x85c0	                           test eax, eax	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40073f9	     0xf85d1fdffff	                           jne 0x40071d0	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40073ff	    0xc70500000000	           mov dword [0x04007409], 0x80 	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007409	          0x4963d6	                        movsxd rdx, r14d	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400740c	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007410	        0x488d0452	                  lea rax, [rdx + rdx*2]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007414	        0x48c1e105	                              shl rcx, 5	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007418	        0x48c1e00d	                            shl rax, 0xd	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400741c	    0x488bbc010000	              mov rdi, qword [rcx + rax]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007424	         0xf1f4000	                         nop dword [rax]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007428	          0x4885ff	                           test rdi, rdi	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x400742b	     0xf8487fdffff	                            je 0x40071b8	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4007431	      0xe99ef6ffff	                           jmp 0x4006ad4	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4007436	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4007440	    0x803d00000000	                cmp byte [0x04007447], 0	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x4007447	     0xf845bfbffff	                            je 0x4006fa8	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x400744d	    0x8b1500000000	            mov edx, dword [0x04007453] 	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007453	            0x31c0	                            xor eax, eax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007455	            0x85d2	                           test edx, edx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007457	           0xf95c0	                                setne al	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400745a	        0x488d1400	                    lea rdx, [rax + rax]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400745e	          0x4801d0	                            add rax, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007461	        0x48c1e005	                              shl rax, 5	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007465	          0x4889c2	                            mov rdx, rax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007468	      0x4963442420	         movsxd rax, dword [r12 + 0x20] 	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400746d	        0x488d0440	                  lea rax, [rax + rax*2]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007471	        0x48c1e006	                              shl rax, 6	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007475	          0x4801d0	                            add rax, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007478	    0x4c8da0000000	                          lea r12, [rax]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400747f	    0x488bb8000000	                    mov rdi, qword [rax]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007486	            0xeba0	                           jmp 0x4007428	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4007488	    0x803d00000000	                cmp byte [0x0400748f], 0	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x400748f	     0xf8413fbffff	                            je 0x4006fa8	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x4007495	    0x8b0500000000	            mov eax, dword [0x0400749b] 	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400749b	      0x3d80000000	                           cmp eax, 0x80	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x40074a0	     0xf8469090000	                            je 0x4007e0f	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x40074a6	      0x3d00010000	                          cmp eax, 0x100	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x40074ab	     0xf85f7faffff	                           jne 0x4006fa8	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x40074b1	      0xb801000000	                              mov eax, 1	     12845	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x40074b6	        0x488d1400	                    lea rdx, [rax + rax]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074ba	          0x4801d0	                            add rax, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074bd	      0x4963542420	         movsxd rdx, dword [r12 + 0x20] 	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074c2	        0x48c1e005	                              shl rax, 5	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074c6	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074ca	        0x48c1e206	                              shl rdx, 6	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074ce	          0x4801d0	                            add rax, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074d1	    0x4c8da0000000	                          lea r12, [rax]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074d8	    0x488bb8000000	                    mov rdi, qword [rax]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074df	      0xe944ffffff	                           jmp 0x4007428	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x40074e4	      0x488b542408	                mov rdx, qword [rsp + 8]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40074e9	    0x488b05000000	            mov rax, qword [0x040074f0] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40074f0	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40074f4	        0x488d7002	                      lea rsi, [rax + 2]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40074f8	          0x483b32	                    cmp rsi, qword [rdx]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40074fb	     0xf87ce080000	                            ja 0x4007dcf	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4007501	    0x8b1500000000	            mov edx, dword [0x04007507] 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x4007507	      0xb904000000	                              mov ecx, 4	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400750c	    0x891500000000	            mov dword [0x04007512], edx 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x4007512	           0xfb610	                   movzx edx, byte [rax]	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4007515	            0x84d2	                             test dl, dl	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4007517	        0x410f48c8	                          cmovs ecx, r8d	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400751b	          0xc0ea03	                               shr dl, 3	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400751e	            0xf7d2	                                 not edx	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4007520	    0x890d00000000	            mov dword [0x04007526], ecx 	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4007526	          0x83e20f	                            and edx, 0xf	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4007529	    0x891500000000	            mov dword [0x0400752f], edx 	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400752f	           0xfb610	                   movzx edx, byte [rax]	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4007532	          0x83e204	                              and edx, 4	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4007535	          0x80fa01	                               cmp dl, 1	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4007538	            0x19d2	                            sbb edx, edx	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400753a	          0x83e280	                     and edx, 0xffffff80	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400753d	    0x81c200010000	                          add edx, 0x100	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4007543	    0x891500000000	            mov dword [0x04007549], edx 	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4007549	           0xfb610	                   movzx edx, byte [rax]	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400754c	          0x83e203	                              and edx, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400754f	          0x80fa02	                               cmp dl, 2	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4007552	     0xf84a40a0000	                            je 0x4007ffc	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4007558	          0x80fa03	                               cmp dl, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400755b	     0xf84b50a0000	                            je 0x4008016	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4007561	          0x80fa01	                               cmp dl, 1	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4007564	            0x750a	                           jne 0x4007570	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4007566	    0xc70500000000	           mov dword [0x04007570], 0x66 	     13000	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4007570	         0xfb67001	               movzx esi, byte [rax + 1]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4007574	      0x458b742420	           mov r14d, dword [r12 + 0x20] 	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4007579	        0x488d7802	                      lea rdi, [rax + 2]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400757d	    0xc60500000000	                mov byte [0x04007584], 1	     13009	i386-dis.c	FOR_1	FUNCTION_8
0x4007584	    0xc60500000000	                mov byte [0x0400758b], 1	     13010	i386-dis.c	FOR_1	FUNCTION_8
0x400758b	    0x48893d000000	            mov qword [0x04007592], rdi 	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4007592	    0x48893d000000	            mov qword [0x04007599], rdi 	     13014	i386-dis.c	FOR_1	FUNCTION_8
0x4007599	          0x4889f2	                            mov rdx, rsi	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400759c	        0x4c8d0c76	                   lea r9, [rsi + rsi*2]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40075a0	          0x4963f6	                        movsxd rsi, r14d	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40075a3	        0x488d3476	                  lea rsi, [rsi + rsi*2]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40075a7	        0x49c1e105	                               shl r9, 5	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40075ab	        0x48c1e60d	                            shl rsi, 0xd	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40075af	          0x83fa77	                           cmp edx, 0x77	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075b2	    0x4d8da4310000	                     lea r12, [r9 + rsi]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40075ba	     0xf8492090000	                            je 0x4007f52	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075c0	        0x488d7003	                      lea rsi, [rax + 3]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075c4	      0x488b442408	                mov rax, qword [rsp + 8]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075c9	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075cd	          0x483b30	                    cmp rsi, qword [rax]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075d0	     0xf87780a0000	                            ja 0x400804e	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075d6	           0xfb607	                   movzx eax, byte [rdi]	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075d9	            0x89c6	                            mov esi, eax	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075db	          0x4963ce	                        movsxd rcx, r14d	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075de	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075e2	        0x40c0ee06	                              shr sil, 6	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075e6	        0x400fb6f6	                          movzx esi, sil	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075ea	        0x48c1e205	                              shl rdx, 5	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075ee	    0x893500000000	            mov dword [0x040075f4], esi 	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075f4	            0x89c6	                            mov esi, eax	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075f6	          0x83e007	                              and eax, 7	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075f9	    0x890500000000	            mov dword [0x040075ff], eax 	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40075ff	        0x488d0449	                  lea rax, [rcx + rcx*2]	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4007603	        0x40c0ee03	                              shr sil, 3	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4007607	          0x83e607	                              and esi, 7	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400760a	        0x48c1e00d	                            shl rax, 0xd	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400760e	    0x893500000000	            mov dword [0x04007614], esi 	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4007614	    0x488bbc020000	              mov rdi, qword [rdx + rax]	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400761c	      0xe907feffff	                           jmp 0x4007428	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4007621	      0x488b542408	                mov rdx, qword [rsp + 8]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007626	    0x488b05000000	            mov rax, qword [0x0400762d] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400762d	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007631	        0x488d7003	                      lea rsi, [rax + 3]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007635	          0x483b32	                    cmp rsi, qword [rdx]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007638	     0xf875d070000	                            ja 0x4007d9b	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400763e	           0xfb608	                   movzx ecx, byte [rax]	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4007641	    0x8b1500000000	            mov edx, dword [0x04007647] 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x4007647	    0x891500000000	            mov dword [0x0400764d], edx 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x400764d	            0x89ca	                            mov edx, ecx	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400764f	          0x83e11f	                           and ecx, 0x1f	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007652	          0xc0ea05	                               shr dl, 5	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4007655	            0xf7d2	                                 not edx	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4007657	          0x83e207	                              and edx, 7	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400765a	          0x80f902	                               cmp cl, 2	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400765d	    0x891500000000	            mov dword [0x04007663], edx 	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4007663	     0xf8499080000	                            je 0x4007f02	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007669	          0x80f903	                               cmp cl, 3	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400766c	     0xf84a0080000	                            je 0x4007f12	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007672	          0x80f901	                               cmp cl, 1	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007675	     0xf8555fbffff	                           jne 0x40071d0	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400767b	            0x31f6	                            xor esi, esi	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400767d	          0x4531f6	                          xor r14d, r14d	     12929	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007680	        0x488d7801	                      lea rdi, [rax + 1]	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x4007684	    0x48893d000000	            mov qword [0x0400768b], rdi 	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x400768b	         0xfb67801	               movzx edi, byte [rax + 1]	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x400768f	          0x83e780	                     and edi, 0xffffff80	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x4007692	    0x833d00000000	               cmp dword [0x04007699], 2	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x4007699	        0x440fb6cf	                          movzx r9d, dil	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x400769d	    0x44890d000000	            mov dword [0x040076a4], r9d 	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x40076a4	     0xf84230a0000	                            je 0x40080cd	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x40076aa	    0xc70500000000	               mov dword [0x040076b4], 0	     12950	i386-dis.c	FOR_1	FUNCTION_8	ELSE_3
0x40076b4	         0xfb65001	               movzx edx, byte [rax + 1]	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40076b8	          0xc0ea03	                               shr dl, 3	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40076bb	            0xf7d2	                                 not edx	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40076bd	          0x83e20f	                            and edx, 0xf	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40076c0	    0x891500000000	            mov dword [0x040076c6], edx 	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40076c6	         0xfb65001	               movzx edx, byte [rax + 1]	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40076ca	          0x83e204	                              and edx, 4	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40076cd	          0x80fa01	                               cmp dl, 1	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40076d0	            0x19d2	                            sbb edx, edx	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40076d2	          0x83e280	                     and edx, 0xffffff80	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40076d5	    0x81c200010000	                          add edx, 0x100	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40076db	    0x891500000000	            mov dword [0x040076e1], edx 	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40076e1	         0xfb65001	               movzx edx, byte [rax + 1]	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076e5	          0x83e203	                              and edx, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076e8	          0x80fa02	                               cmp dl, 2	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076eb	     0xf84020a0000	                            je 0x40080f3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076f1	          0x80fa03	                               cmp dl, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076f4	     0xf84ea090000	                            je 0x40080e4	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076fa	          0x80fa01	                               cmp dl, 1	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076fd	            0x750a	                           jne 0x4007709	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40076ff	    0xc70500000000	           mov dword [0x04007709], 0x66 	     12959	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4007709	         0xfb67802	               movzx edi, byte [rax + 2]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400770d	        0x4c8d4803	                       lea r9, [rax + 3]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x4007711	    0xc60500000000	                mov byte [0x04007718], 1	     12968	i386-dis.c	FOR_1	FUNCTION_8
0x4007718	    0xc60500000000	                mov byte [0x0400771f], 1	     12969	i386-dis.c	FOR_1	FUNCTION_8
0x400771f	    0x4c890d000000	              mov qword [0x04007726], r9	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x4007726	    0x4c890d000000	              mov qword [0x0400772d], r9	     12973	i386-dis.c	FOR_1	FUNCTION_8
0x400772d	          0x4889fa	                            mov rdx, rdi	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x4007730	        0x488d3c7f	                  lea rdi, [rdi + rdi*2]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4007734	        0x48c1e705	                              shl rdi, 5	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4007738	          0x4989fa	                            mov r10, rdi	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400773b	          0x4963fe	                        movsxd rdi, r14d	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400773e	        0x488d3c7f	                  lea rdi, [rdi + rdi*2]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4007742	        0x48c1e70d	                            shl rdi, 0xd	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4007746	          0x4c01d7	                            add rdi, r10	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4007749	          0x83fa77	                           cmp edx, 0x77	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400774c	    0x4c8da7000000	                          lea r12, [rdi]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4007753	     0xf85df050000	                           jne 0x4007d38	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007759	          0x4084f6	                           test sil, sil	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400775c	     0xf85d6050000	                           jne 0x4007d38	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007762	    0x488bbf000000	                    mov rdi, qword [rdi]	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007769	      0xe9bafcffff	                           jmp 0x4007428	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400776e	      0x488b542408	                mov rdx, qword [rsp + 8]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007773	    0x488b05000000	            mov rax, qword [0x0400777a] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400777a	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400777e	        0x488d7003	                      lea rsi, [rax + 3]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007782	          0x483b32	                    cmp rsi, qword [rdx]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007785	     0xf878b060000	                            ja 0x4007e16	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400778b	           0xfb608	                   movzx ecx, byte [rax]	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400778e	    0x8b1500000000	            mov edx, dword [0x04007794] 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x4007794	    0x891500000000	            mov dword [0x0400779a], edx 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x400779a	            0x89ca	                            mov edx, ecx	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400779c	          0x83e11f	                           and ecx, 0x1f	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400779f	          0xc0ea05	                               shr dl, 5	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40077a2	           0xfb6d2	                           movzx edx, dl	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40077a5	            0xf7d2	                                 not edx	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40077a7	            0x89d6	                            mov esi, edx	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40077a9	          0x83e607	                              and esi, 7	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40077ac	          0x80f909	                               cmp cl, 9	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40077af	    0x893500000000	            mov dword [0x040077b5], esi 	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40077b5	     0xf8450080000	                            je 0x400800b	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40077bb	          0x80f90a	                             cmp cl, 0xa	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40077be	     0xf8461080000	                            je 0x4008025	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40077c4	          0x80f908	                               cmp cl, 8	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40077c7	     0xf8503faffff	                           jne 0x40071d0	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40077cd	          0x4531f6	                          xor r14d, r14d	     12868	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40077d0	        0x488d4801	                      lea rcx, [rax + 1]	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x40077d4	    0x48890d000000	            mov qword [0x040077db], rcx 	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x40077db	         0xfb64801	               movzx ecx, byte [rax + 1]	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x40077df	          0x83e180	                     and ecx, 0xffffff80	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x40077e2	           0xfb6f9	                           movzx edi, cl	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x40077e5	            0x84c9	                             test cl, cl	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x40077e7	    0x893d00000000	            mov dword [0x040077ed], edi 	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x40077ed	     0xf8484050000	                            je 0x4007d77	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x40077f3	    0x833d00000000	               cmp dword [0x040077fa], 2	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x40077fa	     0xf841b0a0000	                            je 0x400821b	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4007800	         0xfb64801	               movzx ecx, byte [rax + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007804	          0xc0e903	                               shr cl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007807	            0xf7d1	                                 not ecx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007809	          0x83e10f	                            and ecx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400780c	    0x890d00000000	            mov dword [0x04007812], ecx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007812	          0x83e206	                              and edx, 6	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4007815	    0x891500000000	            mov dword [0x0400781b], edx 	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400781b	         0xfb65001	               movzx edx, byte [rax + 1]	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400781f	          0x83e204	                              and edx, 4	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4007822	          0x80fa01	                               cmp dl, 1	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4007825	            0x19d2	                            sbb edx, edx	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4007827	          0x83e280	                     and edx, 0xffffff80	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400782a	    0x81c200010000	                          add edx, 0x100	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4007830	    0x891500000000	            mov dword [0x04007836], edx 	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4007836	         0xfb65001	               movzx edx, byte [rax + 1]	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400783a	          0x83e203	                              and edx, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400783d	          0x80fa02	                               cmp dl, 2	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4007840	     0xf8431080000	                            je 0x4008077	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4007846	          0x80fa03	                               cmp dl, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4007849	     0xf8437080000	                            je 0x4008086	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400784f	          0x80fa01	                               cmp dl, 1	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4007852	            0x750a	                           jne 0x400785e	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4007854	    0xc70500000000	           mov dword [0x0400785e], 0x66 	     12895	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400785e	         0xfb64802	               movzx ecx, byte [rax + 2]	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x4007862	        0x488d7803	                      lea rdi, [rax + 3]	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x4007866	    0xc60500000000	                mov byte [0x0400786d], 1	     12904	i386-dis.c	FOR_1	FUNCTION_8
0x400786d	    0xc60500000000	                mov byte [0x04007874], 1	     12905	i386-dis.c	FOR_1	FUNCTION_8
0x4007874	    0x48893d000000	            mov qword [0x0400787b], rdi 	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x400787b	    0x48893d000000	            mov qword [0x04007882], rdi 	     12910	i386-dis.c	FOR_1	FUNCTION_8
0x4007882	        0x488d3449	                  lea rsi, [rcx + rcx*2]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x4007886	          0x4889ca	                            mov rdx, rcx	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x4007889	          0x4963ce	                        movsxd rcx, r14d	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x400788c	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x4007890	        0x48c1e605	                              shl rsi, 5	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x4007894	        0x48c1e10d	                            shl rcx, 0xd	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x4007898	    0x4c8da40e0000	                    lea r12, [rsi + rcx]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40078a0	        0x488d7004	                      lea rsi, [rax + 4]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40078a4	      0x488b442408	                mov rax, qword [rsp + 8]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40078a9	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40078ad	          0x483b30	                    cmp rsi, qword [rax]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40078b0	     0xf87e9060000	                            ja 0x4007f9f	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40078b6	           0xfb607	                   movzx eax, byte [rdi]	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x40078b9	          0x4d63ce	                         movsxd r9, r14d	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x40078bc	            0x89c1	                            mov ecx, eax	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x40078be	          0xc0e906	                               shr cl, 6	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x40078c1	           0xfb6c9	                           movzx ecx, cl	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x40078c4	    0x890d00000000	            mov dword [0x040078ca], ecx 	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x40078ca	            0x89c1	                            mov ecx, eax	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078cc	          0x83e007	                              and eax, 7	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x40078cf	    0x890500000000	            mov dword [0x040078d5], eax 	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x40078d5	          0x4863c2	                         movsxd rax, edx	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x40078d8	          0xc0e903	                               shr cl, 3	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078db	        0x488d1440	                  lea rdx, [rax + rax*2]	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078df	        0x4b8d0449	                    lea rax, [r9 + r9*2]	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078e3	          0x83e107	                              and ecx, 7	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078e6	    0x890d00000000	            mov dword [0x040078ec], ecx 	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078ec	        0x48c1e205	                              shl rdx, 5	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078f0	        0x48c1e00d	                            shl rax, 0xd	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078f4	    0x488bbc020000	              mov rdi, qword [rdx + rax]	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x40078fc	      0xe927fbffff	                           jmp 0x4007428	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x4007901	    0x803d00000000	                cmp byte [0x04007908], 0	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x4007908	     0xf849e020000	                            je 0x4007bac	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x400790e	    0x8b0500000000	            mov eax, dword [0x04007914] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007914	          0x83f866	                           cmp eax, 0x66	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007917	     0xf844c090000	                            je 0x4008269	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400791d	     0xf8e98040000	                           jle 0x4007dbb	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007923	      0x3df2000000	                           cmp eax, 0xf2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007928	     0xf845f090000	                            je 0x400828d	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400792e	      0x3df3000000	                           cmp eax, 0xf3	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007933	     0xf856ff6ffff	                           jne 0x4006fa8	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007939	      0x4963542420	         movsxd rdx, dword [r12 + 0x20] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400793e	      0xb801000000	                              mov eax, 1	     12761	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007943	        0x488d0440	                  lea rax, [rax + rax*2]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4007947	        0x48c1e005	                              shl rax, 5	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400794b	          0x4889c1	                            mov rcx, rax	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400794e	        0x488d0452	                  lea rax, [rdx + rdx*2]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4007952	        0x48c1e007	                              shl rax, 7	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4007956	          0x4801c8	                            add rax, rcx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4007959	    0x4c8da0000000	                          lea r12, [rax]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4007960	    0x488bb8000000	                    mov rdi, qword [rax]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4007967	      0xe9bcfaffff	                           jmp 0x4007428	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400796c	      0x488b542408	                mov rdx, qword [rsp + 8]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007971	    0x488b05000000	            mov rax, qword [0x04007978] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007978	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x400797c	        0x488d7002	                      lea rsi, [rax + 2]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007980	          0x483b32	                    cmp rsi, qword [rdx]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007983	     0xf87ad040000	                            ja 0x4007e36	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007989	           0xfb610	                   movzx edx, byte [rax]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400798c	        0x488d7001	                      lea rsi, [rax + 1]	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x4007990	         0xfb64001	               movzx eax, byte [rax + 1]	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4007994	    0x488935000000	            mov qword [0x0400799b], rsi 	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x400799b	    0x488935000000	            mov qword [0x040079a2], rsi 	     12829	i386-dis.c	FOR_1	FUNCTION_8
0x40079a2	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079a6	        0x48c1e205	                              shl rdx, 5	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079aa	          0x4889d1	                            mov rcx, rdx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079ad	      0x4963542420	         movsxd rdx, dword [r12 + 0x20] 	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079b2	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079b6	        0x48c1e20d	                            shl rdx, 0xd	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079ba	          0x4801ca	                            add rdx, rcx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079bd	            0x89c1	                            mov ecx, eax	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40079bf	          0xc0e906	                               shr cl, 6	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40079c2	    0x4c8da2000000	                          lea r12, [rdx]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079c9	    0x488bba000000	                    mov rdi, qword [rdx]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40079d0	           0xfb6c9	                           movzx ecx, cl	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40079d3	    0x890d00000000	            mov dword [0x040079d9], ecx 	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40079d9	            0x89c1	                            mov ecx, eax	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x40079db	          0x83e007	                              and eax, 7	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x40079de	          0xc0e903	                               shr cl, 3	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x40079e1	    0x890500000000	            mov dword [0x040079e7], eax 	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x40079e7	          0x83e107	                              and ecx, 7	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x40079ea	    0x890d00000000	            mov dword [0x040079f0], ecx 	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x40079f0	      0xe933faffff	                           jmp 0x4007428	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x40079f5	            0x31c0	                            xor eax, eax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x40079f7	    0x833d00000000	               cmp dword [0x040079fe], 2	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x40079fe	           0xf94c0	                                 sete al	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a01	        0x488d1400	                    lea rdx, [rax + rax]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a05	          0x4801d0	                            add rax, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a08	        0x48c1e005	                              shl rax, 5	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a0c	          0x4889c2	                            mov rdx, rax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a0f	      0x4963442420	         movsxd rax, dword [r12 + 0x20] 	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a14	        0x488d0440	                  lea rax, [rax + rax*2]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a18	        0x48c1e006	                              shl rax, 6	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a1c	          0x4801d0	                            add rax, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a1f	    0x4c8da0000000	                          lea r12, [rax]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a26	    0x488bb8000000	                    mov rdi, qword [rax]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a2d	      0xe9f6f9ffff	                           jmp 0x4007428	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4007a32	            0x31c0	                            xor eax, eax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a34	    0x833d00000000	               cmp dword [0x04007a3b], 3	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a3b	           0xf94c0	                                 sete al	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a3e	        0x488d1400	                    lea rdx, [rax + rax]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a42	          0x4801d0	                            add rax, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a45	        0x48c1e005	                              shl rax, 5	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a49	          0x4889c2	                            mov rdx, rax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a4c	      0x4963442420	         movsxd rax, dword [r12 + 0x20] 	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a51	        0x488d0440	                  lea rax, [rax + rax*2]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a55	        0x48c1e006	                              shl rax, 6	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a59	          0x4801d0	                            add rax, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a5c	    0x4c8da0000000	                          lea r12, [rax]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a63	    0x488bb8000000	                    mov rdi, qword [rax]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a6a	      0xe9b9f9ffff	                           jmp 0x4007428	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4007a6f	    0x486305000000	         movsxd rax, dword [0x04007a76] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a76	        0x488d0440	                  lea rax, [rax + rax*2]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a7a	        0x48c1e005	                              shl rax, 5	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a7e	          0x4889c2	                            mov rdx, rax	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a81	      0x4963442420	         movsxd rax, dword [r12 + 0x20] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a86	        0x488d0440	                  lea rax, [rax + rax*2]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a8a	        0x48c1e008	                              shl rax, 8	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a8e	          0x4801d0	                            add rax, rdx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a91	    0x4c8da0000000	                          lea r12, [rax]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a98	    0x488bb8000000	                    mov rdi, qword [rax]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007a9f	      0xe984f9ffff	                           jmp 0x4007428	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4007aa4	    0x486305000000	         movsxd rax, dword [0x04007aab] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007aab	        0x488d0440	                  lea rax, [rax + rax*2]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007aaf	        0x48c1e005	                              shl rax, 5	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007ab3	          0x4889c2	                            mov rdx, rax	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007ab6	      0x4963442420	         movsxd rax, dword [r12 + 0x20] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007abb	        0x488d0440	                  lea rax, [rax + rax*2]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007abf	        0x48c1e008	                              shl rax, 8	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007ac3	          0x4801d0	                            add rax, rdx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007ac6	    0x4c8da0000000	                          lea r12, [rax]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007acd	    0x488bb8000000	                    mov rdi, qword [rax]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007ad4	      0xe94ff9ffff	                           jmp 0x4007428	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4007ad9	        0x488d7801	                      lea rdi, [rax + 1]	     13394	i386-dis.c	FUNCTION_10	IF_32
0x4007add	        0x488d7002	                      lea rsi, [rax + 2]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007ae1	      0x488b442408	                mov rax, qword [rsp + 8]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007ae6	    0x48893d000000	            mov qword [0x04007aed], rdi 	     13394	i386-dis.c	FUNCTION_10	IF_32
0x4007aed	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007af1	          0x483b30	                    cmp rsi, qword [rax]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007af4	     0xf8728040000	                            ja 0x4007f22	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007afa	           0xfb607	                   movzx eax, byte [rdi]	     13397	i386-dis.c	FUNCTION_10	IF_32
0x4007afd	     0xfb690000000	                   movzx edx, byte [rax]	     13398	i386-dis.c	FUNCTION_10	IF_32
0x4007b04	        0x4c8d2440	                  lea r12, [rax + rax*2]	     13397	i386-dis.c	FUNCTION_10	IF_32
0x4007b08	        0x488d4701	                      lea rax, [rdi + 1]	     13399	i386-dis.c	FUNCTION_10	IF_32
0x4007b0c	        0x49c1e405	                              shl r12, 5	     13397	i386-dis.c	FUNCTION_10	IF_32
0x4007b10	    0x488905000000	            mov qword [0x04007b17], rax 	     13399	i386-dis.c	FUNCTION_10	IF_32
0x4007b17	    0x4981c4000000	                              add r12, 0	     13397	i386-dis.c	FUNCTION_10	IF_32
0x4007b1e	    0x881500000000	               mov byte [0x04007b24], dl	     13398	i386-dis.c	FUNCTION_10	IF_32
0x4007b24	      0xe90defffff	                           jmp 0x4006a36	     13398	i386-dis.c	FUNCTION_10	IF_32
0x4007b29	    0x488994248800	             mov qword [rsp + 0x88], rdx	     13398	i386-dis.c	FUNCTION_10	IF_32
0x4007b31	      0x488b542408	                mov rdx, qword [rsp + 8]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007b36	      0xbe00000000	                              mov esi, 0	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007b3b	            0x31c0	                            xor eax, eax	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007b3d	        0x488b7a08	                mov rdi, qword [rdx + 8]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007b41	            0xff12	                        call qword [rdx]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007b43	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007b4b	      0xe9acf5ffff	                           jmp 0x40070fc	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007b50	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4007b55	      0x448944241c	             mov dword [rsp + 0x1c], r8d	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4007b5a	      0xe871a0ffff	                     call sym.fetch_data	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4007b5f	    0x488b05000000	            mov rax, qword [0x04007b66] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4007b66	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4007b6b	      0xe902efffff	                           jmp 0x4006a72	     13420	i386-dis.c	FUNCTION_10	IF_35
0x4007b70	          0x80fa33	                            cmp dl, 0x33	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4007b73	     0xf8489050000	                            je 0x4008102	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4007b79	          0x80fa36	                            cmp dl, 0x36	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4007b7c	     0xf85b0e7ffff	                           jne 0x4006332	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4007b82	        0x80780534	                cmp byte [rax + 5], 0x34	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4007b86	     0xf85a6e7ffff	                           jne 0x4006332	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4007b8c	      0xe92bf3ffff	                           jmp 0x4006ebc	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4007b91	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007b99	      0x488b442408	                mov rax, qword [rsp + 8]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007b9e	          0x4889c6	                            mov rsi, rax	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007ba1	    0xff9080000000	                 call qword [rax + 0x80]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007ba7	      0xe97df5ffff	                           jmp 0x4007129	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007bac	    0x448b0d000000	            mov r9d, dword [0x04007bb3] 	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x4007bb3	        0x41f6c103	                             test r9b, 3	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x4007bb7	     0xf848b030000	                            je 0x4007f48	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x4007bbd	    0x48630d000000	         movsxd rcx, dword [0x04007bc4] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007bc4	    0x8b0500000000	            mov eax, dword [0x04007bca] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007bca	            0x39c8	                            cmp eax, ecx	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007bcc	     0xf8ea6060000	                           jle 0x4008278	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007bd2	          0x4863c8	                         movsxd rcx, eax	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007bd5	    0x41ba01000000	                             mov r10d, 1	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007bdb	      0xbf01000000	                              mov edi, 1	     12787	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007be0	      0xb801000000	                              mov eax, 1	     12786	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4007be5	      0x4d635c2420	         movsxd r11, dword [r12 + 0x20] 	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007bea	          0x4863f0	                         movsxd rsi, eax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007bed	        0x4c8d2476	                  lea r12, [rsi + rsi*2]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007bf1	        0x49c1e405	                              shl r12, 5	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007bf5	        0x4b8d345b	                  lea rsi, [r11 + r11*2]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007bf9	          0x4c89da	                            mov rdx, r11	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007bfc	        0x48c1e607	                              shl rsi, 7	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007c00	    0x410fb7b43400	             movzx esi, word [r12 + rsi]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007c09	          0x4485d6	                          test esi, r10d	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007c0c	            0x741e	                            je 0x4007c2c	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4007c0e	    0x4181e1000200	                          and r9d, 0x200	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4007c15	     0xf84ad010000	                            je 0x4007dc8	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4007c1b	    0x48630d000000	         movsxd rcx, dword [0x04007c22] 	     12808	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4007c22	      0xbf00020000	                          mov edi, 0x200	     12807	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4007c27	      0xb802000000	                              mov eax, 2	     12806	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4007c2c	     0x93d00000000	              or dword [0x04007c32], edi	     12813	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4007c32	    0xc7048d000000	                    mov dword [rcx*4], 0	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4007c3d	      0xe901fdffff	                           jmp 0x4007943	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4007c42	    0x49817c242800	               cmp qword [r12 + 0x28], 0	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007c4b	    0x48c784249000	               mov qword [rsp + 0x90], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007c57	    0x48c784249800	               mov qword [rsp + 0x98], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007c63	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007c6f	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007c7b	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007c87	     0xf8417060000	                            je 0x40082a4	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007c8d	    0x8b0500000000	            mov eax, dword [0x04007c93] 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c93	    0x8b1500000000	            mov edx, dword [0x04007c99] 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c99	    0x890500000000	            mov dword [0x04007c9f], eax 	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c9f	    0x891500000000	            mov dword [0x04007ca5], edx 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007ca5	    0x488b05000000	            mov rax, qword [0x04007cac] 	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cac	    0x488b15000000	            mov rdx, qword [0x04007cb3] 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cb3	    0x488905000000	            mov qword [0x04007cba], rax 	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cba	    0x488915000000	            mov qword [0x04007cc1], rdx 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cc1	    0x8b0500000000	            mov eax, dword [0x04007cc7] 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cc7	    0x8b1500000000	            mov edx, dword [0x04007ccd] 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007ccd	    0x890500000000	            mov dword [0x04007cd3], eax 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cd3	    0x891500000000	            mov dword [0x04007cd9], edx 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cd9	    0x890500000000	            mov dword [0x04007cdf], eax 	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cdf	    0x488b15000000	            mov rdx, qword [0x04007ce6] 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007ce6	    0x488b05000000	            mov rax, qword [0x04007ced] 	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007ced	    0x488915000000	            mov qword [0x04007cf4], rdx 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cf4	      0xba00000000	                              mov edx, 0	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007cf9	    0x488905000000	            mov qword [0x04007d00], rax 	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007d00	      0xe9dcf3ffff	                           jmp 0x40070e1	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007d05	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007d0a	      0xbe00000000	                              mov esi, 0	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007d0f	            0x31c0	                            xor eax, eax	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007d11	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007d15	            0xff13	                        call qword [rbx]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007d17	      0xb80f000000	                            mov eax, 0xf	     13523	i386-dis.c	FUNCTION_10	IF_49
0x4007d1c	      0xe955e8ffff	                           jmp 0x4006576	     13523	i386-dis.c	FUNCTION_10	IF_49
0x4007d21	        0x80780536	                cmp byte [rax + 5], 0x36	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4007d25	     0xf8507e6ffff	                           jne 0x4006332	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4007d2b	    0x83a424e80000	      and dword [rsp + 0xe8], 0xfffffffd	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4007d33	      0xe9fae5ffff	                           jmp 0x4006332	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4007d38	        0x488d7004	                      lea rsi, [rax + 4]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d3c	      0x488b442408	                mov rax, qword [rsp + 8]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d41	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d45	          0x483b30	                    cmp rsi, qword [rax]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d48	            0x7624	                           jbe 0x4007d6e	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d4a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d4f	      0x448944244c	             mov dword [rsp + 0x4c], r8d	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d54	        0x89542448	             mov dword [rsp + 0x48], edx	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d58	      0xe8739effff	                     call sym.fetch_data	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d5d	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d62	    0x4c8b0d000000	              mov r9, qword [0x04007d69]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d69	      0x448b44244c	            mov r8d, dword [rsp + 0x4c] 	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d6e	        0x410fb601	                    movzx eax, byte [r9]	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d72	      0xe962f8ffff	                           jmp 0x40075d9	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4007d77	         0xfb64801	               movzx ecx, byte [rax + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007d7b	          0xc0e903	                               shr cl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007d7e	            0xf7d1	                                 not ecx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007d80	          0x83e10f	                            and ecx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007d83	    0x833d00000000	               cmp dword [0x04007d8a], 2	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4007d8a	    0x890d00000000	            mov dword [0x04007d90], ecx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4007d90	     0xf857cfaffff	                           jne 0x4007812	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4007d96	      0xe980faffff	                           jmp 0x400781b	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4007d9b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007da0	      0x4489442444	             mov dword [rsp + 0x44], r8d	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007da5	      0xe8269effff	                     call sym.fetch_data	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007daa	    0x488b05000000	            mov rax, qword [0x04007db1] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007db1	      0x448b442444	            mov r8d, dword [rsp + 0x44] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007db6	      0xe983f8ffff	                           jmp 0x400763e	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4007dbb	            0x85c0	                           test eax, eax	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007dbd	     0xf85e5f1ffff	                           jne 0x4006fa8	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007dc3	      0x4963542420	         movsxd rdx, dword [r12 + 0x20] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007dc8	            0x31c0	                            xor eax, eax	     12758	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007dca	      0xe974fbffff	                           jmp 0x4007943	     12758	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4007dcf	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4007dd4	      0x4489442450	             mov dword [rsp + 0x50], r8d	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4007dd9	      0xe8f29dffff	                     call sym.fetch_data	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4007dde	    0x488b05000000	            mov rax, qword [0x04007de5] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4007de5	      0x448b442450	            mov r8d, dword [rsp + 0x50] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4007dea	      0xe912f7ffff	                           jmp 0x4007501	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x4007def	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007df4	      0x448944245c	             mov dword [rsp + 0x5c], r8d	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007df9	      0xe8d29dffff	                     call sym.fetch_data	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007dfe	    0x488b05000000	            mov rax, qword [0x04007e05] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007e05	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007e0a	      0xe902f4ffff	                           jmp 0x4007211	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4007e0f	            0x31c0	                            xor eax, eax	     12842	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4007e11	      0xe9a0f6ffff	                           jmp 0x40074b6	     12842	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4007e16	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007e1b	      0x4489442438	             mov dword [rsp + 0x38], r8d	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007e20	      0xe8ab9dffff	                     call sym.fetch_data	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007e25	    0x488b05000000	            mov rax, qword [0x04007e2c] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007e2c	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007e31	      0xe955f9ffff	                           jmp 0x400778b	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4007e36	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007e3b	      0x4489442434	             mov dword [rsp + 0x34], r8d	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007e40	      0xe88b9dffff	                     call sym.fetch_data	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007e45	    0x488b05000000	            mov rax, qword [0x04007e4c] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007e4c	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007e51	      0xe933fbffff	                           jmp 0x4007989	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x4007e56	    0x8b0500000000	            mov eax, dword [0x04007e5c] 	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4007e5c	            0x85c0	                           test eax, eax	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4007e5e	     0xf847bf5ffff	                            je 0x40073df	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4007e64	    0xc70500000000	          mov dword [0x04007e6e], 0x200 	     13128	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007e6e	      0xe996f5ffff	                           jmp 0x4007409	     13128	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4007e73	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007e78	          0x4489ee	                           mov esi, r13d	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007e7b	    0x41be01000000	                             mov r14d, 1	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007e81	      0xe87ac0ffff	                        call sym.get_sib	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007e86	      0x498d542408	                      lea rdx, [r12 + 8]	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007e8b	      0xb900000000	                              mov ecx, 0	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007e90	      0xb805000000	                              mov eax, 5	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007e95	    0x48890d000000	            mov qword [0x04007e9c], rcx 	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007e9c	          0x4429f0	                           sub eax, r14d	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007e9f	    0x890500000000	            mov dword [0x04007ea5], eax 	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007ea5	          0x488b02	                    mov rax, qword [rdx]	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007ea8	          0x4885c0	                           test rax, rax	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007eab	            0x741c	                            je 0x4007ec9	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007ead	      0x48894c2470	             mov qword [rsp + 0x70], rcx	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007eb2	          0x8b7a08	                mov edi, dword [rdx + 8]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007eb5	          0x4489ee	                           mov esi, r13d	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007eb8	      0x4889542468	             mov qword [rsp + 0x68], rdx	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007ebd	            0xffd0	                                call rax	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007ebf	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007ec4	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x4007ec9	        0x4183fe01	                             cmp r14d, 1	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x4007ecd	     0xf845f040000	                            je 0x4008332	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x4007ed3	        0x4183fe05	                             cmp r14d, 5	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007ed7	     0xf8407ecffff	                            je 0x4006ae4	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007edd	        0x4883c164	                           add rcx, 0x64	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007ee1	        0x4883c210	                           add rdx, 0x10	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007ee5	        0x4183c601	                             add r14d, 1	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007ee9	            0xeba5	                           jmp 0x4007e90	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007eeb	        0x80780536	                cmp byte [rax + 5], 0x36	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4007eef	     0xf853de4ffff	                           jne 0x4006332	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4007ef5	    0x83a424e80000	      and dword [rsp + 0xe8], 0xfffffffe	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4007efd	      0xe930e4ffff	                           jmp 0x4006332	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4007f02	      0xbe01000000	                              mov esi, 1	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007f07	    0x41be01000000	                             mov r14d, 1	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007f0d	      0xe96ef7ffff	                           jmp 0x4007680	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007f12	      0xbe01000000	                              mov esi, 1	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007f17	    0x41be02000000	                             mov r14d, 2	     12935	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007f1d	      0xe95ef7ffff	                           jmp 0x4007680	     12935	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4007f22	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f27	      0x4489442418	             mov dword [rsp + 0x18], r8d	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f2c	      0xe89f9cffff	                     call sym.fetch_data	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f31	    0x488b3d000000	            mov rdi, qword [0x04007f38] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f38	    0x8b0d00000000	            mov ecx, dword [0x04007f3e] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f3e	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f43	      0xe9b2fbffff	                           jmp 0x4007afa	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f48	      0x4963542420	         movsxd rdx, dword [r12 + 0x20] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f4d	      0xe9bcfcffff	                           jmp 0x4007c0e	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f52	    0x488bbe000000	                    mov rdi, qword [rsi]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f59	      0xe9caf4ffff	                           jmp 0x4007428	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007f5e	    0x48c784249000	               mov qword [rsp + 0x90], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007f6a	    0x48c784249800	               mov qword [rsp + 0x98], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007f76	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007f82	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007f8e	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007f9a	      0xe9eefcffff	                           jmp 0x4007c8d	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007f9f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fa4	      0x4489442440	             mov dword [rsp + 0x40], r8d	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fa9	        0x8954243c	             mov dword [rsp + 0x3c], edx	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fad	      0xe81e9cffff	                     call sym.fetch_data	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fb2	    0x488b3d000000	            mov rdi, qword [0x04007fb9] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fb9	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fbe	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fc2	      0xe9eff8ffff	                           jmp 0x40078b6	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x4007fc7	    0x486305000000	         movsxd rax, dword [0x04007fce] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4007fce	            0x85c0	                           test eax, eax	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4007fd0	     0xf882aebffff	                            js 0x4006b00	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4007fd6	    0xc70485000000	                    mov dword [rax*4], 0	     13468	i386-dis.c	FUNCTION_10	IF_42
0x4007fe1	      0xe91aebffff	                           jmp 0x4006b00	     13468	i386-dis.c	FUNCTION_10	IF_42
0x4007fe6	    0x41be02000000	                             mov r14d, 2	     13053	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007fec	      0xe96ff2ffff	                           jmp 0x4007260	     13053	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007ff1	    0x41be01000000	                             mov r14d, 1	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007ff7	      0xe964f2ffff	                           jmp 0x4007260	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4007ffc	    0xc70500000000	           mov dword [0x04008006], 0xf3 	     13003	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4008006	      0xe965f5ffff	                           jmp 0x4007570	     13003	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400800b	    0x41be01000000	                             mov r14d, 1	     12871	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4008011	      0xe9baf7ffff	                           jmp 0x40077d0	     12871	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4008016	    0xc70500000000	           mov dword [0x04008020], 0xf2 	     13006	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4008020	      0xe94bf5ffff	                           jmp 0x4007570	     13006	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4008025	    0x41be02000000	                             mov r14d, 2	     12874	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400802b	      0xe9a0f7ffff	                           jmp 0x40077d0	     12874	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4008030	    0xc70500000000	           mov dword [0x0400803a], 0xf2 	     13080	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400803a	      0xe997f2ffff	                           jmp 0x40072d6	     13080	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400803f	    0xc70500000000	           mov dword [0x04008049], 0xf3 	     13077	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4008049	      0xe988f2ffff	                           jmp 0x40072d6	     13077	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400804e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4008053	      0x4489442458	             mov dword [rsp + 0x58], r8d	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4008058	        0x89542454	             mov dword [rsp + 0x54], edx	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400805c	      0xe86f9bffff	                     call sym.fetch_data	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4008061	    0x488b3d000000	            mov rdi, qword [0x04008068] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4008068	      0x448b442458	            mov r8d, dword [rsp + 0x58] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400806d	      0x4863542454	         movsxd rdx, dword [rsp + 0x54] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4008072	      0xe95ff5ffff	                           jmp 0x40075d6	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4008077	    0xc70500000000	           mov dword [0x04008081], 0xf3 	     12898	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4008081	      0xe9d8f7ffff	                           jmp 0x400785e	     12898	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4008086	    0xc70500000000	           mov dword [0x04008090], 0xf2 	     12901	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4008090	      0xe9c9f7ffff	                           jmp 0x400785e	     12901	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4008095	    0xc70500000000	          mov dword [0x0400809f], 0x100 	     13125	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400809f	      0xe965f3ffff	                           jmp 0x4007409	     13125	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x40080a4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080a9	      0x4489442464	             mov dword [rsp + 0x64], r8d	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080ae	        0x894c2460	             mov dword [rsp + 0x60], ecx	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080b2	      0xe8199bffff	                     call sym.fetch_data	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080b7	    0x488b3d000000	            mov rdi, qword [0x040080be] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080be	      0x448b442464	            mov r8d, dword [rsp + 0x64] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080c3	      0x48634c2460	         movsxd rcx, dword [rsp + 0x60] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080c8	      0xe9ddf2ffff	                           jmp 0x40073aa	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x40080cd	          0x4084ff	                           test dil, dil	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40080d0	     0xf84def5ffff	                            je 0x40076b4	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40080d6	          0x83ca08	                               or edx, 8	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40080d9	    0x891500000000	            mov dword [0x040080df], edx 	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40080df	      0xe9d0f5ffff	                           jmp 0x40076b4	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40080e4	    0xc70500000000	           mov dword [0x040080ee], 0xf2 	     12965	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40080ee	      0xe916f6ffff	                           jmp 0x4007709	     12965	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40080f3	    0xc70500000000	           mov dword [0x040080fd], 0xf3 	     12962	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x40080fd	      0xe907f6ffff	                           jmp 0x4007709	     12962	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4008102	        0x80780532	                cmp byte [rax + 5], 0x32	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4008106	     0xf8526e2ffff	                           jne 0x4006332	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400810c	      0xe91afcffff	                           jmp 0x4007d2b	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4008111	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x4008116	          0x4489ee	                           mov esi, r13d	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x4008119	      0xe8e2bdffff	                        call sym.get_sib	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x400811e	    0x833d00000000	               cmp dword [0x04008125], 3	     13920	i386-dis.c	FUNCTION_13	IF_1
0x4008125	    0x4c8b0d000000	              mov r9, qword [0x0400812c]	     13918	i386-dis.c	FUNCTION_13
0x400812c	      0x410fb649ff	                movzx ecx, byte [r9 - 1]	     13918	i386-dis.c	FUNCTION_13
0x4008131	     0xf85a9010000	                           jne 0x40082e0	     13920	i386-dis.c	FUNCTION_13	IF_1
0x4008137	    0x803d00000000	                cmp byte [0x0400813e], 0	     13931	i386-dis.c	FUNCTION_13
0x400813e	     0xf8464eeffff	                            je 0x4006fa8	     13931	i386-dis.c	FUNCTION_13
0x4008144	        0x498d4101	                       lea rax, [r9 + 1]	     13932	i386-dis.c	FUNCTION_13
0x4008148	        0x440fb6f1	                          movzx r14d, cl	     13934	i386-dis.c	FUNCTION_13
0x400814c	    0x486315000000	         movsxd rdx, dword [0x04008153] 	     13934	i386-dis.c	FUNCTION_13
0x4008153	    0x488905000000	            mov qword [0x0400815a], rax 	     13932	i386-dis.c	FUNCTION_13
0x400815a	    0x418d8628ffff	                   lea eax, [r14 - 0xd8]	     13934	i386-dis.c	FUNCTION_13
0x4008161	        0x89442410	             mov dword [rsp + 0x10], eax	     13934	i386-dis.c	FUNCTION_13
0x4008165	            0x4898	                                    cdqe	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4008167	          0x4989d6	                            mov r14, rdx	     13934	i386-dis.c	FUNCTION_13
0x400816a	        0x488d0440	                  lea rax, [rax + rax*2]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400816e	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4008172	        0x48c1e008	                              shl rax, 8	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4008176	        0x48c1e205	                              shl rdx, 5	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400817a	          0x4801c2	                            add rdx, rax	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400817d	    0x488bba000000	                    mov rdi, qword [rdx]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4008184	          0x4885ff	                           test rdi, rdi	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4008187	     0xf8441020000	                            je 0x40083ce	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400818d	          0x4489ee	                           mov esi, r13d	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x4008190	      0x4889542428	             mov qword [rsp + 0x28], rdx	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x4008195	      0xe86680ffff	                          call sym.putop	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400819a	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400819f	    0x48c705000000	               mov qword [0x040081aa], 0	     13947	i386-dis.c	FUNCTION_13	ELSE_1
0x40081aa	    0xc70500000000	               mov dword [0x040081b4], 2	     13948	i386-dis.c	FUNCTION_13	ELSE_1
0x40081b4	    0x4881c2000000	                              add rdx, 0	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40081bb	        0x488b4208	                mov rax, qword [rdx + 8]	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40081bf	          0x4885c0	                           test rax, rax	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40081c2	            0x7408	                            je 0x40081cc	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40081c4	          0x4489ee	                           mov esi, r13d	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40081c7	          0x8b7a10	            mov edi, dword [rdx + 0x10] 	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40081ca	            0xffd0	                                call rax	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40081cc	          0x4963c6	                        movsxd rax, r14d	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40081cf	      0x4c63742410	         movsxd r14, dword [rsp + 0x10] 	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40081d4	    0x48c705000000	               mov qword [0x040081df], 0	     13952	i386-dis.c	FUNCTION_13	ELSE_1
0x40081df	        0x488d1440	                  lea rdx, [rax + rax*2]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40081e3	    0xc70500000000	               mov dword [0x040081ed], 1	     13953	i386-dis.c	FUNCTION_13	ELSE_1
0x40081ed	        0x48c1e205	                              shl rdx, 5	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40081f1	        0x4b8d0476	                  lea rax, [r14 + r14*2]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40081f5	        0x48c1e008	                              shl rax, 8	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x40081f9	    0x488d94020000	                    lea rdx, [rdx + rax]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4008201	        0x488b4218	            mov rax, qword [rdx + 0x18] 	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4008205	          0x4885c0	                           test rax, rax	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4008208	     0xf84d6e8ffff	                            je 0x4006ae4	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400820e	          0x4489ee	                           mov esi, r13d	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4008211	          0x8b7a20	            mov edi, dword [rdx + 0x20] 	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4008214	            0xffd0	                                call rax	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4008216	      0xe9c9e8ffff	                           jmp 0x4006ae4	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400821b	         0xfb65001	               movzx edx, byte [rax + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400821f	          0x83ce08	                               or esi, 8	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4008222	    0x893500000000	            mov dword [0x04008228], esi 	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4008228	          0xc0ea03	                               shr dl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400822b	            0xf7d2	                                 not edx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400822d	          0x83e20f	                            and edx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4008230	    0x891500000000	            mov dword [0x04008236], edx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4008236	      0xe9e0f5ffff	                           jmp 0x400781b	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400823b	    0x448b05000000	            mov r8d, dword [0x04008242] 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4008242	          0x80cc08	                                or ah, 8	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4008245	        0x4883c201	                              add rdx, 1	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4008249	    0x890500000000	            mov dword [0x0400824f], eax 	     12524	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400824f	    0x448905000000	            mov dword [0x04008256], r8d 	     12528	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4008256	    0x488915000000	            mov qword [0x0400825d], rdx 	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400825d	      0xe94de7ffff	                           jmp 0x40069af	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4008262	      0xb800080000	                          mov eax, 0x800	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4008267	            0xebdc	                           jmp 0x4008245	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4008269	      0x4963542420	         movsxd rdx, dword [r12 + 0x20] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400826e	      0xb802000000	                              mov eax, 2	     12764	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4008273	      0xe9cbf6ffff	                           jmp 0x4007943	     12764	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4008278	    0x41ba02000000	                             mov r10d, 2	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400827e	      0xbf02000000	                              mov edi, 2	     12793	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x4008283	      0xb803000000	                              mov eax, 3	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x4008288	      0xe958f9ffff	                           jmp 0x4007be5	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x400828d	      0x4963542420	         movsxd rdx, dword [r12 + 0x20] 	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x4008292	      0xb803000000	                              mov eax, 3	     12767	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4008297	      0xe9a7f6ffff	                           jmp 0x4007943	     12767	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400829c	          0x4889c2	                            mov rdx, rax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400829f	      0xe9b6edffff	                           jmp 0x400705a	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x40082a4	    0x49817c243800	               cmp qword [r12 + 0x38], 0	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082ad	     0xf85daf9ffff	                           jne 0x4007c8d	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082b3	    0x49837c244800	               cmp qword [r12 + 0x48], 0	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082b9	     0xf85cef9ffff	                           jne 0x4007c8d	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082bf	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	     13544	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082cb	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082d7	      0xe9b1f9ffff	                           jmp 0x4007c8d	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082dc	         0xf1f4000	                         nop dword [rax]	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x40082e0	    0x8b0500000000	            mov eax, dword [0x040082e6] 	     13922	i386-dis.c	FUNCTION_13	IF_1
0x40082e6	          0x4489ee	                           mov esi, r13d	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x40082e9	    0x448db4c840f9	         lea r14d, [rax + rcx*8 - 0x6c0]	     13922	i386-dis.c	FUNCTION_13	IF_1
0x40082f1	          0x4d63f6	                        movsxd r14, r14d	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x40082f4	    0x4a8b3cf50000	                  mov rdi, qword [r14*8]	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x40082fc	      0xe8ff7effff	                          call sym.putop	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x4008301	    0x410fb6be0000	                   movzx edi, byte [r14]	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x4008309	          0x4489ee	                           mov esi, r13d	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400830c	    0x48c705000000	               mov qword [0x04008317], 0	     13925	i386-dis.c	FUNCTION_13	IF_1
0x4008317	    0xc70500000000	               mov dword [0x04008321], 2	     13926	i386-dis.c	FUNCTION_13	IF_1
0x4008321	      0xe82addffff	                           call sym.OP_E	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x4008326	      0xe9b9e7ffff	                           jmp 0x4006ae4	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400832b	            0x31db	                            xor ebx, ebx	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400832d	      0xe952ecffff	                           jmp 0x4006f84	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4008332	    0x8b0500000000	            mov eax, dword [0x04008338] 	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x4008338	            0x85c0	                           test eax, eax	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x400833a	     0xf849dfbffff	                            je 0x4007edd	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x4008340	    0x448b1d000000	           mov r11d, dword [0x04008347] 	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x4008347	          0x4585db	                         test r11d, r11d	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x400834a	            0x745b	                            je 0x40083a7	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x400834c	    0x488b05000000	            mov rax, qword [0x04008353] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008353	    0x41b97b000000	                           mov r9d, 0x7b	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008359	    0x488b35000000	            mov rsi, qword [0x04008360] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4008360	    0x48898c248000	             mov qword [rsp + 0x80], rcx	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4008368	      0x4889542478	             mov qword [rsp + 0x78], rdx	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400836d	        0x66448908	                     mov word [rax], r9w	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4008371	    0x48633d000000	         movsxd rdi, dword [0x04008378] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4008378	        0x488b34fe	            mov rsi, qword [rsi + rdi*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400837c	        0x488d7801	                      lea rdi, [rax + 1]	       117	string3.h	FUNCTION_108	CALL_3
0x4008380	      0xe800000000	                          call 0x4008385	       117	string3.h	FUNCTION_108	CALL_3
0x4008385	    0x41ba7d000000	                          mov r10d, 0x7d	       117	string3.h	FUNCTION_108	CALL_3
0x400838b	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008393	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008398	        0x66448910	                    mov word [rax], r10w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400839c	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40083a0	    0x488905000000	            mov qword [0x040083a7], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40083a7	    0x448b05000000	            mov r8d, dword [0x040083ae] 	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x40083ae	          0x4585c0	                           test r8d, r8d	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x40083b1	     0xf8426fbffff	                            je 0x4007edd	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x40083b7	    0x488b05000000	            mov rax, qword [0x040083be] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40083be	    0xc7007b7a7d00	               mov dword [rax], 0x7d7a7b	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40083c4	      0xe914fbffff	                           jmp 0x4007edd	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40083c9	      0xe800000000	                          call 0x40083ce	     13586	i386-dis.c	FUNCTION_10
0x40083ce	    0x486305000000	         movsxd rax, dword [0x040083d5] 	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083d5	    0x486392000000	                 movsxd rdx, dword [rdx]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083dc	          0x4489ee	                           mov esi, r13d	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083df	        0x884c2433	               mov byte [rsp + 0x33], cl	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083e3	      0x4c894c2420	              mov qword [rsp + 0x20], r9	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083e8	        0x488d04d0	                  lea rax, [rax + rdx*8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083ec	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083f4	      0xe8077effff	                          call sym.putop	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x40083f9	       0xfb64c2433	           movzx ecx, byte [rsp + 0x33] 	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x40083fe	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4008403	          0x80f9df	                            cmp cl, 0xdf	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4008406	     0xf85d8e6ffff	                           jne 0x4006ae4	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400840c	        0x418039e0	                     cmp byte [r9], 0xe0	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4008410	     0xf85cee6ffff	                           jne 0x4006ae4	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4008416	    0x488b05000000	            mov rax, qword [0x0400841d] 	       110	string3.h	FUNCTION_107	CALL_3
0x400841d	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x4008422	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4008427	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_107	CALL_3
0x400842a	      0xe800000000	                          call 0x400842f	       110	string3.h	FUNCTION_107	CALL_3
0x400842f	      0xe9b0e6ffff	                           jmp 0x4006ae4	       110	string3.h	FUNCTION_107	CALL_3
OP_Skip_MODRM	IF,0:CALL,0:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	6
0x40001e0	    0x803d00000000	                cmp byte [0x040001e7], 0	     13908	i386-dis.c	FUNCTION_12
0x40001e7	            0x7409	                            je 0x40001f2	     13908	i386-dis.c	FUNCTION_12
0x40001e9	    0x488305000000	               add qword [0x040001f1], 1	     13909	i386-dis.c	FUNCTION_12
0x40001f1	              0xc3	                                     ret	     13909	i386-dis.c	FUNCTION_12
0x40001f2	              0x50	                                push rax	     13906	i386-dis.c	FUNCTION_12
0x40001f3	      0xe800000000	                          call 0x40001f8	     13908	i386-dis.c	FUNCTION_12
XMM_Fixup	IF,1:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,1:FOR,0	21
0x4002e60	        0x4883ec08	                              sub rsp, 8	     17050	i386-dis.c	FUNCTION_75
0x4002e64	    0x803d00000000	                cmp byte [0x04002e6b], 0	     17053	i386-dis.c	FUNCTION_75	IF_1
0x4002e6b	            0x7423	                            je 0x4002e90	     17053	i386-dis.c	FUNCTION_75	IF_1
0x4002e6d	    0x8b0500000000	            mov eax, dword [0x04002e73] 	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e73	      0x3d80000000	                           cmp eax, 0x80	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e78	            0x7416	                            je 0x4002e90	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e7a	      0x3d00010000	                          cmp eax, 0x100	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e7f	            0x753f	                           jne 0x4002ec0	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e81	    0x488b05000000	            mov rax, qword [0x04002e88] 	     17061	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e88	            0xeb0d	                           jmp 0x4002e97	     17062	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e8a	    0x660f1f440000	                    nop word [rax + rax]	     17062	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002e90	    0x488b05000000	            mov rax, qword [0x04002e97] 	     17068	i386-dis.c	FUNCTION_75	ELSE_1
0x4002e97	          0x4863ff	                         movsxd rdi, edi	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x4002e9a	        0x488b34f8	            mov rsi, qword [rax + rdi*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4002e9e	    0x488b3d000000	            mov rdi, qword [0x04002ea5] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002ea5	      0xe800000000	                          call 0x4002eaa	       117	string3.h	FUNCTION_108	CALL_3
0x4002eaa	    0x488905000000	            mov qword [0x04002eb1], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002eb1	        0x4883c408	                              add rsp, 8	     17070	i386-dis.c	FUNCTION_75
0x4002eb5	              0xc3	                                     ret	     17070	i386-dis.c	FUNCTION_75
0x4002eb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17070	i386-dis.c	FUNCTION_75
0x4002ec0	      0xe800000000	                          call 0x4002ec5	     17064	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1	CALL_1
CRC32_Fixup	IF,9:CALL,7:functions,0:WHILE,0:ELSE,7:DO,0:SWITCH,1:FOR,0	128
0x40087a0	          0x83ff01	                              cmp edi, 1	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x40087a3	            0x4154	                                push r12	     17074	i386-dis.c	FUNCTION_76
0x40087a5	          0x4189f4	                           mov r12d, esi	     17074	i386-dis.c	FUNCTION_76
0x40087a8	              0x55	                                push rbp	     17074	i386-dis.c	FUNCTION_76
0x40087a9	    0x488b2d000000	            mov rbp, qword [0x040087b0] 	     17076	i386-dis.c	FUNCTION_76
0x40087b0	              0x53	                                push rbx	     17074	i386-dis.c	FUNCTION_76
0x40087b1	            0x89fb	                            mov ebx, edi	     17074	i386-dis.c	FUNCTION_76
0x40087b3	     0xf8447010000	                            je 0x4008900	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x40087b9	          0x83ff04	                              cmp edi, 4	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x40087bc	     0xf84b6000000	                            je 0x4008878	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x40087c2	      0xba05000000	                              mov edx, 5	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40087c7	      0xbe00000000	                              mov esi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40087cc	      0xbf00000000	                              mov edi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40087d1	      0xe800000000	                          call 0x40087d6	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x40087d6	    0x488b3d000000	            mov rdi, qword [0x040087dd] 	       117	string3.h	FUNCTION_108	CALL_3
0x40087dd	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40087e0	      0xe800000000	                          call 0x40087e5	       117	string3.h	FUNCTION_108	CALL_3
0x40087e5	    0x488905000000	            mov qword [0x040087ec], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40087ec	    0x48892d000000	            mov qword [0x040087f3], rbp 	     17106	i386-dis.c	FUNCTION_76
0x40087f3	        0xc6450000	                       mov byte [rbp], 0	     17107	i386-dis.c	FUNCTION_76
0x40087f7	    0x833d00000000	               cmp dword [0x040087fe], 3	     17110	i386-dis.c	FUNCTION_76	IF_5
0x40087fe	     0xf85e4000000	                           jne 0x40088e8	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4008804	    0x803d00000000	                cmp byte [0x0400880b], 0	     17115	i386-dis.c	FUNCTION_76	IF_5
0x400880b	     0xf84d9010000	                            je 0x40089ea	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4008811	    0x8b1500000000	            mov edx, dword [0x04008817] 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4008817	    0x488305000000	               add qword [0x0400881f], 1	     17116	i386-dis.c	FUNCTION_76	IF_5
0x400881f	            0x31c0	                            xor eax, eax	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4008821	          0xf6c201	                              test dl, 1	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4008824	            0x740c	                            je 0x4008832	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4008826	    0x830d00000000	            or dword [0x0400882d], 0x41 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x400882d	      0xb808000000	                              mov eax, 8	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4008832	          0x83fb01	                              cmp ebx, 1	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4008835	     0xf8415010000	                            je 0x4008950	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x400883b	          0x83e208	                              and edx, 8	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x400883e	            0x7470	                            je 0x40088b0	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4008840	     0x30500000000	             add eax, dword [0x04008846]	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4008846	    0x488b15000000	            mov rdx, qword [0x0400884d] 	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x400884d	    0x488b3d000000	            mov rdi, qword [0x04008854] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008854	    0x830d00000000	            or dword [0x0400885b], 0x48 	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x400885b	            0x4898	                                    cdqe	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x400885d	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4008861	      0xe800000000	                          call 0x4008866	       117	string3.h	FUNCTION_108	CALL_3
0x4008866	    0x488905000000	            mov qword [0x0400886d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400886d	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x400886e	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x400886f	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x4008871	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
0x4008872	    0x660f1f440000	                    nop word [rax + rax]	     17141	i386-dis.c	FUNCTION_76
0x4008878	    0x803d00000000	                cmp byte [0x0400887f], 0	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x400887f	     0xf8572ffffff	                           jne 0x40087f7	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4008885	    0xf60500000000	               test byte [0x0400888c], 8	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x400888c	     0xf84fe000000	                            je 0x4008990	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4008892	        0xc6450071	                    mov byte [rbp], 0x71	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4008896	    0x830d00000000	            or dword [0x0400889d], 0x48 	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x400889d	        0x4883c501	                              add rbp, 1	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x40088a1	      0xe946ffffff	                           jmp 0x40087ec	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x40088a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x40088b0	    0xf60500000000	               test byte [0x040088b7], 2	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x40088b7	            0x7467	                            je 0x4008920	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x40088b9	     0x30500000000	             add eax, dword [0x040088bf]	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x40088bf	    0x488b15000000	            mov rdx, qword [0x040088c6] 	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x40088c6	    0x488b3d000000	            mov rdi, qword [0x040088cd] 	       117	string3.h	FUNCTION_108	CALL_3
0x40088cd	            0x4898	                                    cdqe	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x40088cf	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40088d3	      0xe800000000	                          call 0x40088d8	       117	string3.h	FUNCTION_108	CALL_3
0x40088d8	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x40088d9	    0x488905000000	            mov qword [0x040088e0], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40088e0	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x40088e1	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x40088e3	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
0x40088e4	         0xf1f4000	                         nop dword [rax]	     17141	i386-dis.c	FUNCTION_76
0x40088e8	          0x4489e6	                           mov esi, r12d	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40088eb	            0x89df	                            mov edi, ebx	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40088ed	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x40088ee	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x40088ef	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x40088f1	      0xe95ad7ffff	                            jmp sym.OP_E	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x40088f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x4008900	    0x803d00000000	                cmp byte [0x04008907], 0	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4008907	     0xf85eafeffff	                           jne 0x40087f7	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x400890d	        0xc6450062	                    mov byte [rbp], 0x62	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4008911	        0x4883c501	                              add rbp, 1	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4008915	      0xe9d2feffff	                           jmp 0x40087ec	     17085	i386-dis.c	FUNCTION_76	SWITCH_1
0x400891a	    0x660f1f440000	                    nop word [rax + rax]	     17085	i386-dis.c	FUNCTION_76	SWITCH_1
0x4008920	     0x30500000000	             add eax, dword [0x04008926]	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4008926	    0x488b15000000	            mov rdx, qword [0x0400892d] 	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x400892d	    0x488b3d000000	            mov rdi, qword [0x04008934] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008934	            0x4898	                                    cdqe	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4008936	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400893a	      0xe800000000	                          call 0x400893f	       117	string3.h	FUNCTION_108	CALL_3
0x400893f	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x4008940	    0x488905000000	            mov qword [0x04008947], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008947	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x4008948	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x400894a	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
0x400894b	       0xf1f440000	                   nop dword [rax + rax]	     17141	i386-dis.c	FUNCTION_76
0x4008950	     0x30500000000	             add eax, dword [0x04008956]	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4008956	    0x830d00000000	            or dword [0x0400895d], 0x40 	     17122	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x400895d	            0x85d2	                           test edx, edx	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x400895f	            0x4898	                                    cdqe	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4008961	            0x7455	                            je 0x40089b8	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x4008963	    0x488b15000000	            mov rdx, qword [0x0400896a] 	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400896a	    0x488b3d000000	            mov rdi, qword [0x04008971] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008971	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4008975	      0xe800000000	                          call 0x400897a	       117	string3.h	FUNCTION_108	CALL_3
0x400897a	    0x488905000000	            mov qword [0x04008981], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008981	      0xe9e7feffff	                           jmp 0x400886d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008986	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008990	        0x40f6c601	                             test sil, 1	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4008994	            0x754a	                           jne 0x40089e0	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4008996	        0xc6450077	                    mov byte [rbp], 0x77	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x400899a	        0x4883c501	                              add rbp, 1	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x400899e	    0x8b0500000000	            mov eax, dword [0x040089a4] 	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40089a4	      0x2500020000	                          and eax, 0x200	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40089a9	     0x90500000000	              or dword [0x040089af], eax	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40089af	      0xe938feffff	                           jmp 0x40087ec	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40089b4	         0xf1f4000	                         nop dword [rax]	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x40089b8	    0x488b15000000	            mov rdx, qword [0x040089bf] 	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x40089bf	    0x488b3d000000	            mov rdi, qword [0x040089c6] 	       117	string3.h	FUNCTION_108	CALL_3
0x40089c6	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40089ca	      0xe800000000	                          call 0x40089cf	       117	string3.h	FUNCTION_108	CALL_3
0x40089cf	    0x488905000000	            mov qword [0x040089d6], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089d6	      0xe992feffff	                           jmp 0x400886d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089db	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089e0	        0xc645006c	                    mov byte [rbp], 0x6c	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40089e4	        0x4883c501	                              add rbp, 1	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40089e8	            0xebb4	                           jmp 0x400899e	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x40089ea	      0xe800000000	                          call 0x40089ef	     17115	i386-dis.c	FUNCTION_76	IF_5
OP_sI	IF,7:CALL,5:functions,0:WHILE,0:ELSE,4:DO,0:SWITCH,1:FOR,0	90
0x4004af0	              0x55	                                push rbp	     16088	i386-dis.c	FUNCTION_37
0x4004af1	              0x53	                                push rbx	     16088	i386-dis.c	FUNCTION_37
0x4004af2	            0x89f5	                            mov ebp, esi	     16088	i386-dis.c	FUNCTION_37
0x4004af4	            0x89fb	                            mov ebx, edi	     16088	i386-dis.c	FUNCTION_37
0x4004af6	        0x4883ec08	                              sub rsp, 8	     16088	i386-dis.c	FUNCTION_37
0x4004afa	          0x83ff03	                              cmp edi, 3	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004afd	            0x7441	                            je 0x4004b40	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004aff	          0x83ff04	                              cmp edi, 4	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b02	     0xf84c8000000	                            je 0x4004bd0	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b08	          0x83ff01	                              cmp edi, 1	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b0b	            0x7433	                            je 0x4004b40	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b0d	      0xba05000000	                              mov edx, 5	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4004b12	      0xbe00000000	                              mov esi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4004b17	      0xbf00000000	                              mov edi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4004b1c	      0xe800000000	                          call 0x4004b21	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4004b21	    0x488b3d000000	            mov rdi, qword [0x04004b28] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004b28	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4004b2b	      0xe800000000	                          call 0x4004b30	       117	string3.h	FUNCTION_108	CALL_3
0x4004b30	    0x488905000000	            mov qword [0x04004b37], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004b37	        0x4883c408	                              add rsp, 8	     16137	i386-dis.c	FUNCTION_37
0x4004b3b	              0x5b	                                 pop rbx	     16137	i386-dis.c	FUNCTION_37
0x4004b3c	              0x5d	                                 pop rbp	     16137	i386-dis.c	FUNCTION_37
0x4004b3d	              0xc3	                                     ret	     16137	i386-dis.c	FUNCTION_37
0x4004b3e	            0x6690	                                     nop	     16137	i386-dis.c	FUNCTION_37
0x4004b40	    0x488b3d000000	            mov rdi, qword [0x04004b47] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b47	    0x488b05000000	            mov rax, qword [0x04004b4e] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b4e	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b52	        0x488d7001	                      lea rsi, [rax + 1]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b56	          0x483b32	                    cmp rsi, qword [rdx]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b59	     0xf87a1000000	                            ja 0x4004c00	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b5f	    0x488935000000	            mov qword [0x04004b66], rsi 	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b66	           0xfb630	                   movzx esi, byte [rax]	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004b69	    0x488d9600ffff	                  lea rdx, [rsi - 0x100]	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4004b70	          0x4084f6	                           test sil, sil	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4004b73	        0x480f48f2	                          cmovs rsi, rdx	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4004b77	          0x83fb03	                              cmp ebx, 3	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x4004b7a	     0xf8498000000	                            je 0x4004c18	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x4004b80	    0xf60500000000	               test byte [0x04004b87], 8	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4004b87	            0x750c	                           jne 0x4004b95	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4004b89	            0x89f0	                            mov eax, esi	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4004b8b	          0x83e501	                              and ebp, 1	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4004b8e	           0xfb7f6	                           movzx esi, si	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4004b91	        0x480f45f0	                         cmovne rsi, rax	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4004b95	      0xbf00000000	                              mov edi, 0	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x4004b9a	    0xc60500000000	            mov byte [0x04004ba1], 0x24 	     16134	i386-dis.c	FUNCTION_37
0x4004ba1	      0xe87af5ffff	call sym.print_operand_value.constprop.18	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x4004ba6	    0x480fbe350000	           movsx rsi, byte [0x04004bae] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004bae	    0x488b3d000000	            mov rdi, qword [0x04004bb5] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004bb5	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004bbc	      0xe800000000	                          call 0x4004bc1	       117	string3.h	FUNCTION_108	CALL_3
0x4004bc1	    0x488905000000	            mov qword [0x04004bc8], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004bc8	        0x4883c408	                              add rsp, 8	     16137	i386-dis.c	FUNCTION_37
0x4004bcc	              0x5b	                                 pop rbx	     16137	i386-dis.c	FUNCTION_37
0x4004bcd	              0x5d	                                 pop rbp	     16137	i386-dis.c	FUNCTION_37
0x4004bce	              0xc3	                                     ret	     16137	i386-dis.c	FUNCTION_37
0x4004bcf	              0x90	                                     nop	     16137	i386-dis.c	FUNCTION_37
0x4004bd0	          0x83e501	                              and ebp, 1	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4004bd3	            0x7509	                           jne 0x4004bde	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4004bd5	    0xf60500000000	               test byte [0x04004bdc], 8	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4004bdc	            0x7412	                            je 0x4004bf0	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4004bde	      0xe87dd0ffff	                         call sym.get32s	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x4004be3	          0x4889c6	                            mov rsi, rax	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x4004be6	            0xebad	                           jmp 0x4004b95	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x4004be8	     0xf1f84000000	                   nop dword [rax + rax]	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x4004bf0	      0xe8dbd0ffff	                          call sym.get16	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4004bf5	          0x4863f0	                         movsxd rsi, eax	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4004bf8	            0xeb9b	                           jmp 0x4004b95	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4004bfa	    0x660f1f440000	                    nop word [rax + rax]	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4004c00	      0xe8cbcfffff	                     call sym.fetch_data	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004c05	    0x488b05000000	            mov rax, qword [0x04004c0c] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004c0c	        0x488d7001	                      lea rsi, [rax + 1]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004c10	      0xe94affffff	                           jmp 0x4004b5f	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004c15	           0xf1f00	                         nop dword [rax]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4004c18	    0x833d00000000	               cmp dword [0x04004c1f], 2	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4004c1f	            0x7427	                            je 0x4004c48	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4004c21	          0x83e501	                              and ebp, 1	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4004c24	            0x740a	                            je 0x4004c30	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4004c26	            0x89f6	                            mov esi, esi	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4004c28	      0xe968ffffff	                           jmp 0x4004b95	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4004c2d	           0xf1f00	                         nop dword [rax]	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4004c30	    0xf60500000000	               test byte [0x04004c37], 8	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4004c37	            0x75ed	                           jne 0x4004c26	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4004c39	           0xfb7f6	                           movzx esi, si	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x4004c3c	      0xe954ffffff	                           jmp 0x4004b95	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x4004c41	     0xf1f80000000	                         nop dword [rax]	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x4004c48	          0x83e501	                              and ebp, 1	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4004c4b	     0xf8544ffffff	                           jne 0x4004b95	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4004c51	    0xf60500000000	               test byte [0x04004c58], 8	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4004c58	            0x74df	                            je 0x4004c39	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4004c5a	      0xe936ffffff	                           jmp 0x4004b95	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
OP_R	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	6
0x40031f0	    0x803d00000000	                cmp byte [0x040031f7], 0	     16399	i386-dis.c	FUNCTION_49
0x40031f7	            0x740d	                            je 0x4003206	     16399	i386-dis.c	FUNCTION_49
0x40031f9	    0x488305000000	               add qword [0x04003201], 1	     16400	i386-dis.c	FUNCTION_49
0x4003201	      0xe93afdffff	                   jmp sym.OP_E_register	     16401	i386-dis.c	FUNCTION_49	CALL_1
0x4003206	              0x50	                                push rax	     16397	i386-dis.c	FUNCTION_49
0x4003207	      0xe800000000	                          call 0x400320c	     16399	i386-dis.c	FUNCTION_49
OP_DSreg	IF,2:CALL,5:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,1:FOR,0	41
0x4002bd0	              0x55	                                push rbp	     16326	i386-dis.c	FUNCTION_45
0x4002bd1	              0x53	                                push rbx	     16326	i386-dis.c	FUNCTION_45
0x4002bd2	            0x89fd	                            mov ebp, edi	     16326	i386-dis.c	FUNCTION_45
0x4002bd4	            0x89f3	                            mov ebx, esi	     16326	i386-dis.c	FUNCTION_45
0x4002bd6	        0x4883ec08	                              sub rsp, 8	     16326	i386-dis.c	FUNCTION_45
0x4002bda	    0x803d00000000	                cmp byte [0x04002be1], 0	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4002be1	            0x7425	                            je 0x4002c08	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4002be3	    0x488b05000000	            mov rax, qword [0x04002bea] 	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002bea	         0xfb640ff	               movzx eax, byte [rax - 1]	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002bee	            0x3ca5	                            cmp al, 0xa5	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002bf0	            0x745e	                            je 0x4002c50	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002bf2	            0x773c	                            ja 0x4002c30	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002bf4	            0x3c6f	                            cmp al, 0x6f	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002bf6	            0x7540	                           jne 0x4002c38	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002bf8	      0xbf2b000000	                           mov edi, 0x2b	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4002bfd	      0xe8eef8ffff	             call sym.intel_operand_size	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4002c02	    0x660f1f440000	                    nop word [rax + rax]	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4002c08	    0x8b0500000000	            mov eax, dword [0x04002c0e] 	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4002c0e	            0x85c0	                           test eax, eax	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4002c10	            0x750a	                           jne 0x4002c1c	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4002c12	    0xc70500000000	           mov dword [0x04002c1c], 0x20 	     16346	i386-dis.c	FUNCTION_45	IF_2
0x4002c1c	      0xe82ff4ffff	                     call sym.append_seg	     16347	i386-dis.c	FUNCTION_45	CALL_4
0x4002c21	        0x4883c408	                              add rsp, 8	     16349	i386-dis.c	FUNCTION_45
0x4002c25	            0x89de	                            mov esi, ebx	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4002c27	            0x89ef	                            mov edi, ebp	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4002c29	              0x5b	                                 pop rbx	     16349	i386-dis.c	FUNCTION_45
0x4002c2a	              0x5d	                                 pop rbp	     16349	i386-dis.c	FUNCTION_45
0x4002c2b	      0xe970f5ffff	                         jmp sym.ptr_reg	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4002c30	            0x3ca7	                            cmp al, 0xa7	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002c32	            0x741c	                            je 0x4002c50	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002c34	            0x3cad	                            cmp al, 0xad	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002c36	            0x7418	                            je 0x4002c50	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4002c38	            0x89de	                            mov esi, ebx	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4002c3a	      0xbf01000000	                              mov edi, 1	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4002c3f	      0xe8acf8ffff	             call sym.intel_operand_size	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4002c44	            0xebc2	                           jmp 0x4002c08	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4002c46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4002c50	            0x89de	                            mov esi, ebx	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4002c52	      0xbf04000000	                              mov edi, 4	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4002c57	      0xe894f8ffff	             call sym.intel_operand_size	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4002c5c	            0xebaa	                           jmp 0x4002c08	     16338	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
FXSAVE_Fixup	IF,1:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	14
0x4008550	    0xf60500000000	               test byte [0x04008557], 8	     17147	i386-dis.c	FUNCTION_77
0x4008557	            0x7423	                            je 0x400857c	     17147	i386-dis.c	FUNCTION_77
0x4008559	    0x488b05000000	            mov rax, qword [0x04008560] 	     17150	i386-dis.c	FUNCTION_77	IF_1
0x4008560	    0x830d00000000	            or dword [0x04008567], 0x48 	     17147	i386-dis.c	FUNCTION_77
0x4008567	          0xc60036	                    mov byte [rax], 0x36	     17151	i386-dis.c	FUNCTION_77	IF_1
0x400856a	        0x4883c002	                              add rax, 2	     17152	i386-dis.c	FUNCTION_77	IF_1
0x400856e	        0xc640ff34	                mov byte [rax - 1], 0x34	     17152	i386-dis.c	FUNCTION_77	IF_1
0x4008572	          0xc60000	                       mov byte [rax], 0	     17153	i386-dis.c	FUNCTION_77	IF_1
0x4008575	    0x488905000000	            mov qword [0x0400857c], rax 	     17152	i386-dis.c	FUNCTION_77	IF_1
0x400857c	    0x833d00000000	               cmp dword [0x04008583], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4008583	            0x740b	                            je 0x4008590	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4008585	      0xe9c6daffff	                            jmp sym.OP_E	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x400858a	    0x660f1f440000	                    nop word [rax + rax]	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x4008590	      0xe9cb9effff	                           jmp sym.BadOp	     16673	i386-dis.c	FUNCTION_58	CALL_1
NOP_Fixup2	IF,1:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	12
0x40035c0	    0xf60500000000	               test byte [0x040035c7], 2	     16705	i386-dis.c	FUNCTION_61	IF_1
0x40035c7	            0x751f	                           jne 0x40035e8	     16705	i386-dis.c	FUNCTION_61	IF_1
0x40035c9	    0x8b0500000000	            mov eax, dword [0x040035cf] 	     16707	i386-dis.c	FUNCTION_61	IF_1
0x40035cf	            0x85c0	                           test eax, eax	     16706	i386-dis.c	FUNCTION_61	IF_1
0x40035d1	            0x740e	                            je 0x40035e1	     16706	i386-dis.c	FUNCTION_61	IF_1
0x40035d3	          0x83f848	                           cmp eax, 0x48	     16706	i386-dis.c	FUNCTION_61	IF_1
0x40035d6	            0x7409	                            je 0x40035e1	     16706	i386-dis.c	FUNCTION_61	IF_1
0x40035d8	    0x833d00000000	               cmp dword [0x040035df], 2	     16708	i386-dis.c	FUNCTION_61	IF_1
0x40035df	            0x7407	                            je 0x40035e8	     16708	i386-dis.c	FUNCTION_61	IF_1
0x40035e1	            0xf3c3	                                     ret	     16708	i386-dis.c	FUNCTION_61	IF_1
0x40035e3	       0xf1f440000	                   nop dword [rax + rax]	     16708	i386-dis.c	FUNCTION_61	IF_1
0x40035e8	      0xe9c3fdffff	                        jmp sym.OP_IMREG	     16709	i386-dis.c	FUNCTION_61	CALL_1
OP_Vex_2src_2	IF,2:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	18
0x40086c0	    0x8b0500000000	            mov eax, dword [0x040086c6] 	     17491	i386-dis.c	FUNCTION_85	IF_1
0x40086c6	            0x85c0	                           test eax, eax	     17491	i386-dis.c	FUNCTION_85	IF_1
0x40086c8	            0x7546	                           jne 0x4008710	     17491	i386-dis.c	FUNCTION_85	IF_1
0x40086ca	        0x4883ec08	                              sub rsp, 8	     17490	i386-dis.c	FUNCTION_85
0x40086ce	    0x8b0500000000	            mov eax, dword [0x040086d4] 	     17495	i386-dis.c	FUNCTION_85	ELSE_1
0x40086d4	    0x488b3d000000	            mov rdi, qword [0x040086db] 	       117	string3.h	FUNCTION_108	CALL_3
0x40086db	            0x89c2	                            mov edx, eax	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x40086dd	          0x83e207	                              and edx, 7	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x40086e0	    0x833d00000000	               cmp dword [0x040086e7], 2	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x40086e7	        0x480f45c2	                         cmovne rax, rdx	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x40086eb	    0x488b15000000	            mov rdx, qword [0x040086f2] 	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x40086f2	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40086f6	      0xe800000000	                          call 0x40086fb	       117	string3.h	FUNCTION_108	CALL_3
0x40086fb	    0x488905000000	            mov qword [0x04008702], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008702	        0x4883c408	                              add rsp, 8	     17501	i386-dis.c	FUNCTION_85
0x4008706	              0xc3	                                     ret	     17501	i386-dis.c	FUNCTION_85
0x4008707	    0x660f1f840000	                    nop word [rax + rax]	     17501	i386-dis.c	FUNCTION_85
0x4008710	      0xe91bffffff	                     jmp sym.OP_Vex_2src	     17492	i386-dis.c	FUNCTION_85	CALL_1
OP_XMM_Vex	IF,2:CALL,2:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	13
0x4002e20	    0x833d00000000	               cmp dword [0x04002e27], 3	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4002e27	            0x7411	                            je 0x4002e3a	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4002e29	    0x8b0500000000	            mov eax, dword [0x04002e2f] 	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4002e2f	            0x85c0	                           test eax, eax	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4002e31	            0x750d	                           jne 0x4002e40	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4002e33	    0xc60500000000	                mov byte [0x04002e3a], 0	     17588	i386-dis.c	FUNCTION_90	IF_1
0x4002e3a	      0xe9c1feffff	                          jmp sym.OP_XMM	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4002e3f	              0x90	                                     nop	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4002e40	        0x4883ec08	                              sub rsp, 8	     17583	i386-dis.c	FUNCTION_90
0x4002e44	      0xe817f6ffff	                          call sym.BadOp	     17587	i386-dis.c	FUNCTION_90	IF_1	CALL_1
0x4002e49	    0xc60500000000	                mov byte [0x04002e50], 0	     17588	i386-dis.c	FUNCTION_90	IF_1
0x4002e50	        0x4883c408	                              add rsp, 8	     17591	i386-dis.c	FUNCTION_90
0x4002e54	      0xe9a7feffff	                          jmp sym.OP_XMM	     17590	i386-dis.c	FUNCTION_90	CALL_2
fetch_data	IF,3:CALL,1:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,0:FOR,0	45
0x4001bd0	            0x4156	                                push r14	       200	i386-dis.c	FUNCTION_1
0x4001bd2	            0x4155	                                push r13	       200	i386-dis.c	FUNCTION_1
0x4001bd4	          0x4989fd	                            mov r13, rdi	       200	i386-dis.c	FUNCTION_1
0x4001bd7	            0x4154	                                push r12	       200	i386-dis.c	FUNCTION_1
0x4001bd9	              0x55	                                push rbp	       200	i386-dis.c	FUNCTION_1
0x4001bda	          0x4989f4	                            mov r12, rsi	       200	i386-dis.c	FUNCTION_1
0x4001bdd	              0x53	                                push rbx	       200	i386-dis.c	FUNCTION_1
0x4001bde	        0x488b5f68	            mov rbx, qword [rdi + 0x68] 	       202	i386-dis.c	FUNCTION_1
0x4001be2	      0xb8ffffffff	                     mov eax, 0xffffffff	       202	i386-dis.c	FUNCTION_1
0x4001be7	          0x488b33	                    mov rsi, qword [rbx]	       203	i386-dis.c	FUNCTION_1
0x4001bea	        0x4c8d7308	                      lea r14, [rbx + 8]	       203	i386-dis.c	FUNCTION_1
0x4001bee	        0x488d531c	                   lea rdx, [rbx + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4001bf2	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4001bf5	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4001bf8	        0x48037b20	             add rdi, qword [rbx + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4001bfc	          0x4939d4	                            cmp r12, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4001bff	          0x4889fd	                            mov rbp, rdi	       203	i386-dis.c	FUNCTION_1
0x4001c02	            0x761c	                           jbe 0x4001c20	       205	i386-dis.c	FUNCTION_1	IF_1
0x4001c04	          0x4c39f6	                            cmp rsi, r14	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001c07	            0x743e	                            je 0x4001c47	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001c09	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4001c0d	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4001c12	      0xe800000000	                          call 0x4001c17	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4001c17	    0x660f1f840000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4001c20	          0x4c89e2	                            mov rdx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001c23	          0x4c89e9	                            mov rcx, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001c26	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001c29	        0x41ff5570	                 call qword [r13 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001c2d	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4001c2f	            0x7511	                           jne 0x4001c42	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4001c31	          0x4c8923	                    mov qword [rbx], r12	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4001c34	      0xb801000000	                              mov eax, 1	       225	i386-dis.c	FUNCTION_1
0x4001c39	              0x5b	                                 pop rbx	       225	i386-dis.c	FUNCTION_1
0x4001c3a	              0x5d	                                 pop rbp	       225	i386-dis.c	FUNCTION_1
0x4001c3b	            0x415c	                                 pop r12	       225	i386-dis.c	FUNCTION_1
0x4001c3d	            0x415d	                                 pop r13	       225	i386-dis.c	FUNCTION_1
0x4001c3f	            0x415e	                                 pop r14	       225	i386-dis.c	FUNCTION_1
0x4001c41	              0xc3	                                     ret	       225	i386-dis.c	FUNCTION_1
0x4001c42	          0x488b33	                    mov rsi, qword [rbx]	       225	i386-dis.c	FUNCTION_1
0x4001c45	            0xebbd	                           jmp 0x4001c04	       225	i386-dis.c	FUNCTION_1
0x4001c47	          0x4c89ea	                            mov rdx, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001c4a	          0x4889ee	                            mov rsi, rbp	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001c4d	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001c4f	        0x41ff5578	                 call qword [r13 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001c53	            0xebb4	                           jmp 0x4001c09	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
VPCOM_Fixup	IF,2:CALL,3:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,0:FOR,0	66
0x4004440	              0x53	                                push rbx	     17734	i386-dis.c	FUNCTION_94
0x4004441	        0x4883ec10	                           sub rsp, 0x10	     17734	i386-dis.c	FUNCTION_94
0x4004445	    0x488b3d000000	            mov rdi, qword [0x0400444c] 	     17737	i386-dis.c	FUNCTION_94
0x400444c	    0x64488b042528	                mov rax, qword fs:[0x28]	     17734	i386-dis.c	FUNCTION_94
0x4004455	      0x4889442408	                mov qword [rsp + 8], rax	     17734	i386-dis.c	FUNCTION_94
0x400445a	            0x31c0	                            xor eax, eax	     17734	i386-dis.c	FUNCTION_94
0x400445c	    0x488b05000000	            mov rax, qword [0x04004463] 	     17737	i386-dis.c	FUNCTION_94
0x4004463	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17737	i386-dis.c	FUNCTION_94
0x4004467	        0x488d7001	                      lea rsi, [rax + 1]	     17737	i386-dis.c	FUNCTION_94
0x400446b	          0x483b32	                    cmp rsi, qword [rdx]	     17737	i386-dis.c	FUNCTION_94
0x400446e	     0xf8794000000	                            ja 0x4004508	     17737	i386-dis.c	FUNCTION_94
0x4004474	           0xfb600	                   movzx eax, byte [rax]	     17738	i386-dis.c	FUNCTION_94
0x4004477	    0x488935000000	            mov qword [0x0400447e], rsi 	     17738	i386-dis.c	FUNCTION_94
0x400447e	          0x83f807	                              cmp eax, 7	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x4004481	          0x4889c6	                            mov rsi, rax	     17738	i386-dis.c	FUNCTION_94
0x4004484	     0xf8796000000	                            ja 0x4004520	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x400448a	    0x488b15000000	            mov rdx, qword [0x04004491] 	     17742	i386-dis.c	FUNCTION_94	IF_1
0x4004491	         0xfb64afe	               movzx ecx, byte [rdx - 2]	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004495	          0x80f96d	                            cmp cl, 0x6d	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004498	     0xf84c2000000	                            je 0x4004560	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400449e	        0x488d7afe	                      lea rdi, [rdx - 2]	     17742	i386-dis.c	FUNCTION_94	IF_1
0x40044a2	          0x880c24	                      mov byte [rsp], cl	     17753	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x40044a5	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x40044a9	      0xc644240200	                   mov byte [rsp + 2], 0	     17755	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x40044ae	        0x88542401	                  mov byte [rsp + 1], dl	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x40044b2	            0x89c0	                            mov eax, eax	     17758	i386-dis.c	FUNCTION_94	IF_1
0x40044b4	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x40044b7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40044bc	        0x48c1e004	                              shl rax, 4	     17758	i386-dis.c	FUNCTION_94	IF_1
0x40044c0	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x40044c7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40044cc	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_113	CALL_1
0x40044d3	    0x488d98000000	                          lea rbx, [rax]	     17758	i386-dis.c	FUNCTION_94	IF_1
0x40044da	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40044dc	      0xe800000000	                          call 0x40044e1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40044e1	          0x8b4308	                mov eax, dword [rbx + 8]	     17759	i386-dis.c	FUNCTION_94	IF_1
0x40044e4	    0x480105000000	            add qword [0x040044eb], rax 	     17759	i386-dis.c	FUNCTION_94	IF_1
0x40044eb	      0x488b442408	                mov rax, qword [rsp + 8]	     17769	i386-dis.c	FUNCTION_94
0x40044f0	    0x644833042528	                xor rax, qword fs:[0x28]	     17769	i386-dis.c	FUNCTION_94
0x40044f9	            0x757a	                           jne 0x4004575	     17769	i386-dis.c	FUNCTION_94
0x40044fb	        0x4883c410	                           add rsp, 0x10	     17769	i386-dis.c	FUNCTION_94
0x40044ff	              0x5b	                                 pop rbx	     17769	i386-dis.c	FUNCTION_94
0x4004500	              0xc3	                                     ret	     17769	i386-dis.c	FUNCTION_94
0x4004501	     0xf1f80000000	                         nop dword [rax]	     17769	i386-dis.c	FUNCTION_94
0x4004508	      0xe8c3d6ffff	                     call sym.fetch_data	     17737	i386-dis.c	FUNCTION_94
0x400450d	    0x488b05000000	            mov rax, qword [0x04004514] 	     17737	i386-dis.c	FUNCTION_94
0x4004514	        0x488d7001	                      lea rsi, [rax + 1]	     17737	i386-dis.c	FUNCTION_94
0x4004518	      0xe957ffffff	                           jmp 0x4004474	     17737	i386-dis.c	FUNCTION_94
0x400451d	           0xf1f00	                         nop dword [rax]	     17737	i386-dis.c	FUNCTION_94
0x4004520	      0xbf00000000	                              mov edi, 0	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_2
0x4004525	    0xc60500000000	            mov byte [0x0400452c], 0x24 	     17764	i386-dis.c	FUNCTION_94	ELSE_2
0x400452c	      0xe8effbffff	call sym.print_operand_value.constprop.18	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_2
0x4004531	    0x480fbe350000	           movsx rsi, byte [0x04004539] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004539	    0x488b3d000000	            mov rdi, qword [0x04004540] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004540	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004547	      0xe800000000	                          call 0x400454c	       117	string3.h	FUNCTION_108	CALL_3
0x400454c	    0xc60500000000	                mov byte [0x04004553], 0	     17767	i386-dis.c	FUNCTION_94	ELSE_2
0x4004553	    0x488905000000	            mov qword [0x0400455a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400455a	            0xeb8f	                           jmp 0x40044eb	     17769	i386-dis.c	FUNCTION_94
0x400455c	         0xf1f4000	                         nop dword [rax]	     17769	i386-dis.c	FUNCTION_94
0x4004560	        0x488d7aff	                      lea rdi, [rdx - 1]	     17747	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004564	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004568	      0xc644240100	                   mov byte [rsp + 1], 0	     17749	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x400456d	          0x881424	                      mov byte [rsp], dl	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004570	      0xe93dffffff	                           jmp 0x40044b2	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004575	      0xe800000000	                          call 0x400457a	     17769	i386-dis.c	FUNCTION_94
OP_D	IF,2:CALL,1:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,0:FOR,0	22
0x4002300	        0x4883ec08	                              sub rsp, 8	     16374	i386-dis.c	FUNCTION_47
0x4002304	          0x4531c0	                            xor r8d, r8d	     16374	i386-dis.c	FUNCTION_47
0x4002307	    0xf60500000000	               test byte [0x0400230e], 4	     16376	i386-dis.c	FUNCTION_47
0x400230e	            0x740d	                            je 0x400231d	     16376	i386-dis.c	FUNCTION_47
0x4002310	    0x830d00000000	            or dword [0x04002317], 0x44 	     16376	i386-dis.c	FUNCTION_47
0x4002317	    0x41b808000000	                              mov r8d, 8	     16378	i386-dis.c	FUNCTION_47	IF_1
0x400231d	    0x440305000000	             add r8d, dword [0x04002324]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002324	    0x803d00000000	                cmp byte [0x0400232b], 0	     16381	i386-dis.c	FUNCTION_47	IF_2
0x400232b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002330	            0x7505	                           jne 0x4002337	     16381	i386-dis.c	FUNCTION_47	IF_2
0x4002332	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002337	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x400233c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002341	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002346	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002348	      0xe800000000	                          call 0x400234d	        33	stdio2.h	FUNCTION_113	CALL_1
0x400234d	    0x488b3d000000	            mov rdi, qword [0x04002354] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002354	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4002359	      0xe800000000	                          call 0x400235e	       117	string3.h	FUNCTION_108	CALL_3
0x400235e	    0x488905000000	            mov qword [0x04002365], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002365	        0x4883c408	                              add rsp, 8	     16386	i386-dis.c	FUNCTION_47
0x4002369	              0xc3	                                     ret	     16386	i386-dis.c	FUNCTION_47
CMP_Fixup	IF,1:CALL,3:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	58
0x40041d0	              0x53	                                push rbx	     16819	i386-dis.c	FUNCTION_63
0x40041d1	        0x4883ec10	                           sub rsp, 0x10	     16819	i386-dis.c	FUNCTION_63
0x40041d5	    0x488b3d000000	            mov rdi, qword [0x040041dc] 	     16822	i386-dis.c	FUNCTION_63
0x40041dc	    0x64488b042528	                mov rax, qword fs:[0x28]	     16819	i386-dis.c	FUNCTION_63
0x40041e5	      0x4889442408	                mov qword [rsp + 8], rax	     16819	i386-dis.c	FUNCTION_63
0x40041ea	            0x31c0	                            xor eax, eax	     16819	i386-dis.c	FUNCTION_63
0x40041ec	    0x488b05000000	            mov rax, qword [0x040041f3] 	     16822	i386-dis.c	FUNCTION_63
0x40041f3	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     16822	i386-dis.c	FUNCTION_63
0x40041f7	        0x488d7001	                      lea rsi, [rax + 1]	     16822	i386-dis.c	FUNCTION_63
0x40041fb	          0x483b32	                    cmp rsi, qword [rdx]	     16822	i386-dis.c	FUNCTION_63
0x40041fe	     0xf87cc000000	                            ja 0x40042d0	     16822	i386-dis.c	FUNCTION_63
0x4004204	           0xfb600	                   movzx eax, byte [rax]	     16823	i386-dis.c	FUNCTION_63
0x4004207	    0x488935000000	            mov qword [0x0400420e], rsi 	     16823	i386-dis.c	FUNCTION_63
0x400420e	          0x83f807	                              cmp eax, 7	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x4004211	          0x4889c6	                            mov rsi, rax	     16823	i386-dis.c	FUNCTION_63
0x4004214	            0x765a	                           jbe 0x4004270	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x4004216	      0xbf00000000	                              mov edi, 0	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_2
0x400421b	    0xc60500000000	            mov byte [0x04004222], 0x24 	     16837	i386-dis.c	FUNCTION_63	ELSE_1
0x4004222	      0xe8f9feffff	call sym.print_operand_value.constprop.18	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_2
0x4004227	    0x480fbe350000	           movsx rsi, byte [0x0400422f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400422f	    0x488b3d000000	            mov rdi, qword [0x04004236] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004236	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x400423d	      0xe800000000	                          call 0x4004242	       117	string3.h	FUNCTION_108	CALL_3
0x4004242	    0xc60500000000	                mov byte [0x04004249], 0	     16840	i386-dis.c	FUNCTION_63	ELSE_1
0x4004249	    0x488905000000	            mov qword [0x04004250], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004250	      0x488b442408	                mov rax, qword [rsp + 8]	     16842	i386-dis.c	FUNCTION_63
0x4004255	    0x644833042528	                xor rax, qword fs:[0x28]	     16842	i386-dis.c	FUNCTION_63
0x400425e	     0xf8581000000	                           jne 0x40042e5	     16842	i386-dis.c	FUNCTION_63
0x4004264	        0x4883c410	                           add rsp, 0x10	     16842	i386-dis.c	FUNCTION_63
0x4004268	              0x5b	                                 pop rbx	     16842	i386-dis.c	FUNCTION_63
0x4004269	              0xc3	                                     ret	     16842	i386-dis.c	FUNCTION_63
0x400426a	    0x660f1f440000	                    nop word [rax + rax]	     16842	i386-dis.c	FUNCTION_63
0x4004270	    0x488b3d000000	            mov rdi, qword [0x04004277] 	     16827	i386-dis.c	FUNCTION_63	IF_1
0x4004277	            0x89c0	                            mov eax, eax	     16831	i386-dis.c	FUNCTION_63	IF_1
0x4004279	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x400427c	        0x48c1e004	                              shl rax, 4	     16831	i386-dis.c	FUNCTION_63	IF_1
0x4004280	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004285	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400428a	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004291	    0x488d98000000	                          lea rbx, [rax]	     16831	i386-dis.c	FUNCTION_63	IF_1
0x4004298	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400429a	         0xfb657fe	               movzx edx, byte [rdi - 2]	     16828	i386-dis.c	FUNCTION_63	IF_1
0x400429e	        0x4883ef02	                              sub rdi, 2	        33	stdio2.h	FUNCTION_113	CALL_1
0x40042a2	          0x881424	                      mov byte [rsp], dl	     16828	i386-dis.c	FUNCTION_63	IF_1
0x40042a5	         0xfb65701	               movzx edx, byte [rdi + 1]	     16829	i386-dis.c	FUNCTION_63	IF_1
0x40042a9	      0xc644240200	                   mov byte [rsp + 2], 0	     16830	i386-dis.c	FUNCTION_63	IF_1
0x40042ae	        0x88542401	                  mov byte [rsp + 1], dl	     16829	i386-dis.c	FUNCTION_63	IF_1
0x40042b2	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x40042b9	      0xe800000000	                          call 0x40042be	        33	stdio2.h	FUNCTION_113	CALL_1
0x40042be	          0x8b4308	                mov eax, dword [rbx + 8]	     16832	i386-dis.c	FUNCTION_63	IF_1
0x40042c1	    0x480105000000	            add qword [0x040042c8], rax 	     16832	i386-dis.c	FUNCTION_63	IF_1
0x40042c8	            0xeb86	                           jmp 0x4004250	     16832	i386-dis.c	FUNCTION_63	IF_1
0x40042ca	    0x660f1f440000	                    nop word [rax + rax]	     16832	i386-dis.c	FUNCTION_63	IF_1
0x40042d0	      0xe8fbd8ffff	                     call sym.fetch_data	     16822	i386-dis.c	FUNCTION_63
0x40042d5	    0x488b05000000	            mov rax, qword [0x040042dc] 	     16822	i386-dis.c	FUNCTION_63
0x40042dc	        0x488d7001	                      lea rsi, [rax + 1]	     16822	i386-dis.c	FUNCTION_63
0x40042e0	      0xe91fffffff	                           jmp 0x4004204	     16822	i386-dis.c	FUNCTION_63
0x40042e5	      0xe800000000	                          call 0x40042ea	     16842	i386-dis.c	FUNCTION_63
OP_Monitor	IF,2:CALL,3:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	50
0x4001ac0	    0x803d00000000	                cmp byte [0x04001ac7], 0	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4001ac7	              0x53	                                push rbx	     16884	i386-dis.c	FUNCTION_66
0x4001ac8	     0xf8593000000	                           jne 0x4001b61	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4001ace	    0x8b0500000000	            mov eax, dword [0x04001ad4] 	     16889	i386-dis.c	FUNCTION_66	IF_1
0x4001ad4	          0x83f802	                              cmp eax, 2	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001ad7	     0xf84b3000000	                            je 0x4001b90	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001add	    0xf60500000000	               test byte [0x04001ae4], 4	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001ae4	    0x488b1d000000	            mov rbx, qword [0x04001aeb] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001aeb	          0x4889da	                            mov rdx, rbx	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001aee	     0xf8484000000	                            je 0x4001b78	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001af4	    0x48630d000000	         movsxd rcx, dword [0x04001afb] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001afb	          0x83f801	                              cmp eax, 1	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001afe	    0xc7048d000000	                    mov dword [rcx*4], 0	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b09	    0x488b0d000000	            mov rcx, qword [0x04001b10] 	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b10	            0x7403	                            je 0x4001b15	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b12	          0x4889d1	                            mov rcx, rdx	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b15	    0x810d00000000	            or dword [0x04001b1f], 0x400	     16901	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b1f	          0x488b31	                    mov rsi, qword [rcx]	       110	string3.h	FUNCTION_107	CALL_3
0x4001b22	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x4001b27	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001b2c	      0xe800000000	                          call 0x4001b31	       110	string3.h	FUNCTION_107	CALL_3
0x4001b31	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x4001b35	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_107	CALL_3
0x4001b3a	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001b3f	      0xe800000000	                          call 0x4001b44	       110	string3.h	FUNCTION_107	CALL_3
0x4001b44	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       110	string3.h	FUNCTION_107	CALL_3
0x4001b48	      0xba2c010000	                          mov edx, 0x12c	       110	string3.h	FUNCTION_107	CALL_3
0x4001b4d	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001b52	      0xe800000000	                          call 0x4001b57	       110	string3.h	FUNCTION_107	CALL_3
0x4001b57	    0xc70500000000	               mov dword [0x04001b61], 1	     16906	i386-dis.c	FUNCTION_66	IF_1
0x4001b61	    0x803d00000000	                cmp byte [0x04001b68], 0	     16909	i386-dis.c	FUNCTION_66
0x4001b68	            0x745b	                            je 0x4001bc5	     16909	i386-dis.c	FUNCTION_66
0x4001b6a	    0x488305000000	               add qword [0x04001b72], 1	     16910	i386-dis.c	FUNCTION_66
0x4001b72	              0x5b	                                 pop rbx	     16911	i386-dis.c	FUNCTION_66
0x4001b73	              0xc3	                                     ret	     16911	i386-dis.c	FUNCTION_66
0x4001b74	         0xf1f4000	                         nop dword [rax]	     16911	i386-dis.c	FUNCTION_66
0x4001b78	            0x85c0	                           test eax, eax	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b7a	          0x4889d9	                            mov rcx, rbx	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b7d	    0x480f440d0000	           cmove rcx, qword [0x04001b85]	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b85	            0xeb98	                           jmp 0x4001b1f	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b87	    0x660f1f840000	                    nop word [rax + rax]	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b90	    0xf60500000000	               test byte [0x04001b97], 4	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b97	    0x488b0d000000	            mov rcx, qword [0x04001b9e] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001b9e	          0x4889cb	                            mov rbx, rcx	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001ba1	     0xf8478ffffff	                            je 0x4001b1f	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001ba7	    0x486305000000	         movsxd rax, dword [0x04001bae] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001bae	    0x488b15000000	            mov rdx, qword [0x04001bb5] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001bb5	    0xc70485000000	                    mov dword [rax*4], 0	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001bc0	      0xe94dffffff	                           jmp 0x4001b12	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001bc5	      0xe800000000	                          call 0x4001bca	     16909	i386-dis.c	FUNCTION_66
OP_ESreg	IF,1:CALL,5:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,1:FOR,0	44
0x4002c60	            0x4154	                                push r12	     16302	i386-dis.c	FUNCTION_44
0x4002c62	              0x55	                                push rbp	     16302	i386-dis.c	FUNCTION_44
0x4002c63	          0x4189fc	                           mov r12d, edi	     16302	i386-dis.c	FUNCTION_44
0x4002c66	              0x53	                                push rbx	     16302	i386-dis.c	FUNCTION_44
0x4002c67	     0xfb61d000000	           movzx ebx, byte [0x04002c6e] 	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4002c6e	            0x89f5	                            mov ebp, esi	     16302	i386-dis.c	FUNCTION_44
0x4002c70	            0x84db	                             test bl, bl	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4002c72	            0x741f	                            je 0x4002c93	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4002c74	    0x488b05000000	            mov rax, qword [0x04002c7b] 	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002c7b	         0xfb640ff	               movzx eax, byte [rax - 1]	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002c7f	            0x3ca7	                            cmp al, 0xa7	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002c81	            0x7461	                            je 0x4002ce4	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002c83	            0x773b	                            ja 0x4002cc0	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002c85	            0x3c6d	                            cmp al, 0x6d	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002c87	            0x7557	                           jne 0x4002ce0	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002c89	      0xbf2b000000	                           mov edi, 0x2b	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4002c8e	      0xe85df8ffff	             call sym.intel_operand_size	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4002c93	    0x488b3d000000	            mov rdi, qword [0x04002c9a] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002c9a	        0x480fbef3	                           movsx rsi, bl	       117	string3.h	FUNCTION_108	CALL_3
0x4002c9e	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4002ca5	      0xe800000000	                          call 0x4002caa	       117	string3.h	FUNCTION_108	CALL_3
0x4002caa	              0x5b	                                 pop rbx	     16322	i386-dis.c	FUNCTION_44
0x4002cab	            0x89ee	                            mov esi, ebp	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4002cad	          0x4489e7	                           mov edi, r12d	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4002cb0	    0x488905000000	            mov qword [0x04002cb7], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002cb7	              0x5d	                                 pop rbp	     16322	i386-dis.c	FUNCTION_44
0x4002cb8	            0x415c	                                 pop r12	     16322	i386-dis.c	FUNCTION_44
0x4002cba	      0xe9e1f4ffff	                         jmp sym.ptr_reg	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4002cbf	              0x90	                                     nop	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4002cc0	            0x3cab	                            cmp al, 0xab	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002cc2	            0x7420	                            je 0x4002ce4	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002cc4	            0x3caf	                            cmp al, 0xaf	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002cc6	            0x741c	                            je 0x4002ce4	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002cc8	            0x89ee	                            mov esi, ebp	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4002cca	      0xbf01000000	                              mov edi, 1	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4002ccf	      0xe81cf8ffff	             call sym.intel_operand_size	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4002cd4	            0xebbd	                           jmp 0x4002c93	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4002cd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4002ce0	            0x3ca5	                            cmp al, 0xa5	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002ce2	            0x75e4	                           jne 0x4002cc8	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4002ce4	            0x89ee	                            mov esi, ebp	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4002ce6	      0xbf04000000	                              mov edi, 4	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4002ceb	      0xe800f8ffff	             call sym.intel_operand_size	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4002cf0	            0xeba1	                           jmp 0x4002c93	     16315	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
OP_MMX	IF,2:CALL,1:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	20
0x40023c0	        0x4883ec08	                              sub rsp, 8	     16406	i386-dis.c	FUNCTION_50
0x40023c4	    0x8b0500000000	            mov eax, dword [0x040023ca] 	     16410	i386-dis.c	FUNCTION_50
0x40023ca	    0x8b1500000000	            mov edx, dword [0x040023d0] 	     16407	i386-dis.c	FUNCTION_50
0x40023d0	    0x488b0d000000	            mov rcx, qword [0x040023d7] 	     16419	i386-dis.c	FUNCTION_50	ELSE_1
0x40023d7	      0x2500020000	                          and eax, 0x200	     16410	i386-dis.c	FUNCTION_50
0x40023dc	     0x90500000000	              or dword [0x040023e2], eax	     16410	i386-dis.c	FUNCTION_50
0x40023e2	            0x85c0	                           test eax, eax	     16411	i386-dis.c	FUNCTION_50	IF_1
0x40023e4	            0x741a	                            je 0x4002400	     16411	i386-dis.c	FUNCTION_50	IF_1
0x40023e6	    0xf60500000000	               test byte [0x040023ed], 4	     16414	i386-dis.c	FUNCTION_50	IF_1
0x40023ed	    0x488b0d000000	            mov rcx, qword [0x040023f4] 	     16413	i386-dis.c	FUNCTION_50	IF_1
0x40023f4	            0x740a	                            je 0x4002400	     16414	i386-dis.c	FUNCTION_50	IF_1
0x40023f6	    0x830d00000000	            or dword [0x040023fd], 0x44 	     16414	i386-dis.c	FUNCTION_50	IF_1
0x40023fd	          0x83c208	                              add edx, 8	     16416	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x4002400	          0x4863d2	                         movsxd rdx, edx	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4002403	    0x488b3d000000	            mov rdi, qword [0x0400240a] 	       117	string3.h	FUNCTION_108	CALL_3
0x400240a	        0x488b34d1	            mov rsi, qword [rcx + rdx*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400240e	      0xe800000000	                          call 0x4002413	       117	string3.h	FUNCTION_108	CALL_3
0x4002413	    0x488905000000	            mov qword [0x0400241a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400241a	        0x4883c408	                              add rsp, 8	     16421	i386-dis.c	FUNCTION_50
0x400241e	              0xc3	                                     ret	     16421	i386-dis.c	FUNCTION_50
OP_E_register	IF,10:CALL,5:functions,0:WHILE,0:ELSE,4:DO,0:SWITCH,1:FOR,0	136
0x4002f40	        0x4883ec08	                              sub rsp, 8	     15093	i386-dis.c	FUNCTION_24
0x4002f44	    0x8b1500000000	            mov edx, dword [0x04002f4a] 	     15097	i386-dis.c	FUNCTION_24
0x4002f4a	    0x8b0500000000	            mov eax, dword [0x04002f50] 	     15094	i386-dis.c	FUNCTION_24
0x4002f50	          0xf6c201	                              test dl, 1	     15097	i386-dis.c	FUNCTION_24
0x4002f53	            0x740a	                            je 0x4002f5f	     15097	i386-dis.c	FUNCTION_24
0x4002f55	    0x830d00000000	            or dword [0x04002f5c], 0x41 	     15097	i386-dis.c	FUNCTION_24
0x4002f5c	          0x83c008	                              add eax, 8	     15099	i386-dis.c	FUNCTION_24	IF_1
0x4002f5f	        0x40f6c604	                             test sil, 4	     15101	i386-dis.c	FUNCTION_24	IF_2
0x4002f63	            0x740b	                            je 0x4002f70	     15101	i386-dis.c	FUNCTION_24	IF_2
0x4002f65	          0x83ff26	                           cmp edi, 0x26	     15102	i386-dis.c	FUNCTION_24	IF_2
0x4002f68	            0x761e	                           jbe 0x4002f88	     15102	i386-dis.c	FUNCTION_24	IF_2
0x4002f6a	    0x660f1f440000	                    nop word [rax + rax]	     15102	i386-dis.c	FUNCTION_24	IF_2
0x4002f70	          0x83ff45	                           cmp edi, 0x45	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002f73	     0xf8797010000	                            ja 0x4003110	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002f79	            0x89f9	                            mov ecx, edi	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002f7b	    0xff24cd000000	                       jmp qword [rcx*8]	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002f82	    0x660f1f440000	                    nop word [rax + rax]	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002f88	    0x48b924000000	                movabs rcx, 0x4000000024	     15104	i386-dis.c	FUNCTION_24	IF_2
0x4002f92	        0x480fa3f9	                             bt rcx, rdi	     15104	i386-dis.c	FUNCTION_24	IF_2
0x4002f96	            0x73d8	                           jae 0x4002f70	     15104	i386-dis.c	FUNCTION_24	IF_2
0x4002f98	    0x488b0d000000	            mov rcx, qword [0x04002f9f] 	     13898	i386-dis.c	FUNCTION_11
0x4002f9f	          0xc6012e	                    mov byte [rcx], 0x2e	     13898	i386-dis.c	FUNCTION_11
0x4002fa2	        0xc6410173	                mov byte [rcx + 1], 0x73	     13899	i386-dis.c	FUNCTION_11
0x4002fa6	        0x4883c102	                              add rcx, 2	     13900	i386-dis.c	FUNCTION_11
0x4002faa	    0x48890d000000	            mov qword [0x04002fb1], rcx 	     13900	i386-dis.c	FUNCTION_11
0x4002fb1	            0xebbd	                           jmp 0x4002f70	     13900	i386-dis.c	FUNCTION_11
0x4002fb3	       0xf1f440000	                   nop dword [rax + rax]	     13900	i386-dis.c	FUNCTION_11
0x4002fb8	    0x833d00000000	               cmp dword [0x04002fbf], 2	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4002fbf	      0xbf04000000	                              mov edi, 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002fc4	     0xf84d6010000	                            je 0x40031a0	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x4002fca	          0x83e208	                              and edx, 8	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002fcd	     0xf846d010000	                            je 0x4003140	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002fd3	    0x830d00000000	            or dword [0x04002fda], 0x48 	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x4002fda	    0x488b15000000	            mov rdx, qword [0x04002fe1] 	     15164	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x4002fe1	            0x4898	                                    cdqe	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x4002fe3	    0x488b3d000000	            mov rdi, qword [0x04002fea] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002fea	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4002fee	      0xe800000000	                          call 0x4002ff3	       117	string3.h	FUNCTION_108	CALL_3
0x4002ff3	    0x488905000000	            mov qword [0x04002ffa], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002ffa	        0x4883c408	                              add rsp, 8	     15207	i386-dis.c	FUNCTION_24
0x4002ffe	              0xc3	                                     ret	     15207	i386-dis.c	FUNCTION_24
0x4002fff	              0x90	                                     nop	     15207	i386-dis.c	FUNCTION_24
0x4003000	          0x83f803	                              cmp eax, 3	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x4003003	    0x488b15000000	            mov rdx, qword [0x0400300a] 	     15139	i386-dis.c	FUNCTION_24	SWITCH_1
0x400300a	            0x7ed5	                           jle 0x4002fe1	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x400300c	    0x488b05000000	            mov rax, qword [0x04003013] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003013	      0xba29000000	                           mov edx, 0x29	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003018	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400301e	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003022	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003026	    0x488905000000	            mov qword [0x0400302d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400302d	            0xebcb	                           jmp 0x4002ffa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400302f	              0x90	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003030	    0x833d00000000	               cmp dword [0x04003037], 2	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4003037	      0xbf04000000	                              mov edi, 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x400303c	            0x758c	                           jne 0x4002fca	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400303e	          0x83e601	                              and esi, 1	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4003041	            0x7597	                           jne 0x4002fda	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4003043	          0x83e208	                              and edx, 8	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4003046	            0x7592	                           jne 0x4002fda	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4003048	      0xe923010000	                           jmp 0x4003170	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400304d	           0xf1f00	                         nop dword [rax]	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4003050	          0x83f807	                              cmp eax, 7	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x4003053	            0x7fb7	                            jg 0x400300c	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x4003055	    0x488b15000000	            mov rdx, qword [0x0400305c] 	     15198	i386-dis.c	FUNCTION_24	SWITCH_1
0x400305c	            0xeb83	                           jmp 0x4002fe1	     15199	i386-dis.c	FUNCTION_24	SWITCH_1
0x400305e	            0x6690	                                     nop	     15199	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003060	    0x830d00000000	            or dword [0x04003067], 0x40 	     15111	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003067	            0x85d2	                           test edx, edx	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4003069	    0x488b15000000	            mov rdx, qword [0x04003070] 	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4003070	    0x480f44150000	           cmove rdx, qword [0x04003078]	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4003078	      0xe964ffffff	                           jmp 0x4002fe1	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x400307d	           0xf1f00	                         nop dword [rax]	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4003080	    0x8b0d00000000	            mov ecx, dword [0x04003086] 	     15177	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003086	          0x83f902	                              cmp ecx, 2	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003089	     0xf8429010000	                            je 0x40031b8	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x400308f	    0xf60500000000	               test byte [0x04003096], 4	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4003096	     0xf84e4000000	                            je 0x4003180	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400309c	    0x486315000000	         movsxd rdx, dword [0x040030a3] 	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030a3	          0x83f901	                              cmp ecx, 1	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030a6	    0xc70495000000	                    mov dword [rdx*4], 0	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030b1	    0x488b15000000	            mov rdx, qword [0x040030b8] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030b8	            0x7407	                            je 0x40030c1	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030ba	    0x488b15000000	            mov rdx, qword [0x040030c1] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030c1	    0x810d00000000	            or dword [0x040030cb], 0x400	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030cb	      0xe911ffffff	                           jmp 0x4002fe1	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40030d0	    0x833d00000000	               cmp dword [0x040030d7], 2	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40030d7	    0x488b15000000	            mov rdx, qword [0x040030de] 	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40030de	     0xf85fdfeffff	                           jne 0x4002fe1	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40030e4	      0xe9f1feffff	                           jmp 0x4002fda	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40030e9	     0xf1f80000000	                         nop dword [rax]	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40030f0	    0x488b15000000	            mov rdx, qword [0x040030f7] 	     15118	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40030f7	      0xe9e5feffff	                           jmp 0x4002fe1	     15119	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40030fc	         0xf1f4000	                         nop dword [rax]	     15119	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4003100	    0x488b15000000	            mov rdx, qword [0x04003107] 	     15123	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4003107	      0xe9d5feffff	                           jmp 0x4002fe1	     15124	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x400310c	         0xf1f4000	                         nop dword [rax]	     15124	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4003110	      0xba05000000	                              mov edx, 5	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x4003115	      0xbe00000000	                              mov esi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x400311a	      0xbf00000000	                              mov edi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x400311f	      0xe800000000	                          call 0x4003124	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x4003124	    0x488b3d000000	            mov rdi, qword [0x0400312b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400312b	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x400312e	      0xe800000000	                          call 0x4003133	       117	string3.h	FUNCTION_108	CALL_3
0x4003133	    0x488905000000	            mov qword [0x0400313a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400313a	      0xe9bbfeffff	                           jmp 0x4002ffa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400313f	              0x90	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003140	          0x83e601	                              and esi, 1	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4003143	            0x7423	                            je 0x4003168	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4003145	    0x488b15000000	            mov rdx, qword [0x0400314c] 	     15170	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400314c	    0x8b0d00000000	            mov ecx, dword [0x04003152] 	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4003152	    0x81e100020000	                          and ecx, 0x200	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4003158	     0x90d00000000	              or dword [0x0400315e], ecx	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x400315e	      0xe97efeffff	                           jmp 0x4002fe1	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4003163	       0xf1f440000	                   nop dword [rax + rax]	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4003168	          0x83ef04	                              sub edi, 4	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400316b	          0x83ff01	                              cmp edi, 1	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400316e	            0x77d5	                            ja 0x4003145	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4003170	    0x488b15000000	            mov rdx, qword [0x04003177] 	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x4003177	            0xebd3	                           jmp 0x400314c	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x4003179	     0xf1f80000000	                         nop dword [rax]	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x4003180	            0x85c9	                           test ecx, ecx	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003182	    0x488b15000000	            mov rdx, qword [0x04003189] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003189	    0x480f44150000	           cmove rdx, qword [0x04003191]	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003191	      0xe94bfeffff	                           jmp 0x4002fe1	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4003196	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40031a0	    0x833d00000000	               cmp dword [0x040031a7], 1	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40031a7	     0xf8591feffff	                           jne 0x400303e	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40031ad	      0xe928feffff	                           jmp 0x4002fda	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40031b2	    0x660f1f440000	                    nop word [rax + rax]	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40031b8	    0xf60500000000	               test byte [0x040031bf], 4	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x40031bf	    0x488b15000000	            mov rdx, qword [0x040031c6] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40031c6	     0xf8415feffff	                            je 0x4002fe1	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x40031cc	    0x486315000000	         movsxd rdx, dword [0x040031d3] 	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40031d3	    0xc70495000000	                    mov dword [rdx*4], 0	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40031de	      0xe9d7feffff	                           jmp 0x40030ba	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
OP_LWP_E	IF,2:CALL,1:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	15
0x40024a0	        0x4883ec08	                              sub rsp, 8	     17882	i386-dis.c	FUNCTION_98
0x40024a4	    0x8b0500000000	            mov eax, dword [0x040024aa] 	     17884	i386-dis.c	FUNCTION_98
0x40024aa	    0xf60500000000	               test byte [0x040024b1], 8	     17887	i386-dis.c	FUNCTION_98	IF_1
0x40024b1	    0x488b15000000	            mov rdx, qword [0x040024b8] 	     17887	i386-dis.c	FUNCTION_98	IF_1
0x40024b8	    0x480f44150000	           cmove rdx, qword [0x040024c0]	     17887	i386-dis.c	FUNCTION_98	IF_1
0x40024c0	    0x488b3d000000	            mov rdi, qword [0x040024c7] 	       117	string3.h	FUNCTION_108	CALL_3
0x40024c7	            0x89c1	                            mov ecx, eax	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40024c9	          0x83e107	                              and ecx, 7	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40024cc	    0x833d00000000	               cmp dword [0x040024d3], 2	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40024d3	        0x480f45c1	                         cmovne rax, rcx	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40024d7	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40024db	      0xe800000000	                          call 0x40024e0	       117	string3.h	FUNCTION_108	CALL_3
0x40024e0	    0x488905000000	            mov qword [0x040024e7], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024e7	        0x4883c408	                              add rsp, 8	     17894	i386-dis.c	FUNCTION_98
0x40024eb	              0xc3	                                     ret	     17894	i386-dis.c	FUNCTION_98
OP_E_memory	IF,54:CALL,46:functions,0:WHILE,0:ELSE,15:DO,0:SWITCH,8:FOR,0	876
0x4004ff0	            0x4157	                                push r15	     15211	i386-dis.c	FUNCTION_25
0x4004ff2	            0x4156	                                push r14	     15211	i386-dis.c	FUNCTION_25
0x4004ff4	            0x4155	                                push r13	     15211	i386-dis.c	FUNCTION_25
0x4004ff6	            0x4154	                                push r12	     15211	i386-dis.c	FUNCTION_25
0x4004ff8	              0x55	                                push rbp	     15211	i386-dis.c	FUNCTION_25
0x4004ff9	              0x53	                                push rbx	     15211	i386-dis.c	FUNCTION_25
0x4004ffa	            0x89f5	                            mov ebp, esi	     15211	i386-dis.c	FUNCTION_25
0x4004ffc	            0x89fb	                            mov ebx, edi	     15211	i386-dis.c	FUNCTION_25
0x4004ffe	        0x4883ec48	                           sub rsp, 0x48	     15211	i386-dis.c	FUNCTION_25
0x4005002	    0x448b35000000	           mov r14d, dword [0x04005009] 	     15213	i386-dis.c	FUNCTION_25
0x4005009	          0x4489f2	                           mov edx, r14d	     15213	i386-dis.c	FUNCTION_25
0x400500c	          0x83e201	                              and edx, 1	     15213	i386-dis.c	FUNCTION_25
0x400500f	            0x743f	                            je 0x4005050	     15213	i386-dis.c	FUNCTION_25
0x4005011	    0x8b0d00000000	            mov ecx, dword [0x04005017] 	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4005017	          0x4531e4	                          xor r12d, r12d	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x400501a	    0x41bd08000000	                             mov r13d, 8	     15213	i386-dis.c	FUNCTION_25
0x4005020	            0x85c9	                           test ecx, ecx	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4005022	     0xf84ea010000	                            je 0x4005212	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4005028	    0x8b0d00000000	            mov ecx, dword [0x0400502e] 	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x400502e	            0x85c9	                           test ecx, ecx	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005030	     0xf857a010000	                           jne 0x40051b0	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4005036	          0x8d43f8	                      lea eax, [rbx - 8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005039	          0x83f837	                           cmp eax, 0x37	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x400503c	     0xf875b050000	                            ja 0x400559d	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005042	    0xff24c5000000	                       jmp qword [rax*8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005049	     0xf1f80000000	                         nop dword [rax]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005050	    0x8b0500000000	            mov eax, dword [0x04005056] 	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4005056	          0x4531ed	                          xor r13d, r13d	     15213	i386-dis.c	FUNCTION_25
0x4005059	            0x85c0	                           test eax, eax	     15217	i386-dis.c	FUNCTION_25	IF_1
0x400505b	            0x75cb	                           jne 0x4005028	     15217	i386-dis.c	FUNCTION_25	IF_1
0x400505d	          0x4531e4	                          xor r12d, r12d	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x4005060	    0x440fb63d0000	          movzx r15d, byte [0x04005068] 	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4005068	          0x4584ff	                         test r15b, r15b	     15328	i386-dis.c	FUNCTION_25	IF_8
0x400506b	     0xf85b9010000	                           jne 0x400522a	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4005071	      0xe8dacfffff	                     call sym.append_seg	     15330	i386-dis.c	FUNCTION_25	CALL_5
0x4005076	          0x83e502	                              and ebp, 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005079	     0xf85c2010000	                           jne 0x4005241	     15332	i386-dis.c	FUNCTION_25	IF_9
0x400507f	    0x833d00000000	               cmp dword [0x04005086], 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005086	     0xf84ac020000	                            je 0x4005338	     15332	i386-dis.c	FUNCTION_25	IF_9
0x400508c	    0x8b0500000000	            mov eax, dword [0x04005092] 	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4005092	      0x2500040000	                          and eax, 0x400	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4005097	     0x90500000000	              or dword [0x0400509d], eax	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x400509d	    0x8b0500000000	            mov eax, dword [0x040050a3] 	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050a3	          0x83f801	                              cmp eax, 1	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050a6	          0x4189c5	                           mov r13d, eax	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050a9	     0xf8421090000	                            je 0x40059d0	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050af	          0x83f802	                              cmp eax, 2	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050b2	     0xf84d8050000	                            je 0x4005690	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050b8	            0x31ed	                            xor ebp, ebp	     15212	i386-dis.c	FUNCTION_25
0x40050ba	            0x85c0	                           test eax, eax	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050bc	     0xf8476090000	                            je 0x4005a38	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40050c2	          0x4584ff	                         test r15b, r15b	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x40050c5	    0x448b25000000	           mov r12d, dword [0x040050cc] 	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x40050cc	     0xf853c060000	                           jne 0x400570e	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x40050d2	            0x85c0	                           test eax, eax	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40050d4	     0xf85fe050000	                           jne 0x40056d8	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40050da	    0x448b25000000	           mov r12d, dword [0x040050e1] 	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40050e1	        0x4183fc06	                             cmp r12d, 6	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40050e5	     0xf84ed050000	                            je 0x40056d8	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40050eb	    0x440fb63d0000	          movzx r15d, byte [0x040050f3] 	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x40050f3	          0x4531ed	                          xor r13d, r13d	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40050f6	     0xfb605000000	           movzx eax, byte [0x040050fd] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40050fd	    0x488b3d000000	            mov rdi, qword [0x04005104] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005104	    0x488b0d000000	            mov rcx, qword [0x0400510b] 	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x400510b	        0xc6470100	                   mov byte [rdi + 1], 0	     15584	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400510f	        0x4883c701	                              add rdi, 1	       117	string3.h	FUNCTION_108	CALL_3
0x4005113	          0x8847ff	                  mov byte [rdi - 1], al	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005116	          0x4963c4	                        movsxd rax, r12d	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x4005119	        0x488b34c1	            mov rsi, qword [rcx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400511d	      0xe800000000	                          call 0x4005122	       117	string3.h	FUNCTION_108	CALL_3
0x4005122	          0x4584ff	                         test r15b, r15b	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005125	          0x4889c1	                            mov rcx, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4005128	    0x488905000000	            mov qword [0x0400512f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400512f	            0x7427	                            je 0x4005158	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005131	          0x4885ed	                           test rbp, rbp	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005134	        0x400f95c6	                               setne sil	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005138	          0x4585ed	                         test r13d, r13d	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x400513b	           0xf95c2	                                setne dl	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x400513e	          0x4008d6	                              or sil, dl	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005141	     0xf8549060000	                           jne 0x4005790	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005147	        0x4183fc06	                             cmp r12d, 6	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x400514b	     0xf843f060000	                            je 0x4005790	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005151	     0xf1f80000000	                         nop dword [rax]	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005158	        0x488d4101	                      lea rax, [rcx + 1]	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400515c	        0xc6410100	                   mov byte [rcx + 1], 0	     15606	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005160	    0x488905000000	            mov qword [0x04005167], rax 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005167	     0xfb605000000	           movzx eax, byte [0x0400516e] 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400516e	            0x8801	                      mov byte [rcx], al	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005170	    0x448b1d000000	           mov r11d, dword [0x04005177] 	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4005177	          0x4585db	                         test r11d, r11d	     15619	i386-dis.c	FUNCTION_25	IF_53
0x400517a	            0x7421	                            je 0x400519d	     15619	i386-dis.c	FUNCTION_25	IF_53
0x400517c	    0x448b15000000	           mov r10d, dword [0x04005183] 	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4005183	          0x4585d2	                         test r10d, r10d	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4005186	            0x7415	                            je 0x400519d	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4005188	          0x83fb0d	                            cmp ebx, 0xd	     15622	i386-dis.c	FUNCTION_25	IF_53
0x400518b	          0x8d43ee	                   lea eax, [rbx - 0x12]	     15621	i386-dis.c	FUNCTION_25	IF_53
0x400518e	     0xf84dc030000	                            je 0x4005570	     15622	i386-dis.c	FUNCTION_25	IF_53
0x4005194	          0x83f801	                              cmp eax, 1	     15622	i386-dis.c	FUNCTION_25	IF_53
0x4005197	     0xf86d3030000	                           jbe 0x4005570	     15622	i386-dis.c	FUNCTION_25	IF_53
0x400519d	        0x4883c448	                           add rsp, 0x48	     15661	i386-dis.c	FUNCTION_25
0x40051a1	              0x5b	                                 pop rbx	     15661	i386-dis.c	FUNCTION_25
0x40051a2	              0x5d	                                 pop rbp	     15661	i386-dis.c	FUNCTION_25
0x40051a3	            0x415c	                                 pop r12	     15661	i386-dis.c	FUNCTION_25
0x40051a5	            0x415d	                                 pop r13	     15661	i386-dis.c	FUNCTION_25
0x40051a7	            0x415e	                                 pop r14	     15661	i386-dis.c	FUNCTION_25
0x40051a9	            0x415f	                                 pop r15	     15661	i386-dis.c	FUNCTION_25
0x40051ab	              0xc3	                                     ret	     15661	i386-dis.c	FUNCTION_25
0x40051ac	         0xf1f4000	                         nop dword [rax]	     15661	i386-dis.c	FUNCTION_25
0x40051b0	          0x8d43ee	                   lea eax, [rbx - 0x12]	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x40051b3	          0x83f801	                              cmp eax, 1	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x40051b6	     0xf8604050000	                           jbe 0x40056c0	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x40051bc	          0x83fb0d	                            cmp ebx, 0xd	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x40051bf	     0xf84fb040000	                            je 0x40056c0	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x40051c5	        0x4883c448	                           add rsp, 0x48	     15661	i386-dis.c	FUNCTION_25
0x40051c9	              0x5b	                                 pop rbx	     15661	i386-dis.c	FUNCTION_25
0x40051ca	              0x5d	                                 pop rbp	     15661	i386-dis.c	FUNCTION_25
0x40051cb	            0x415c	                                 pop r12	     15661	i386-dis.c	FUNCTION_25
0x40051cd	            0x415d	                                 pop r13	     15661	i386-dis.c	FUNCTION_25
0x40051cf	            0x415e	                                 pop r14	     15661	i386-dis.c	FUNCTION_25
0x40051d1	            0x415f	                                 pop r15	     15661	i386-dis.c	FUNCTION_25
0x40051d3	      0xe988d2ffff	                           jmp sym.BadOp	     15225	i386-dis.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x40051d8	     0xf1f84000000	                   nop dword [rax + rax]	     15225	i386-dis.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x40051e0	          0x4531e4	                          xor r12d, r12d	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40051e3	          0x8d43ee	                   lea eax, [rbx - 0x12]	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x40051e6	          0x83f801	                              cmp eax, 1	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x40051e9	     0xf8611090000	                           jbe 0x4005b00	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x40051ef	          0x83fb1a	                           cmp ebx, 0x1a	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40051f2	     0xf84c8070000	                            je 0x40059c0	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40051f8	          0x83fb19	                           cmp ebx, 0x19	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x40051fb	     0xf8497080000	                            je 0x4005a98	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005201	          0x83fb1c	                           cmp ebx, 0x1c	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005204	     0xf84760c0000	                            je 0x4005e80	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x400520a	            0x85d2	                           test edx, edx	     15327	i386-dis.c	FUNCTION_25
0x400520c	     0xf844efeffff	                            je 0x4005060	     15327	i386-dis.c	FUNCTION_25
0x4005212	    0x440fb63d0000	          movzx r15d, byte [0x0400521a] 	     15328	i386-dis.c	FUNCTION_25	IF_8
0x400521a	    0x830d00000000	            or dword [0x04005221], 0x41 	     15327	i386-dis.c	FUNCTION_25
0x4005221	          0x4584ff	                         test r15b, r15b	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4005224	     0xf8447feffff	                            je 0x4005071	     15328	i386-dis.c	FUNCTION_25	IF_8
0x400522a	            0x89ee	                            mov esi, ebp	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x400522c	            0x89df	                            mov edi, ebx	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x400522e	      0xe8bdd2ffff	             call sym.intel_operand_size	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4005233	      0xe818ceffff	                     call sym.append_seg	     15330	i386-dis.c	FUNCTION_25	CALL_5
0x4005238	          0x83e502	                              and ebp, 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x400523b	     0xf843efeffff	                            je 0x400507f	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4005241	    0xc74424140000	               mov dword [rsp + 0x14], 0	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005249	    0x488b05000000	            mov rax, qword [0x04005250] 	     15347	i386-dis.c	FUNCTION_25	IF_9
0x4005250	    0x8b2d00000000	            mov ebp, dword [0x04005256] 	     15353	i386-dis.c	FUNCTION_25	IF_9
0x4005256	      0x4889442428	             mov qword [rsp + 0x28], rax	     15347	i386-dis.c	FUNCTION_25	IF_9
0x400525b	    0x488b05000000	            mov rax, qword [0x04005262] 	     15348	i386-dis.c	FUNCTION_25	IF_9
0x4005262	          0x83fd04	                              cmp ebp, 4	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005265	      0x4889442420	             mov qword [rsp + 0x20], rax	     15348	i386-dis.c	FUNCTION_25	IF_9
0x400526a	     0xf8460050000	                            je 0x40057d0	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005270	    0xc74424180000	               mov dword [rsp + 0x18], 0	     15342	i386-dis.c	FUNCTION_25	IF_9
0x4005278	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	     15341	i386-dis.c	FUNCTION_25	IF_9
0x4005280	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     15352	i386-dis.c	FUNCTION_25	IF_9
0x4005288	    0xc74424100000	               mov dword [rsp + 0x10], 0	     15350	i386-dis.c	FUNCTION_25	IF_9
0x4005290	    0x8b0500000000	            mov eax, dword [0x04005296] 	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005296	          0x83f801	                              cmp eax, 1	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005299	     0xf84e9050000	                            je 0x4005888	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x400529f	          0x83f802	                              cmp eax, 2	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40052a2	     0xf84c8050000	                            je 0x4005870	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40052a8	          0x4531f6	                          xor r14d, r14d	     15212	i386-dis.c	FUNCTION_25
0x40052ab	            0x85c0	                           test eax, eax	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40052ad	     0xf844d030000	                            je 0x4005600	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40052b3	          0x4584ff	                         test r15b, r15b	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x40052b6	            0x7519	                           jne 0x40052d1	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x40052b8	    0x448b25000000	           mov r12d, dword [0x040052bf] 	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x40052bf	          0x4585e4	                         test r12d, r12d	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x40052c2	     0xf85670d0000	                           jne 0x400602f	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x40052c8	          0x83fd05	                              cmp ebp, 5	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x40052cb	     0xf845e0d0000	                            je 0x400602f	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x40052d1	            0x31c9	                            xor ecx, ecx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40052d3	    0x41b801000000	                              mov r8d, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40052d9	    0xc74424300000	               mov dword [rsp + 0x30], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40052e1	    0x41bc01000000	                             mov r12d, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40052e7	          0x8d43db	                   lea eax, [rbx - 0x25]	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40052ea	          0x83f801	                              cmp eax, 1	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40052ed	            0x760f	                           jbe 0x40052fe	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40052ef	          0x83fb22	                           cmp ebx, 0x22	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40052f2	            0x740a	                            je 0x40052fe	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40052f4	    0x810d00000000	            or dword [0x040052fe], 0x400	     15465	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40052fe	          0x4585e4	                         test r12d, r12d	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005301	            0x7555	                           jne 0x4005358	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005303	          0x4584ff	                         test r15b, r15b	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005306	     0xf8464feffff	                            je 0x4005170	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400530c	            0x85c9	                           test ecx, ecx	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400530e	     0xf8434060000	                            je 0x4005948	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005314	    0x488b05000000	            mov rax, qword [0x0400531b] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400531b	        0x488d4801	                      lea rcx, [rax + 1]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400531f	    0x48890d000000	            mov qword [0x04005326], rcx 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005326	     0xfb60d000000	           movzx ecx, byte [0x0400532d] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400532d	            0x8808	                      mov byte [rax], cl	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400532f	            0xeb4c	                           jmp 0x400537d	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005331	     0xf1f80000000	                         nop dword [rax]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005338	          0x8d43db	                   lea eax, [rbx - 0x25]	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400533b	          0x83f801	                              cmp eax, 1	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400533e	           0xf97c0	                                 seta al	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005341	            0x31c9	                            xor ecx, ecx	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005343	          0x83fb22	                           cmp ebx, 0x22	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005346	           0xf95c1	                                setne cl	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005349	            0x21c1	                            and ecx, eax	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400534b	        0x894c2414	             mov dword [rsp + 0x14], ecx	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400534f	      0xe9f5feffff	                           jmp 0x4005249	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005354	         0xf1f4000	                         nop dword [rax]	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4005358	    0x488b05000000	            mov rax, qword [0x0400535f] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400535f	     0xfb635000000	           movzx esi, byte [0x04005366] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005366	          0x4584ff	                         test r15b, r15b	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4005369	        0x488d7801	                      lea rdi, [rax + 1]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400536d	          0x408830	                     mov byte [rax], sil	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005370	    0x48893d000000	            mov qword [0x04005377], rdi 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005377	            0x746c	                            je 0x40053e5	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4005379	            0x85c9	                           test ecx, ecx	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x400537b	            0x7468	                            je 0x40053e5	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x400537d	    0x486305000000	         movsxd rax, dword [0x04005384] 	     15836	i386-dis.c	FUNCTION_32
0x4005384	    0x833d00000000	               cmp dword [0x0400538b], 2	     15837	i386-dis.c	FUNCTION_32	IF_1
0x400538b	    0x890485000000	                  mov dword [rax*4], eax	     15836	i386-dis.c	FUNCTION_32
0x4005392	     0xf84a00b0000	                            je 0x4005f38	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4005398	          0x4489f1	                           mov ecx, r14d	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x400539b	    0x48c704c50000	                    mov qword [rax*8], 1	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x40053a7	    0x48890cc50000	                  mov qword [rax*8], rcx	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x40053af	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x40053b4	    0x488b3d000000	            mov rdi, qword [0x040053bb] 	       117	string3.h	FUNCTION_108	CALL_3
0x40053bb	      0xb800000000	                              mov eax, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x40053c0	      0xbe00000000	                              mov esi, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x40053c5	      0x4489442434	             mov dword [rsp + 0x34], r8d	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x40053ca	          0x4585d2	                         test r10d, r10d	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x40053cd	        0x480f45f0	                         cmovne rsi, rax	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x40053d1	      0xe800000000	                          call 0x40053d6	       117	string3.h	FUNCTION_108	CALL_3
0x40053d6	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40053db	          0x4889c7	                            mov rdi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40053de	    0x488905000000	            mov qword [0x040053e5], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40053e5	          0x4585c0	                           test r8d, r8d	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40053e8	          0xc60700	                       mov byte [rdi], 0	     15475	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40053eb	            0x7449	                            je 0x4005436	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x40053ed	          0x4101ed	                           add r13d, ebp	     15410	i386-dis.c	FUNCTION_25	IF_9
0x40053f0	    0x833d00000000	               cmp dword [0x040053f7], 2	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x40053f7	          0x4d63ed	                        movsxd r13, r13d	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x40053fa	     0xf8560040000	                           jne 0x4005860	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005400	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005405	          0x4585c9	                           test r9d, r9d	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005408	     0xf8552040000	                           jne 0x4005860	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400540e	    0x488b05000000	            mov rax, qword [0x04005415] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005415	        0x4a8b34e8	            mov rsi, qword [rax + r13*8]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005419	     0xf1f80000000	                         nop dword [rax]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005420	      0x4489442434	             mov dword [rsp + 0x34], r8d	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005425	      0xe800000000	                          call 0x400542a	       117	string3.h	FUNCTION_108	CALL_3
0x400542a	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400542f	    0x488905000000	            mov qword [0x04005436], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005436	        0x8b742410	            mov esi, dword [rsp + 0x10] 	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x400543a	            0x85f6	                           test esi, esi	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x400543c	     0xf84dd000000	                            je 0x400551f	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x4005442	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005446	         0xb442418	              or eax, dword [rsp + 0x18]	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400544a	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400544e	             0x9c7	                             or edi, eax	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005450	            0x7512	                           jne 0x4005464	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005452	          0x83fd04	                              cmp ebp, 4	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005455	     0xf84c4000000	                            je 0x400551f	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400545b	          0x4585c0	                           test r8d, r8d	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400545e	     0xf84bb000000	                            je 0x400551f	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005464	          0x4584ff	                         test r15b, r15b	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005467	     0xf842b050000	                            je 0x4005998	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400546d	          0x4585c0	                           test r8d, r8d	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005470	    0x488b3d000000	            mov rdi, qword [0x04005477] 	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005477	     0xf851b050000	                           jne 0x4005998	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400547d	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4005481	            0x85c9	                           test ecx, ecx	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4005483	     0xf841f060000	                            je 0x4005aa8	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4005489	    0x833d00000000	               cmp dword [0x04005490], 2	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4005490	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4005495	            0x7519	                           jne 0x40054b0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4005497	        0x8b542414	            mov edx, dword [rsp + 0x14] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x400549b	            0x85d2	                           test edx, edx	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x400549d	            0x7511	                           jne 0x40054b0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x400549f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40054a4	        0x488b34c6	            mov rsi, qword [rsi + rax*8]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40054a8	            0xeb0f	                           jmp 0x40054b9	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40054aa	    0x660f1f440000	                    nop word [rax + rax]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40054b0	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40054b5	        0x488b34c6	            mov rsi, qword [rsi + rax*8]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40054b9	      0xe800000000	                          call 0x40054be	       117	string3.h	FUNCTION_108	CALL_3
0x40054be	        0x488d5001	                      lea rdx, [rax + 1]	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40054c2	       0xfb64c2418	           movzx ecx, byte [rsp + 0x18] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054c7	    0x41b801000000	                              mov r8d, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054cd	        0xc6400100	                   mov byte [rax + 1], 0	     15501	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40054d1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054d6	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054db	    0x488915000000	            mov qword [0x040054e2], rdx 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40054e2	     0xfb615000000	           movzx edx, byte [0x040054e9] 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40054e9	          0x41d3e0	                             shl r8d, cl	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054ec	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054f1	            0x8810	                      mov byte [rax], dl	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40054f3	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054f8	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054fa	      0xe800000000	                          call 0x40054ff	        33	stdio2.h	FUNCTION_113	CALL_1
0x40054ff	    0x488b3d000000	            mov rdi, qword [0x04005506] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005506	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x400550b	      0xe800000000	                          call 0x4005510	       117	string3.h	FUNCTION_108	CALL_3
0x4005510	    0x440fb63d0000	          movzx r15d, byte [0x04005518] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005518	    0x488905000000	            mov qword [0x0400551f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400551f	          0x4584ff	                         test r15b, r15b	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005522	            0x7420	                            je 0x4005544	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005524	          0x4d85f6	                           test r14, r14	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005527	     0xf85c3030000	                           jne 0x40058f0	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400552d	    0x8b0500000000	            mov eax, dword [0x04005533] 	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005533	            0x85c0	                           test eax, eax	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005535	     0xf850d020000	                           jne 0x4005748	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400553b	          0x83fd05	                              cmp ebp, 5	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400553e	     0xf8404020000	                            je 0x4005748	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005544	    0x488b05000000	            mov rax, qword [0x0400554b] 	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400554b	        0x488d5001	                      lea rdx, [rax + 1]	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400554f	        0xc6400100	                   mov byte [rax + 1], 0	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005553	    0x488915000000	            mov qword [0x0400555a], rdx 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400555a	     0xfb615000000	           movzx edx, byte [0x04005561] 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005561	            0x8810	                      mov byte [rax], dl	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005563	      0xe908fcffff	                           jmp 0x4005170	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005568	     0xf1f84000000	                   nop dword [rax + rax]	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005570	    0x448b0d000000	            mov r9d, dword [0x04005577] 	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4005577	          0x4585c9	                           test r9d, r9d	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x400557a	            0x742c	                            je 0x40055a8	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x400557c	    0x8b0500000000	            mov eax, dword [0x04005582] 	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005582	      0x3d00010000	                          cmp eax, 0x100	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005587	            0x7445	                            je 0x40055ce	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005589	      0x3d00020000	                          cmp eax, 0x200	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x400558e	     0xf843c050000	                            je 0x4005ad0	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005594	          0x83c080	             add eax, 0xffffffffffffff80	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005597	     0xf8473060000	                            je 0x4005c10	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x400559d	      0xe800000000	                          call 0x40055a2	     15657	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_46
0x40055a2	    0x660f1f440000	                    nop word [rax + rax]	     15657	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_46
0x40055a8	          0x83f801	                              cmp eax, 1	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40055ab	            0x76cf	                           jbe 0x400557c	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40055ad	    0x8b0500000000	            mov eax, dword [0x040055b3] 	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40055b3	      0x3d00010000	                          cmp eax, 0x100	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40055b8	     0xf8412050000	                            je 0x4005ad0	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40055be	      0x3d00020000	                          cmp eax, 0x200	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40055c3	     0xf8477060000	                            je 0x4005c40	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40055c9	          0x83c080	             add eax, 0xffffffffffffff80	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40055cc	            0x75cf	                           jne 0x400559d	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x40055ce	    0x488b05000000	            mov rax, qword [0x040055d5] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055d5	      0xbf347d0000	                         mov edi, 0x7d34	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055da	    0xc7007b31746f	            mov dword [rax], 0x6f74317b 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055e0	        0x66897804	                  mov word [rax + 4], di	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055e4	        0x4883c006	                              add rax, 6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055e8	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055eb	    0x488905000000	            mov qword [0x040055f2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055f2	      0xe9a6fbffff	                           jmp 0x400519d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055f7	    0x660f1f840000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005600	          0x83fd05	                              cmp ebp, 5	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4005603	     0xf85aafcffff	                           jne 0x40052b3	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4005609	    0x833d00000000	               cmp dword [0x04005610], 2	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005610	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005615	          0x4489f9	                           mov ecx, r15d	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005618	           0xf94c0	                                 sete al	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x400561b	          0x83f101	                              xor ecx, 1	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x400561e	            0x21c1	                            and ecx, eax	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005620	        0x894c2430	             mov dword [rsp + 0x30], ecx	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4005624	      0xe837c6ffff	                         call sym.get32s	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x4005629	          0x4585ff	                         test r15d, r15d	     15441	i386-dis.c	FUNCTION_25	IF_9
0x400562c	          0x4989c6	                            mov r14, rax	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x400562f	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005633	            0x7423	                            je 0x4005658	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005635	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4005639	            0x85c0	                           test eax, eax	     15440	i386-dis.c	FUNCTION_25	IF_9
0x400563b	            0x750d	                           jne 0x400564a	     15440	i386-dis.c	FUNCTION_25	IF_9
0x400563d	    0x833d00000000	               cmp dword [0x04005644], 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005644	     0xf8476080000	                            je 0x4005ec0	     15441	i386-dis.c	FUNCTION_25	IF_9
0x400564a	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	     15444	i386-dis.c	FUNCTION_25	IF_9
0x400564f	          0x4585ff	                         test r15d, r15d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005652	     0xf8538070000	                           jne 0x4005d90	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005658	    0x440fb63d0000	          movzx r15d, byte [0x04005660] 	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005660	          0x4531e4	                          xor r12d, r12d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005663	          0x4584ff	                         test r15b, r15b	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005666	     0xf84cc060000	                            je 0x4005d38	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x400566c	          0x4189cb	                           mov r11d, ecx	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x400566f	    0xc74424300000	               mov dword [rsp + 0x30], 0	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005677	          0x4531c0	                            xor r8d, r8d	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x400567a	      0x440b5c240c	              or r11d, dword [rsp + 0xc]	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x400567f	     0xf8479fcffff	                            je 0x40052fe	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005685	      0xe95dfcffff	                           jmp 0x40052e7	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x400568a	    0x660f1f440000	                    nop word [rax + rax]	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4005690	      0xe83bc6ffff	                          call sym.get16	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_29
0x4005695	          0xf6c480	                           test ah, 0x80	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4005698	          0x4863e8	                         movsxd rbp, eax	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_29
0x400569b	            0x7407	                            je 0x40056a4	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x400569d	    0x4881ed000001	                        sub rbp, 0x10000	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x40056a4	    0x8b0500000000	            mov eax, dword [0x040056aa] 	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x40056aa	    0x440fb63d0000	          movzx r15d, byte [0x040056b2] 	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x40056b2	          0x4189c5	                           mov r13d, eax	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x40056b5	      0xe908faffff	                           jmp 0x40050c2	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x40056ba	    0x660f1f440000	                    nop word [rax + rax]	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x40056c0	          0x8d43f8	                      lea eax, [rbx - 8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056c3	          0x83f837	                           cmp eax, 0x37	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056c6	     0xf87d1feffff	                            ja 0x400559d	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056cc	    0xff24c5000000	                       jmp qword [rax*8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056d3	       0xf1f440000	                   nop dword [rax + rax]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056d8	          0x4889ef	                            mov rdi, rbp	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_30
0x40056db	      0xe8b0e8ffff	call sym.print_displacement.constprop.17	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_30
0x40056e0	    0x488b3d000000	            mov rdi, qword [0x040056e7] 	       117	string3.h	FUNCTION_108	CALL_3
0x40056e7	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40056ec	      0xe800000000	                          call 0x40056f1	       117	string3.h	FUNCTION_108	CALL_3
0x40056f1	    0x440fb63d0000	          movzx r15d, byte [0x040056f9] 	       117	string3.h	FUNCTION_108	CALL_3
0x40056f9	    0x448b2d000000	           mov r13d, dword [0x04005700] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005700	    0x448b25000000	           mov r12d, dword [0x04005707] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005707	    0x488905000000	            mov qword [0x0400570e], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400570e	          0x4585ed	                         test r13d, r13d	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005711	     0xf85dff9ffff	                           jne 0x40050f6	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005717	        0x4183fc06	                             cmp r12d, 6	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400571b	     0xf85d5f9ffff	                           jne 0x40050f6	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005721	          0x4584ff	                         test r15b, r15b	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x4005724	     0xf8446faffff	                            je 0x4005170	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x400572a	    0x448b2d000000	           mov r13d, dword [0x04005731] 	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4005731	          0x4585ed	                         test r13d, r13d	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4005734	     0xf84a1080000	                            je 0x4005fdb	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x400573a	           0xfb7f5	                           movzx esi, bp	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x400573d	      0xe92a020000	                           jmp 0x400596c	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x4005742	    0x660f1f440000	                    nop word [rax + rax]	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x4005748	    0x488b05000000	            mov rax, qword [0x0400574f] 	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400574f	          0x4585e4	                         test r12d, r12d	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x4005752	        0x488d5001	                      lea rdx, [rax + 1]	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005756	          0xc6002b	                    mov byte [rax], 0x2b	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005759	        0xc6400100	                   mov byte [rax + 1], 0	     15512	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400575d	    0x488915000000	            mov qword [0x04005764], rdx 	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005764	     0xf85cc010000	                           jne 0x4005936	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x400576a	          0x4c89f6	                            mov rsi, r14	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x400576d	      0xbf00000000	                              mov edi, 0	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x4005772	      0xe8a9e9ffff	call sym.print_operand_value.constprop.18	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x4005777	    0x488b3d000000	            mov rdi, qword [0x0400577e] 	       117	string3.h	FUNCTION_108	CALL_3
0x400577e	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4005783	      0xe800000000	                          call 0x4005788	       117	string3.h	FUNCTION_108	CALL_3
0x4005788	      0xe9befdffff	                           jmp 0x400554b	       117	string3.h	FUNCTION_108	CALL_3
0x400578d	           0xf1f00	                         nop dword [rax]	       117	string3.h	FUNCTION_108	CALL_3
0x4005790	          0x4885ed	                           test rbp, rbp	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4005793	     0xf8857070000	                            js 0x4005ef0	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4005799	        0x488d5001	                      lea rdx, [rax + 1]	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400579d	          0xc6002b	                    mov byte [rax], 0x2b	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x40057a0	        0xc6400100	                   mov byte [rax + 1], 0	     15592	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x40057a4	    0x488915000000	            mov qword [0x040057ab], rdx 	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x40057ab	          0x4889ef	                            mov rdi, rbp	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_33
0x40057ae	      0xe8dde7ffff	call sym.print_displacement.constprop.17	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_33
0x40057b3	    0x488b3d000000	            mov rdi, qword [0x040057ba] 	       117	string3.h	FUNCTION_108	CALL_3
0x40057ba	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40057bf	      0xe800000000	                          call 0x40057c4	       117	string3.h	FUNCTION_108	CALL_3
0x40057c4	          0x4889c1	                            mov rcx, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40057c7	      0xe98cf9ffff	                           jmp 0x4005158	       117	string3.h	FUNCTION_108	CALL_3
0x40057cc	         0xf1f4000	                         nop dword [rax]	       117	string3.h	FUNCTION_108	CALL_3
0x40057d0	    0x8b0500000000	            mov eax, dword [0x040057d6] 	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40057d6	        0x4183e602	                             and r14d, 2	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40057da	        0x8944241c	             mov dword [rsp + 0x1c], eax	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40057de	            0x740e	                            je 0x40057ee	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40057e0	    0x830d00000000	            or dword [0x040057e7], 0x42 	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40057e7	          0x83c008	                              add eax, 8	     15361	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x40057ea	        0x8944241c	             mov dword [rsp + 0x1c], eax	     15361	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x40057ee	          0x8d43cb	                   lea eax, [rbx - 0x35]	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x40057f1	          0x83f803	                              cmp eax, 3	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x40057f4	     0xf8766020000	                            ja 0x4005a60	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x40057fa	    0x803d00000000	                cmp byte [0x04005801], 0	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x4005801	     0xf8496fdffff	                            je 0x400559d	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x4005807	    0x8b0d00000000	            mov ecx, dword [0x0400580d] 	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x400580d	            0x85c9	                           test ecx, ecx	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x400580f	     0xf85fb020000	                           jne 0x4005b10	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x4005815	    0x8b0500000000	            mov eax, dword [0x0400581b] 	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x400581b	      0x3d00010000	                          cmp eax, 0x100	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005820	     0xf845a070000	                            je 0x4005f80	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005826	      0x3d00020000	                          cmp eax, 0x200	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x400582b	     0xf8437040000	                            je 0x4005c68	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005831	          0x83c080	             add eax, 0xffffffffffffff80	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4005834	     0xf8563fdffff	                           jne 0x400559d	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x400583a	    0x488b05000000	            mov rax, qword [0x04005841] 	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005841	    0xc744240c0100	                mov dword [rsp + 0xc], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005849	      0x4889442428	             mov qword [rsp + 0x28], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x400584e	      0x4889442420	             mov qword [rsp + 0x20], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005853	      0xe916020000	                           jmp 0x4005a6e	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005858	     0xf1f84000000	                   nop dword [rax + rax]	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4005860	    0x488b05000000	            mov rax, qword [0x04005867] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005867	        0x4a8b34e8	            mov rsi, qword [rax + r13*8]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400586b	      0xe9b0fbffff	                           jmp 0x4005420	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005870	      0xe8ebc3ffff	                         call sym.get32s	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x4005875	    0x440fb63d0000	          movzx r15d, byte [0x0400587d] 	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x400587d	          0x4989c6	                            mov r14, rax	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x4005880	      0xe92efaffff	                           jmp 0x40052b3	     15433	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005885	           0xf1f00	                         nop dword [rax]	     15433	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005888	    0x488b3d000000	            mov rdi, qword [0x0400588f] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x400588f	    0x488b05000000	            mov rax, qword [0x04005896] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005896	        0x488b4f68	            mov rcx, qword [rdi + 0x68] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x400589a	        0x488d7001	                      lea rsi, [rax + 1]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x400589e	          0x483b31	                    cmp rsi, qword [rcx]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40058a1	     0xf87f9050000	                            ja 0x4005ea0	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40058a7	        0x440fb630	                  movzx r14d, byte [rax]	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40058ab	    0x8b0500000000	            mov eax, dword [0x040058b1] 	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058b1	    0x488935000000	            mov qword [0x040058b8], rsi 	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40058b8	    0x498d8e00ffff	                  lea rcx, [r14 - 0x100]	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x40058bf	          0x4584f6	                         test r14b, r14b	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x40058c2	        0x4c0f48f1	                          cmovs r14, rcx	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x40058c6	            0x85c0	                           test eax, eax	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058c8	     0xf84e5f9ffff	                            je 0x40052b3	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058ce	          0x4585e4	                         test r12d, r12d	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058d1	          0x4c89f0	                            mov rax, r14	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058d4	          0x4489e1	                           mov ecx, r12d	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058d7	        0x400f9fc6	                                setg sil	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058db	          0x48d3e0	                             shl rax, cl	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058de	          0x4084f6	                           test sil, sil	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058e1	        0x4c0f45f0	                         cmovne r14, rax	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058e5	      0xe9c9f9ffff	                           jmp 0x40052b3	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058ea	    0x660f1f440000	                    nop word [rax + rax]	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40058f0	          0x4585e4	                         test r12d, r12d	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x40058f3	     0xf844ffeffff	                            je 0x4005748	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x40058f9	          0x4d85f6	                           test r14, r14	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x40058fc	     0xf8946feffff	                           jns 0x4005748	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005902	    0x833d00000000	               cmp dword [0x04005909], 1	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005909	            0x742b	                            je 0x4005936	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400590b	          0x4c89f2	                            mov rdx, r14	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400590e	          0x48f7da	                                 neg rdx	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005911	          0x4c39f2	                            cmp rdx, r14	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005914	     0xf84be030000	                            je 0x4005cd8	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400591a	    0x488b05000000	            mov rax, qword [0x04005921] 	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005921	          0x4989d6	                            mov r14, rdx	     15518	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005924	        0x488d4801	                      lea rcx, [rax + 1]	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005928	          0xc6002d	                    mov byte [rax], 0x2d	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400592b	        0xc6400100	                   mov byte [rax + 1], 0	     15517	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400592f	    0x48890d000000	            mov qword [0x04005936], rcx 	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005936	          0x4c89f7	                            mov rdi, r14	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x4005939	      0xe852e6ffff	call sym.print_displacement.constprop.17	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x400593e	      0xe934feffff	                           jmp 0x4005777	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x4005943	       0xf1f440000	                   nop dword [rax + rax]	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x4005948	    0x8b0500000000	            mov eax, dword [0x0400594e] 	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x400594e	            0x85c0	                           test eax, eax	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4005950	            0x7509	                           jne 0x400595b	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4005952	          0x83fd05	                              cmp ebp, 5	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4005955	     0xf8515f8ffff	                           jne 0x4005170	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x400595b	    0x8b0500000000	            mov eax, dword [0x04005961] 	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4005961	            0x85c0	                           test eax, eax	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4005963	     0xf8437030000	                            je 0x4005ca0	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4005969	          0x4c89f6	                            mov rsi, r14	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_26
0x400596c	      0xbf00000000	                              mov edi, 0	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x4005971	      0xe8aae7ffff	call sym.print_operand_value.constprop.18	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x4005976	    0x488b3d000000	            mov rdi, qword [0x0400597d] 	       117	string3.h	FUNCTION_108	CALL_3
0x400597d	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4005982	      0xe800000000	                          call 0x4005987	       117	string3.h	FUNCTION_108	CALL_3
0x4005987	    0x488905000000	            mov qword [0x0400598e], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400598e	      0xe9ddf7ffff	                           jmp 0x4005170	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005993	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005998	    0x488b05000000	            mov rax, qword [0x0400599f] 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400599f	     0xfb615000000	           movzx edx, byte [0x040059a6] 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40059a6	        0x488d7801	                      lea rdi, [rax + 1]	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40059aa	        0xc6400100	                   mov byte [rax + 1], 0	     15491	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40059ae	            0x8810	                      mov byte [rax], dl	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40059b0	    0x48893d000000	            mov qword [0x040059b7], rdi 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40059b7	      0xe9c1faffff	                           jmp 0x400547d	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40059bc	         0xf1f4000	                         nop dword [rax]	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40059c0	        0x4183ec02	                             sub r12d, 2	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40059c4	      0xe941f8ffff	                           jmp 0x400520a	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40059c9	     0xf1f80000000	                         nop dword [rax]	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40059d0	    0x488b3d000000	            mov rdi, qword [0x040059d7] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40059d7	    0x488b0d000000	            mov rcx, qword [0x040059de] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40059de	        0x4c8b4768	              mov r8, qword [rdi + 0x68]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40059e2	        0x488d7101	                      lea rsi, [rcx + 1]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40059e6	          0x493b30	                     cmp rsi, qword [r8]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40059e9	     0xf8769050000	                            ja 0x4005f58	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40059ef	           0xfb629	                   movzx ebp, byte [rcx]	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40059f2	    0x448b35000000	           mov r14d, dword [0x040059f9] 	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x40059f9	    0x488935000000	            mov qword [0x04005a00], rsi 	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005a00	    0x488db500ffff	                  lea rsi, [rbp - 0x100]	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4005a07	          0x4084ed	                           test bpl, bpl	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4005a0a	        0x480f48ee	                          cmovs rbp, rsi	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4005a0e	          0x4585f6	                         test r14d, r14d	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a11	     0xf84abf6ffff	                            je 0x40050c2	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a17	          0x4585e4	                         test r12d, r12d	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a1a	          0x4889ef	                            mov rdi, rbp	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a1d	          0x4489e1	                           mov ecx, r12d	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a20	        0x400f9fc6	                                setg sil	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a24	          0x48d3e7	                             shl rdi, cl	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a27	          0x4084f6	                           test sil, sil	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a2a	        0x480f45ef	                         cmovne rbp, rdi	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a2e	      0xe98ff6ffff	                           jmp 0x40050c2	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a33	       0xf1f440000	                   nop dword [rax + rax]	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005a38	    0x448b25000000	           mov r12d, dword [0x04005a3f] 	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x4005a3f	        0x4183fc06	                             cmp r12d, 6	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x4005a43	     0xf8447fcffff	                            je 0x4005690	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x4005a49	            0x31ed	                            xor ebp, ebp	     15212	i386-dis.c	FUNCTION_25
0x4005a4b	          0x4584ff	                         test r15b, r15b	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4005a4e	     0xf8497f6ffff	                            je 0x40050eb	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4005a54	      0xe99df6ffff	                           jmp 0x40050f6	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4005a59	     0xf1f80000000	                         nop dword [rax]	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4005a60	            0x31c0	                            xor eax, eax	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005a62	      0x837c241c04	               cmp dword [rsp + 0x1c], 4	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005a67	           0xf95c0	                                setne al	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005a6a	        0x8944240c	              mov dword [rsp + 0xc], eax	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005a6e	    0x8b0500000000	            mov eax, dword [0x04005a74] 	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005a74	    0x8b2d00000000	            mov ebp, dword [0x04005a7a] 	     15407	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005a7a	    0x488305000000	               add qword [0x04005a82], 1	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005a82	    0xc74424100100	               mov dword [rsp + 0x10], 1	     15357	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005a8a	        0x89442418	             mov dword [rsp + 0x18], eax	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005a8e	      0xe9fdf7ffff	                           jmp 0x4005290	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005a93	       0xf1f440000	                   nop dword [rax + rax]	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4005a98	        0x4183ec03	                             sub r12d, 3	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005a9c	      0xe969f7ffff	                           jmp 0x400520a	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005aa1	     0xf1f80000000	                         nop dword [rax]	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4005aa8	    0x833d00000000	               cmp dword [0x04005aaf], 2	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005aaf	            0x7513	                           jne 0x4005ac4	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005ab1	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005ab5	    0x488b35000000	            mov rsi, qword [0x04005abc] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005abc	            0x85c0	                           test eax, eax	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005abe	     0xf84f5f9ffff	                            je 0x40054b9	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005ac4	    0x488b35000000	            mov rsi, qword [0x04005acb] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005acb	      0xe9e9f9ffff	                           jmp 0x40054b9	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4005ad0	    0x488b05000000	            mov rax, qword [0x04005ad7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005ad7	      0xbe387d0000	                         mov esi, 0x7d38	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005adc	    0xc7007b31746f	            mov dword [rax], 0x6f74317b 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005ae2	        0x66897004	                  mov word [rax + 4], si	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005ae6	        0x4883c006	                              add rax, 6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005aea	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005aed	    0x488905000000	            mov qword [0x04005af4], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005af4	      0xe9a4f6ffff	                           jmp 0x400519d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005af9	     0xf1f80000000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005b00	        0x4183ec01	                             sub r12d, 1	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b04	      0xe901f7ffff	                           jmp 0x400520a	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b09	     0xf1f80000000	                         nop dword [rax]	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b10	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b14	    0x8b1500000000	            mov edx, dword [0x04005b1a] 	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b1a	            0x89f8	                            mov eax, edi	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b1c	          0x83c010	                           add eax, 0x10	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b1f	            0x85d2	                           test edx, edx	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b21	           0xf45c7	                         cmovne eax, edi	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b24	        0x8944241c	             mov dword [rsp + 0x1c], eax	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b28	      0xe9e8fcffff	                           jmp 0x4005815	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b2d	           0xf1f00	                         nop dword [rax]	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4005b30	    0x41bc05000000	                             mov r12d, 5	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b36	      0xe9b4f6ffff	                           jmp 0x40051ef	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b3b	       0xf1f440000	                   nop dword [rax + rax]	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b40	    0x833d00000000	               cmp dword [0x04005b47], 1	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b47	          0x4519e4	                          sbb r12d, r12d	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b4a	        0x4183c403	                             add r12d, 3	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b4e	            0x85c9	                           test ecx, ecx	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b50	     0xf8599f6ffff	                           jne 0x40051ef	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b56	      0xe988f6ffff	                           jmp 0x40051e3	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b5b	       0xf1f440000	                   nop dword [rax + rax]	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005b60	    0x8b0500000000	            mov eax, dword [0x04005b66] 	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b66	      0x3d00010000	                          cmp eax, 0x100	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b6b	     0xf845f040000	                            je 0x4005fd0	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b71	      0x3d00020000	                          cmp eax, 0x200	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b76	     0xf8444040000	                            je 0x4005fc0	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b7c	          0x83c080	             add eax, 0xffffffffffffff80	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b7f	     0xf8518faffff	                           jne 0x400559d	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b85	    0x41bc04000000	                             mov r12d, 4	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b8b	            0xebc1	                           jmp 0x4005b4e	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b8d	           0xf1f00	                         nop dword [rax]	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005b90	    0x41bc04000000	                             mov r12d, 4	     15279	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b96	      0xe954f6ffff	                           jmp 0x40051ef	     15279	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005b9b	       0xf1f440000	                   nop dword [rax + rax]	     15279	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005ba0	    0x41bc01000000	                             mov r12d, 1	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005ba6	      0xe938f6ffff	                           jmp 0x40051e3	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bab	       0xf1f440000	                   nop dword [rax + rax]	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bb0	    0x41bc02000000	                             mov r12d, 2	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bb6	      0xe928f6ffff	                           jmp 0x40051e3	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bbb	       0xf1f440000	                   nop dword [rax + rax]	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bc0	    0x41bc03000000	                             mov r12d, 3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bc6	      0xe918f6ffff	                           jmp 0x40051e3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bcb	       0xf1f440000	                   nop dword [rax + rax]	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005bd0	    0x8b0500000000	            mov eax, dword [0x04005bd6] 	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005bd6	      0x3d00010000	                          cmp eax, 0x100	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005bdb	     0xf8436040000	                            je 0x4006017	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005be1	      0x3d00020000	                          cmp eax, 0x200	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005be6	     0xf8420040000	                            je 0x400600c	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005bec	          0x83c080	             add eax, 0xffffffffffffff80	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005bef	     0xf85a8f9ffff	                           jne 0x400559d	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005bf5	    0x41bc04000000	                             mov r12d, 4	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005bfb	      0xe9e3f5ffff	                           jmp 0x40051e3	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005c00	          0x4531e4	                          xor r12d, r12d	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005c03	      0xe9e7f5ffff	                           jmp 0x40051ef	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005c08	     0xf1f84000000	                   nop dword [rax + rax]	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005c10	    0x488b05000000	            mov rax, qword [0x04005c17] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c17	    0x41b8327d0000	                         mov r8d, 0x7d32	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c1d	    0xc7007b31746f	            mov dword [rax], 0x6f74317b 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c23	      0x6644894004	                 mov word [rax + 4], r8w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c28	        0x4883c006	                              add rax, 6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c2c	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c2f	    0x488905000000	            mov qword [0x04005c36], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c36	      0xe962f5ffff	                           jmp 0x400519d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c3b	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c40	    0x488b05000000	            mov rax, qword [0x04005c47] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c47	    0x48bb7b31746f	            movabs rbx, 0x7d36316f74317b	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c51	          0x488918	                    mov qword [rax], rbx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c54	        0x4883c007	                              add rax, 7	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c58	    0x488905000000	            mov qword [0x04005c5f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c5f	      0xe939f5ffff	                           jmp 0x400519d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c64	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005c68	    0x8b0500000000	            mov eax, dword [0x04005c6e] 	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005c6e	            0x85c0	                           test eax, eax	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005c70	     0xf842a030000	                            je 0x4005fa0	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005c76	          0x8d43c9	                   lea eax, [rbx - 0x37]	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005c79	          0x83f801	                              cmp eax, 1	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005c7c	     0xf861e030000	                           jbe 0x4005fa0	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005c82	    0x488b05000000	            mov rax, qword [0x04005c89] 	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005c89	    0xc744240c0100	                mov dword [rsp + 0xc], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005c91	      0x4889442428	             mov qword [rsp + 0x28], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005c96	      0x4889442420	             mov qword [rsp + 0x20], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005c9b	      0xe9cefdffff	                           jmp 0x4005a6e	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4005ca0	    0x488b05000000	            mov rax, qword [0x04005ca7] 	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_24
0x4005ca7	    0x488b3d000000	            mov rdi, qword [0x04005cae] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005cae	    0x41bf3a000000	                          mov r15d, 0x3a	       117	string3.h	FUNCTION_108	CALL_3
0x4005cb4	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005cb8	      0xe800000000	                          call 0x4005cbd	       117	string3.h	FUNCTION_108	CALL_3
0x4005cbd	        0x66448938	                    mov word [rax], r15w	       117	string3.h	FUNCTION_108	CALL_3
0x4005cc1	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005cc5	    0x488905000000	            mov qword [0x04005ccc], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005ccc	      0xe998fcffff	                           jmp 0x4005969	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005cd1	     0xf1f80000000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005cd8	    0x49be00000000	          movabs r14, 0x8000000000000000	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005ce2	      0xe94ffcffff	                           jmp 0x4005936	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005ce7	    0x660f1f840000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005cf0	    0x833d00000000	               cmp dword [0x04005cf7], 1	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005cf7	          0x4519e4	                          sbb r12d, r12d	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005cfa	        0x4183c403	                             add r12d, 3	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005cfe	      0xe9ecf4ffff	                           jmp 0x40051ef	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005d03	       0xf1f440000	                   nop dword [rax + rax]	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4005d08	    0x41bc03000000	                             mov r12d, 3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d0e	      0xe9dcf4ffff	                           jmp 0x40051ef	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d13	       0xf1f440000	                   nop dword [rax + rax]	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d18	    0x41bc02000000	                             mov r12d, 2	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d1e	      0xe9ccf4ffff	                           jmp 0x40051ef	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d23	       0xf1f440000	                   nop dword [rax + rax]	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d28	    0x41bc01000000	                             mov r12d, 1	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d2e	      0xe9bcf4ffff	                           jmp 0x40051ef	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d33	       0xf1f440000	                   nop dword [rax + rax]	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005d38	            0x89c8	                            mov eax, ecx	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4005d3a	          0x4409e0	                            or eax, r12d	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4005d3d	            0x7571	                           jne 0x4005db0	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4005d3f	          0x4c89f6	                            mov rsi, r14	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005d42	      0xbf00000000	                              mov edi, 0	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005d47	        0x894c2430	             mov dword [rsp + 0x30], ecx	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005d4b	      0xe8d0e3ffff	call sym.print_operand_value.constprop.18	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4005d50	    0x488b3d000000	            mov rdi, qword [0x04005d57] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005d57	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4005d5c	          0x4531e4	                          xor r12d, r12d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d5f	      0xe800000000	                          call 0x4005d64	       117	string3.h	FUNCTION_108	CALL_3
0x4005d64	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d68	    0x488905000000	            mov qword [0x04005d6f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d6f	          0x4531c0	                            xor r8d, r8d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d72	    0x440fb63d0000	          movzx r15d, byte [0x04005d7a] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d7a	    0xc74424300000	               mov dword [rsp + 0x30], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d82	          0x4189cb	                           mov r11d, ecx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d85	            0x31c9	                            xor ecx, ecx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d87	      0xe9eef8ffff	                           jmp 0x400567a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d8c	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005d90	          0x4531e4	                          xor r12d, r12d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005d93	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005d97	         0xb442418	              or eax, dword [rsp + 0x18]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005d9b	    0x440fb63d0000	          movzx r15d, byte [0x04005da3] 	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005da3	        0x410f95c4	                              setne r12b	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005da7	      0xe9b7f8ffff	                           jmp 0x4005663	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005dac	         0xf1f4000	                         nop dword [rax]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005db0	          0x4189cb	                           mov r11d, ecx	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005db3	          0x4531c0	                            xor r8d, r8d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005db6	    0xc74424300000	               mov dword [rsp + 0x30], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005dbe	          0x4c89f7	                            mov rdi, r14	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005dc1	      0x44895c243c	            mov dword [rsp + 0x3c], r11d	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005dc6	        0x894c2438	             mov dword [rsp + 0x38], ecx	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005dca	      0x4489442434	             mov dword [rsp + 0x34], r8d	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005dcf	      0xe8bce1ffff	call sym.print_displacement.constprop.17	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4005dd4	    0x488b3d000000	            mov rdi, qword [0x04005ddb] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005ddb	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4005de0	      0xe800000000	                          call 0x4005de5	       117	string3.h	FUNCTION_108	CALL_3
0x4005de5	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4005de9	    0x488905000000	            mov qword [0x04005df0], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005df0	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4005df5	      0x448b5c243c	           mov r11d, dword [rsp + 0x3c] 	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4005dfa	            0x85c9	                           test ecx, ecx	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4005dfc	     0xf8420020000	                            je 0x4006022	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4005e02	    0x486315000000	         movsxd rdx, dword [0x04005e09] 	     15836	i386-dis.c	FUNCTION_32
0x4005e09	    0x833d00000000	               cmp dword [0x04005e10], 2	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4005e10	    0x891495000000	                  mov dword [rdx*4], edx	     15836	i386-dis.c	FUNCTION_32
0x4005e17	     0xf84fb000000	                            je 0x4005f18	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4005e1d	          0x4489f1	                           mov ecx, r14d	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4005e20	    0x48c704d50000	                    mov qword [rdx*8], 1	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4005e2c	    0x48890cd50000	                  mov qword [rdx*8], rcx	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4005e34	      0x44895c2438	            mov dword [rsp + 0x38], r11d	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4005e39	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005e3e	      0xba00000000	                              mov edx, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005e43	      0xbe00000000	                              mov esi, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005e48	          0x4889c7	                            mov rdi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4005e4b	      0x4489442434	             mov dword [rsp + 0x34], r8d	       117	string3.h	FUNCTION_108	CALL_3
0x4005e50	          0x4585db	                         test r11d, r11d	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005e53	        0x480f45f2	                         cmovne rsi, rdx	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4005e57	      0xe800000000	                          call 0x4005e5c	       117	string3.h	FUNCTION_108	CALL_3
0x4005e5c	    0x440fb63d0000	          movzx r15d, byte [0x04005e64] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005e64	    0x488905000000	            mov qword [0x04005e6b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005e6b	      0xb901000000	                              mov ecx, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005e70	      0x448b5c2438	           mov r11d, dword [rsp + 0x38] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005e75	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005e7a	      0xe9fbf7ffff	                           jmp 0x400567a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005e7f	              0x90	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005e80	            0x31c0	                            xor eax, eax	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005e82	    0x813d00000000	           cmp dword [0x04005e8c], 0x80 	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005e8c	           0xf94c0	                                 sete al	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005e8f	          0x4129c4	                           sub r12d, eax	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005e92	      0xe973f3ffff	                           jmp 0x400520a	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005e97	    0x660f1f840000	                    nop word [rax + rax]	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4005ea0	      0xe82bbdffff	                     call sym.fetch_data	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ea5	    0x488b05000000	            mov rax, qword [0x04005eac] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005eac	    0x440fb63d0000	          movzx r15d, byte [0x04005eb4] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005eb4	        0x488d7001	                      lea rsi, [rax + 1]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005eb8	      0xe9eaf9ffff	                           jmp 0x40058a7	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ebd	           0xf1f00	                         nop dword [rax]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4005ec0	    0x440fb63d0000	          movzx r15d, byte [0x04005ec8] 	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005ec8	          0x4531c0	                            xor r8d, r8d	     15417	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4005ecb	          0x4189cb	                           mov r11d, ecx	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005ece	    0xc74424300100	               mov dword [rsp + 0x30], 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4005ed6	    0x41bc01000000	                             mov r12d, 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4005edc	          0x4584ff	                         test r15b, r15b	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005edf	     0xf8595f7ffff	                           jne 0x400567a	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005ee5	    0x41bc01000000	                             mov r12d, 1	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005eeb	      0xe9cefeffff	                           jmp 0x4005dbe	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4005ef0	        0x4183fd01	                             cmp r13d, 1	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005ef4	     0xf84b1f8ffff	                            je 0x40057ab	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005efa	        0x488d5001	                      lea rdx, [rax + 1]	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005efe	          0xc6002d	                    mov byte [rax], 0x2d	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005f01	        0xc6400100	                   mov byte [rax + 1], 0	     15597	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005f05	          0x48f7dd	                                 neg rbp	     15598	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005f08	    0x488915000000	            mov qword [0x04005f0f], rdx 	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005f0f	      0xe997f8ffff	                           jmp 0x40057ab	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005f14	         0xf1f4000	                         nop dword [rax]	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005f18	    0x4c8934d50000	                  mov qword [rdx*8], r14	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4005f20	    0x48c704d50000	                    mov qword [rdx*8], 1	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4005f2c	      0xe903ffffff	                           jmp 0x4005e34	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4005f31	     0xf1f80000000	                         nop dword [rax]	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4005f38	    0x4c8934c50000	                  mov qword [rax*8], r14	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4005f40	    0x48c704c50000	                    mov qword [rax*8], 1	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4005f4c	      0xe95ef4ffff	                           jmp 0x40053af	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4005f51	     0xf1f80000000	                         nop dword [rax]	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4005f58	      0xe873bcffff	                     call sym.fetch_data	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f5d	    0x488b0d000000	            mov rcx, qword [0x04005f64] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f64	    0x8b0500000000	            mov eax, dword [0x04005f6a] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f6a	    0x440fb63d0000	          movzx r15d, byte [0x04005f72] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f72	        0x488d7101	                      lea rsi, [rcx + 1]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f76	          0x4189c5	                           mov r13d, eax	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f79	      0xe971faffff	                           jmp 0x40059ef	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f7e	            0x6690	                                     nop	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005f80	    0x8b0500000000	            mov eax, dword [0x04005f86] 	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005f86	            0x85c0	                           test eax, eax	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005f88	     0xf84f4fcffff	                            je 0x4005c82	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005f8e	          0x8d43c9	                   lea eax, [rbx - 0x37]	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005f91	          0x83f801	                              cmp eax, 1	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005f94	     0xf87a0f8ffff	                            ja 0x400583a	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005f9a	      0xe9e3fcffff	                           jmp 0x4005c82	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005f9f	              0x90	                                     nop	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4005fa0	    0x488b05000000	            mov rax, qword [0x04005fa7] 	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005fa7	    0xc744240c0100	                mov dword [rsp + 0xc], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4005faf	      0x4889442428	             mov qword [rsp + 0x28], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005fb4	      0x4889442420	             mov qword [rsp + 0x20], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005fb9	      0xe9b0faffff	                           jmp 0x4005a6e	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005fbe	            0x6690	                                     nop	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4005fc0	    0x41bc06000000	                             mov r12d, 6	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005fc6	      0xe983fbffff	                           jmp 0x4005b4e	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005fcb	       0xf1f440000	                   nop dword [rax + rax]	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005fd0	    0x41bc05000000	                             mov r12d, 5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005fd6	      0xe973fbffff	                           jmp 0x4005b4e	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005fdb	    0x488b05000000	            mov rax, qword [0x04005fe2] 	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_35
0x4005fe2	    0x488b3d000000	            mov rdi, qword [0x04005fe9] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005fe9	    0x41bc3a000000	                          mov r12d, 0x3a	       117	string3.h	FUNCTION_108	CALL_3
0x4005fef	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005ff3	      0xe800000000	                          call 0x4005ff8	       117	string3.h	FUNCTION_108	CALL_3
0x4005ff8	        0x66448920	                    mov word [rax], r12w	       117	string3.h	FUNCTION_108	CALL_3
0x4005ffc	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006000	    0x488905000000	            mov qword [0x04006007], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006007	      0xe92ef7ffff	                           jmp 0x400573a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400600c	    0x41bc06000000	                             mov r12d, 6	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4006012	      0xe9ccf1ffff	                           jmp 0x40051e3	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4006017	    0x41bc05000000	                             mov r12d, 5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400601d	      0xe9c1f1ffff	                           jmp 0x40051e3	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4006022	    0x440fb63d0000	          movzx r15d, byte [0x0400602a] 	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400602a	      0xe94bf6ffff	                           jmp 0x400567a	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400602f	    0x41bb01000000	                             mov r11d, 1	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4006035	    0xc74424300000	               mov dword [rsp + 0x30], 0	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400603d	    0x41b801000000	                              mov r8d, 1	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4006043	            0x31c9	                            xor ecx, ecx	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4006045	      0xe99bfeffff	                           jmp 0x4005ee5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
OP_0f07	IF,1:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	8
0x4008ac0	    0x833d00000000	               cmp dword [0x04008ac7], 3	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008ac7	            0x750a	                           jne 0x4008ad3	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008ac9	    0x8b0500000000	            mov eax, dword [0x04008acf] 	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008acf	            0x85c0	                           test eax, eax	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008ad1	            0x740d	                            je 0x4008ae0	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4008ad3	      0xe98899ffff	                           jmp sym.BadOp	     16682	i386-dis.c	FUNCTION_59	CALL_1
0x4008ad8	     0xf1f84000000	                   nop dword [rax + rax]	     16682	i386-dis.c	FUNCTION_59	CALL_1
0x4008ae0	      0xe96bd5ffff	                            jmp sym.OP_E	     16684	i386-dis.c	FUNCTION_59	CALL_2
OP_T	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	15
0x4002370	        0x4883ec08	                              sub rsp, 8	     16390	i386-dis.c	FUNCTION_48
0x4002374	    0x448b05000000	            mov r8d, dword [0x0400237b] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x400237b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002380	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002385	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400238a	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400238f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002391	      0xe800000000	                          call 0x4002396	        33	stdio2.h	FUNCTION_113	CALL_1
0x4002396	    0x480fbe350000	           movsx rsi, byte [0x0400239e] 	       117	string3.h	FUNCTION_108	CALL_3
0x400239e	    0x488b3d000000	            mov rdi, qword [0x040023a5] 	       117	string3.h	FUNCTION_108	CALL_3
0x40023a5	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40023ac	      0xe800000000	                          call 0x40023b1	       117	string3.h	FUNCTION_108	CALL_3
0x40023b1	    0x488905000000	            mov qword [0x040023b8], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40023b8	        0x4883c408	                              add rsp, 8	     16393	i386-dis.c	FUNCTION_48
0x40023bc	              0xc3	                                     ret	     16393	i386-dis.c	FUNCTION_48
OP_Mwait	IF,1:CALL,2:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	21
0x4001a50	    0x803d00000000	                cmp byte [0x04001a57], 0	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4001a57	              0x53	                                push rbx	     16866	i386-dis.c	FUNCTION_65
0x4001a58	            0x7545	                           jne 0x4001a9f	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4001a5a	    0x833d00000000	               cmp dword [0x04001a61], 2	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001a61	    0x488b1d000000	            mov rbx, qword [0x04001a68] 	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001a68	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x4001a6d	    0x480f451d0000	          cmovne rbx, qword [0x04001a75]	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001a75	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a7a	          0x488b33	                    mov rsi, qword [rbx]	       110	string3.h	FUNCTION_107	CALL_3
0x4001a7d	      0xe800000000	                          call 0x4001a82	       110	string3.h	FUNCTION_107	CALL_3
0x4001a82	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x4001a86	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_107	CALL_3
0x4001a8b	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a90	      0xe800000000	                          call 0x4001a95	       110	string3.h	FUNCTION_107	CALL_3
0x4001a95	    0xc70500000000	               mov dword [0x04001a9f], 1	     16874	i386-dis.c	FUNCTION_65	IF_1
0x4001a9f	    0x803d00000000	                cmp byte [0x04001aa6], 0	     16877	i386-dis.c	FUNCTION_65
0x4001aa6	            0x740a	                            je 0x4001ab2	     16877	i386-dis.c	FUNCTION_65
0x4001aa8	    0x488305000000	               add qword [0x04001ab0], 1	     16878	i386-dis.c	FUNCTION_65
0x4001ab0	              0x5b	                                 pop rbx	     16879	i386-dis.c	FUNCTION_65
0x4001ab1	              0xc3	                                     ret	     16879	i386-dis.c	FUNCTION_65
0x4001ab2	      0xe800000000	                          call 0x4001ab7	     16877	i386-dis.c	FUNCTION_65
HLE_Fixup3	IF,1:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	9
0x40060d0	    0x833d00000000	               cmp dword [0x040060d7], 3	     17018	i386-dis.c	FUNCTION_73	IF_1
0x40060d7	            0x7423	                            je 0x40060fc	     17018	i386-dis.c	FUNCTION_73	IF_1
0x40060d9	    0x486305000000	         movsxd rax, dword [0x040060e0] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x40060e0	    0x3b0500000000	            cmp eax, dword [0x040060e6] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x40060e6	            0x7e14	                           jle 0x40060fc	     17019	i386-dis.c	FUNCTION_73	IF_1
0x40060e8	    0xf60500000000	               test byte [0x040060ef], 1	     17020	i386-dis.c	FUNCTION_73	IF_1
0x40060ef	            0x740b	                            je 0x40060fc	     17020	i386-dis.c	FUNCTION_73	IF_1
0x40060f1	    0xc70485000000	                mov dword [rax*4], 0x4f3	     17021	i386-dis.c	FUNCTION_73	IF_1
0x40060fc	      0xe94fffffff	                            jmp sym.OP_E	     17023	i386-dis.c	FUNCTION_73	CALL_1
print_insn_i386_intel	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	2
0x4008fa0	    0xc60500000000	                mov byte [0x04008fa7], 1	     12684	i386-dis.c	FUNCTION_5
0x4008fa7	      0xe904d3ffff	                      jmp sym.print_insn	     12686	i386-dis.c	FUNCTION_5	CALL_1
OP_Mwaitx	IF,1:CALL,3:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	25
0x40019d0	    0x803d00000000	                cmp byte [0x040019d7], 0	     16849	i386-dis.c	FUNCTION_64	IF_1
0x40019d7	              0x53	                                push rbx	     16847	i386-dis.c	FUNCTION_64
0x40019d8	            0x7558	                           jne 0x4001a32	     16849	i386-dis.c	FUNCTION_64	IF_1
0x40019da	    0x833d00000000	               cmp dword [0x040019e1], 2	     16852	i386-dis.c	FUNCTION_64	IF_1
0x40019e1	    0x488b1d000000	            mov rbx, qword [0x040019e8] 	     16852	i386-dis.c	FUNCTION_64	IF_1
0x40019e8	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x40019ed	    0x480f451d0000	          cmovne rbx, qword [0x040019f5]	     16852	i386-dis.c	FUNCTION_64	IF_1
0x40019f5	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x40019fa	          0x488b33	                    mov rsi, qword [rbx]	       110	string3.h	FUNCTION_107	CALL_3
0x40019fd	      0xe800000000	                          call 0x4001a02	       110	string3.h	FUNCTION_107	CALL_3
0x4001a02	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x4001a06	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_107	CALL_3
0x4001a0b	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a10	      0xe800000000	                          call 0x4001a15	       110	string3.h	FUNCTION_107	CALL_3
0x4001a15	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       110	string3.h	FUNCTION_107	CALL_3
0x4001a19	      0xba2c010000	                          mov edx, 0x12c	       110	string3.h	FUNCTION_107	CALL_3
0x4001a1e	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a23	      0xe800000000	                          call 0x4001a28	       110	string3.h	FUNCTION_107	CALL_3
0x4001a28	    0xc70500000000	               mov dword [0x04001a32], 1	     16856	i386-dis.c	FUNCTION_64	IF_1
0x4001a32	    0x803d00000000	                cmp byte [0x04001a39], 0	     16859	i386-dis.c	FUNCTION_64
0x4001a39	            0x740a	                            je 0x4001a45	     16859	i386-dis.c	FUNCTION_64
0x4001a3b	    0x488305000000	               add qword [0x04001a43], 1	     16860	i386-dis.c	FUNCTION_64
0x4001a43	              0x5b	                                 pop rbx	     16861	i386-dis.c	FUNCTION_64
0x4001a44	              0xc3	                                     ret	     16861	i386-dis.c	FUNCTION_64
0x4001a45	      0xe800000000	                          call 0x4001a4a	     16859	i386-dis.c	FUNCTION_64
OP_3DNowSuffix	IF,1:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	32
0x40039e0	        0x4883ec08	                              sub rsp, 8	     16781	i386-dis.c	FUNCTION_62
0x40039e4	    0x488b3d000000	            mov rdi, qword [0x040039eb] 	     16784	i386-dis.c	FUNCTION_62
0x40039eb	    0x488b05000000	            mov rax, qword [0x040039f2] 	     16784	i386-dis.c	FUNCTION_62
0x40039f2	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     16784	i386-dis.c	FUNCTION_62
0x40039f6	        0x488d7001	                      lea rsi, [rax + 1]	     16784	i386-dis.c	FUNCTION_62
0x40039fa	          0x483b32	                    cmp rsi, qword [rdx]	     16784	i386-dis.c	FUNCTION_62
0x40039fd	            0x7741	                            ja 0x4003a40	     16784	i386-dis.c	FUNCTION_62
0x40039ff	           0xfb600	                   movzx eax, byte [rax]	     16789	i386-dis.c	FUNCTION_62
0x4003a02	    0x488935000000	            mov qword [0x04003a09], rsi 	     16789	i386-dis.c	FUNCTION_62
0x4003a09	    0x488b3d000000	            mov rdi, qword [0x04003a10] 	     16788	i386-dis.c	FUNCTION_62
0x4003a10	    0x488b34c50000	                  mov rsi, qword [rax*8]	     16789	i386-dis.c	FUNCTION_62
0x4003a18	    0x48893d000000	            mov qword [0x04003a1f], rdi 	     16788	i386-dis.c	FUNCTION_62
0x4003a1f	          0x4885f6	                           test rsi, rsi	     16790	i386-dis.c	FUNCTION_62	IF_1
0x4003a22	            0x7434	                            je 0x4003a58	     16790	i386-dis.c	FUNCTION_62	IF_1
0x4003a24	      0xe800000000	                          call 0x4003a29	       117	string3.h	FUNCTION_108	CALL_3
0x4003a29	    0x488905000000	            mov qword [0x04003a30], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003a30	    0x488905000000	            mov qword [0x04003a37], rax 	     16802	i386-dis.c	FUNCTION_62
0x4003a37	        0x4883c408	                              add rsp, 8	     16803	i386-dis.c	FUNCTION_62
0x4003a3b	              0xc3	                                     ret	     16803	i386-dis.c	FUNCTION_62
0x4003a3c	         0xf1f4000	                         nop dword [rax]	     16803	i386-dis.c	FUNCTION_62
0x4003a40	      0xe88be1ffff	                     call sym.fetch_data	     16784	i386-dis.c	FUNCTION_62
0x4003a45	    0x488b05000000	            mov rax, qword [0x04003a4c] 	     16784	i386-dis.c	FUNCTION_62
0x4003a4c	        0x488d7001	                      lea rsi, [rax + 1]	     16784	i386-dis.c	FUNCTION_62
0x4003a50	            0xebad	                           jmp 0x40039ff	     16784	i386-dis.c	FUNCTION_62
0x4003a52	    0x660f1f440000	                    nop word [rax + rax]	     16784	i386-dis.c	FUNCTION_62
0x4003a58	    0xc60500000000	                mov byte [0x04003a5f], 0	     16798	i386-dis.c	FUNCTION_62	ELSE_1
0x4003a5f	    0xc60500000000	                mov byte [0x04003a66], 0	     16799	i386-dis.c	FUNCTION_62	ELSE_1
0x4003a66	      0xe8f5e9ffff	                          call sym.BadOp	     16800	i386-dis.c	FUNCTION_62	ELSE_1	CALL_2
0x4003a6b	    0x488b05000000	            mov rax, qword [0x04003a72] 	     16800	i386-dis.c	FUNCTION_62	ELSE_1	CALL_2
0x4003a72	    0x488905000000	            mov qword [0x04003a79], rax 	     16802	i386-dis.c	FUNCTION_62
0x4003a79	        0x4883c408	                              add rsp, 8	     16803	i386-dis.c	FUNCTION_62
0x4003a7d	              0xc3	                                     ret	     16803	i386-dis.c	FUNCTION_62
get32	IF,0:CALL,0:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	24
0x4001d90	        0x4883ec08	                              sub rsp, 8	     15795	i386-dis.c	FUNCTION_29
0x4001d94	    0x488b3d000000	            mov rdi, qword [0x04001d9b] 	     15798	i386-dis.c	FUNCTION_29
0x4001d9b	    0x488b15000000	            mov rdx, qword [0x04001da2] 	     15798	i386-dis.c	FUNCTION_29
0x4001da2	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15798	i386-dis.c	FUNCTION_29
0x4001da6	        0x488d7204	                      lea rsi, [rdx + 4]	     15798	i386-dis.c	FUNCTION_29
0x4001daa	          0x483b30	                    cmp rsi, qword [rax]	     15798	i386-dis.c	FUNCTION_29
0x4001dad	            0x7610	                           jbe 0x4001dbf	     15798	i386-dis.c	FUNCTION_29
0x4001daf	      0xe81cfeffff	                     call sym.fetch_data	     15798	i386-dis.c	FUNCTION_29
0x4001db4	    0x488b15000000	            mov rdx, qword [0x04001dbb] 	     15798	i386-dis.c	FUNCTION_29
0x4001dbb	        0x488d7204	                      lea rsi, [rdx + 4]	     15798	i386-dis.c	FUNCTION_29
0x4001dbf	         0xfb64a01	               movzx ecx, byte [rdx + 1]	     15801	i386-dis.c	FUNCTION_29
0x4001dc3	         0xfb64202	               movzx eax, byte [rdx + 2]	     15801	i386-dis.c	FUNCTION_29
0x4001dc7	           0xfb63a	                   movzx edi, byte [rdx]	     15799	i386-dis.c	FUNCTION_29
0x4001dca	    0x488935000000	            mov qword [0x04001dd1], rsi 	     15802	i386-dis.c	FUNCTION_29
0x4001dd1	        0x48c1e108	                              shl rcx, 8	     15801	i386-dis.c	FUNCTION_29
0x4001dd5	        0x48c1e010	                           shl rax, 0x10	     15801	i386-dis.c	FUNCTION_29
0x4001dd9	          0x4809c8	                             or rax, rcx	     15801	i386-dis.c	FUNCTION_29
0x4001ddc	          0x4809f8	                             or rax, rdi	     15801	i386-dis.c	FUNCTION_29
0x4001ddf	          0x4889c1	                            mov rcx, rax	     15801	i386-dis.c	FUNCTION_29
0x4001de2	         0xfb64203	               movzx eax, byte [rdx + 3]	     15803	i386-dis.c	FUNCTION_29
0x4001de6	        0x4883c408	                              add rsp, 8	     15804	i386-dis.c	FUNCTION_29
0x4001dea	        0x48c1e018	                           shl rax, 0x18	     15803	i386-dis.c	FUNCTION_29
0x4001dee	          0x4809c8	                             or rax, rcx	     15803	i386-dis.c	FUNCTION_29
0x4001df1	              0xc3	                                     ret	     15804	i386-dis.c	FUNCTION_29
OP_REG_VexI4	IF,2:CALL,3:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,1:FOR,0	40
0x4003a80	              0x53	                                push rbx	     17532	i386-dis.c	FUNCTION_87
0x4003a81	            0x89fb	                            mov ebx, edi	     17532	i386-dis.c	FUNCTION_87
0x4003a83	    0x488b3d000000	            mov rdi, qword [0x04003a8a] 	     17536	i386-dis.c	FUNCTION_87
0x4003a8a	    0x488b05000000	            mov rax, qword [0x04003a91] 	     17536	i386-dis.c	FUNCTION_87
0x4003a91	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17536	i386-dis.c	FUNCTION_87
0x4003a95	        0x488d7001	                      lea rsi, [rax + 1]	     17536	i386-dis.c	FUNCTION_87
0x4003a99	          0x483b32	                    cmp rsi, qword [rdx]	     17536	i386-dis.c	FUNCTION_87
0x4003a9c	            0x777a	                            ja 0x4003b18	     17536	i386-dis.c	FUNCTION_87
0x4003a9e	          0x83fb0d	                            cmp ebx, 0xd	     17539	i386-dis.c	FUNCTION_87	IF_1
0x4003aa1	    0x488935000000	            mov qword [0x04003aa8], rsi 	     17537	i386-dis.c	FUNCTION_87
0x4003aa8	           0xfb600	                   movzx eax, byte [rax]	     17537	i386-dis.c	FUNCTION_87
0x4003aab	            0x7553	                           jne 0x4003b00	     17539	i386-dis.c	FUNCTION_87	IF_1
0x4003aad	          0xc1f804	                              sar eax, 4	     17542	i386-dis.c	FUNCTION_87
0x4003ab0	            0x89c2	                            mov edx, eax	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4003ab2	          0x83e207	                              and edx, 7	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4003ab5	    0x833d00000000	               cmp dword [0x04003abc], 2	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4003abc	           0xf45c2	                         cmovne eax, edx	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4003abf	    0x8b1500000000	            mov edx, dword [0x04003ac5] 	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003ac5	    0x81fa80000000	                           cmp edx, 0x80	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003acb	            0x743b	                            je 0x4003b08	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003acd	    0x81fa00010000	                          cmp edx, 0x100	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003ad3	            0x752b	                           jne 0x4003b00	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003ad5	    0x488b15000000	            mov rdx, qword [0x04003adc] 	     17552	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003adc	            0x4898	                                    cdqe	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4003ade	    0x488b3d000000	            mov rdi, qword [0x04003ae5] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003ae5	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003ae9	      0xe800000000	                          call 0x4003aee	       117	string3.h	FUNCTION_108	CALL_3
0x4003aee	              0x5b	                                 pop rbx	     17558	i386-dis.c	FUNCTION_87
0x4003aef	    0x488905000000	            mov qword [0x04003af6], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003af6	              0xc3	                                     ret	     17558	i386-dis.c	FUNCTION_87
0x4003af7	    0x660f1f840000	                    nop word [rax + rax]	     17558	i386-dis.c	FUNCTION_87
0x4003b00	      0xe800000000	                          call 0x4003b05	     17555	i386-dis.c	FUNCTION_87	SWITCH_1	CALL_2
0x4003b05	           0xf1f00	                         nop dword [rax]	     17555	i386-dis.c	FUNCTION_87	SWITCH_1	CALL_2
0x4003b08	    0x488b15000000	            mov rdx, qword [0x04003b0f] 	     17549	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003b0f	            0xebcb	                           jmp 0x4003adc	     17550	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003b11	     0xf1f80000000	                         nop dword [rax]	     17550	i386-dis.c	FUNCTION_87	SWITCH_1
0x4003b18	      0xe8b3e0ffff	                     call sym.fetch_data	     17536	i386-dis.c	FUNCTION_87
0x4003b1d	    0x488b05000000	            mov rax, qword [0x04003b24] 	     17536	i386-dis.c	FUNCTION_87
0x4003b24	        0x488d7001	                      lea rsi, [rax + 1]	     17536	i386-dis.c	FUNCTION_87
0x4003b28	      0xe971ffffff	                           jmp 0x4003a9e	     17536	i386-dis.c	FUNCTION_87
VPCMP_Fixup	IF,3:CALL,4:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,0:FOR,0	71
0x40046a0	              0x53	                                push rbx	     17675	i386-dis.c	FUNCTION_93
0x40046a1	        0x4883ec10	                           sub rsp, 0x10	     17675	i386-dis.c	FUNCTION_93
0x40046a5	    0x64488b042528	                mov rax, qword fs:[0x28]	     17675	i386-dis.c	FUNCTION_93
0x40046ae	      0x4889442408	                mov qword [rsp + 8], rax	     17675	i386-dis.c	FUNCTION_93
0x40046b3	            0x31c0	                            xor eax, eax	     17675	i386-dis.c	FUNCTION_93
0x40046b5	    0x8b0500000000	            mov eax, dword [0x040046bb] 	     17678	i386-dis.c	FUNCTION_93	IF_1
0x40046bb	            0x85c0	                           test eax, eax	     17678	i386-dis.c	FUNCTION_93	IF_1
0x40046bd	     0xf841f010000	                            je 0x40047e2	     17678	i386-dis.c	FUNCTION_93	IF_1
0x40046c3	    0x488b3d000000	            mov rdi, qword [0x040046ca] 	     17681	i386-dis.c	FUNCTION_93
0x40046ca	    0x488b05000000	            mov rax, qword [0x040046d1] 	     17681	i386-dis.c	FUNCTION_93
0x40046d1	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17681	i386-dis.c	FUNCTION_93
0x40046d5	        0x488d7001	                      lea rsi, [rax + 1]	     17681	i386-dis.c	FUNCTION_93
0x40046d9	          0x483b32	                    cmp rsi, qword [rdx]	     17681	i386-dis.c	FUNCTION_93
0x40046dc	     0xf87ce000000	                            ja 0x40047b0	     17681	i386-dis.c	FUNCTION_93
0x40046e2	           0xfb600	                   movzx eax, byte [rax]	     17682	i386-dis.c	FUNCTION_93
0x40046e5	    0x488935000000	            mov qword [0x040046ec], rsi 	     17682	i386-dis.c	FUNCTION_93
0x40046ec	          0x83f803	                              cmp eax, 3	     17687	i386-dis.c	FUNCTION_93	IF_2
0x40046ef	          0x4889c6	                            mov rsi, rax	     17682	i386-dis.c	FUNCTION_93
0x40046f2	            0x747c	                            je 0x4004770	     17687	i386-dis.c	FUNCTION_93	IF_2
0x40046f4	          0x83f806	                              cmp eax, 6	     17687	i386-dis.c	FUNCTION_93	IF_2
0x40046f7	            0x7777	                            ja 0x4004770	     17687	i386-dis.c	FUNCTION_93	IF_2
0x40046f9	    0x488b15000000	            mov rdx, qword [0x04004700] 	     17690	i386-dis.c	FUNCTION_93	IF_2
0x4004700	         0xfb64afe	               movzx ecx, byte [rdx - 2]	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004704	          0x80f970	                            cmp cl, 0x70	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004707	     0xf84bb000000	                            je 0x40047c8	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x400470d	        0x488d7afe	                      lea rdi, [rdx - 2]	     17690	i386-dis.c	FUNCTION_93	IF_2
0x4004711	          0x880c24	                      mov byte [rsp], cl	     17701	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4004714	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4004718	      0xc644240200	                   mov byte [rsp + 2], 0	     17703	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x400471d	        0x88542401	                  mov byte [rsp + 1], dl	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4004721	            0x89c0	                            mov eax, eax	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4004723	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004726	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400472b	        0x48c1e004	                              shl rax, 4	     17706	i386-dis.c	FUNCTION_93	IF_2
0x400472f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004736	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400473b	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004742	    0x488d98000000	                          lea rbx, [rax]	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4004749	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400474b	      0xe800000000	                          call 0x4004750	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004750	          0x8b4308	                mov eax, dword [rbx + 8]	     17707	i386-dis.c	FUNCTION_93	IF_2
0x4004753	    0x480105000000	            add qword [0x0400475a], rax 	     17707	i386-dis.c	FUNCTION_93	IF_2
0x400475a	      0x488b442408	                mov rax, qword [rsp + 8]	     17717	i386-dis.c	FUNCTION_93
0x400475f	    0x644833042528	                xor rax, qword fs:[0x28]	     17717	i386-dis.c	FUNCTION_93
0x4004768	            0x7573	                           jne 0x40047dd	     17717	i386-dis.c	FUNCTION_93
0x400476a	        0x4883c410	                           add rsp, 0x10	     17717	i386-dis.c	FUNCTION_93
0x400476e	              0x5b	                                 pop rbx	     17717	i386-dis.c	FUNCTION_93
0x400476f	              0xc3	                                     ret	     17717	i386-dis.c	FUNCTION_93
0x4004770	      0xbf00000000	                              mov edi, 0	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_3
0x4004775	    0xc60500000000	            mov byte [0x0400477c], 0x24 	     17712	i386-dis.c	FUNCTION_93	ELSE_2
0x400477c	      0xe89ff9ffff	call sym.print_operand_value.constprop.18	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_3
0x4004781	    0x480fbe350000	           movsx rsi, byte [0x04004789] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004789	    0x488b3d000000	            mov rdi, qword [0x04004790] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004790	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004797	      0xe800000000	                          call 0x400479c	       117	string3.h	FUNCTION_108	CALL_3
0x400479c	    0xc60500000000	                mov byte [0x040047a3], 0	     17715	i386-dis.c	FUNCTION_93	ELSE_2
0x40047a3	    0x488905000000	            mov qword [0x040047aa], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40047aa	            0xebae	                           jmp 0x400475a	     17717	i386-dis.c	FUNCTION_93
0x40047ac	         0xf1f4000	                         nop dword [rax]	     17717	i386-dis.c	FUNCTION_93
0x40047b0	      0xe81bd4ffff	                     call sym.fetch_data	     17681	i386-dis.c	FUNCTION_93
0x40047b5	    0x488b05000000	            mov rax, qword [0x040047bc] 	     17681	i386-dis.c	FUNCTION_93
0x40047bc	        0x488d7001	                      lea rsi, [rax + 1]	     17681	i386-dis.c	FUNCTION_93
0x40047c0	      0xe91dffffff	                           jmp 0x40046e2	     17681	i386-dis.c	FUNCTION_93
0x40047c5	           0xf1f00	                         nop dword [rax]	     17681	i386-dis.c	FUNCTION_93
0x40047c8	        0x488d7aff	                      lea rdi, [rdx - 1]	     17695	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x40047cc	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x40047d0	      0xc644240100	                   mov byte [rsp + 1], 0	     17697	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x40047d5	          0x881424	                      mov byte [rsp], dl	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x40047d8	      0xe944ffffff	                           jmp 0x4004721	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x40047dd	      0xe800000000	                          call 0x40047e2	     17717	i386-dis.c	FUNCTION_93
0x40047e2	      0xe800000000	                          call 0x40047e7	     17679	i386-dis.c	FUNCTION_93	CALL_1
OP_G	IF,9:CALL,16:functions,0:WHILE,0:ELSE,5:DO,0:SWITCH,1:FOR,0	168
0x40035f0	        0x4883ec08	                              sub rsp, 8	     15678	i386-dis.c	FUNCTION_27
0x40035f4	    0x8b1500000000	            mov edx, dword [0x040035fa] 	     15681	i386-dis.c	FUNCTION_27
0x40035fa	            0x31c0	                            xor eax, eax	     15681	i386-dis.c	FUNCTION_27
0x40035fc	          0xf6c204	                              test dl, 4	     15681	i386-dis.c	FUNCTION_27
0x40035ff	            0x740c	                            je 0x400360d	     15681	i386-dis.c	FUNCTION_27
0x4003601	    0x830d00000000	            or dword [0x04003608], 0x44 	     15681	i386-dis.c	FUNCTION_27
0x4003608	      0xb808000000	                              mov eax, 8	     15683	i386-dis.c	FUNCTION_27	IF_1
0x400360d	          0x83ff45	                           cmp edi, 0x45	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003610	     0xf87ea010000	                            ja 0x4003800	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003616	            0x89f9	                            mov ecx, edi	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003618	    0xff24cd000000	                       jmp qword [rcx*8]	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x400361f	              0x90	                                     nop	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003620	          0x83e208	                              and edx, 8	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003623	     0xf8437020000	                            je 0x4003860	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003629	    0x830d00000000	            or dword [0x04003630], 0x48 	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003630	     0x30500000000	             add eax, dword [0x04003636]	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4003636	            0x4898	                                    cdqe	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4003638	    0x488b15000000	            mov rdx, qword [0x0400363f] 	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x400363f	    0x488b3d000000	            mov rdi, qword [0x04003646] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003646	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400364a	      0xe800000000	                          call 0x400364f	       117	string3.h	FUNCTION_108	CALL_3
0x400364f	    0x488905000000	            mov qword [0x04003656], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003656	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x400365a	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x400365b	       0xf1f440000	                   nop dword [rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x4003660	     0x30500000000	             add eax, dword [0x04003666]	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4003666	    0x833d00000000	               cmp dword [0x0400366d], 2	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x400366d	            0x4898	                                    cdqe	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x400366f	            0x74c7	                            je 0x4003638	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4003671	    0x488b15000000	            mov rdx, qword [0x04003678] 	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4003678	    0x488b3d000000	            mov rdi, qword [0x0400367f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400367f	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003683	      0xe800000000	                          call 0x4003688	       117	string3.h	FUNCTION_108	CALL_3
0x4003688	    0x488905000000	            mov qword [0x0400368f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400368f	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x4003693	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x4003694	         0xf1f4000	                         nop dword [rax]	     15766	i386-dis.c	FUNCTION_27
0x4003698	    0x486305000000	         movsxd rax, dword [0x0400369f] 	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x400369f	          0x83f803	                              cmp eax, 3	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x40036a2	     0xf8f88010000	                            jg 0x4003830	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x40036a8	    0x488b15000000	            mov rdx, qword [0x040036af] 	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x40036af	    0x488b3d000000	            mov rdi, qword [0x040036b6] 	       117	string3.h	FUNCTION_108	CALL_3
0x40036b6	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40036ba	      0xe800000000	                          call 0x40036bf	       117	string3.h	FUNCTION_108	CALL_3
0x40036bf	    0x488905000000	            mov qword [0x040036c6], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40036c6	            0xeb8e	                           jmp 0x4003656	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40036c8	     0xf1f84000000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40036d0	     0x30500000000	             add eax, dword [0x040036d6]	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x40036d6	          0x83f807	                              cmp eax, 7	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x40036d9	     0xf8f51010000	                            jg 0x4003830	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x40036df	    0x488b15000000	            mov rdx, qword [0x040036e6] 	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x40036e6	            0x4898	                                    cdqe	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x40036e8	    0x488b3d000000	            mov rdi, qword [0x040036ef] 	       117	string3.h	FUNCTION_108	CALL_3
0x40036ef	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40036f3	      0xe800000000	                          call 0x40036f8	       117	string3.h	FUNCTION_108	CALL_3
0x40036f8	    0x488905000000	            mov qword [0x040036ff], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40036ff	      0xe952ffffff	                           jmp 0x4003656	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003704	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003708	     0x30500000000	             add eax, dword [0x0400370e]	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x400370e	    0x830d00000000	            or dword [0x04003715], 0x40 	     15687	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003715	            0x85d2	                           test edx, edx	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x4003717	            0x4898	                                    cdqe	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4003719	     0xf84b9010000	                            je 0x40038d8	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x400371f	    0x488b15000000	            mov rdx, qword [0x04003726] 	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4003726	    0x488b3d000000	            mov rdi, qword [0x0400372d] 	       117	string3.h	FUNCTION_108	CALL_3
0x400372d	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003731	      0xe800000000	                          call 0x4003736	       117	string3.h	FUNCTION_108	CALL_3
0x4003736	    0x488905000000	            mov qword [0x0400373d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400373d	      0xe914ffffff	                           jmp 0x4003656	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003742	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003748	     0x30500000000	             add eax, dword [0x0400374e]	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400374e	    0x488b15000000	            mov rdx, qword [0x04003755] 	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4003755	    0x488b3d000000	            mov rdi, qword [0x0400375c] 	       117	string3.h	FUNCTION_108	CALL_3
0x400375c	            0x4898	                                    cdqe	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400375e	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003762	      0xe800000000	                          call 0x4003767	       117	string3.h	FUNCTION_108	CALL_3
0x4003767	    0x488905000000	            mov qword [0x0400376e], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400376e	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x4003772	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x4003773	       0xf1f440000	                   nop dword [rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x4003778	    0x8b0d00000000	            mov ecx, dword [0x0400377e] 	     15730	i386-dis.c	FUNCTION_27	SWITCH_1
0x400377e	          0x83f902	                              cmp ecx, 2	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003781	     0xf8499010000	                            je 0x4003920	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003787	    0xf60500000000	               test byte [0x0400378e], 4	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x400378e	     0xf846c010000	                            je 0x4003900	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4003794	    0x486315000000	         movsxd rdx, dword [0x0400379b] 	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x400379b	          0x83f901	                              cmp ecx, 1	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x400379e	    0xc70495000000	                    mov dword [rdx*4], 0	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40037a9	    0x488b15000000	            mov rdx, qword [0x040037b0] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40037b0	            0x7407	                            je 0x40037b9	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40037b2	    0x488b15000000	            mov rdx, qword [0x040037b9] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40037b9	    0x810d00000000	            or dword [0x040037c3], 0x400	     15743	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40037c3	     0x30500000000	             add eax, dword [0x040037c9]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x40037c9	    0x488b3d000000	            mov rdi, qword [0x040037d0] 	       117	string3.h	FUNCTION_108	CALL_3
0x40037d0	            0x4898	                                    cdqe	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x40037d2	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40037d6	      0xe800000000	                          call 0x40037db	       117	string3.h	FUNCTION_108	CALL_3
0x40037db	    0x488905000000	            mov qword [0x040037e2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40037e2	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x40037e6	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x40037e7	    0x660f1f840000	                    nop word [rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x40037f0	     0x30500000000	             add eax, dword [0x040037f6]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x40037f6	            0x4898	                                    cdqe	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x40037f8	      0xe974feffff	                           jmp 0x4003671	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x40037fd	           0xf1f00	                         nop dword [rax]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4003800	      0xba05000000	                              mov edx, 5	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4003805	      0xbe00000000	                              mov esi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x400380a	      0xbf00000000	                              mov edi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x400380f	      0xe800000000	                          call 0x4003814	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4003814	    0x488b3d000000	            mov rdi, qword [0x0400381b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400381b	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x400381e	      0xe800000000	                          call 0x4003823	       117	string3.h	FUNCTION_108	CALL_3
0x4003823	    0x488905000000	            mov qword [0x0400382a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400382a	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x400382e	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x400382f	              0x90	                                     nop	     15766	i386-dis.c	FUNCTION_27
0x4003830	    0x488b05000000	            mov rax, qword [0x04003837] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003837	      0xba29000000	                           mov edx, 0x29	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400383c	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003842	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003846	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400384a	    0x488905000000	            mov qword [0x04003851], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003851	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x4003855	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x4003856	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x4003860	          0x83ff04	                              cmp edi, 4	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4003863	            0x7533	                           jne 0x4003898	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4003865	          0x83e601	                              and esi, 1	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4003868	            0x752e	                           jne 0x4003898	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x400386a	     0x30500000000	             add eax, dword [0x04003870]	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x4003870	    0x488b15000000	            mov rdx, qword [0x04003877] 	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x4003877	    0x488b3d000000	            mov rdi, qword [0x0400387e] 	       117	string3.h	FUNCTION_108	CALL_3
0x400387e	            0x4898	                                    cdqe	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x4003880	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003884	      0xe800000000	                          call 0x4003889	       117	string3.h	FUNCTION_108	CALL_3
0x4003889	    0x488905000000	            mov qword [0x04003890], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003890	            0xeb2c	                           jmp 0x40038be	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003892	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003898	     0x30500000000	             add eax, dword [0x0400389e]	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x400389e	    0x488b15000000	            mov rdx, qword [0x040038a5] 	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40038a5	    0x488b3d000000	            mov rdi, qword [0x040038ac] 	       117	string3.h	FUNCTION_108	CALL_3
0x40038ac	            0x4898	                                    cdqe	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40038ae	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40038b2	      0xe800000000	                          call 0x40038b7	       117	string3.h	FUNCTION_108	CALL_3
0x40038b7	    0x488905000000	            mov qword [0x040038be], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40038be	    0x8b0500000000	            mov eax, dword [0x040038c4] 	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40038c4	      0x2500020000	                          and eax, 0x200	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40038c9	     0x90500000000	              or dword [0x040038cf], eax	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40038cf	      0xe982fdffff	                           jmp 0x4003656	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40038d4	         0xf1f4000	                         nop dword [rax]	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40038d8	    0x488b15000000	            mov rdx, qword [0x040038df] 	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x40038df	    0x488b3d000000	            mov rdi, qword [0x040038e6] 	       117	string3.h	FUNCTION_108	CALL_3
0x40038e6	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40038ea	      0xe800000000	                          call 0x40038ef	       117	string3.h	FUNCTION_108	CALL_3
0x40038ef	    0x488905000000	            mov qword [0x040038f6], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40038f6	      0xe95bfdffff	                           jmp 0x4003656	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40038fb	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003900	            0x85c9	                           test ecx, ecx	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003902	    0x488b15000000	            mov rdx, qword [0x04003909] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003909	    0x480f44150000	           cmove rdx, qword [0x04003911]	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003911	      0xe9adfeffff	                           jmp 0x40037c3	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003920	    0xf60500000000	               test byte [0x04003927], 4	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4003927	    0x488b15000000	            mov rdx, qword [0x0400392e] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x400392e	     0xf848ffeffff	                            je 0x40037c3	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4003934	    0x486315000000	         movsxd rdx, dword [0x0400393b] 	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x400393b	    0xc70495000000	                    mov dword [rdx*4], 0	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4003946	      0xe967feffff	                           jmp 0x40037b2	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
OP_REG	IF,5:CALL,2:functions,0:WHILE,0:ELSE,4:DO,0:SWITCH,2:FOR,0	101
0x4003210	          0x8d47ba	                   lea eax, [rdi - 0x46]	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x4003213	        0x4883ec08	                              sub rsp, 8	     15852	i386-dis.c	FUNCTION_33
0x4003217	          0x83f805	                              cmp eax, 5	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x400321a	            0x7654	                           jbe 0x4003270	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x400321c	    0x8b1500000000	            mov edx, dword [0x04003222] 	     15864	i386-dis.c	FUNCTION_33
0x4003222	            0x31c0	                            xor eax, eax	     15868	i386-dis.c	FUNCTION_33	ELSE_1
0x4003224	          0xf6c201	                              test dl, 1	     15864	i386-dis.c	FUNCTION_33
0x4003227	            0x7517	                           jne 0x4003240	     15864	i386-dis.c	FUNCTION_33
0x4003229	          0x8d4fb4	                   lea ecx, [rdi - 0x4c]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400322c	          0x83f91f	                           cmp ecx, 0x1f	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400322f	            0x7723	                            ja 0x4003254	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003231	          0x4189c8	                            mov r8d, ecx	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003234	    0x42ff24c50000	                        jmp qword [r8*8]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400323c	         0xf1f4000	                         nop dword [rax]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003240	          0x8d4fb4	                   lea ecx, [rdi - 0x4c]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003243	    0x830d00000000	            or dword [0x0400324a], 0x41 	     15864	i386-dis.c	FUNCTION_33
0x400324a	      0xb808000000	                              mov eax, 8	     15866	i386-dis.c	FUNCTION_33	IF_1
0x400324f	          0x83f91f	                           cmp ecx, 0x1f	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003252	            0x76dd	                           jbe 0x4003231	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003254	      0xbe00000000	                              mov esi, 0	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003259	      0xba05000000	                              mov edx, 5	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400325e	      0xbf00000000	                              mov edi, 0	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003263	      0xe800000000	                          call 0x4003268	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003268	          0x4889c6	                            mov rsi, rax	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400326b	            0xeb44	                           jmp 0x40032b1	     15910	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400326d	           0xf1f00	                         nop dword [rax]	     15910	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003270	    0x488b05000000	            mov rax, qword [0x04003277] 	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4003277	          0x4863ff	                         movsxd rdi, edi	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x400327a	    0x488bb4f8d0fd	    mov rsi, qword [rax + rdi*8 - 0x230]	       117	string3.h	FUNCTION_108	CALL_3
0x4003282	    0x488b3d000000	            mov rdi, qword [0x04003289] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003289	      0xe800000000	                          call 0x400328e	       117	string3.h	FUNCTION_108	CALL_3
0x400328e	    0x488905000000	            mov qword [0x04003295], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003295	        0x4883c408	                              add rsp, 8	     15913	i386-dis.c	FUNCTION_33
0x4003299	              0xc3	                                     ret	     15913	i386-dis.c	FUNCTION_33
0x400329a	    0x660f1f440000	                    nop word [rax + rax]	     15913	i386-dis.c	FUNCTION_33
0x40032a0	        0x8d4438a4	             lea eax, [rax + rdi - 0x5c]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032a4	    0x488b15000000	            mov rdx, qword [0x040032ab] 	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032ab	            0x4898	                                    cdqe	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032ad	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032b1	    0x488b3d000000	            mov rdi, qword [0x040032b8] 	       117	string3.h	FUNCTION_108	CALL_3
0x40032b8	      0xe800000000	                          call 0x40032bd	       117	string3.h	FUNCTION_108	CALL_3
0x40032bd	    0x488905000000	            mov qword [0x040032c4], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40032c4	        0x4883c408	                              add rsp, 8	     15913	i386-dis.c	FUNCTION_33
0x40032c8	              0xc3	                                     ret	     15913	i386-dis.c	FUNCTION_33
0x40032c9	     0xf1f80000000	                         nop dword [rax]	     15913	i386-dis.c	FUNCTION_33
0x40032d0	          0x83e208	                              and edx, 8	     15913	i386-dis.c	FUNCTION_33
0x40032d3	    0x833d00000000	               cmp dword [0x040032da], 2	     15886	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40032da	     0xf84a8000000	                            je 0x4003388	     15886	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40032e0	            0x85d2	                           test edx, edx	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032e2	          0x8d4f9c	                   lea ecx, [rdi - 0x64]	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032e5	            0x7420	                            je 0x4003307	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032e7	    0x488b15000000	            mov rdx, qword [0x040032ee] 	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40032ee	             0x1c8	                            add eax, ecx	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40032f0	    0x830d00000000	            or dword [0x040032f7], 0x48 	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40032f7	            0x4898	                                    cdqe	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40032f9	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40032fd	            0xebb2	                           jmp 0x40032b1	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x40032ff	              0x90	                                     nop	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4003300	          0x83e208	                              and edx, 8	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4003303	            0x85d2	                           test edx, edx	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003305	            0x75e0	                           jne 0x40032e7	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003307	          0x83e601	                              and esi, 1	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400330a	            0x7464	                            je 0x4003370	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400330c	    0x488b15000000	            mov rdx, qword [0x04003313] 	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4003313	             0x1c8	                            add eax, ecx	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4003315	            0x4898	                                    cdqe	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4003317	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400331b	    0x8b0500000000	            mov eax, dword [0x04003321] 	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4003321	      0x2500020000	                          and eax, 0x200	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4003326	     0x90500000000	              or dword [0x0400332c], eax	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x400332c	            0xeb83	                           jmp 0x40032b1	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x400332e	            0x6690	                                     nop	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4003330	    0x830d00000000	            or dword [0x04003337], 0x40 	     15878	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4003337	            0x85d2	                           test edx, edx	     15879	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4003339	            0x741d	                            je 0x4003358	     15879	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x400333b	        0x8d4438ac	             lea eax, [rax + rdi - 0x54]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x400333f	    0x488b15000000	            mov rdx, qword [0x04003346] 	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4003346	            0x4898	                                    cdqe	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4003348	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x400334c	      0xe960ffffff	                           jmp 0x40032b1	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4003351	     0xf1f80000000	                         nop dword [rax]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x4003358	    0x488b05000000	            mov rax, qword [0x0400335f] 	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x400335f	          0x4863ff	                         movsxd rdi, edi	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4003362	    0x488bb4f860fd	    mov rsi, qword [rax + rdi*8 - 0x2a0]	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x400336a	      0xe942ffffff	                           jmp 0x40032b1	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x400336f	              0x90	                                     nop	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x4003370	    0x488b15000000	            mov rdx, qword [0x04003377] 	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4003377	             0x1c8	                            add eax, ecx	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4003379	            0x4898	                                    cdqe	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x400337b	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x400337f	            0xeb9a	                           jmp 0x400331b	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4003381	     0xf1f80000000	                         nop dword [rax]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4003388	        0x40f6c601	                             test sil, 1	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x400338c	            0x7508	                           jne 0x4003396	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x400338e	            0x85d2	                           test edx, edx	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4003390	     0xf844affffff	                            je 0x40032e0	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4003396	        0x8d44389c	             lea eax, [rax + rdi - 0x64]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x400339a	    0x488b15000000	            mov rdx, qword [0x040033a1] 	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40033a1	            0x4898	                                    cdqe	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40033a3	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40033a7	      0xe905ffffff	                           jmp 0x40032b1	     15890	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
VCMP_Fixup	IF,1:CALL,3:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	58
0x4004580	              0x53	                                push rbx	     17647	i386-dis.c	FUNCTION_92
0x4004581	        0x4883ec10	                           sub rsp, 0x10	     17647	i386-dis.c	FUNCTION_92
0x4004585	    0x488b3d000000	            mov rdi, qword [0x0400458c] 	     17650	i386-dis.c	FUNCTION_92
0x400458c	    0x64488b042528	                mov rax, qword fs:[0x28]	     17647	i386-dis.c	FUNCTION_92
0x4004595	      0x4889442408	                mov qword [rsp + 8], rax	     17647	i386-dis.c	FUNCTION_92
0x400459a	            0x31c0	                            xor eax, eax	     17647	i386-dis.c	FUNCTION_92
0x400459c	    0x488b05000000	            mov rax, qword [0x040045a3] 	     17650	i386-dis.c	FUNCTION_92
0x40045a3	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17650	i386-dis.c	FUNCTION_92
0x40045a7	        0x488d7001	                      lea rsi, [rax + 1]	     17650	i386-dis.c	FUNCTION_92
0x40045ab	          0x483b32	                    cmp rsi, qword [rdx]	     17650	i386-dis.c	FUNCTION_92
0x40045ae	     0xf87cc000000	                            ja 0x4004680	     17650	i386-dis.c	FUNCTION_92
0x40045b4	           0xfb600	                   movzx eax, byte [rax]	     17651	i386-dis.c	FUNCTION_92
0x40045b7	    0x488935000000	            mov qword [0x040045be], rsi 	     17651	i386-dis.c	FUNCTION_92
0x40045be	          0x83f81f	                           cmp eax, 0x1f	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x40045c1	          0x4889c6	                            mov rsi, rax	     17651	i386-dis.c	FUNCTION_92
0x40045c4	            0x765a	                           jbe 0x4004620	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x40045c6	      0xbf00000000	                              mov edi, 0	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_2
0x40045cb	    0xc60500000000	            mov byte [0x040045d2], 0x24 	     17665	i386-dis.c	FUNCTION_92	ELSE_1
0x40045d2	      0xe849fbffff	call sym.print_operand_value.constprop.18	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_2
0x40045d7	    0x480fbe350000	           movsx rsi, byte [0x040045df] 	       117	string3.h	FUNCTION_108	CALL_3
0x40045df	    0x488b3d000000	            mov rdi, qword [0x040045e6] 	       117	string3.h	FUNCTION_108	CALL_3
0x40045e6	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40045ed	      0xe800000000	                          call 0x40045f2	       117	string3.h	FUNCTION_108	CALL_3
0x40045f2	    0xc60500000000	                mov byte [0x040045f9], 0	     17668	i386-dis.c	FUNCTION_92	ELSE_1
0x40045f9	    0x488905000000	            mov qword [0x04004600], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004600	      0x488b442408	                mov rax, qword [rsp + 8]	     17670	i386-dis.c	FUNCTION_92
0x4004605	    0x644833042528	                xor rax, qword fs:[0x28]	     17670	i386-dis.c	FUNCTION_92
0x400460e	     0xf8581000000	                           jne 0x4004695	     17670	i386-dis.c	FUNCTION_92
0x4004614	        0x4883c410	                           add rsp, 0x10	     17670	i386-dis.c	FUNCTION_92
0x4004618	              0x5b	                                 pop rbx	     17670	i386-dis.c	FUNCTION_92
0x4004619	              0xc3	                                     ret	     17670	i386-dis.c	FUNCTION_92
0x400461a	    0x660f1f440000	                    nop word [rax + rax]	     17670	i386-dis.c	FUNCTION_92
0x4004620	    0x488b3d000000	            mov rdi, qword [0x04004627] 	     17655	i386-dis.c	FUNCTION_92	IF_1
0x4004627	            0x89c0	                            mov eax, eax	     17659	i386-dis.c	FUNCTION_92	IF_1
0x4004629	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x400462c	        0x48c1e004	                              shl rax, 4	     17659	i386-dis.c	FUNCTION_92	IF_1
0x4004630	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004635	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400463a	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004641	    0x488d98000000	                          lea rbx, [rax]	     17659	i386-dis.c	FUNCTION_92	IF_1
0x4004648	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400464a	         0xfb657fe	               movzx edx, byte [rdi - 2]	     17656	i386-dis.c	FUNCTION_92	IF_1
0x400464e	        0x4883ef02	                              sub rdi, 2	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004652	          0x881424	                      mov byte [rsp], dl	     17656	i386-dis.c	FUNCTION_92	IF_1
0x4004655	         0xfb65701	               movzx edx, byte [rdi + 1]	     17657	i386-dis.c	FUNCTION_92	IF_1
0x4004659	      0xc644240200	                   mov byte [rsp + 2], 0	     17658	i386-dis.c	FUNCTION_92	IF_1
0x400465e	        0x88542401	                  mov byte [rsp + 1], dl	     17657	i386-dis.c	FUNCTION_92	IF_1
0x4004662	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004669	      0xe800000000	                          call 0x400466e	        33	stdio2.h	FUNCTION_113	CALL_1
0x400466e	          0x8b4308	                mov eax, dword [rbx + 8]	     17660	i386-dis.c	FUNCTION_92	IF_1
0x4004671	    0x480105000000	            add qword [0x04004678], rax 	     17660	i386-dis.c	FUNCTION_92	IF_1
0x4004678	            0xeb86	                           jmp 0x4004600	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400467a	    0x660f1f440000	                    nop word [rax + rax]	     17660	i386-dis.c	FUNCTION_92	IF_1
0x4004680	      0xe84bd5ffff	                     call sym.fetch_data	     17650	i386-dis.c	FUNCTION_92
0x4004685	    0x488b05000000	            mov rax, qword [0x0400468c] 	     17650	i386-dis.c	FUNCTION_92
0x400468c	        0x488d7001	                      lea rsi, [rax + 1]	     17650	i386-dis.c	FUNCTION_92
0x4004690	      0xe91fffffff	                           jmp 0x40045b4	     17650	i386-dis.c	FUNCTION_92
0x4004695	      0xe800000000	                          call 0x400469a	     17670	i386-dis.c	FUNCTION_92
OP_EX_VexW	IF,4:CALL,3:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	43
0x4008ef0	              0x55	                                push rbp	     17505	i386-dis.c	FUNCTION_86
0x4008ef1	              0x53	                                push rbx	     17505	i386-dis.c	FUNCTION_86
0x4008ef2	            0x89fd	                            mov ebp, edi	     17505	i386-dis.c	FUNCTION_86
0x4008ef4	            0x89f3	                            mov ebx, esi	     17505	i386-dis.c	FUNCTION_86
0x4008ef6	        0x4883ec08	                              sub rsp, 8	     17505	i386-dis.c	FUNCTION_86
0x4008efa	    0x803d00000000	                cmp byte [0x04008f01], 0	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4008f01	            0x754d	                           jne 0x4008f50	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4008f03	    0x803d00000000	                cmp byte [0x04008f0a], 0	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4008f0a	            0x7475	                            je 0x4008f81	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4008f0c	    0x8b1500000000	            mov edx, dword [0x04008f12] 	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4008f12	    0x488305000000	               add qword [0x04008f1a], 1	     17512	i386-dis.c	FUNCTION_86	IF_1
0x4008f1a	            0x85d2	                           test edx, edx	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4008f1c	            0x7552	                           jne 0x4008f70	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4008f1e	      0xbaffffffff	                     mov edx, 0xffffffff	     17506	i386-dis.c	FUNCTION_86
0x4008f23	            0x89de	                            mov esi, ebx	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4008f25	            0x89ef	                            mov edi, ebp	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4008f27	      0xe814feffff	                   call sym.OP_EX_VexReg	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4008f2c	    0x803d00000000	                cmp byte [0x04008f33], 0	     17525	i386-dis.c	FUNCTION_86	IF_4
0x4008f33	            0x7408	                            je 0x4008f3d	     17525	i386-dis.c	FUNCTION_86	IF_4
0x4008f35	    0x488305000000	               add qword [0x04008f3d], 1	     17526	i386-dis.c	FUNCTION_86	IF_4
0x4008f3d	    0xc60500000000	                mov byte [0x04008f44], 1	     17527	i386-dis.c	FUNCTION_86
0x4008f44	        0x4883c408	                              add rsp, 8	     17528	i386-dis.c	FUNCTION_86
0x4008f48	              0x5b	                                 pop rbx	     17528	i386-dis.c	FUNCTION_86
0x4008f49	              0x5d	                                 pop rbp	     17528	i386-dis.c	FUNCTION_86
0x4008f4a	              0xc3	                                     ret	     17528	i386-dis.c	FUNCTION_86
0x4008f4b	       0xf1f440000	                   nop dword [rax + rax]	     17528	i386-dis.c	FUNCTION_86
0x4008f50	    0x8b0500000000	            mov eax, dword [0x04008f56] 	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4008f56	            0x85c0	                           test eax, eax	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4008f58	            0x75c4	                           jne 0x4008f1e	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4008f5a	      0xbe01000000	                              mov esi, 1	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008f5f	            0x89df	                            mov edi, ebx	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008f61	      0xe89a8effff	                   call sym.get_vex_imm8	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008f66	          0xc0e804	                               shr al, 4	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008f69	           0xfb6d0	                           movzx edx, al	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008f6c	            0xebb5	                           jmp 0x4008f23	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008f6e	            0x6690	                                     nop	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008f70	            0x31f6	                            xor esi, esi	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008f72	            0x89df	                            mov edi, ebx	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008f74	      0xe8878effff	                   call sym.get_vex_imm8	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008f79	          0xc0e804	                               shr al, 4	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008f7c	           0xfb6d0	                           movzx edx, al	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008f7f	            0xeba2	                           jmp 0x4008f23	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008f81	      0xe800000000	                          call 0x4008f86	     17511	i386-dis.c	FUNCTION_86	IF_1
OP_I	IF,4:CALL,9:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,1:FOR,0	81
0x40047f0	        0x4883ec08	                              sub rsp, 8	     15975	i386-dis.c	FUNCTION_35
0x40047f4	          0x83ff28	                           cmp edi, 0x28	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40047f7	     0xf8733010000	                            ja 0x4004930	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40047fd	            0x89ff	                            mov edi, edi	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40047ff	    0xff24fd000000	                       jmp qword [rdi*8]	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004806	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004810	    0x833d00000000	               cmp dword [0x04004817], 2	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x4004817	            0x7410	                            je 0x4004829	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x4004819	    0xf60500000000	               test byte [0x04004820], 8	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004820	            0x741e	                            je 0x4004840	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004822	    0x830d00000000	            or dword [0x04004829], 0x48 	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004829	      0xe832d4ffff	                         call sym.get32s	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x400482e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     15977	i386-dis.c	FUNCTION_35
0x4004835	          0x4889c6	                            mov rsi, rax	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x4004838	            0xeb64	                           jmp 0x400489e	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x400483a	    0x660f1f440000	                    nop word [rax + rax]	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x4004840	          0x83e601	                              and esi, 1	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4004843	     0xf84cf000000	                            je 0x4004918	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4004849	      0xe842d5ffff	                          call sym.get32	     16001	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3	CALL_3
0x400484e	      0xbaffffffff	                     mov edx, 0xffffffff	     16002	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4004853	          0x4889c6	                            mov rsi, rax	     16001	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3	CALL_3
0x4004856	    0x8b0500000000	            mov eax, dword [0x0400485c] 	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x400485c	      0x2500020000	                          and eax, 0x200	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4004861	     0x90500000000	              or dword [0x04004867], eax	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4004867	            0xeb35	                           jmp 0x400489e	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4004869	     0xf1f80000000	                         nop dword [rax]	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4004870	    0x488b3d000000	            mov rdi, qword [0x04004877] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004877	    0x488b05000000	            mov rax, qword [0x0400487e] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400487e	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004882	        0x488d7001	                      lea rsi, [rax + 1]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004886	          0x483b32	                    cmp rsi, qword [rdx]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004889	     0xf87d1000000	                            ja 0x4004960	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400488f	    0x488935000000	            mov qword [0x04004896], rsi 	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004896	           0xfb630	                   movzx esi, byte [rax]	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004899	      0xbaff000000	                           mov edx, 0xff	     15984	i386-dis.c	FUNCTION_35	SWITCH_1
0x400489e	          0x4821d6	                            and rsi, rdx	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x40048a1	      0xbf00000000	                              mov edi, 0	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x40048a6	    0xc60500000000	            mov byte [0x040048ad], 0x24 	     16026	i386-dis.c	FUNCTION_35
0x40048ad	      0xe86ef8ffff	call sym.print_operand_value.constprop.18	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x40048b2	    0x480fbe350000	           movsx rsi, byte [0x040048ba] 	       117	string3.h	FUNCTION_108	CALL_3
0x40048ba	    0x488b3d000000	            mov rdi, qword [0x040048c1] 	       117	string3.h	FUNCTION_108	CALL_3
0x40048c1	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40048c8	      0xe800000000	                          call 0x40048cd	       117	string3.h	FUNCTION_108	CALL_3
0x40048cd	    0xc60500000000	                mov byte [0x040048d4], 0	     16029	i386-dis.c	FUNCTION_35
0x40048d4	    0x488905000000	            mov qword [0x040048db], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40048db	        0x4883c408	                              add rsp, 8	     16030	i386-dis.c	FUNCTION_35
0x40048df	              0xc3	                                     ret	     16030	i386-dis.c	FUNCTION_35
0x40048e0	      0xe8ebd3ffff	                          call sym.get16	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x40048e5	      0xbaffff0f00	                        mov edx, 0xfffff	     16013	i386-dis.c	FUNCTION_35	SWITCH_1
0x40048ea	          0x4863f0	                         movsxd rsi, eax	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x40048ed	            0xebaf	                           jmp 0x400489e	     16015	i386-dis.c	FUNCTION_35	SWITCH_1
0x40048ef	              0x90	                                     nop	     16015	i386-dis.c	FUNCTION_35	SWITCH_1
0x40048f0	    0x803d00000000	                cmp byte [0x040048f7], 0	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x40048f7	            0x74e2	                            je 0x40048db	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x40048f9	    0x488b05000000	            mov rax, qword [0x04004900] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004900	      0xba31000000	                           mov edx, 0x31	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004905	          0x668910	                      mov word [rax], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004908	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400490c	    0x488905000000	            mov qword [0x04004913], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004913	            0xebc6	                           jmp 0x40048db	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004915	           0xf1f00	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004918	      0xe8b3d3ffff	                          call sym.get16	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x400491d	      0xbaffff0f00	                        mov edx, 0xfffff	     16007	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2
0x4004922	          0x4863f0	                         movsxd rsi, eax	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x4004925	      0xe92cffffff	                           jmp 0x4004856	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x400492a	    0x660f1f440000	                    nop word [rax + rax]	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x4004930	      0xba05000000	                              mov edx, 5	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x4004935	      0xbe00000000	                              mov esi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x400493a	      0xbf00000000	                              mov edi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x400493f	      0xe800000000	                          call 0x4004944	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x4004944	    0x488b3d000000	            mov rdi, qword [0x0400494b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400494b	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x400494e	      0xe800000000	                          call 0x4004953	       117	string3.h	FUNCTION_108	CALL_3
0x4004953	    0x488905000000	            mov qword [0x0400495a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400495a	        0x4883c408	                              add rsp, 8	     16030	i386-dis.c	FUNCTION_35
0x400495e	              0xc3	                                     ret	     16030	i386-dis.c	FUNCTION_35
0x400495f	              0x90	                                     nop	     16030	i386-dis.c	FUNCTION_35
0x4004960	      0xe86bd2ffff	                     call sym.fetch_data	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004965	    0x488b05000000	            mov rax, qword [0x0400496c] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400496c	        0x488d7001	                      lea rsi, [rax + 1]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4004970	      0xe91affffff	                           jmp 0x400488f	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
get32s	IF,0:CALL,0:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	27
0x4001c60	        0x4883ec08	                              sub rsp, 8	     15808	i386-dis.c	FUNCTION_30
0x4001c64	    0x488b3d000000	            mov rdi, qword [0x04001c6b] 	     15811	i386-dis.c	FUNCTION_30
0x4001c6b	    0x488b15000000	            mov rdx, qword [0x04001c72] 	     15811	i386-dis.c	FUNCTION_30
0x4001c72	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15811	i386-dis.c	FUNCTION_30
0x4001c76	        0x488d7204	                      lea rsi, [rdx + 4]	     15811	i386-dis.c	FUNCTION_30
0x4001c7a	          0x483b30	                    cmp rsi, qword [rax]	     15811	i386-dis.c	FUNCTION_30
0x4001c7d	            0x7610	                           jbe 0x4001c8f	     15811	i386-dis.c	FUNCTION_30
0x4001c7f	      0xe84cffffff	                     call sym.fetch_data	     15811	i386-dis.c	FUNCTION_30
0x4001c84	    0x488b15000000	            mov rdx, qword [0x04001c8b] 	     15811	i386-dis.c	FUNCTION_30
0x4001c8b	        0x488d7204	                      lea rsi, [rdx + 4]	     15811	i386-dis.c	FUNCTION_30
0x4001c8f	         0xfb64a01	               movzx ecx, byte [rdx + 1]	     15814	i386-dis.c	FUNCTION_30
0x4001c93	         0xfb64202	               movzx eax, byte [rdx + 2]	     15814	i386-dis.c	FUNCTION_30
0x4001c97	           0xfb63a	                   movzx edi, byte [rdx]	     15812	i386-dis.c	FUNCTION_30
0x4001c9a	    0x488935000000	            mov qword [0x04001ca1], rsi 	     15815	i386-dis.c	FUNCTION_30
0x4001ca1	        0x48c1e108	                              shl rcx, 8	     15814	i386-dis.c	FUNCTION_30
0x4001ca5	        0x48c1e010	                           shl rax, 0x10	     15814	i386-dis.c	FUNCTION_30
0x4001ca9	          0x4809c8	                             or rax, rcx	     15814	i386-dis.c	FUNCTION_30
0x4001cac	          0x4809f8	                             or rax, rdi	     15814	i386-dis.c	FUNCTION_30
0x4001caf	          0x4889c1	                            mov rcx, rax	     15814	i386-dis.c	FUNCTION_30
0x4001cb2	         0xfb64203	               movzx eax, byte [rdx + 3]	     15817	i386-dis.c	FUNCTION_30
0x4001cb6	      0xba00000080	                     mov edx, 0x80000000	     15817	i386-dis.c	FUNCTION_30
0x4001cbb	        0x4883c408	                              add rsp, 8	     15820	i386-dis.c	FUNCTION_30
0x4001cbf	        0x48c1e018	                           shl rax, 0x18	     15817	i386-dis.c	FUNCTION_30
0x4001cc3	          0x4809c8	                             or rax, rcx	     15817	i386-dis.c	FUNCTION_30
0x4001cc6	          0x4831d0	                            xor rax, rdx	     15817	i386-dis.c	FUNCTION_30
0x4001cc9	    0x480500000080	             add rax, 0xffffffff80000000	     15819	i386-dis.c	FUNCTION_30
0x4001ccf	              0xc3	                                     ret	     15820	i386-dis.c	FUNCTION_30
ptr_reg	IF,3:CALL,1:functions,0:WHILE,0:ELSE,3:DO,0:SWITCH,0:FOR,0	33
0x40021a0	        0x4883ec08	                              sub rsp, 8	     16279	i386-dis.c	FUNCTION_43
0x40021a4	     0xfb60d000000	           movzx ecx, byte [0x040021ab] 	     16282	i386-dis.c	FUNCTION_43
0x40021ab	    0x488b05000000	            mov rax, qword [0x040021b2] 	     16282	i386-dis.c	FUNCTION_43
0x40021b2	          0x4863d7	                         movsxd rdx, edi	     16279	i386-dis.c	FUNCTION_43
0x40021b5	        0x488d7801	                      lea rdi, [rax + 1]	     16282	i386-dis.c	FUNCTION_43
0x40021b9	            0x8808	                      mov byte [rax], cl	     16282	i386-dis.c	FUNCTION_43
0x40021bb	    0x8b0500000000	            mov eax, dword [0x040021c1] 	     16283	i386-dis.c	FUNCTION_43
0x40021c1	      0x2500040000	                          and eax, 0x400	     16283	i386-dis.c	FUNCTION_43
0x40021c6	     0x90500000000	              or dword [0x040021cc], eax	     16283	i386-dis.c	FUNCTION_43
0x40021cc	    0x833d00000000	               cmp dword [0x040021d3], 2	     16284	i386-dis.c	FUNCTION_43	IF_1
0x40021d3	            0x743b	                            je 0x4002210	     16284	i386-dis.c	FUNCTION_43	IF_1
0x40021d5	          0x83e602	                              and esi, 2	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x40021d8	            0x753b	                           jne 0x4002215	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x40021da	    0x488b05000000	            mov rax, qword [0x040021e1] 	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x40021e1	    0x488bb4d0a0fd	    mov rsi, qword [rax + rdx*8 - 0x260]	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x40021e9	      0xe800000000	                          call 0x40021ee	       117	string3.h	FUNCTION_108	CALL_3
0x40021ee	        0x488d5001	                      lea rdx, [rax + 1]	     16296	i386-dis.c	FUNCTION_43
0x40021f2	        0xc6400100	                   mov byte [rax + 1], 0	     16297	i386-dis.c	FUNCTION_43
0x40021f6	    0x488915000000	            mov qword [0x040021fd], rdx 	     16296	i386-dis.c	FUNCTION_43
0x40021fd	     0xfb615000000	           movzx edx, byte [0x04002204] 	     16296	i386-dis.c	FUNCTION_43
0x4002204	            0x8810	                      mov byte [rax], dl	     16296	i386-dis.c	FUNCTION_43
0x4002206	        0x4883c408	                              add rsp, 8	     16298	i386-dis.c	FUNCTION_43
0x400220a	              0xc3	                                     ret	     16298	i386-dis.c	FUNCTION_43
0x400220b	       0xf1f440000	                   nop dword [rax + rax]	     16298	i386-dis.c	FUNCTION_43
0x4002210	          0x83e602	                              and esi, 2	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4002213	            0x751b	                           jne 0x4002230	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4002215	    0x488b05000000	            mov rax, qword [0x0400221c] 	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x400221c	    0x488bb4d0a0fd	    mov rsi, qword [rax + rdx*8 - 0x260]	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4002224	            0xebc3	                           jmp 0x40021e9	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4002226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4002230	    0x488b05000000	            mov rax, qword [0x04002237] 	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4002237	    0x488bb4d0a0fd	    mov rsi, qword [rax + rdx*8 - 0x260]	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x400223f	            0xeba8	                           jmp 0x40021e9	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
OP_J	IF,6:CALL,6:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,1:FOR,0	126
0x4004c60	        0x4883ec08	                              sub rsp, 8	     16141	i386-dis.c	FUNCTION_38
0x4004c64	          0x83ff01	                              cmp edi, 1	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004c67	     0xf84e3000000	                            je 0x4004d50	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004c6d	          0x83ff04	                              cmp edi, 4	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004c70	            0x7436	                            je 0x4004ca8	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004c72	      0xba05000000	                              mov edx, 5	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4004c77	      0xbe00000000	                              mov esi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4004c7c	      0xbf00000000	                              mov edi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4004c81	      0xe800000000	                          call 0x4004c86	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4004c86	    0x488b3d000000	            mov rdi, qword [0x04004c8d] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004c8d	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4004c90	      0xe800000000	                          call 0x4004c95	       117	string3.h	FUNCTION_108	CALL_3
0x4004c95	    0x488905000000	            mov qword [0x04004c9c], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004c9c	        0x4883c408	                              add rsp, 8	     16187	i386-dis.c	FUNCTION_38
0x4004ca0	              0xc3	                                     ret	     16187	i386-dis.c	FUNCTION_38
0x4004ca1	     0xf1f80000000	                         nop dword [rax]	     16187	i386-dis.c	FUNCTION_38
0x4004ca8	    0x8b0500000000	            mov eax, dword [0x04004cae] 	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4004cae	            0x85c0	                           test eax, eax	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4004cb0	            0x7510	                           jne 0x4004cc2	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4004cb2	    0xf60500000000	               test byte [0x04004cb9], 8	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4004cb9	            0x7407	                            je 0x4004cc2	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4004cbb	    0x830d00000000	            or dword [0x04004cc2], 0x48 	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4004cc2	          0x83e601	                              and esi, 1	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004cc5	     0xf8585010000	                           jne 0x4004e50	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004ccb	    0x833d00000000	               cmp dword [0x04004cd2], 2	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004cd2	     0xf8460010000	                            je 0x4004e38	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004cd8	      0xe8f3cfffff	                          call sym.get16	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x4004cdd	          0x4c63c0	                          movsxd r8, eax	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x4004ce0	          0xf6c480	                           test ah, 0x80	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x4004ce3	    0x498d900000ff	                 lea rdx, [r8 - 0x10000]	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x4004cea	        0x4c0f45c2	                          cmovne r8, rdx	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x4004cee	    0xf60500000000	               test byte [0x04004cf5], 2	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004cf5	     0xf85d5010000	                           jne 0x4004ed0	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004cfb	    0x488b0d000000	            mov rcx, qword [0x04004d02] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004d02	    0x488b3d000000	            mov rdi, qword [0x04004d09] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004d09	      0xbaffff0000	                         mov edx, 0xffff	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004d0e	          0x4889ce	                            mov rsi, rcx	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004d11	    0x482b35000000	             sub rsi, qword [0x04004d18]	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004d18	          0x4801fe	                            add rsi, rdi	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004d1b	          0x4889f0	                            mov rax, rsi	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004d1e	          0x6631c0	                              xor ax, ax	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4004d21	    0x448b0d000000	            mov r9d, dword [0x04004d28] 	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d28	        0x4183f902	                              cmp r9d, 2	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d2c	     0xf847e010000	                            je 0x4004eb0	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d32	    0x8b3500000000	            mov esi, dword [0x04004d38] 	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d38	    0x81e600020000	                          and esi, 0x200	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d3e	     0x93500000000	              or dword [0x04004d44], esi	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d44	          0x4889ce	                            mov rsi, rcx	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d47	            0xeb51	                           jmp 0x4004d9a	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d49	     0xf1f80000000	                         nop dword [rax]	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004d50	    0x488b3d000000	            mov rdi, qword [0x04004d57] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d57	    0x488b05000000	            mov rax, qword [0x04004d5e] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d5e	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d62	        0x488d7001	                      lea rsi, [rax + 1]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d66	          0x483b32	                    cmp rsi, qword [rdx]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d69	     0xf8729010000	                            ja 0x4004e98	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d6f	        0x440fb600	                   movzx r8d, byte [rax]	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d73	    0x488935000000	            mov qword [0x04004d7a], rsi 	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004d7a	          0x4584c0	                           test r8b, r8b	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4004d7d	     0xf888d000000	                            js 0x4004e10	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4004d83	    0x448b0d000000	            mov r9d, dword [0x04004d8a] 	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4004d8a	    0x488b3d000000	            mov rdi, qword [0x04004d91] 	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4004d91	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x4004d93	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x4004d9a	          0x4889f1	                            mov rcx, rsi	     16183	i386-dis.c	FUNCTION_38
0x4004d9d	    0x482b0d000000	             sub rcx, qword [0x04004da4]	     16183	i386-dis.c	FUNCTION_38
0x4004da4	          0x4c01c7	                             add rdi, r8	     16183	i386-dis.c	FUNCTION_38
0x4004da7	        0x488d3439	                    lea rsi, [rcx + rdi]	     16183	i386-dis.c	FUNCTION_38
0x4004dab	          0x4821d6	                            and rsi, rdx	     16183	i386-dis.c	FUNCTION_38
0x4004dae	          0x4809c6	                             or rsi, rax	     16183	i386-dis.c	FUNCTION_38
0x4004db1	    0x486305000000	         movsxd rax, dword [0x04004db8] 	     15836	i386-dis.c	FUNCTION_32
0x4004db8	        0x4183f902	                              cmp r9d, 2	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4004dbc	    0x890485000000	                  mov dword [rax*4], eax	     15836	i386-dis.c	FUNCTION_32
0x4004dc3	     0xf84af000000	                            je 0x4004e78	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4004dc9	            0x89f2	                            mov edx, esi	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4004dcb	    0x48c704c50000	                    mov qword [rax*8], 0	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4004dd7	    0x488914c50000	                  mov qword [rax*8], rdx	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4004ddf	      0xbf00000000	                              mov edi, 0	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x4004de4	      0xe837f3ffff	call sym.print_operand_value.constprop.18	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x4004de9	    0x488b3d000000	            mov rdi, qword [0x04004df0] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004df0	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004df5	      0xe800000000	                          call 0x4004dfa	       117	string3.h	FUNCTION_108	CALL_3
0x4004dfa	    0x488905000000	            mov qword [0x04004e01], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004e01	        0x4883c408	                              add rsp, 8	     16187	i386-dis.c	FUNCTION_38
0x4004e05	              0xc3	                                     ret	     16187	i386-dis.c	FUNCTION_38
0x4004e06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     16187	i386-dis.c	FUNCTION_38
0x4004e10	    0x4981e8000100	                           sub r8, 0x100	     16152	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4004e17	    0x448b0d000000	            mov r9d, dword [0x04004e1e] 	     16152	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4004e1e	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x4004e20	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x4004e27	    0x488b3d000000	            mov rdi, qword [0x04004e2e] 	     16143	i386-dis.c	FUNCTION_38
0x4004e2e	      0xe967ffffff	                           jmp 0x4004d9a	     16143	i386-dis.c	FUNCTION_38
0x4004e33	       0xf1f440000	                   nop dword [rax + rax]	     16143	i386-dis.c	FUNCTION_38
0x4004e38	            0x85c0	                           test eax, eax	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004e3a	            0x7514	                           jne 0x4004e50	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004e3c	    0xf60500000000	               test byte [0x04004e43], 8	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004e43	     0xf848ffeffff	                            je 0x4004cd8	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004e49	     0xf1f80000000	                         nop dword [rax]	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4004e50	      0xe80bceffff	                         call sym.get32s	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4004e55	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x4004e5c	          0x4989c0	                             mov r8, rax	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4004e5f	    0x488b0d000000	            mov rcx, qword [0x04004e66] 	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4004e66	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x4004e68	    0x488b3d000000	            mov rdi, qword [0x04004e6f] 	     16144	i386-dis.c	FUNCTION_38
0x4004e6f	      0xe9adfeffff	                           jmp 0x4004d21	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4004e74	         0xf1f4000	                         nop dword [rax]	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4004e78	    0x488934c50000	                  mov qword [rax*8], rsi	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4004e80	    0x48c704c50000	                    mov qword [rax*8], 0	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4004e8c	      0xe94effffff	                           jmp 0x4004ddf	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4004e91	     0xf1f80000000	                         nop dword [rax]	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4004e98	      0xe833cdffff	                     call sym.fetch_data	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004e9d	    0x488b05000000	            mov rax, qword [0x04004ea4] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004ea4	        0x488d7001	                      lea rsi, [rax + 1]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004ea8	      0xe9c2feffff	                           jmp 0x4004d6f	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004ead	           0xf1f00	                         nop dword [rax]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4004eb0	    0x8b3500000000	            mov esi, dword [0x04004eb6] 	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004eb6	            0x85f6	                           test esi, esi	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004eb8	     0xf8586feffff	                           jne 0x4004d44	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004ebe	    0xf60500000000	               test byte [0x04004ec5], 8	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004ec5	     0xf8579feffff	                           jne 0x4004d44	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004ecb	      0xe962feffff	                           jmp 0x4004d32	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4004ed0	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x4004ed2	      0xbaffff0000	                         mov edx, 0xffff	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004ed7	    0x488b0d000000	            mov rcx, qword [0x04004ede] 	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004ede	    0x488b3d000000	            mov rdi, qword [0x04004ee5] 	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004ee5	      0xe937feffff	                           jmp 0x4004d21	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
MOVBE_Fixup	IF,4:CALL,2:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,1:FOR,0	59
0x4008460	          0x83ff04	                              cmp edi, 4	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x4008463	            0x4154	                                push r12	     17821	i386-dis.c	FUNCTION_96
0x4008465	          0x4189f4	                           mov r12d, esi	     17821	i386-dis.c	FUNCTION_96
0x4008468	              0x55	                                push rbp	     17821	i386-dis.c	FUNCTION_96
0x4008469	            0x89fd	                            mov ebp, edi	     17821	i386-dis.c	FUNCTION_96
0x400846b	              0x53	                                push rbx	     17821	i386-dis.c	FUNCTION_96
0x400846c	    0x488b1d000000	            mov rbx, qword [0x04008473] 	     17823	i386-dis.c	FUNCTION_96
0x4008473	            0x754b	                           jne 0x40084c0	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x4008475	    0x803d00000000	                cmp byte [0x0400847c], 0	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400847c	            0x741a	                            je 0x4008498	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400847e	    0x833d00000000	               cmp dword [0x04008485], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4008485	            0x7476	                            je 0x40084fd	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4008487	              0x5b	                                 pop rbx	     17855	i386-dis.c	FUNCTION_96
0x4008488	          0x4489e6	                           mov esi, r12d	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x400848b	            0x89ef	                            mov edi, ebp	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x400848d	              0x5d	                                 pop rbp	     17855	i386-dis.c	FUNCTION_96
0x400848e	            0x415c	                                 pop r12	     17855	i386-dis.c	FUNCTION_96
0x4008490	      0xe9bbdbffff	                            jmp sym.OP_E	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x4008495	           0xf1f00	                         nop dword [rax]	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x4008498	    0xf60500000000	               test byte [0x0400849f], 8	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400849f	            0x746f	                            je 0x4008510	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x40084a1	    0x830d00000000	            or dword [0x040084a8], 0x48 	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x40084a8	        0x40f6c604	                             test sil, 4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x40084ac	            0x743c	                            je 0x40084ea	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x40084ae	          0xc60371	                    mov byte [rbx], 0x71	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x40084b1	        0x4883c301	                              add rbx, 1	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x40084b5	            0xeb33	                           jmp 0x40084ea	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x40084b7	    0x660f1f840000	                    nop word [rax + rax]	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x40084c0	      0xba05000000	                              mov edx, 5	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x40084c5	      0xbe00000000	                              mov esi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x40084ca	      0xbf00000000	                              mov edi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x40084cf	      0xe800000000	                          call 0x40084d4	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x40084d4	    0x488b3d000000	            mov rdi, qword [0x040084db] 	       117	string3.h	FUNCTION_108	CALL_3
0x40084db	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40084de	      0xe800000000	                          call 0x40084e3	       117	string3.h	FUNCTION_108	CALL_3
0x40084e3	    0x488905000000	            mov qword [0x040084ea], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40084ea	    0x833d00000000	               cmp dword [0x040084f1], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40084f1	    0x48891d000000	            mov qword [0x040084f8], rbx 	     17850	i386-dis.c	FUNCTION_96
0x40084f8	          0xc60300	                       mov byte [rbx], 0	     17851	i386-dis.c	FUNCTION_96
0x40084fb	            0x758a	                           jne 0x4008487	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40084fd	              0x5b	                                 pop rbx	     17855	i386-dis.c	FUNCTION_96
0x40084fe	              0x5d	                                 pop rbp	     17855	i386-dis.c	FUNCTION_96
0x40084ff	            0x415c	                                 pop r12	     17855	i386-dis.c	FUNCTION_96
0x4008501	      0xe95a9fffff	                           jmp sym.BadOp	     16673	i386-dis.c	FUNCTION_58	CALL_1
0x4008506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     16673	i386-dis.c	FUNCTION_58	CALL_1
0x4008510	        0x40f6c604	                             test sil, 4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4008514	            0x74d4	                            je 0x40084ea	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4008516	        0x41f6c401	                            test r12b, 1	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400851a	            0x7524	                           jne 0x4008540	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x400851c	          0xc60377	                    mov byte [rbx], 0x77	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x400851f	        0x4883c301	                              add rbx, 1	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x4008523	    0x8b0500000000	            mov eax, dword [0x04008529] 	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4008529	      0x2500020000	                          and eax, 0x200	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x400852e	     0x90500000000	              or dword [0x04008534], eax	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4008534	            0xebb4	                           jmp 0x40084ea	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4008536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4008540	          0xc6036c	                    mov byte [rbx], 0x6c	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x4008543	        0x4883c301	                              add rbx, 1	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x4008547	            0xebda	                           jmp 0x4008523	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
print_insn_i386_att	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	2
0x4008f90	    0xc60500000000	                mov byte [0x04008f97], 0	     12676	i386-dis.c	FUNCTION_4
0x4008f97	      0xe914d3ffff	                      jmp sym.print_insn	     12678	i386-dis.c	FUNCTION_4	CALL_1
print_insn_i386	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	2
0x4008fb0	    0xc60500000000	            mov byte [0x04008fb7], 0xff 	     12692	i386-dis.c	FUNCTION_6
0x4008fb7	      0xe9f4d2ffff	                      jmp sym.print_insn	     12694	i386-dis.c	FUNCTION_6	CALL_1
OP_STi	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	15
0x4001fd0	        0x4883ec08	                              sub rsp, 8	     13975	i386-dis.c	FUNCTION_16
0x4001fd4	    0x448b05000000	            mov r8d, dword [0x04001fdb] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001fdb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001fe0	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001fe5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001fea	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001fef	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001ff1	      0xe800000000	                          call 0x4001ff6	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001ff6	    0x480fbe350000	           movsx rsi, byte [0x04001ffe] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001ffe	    0x488b3d000000	            mov rdi, qword [0x04002005] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002005	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x400200c	      0xe800000000	                          call 0x4002011	       117	string3.h	FUNCTION_108	CALL_3
0x4002011	    0x488905000000	            mov qword [0x04002018], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002018	        0x4883c408	                              add rsp, 8	     13978	i386-dis.c	FUNCTION_16
0x400201c	              0xc3	                                     ret	     13978	i386-dis.c	FUNCTION_16
HLE_Fixup2	IF,3:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	12
0x4006110	    0x833d00000000	               cmp dword [0x04006117], 3	     17001	i386-dis.c	FUNCTION_72	IF_1
0x4006117	            0x7432	                            je 0x400614b	     17001	i386-dis.c	FUNCTION_72	IF_1
0x4006119	    0x8b0500000000	            mov eax, dword [0x0400611f] 	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x400611f	            0xa801	                              test al, 1	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4006121	            0x7412	                            je 0x4006135	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4006123	    0x486315000000	         movsxd rdx, dword [0x0400612a] 	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x400612a	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4006135	            0xa802	                              test al, 2	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4006137	            0x7412	                            je 0x400614b	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4006139	    0x486305000000	         movsxd rax, dword [0x04006140] 	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4006140	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x400614b	      0xe900ffffff	                            jmp sym.OP_E	     17009	i386-dis.c	FUNCTION_72	CALL_1
OP_EX_Vex	IF,2:CALL,2:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	13
0x4008cb0	    0x833d00000000	               cmp dword [0x04008cb7], 3	     17572	i386-dis.c	FUNCTION_89	IF_1
0x4008cb7	            0x7411	                            je 0x4008cca	     17572	i386-dis.c	FUNCTION_89	IF_1
0x4008cb9	    0x8b0500000000	            mov eax, dword [0x04008cbf] 	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4008cbf	            0x85c0	                           test eax, eax	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4008cc1	            0x750d	                           jne 0x4008cd0	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4008cc3	    0xc60500000000	                mov byte [0x04008cca], 0	     17576	i386-dis.c	FUNCTION_89	IF_1
0x4008cca	      0xe921feffff	                           jmp sym.OP_EX	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4008ccf	              0x90	                                     nop	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4008cd0	        0x4883ec08	                              sub rsp, 8	     17571	i386-dis.c	FUNCTION_89
0x4008cd4	      0xe88797ffff	                          call sym.BadOp	     17575	i386-dis.c	FUNCTION_89	IF_1	CALL_1
0x4008cd9	    0xc60500000000	                mov byte [0x04008ce0], 0	     17576	i386-dis.c	FUNCTION_89	IF_1
0x4008ce0	        0x4883c408	                              add rsp, 8	     17579	i386-dis.c	FUNCTION_89
0x4008ce4	      0xe907feffff	                           jmp sym.OP_EX	     17578	i386-dis.c	FUNCTION_89	CALL_2
OP_DIR	IF,2:CALL,5:functions,0:WHILE,0:ELSE,2:DO,0:SWITCH,0:FOR,0	32
0x4003950	          0x83e601	                              and esi, 1	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4003953	              0x53	                                push rbx	     16200	i386-dis.c	FUNCTION_40
0x4003954	            0x746a	                            je 0x40039c0	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4003956	      0xe835e4ffff	                          call sym.get32	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x400395b	            0x89c3	                            mov ebx, eax	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x400395d	      0xe86ee3ffff	                          call sym.get16	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x4003962	          0x4189c0	                            mov r8d, eax	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x4003965	    0x8b1500000000	            mov edx, dword [0x0400396b] 	     16213	i386-dis.c	FUNCTION_40
0x400396b	          0x4189d9	                            mov r9d, ebx	        33	stdio2.h	FUNCTION_113	CALL_1
0x400396e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4003973	    0x81e200020000	                          and edx, 0x200	     16213	i386-dis.c	FUNCTION_40
0x4003979	     0x91500000000	              or dword [0x0400397f], edx	     16213	i386-dis.c	FUNCTION_40
0x400397f	    0x803d00000000	                cmp byte [0x04003986], 0	     16214	i386-dis.c	FUNCTION_40	IF_2
0x4003986	            0x7505	                           jne 0x400398d	     16214	i386-dis.c	FUNCTION_40	IF_2
0x4003988	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400398d	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4003992	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4003997	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400399c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400399e	      0xe800000000	                          call 0x40039a3	        33	stdio2.h	FUNCTION_113	CALL_1
0x40039a3	    0x488b3d000000	            mov rdi, qword [0x040039aa] 	       117	string3.h	FUNCTION_108	CALL_3
0x40039aa	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40039af	      0xe800000000	                          call 0x40039b4	       117	string3.h	FUNCTION_108	CALL_3
0x40039b4	              0x5b	                                 pop rbx	     16219	i386-dis.c	FUNCTION_40
0x40039b5	    0x488905000000	            mov qword [0x040039bc], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40039bc	              0xc3	                                     ret	     16219	i386-dis.c	FUNCTION_40
0x40039bd	           0xf1f00	                         nop dword [rax]	     16219	i386-dis.c	FUNCTION_40
0x40039c0	      0xe80be3ffff	                          call sym.get16	     16210	i386-dis.c	FUNCTION_40	ELSE_1	CALL_3
0x40039c5	            0x89c3	                            mov ebx, eax	     16210	i386-dis.c	FUNCTION_40	ELSE_1	CALL_3
0x40039c7	      0xe804e3ffff	                          call sym.get16	     16211	i386-dis.c	FUNCTION_40	ELSE_1	CALL_4
0x40039cc	          0x4189c0	                            mov r8d, eax	     16211	i386-dis.c	FUNCTION_40	ELSE_1	CALL_4
0x40039cf	            0xeb94	                           jmp 0x4003965	     16211	i386-dis.c	FUNCTION_40	ELSE_1	CALL_4
get_vex_imm8	IF,9:CALL,0:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,2:FOR,0	105
0x4001e00	    0x8b1500000000	            mov edx, dword [0x04001e06] 	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4001e06	              0x53	                                push rbx	     17278	i386-dis.c	FUNCTION_80
0x4001e07	          0x83fa03	                              cmp edx, 3	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4001e0a	     0xf8480000000	                            je 0x4001e90	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4001e10	          0x83e702	                              and edi, 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4001e13	            0x89f3	                            mov ebx, esi	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4001e15	            0x7451	                            je 0x4001e68	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4001e17	    0x8b3500000000	            mov esi, dword [0x04001e1d] 	     17287	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4001e1d	    0x488b05000000	            mov rax, qword [0x04001e24] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001e24	          0x83fe04	                              cmp esi, 4	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001e27	     0xf84a3000000	                            je 0x4001ed0	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001e2d	            0x85db	                           test ebx, ebx	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4001e2f	    0x488b3d000000	            mov rdi, qword [0x04001e36] 	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4001e36	            0x7566	                           jne 0x4001e9e	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4001e38	        0x488b4f68	            mov rcx, qword [rdi + 0x68] 	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4001e3c	            0x31db	                            xor ebx, ebx	     17279	i386-dis.c	FUNCTION_80
0x4001e3e	          0x488b09	                    mov rcx, qword [rcx]	     17279	i386-dis.c	FUNCTION_80
0x4001e41	          0x83fa01	                              cmp edx, 1	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e44	     0xf84e6000000	                            je 0x4001f30	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e4a	          0x83fa02	                              cmp edx, 2	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e4d	     0xf84be000000	                            je 0x4001f11	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e53	            0x85d2	                           test edx, edx	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e55	     0xf84ad000000	                            je 0x4001f08	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e5b	        0x488d7301	                      lea rsi, [rbx + 1]	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e5f	            0xeb4b	                           jmp 0x4001eac	     17323	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e61	     0xf1f80000000	                         nop dword [rax]	     17323	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001e68	    0x833d00000000	               cmp dword [0x04001e6f], 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4001e6f	            0x74a6	                            je 0x4001e17	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4001e71	            0x85f6	                           test esi, esi	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4001e73	            0x751b	                           jne 0x4001e90	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4001e75	          0x83fa01	                              cmp edx, 1	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e78	     0xf8422010000	                            je 0x4001fa0	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e7e	          0x83fa02	                              cmp edx, 2	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e81	     0xf84c6000000	                            je 0x4001f4d	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e87	            0x85d2	                           test edx, edx	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e89	     0xf84b1000000	                            je 0x4001f40	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e8f	              0x90	                                     nop	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e90	    0x488b05000000	            mov rax, qword [0x04001e97] 	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e97	    0x488b3d000000	            mov rdi, qword [0x04001e9e] 	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001e9e	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001ea2	      0xbe01000000	                              mov esi, 1	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4001ea7	            0x31db	                            xor ebx, ebx	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4001ea9	          0x488b0a	                    mov rcx, qword [rdx]	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4001eac	          0x4801c6	                            add rsi, rax	     17361	i386-dis.c	FUNCTION_80
0x4001eaf	          0x4839ce	                            cmp rsi, rcx	     17361	i386-dis.c	FUNCTION_80
0x4001eb2	            0x760c	                           jbe 0x4001ec0	     17361	i386-dis.c	FUNCTION_80
0x4001eb4	      0xe817fdffff	                     call sym.fetch_data	     17361	i386-dis.c	FUNCTION_80
0x4001eb9	    0x488b05000000	            mov rax, qword [0x04001ec0] 	     17361	i386-dis.c	FUNCTION_80
0x4001ec0	         0xfb60418	             movzx eax, byte [rax + rbx]	     17362	i386-dis.c	FUNCTION_80
0x4001ec4	              0x5b	                                 pop rbx	     17363	i386-dis.c	FUNCTION_80
0x4001ec5	              0xc3	                                     ret	     17363	i386-dis.c	FUNCTION_80
0x4001ec6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17363	i386-dis.c	FUNCTION_80
0x4001ed0	    0x488b3d000000	            mov rdi, qword [0x04001ed7] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001ed7	        0x488d7001	                      lea rsi, [rax + 1]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001edb	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001edf	          0x488b0a	                    mov rcx, qword [rdx]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001ee2	          0x4839ce	                            cmp rsi, rcx	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001ee5	     0xf878d000000	                            ja 0x4001f78	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001eeb	            0x85db	                           test ebx, ebx	     17298	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3	IF_4
0x4001eed	            0x7531	                           jne 0x4001f20	     17298	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3	IF_4
0x4001eef	           0xfb630	                   movzx esi, byte [rax]	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001ef2	    0x8b1500000000	            mov edx, dword [0x04001ef8] 	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001ef8	      0xbb01000000	                              mov ebx, 1	     17299	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3	IF_4
0x4001efd	          0x83e607	                              and esi, 7	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f00	      0xe93cffffff	                           jmp 0x4001e41	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f05	           0xf1f00	                         nop dword [rax]	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f08	          0x83fe05	                              cmp esi, 5	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4001f0b	     0xf854affffff	                           jne 0x4001e5b	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4001f11	          0x83c304	                              add ebx, 4	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4001f14	          0x4863db	                         movsxd rbx, ebx	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4001f17	        0x488d7301	                      lea rsi, [rbx + 1]	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4001f1b	            0xeb8f	                           jmp 0x4001eac	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f1d	           0xf1f00	                         nop dword [rax]	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f20	      0xbe01000000	                              mov esi, 1	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f25	            0x31db	                            xor ebx, ebx	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f27	            0xeb83	                           jmp 0x4001eac	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f29	     0xf1f80000000	                         nop dword [rax]	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f30	          0x83c301	                              add ebx, 1	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f33	          0x4863db	                         movsxd rbx, ebx	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f36	      0xe920ffffff	                           jmp 0x4001e5b	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f3b	       0xf1f440000	                   nop dword [rax + rax]	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4001f40	    0x833d00000000	               cmp dword [0x04001f47], 6	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4001f47	     0xf8543ffffff	                           jne 0x4001e90	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4001f4d	    0x488b3d000000	            mov rdi, qword [0x04001f54] 	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4001f54	    0x488b05000000	            mov rax, qword [0x04001f5b] 	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4001f5b	      0xbe03000000	                              mov esi, 3	     17346	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001f60	      0xbb02000000	                              mov ebx, 2	     17346	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001f65	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17346	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001f69	          0x488b0a	                    mov rcx, qword [rdx]	     17346	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001f6c	      0xe93bffffff	                           jmp 0x4001eac	     17346	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001f71	     0xf1f80000000	                         nop dword [rax]	     17346	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001f78	      0xe853fcffff	                     call sym.fetch_data	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f7d	    0x488b3d000000	            mov rdi, qword [0x04001f84] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f84	    0x488b05000000	            mov rax, qword [0x04001f8b] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f8b	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f8f	          0x488b0a	                    mov rcx, qword [rdx]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f92	      0xe954ffffff	                           jmp 0x4001eeb	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001f97	    0x660f1f840000	                    nop word [rax + rax]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001fa0	    0x488b3d000000	            mov rdi, qword [0x04001fa7] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001fa7	    0x488b05000000	            mov rax, qword [0x04001fae] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4001fae	      0xbe02000000	                              mov esi, 2	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001fb3	      0xbb01000000	                              mov ebx, 1	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001fb8	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001fbc	          0x488b0a	                    mov rcx, qword [rdx]	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4001fbf	      0xe9e8feffff	                           jmp 0x4001eac	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
putop	IF,111:CALL,8:functions,0:WHILE,2:ELSE,41:DO,0:SWITCH,3:FOR,1	1445
0x4000200	            0x4157	                                push r15	     13983	i386-dis.c	FUNCTION_17
0x4000202	            0x4156	                                push r14	     13983	i386-dis.c	FUNCTION_17
0x4000204	            0x4155	                                push r13	     13983	i386-dis.c	FUNCTION_17
0x4000206	            0x4154	                                push r12	     13983	i386-dis.c	FUNCTION_17
0x4000208	              0x55	                                push rbp	     13983	i386-dis.c	FUNCTION_17
0x4000209	              0x53	                                push rbx	     13983	i386-dis.c	FUNCTION_17
0x400020a	        0x4883ec58	                           sub rsp, 0x58	     13983	i386-dis.c	FUNCTION_17
0x400020e	           0xfb617	                   movzx edx, byte [rdi]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000211	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	     13983	i386-dis.c	FUNCTION_17
0x400021a	      0x48895c2448	             mov qword [rsp + 0x48], rbx	     13983	i386-dis.c	FUNCTION_17
0x400021f	            0x31db	                            xor ebx, ebx	     13983	i386-dis.c	FUNCTION_17
0x4000221	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000223	     0xf84bb160000	                            je 0x40018e4	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000229	    0x8b0d00000000	            mov ecx, dword [0x0400022f] 	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x400022f	    0x440fb61d0000	          movzx r11d, byte [0x04000237] 	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x4000237	            0x89f0	                            mov eax, esi	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x4000239	    0x448b25000000	           mov r12d, dword [0x04000240] 	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000240	    0x8b1d00000000	            mov ebx, dword [0x04000246] 	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000246	    0x41ba01000000	                             mov r10d, 1	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400024c	    0x448b3d000000	           mov r15d, dword [0x04000253] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000253	    0x8b2d00000000	            mov ebp, dword [0x04000259] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000259	          0x4189cd	                           mov r13d, ecx	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x400025c	            0x89ce	                            mov esi, ecx	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400025e	      0xc644241e00	                mov byte [rsp + 0x1e], 0	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000263	    0x81e600040000	                          and esi, 0x400	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4000269	    0x4181e5000200	                         and r13d, 0x200	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000270	        0x4183e408	                             and r12d, 8	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000274	          0x4584db	                         test r11b, r11b	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000277	        0x895c243c	             mov dword [rsp + 0x3c], ebx	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400027b	        0x89742410	             mov dword [rsp + 0x10], esi	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400027f	       0xf9544241f	                 setne byte [rsp + 0x1f]	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000284	        0x4180fb01	                             cmp r11b, 1	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000288	     0xfb61d000000	           movzx ebx, byte [0x0400028f] 	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x400028f	            0x19f6	                            sbb esi, esi	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4000291	    0xc744240c0100	                mov dword [rsp + 0xc], 1	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000299	          0x83e608	                              and esi, 8	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400029c	          0x83c664	                           add esi, 0x64	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400029f	      0x408874243a	              mov byte [rsp + 0x3a], sil	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40002a4	    0x488b35000000	            mov rsi, qword [0x040002ab] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40002ab	        0x885c2438	               mov byte [rsp + 0x38], bl	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40002af	    0x8b1d00000000	            mov ebx, dword [0x040002b5] 	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40002b5	      0x4889742428	             mov qword [rsp + 0x28], rsi	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40002ba	          0x4989f0	                             mov r8, rsi	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40002bd	            0x89ce	                            mov esi, ecx	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002bf	          0x83e628	                           and esi, 0x28	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002c2	        0x895c2414	             mov dword [rsp + 0x14], ebx	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40002c6	            0x89cb	                            mov ebx, ecx	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40002c8	    0x81e300080000	                          and ebx, 0x800	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40002ce	          0x83fe08	                              cmp esi, 8	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002d1	        0x89742430	             mov dword [rsp + 0x30], esi	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002d5	        0x410f94c1	                                sete r9b	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002d9	        0x895c2424	             mov dword [rsp + 0x24], ebx	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40002dd	          0x83fe20	                           cmp esi, 0x20	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002e0	     0xfbe1d000000	           movsx ebx, byte [0x040002e7] 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40002e7	        0x400f94c6	                                sete sil	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002eb	          0x83e120	                           and ecx, 0x20	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40002ee	          0x4109f1	                             or r9d, esi	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002f1	        0x4180fb01	                             cmp r11b, 1	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002f5	        0x894c2434	             mov dword [rsp + 0x34], ecx	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40002f9	            0x19f6	                            sbb esi, esi	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40002fb	      0x44884c2439	              mov byte [rsp + 0x39], r9b	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000300	          0x4531f6	                          xor r14d, r14d	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000303	            0x31c9	                            xor ecx, ecx	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000305	          0x4531c9	                            xor r9d, r9d	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000308	        0x895c2420	             mov dword [rsp + 0x20], ebx	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x400030c	            0x89f3	                            mov ebx, esi	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x400030e	            0x89c6	                            mov esi, eax	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000310	          0x83e604	                              and esi, 4	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000313	          0x83e3fc	                     and ebx, 0xfffffffc	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000316	          0x83c377	                           add ebx, 0x77	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000319	        0x89742408	                mov dword [rsp + 8], esi	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400031d	            0x89c6	                            mov esi, eax	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x400031f	          0x83e002	                              and eax, 2	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000322	        0x885c243b	               mov byte [rsp + 0x3b], bl	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000326	          0x83e601	                              and esi, 1	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000329	            0x31db	                            xor ebx, ebx	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400032b	        0x89442418	             mov dword [rsp + 0x18], eax	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x400032f	          0x8d42df	                   lea eax, [rdx - 0x21]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000332	            0x3c5c	                            cmp al, 0x5c	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000334	     0xf87e5000000	                            ja 0x400041f	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400033a	    0x660f1f440000	                    nop word [rax + rax]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000340	           0xfb6c0	                           movzx eax, al	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000343	    0xff24c5000000	                       jmp qword [rax*8]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400034a	    0x660f1f440000	                    nop word [rax + rax]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000350	            0x84d2	                             test dl, dl	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x4000352	          0x4889c7	                            mov rdi, rax	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x4000355	     0xf84ee0f0000	                            je 0x4001349	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x400035b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x400035f	        0x488d4701	                      lea rax, [rdi + 1]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4000363	          0x80fa7d	                            cmp dl, 0x7d	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4000366	            0x75e8	                           jne 0x4000350	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4000368	         0xfb65702	               movzx edx, byte [rdi + 2]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x400036c	          0x4889c7	                            mov rdi, rax	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x400036f	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000372	        0x4883c701	                              add rdi, 1	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000376	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000378	            0x75b5	                           jne 0x400032f	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400037a	    0x660f1f440000	                    nop word [rax + rax]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000380	            0x84db	                             test bl, bl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000382	     0xf8537160000	                           jne 0x40019bf	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000388	          0x4584f6	                         test r14b, r14b	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400038b	            0x7406	                            je 0x4000393	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400038d	    0x892d00000000	            mov dword [0x04000393], ebp 	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000393	      0x807c241e00	                cmp byte [rsp + 0x1e], 0	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000398	     0xf8452150000	                            je 0x40018f0	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400039e	    0x44893d000000	           mov dword [0x040003a5], r15d 	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40003a5	      0xe946150000	                           jmp 0x40018f0	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40003aa	    0x660f1f440000	                    nop word [rax + rax]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40003b0	          0x4584db	                         test r11b, r11b	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003b3	     0xf8507060000	                           jne 0x40009c0	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003b9	    0x833d00000000	               cmp dword [0x040003c0], 2	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003c0	     0xf8505040000	                           jne 0x40007cb	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003c6	            0x85f6	                           test esi, esi	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003c8	            0x7509	                           jne 0x40003d3	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003ca	          0x4585e4	                         test r12d, r12d	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003cd	     0xf84900d0000	                            je 0x4001163	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003d3	        0x41c60071	                     mov byte [r8], 0x71	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003d7	      0xbb01000000	                              mov ebx, 1	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003dc	         0xfb65701	               movzx edx, byte [rdi + 1]	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003e0	        0x4983c001	                               add r8, 1	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003e4	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40003e7	            0xeb1f	                           jmp 0x4000408	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003e9	     0xf1f80000000	                         nop dword [rax]	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003f0	          0x4584db	                         test r11b, r11b	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40003f3	     0xf85770a0000	                           jne 0x4000e70	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40003f9	         0xfb65701	               movzx edx, byte [rdi + 1]	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40003fd	    0x41b901000000	                              mov r9d, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000403	       0xf1f440000	                   nop dword [rax + rax]	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000408	        0x4883c701	                              add rdi, 1	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400040c	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400040e	     0xf846cffffff	                            je 0x4000380	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000414	          0x8d42df	                   lea eax, [rdx - 0x21]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000417	            0x3c5c	                            cmp al, 0x5c	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000419	     0xf8621ffffff	                           jbe 0x4000340	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400041f	          0x418810	                       mov byte [r8], dl	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000422	      0xbb01000000	                              mov ebx, 1	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000427	         0xfb65701	               movzx edx, byte [rdi + 1]	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400042b	        0x4983c001	                               add r8, 1	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400042f	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000432	            0xebd4	                           jmp 0x4000408	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000434	         0xf1f4000	                         nop dword [rax]	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000438	          0x4584db	                         test r11b, r11b	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x400043b	     0xf8407070000	                            je 0x4000b48	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4000441	         0xfb65701	               movzx edx, byte [rdi + 1]	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4000445	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000448	            0xebbe	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000450	          0x4584db	                         test r11b, r11b	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4000453	     0xf848f080000	                            je 0x4000ce8	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4000459	         0xfb65701	               movzx edx, byte [rdi + 1]	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x400045d	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000460	            0xeba6	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000462	    0x660f1f440000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000468	          0x4585e4	                         test r12d, r12d	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400046b	     0xf840f080000	                            je 0x4000c80	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000471	        0x4183cf48	                           or r15d, 0x48	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000475	          0x4584db	                         test r11b, r11b	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000478	        0x498d4001	                       lea rax, [r8 + 1]	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x400047c	        0x41c60071	                     mov byte [r8], 0x71	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4000480	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000485	     0xf84dd110000	                            je 0x4001668	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400048b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400048f	          0x4989c0	                             mov r8, rax	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000492	            0x84d2	                             test dl, dl	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000494	     0xf845d0d0000	                            je 0x40011f7	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400049a	          0x4585e4	                         test r12d, r12d	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x400049d	     0xf84fd070000	                            je 0x4000ca0	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40004a3	      0xbb01000000	                              mov ebx, 1	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40004a8	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004ab	      0xe958ffffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004b0	            0x85c9	                           test ecx, ecx	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004b2	     0xf85180a0000	                           jne 0x4000ed0	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004b8	        0x4183fa01	                             cmp r10d, 1	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004bc	     0xf850e0a0000	                           jne 0x4000ed0	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004c2	          0x4584db	                         test r11b, r11b	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x40004c5	     0xf856c0b0000	                           jne 0x4001037	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x40004cb	        0x8b442408	                mov eax, dword [rsp + 8]	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004cf	            0x85c0	                           test eax, eax	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004d1	     0xf85a50d0000	                           jne 0x400127c	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004d7	         0xfb65701	               movzx edx, byte [rdi + 1]	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004db	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004de	      0xe925ffffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004e3	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004e8	          0x4584db	                         test r11b, r11b	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x40004eb	     0xf84cf070000	                            je 0x4000cc0	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x40004f1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x40004f5	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004f8	      0xe90bffffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004fd	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000500	            0x85c9	                           test ecx, ecx	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4000502	           0xf95c2	                                setne dl	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4000505	        0x4183fa01	                             cmp r10d, 1	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4000509	           0xf95c0	                                setne al	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x400050c	             0x8d0	                               or al, dl	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x400050e	     0xf842c070000	                            je 0x4000c40	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4000514	          0x83f901	                              cmp ecx, 1	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000517	            0x7511	                           jne 0x400052a	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000519	        0x4183fa02	                             cmp r10d, 2	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400051d	            0x750b	                           jne 0x400052a	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400051f	      0x807c244058	            cmp byte [rsp + 0x40], 0x58 	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000524	     0xf84600f0000	                            je 0x400148a	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400052a	          0x4139ca	                           cmp r10d, ecx	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400052d	     0xf86160e0000	                           jbe 0x4001349	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000533	          0x83f903	                              cmp ecx, 3	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000536	     0xf870d0e0000	                            ja 0x4001349	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400053c	            0x89c8	                            mov eax, ecx	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400053e	         0xfb65701	               movzx edx, byte [rdi + 1]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000542	          0x83c101	                              add ecx, 1	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000545	      0xc64404405a	      mov byte [rsp + rax + 0x40], 0x5a 	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400054a	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400054d	      0xe9b6feffff	                           jmp 0x4000408	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000552	    0x660f1f440000	                    nop word [rax + rax]	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000558	          0x4584db	                         test r11b, r11b	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x400055b	     0xf84af090000	                            je 0x4000f10	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4000561	         0xfb65701	               movzx edx, byte [rdi + 1]	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4000565	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000568	      0xe99bfeffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400056d	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000570	    0x833d00000000	               cmp dword [0x04000577], 2	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x4000577	     0xf84af0c0000	                            je 0x400122c	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x400057d	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000581	            0x85c0	                           test eax, eax	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000583	            0x740d	                            je 0x4000592	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000585	        0x41c60065	                     mov byte [r8], 0x65	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000589	      0xbb01000000	                              mov ebx, 1	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x400058e	        0x4983c001	                               add r8, 1	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000592	         0xb6c2410	              or ebp, dword [rsp + 0x10]	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000596	         0xfb65701	               movzx edx, byte [rdi + 1]	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400059a	    0x41be01000000	                             mov r14d, 1	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005a0	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005a3	      0xe960feffff	                           jmp 0x4000408	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005a8	     0xf1f84000000	                   nop dword [rax + rax]	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005b0	        0x8b442424	            mov eax, dword [rsp + 0x24] 	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40005b4	            0x85c0	                           test eax, eax	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40005b6	     0xf85a4090000	                           jne 0x4000f60	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40005bc	        0x41c6006e	                     mov byte [r8], 0x6e	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40005c0	      0xbb01000000	                              mov ebx, 1	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40005c5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40005c9	        0x4983c001	                               add r8, 1	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40005cd	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005d0	      0xe933feffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005d5	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005d8	        0x8b542420	            mov edx, dword [rsp + 0x20] 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005dc	        0x3954240c	              cmp dword [rsp + 0xc], edx	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005e0	     0xf843a0c0000	                            je 0x4001220	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005e6	        0x41c60072	                     mov byte [r8], 0x72	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005ea	      0xbb01000000	                              mov ebx, 1	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005ef	         0xfb65701	               movzx edx, byte [rdi + 1]	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005f3	        0x4983c001	                               add r8, 1	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005f7	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005fa	      0xe909feffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005ff	              0x90	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000600	            0x85c9	                           test ecx, ecx	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000602	     0xf8578090000	                           jne 0x4000f80	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000608	        0x4183fa01	                             cmp r10d, 1	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x400060c	     0xf856e090000	                           jne 0x4000f80	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000612	          0x4584db	                         test r11b, r11b	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4000615	     0xf843b060000	                            je 0x4000c56	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x400061b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x400061f	    0x41ba01000000	                             mov r10d, 1	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4000625	            0x31c9	                            xor ecx, ecx	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4000627	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400062a	      0xe9d9fdffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400062f	              0x90	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000630	          0x4585e4	                         test r12d, r12d	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000633	     0xf8417080000	                            je 0x4000e50	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000639	        0x41c60071	                     mov byte [r8], 0x71	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x400063d	        0x4183cf48	                           or r15d, 0x48	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000641	         0xfb65701	               movzx edx, byte [rdi + 1]	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000645	        0x4983c001	                               add r8, 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4000649	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x400064e	      0xbb01000000	                              mov ebx, 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4000653	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000656	      0xe9adfdffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400065b	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000660	        0x4183c201	                             add r10d, 1	     14004	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000664	         0xfb65701	               movzx edx, byte [rdi + 1]	     14004	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000668	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400066b	      0xe998fdffff	                           jmp 0x4000408	     14005	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000670	            0x85c9	                           test ecx, ecx	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000672	           0xf94c2	                                 sete dl	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000675	        0x4183fa01	                             cmp r10d, 1	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000679	           0xf94c0	                                 sete al	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x400067c	            0x20d0	                              and al, dl	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x400067e	     0xf84cc060000	                            je 0x4000d50	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000684	          0x4584db	                         test r11b, r11b	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000687	     0xf841b090000	                            je 0x4000fa8	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x400068d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000691	    0x41ba01000000	                             mov r10d, 1	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000697	            0x31c9	                            xor ecx, ecx	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000699	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400069c	      0xe967fdffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006a1	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006a8	          0x4584db	                         test r11b, r11b	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x40006ab	     0xf846f030000	                            je 0x4000a20	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x40006b1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x40006b5	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006b8	      0xe94bfdffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006bd	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006c0	            0x85c9	                           test ecx, ecx	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40006c2	     0xf85b8040000	                           jne 0x4000b80	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40006c8	        0x4183fa01	                             cmp r10d, 1	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40006cc	     0xf85ae040000	                           jne 0x4000b80	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40006d2	          0x4584db	                         test r11b, r11b	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x40006d5	     0xf84da080000	                            je 0x4000fb5	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x40006db	         0xfb65701	               movzx edx, byte [rdi + 1]	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x40006df	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006e2	      0xe921fdffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006e7	    0x660f1f840000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006f0	            0x85c9	                           test ecx, ecx	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40006f2	     0xf85e0030000	                           jne 0x4000ad8	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40006f8	        0x4183fa01	                             cmp r10d, 1	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40006fc	     0xf85d6030000	                           jne 0x4000ad8	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000702	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4000707	     0xf847b020000	                            je 0x4000988	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x400070d	    0x8b0500000000	            mov eax, dword [0x04000713] 	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4000713	            0x85c0	                           test eax, eax	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4000715	     0xf846d020000	                            je 0x4000988	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x400071b	          0x83f866	                           cmp eax, 0x66	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x400071e	     0xf8417100000	                            je 0x400173b	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4000724	        0x41c60073	                     mov byte [r8], 0x73	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4000728	      0xbb01000000	                              mov ebx, 1	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x400072d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4000731	        0x4983c001	                               add r8, 1	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4000735	    0x41ba01000000	                             mov r10d, 1	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x400073b	            0x31c9	                            xor ecx, ecx	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x400073d	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000740	      0xe9c3fcffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000745	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000748	            0x85c9	                           test ecx, ecx	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400074a	           0xf94c2	                                 sete dl	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400074d	        0x4183fa01	                             cmp r10d, 1	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000751	           0xf94c0	                                 sete al	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000754	            0x20d0	                              and al, dl	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000756	     0xf84ac050000	                            je 0x4000d08	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400075c	          0x4585e4	                         test r12d, r12d	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400075f	     0xf84fc080000	                            je 0x4001061	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000765	        0x4183cf48	                           or r15d, 0x48	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000769	          0x4584db	                         test r11b, r11b	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x400076c	     0xf855c0c0000	                           jne 0x40013ce	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4000772	        0x41c6006c	                     mov byte [r8], 0x6c	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x4000776	        0x4983c001	                               add r8, 1	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x400077a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x400077e	        0x8844241e	               mov byte [rsp + 0x1e], al	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000782	            0x89c3	                            mov ebx, eax	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000784	    0x41ba01000000	                             mov r10d, 1	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400078a	            0x31c9	                            xor ecx, ecx	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400078c	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400078f	      0xe974fcffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000794	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000798	          0x4584db	                         test r11b, r11b	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x400079b	     0xf845f030000	                            je 0x4000b00	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40007a1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40007a5	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007a8	      0xe95bfcffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007ad	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007b0	            0x85c9	                           test ecx, ecx	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40007b2	     0xf85d8050000	                           jne 0x4000d90	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40007b8	        0x4183fa01	                             cmp r10d, 1	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40007bc	     0xf85ce050000	                           jne 0x4000d90	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40007c2	          0x4584db	                         test r11b, r11b	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x40007c5	     0xf85f5010000	                           jne 0x40009c0	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x40007cb	          0x4585ed	                         test r13d, r13d	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x40007ce	     0xf85cc020000	                           jne 0x4000aa0	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x40007d4	          0x4585e4	                         test r12d, r12d	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x40007d7	     0xf8498090000	                            je 0x4001175	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x40007dd	        0x41c60071	                     mov byte [r8], 0x71	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x40007e1	        0x4183cf48	                           or r15d, 0x48	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x40007e5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x40007e9	        0x4983c001	                               add r8, 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x40007ed	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x40007f2	      0xbb01000000	                              mov ebx, 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x40007f7	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007fa	      0xe909fcffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007ff	              0x90	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000800	          0x4584db	                         test r11b, r11b	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4000803	     0xf84c7050000	                            je 0x4000dd0	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4000809	         0xfb65701	               movzx edx, byte [rdi + 1]	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x400080d	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000810	      0xe9f3fbffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000815	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000818	          0x4584db	                         test r11b, r11b	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x400081b	     0xf859f010000	                           jne 0x40009c0	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000821	    0x833d00000000	               cmp dword [0x04000828], 2	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000828	            0x75a1	                           jne 0x40007cb	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x400082a	      0x837c243c01	               cmp dword [rsp + 0x3c], 1	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x400082f	     0xf8591fbffff	                           jne 0x40003c6	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000835	        0x41c60071	                     mov byte [r8], 0x71	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000839	      0xbb01000000	                              mov ebx, 1	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x400083e	         0xfb65701	               movzx edx, byte [rdi + 1]	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000842	        0x4983c001	                               add r8, 1	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000846	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000849	      0xe9bafbffff	                           jmp 0x4000408	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x400084e	            0x6690	                                     nop	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000850	            0x85c9	                           test ecx, ecx	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4000852	            0x750a	                           jne 0x400085e	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4000854	        0x4183fa01	                             cmp r10d, 1	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4000858	     0xf84eb0a0000	                            je 0x4001349	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400085e	          0x83f901	                              cmp ecx, 1	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000861	            0x7511	                           jne 0x4000874	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000863	        0x4183fa02	                             cmp r10d, 2	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000867	            0x750b	                           jne 0x4000874	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000869	      0x807c244058	            cmp byte [rsp + 0x40], 0x58 	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400086e	     0xf84870a0000	                            je 0x40012fb	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000874	          0x4139ca	                           cmp r10d, ecx	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000877	     0xf86cc0a0000	                           jbe 0x4001349	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400087d	          0x83f903	                              cmp ecx, 3	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000880	     0xf87c30a0000	                            ja 0x4001349	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000886	            0x89c8	                            mov eax, ecx	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000888	         0xfb65701	               movzx edx, byte [rdi + 1]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400088c	          0x83c101	                              add ecx, 1	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400088f	      0xc644044059	      mov byte [rsp + rax + 0x40], 0x59 	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4000894	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000897	      0xe96cfbffff	                           jmp 0x4000408	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400089c	         0xf1f4000	                         nop dword [rax]	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008a0	            0x85c9	                           test ecx, ecx	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x40008a2	     0xf8560050000	                           jne 0x4000e08	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x40008a8	        0x4183fa01	                             cmp r10d, 1	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x40008ac	     0xf8556050000	                           jne 0x4000e08	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x40008b2	          0x4585c9	                           test r9d, r9d	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008b5	     0xf8572010000	                           jne 0x4000a2d	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008bb	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008c0	     0xf8467010000	                            je 0x4000a2d	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008c6	         0xfb65701	               movzx edx, byte [rdi + 1]	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008ca	      0xe939fbffff	                           jmp 0x4000408	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008cf	              0x90	                                     nop	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008d0	          0x4585e4	                         test r12d, r12d	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40008d3	     0xf84e7020000	                            je 0x4000bc0	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40008d9	        0x41c6006f	                     mov byte [r8], 0x6f	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x40008dd	        0x4183cf48	                           or r15d, 0x48	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40008e1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40008e5	        0x4983c001	                               add r8, 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x40008e9	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x40008ee	      0xbb01000000	                              mov ebx, 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x40008f3	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40008f6	      0xe90dfbffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40008fb	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000900	          0x4584db	                         test r11b, r11b	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000903	     0xf84a7050000	                            je 0x4000eb0	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000909	         0xfb65701	               movzx edx, byte [rdi + 1]	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x400090d	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000910	      0xe9f3faffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000915	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000918	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400091c	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400091f	      0xe9e4faffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000924	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000928	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400092c	    0x41b901000000	                              mov r9d, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000932	      0xe9d1faffff	                           jmp 0x4000408	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000937	    0x660f1f840000	                    nop word [rax + rax]	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000940	          0x4584db	                         test r11b, r11b	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000943	     0xf84a7020000	                            je 0x4000bf0	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000949	         0xfb65701	               movzx edx, byte [rdi + 1]	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x400094d	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000950	      0xe9b3faffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000955	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000958	          0x4585c9	                           test r9d, r9d	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x400095b	            0x757b	                           jne 0x40009d8	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x400095d	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000962	            0x7474	                            je 0x40009d8	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000964	         0xfb65701	               movzx edx, byte [rdi + 1]	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000968	      0xe99bfaffff	                           jmp 0x4000408	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x400096d	           0xf1f00	                         nop dword [rax]	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000970	         0xfb65701	               movzx edx, byte [rdi + 1]	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000974	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     14007	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400097c	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400097f	      0xe984faffff	                           jmp 0x4000408	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000984	         0xf1f4000	                         nop dword [rax]	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000988	          0x4585ed	                         test r13d, r13d	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x400098b	     0xf8559080000	                           jne 0x40011ea	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4000991	        0x41c60073	                     mov byte [r8], 0x73	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x4000995	        0x4983c001	                               add r8, 1	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x4000999	          0x4409ed	                            or ebp, r13d	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x400099c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x40009a0	    0x41be01000000	                             mov r14d, 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x40009a6	      0xbb01000000	                              mov ebx, 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x40009ab	    0x41ba01000000	                             mov r10d, 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x40009b1	            0x31c9	                            xor ecx, ecx	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x40009b3	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009b6	      0xe94dfaffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009bb	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009c0	          0x4585e4	                         test r12d, r12d	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x40009c3	     0xf849f000000	                            je 0x4000a68	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x40009c9	         0xfb65701	               movzx edx, byte [rdi + 1]	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x40009cd	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009d0	      0xe933faffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009d5	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009d8	          0x4585ed	                         test r13d, r13d	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009db	            0x750e	                           jne 0x40009eb	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009dd	      0x448b4c2408	                mov r9d, dword [rsp + 8]	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009e2	          0x4585c9	                           test r9d, r9d	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009e5	     0xf84f3070000	                            je 0x40011de	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009eb	            0x85f6	                           test esi, esi	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40009ed	     0xf8550060000	                           jne 0x4001043	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40009f3	       0xfb644243b	           movzx eax, byte [rsp + 0x3b] 	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40009f8	        0x4983c001	                               add r8, 1	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40009fc	        0x418840ff	                   mov byte [r8 - 1], al	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x4000a00	          0x4409ed	                            or ebp, r13d	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000a03	         0xfb65701	               movzx edx, byte [rdi + 1]	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000a07	    0x41be01000000	                             mov r14d, 1	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000a0d	      0xbb01000000	                              mov ebx, 1	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000a12	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a15	      0xe9eef9ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a1a	    0x660f1f440000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a20	    0x833d00000000	               cmp dword [0x04000a27], 2	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000a27	     0xf84b8050000	                            je 0x4000fe5	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000a2d	          0x4585e4	                         test r12d, r12d	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000a30	     0xf84c0050000	                            je 0x4000ff6	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000a36	        0x4183cf48	                           or r15d, 0x48	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000a3a	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000a3f	     0xf8450080000	                            je 0x4001295	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000a45	        0x41c60071	                     mov byte [r8], 0x71	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a49	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a4e	        0x4983c001	                               add r8, 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a52	         0xfb65701	               movzx edx, byte [rdi + 1]	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a56	      0xbb01000000	                              mov ebx, 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a5b	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a5e	      0xe9a5f9ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a63	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a68	          0x4585ed	                         test r13d, r13d	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a6b	     0xf84e4050000	                            je 0x4001055	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a71	            0x85f6	                           test esi, esi	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a73	            0x750d	                           jne 0x4000a82	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a75	        0x41c60077	                     mov byte [r8], 0x77	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a79	      0xbb01000000	                              mov ebx, 1	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a7e	        0x4983c001	                               add r8, 1	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a82	          0x4409ed	                            or ebp, r13d	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a85	         0xfb65701	               movzx edx, byte [rdi + 1]	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a89	    0x41be01000000	                             mov r14d, 1	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a8f	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a92	      0xe971f9ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a97	    0x660f1f840000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000aa0	          0x4585e4	                         test r12d, r12d	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000aa3	     0xf8534fdffff	                           jne 0x40007dd	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000aa9	            0x85f6	                           test esi, esi	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000aab	     0xf84b7060000	                            je 0x4001168	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000ab1	        0x41c6006c	                     mov byte [r8], 0x6c	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000ab5	        0x4983c001	                               add r8, 1	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000ab9	          0x4409ed	                            or ebp, r13d	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000abc	         0xfb65701	               movzx edx, byte [rdi + 1]	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000ac0	    0x41be01000000	                             mov r14d, 1	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000ac6	      0xbb01000000	                              mov ebx, 1	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000acb	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ace	      0xe935f9ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ad3	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ad8	          0x4139ca	                           cmp r10d, ecx	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000adb	     0xf8668080000	                           jbe 0x4001349	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000ae1	          0x83f903	                              cmp ecx, 3	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000ae4	     0xf875f080000	                            ja 0x4001349	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000aea	            0x89c8	                            mov eax, ecx	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000aec	         0xfb65701	               movzx edx, byte [rdi + 1]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000af0	          0x83c101	                              add ecx, 1	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000af3	      0xc644044058	      mov byte [rsp + rax + 0x40], 0x58 	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000af8	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000afb	      0xe908f9ffff	                           jmp 0x4000408	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000b00	      0x807c243900	                cmp byte [rsp + 0x39], 0	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000b05	     0xf849a050000	                            je 0x40010a5	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000b0b	        0x8b5c2434	            mov ebx, dword [rsp + 0x34] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b0f	         0xb6c2430	              or ebp, dword [rsp + 0x30]	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000b13	        0x41c6002c	                     mov byte [r8], 0x2c	     14139	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000b17	      0x41c6400170	                 mov byte [r8 + 1], 0x70	     14140	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000b1c	            0x85db	                           test ebx, ebx	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b1e	     0xf8480080000	                            je 0x40013a4	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b24	       0xfb65c2439	           movzx ebx, byte [rsp + 0x39] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b29	      0x41c6400274	                 mov byte [r8 + 2], 0x74	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b2e	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b31	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b35	        0x4983c003	                               add r8, 3	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b39	          0x4189de	                           mov r14d, ebx	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b3c	      0xe9c7f8ffff	                           jmp 0x4000408	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b41	     0xf1f80000000	                         nop dword [rax]	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000b48	          0x4585ed	                         test r13d, r13d	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000b4b	     0xf843c050000	                            je 0x400108d	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000b51	            0x85f6	                           test esi, esi	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4000b53	     0xf8578060000	                           jne 0x40011d1	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4000b59	        0x41c60077	                     mov byte [r8], 0x77	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x4000b5d	        0x4983c001	                               add r8, 1	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x4000b61	          0x4409ed	                            or ebp, r13d	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000b64	         0xfb65701	               movzx edx, byte [rdi + 1]	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000b68	    0x41be01000000	                             mov r14d, 1	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000b6e	      0xbb01000000	                              mov ebx, 1	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000b73	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b76	      0xe98df8ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b7b	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b80	          0x83f901	                              cmp ecx, 1	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b83	            0x7511	                           jne 0x4000b96	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b85	        0x4183fa02	                             cmp r10d, 2	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b89	            0x750b	                           jne 0x4000b96	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b8b	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b90	     0xf84d9080000	                            je 0x400146f	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b96	          0x4139ca	                           cmp r10d, ecx	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b99	     0xf86aa070000	                           jbe 0x4001349	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000b9f	          0x83f903	                              cmp ecx, 3	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000ba2	     0xf87a1070000	                            ja 0x4001349	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000ba8	            0x89c8	                            mov eax, ecx	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000baa	         0xfb65701	               movzx edx, byte [rdi + 1]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bae	          0x83c101	                              add ecx, 1	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bb1	      0xc644044053	      mov byte [rsp + rax + 0x40], 0x53 	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bb6	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000bb9	      0xe94af8ffff	                           jmp 0x4000408	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bbe	            0x6690	                                     nop	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bc0	          0x4584db	                         test r11b, r11b	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000bc3	     0xf8585050000	                           jne 0x400114e	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000bc9	        0x41c60064	                     mov byte [r8], 0x64	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4000bcd	        0x4983c001	                               add r8, 1	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4000bd1	          0x4409ed	                            or ebp, r13d	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000bd4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000bd8	    0x41be01000000	                             mov r14d, 1	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000bde	      0xbb01000000	                              mov ebx, 1	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000be3	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000be6	      0xe91df8ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000beb	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000bf0	      0x418078ff73	                 cmp byte [r8 - 1], 0x73	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000bf5	            0x740c	                            je 0x4000c03	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000bf7	        0x8b442408	                mov eax, dword [rsp + 8]	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000bfb	            0x85c0	                           test eax, eax	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000bfd	     0xf8411060000	                            je 0x4001214	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000c03	          0x4585e4	                         test r12d, r12d	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000c06	     0xf854a060000	                           jne 0x4001256	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000c0c	            0x85f6	                           test esi, esi	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000c0e	     0xf8413080000	                            je 0x4001427	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000c14	        0x41c6006c	                     mov byte [r8], 0x6c	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000c18	        0x4983c001	                               add r8, 1	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000c1c	          0x4409ed	                            or ebp, r13d	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000c1f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000c23	    0x41be01000000	                             mov r14d, 1	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000c29	      0xbb01000000	                              mov ebx, 1	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000c2e	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c31	      0xe9d2f7ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c40	          0x4584db	                         test r11b, r11b	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4000c43	     0xf8568040000	                           jne 0x40010b1	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4000c49	    0x833d00000000	               cmp dword [0x04000c50], 2	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000c50	     0xf84260a0000	                            je 0x400167c	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000c56	        0x8b442408	                mov eax, dword [rsp + 8]	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000c5a	            0x85c0	                           test eax, eax	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000c5c	     0xf84e8050000	                            je 0x400124a	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000c62	        0x41c6006c	                     mov byte [r8], 0x6c	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000c66	      0xbb01000000	                              mov ebx, 1	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000c6b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000c6f	        0x4983c001	                               add r8, 1	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000c73	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c76	      0xe98df7ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c7b	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c80	            0x85f6	                           test esi, esi	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x4000c82	     0xf858b040000	                           jne 0x4001113	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x4000c88	          0x4584db	                         test r11b, r11b	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000c8b	        0x498d4001	                       lea rax, [r8 + 1]	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4000c8f	        0x41c60077	                     mov byte [r8], 0x77	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4000c93	     0xf85f2f7ffff	                           jne 0x400048b	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000c99	         0xfb65701	               movzx edx, byte [rdi + 1]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000c9d	          0x4989c0	                             mov r8, rax	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4000ca0	          0x4409ed	                            or ebp, r13d	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000ca3	    0x41be01000000	                             mov r14d, 1	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000ca9	      0xbb01000000	                              mov ebx, 1	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000cae	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cb1	      0xe952f7ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cc0	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000cc5	     0xf84e7050000	                            je 0x40012b2	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000ccb	        0x41c60062	                     mov byte [r8], 0x62	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000ccf	      0xbb01000000	                              mov ebx, 1	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000cd4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000cd8	        0x4983c001	                               add r8, 1	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000cdc	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cdf	      0xe924f7ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ce4	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ce8	        0x41c6006c	                     mov byte [r8], 0x6c	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000cec	      0xbb01000000	                              mov ebx, 1	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000cf1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000cf5	        0x4983c001	                               add r8, 1	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000cf9	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cfc	      0xe907f7ffff	                           jmp 0x4000408	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000d01	     0xf1f80000000	                         nop dword [rax]	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000d08	          0x83f901	                              cmp ecx, 1	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d0b	            0x751b	                           jne 0x4000d28	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d0d	        0x4183fa02	                             cmp r10d, 2	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d11	            0x7515	                           jne 0x4000d28	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d13	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d18	            0x3c58	                            cmp al, 0x58	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d1a	     0xf8466080000	                            je 0x4001586	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d20	            0x3c4c	                            cmp al, 0x4c	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d22	     0xf845e080000	                            je 0x4001586	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d28	          0x4139ca	                           cmp r10d, ecx	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d2b	     0xf8618060000	                           jbe 0x4001349	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d31	          0x83f903	                              cmp ecx, 3	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d34	     0xf870f060000	                            ja 0x4001349	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d3a	            0x89c8	                            mov eax, ecx	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d3c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d40	          0x83c101	                              add ecx, 1	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d43	      0xc644044057	      mov byte [rsp + rax + 0x40], 0x57 	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d48	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d4b	      0xe9b8f6ffff	                           jmp 0x4000408	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000d50	          0x83f901	                              cmp ecx, 1	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d53	            0x7511	                           jne 0x4000d66	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d55	        0x4183fa02	                             cmp r10d, 2	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d59	            0x750b	                           jne 0x4000d66	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d5b	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d60	     0xf845f070000	                            je 0x40014c5	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d66	          0x4139ca	                           cmp r10d, ecx	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d69	     0xf86da050000	                           jbe 0x4001349	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d6f	          0x83f903	                              cmp ecx, 3	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d72	     0xf87d1050000	                            ja 0x4001349	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d78	            0x89c8	                            mov eax, ecx	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d7a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d7e	          0x83c101	                              add ecx, 1	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d81	      0xc644044056	      mov byte [rsp + rax + 0x40], 0x56 	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d86	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d89	      0xe97af6ffff	                           jmp 0x4000408	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d8e	            0x6690	                                     nop	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d90	          0x83f901	                              cmp ecx, 1	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d93	            0x7511	                           jne 0x4000da6	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d95	        0x4183fa02	                             cmp r10d, 2	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d99	            0x750b	                           jne 0x4000da6	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d9b	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000da0	     0xf8444070000	                            je 0x40014ea	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000da6	          0x4139ca	                           cmp r10d, ecx	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000da9	     0xf869a050000	                           jbe 0x4001349	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000daf	          0x83f903	                              cmp ecx, 3	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000db2	     0xf8791050000	                            ja 0x4001349	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000db8	            0x89c8	                            mov eax, ecx	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000dba	         0xfb65701	               movzx edx, byte [rdi + 1]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000dbe	          0x83c101	                              add ecx, 1	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000dc1	      0xc644044050	      mov byte [rsp + rax + 0x40], 0x50 	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000dc6	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000dc9	      0xe93af6ffff	                           jmp 0x4000408	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000dce	            0x6690	                                     nop	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000dd0	    0x833d00000000	               cmp dword [0x04000dd7], 2	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000dd7	     0xf84ed040000	                            je 0x40012ca	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000ddd	          0x4585ed	                         test r13d, r13d	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000de0	     0xf8422040000	                            je 0x4001208	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000de6	            0x85f6	                           test esi, esi	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4000de8	     0xf8417060000	                            je 0x4001405	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4000dee	          0x4409ed	                            or ebp, r13d	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000df1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000df5	    0x41be01000000	                             mov r14d, 1	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000dfb	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000dfe	      0xe905f6ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e03	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e08	          0x83f901	                              cmp ecx, 1	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e0b	            0x7511	                           jne 0x4000e1e	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e0d	        0x4183fa02	                             cmp r10d, 2	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e11	            0x750b	                           jne 0x4000e1e	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e13	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e18	     0xf8448070000	                            je 0x4001566	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e1e	          0x4139ca	                           cmp r10d, ecx	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e21	     0xf8622050000	                           jbe 0x4001349	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e27	          0x83f903	                              cmp ecx, 3	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e2a	     0xf8719050000	                            ja 0x4001349	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e30	            0x89c8	                            mov eax, ecx	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e32	         0xfb65701	               movzx edx, byte [rdi + 1]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e36	          0x83c101	                              add ecx, 1	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e39	      0xc644044051	      mov byte [rsp + rax + 0x40], 0x51 	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e3e	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e41	      0xe9c2f5ffff	                           jmp 0x4000408	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e50	        0x41c60064	                     mov byte [r8], 0x64	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000e54	      0xbb01000000	                              mov ebx, 1	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000e59	         0xfb65701	               movzx edx, byte [rdi + 1]	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000e5d	        0x4983c001	                               add r8, 1	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000e61	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e64	      0xe99ff5ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e69	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e70	          0x4889fa	                            mov rdx, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e73	        0x4883c701	                              add rdi, 1	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e77	           0xfb607	                   movzx eax, byte [rdi]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e7a	            0x3c7c	                            cmp al, 0x7c	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e7c	            0x741e	                            je 0x4000e9c	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e7e	            0x3c7d	                            cmp al, 0x7d	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000e80	          0x4889fa	                            mov rdx, rdi	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000e83	     0xf84c0040000	                            je 0x4001349	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000e89	            0x84c0	                             test al, al	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000e8b	     0xf84b8040000	                            je 0x4001349	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000e91	        0x4883c701	                              add rdi, 1	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e95	           0xfb607	                   movzx eax, byte [rdi]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e98	            0x3c7c	                            cmp al, 0x7c	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e9a	            0x75e2	                           jne 0x4000e7e	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000e9c	         0xfb65202	               movzx edx, byte [rdx + 2]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000ea0	    0x41b901000000	                              mov r9d, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000ea6	      0xe95df5ffff	                           jmp 0x4000408	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000eab	       0xf1f440000	                   nop dword [rax + rax]	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000eb0	        0x8b542408	                mov edx, dword [rsp + 8]	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000eb4	            0x85d2	                           test edx, edx	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000eb6	     0xf8521020000	                           jne 0x40010dd	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000ebc	         0xfb65701	               movzx edx, byte [rdi + 1]	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000ec0	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ec3	      0xe940f5ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ec8	     0xf1f84000000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ed0	          0x83f901	                              cmp ecx, 1	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ed3	            0x7511	                           jne 0x4000ee6	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ed5	        0x4183fa02	                             cmp r10d, 2	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ed9	            0x750b	                           jne 0x4000ee6	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000edb	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ee0	     0xf844b060000	                            je 0x4001531	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ee6	          0x4139ca	                           cmp r10d, ecx	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ee9	     0xf865a040000	                           jbe 0x4001349	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000eef	          0x83f903	                              cmp ecx, 3	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ef2	     0xf8751040000	                            ja 0x4001349	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000ef8	            0x89c8	                            mov eax, ecx	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000efa	         0xfb65701	               movzx edx, byte [rdi + 1]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000efe	          0x83c101	                              add ecx, 1	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f01	      0xc644044042	      mov byte [rsp + rax + 0x40], 0x42 	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f06	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f09	      0xe9faf4ffff	                           jmp 0x4000408	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f0e	            0x6690	                                     nop	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f10	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000f14	            0x85c0	                           test eax, eax	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000f16	     0xf84a9010000	                            je 0x40010c5	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000f1c	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000f20	            0x85c0	                           test eax, eax	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000f22	     0xf858e020000	                           jne 0x40011b6	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000f28	    0x833d00000000	               cmp dword [0x04000f2f], 2	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000f2f	      0xb86c000000	                           mov eax, 0x6c	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000f34	      0xbb77000000	                           mov ebx, 0x77	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000f39	           0xf45c3	                         cmovne eax, ebx	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000f3c	        0x4983c001	                               add r8, 1	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000f40	        0x418840ff	                   mov byte [r8 - 1], al	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000f44	         0xb6c2410	              or ebp, dword [rsp + 0x10]	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000f48	         0xfb65701	               movzx edx, byte [rdi + 1]	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000f4c	    0x41be01000000	                             mov r14d, 1	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000f52	      0xbb01000000	                              mov ebx, 1	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000f57	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f5a	      0xe9a9f4ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f5f	              0x90	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f60	    0x81cd00080000	                           or ebp, 0x800	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000f66	         0xfb65701	               movzx edx, byte [rdi + 1]	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000f6a	    0x41be01000000	                             mov r14d, 1	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000f70	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f73	      0xe990f4ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f78	     0xf1f84000000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f80	          0x4139ca	                           cmp r10d, ecx	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000f83	     0xf86c0030000	                           jbe 0x4001349	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000f89	          0x83f903	                              cmp ecx, 3	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000f8c	     0xf87b7030000	                            ja 0x4001349	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000f92	            0x89c8	                            mov eax, ecx	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000f94	         0xfb65701	               movzx edx, byte [rdi + 1]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000f98	          0x83c101	                              add ecx, 1	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000f9b	      0xc64404404c	      mov byte [rsp + rax + 0x40], 0x4c 	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000fa0	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000fa3	      0xe960f4ffff	                           jmp 0x4000408	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000fa8	    0x833d00000000	               cmp dword [0x04000faf], 2	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000faf	     0xf84d8010000	                            je 0x400118d	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000fb5	      0x448b4c2408	                mov r9d, dword [rsp + 8]	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4000fba	          0x4585c9	                           test r9d, r9d	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4000fbd	     0xf84e7010000	                            je 0x40011aa	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4000fc3	          0x4585e4	                         test r12d, r12d	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000fc6	     0xf840f040000	                            je 0x40013db	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000fcc	        0x41c60071	                     mov byte [r8], 0x71	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000fd0	      0xbb01000000	                              mov ebx, 1	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000fd5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000fd9	        0x4983c001	                               add r8, 1	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000fdd	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000fe0	      0xe923f4ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000fe5	            0x85f6	                           test esi, esi	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000fe7	     0xf8547040000	                           jne 0x4001434	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000fed	          0x4585e4	                         test r12d, r12d	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000ff0	     0xf853e040000	                           jne 0x4001434	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000ff6	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000ffb	     0xf84bc060000	                            je 0x40016bd	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001001	            0x85f6	                           test esi, esi	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4001003	     0xf8466020000	                            je 0x400126f	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4001009	        0x4180fb01	                             cmp r11b, 1	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x400100d	            0x19c0	                            sbb eax, eax	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x400100f	        0x4983c001	                               add r8, 1	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4001013	          0x83e008	                              and eax, 8	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4001016	          0x83c064	                           add eax, 0x64	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4001019	        0x418840ff	                   mov byte [r8 - 1], al	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x400101d	          0x4409ed	                            or ebp, r13d	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4001020	         0xfb65701	               movzx edx, byte [rdi + 1]	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4001024	    0x41be01000000	                             mov r14d, 1	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x400102a	      0xbb01000000	                              mov ebx, 1	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x400102f	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001032	      0xe9d1f3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001037	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400103b	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400103e	      0xe9c5f3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001043	       0xfb644243a	           movzx eax, byte [rsp + 0x3a] 	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4001048	        0x4983c001	                               add r8, 1	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x400104c	        0x418840ff	                   mov byte [r8 - 1], al	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4001050	      0xe9abf9ffff	                           jmp 0x4000a00	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4001055	         0xfb65701	               movzx edx, byte [rdi + 1]	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4001059	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400105c	      0xe9a7f3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001061	            0x85f6	                           test esi, esi	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x4001063	     0xf8558030000	                           jne 0x40013c1	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x4001069	        0x41c60062	                     mov byte [r8], 0x62	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x400106d	        0x4983c001	                               add r8, 1	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x4001071	          0x4409ed	                            or ebp, r13d	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001074	         0xfb65701	               movzx edx, byte [rdi + 1]	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001078	          0x4189c6	                           mov r14d, eax	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400107b	            0x89c3	                            mov ebx, eax	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400107d	    0x41ba01000000	                             mov r10d, 1	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001083	            0x31c9	                            xor ecx, ecx	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001085	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001088	      0xe97bf3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400108d	        0x8b442408	                mov eax, dword [rsp + 8]	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001091	            0x85c0	                           test eax, eax	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001093	     0xf85b8faffff	                           jne 0x4000b51	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001099	         0xfb65701	               movzx edx, byte [rdi + 1]	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400109d	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010a0	      0xe963f3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010a5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010a9	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010ac	      0xe957f3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010b1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010b5	    0x41ba01000000	                             mov r10d, 1	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x40010bb	            0x31c9	                            xor ecx, ecx	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x40010bd	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010c0	      0xe943f3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010c5	        0x8b442408	                mov eax, dword [rsp + 8]	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40010c9	            0x85c0	                           test eax, eax	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40010cb	     0xf854bfeffff	                           jne 0x4000f1c	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40010d1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x40010d5	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010d8	      0xe92bf3ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010dd	          0x4585e4	                         test r12d, r12d	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40010e0	     0xf849a020000	                            je 0x4001380	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40010e6	        0x4183cf48	                           or r15d, 0x48	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40010ea	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x40010ef	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x40010f4	     0xf8591020000	                           jne 0x400138b	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x40010fa	        0x41c60071	                     mov byte [r8], 0x71	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x40010fe	      0xbb01000000	                              mov ebx, 1	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4001103	         0xfb65701	               movzx edx, byte [rdi + 1]	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4001107	        0x4983c001	                               add r8, 1	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x400110b	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400110e	      0xe9f5f2ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001113	          0x4584db	                         test r11b, r11b	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4001116	     0xf8453020000	                            je 0x400136f	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x400111c	        0x41c60064	                     mov byte [r8], 0x64	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4001120	         0xfb65701	               movzx edx, byte [rdi + 1]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001124	        0x498d4001	                       lea rax, [r8 + 1]	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4001128	          0x4989c0	                             mov r8, rax	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x400112b	            0x84d2	                             test dl, dl	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400112d	     0xf856dfbffff	                           jne 0x4000ca0	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001133	            0x85f6	                           test esi, esi	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001135	     0xf846e050000	                            je 0x40016a9	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400113b	          0x4c89c0	                             mov rax, r8	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400113e	          0xc60065	                    mov byte [rax], 0x65	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001141	        0x4c8d4001	                       lea r8, [rax + 1]	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001145	         0xfb65701	               movzx edx, byte [rdi + 1]	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001149	      0xe94cf3ffff	                           jmp 0x400049a	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400114e	            0x85f6	                           test esi, esi	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4001150	     0xf8473faffff	                            je 0x4000bc9	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4001156	        0x41c60071	                     mov byte [r8], 0x71	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x400115a	        0x4983c001	                               add r8, 1	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x400115e	      0xe96efaffff	                           jmp 0x4000bd1	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4001163	          0x4585ed	                         test r13d, r13d	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001166	            0x740d	                            je 0x4001175	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001168	        0x41c60077	                     mov byte [r8], 0x77	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x400116c	        0x4983c001	                               add r8, 1	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4001170	      0xe944f9ffff	                           jmp 0x4000ab9	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4001175	        0x8b442408	                mov eax, dword [rsp + 8]	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001179	            0x85c0	                           test eax, eax	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x400117b	     0xf8528f9ffff	                           jne 0x4000aa9	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001181	         0xfb65701	               movzx edx, byte [rdi + 1]	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001185	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001188	      0xe97bf2ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400118d	            0x85f6	                           test esi, esi	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400118f	     0xf8573040000	                           jne 0x4001608	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4001195	          0x4585e4	                         test r12d, r12d	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4001198	     0xf856a040000	                           jne 0x4001608	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400119e	        0x8b442408	                mov eax, dword [rsp + 8]	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40011a2	            0x85c0	                           test eax, eax	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40011a4	     0xf8506050000	                           jne 0x40016b0	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40011aa	         0xfb65701	               movzx edx, byte [rdi + 1]	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40011ae	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011b1	      0xe952f2ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011b6	    0x833d00000000	               cmp dword [0x040011bd], 2	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40011bd	           0xf94c0	                                 sete al	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40011c0	        0x4983c001	                               add r8, 1	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40011c4	        0x8d44806c	          lea eax, [rax + rax*4 + 0x6c] 	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40011c8	        0x418840ff	                   mov byte [r8 - 1], al	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40011cc	      0xe973fdffff	                           jmp 0x4000f44	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40011d1	        0x41c6006c	                     mov byte [r8], 0x6c	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x40011d5	        0x4983c001	                               add r8, 1	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x40011d9	      0xe983f9ffff	                           jmp 0x4000b61	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x40011de	         0xfb65701	               movzx edx, byte [rdi + 1]	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x40011e2	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011e5	      0xe91ef2ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011ea	        0x41c60064	                     mov byte [r8], 0x64	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x40011ee	        0x4983c001	                               add r8, 1	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x40011f2	      0xe9a2f7ffff	                           jmp 0x4000999	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x40011f7	          0x4585e4	                         test r12d, r12d	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40011fa	     0xf853effffff	                           jne 0x400113e	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001200	          0x4989c0	                             mov r8, rax	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001203	      0xe92bffffff	                           jmp 0x4001133	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001208	         0xfb65701	               movzx edx, byte [rdi + 1]	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400120c	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400120f	      0xe9f4f1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001214	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001218	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400121b	      0xe9e8f1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001220	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001224	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001227	      0xe9dcf1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400122c	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4001230	            0x85c0	                           test eax, eax	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4001232	     0xf844df3ffff	                            je 0x4000585	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4001238	        0x41c60072	                     mov byte [r8], 0x72	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x400123c	      0xbb01000000	                              mov ebx, 1	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4001241	        0x4983c001	                               add r8, 1	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x4001245	      0xe948f3ffff	                           jmp 0x4000592	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x400124a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x400124e	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001251	      0xe9b2f1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001256	        0x41c6006c	                     mov byte [r8], 0x6c	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400125a	      0xbb01000000	                              mov ebx, 1	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400125f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4001263	        0x4983c001	                               add r8, 1	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4001267	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400126a	      0xe999f1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400126f	        0x41c60077	                     mov byte [r8], 0x77	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x4001273	        0x4983c001	                               add r8, 1	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x4001277	      0xe9a1fdffff	                           jmp 0x400101d	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x400127c	        0x41c60062	                     mov byte [r8], 0x62	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4001280	      0xbb01000000	                              mov ebx, 1	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4001285	         0xfb65701	               movzx edx, byte [rdi + 1]	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4001289	        0x4983c001	                               add r8, 1	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x400128d	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001290	      0xe973f1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001295	        0x8b542408	                mov edx, dword [rsp + 8]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001299	            0x85d2	                           test edx, edx	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400129b	     0xf85a4f7ffff	                           jne 0x4000a45	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40012a1	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40012a6	         0xfb65701	               movzx edx, byte [rdi + 1]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40012aa	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012ad	      0xe956f1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012b2	        0x8b442408	                mov eax, dword [rsp + 8]	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40012b6	            0x85c0	                           test eax, eax	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40012b8	     0xf850dfaffff	                           jne 0x4000ccb	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40012be	         0xfb65701	               movzx edx, byte [rdi + 1]	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40012c2	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012c5	      0xe93ef1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012ca	      0x837c243c01	               cmp dword [rsp + 0x3c], 1	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40012cf	     0xf84f7020000	                            je 0x40015cc	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40012d5	            0x85f6	                           test esi, esi	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40012d7	     0xf85ef020000	                           jne 0x40015cc	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40012dd	          0x4585e4	                         test r12d, r12d	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40012e0	     0xf85e6020000	                           jne 0x40015cc	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40012e6	          0x4585ed	                         test r13d, r13d	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40012e9	     0xf8516010000	                           jne 0x4001405	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40012ef	         0xfb65701	               movzx edx, byte [rdi + 1]	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40012f3	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012f6	      0xe90df1ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012fb	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001300	            0x7447	                            je 0x4001349	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001302	          0x4584db	                         test r11b, r11b	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001305	     0xf854d010000	                           jne 0x4001458	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400130b	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001310	     0xf84cf020000	                            je 0x40015e5	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001316	    0x8b0500000000	            mov eax, dword [0x0400131c] 	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400131c	            0x85c0	                           test eax, eax	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400131e	     0xf85c1020000	                           jne 0x40015e5	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001324	    0x8b0500000000	            mov eax, dword [0x0400132a] 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400132a	      0x3d00010000	                          cmp eax, 0x100	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400132f	     0xf84ef050000	                            je 0x4001924	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001335	      0x3d00020000	                          cmp eax, 0x200	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400133a	     0xf84f2040000	                            je 0x4001832	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001340	          0x83c080	             add eax, 0xffffffffffffff80	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001343	     0xf84ff050000	                            je 0x4001948	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001349	            0x84db	                             test bl, bl	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400134b	     0xf8562060000	                           jne 0x40019b3	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001351	          0x4584f6	                         test r14b, r14b	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001354	            0x7406	                            je 0x400135c	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001356	    0x892d00000000	            mov dword [0x0400135c], ebp 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400135c	      0x807c241e00	                cmp byte [rsp + 0x1e], 0	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001361	            0x7407	                            je 0x400136a	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001363	    0x44893d000000	           mov dword [0x0400136a], r15d 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400136a	      0xe800000000	                          call 0x400136f	     14499	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	CALL_7
0x400136f	        0x41c6006c	                     mov byte [r8], 0x6c	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4001373	        0x4983c001	                               add r8, 1	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4001377	         0xfb65701	               movzx edx, byte [rdi + 1]	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x400137b	      0xe920f9ffff	                           jmp 0x4000ca0	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4001380	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4001385	     0xf8409040000	                            je 0x4001794	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x400138b	        0x41c60077	                     mov byte [r8], 0x77	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x400138f	      0xbb01000000	                              mov ebx, 1	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4001394	         0xfb65701	               movzx edx, byte [rdi + 1]	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4001398	        0x4983c001	                               add r8, 1	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x400139c	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400139f	      0xe964f0ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013a4	       0xfb65c2439	           movzx ebx, byte [rsp + 0x39] 	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x40013a9	      0x41c640026e	                 mov byte [r8 + 2], 0x6e	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x40013ae	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013b1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013b5	        0x4983c003	                               add r8, 3	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x40013b9	          0x4189de	                           mov r14d, ebx	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x40013bc	      0xe947f0ffff	                           jmp 0x4000408	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x40013c1	        0x41c60077	                     mov byte [r8], 0x77	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40013c5	        0x4983c001	                               add r8, 1	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40013c9	      0xe9a3fcffff	                           jmp 0x4001071	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40013ce	        0x41c60064	                     mov byte [r8], 0x64	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40013d2	        0x4983c001	                               add r8, 1	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40013d6	      0xe99ff3ffff	                           jmp 0x400077a	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x40013db	            0x85f6	                           test esi, esi	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013dd	     0xf84cd020000	                            je 0x40016b0	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013e3	        0x41c6006c	                     mov byte [r8], 0x6c	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013e7	        0x4983c001	                               add r8, 1	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013eb	          0x4409ed	                            or ebp, r13d	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013ee	         0xfb65701	               movzx edx, byte [rdi + 1]	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013f2	    0x41be01000000	                             mov r14d, 1	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013f8	      0xbb01000000	                              mov ebx, 1	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013fd	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001400	      0xe903f0ffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001405	        0x41c60077	                     mov byte [r8], 0x77	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4001409	      0xbb01000000	                              mov ebx, 1	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x400140e	        0x4983c001	                               add r8, 1	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4001412	          0x4409ed	                            or ebp, r13d	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001415	         0xfb65701	               movzx edx, byte [rdi + 1]	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001419	    0x41be01000000	                             mov r14d, 1	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x400141f	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001422	      0xe9e1efffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001427	        0x41c60077	                     mov byte [r8], 0x77	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x400142b	        0x4983c001	                               add r8, 1	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x400142f	      0xe9e8f7ffff	                           jmp 0x4000c1c	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x4001434	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001439	     0xf8445040000	                            je 0x4001884	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400143f	        0x41c60071	                     mov byte [r8], 0x71	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001443	      0xbb01000000	                              mov ebx, 1	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001448	         0xfb65701	               movzx edx, byte [rdi + 1]	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400144c	        0x4983c001	                               add r8, 1	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001450	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001453	      0xe9b0efffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001458	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400145c	    0x41ba02000000	                             mov r10d, 2	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001462	      0xb901000000	                              mov ecx, 1	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001467	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400146a	      0xe999efffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400146f	    0x833d00000000	               cmp dword [0x04001476], 2	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001476	     0xf8556f2ffff	                           jne 0x40006d2	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400147c	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001480	            0x85c0	                           test eax, eax	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001482	     0xf854af2ffff	                           jne 0x40006d2	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001488	            0xeb44	                           jmp 0x40014ce	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400148a	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400148f	     0xf84b4feffff	                            je 0x4001349	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4001495	    0x448b0d000000	            mov r9d, dword [0x0400149c] 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400149c	          0x4585c9	                           test r9d, r9d	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400149f	     0xf84a4feffff	                            je 0x4001349	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x40014a5	          0x4584db	                         test r11b, r11b	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40014a8	     0xf8422020000	                            je 0x40016d0	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40014ae	         0xfb65701	               movzx edx, byte [rdi + 1]	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40014b2	    0x41ba02000000	                             mov r10d, 2	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40014b8	      0xb901000000	                              mov ecx, 1	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40014bd	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40014c0	      0xe943efffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40014c5	          0x4585e4	                         test r12d, r12d	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40014c8	     0xf8404f2ffff	                            je 0x40006d2	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40014ce	        0x41c60061	                     mov byte [r8], 0x61	     14443	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014d2	      0x41c6400162	                 mov byte [r8 + 1], 0x62	     14444	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014d7	      0xbb01000000	                              mov ebx, 1	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014dc	      0x41c6400273	                 mov byte [r8 + 2], 0x73	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014e1	        0x4983c003	                               add r8, 3	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014e5	      0xe9e8f1ffff	                           jmp 0x40006d2	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014ea	          0x4585ed	                         test r13d, r13d	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40014ed	     0xf843f010000	                            je 0x4001632	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40014f3	          0x4585e4	                         test r12d, r12d	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40014f6	     0xf853f010000	                           jne 0x400163b	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40014fc	            0x85f6	                           test esi, esi	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x40014fe	     0xf85f7020000	                           jne 0x40017fb	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4001504	        0x41c60077	                     mov byte [r8], 0x77	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x4001508	        0x4983c001	                               add r8, 1	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x400150c	          0x4409ed	                            or ebp, r13d	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x400150f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001513	    0x41be01000000	                             mov r14d, 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001519	      0xbb01000000	                              mov ebx, 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x400151e	    0x41ba02000000	                             mov r10d, 2	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001524	      0xb901000000	                              mov ecx, 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001529	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400152c	      0xe9d7eeffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001531	    0x833d00000000	               cmp dword [0x04001538], 2	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001538	     0xf8584efffff	                           jne 0x40004c2	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400153e	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001542	            0x85c0	                           test eax, eax	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001544	     0xf8578efffff	                           jne 0x40004c2	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400154a	        0x41c60061	                     mov byte [r8], 0x61	     14057	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400154e	      0x41c6400162	                 mov byte [r8 + 1], 0x62	     14058	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001553	      0xbb01000000	                              mov ebx, 1	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001558	      0x41c6400273	                 mov byte [r8 + 2], 0x73	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400155d	        0x4983c003	                               add r8, 3	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001561	      0xe95cefffff	                           jmp 0x40004c2	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001566	          0x4584db	                         test r11b, r11b	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001569	     0xf84ed010000	                            je 0x400175c	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400156f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001573	    0x41ba02000000	                             mov r10d, 2	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001579	      0xb901000000	                              mov ecx, 1	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400157e	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001581	      0xe982eeffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001586	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x400158b	     0xf84b8fdffff	                            je 0x4001349	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4001591	            0x3c58	                            cmp al, 0x58	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001593	     0xf846f010000	                            je 0x4001708	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001599	    0x833d00000000	               cmp dword [0x040015a0], 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015a0	      0xbb01000000	                              mov ebx, 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015a5	    0x41ba02000000	                             mov r10d, 2	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015ab	      0xb901000000	                              mov ecx, 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015b0	            0x19c0	                            sbb eax, eax	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015b2	        0x4983c001	                               add r8, 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015b6	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015b9	          0x83e0f3	                     and eax, 0xfffffff3	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015bc	          0x83c071	                           add eax, 0x71	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015bf	        0x418840ff	                   mov byte [r8 - 1], al	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015c3	         0xfb65701	               movzx edx, byte [rdi + 1]	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015c7	      0xe93ceeffff	                           jmp 0x4000408	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015cc	        0x41c60071	                     mov byte [r8], 0x71	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015d0	      0xbb01000000	                              mov ebx, 1	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015d5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015d9	        0x4983c001	                               add r8, 1	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015dd	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015e0	      0xe923eeffff	                           jmp 0x4000408	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015e5	        0x8b442408	                mov eax, dword [rsp + 8]	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015e9	            0x85c0	                           test eax, eax	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015eb	     0xf8533fdffff	                           jne 0x4001324	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015f1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015f5	    0x41ba02000000	                             mov r10d, 2	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015fb	      0xb901000000	                              mov ecx, 1	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001600	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001603	      0xe900eeffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001608	        0x8b542408	                mov edx, dword [rsp + 8]	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400160c	            0x85d2	                           test edx, edx	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400160e	     0xf84a6010000	                            je 0x40017ba	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001614	        0x41c60071	                     mov byte [r8], 0x71	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001618	            0x89c3	                            mov ebx, eax	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400161a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400161e	        0x4983c001	                               add r8, 1	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001622	    0x41ba01000000	                             mov r10d, 1	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001628	            0x31c9	                            xor ecx, ecx	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400162a	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400162d	      0xe9d6edffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001632	          0x4585e4	                         test r12d, r12d	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4001635	     0xf849d010000	                            je 0x40017d8	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x400163b	        0x41c60071	                     mov byte [r8], 0x71	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x400163f	        0x4183cf48	                           or r15d, 0x48	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4001643	         0xfb65701	               movzx edx, byte [rdi + 1]	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4001647	        0x4983c001	                               add r8, 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x400164b	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4001650	      0xbb01000000	                              mov ebx, 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4001655	    0x41ba02000000	                             mov r10d, 2	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x400165b	      0xb901000000	                              mov ecx, 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4001660	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001663	      0xe9a0edffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001668	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400166c	          0x4989c0	                             mov r8, rax	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x400166f	      0xbb01000000	                              mov ebx, 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001674	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001677	      0xe98cedffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400167c	        0x8b442408	                mov eax, dword [rsp + 8]	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001680	            0x85c0	                           test eax, eax	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001682	     0xf84c2fbffff	                            je 0x400124a	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001688	        0x41c60071	                     mov byte [r8], 0x71	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x400168c	      0xbb01000000	                              mov ebx, 1	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001691	         0xfb65701	               movzx edx, byte [rdi + 1]	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001695	        0x4983c001	                               add r8, 1	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001699	    0x41ba01000000	                             mov r10d, 1	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x400169f	            0x31c9	                            xor ecx, ecx	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x40016a1	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016a4	      0xe95fedffff	                           jmp 0x4000408	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x40016a9	            0x31d2	                            xor edx, edx	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x40016ab	      0xe9f0f5ffff	                           jmp 0x4000ca0	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x40016b0	        0x41c60077	                     mov byte [r8], 0x77	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40016b4	        0x4983c001	                               add r8, 1	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40016b8	      0xe92efdffff	                           jmp 0x40013eb	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40016bd	      0x448b4c2408	                mov r9d, dword [rsp + 8]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40016c2	          0x4585c9	                           test r9d, r9d	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40016c5	     0xf84dbfbffff	                            je 0x40012a6	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40016cb	      0xe931f9ffff	                           jmp 0x4001001	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40016d0	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016d5	            0x740e	                            je 0x40016e5	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016d7	    0x8b0d00000000	            mov ecx, dword [0x040016dd] 	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016dd	            0x85c9	                           test ecx, ecx	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016df	     0xf84b7010000	                            je 0x400189c	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016e5	        0x8b542408	                mov edx, dword [rsp + 8]	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016e9	            0x85d2	                           test edx, edx	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016eb	     0xf85ab010000	                           jne 0x400189c	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016f1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016f5	    0x41ba02000000	                             mov r10d, 2	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016fb	      0xb901000000	                              mov ecx, 1	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4001700	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001703	      0xe900edffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001708	    0x833d00000000	               cmp dword [0x0400170f], 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400170f	      0xbb01000000	                              mov ebx, 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001714	    0x41ba02000000	                             mov r10d, 2	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400171a	      0xb901000000	                              mov ecx, 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400171f	            0x19c0	                            sbb eax, eax	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001721	        0x4983c001	                               add r8, 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001725	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001728	          0x83e00f	                            and eax, 0xf	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400172b	          0x83c064	                           add eax, 0x64	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400172e	        0x418840ff	                   mov byte [r8 - 1], al	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001732	         0xfb65701	               movzx edx, byte [rdi + 1]	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001736	      0xe9cdecffff	                           jmp 0x4000408	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400173b	        0x41c60064	                     mov byte [r8], 0x64	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x400173f	      0xbb01000000	                              mov ebx, 1	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4001744	         0xfb65701	               movzx edx, byte [rdi + 1]	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4001748	        0x4983c001	                               add r8, 1	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x400174c	    0x41ba01000000	                             mov r10d, 1	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4001752	            0x31c9	                            xor ecx, ecx	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4001754	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001757	      0xe9acecffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400175c	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001761	     0xf84a6000000	                            je 0x400180d	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001767	          0x4585e4	                         test r12d, r12d	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400176a	     0xf85e7000000	                           jne 0x4001857	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001770	        0x41c6006c	                     mov byte [r8], 0x6c	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4001774	      0xbb01000000	                              mov ebx, 1	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4001779	         0xfb65701	               movzx edx, byte [rdi + 1]	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x400177d	        0x4983c001	                               add r8, 1	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4001781	    0x41ba02000000	                             mov r10d, 2	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4001787	      0xb901000000	                              mov ecx, 1	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x400178c	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400178f	      0xe974ecffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001794	            0x85f6	                           test esi, esi	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4001796	            0x7536	                           jne 0x40017ce	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4001798	        0x41c60077	                     mov byte [r8], 0x77	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x400179c	        0x4983c001	                               add r8, 1	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x40017a0	          0x4409ed	                            or ebp, r13d	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40017a3	         0xfb65701	               movzx edx, byte [rdi + 1]	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40017a7	    0x41be01000000	                             mov r14d, 1	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40017ad	      0xbb01000000	                              mov ebx, 1	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40017b2	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017b5	      0xe94eecffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017ba	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017be	    0x41ba01000000	                             mov r10d, 1	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40017c4	            0x31c9	                            xor ecx, ecx	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40017c6	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017c9	      0xe93aecffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017ce	        0x41c6006c	                     mov byte [r8], 0x6c	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40017d2	        0x4983c001	                               add r8, 1	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40017d6	            0xebc8	                           jmp 0x40017a0	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40017d8	        0x8b442408	                mov eax, dword [rsp + 8]	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017dc	            0x85c0	                           test eax, eax	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017de	     0xf8518fdffff	                           jne 0x40014fc	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017e4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017e8	    0x41ba02000000	                             mov r10d, 2	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017ee	      0xb901000000	                              mov ecx, 1	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017f3	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017f6	      0xe90decffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017fb	       0xfb644243a	           movzx eax, byte [rsp + 0x3a] 	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4001800	        0x4983c001	                               add r8, 1	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4001804	        0x418840ff	                   mov byte [r8 - 1], al	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4001808	      0xe9fffcffff	                           jmp 0x400150c	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x400180d	      0x448b542408	               mov r10d, dword [rsp + 8]	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001812	          0x4585d2	                         test r10d, r10d	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001815	     0xf854cffffff	                           jne 0x4001767	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400181b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400181f	    0x41ba02000000	                             mov r10d, 2	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001825	      0xb901000000	                              mov ecx, 1	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400182a	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400182d	      0xe9d6ebffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001832	    0x8b0500000000	            mov eax, dword [0x04001838] 	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001838	            0x85c0	                           test eax, eax	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x400183a	     0xf8409fbffff	                            je 0x4001349	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001840	         0xfb65701	               movzx edx, byte [rdi + 1]	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001844	    0x41ba02000000	                             mov r10d, 2	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x400184a	      0xb901000000	                              mov ecx, 1	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x400184f	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001852	      0xe9b1ebffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001857	        0x41c60071	                     mov byte [r8], 0x71	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400185b	        0x4183cf48	                           or r15d, 0x48	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400185f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001863	        0x4983c001	                               add r8, 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001867	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400186c	      0xbb01000000	                              mov ebx, 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001871	    0x41ba02000000	                             mov r10d, 2	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001877	      0xb901000000	                              mov ecx, 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400187c	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400187f	      0xe984ebffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001884	        0x8b442408	                mov eax, dword [rsp + 8]	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001888	            0x85c0	                           test eax, eax	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400188a	     0xf85affbffff	                           jne 0x400143f	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001890	         0xfb65701	               movzx edx, byte [rdi + 1]	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001894	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001897	      0xe96cebffff	                           jmp 0x4000408	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400189c	    0x8b1500000000	            mov edx, dword [0x040018a2] 	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018a2	    0x81fa00010000	                          cmp edx, 0x100	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018a8	     0xf84df000000	                            je 0x400198d	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018ae	    0x81fa00020000	                          cmp edx, 0x200	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018b4	     0xf84b2000000	                            je 0x400196c	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018ba	          0x83c280	             add edx, 0xffffffffffffff80	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018bd	     0xf8586faffff	                           jne 0x4001349	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018c3	        0x41c60078	                     mov byte [r8], 0x78	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018c7	            0x89c3	                            mov ebx, eax	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018c9	         0xfb65701	               movzx edx, byte [rdi + 1]	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018cd	        0x4983c001	                               add r8, 1	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018d1	    0x41ba02000000	                             mov r10d, 2	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018d7	      0xb901000000	                              mov ecx, 1	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018dc	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40018df	      0xe924ebffff	                           jmp 0x4000408	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018e4	    0x488b05000000	            mov rax, qword [0x040018eb] 	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018eb	      0x4889442428	             mov qword [rsp + 0x28], rax	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018f0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     14569	i386-dis.c	FUNCTION_17
0x40018f5	          0xc60000	                       mov byte [rax], 0	     14569	i386-dis.c	FUNCTION_17
0x40018f8	    0x488905000000	            mov qword [0x040018ff], rax 	     14570	i386-dis.c	FUNCTION_17
0x40018ff	            0x31c0	                            xor eax, eax	     14572	i386-dis.c	FUNCTION_17
0x4001901	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	     14572	i386-dis.c	FUNCTION_17
0x4001906	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     14572	i386-dis.c	FUNCTION_17
0x400190f	     0xf8599000000	                           jne 0x40019ae	     14572	i386-dis.c	FUNCTION_17
0x4001915	        0x4883c458	                           add rsp, 0x58	     14572	i386-dis.c	FUNCTION_17
0x4001919	              0x5b	                                 pop rbx	     14572	i386-dis.c	FUNCTION_17
0x400191a	              0x5d	                                 pop rbp	     14572	i386-dis.c	FUNCTION_17
0x400191b	            0x415c	                                 pop r12	     14572	i386-dis.c	FUNCTION_17
0x400191d	            0x415d	                                 pop r13	     14572	i386-dis.c	FUNCTION_17
0x400191f	            0x415e	                                 pop r14	     14572	i386-dis.c	FUNCTION_17
0x4001921	            0x415f	                                 pop r15	     14572	i386-dis.c	FUNCTION_17
0x4001923	              0xc3	                                     ret	     14572	i386-dis.c	FUNCTION_17
0x4001924	        0x41c60079	                     mov byte [r8], 0x79	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001928	      0xbb01000000	                              mov ebx, 1	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400192d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001931	        0x4983c001	                               add r8, 1	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001935	    0x41ba02000000	                             mov r10d, 2	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400193b	      0xb901000000	                              mov ecx, 1	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001940	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001943	      0xe9c0eaffff	                           jmp 0x4000408	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001948	        0x41c60078	                     mov byte [r8], 0x78	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400194c	      0xbb01000000	                              mov ebx, 1	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001951	         0xfb65701	               movzx edx, byte [rdi + 1]	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001955	        0x4983c001	                               add r8, 1	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001959	    0x41ba02000000	                             mov r10d, 2	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400195f	      0xb901000000	                              mov ecx, 1	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001964	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001967	      0xe99ceaffff	                           jmp 0x4000408	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400196c	        0x41c6007a	                     mov byte [r8], 0x7a	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001970	            0x89c3	                            mov ebx, eax	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001972	         0xfb65701	               movzx edx, byte [rdi + 1]	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001976	        0x4983c001	                               add r8, 1	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400197a	    0x41ba02000000	                             mov r10d, 2	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001980	      0xb901000000	                              mov ecx, 1	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001985	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001988	      0xe97beaffff	                           jmp 0x4000408	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400198d	        0x41c60079	                     mov byte [r8], 0x79	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001991	            0x89c3	                            mov ebx, eax	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001993	         0xfb65701	               movzx edx, byte [rdi + 1]	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001997	        0x4983c001	                               add r8, 1	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400199b	    0x41ba02000000	                             mov r10d, 2	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40019a1	      0xb901000000	                              mov ecx, 1	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40019a6	          0x4531c9	                            xor r9d, r9d	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40019a9	      0xe95aeaffff	                           jmp 0x4000408	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40019ae	      0xe800000000	                          call 0x40019b3	     14572	i386-dis.c	FUNCTION_17
0x40019b3	    0x4c8905000000	              mov qword [0x040019ba], r8	     14572	i386-dis.c	FUNCTION_17
0x40019ba	      0xe992f9ffff	                           jmp 0x4001351	     14572	i386-dis.c	FUNCTION_17
0x40019bf	    0x4c8905000000	              mov qword [0x040019c6], r8	     14572	i386-dis.c	FUNCTION_17
0x40019c6	      0x4c89442428	              mov qword [rsp + 0x28], r8	     14572	i386-dis.c	FUNCTION_17
0x40019cb	      0xe9b8e9ffff	                           jmp 0x4000388	     14572	i386-dis.c	FUNCTION_17
OP_Vex_2src_1	IF,3:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	26
0x4008720	        0x4883ec08	                              sub rsp, 8	     17468	i386-dis.c	FUNCTION_84
0x4008724	    0x833d00000000	               cmp dword [0x0400872b], 3	     17469	i386-dis.c	FUNCTION_84	IF_1
0x400872b	            0x7453	                            je 0x4008780	     17469	i386-dis.c	FUNCTION_84	IF_1
0x400872d	    0x8b0500000000	            mov eax, dword [0x04008733] 	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4008733	            0x85c0	                           test eax, eax	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4008735	            0x7439	                            je 0x4008770	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4008737	    0x8b0500000000	            mov eax, dword [0x0400873d] 	     17478	i386-dis.c	FUNCTION_84	IF_2
0x400873d	    0x488b3d000000	            mov rdi, qword [0x04008744] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008744	            0x89c2	                            mov edx, eax	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4008746	          0x83e207	                              and edx, 7	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4008749	    0x833d00000000	               cmp dword [0x04008750], 2	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4008750	        0x480f45c2	                         cmovne rax, rdx	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4008754	    0x488b15000000	            mov rdx, qword [0x0400875b] 	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x400875b	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400875f	      0xe800000000	                          call 0x4008764	       117	string3.h	FUNCTION_108	CALL_3
0x4008764	    0x488905000000	            mov qword [0x0400876b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400876b	        0x4883c408	                              add rsp, 8	     17486	i386-dis.c	FUNCTION_84
0x400876f	              0xc3	                                     ret	     17486	i386-dis.c	FUNCTION_84
0x4008770	        0x4883c408	                              add rsp, 8	     17486	i386-dis.c	FUNCTION_84
0x4008774	      0xe9b7feffff	                     jmp sym.OP_Vex_2src	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4008779	     0xf1f80000000	                         nop dword [rax]	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4008780	    0x803d00000000	                cmp byte [0x04008787], 0	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4008787	            0x740a	                            je 0x4008793	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4008789	    0x488305000000	               add qword [0x04008791], 1	     17473	i386-dis.c	FUNCTION_84	IF_1
0x4008791	            0xeb9a	                           jmp 0x400872d	     17473	i386-dis.c	FUNCTION_84	IF_1
0x4008793	      0xe800000000	                          call 0x4008798	     17472	i386-dis.c	FUNCTION_84	IF_1
CMPXCHG8B_Fixup	IF,4:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	26
0x40085a0	    0xf60500000000	               test byte [0x040085a7], 8	     17029	i386-dis.c	FUNCTION_74
0x40085a7	            0x7437	                            je 0x40085e0	     17029	i386-dis.c	FUNCTION_74
0x40085a9	    0x488b05000000	            mov rax, qword [0x040085b0] 	     17033	i386-dis.c	FUNCTION_74	IF_1
0x40085b0	    0x830d00000000	            or dword [0x040085b7], 0x48 	     17029	i386-dis.c	FUNCTION_74
0x40085b7	      0xbf2c000000	                           mov edi, 0x2c	     17035	i386-dis.c	FUNCTION_74	IF_1
0x40085bc	    0xc740fe313662	          mov dword [rax - 2], 0x623631 	     17035	i386-dis.c	FUNCTION_74	IF_1
0x40085c3	        0x4883c001	                              add rax, 1	       117	string3.h	FUNCTION_108	CALL_3
0x40085c7	    0x488905000000	            mov qword [0x040085ce], rax 	       117	string3.h	FUNCTION_108	CALL_3
0x40085ce	    0x833d00000000	               cmp dword [0x040085d5], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40085d5	            0x7448	                            je 0x400861f	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40085d7	      0xe974daffff	                            jmp sym.OP_E	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x40085dc	         0xf1f4000	                         nop dword [rax]	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x40085e0	    0x8b0500000000	            mov eax, dword [0x040085e6] 	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x40085e6	            0xa804	                              test al, 4	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x40085e8	            0x74e4	                            je 0x40085ce	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x40085ea	            0xa801	                              test al, 1	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x40085ec	            0x7412	                            je 0x4008600	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x40085ee	    0x486315000000	         movsxd rdx, dword [0x040085f5] 	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x40085f5	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4008600	            0xa802	                              test al, 2	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4008602	            0x74ca	                            je 0x40085ce	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4008604	    0x486305000000	         movsxd rax, dword [0x0400860b] 	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400860b	    0x833d00000000	               cmp dword [0x04008612], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4008612	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400861d	            0x75b8	                           jne 0x40085d7	     16671	i386-dis.c	FUNCTION_58	IF_1
0x400861f	      0xe93c9effff	                           jmp sym.BadOp	     16673	i386-dis.c	FUNCTION_58	CALL_1
OP_indirE	IF,1:CALL,2:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	8
0x4008a90	    0x803d00000000	                cmp byte [0x04008a97], 0	     14616	i386-dis.c	FUNCTION_20	IF_1
0x4008a97	            0x751a	                           jne 0x4008ab3	     14616	i386-dis.c	FUNCTION_20	IF_1
0x4008a99	    0x488b05000000	            mov rax, qword [0x04008aa0] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008aa0	      0xba2a000000	                           mov edx, 0x2a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008aa5	          0x668910	                      mov word [rax], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008aa8	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008aac	    0x488905000000	            mov qword [0x04008ab3], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008ab3	      0xe998d5ffff	                            jmp sym.OP_E	     14618	i386-dis.c	FUNCTION_20	CALL_2
print_i386_disassembler_options	IF,0:CALL,16:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,1:FOR,1	147
0x4008fc0	              0x53	                                push rbx	     12699	i386-dis.c	FUNCTION_7
0x4008fc1	      0xba05000000	                              mov edx, 5	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4008fc6	          0x4889fb	                            mov rbx, rdi	     12699	i386-dis.c	FUNCTION_7
0x4008fc9	      0xbe00000000	                              mov esi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4008fce	      0xbf00000000	                              mov edi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4008fd3	      0xe800000000	                          call 0x4008fd8	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4008fd8	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4008fdb	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x4008fde	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x4008fe3	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x4008fe5	      0xe800000000	                          call 0x4008fea	        97	stdio2.h	CALL_149
0x4008fea	      0xba05000000	                              mov edx, 5	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4008fef	      0xbe00000000	                              mov esi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4008ff4	      0xbf00000000	                              mov edi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4008ff9	      0xe800000000	                          call 0x4008ffe	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4008ffe	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4009001	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x4009004	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x4009009	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400900b	      0xe800000000	                          call 0x4009010	        97	stdio2.h	CALL_149
0x4009010	      0xba05000000	                              mov edx, 5	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x4009015	      0xbe00000000	                              mov esi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x400901a	      0xbf00000000	                              mov edi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x400901f	      0xe800000000	                          call 0x4009024	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x4009024	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4009027	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400902a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400902f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x4009031	      0xe800000000	                          call 0x4009036	        97	stdio2.h	CALL_149
0x4009036	      0xba05000000	                              mov edx, 5	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400903b	      0xbe00000000	                              mov esi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4009040	      0xbf00000000	                              mov edi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4009045	      0xe800000000	                          call 0x400904a	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400904a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400904d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x4009050	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x4009055	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x4009057	      0xe800000000	                          call 0x400905c	        97	stdio2.h	CALL_149
0x400905c	      0xba05000000	                              mov edx, 5	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x4009061	      0xbe00000000	                              mov esi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x4009066	      0xbf00000000	                              mov edi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x400906b	      0xe800000000	                          call 0x4009070	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x4009070	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4009073	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x4009076	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400907b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400907d	      0xe800000000	                          call 0x4009082	        97	stdio2.h	CALL_149
0x4009082	      0xba05000000	                              mov edx, 5	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4009087	      0xbe00000000	                              mov esi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400908c	      0xbf00000000	                              mov edi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4009091	      0xe800000000	                          call 0x4009096	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4009096	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4009099	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400909c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x40090a1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x40090a3	      0xe800000000	                          call 0x40090a8	        97	stdio2.h	CALL_149
0x40090a8	      0xba05000000	                              mov edx, 5	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x40090ad	      0xbe00000000	                              mov esi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x40090b2	      0xbf00000000	                              mov edi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x40090b7	      0xe800000000	                          call 0x40090bc	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x40090bc	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x40090bf	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x40090c2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x40090c7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x40090c9	      0xe800000000	                          call 0x40090ce	        97	stdio2.h	CALL_149
0x40090ce	      0xba05000000	                              mov edx, 5	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x40090d3	      0xbe00000000	                              mov esi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x40090d8	      0xbf00000000	                              mov edi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x40090dd	      0xe800000000	                          call 0x40090e2	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x40090e2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x40090e5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x40090e8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x40090ed	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x40090ef	      0xe800000000	                          call 0x40090f4	        97	stdio2.h	CALL_149
0x40090f4	      0xba05000000	                              mov edx, 5	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x40090f9	      0xbe00000000	                              mov esi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x40090fe	      0xbf00000000	                              mov edi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x4009103	      0xe800000000	                          call 0x4009108	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x4009108	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400910b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400910e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x4009113	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x4009115	      0xe800000000	                          call 0x400911a	        97	stdio2.h	CALL_149
0x400911a	      0xba05000000	                              mov edx, 5	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400911f	      0xbe00000000	                              mov esi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4009124	      0xbf00000000	                              mov edi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4009129	      0xe800000000	                          call 0x400912e	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400912e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4009131	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x4009134	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x4009139	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400913b	      0xe800000000	                          call 0x4009140	        97	stdio2.h	CALL_149
0x4009140	      0xba05000000	                              mov edx, 5	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x4009145	      0xbe00000000	                              mov esi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x400914a	      0xbf00000000	                              mov edi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x400914f	      0xe800000000	                          call 0x4009154	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x4009154	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4009157	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400915a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400915f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x4009161	      0xe800000000	                          call 0x4009166	        97	stdio2.h	CALL_149
0x4009166	      0xba05000000	                              mov edx, 5	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x400916b	      0xbe00000000	                              mov esi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x4009170	      0xbf00000000	                              mov edi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x4009175	      0xe800000000	                          call 0x400917a	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x400917a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400917d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x4009180	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x4009185	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x4009187	      0xe800000000	                          call 0x400918c	        97	stdio2.h	CALL_149
0x400918c	      0xba05000000	                              mov edx, 5	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x4009191	      0xbe00000000	                              mov esi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x4009196	      0xbf00000000	                              mov edi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x400919b	      0xe800000000	                          call 0x40091a0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x40091a0	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x40091a3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x40091a6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x40091ab	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x40091ad	      0xe800000000	                          call 0x40091b2	        97	stdio2.h	CALL_149
0x40091b2	      0xba05000000	                              mov edx, 5	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40091b7	      0xbe00000000	                              mov esi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40091bc	      0xbf00000000	                              mov edi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40091c1	      0xe800000000	                          call 0x40091c6	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x40091c6	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x40091c9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x40091cc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x40091d1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x40091d3	      0xe800000000	                          call 0x40091d8	        97	stdio2.h	CALL_149
0x40091d8	      0xba05000000	                              mov edx, 5	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x40091dd	      0xbe00000000	                              mov esi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x40091e2	      0xbf00000000	                              mov edi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x40091e7	      0xe800000000	                          call 0x40091ec	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x40091ec	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x40091ef	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x40091f2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x40091f7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x40091f9	      0xe800000000	                          call 0x40091fe	        97	stdio2.h	CALL_149
0x40091fe	      0xba05000000	                              mov edx, 5	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4009203	      0xbe00000000	                              mov esi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4009208	      0xbf00000000	                              mov edi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400920d	      0xe800000000	                          call 0x4009212	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x4009212	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x4009215	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x4009218	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400921d	              0x5b	                                 pop rbx	     12721	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1
0x400921e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x4009220	      0xe900000000	                   jmp section_end..text	        97	stdio2.h	CALL_149
OP_EX_VexReg	IF,4:CALL,3:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,1:FOR,0	37
0x4008d40	        0x4883ec08	                              sub rsp, 8	     17367	i386-dis.c	FUNCTION_81
0x4008d44	          0x83faff	             cmp edx, 0xffffffffffffffff	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4008d47	            0x7467	                            je 0x4008db0	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4008d49	            0x89d0	                            mov eax, edx	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008d4b	          0x83e007	                              and eax, 7	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008d4e	    0x833d00000000	               cmp dword [0x04008d55], 2	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008d55	           0xf45d0	                         cmovne edx, eax	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008d58	    0x8b0500000000	            mov eax, dword [0x04008d5e] 	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008d5e	      0x3d80000000	                           cmp eax, 0x80	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008d63	            0x743b	                            je 0x4008da0	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008d65	      0x3d00010000	                          cmp eax, 0x100	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008d6a	            0x752c	                           jne 0x4008d98	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008d6c	    0x488b05000000	            mov rax, qword [0x04008d73] 	     17394	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008d73	          0x4863d2	                         movsxd rdx, edx	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x4008d76	    0x488b3d000000	            mov rdi, qword [0x04008d7d] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008d7d	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4008d81	      0xe800000000	                          call 0x4008d86	       117	string3.h	FUNCTION_108	CALL_3
0x4008d86	    0x488905000000	            mov qword [0x04008d8d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008d8d	        0x4883c408	                              add rsp, 8	     17400	i386-dis.c	FUNCTION_81
0x4008d91	              0xc3	                                     ret	     17400	i386-dis.c	FUNCTION_81
0x4008d92	    0x660f1f440000	                    nop word [rax + rax]	     17400	i386-dis.c	FUNCTION_81
0x4008d98	      0xe800000000	                          call 0x4008d9d	     17397	i386-dis.c	FUNCTION_81	SWITCH_1	CALL_2
0x4008d9d	           0xf1f00	                         nop dword [rax]	     17397	i386-dis.c	FUNCTION_81	SWITCH_1	CALL_2
0x4008da0	    0x488b05000000	            mov rax, qword [0x04008da7] 	     17391	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008da7	            0xebca	                           jmp 0x4008d73	     17392	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008da9	     0xf1f80000000	                         nop dword [rax]	     17392	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008db0	    0x833d00000000	               cmp dword [0x04008db7], 3	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4008db7	            0x7527	                           jne 0x4008de0	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4008db9	    0xf60500000000	               test byte [0x04008dc0], 1	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008dc0	    0x8b1500000000	            mov edx, dword [0x04008dc6] 	     17379	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008dc6	            0x7481	                            je 0x4008d49	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008dc8	    0x830d00000000	            or dword [0x04008dcf], 0x41 	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008dcf	          0x83c208	                              add edx, 8	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4008dd2	      0xe972ffffff	                           jmp 0x4008d49	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4008dd7	    0x660f1f840000	                    nop word [rax + rax]	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4008de0	        0x4883c408	                              add rsp, 8	     17400	i386-dis.c	FUNCTION_81
0x4008de4	      0xe907c2ffff	                     jmp sym.OP_E_memory	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
OP_XS	IF,1:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	5
0x4008c90	    0x833d00000000	               cmp dword [0x04008c97], 3	     16662	i386-dis.c	FUNCTION_57	IF_1
0x4008c97	            0x7407	                            je 0x4008ca0	     16662	i386-dis.c	FUNCTION_57	IF_1
0x4008c99	      0xe9c297ffff	                           jmp sym.BadOp	     16665	i386-dis.c	FUNCTION_57	CALL_2
0x4008c9e	            0x6690	                                     nop	     16665	i386-dis.c	FUNCTION_57	CALL_2
0x4008ca0	      0xe94bfeffff	                           jmp sym.OP_EX	     16663	i386-dis.c	FUNCTION_57	CALL_1
OP_E	IF,1:CALL,2:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	10
0x4006050	    0x803d00000000	                cmp byte [0x04006057], 0	     15667	i386-dis.c	FUNCTION_26
0x4006057	            0x741c	                            je 0x4006075	     15667	i386-dis.c	FUNCTION_26
0x4006059	    0x488305000000	               add qword [0x04006061], 1	     15668	i386-dis.c	FUNCTION_26
0x4006061	    0x833d00000000	               cmp dword [0x04006068], 3	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4006068	            0x7406	                            je 0x4006070	     15670	i386-dis.c	FUNCTION_26	IF_1
0x400606a	      0xe981efffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x400606f	              0x90	                                     nop	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4006070	      0xe9cbceffff	                   jmp sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4006075	              0x50	                                push rax	     15665	i386-dis.c	FUNCTION_26
0x4006076	      0xe800000000	                          call 0x400607b	     15667	i386-dis.c	FUNCTION_26
PCMPESTR_Fixup	IF,3:CALL,1:functions,0:WHILE,0:ELSE,1:DO,0:SWITCH,0:FOR,0	17
0x4008cf0	    0x803d00000000	                cmp byte [0x04008cf7], 0	     17163	i386-dis.c	FUNCTION_78	IF_1
0x4008cf7	            0x7528	                           jne 0x4008d21	     17163	i386-dis.c	FUNCTION_78	IF_1
0x4008cf9	    0xf60500000000	               test byte [0x04008d00], 8	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4008d00	    0x488b05000000	            mov rax, qword [0x04008d07] 	     17165	i386-dis.c	FUNCTION_78	IF_1
0x4008d07	            0x7427	                            je 0x4008d30	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4008d09	    0x830d00000000	            or dword [0x04008d10], 0x48 	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4008d10	          0xc60071	                    mov byte [rax], 0x71	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4008d13	        0x4883c001	                              add rax, 1	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4008d17	          0xc60000	                       mov byte [rax], 0	     17173	i386-dis.c	FUNCTION_78	IF_1
0x4008d1a	    0x488905000000	            mov qword [0x04008d21], rax 	     17174	i386-dis.c	FUNCTION_78	IF_1
0x4008d21	      0xe9cafdffff	                           jmp sym.OP_EX	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x4008d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x4008d30	        0x40f6c604	                             test sil, 4	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008d34	            0x74e1	                            je 0x4008d17	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008d36	          0xc6006c	                    mov byte [rax], 0x6c	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008d39	        0x4883c001	                              add rax, 1	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008d3d	            0xebd8	                           jmp 0x4008d17	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
get16	IF,0:CALL,0:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	17
0x4001cd0	        0x4883ec08	                              sub rsp, 8	     15824	i386-dis.c	FUNCTION_31
0x4001cd4	    0x488b3d000000	            mov rdi, qword [0x04001cdb] 	     15827	i386-dis.c	FUNCTION_31
0x4001cdb	    0x488b15000000	            mov rdx, qword [0x04001ce2] 	     15827	i386-dis.c	FUNCTION_31
0x4001ce2	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15827	i386-dis.c	FUNCTION_31
0x4001ce6	        0x488d7202	                      lea rsi, [rdx + 2]	     15827	i386-dis.c	FUNCTION_31
0x4001cea	          0x483b30	                    cmp rsi, qword [rax]	     15827	i386-dis.c	FUNCTION_31
0x4001ced	            0x7610	                           jbe 0x4001cff	     15827	i386-dis.c	FUNCTION_31
0x4001cef	      0xe8dcfeffff	                     call sym.fetch_data	     15827	i386-dis.c	FUNCTION_31
0x4001cf4	    0x488b15000000	            mov rdx, qword [0x04001cfb] 	     15827	i386-dis.c	FUNCTION_31
0x4001cfb	        0x488d7202	                      lea rsi, [rdx + 2]	     15827	i386-dis.c	FUNCTION_31
0x4001cff	         0xfb64201	               movzx eax, byte [rdx + 1]	     15830	i386-dis.c	FUNCTION_31
0x4001d03	           0xfb60a	                   movzx ecx, byte [rdx]	     15828	i386-dis.c	FUNCTION_31
0x4001d06	    0x488935000000	            mov qword [0x04001d0d], rsi 	     15829	i386-dis.c	FUNCTION_31
0x4001d0d	        0x4883c408	                              add rsp, 8	     15831	i386-dis.c	FUNCTION_31
0x4001d11	          0xc1e008	                              shl eax, 8	     15830	i386-dis.c	FUNCTION_31
0x4001d14	             0x9c8	                             or eax, ecx	     15830	i386-dis.c	FUNCTION_31
0x4001d16	              0xc3	                                     ret	     15831	i386-dis.c	FUNCTION_31
OP_IMREG	IF,6:CALL,1:functions,0:WHILE,0:ELSE,5:DO,0:SWITCH,1:FOR,0	83
0x40033b0	          0x8d47ba	                   lea eax, [rdi - 0x46]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40033b3	        0x4883ec08	                              sub rsp, 8	     15917	i386-dis.c	FUNCTION_34
0x40033b7	          0x83f827	                           cmp eax, 0x27	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40033ba	     0xf87f0000000	                            ja 0x40034b0	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40033c0	    0xff24c5000000	                       jmp qword [rax*8]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40033c7	    0x660f1f840000	                    nop word [rax + rax]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40033d0	    0x803d00000000	                cmp byte [0x040033d7], 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40033d7	      0xbe00000000	                              mov esi, 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40033dc	      0xb800000000	                              mov eax, 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40033e1	        0x480f45f0	                         cmovne rsi, rax	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40033e5	    0x488b3d000000	            mov rdi, qword [0x040033ec] 	       117	string3.h	FUNCTION_108	CALL_3
0x40033ec	      0xe800000000	                          call 0x40033f1	       117	string3.h	FUNCTION_108	CALL_3
0x40033f1	    0x488905000000	            mov qword [0x040033f8], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40033f8	        0x4883c408	                              add rsp, 8	     15971	i386-dis.c	FUNCTION_34
0x40033fc	              0xc3	                                     ret	     15971	i386-dis.c	FUNCTION_34
0x40033fd	           0xf1f00	                         nop dword [rax]	     15971	i386-dis.c	FUNCTION_34
0x4003400	    0x488b05000000	            mov rax, qword [0x04003407] 	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003407	          0x4863ff	                         movsxd rdi, edi	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x400340a	    0x488bb4f8d0fd	    mov rsi, qword [rax + rdi*8 - 0x230]	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003412	            0xebd1	                           jmp 0x40033e5	     15935	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003414	         0xf1f4000	                         nop dword [rax]	     15935	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003418	    0xf60500000000	               test byte [0x0400341f], 8	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x400341f	     0xf84ab000000	                            je 0x40034d0	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003425	    0x488b05000000	            mov rax, qword [0x0400342c] 	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x400342c	          0x4863ff	                         movsxd rdi, edi	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x400342f	    0x830d00000000	            or dword [0x04003436], 0x48 	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003436	    0x488bb4f8a0fd	    mov rsi, qword [rax + rdi*8 - 0x260]	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x400343e	            0xeba5	                           jmp 0x40033e5	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4003440	    0x8b0500000000	            mov eax, dword [0x04003446] 	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4003446	    0x830d00000000	            or dword [0x0400344d], 0x40 	     15938	i386-dis.c	FUNCTION_34	SWITCH_1
0x400344d	          0x4863ff	                         movsxd rdi, edi	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4003450	            0x85c0	                           test eax, eax	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4003452	     0xf84b8000000	                            je 0x4003510	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4003458	    0x488b05000000	            mov rax, qword [0x0400345f] 	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400345f	    0x488bb4f860fd	    mov rsi, qword [rax + rdi*8 - 0x2a0]	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4003467	      0xe979ffffff	                           jmp 0x40033e5	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400346c	         0xf1f4000	                         nop dword [rax]	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4003470	    0x488b05000000	            mov rax, qword [0x04003477] 	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003477	          0x4863ff	                         movsxd rdi, edi	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x400347a	    0x488bb4f820fd	    mov rsi, qword [rax + rdi*8 - 0x2e0]	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003482	      0xe95effffff	                           jmp 0x40033e5	     15931	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003487	    0x660f1f840000	                    nop word [rax + rax]	     15931	i386-dis.c	FUNCTION_34	SWITCH_1
0x4003490	    0xf60500000000	               test byte [0x04003497], 8	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4003497	            0x7567	                           jne 0x4003500	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4003499	          0x83e601	                              and esi, 1	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400349c	     0xf849e000000	                            je 0x4003540	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40034a2	    0x488b05000000	            mov rax, qword [0x040034a9] 	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40034a9	          0x488b30	                    mov rsi, qword [rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40034ac	            0xeb39	                           jmp 0x40034e7	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40034ae	            0x6690	                                     nop	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40034b0	      0xbe00000000	                              mov esi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40034b5	      0xba05000000	                              mov edx, 5	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40034ba	      0xbf00000000	                              mov edi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40034bf	      0xe800000000	                          call 0x40034c4	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40034c4	          0x4889c6	                            mov rsi, rax	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40034c7	      0xe919ffffff	                           jmp 0x40033e5	     15968	i386-dis.c	FUNCTION_34	SWITCH_1
0x40034cc	         0xf1f4000	                         nop dword [rax]	     15968	i386-dis.c	FUNCTION_34	SWITCH_1
0x40034d0	          0x83e601	                              and esi, 1	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x40034d3	            0x7553	                           jne 0x4003528	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x40034d5	    0x488b05000000	            mov rax, qword [0x040034dc] 	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x40034dc	          0x4863ff	                         movsxd rdi, edi	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x40034df	    0x488bb4f8a0fd	    mov rsi, qword [rax + rdi*8 - 0x260]	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x40034e7	    0x8b0500000000	            mov eax, dword [0x040034ed] 	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40034ed	      0x2500020000	                          and eax, 0x200	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40034f2	     0x90500000000	              or dword [0x040034f8], eax	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40034f8	      0xe9e8feffff	                           jmp 0x40033e5	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40034fd	           0xf1f00	                         nop dword [rax]	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x4003500	    0x488b05000000	            mov rax, qword [0x04003507] 	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4003507	          0x488b30	                    mov rsi, qword [rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400350a	      0xe9d6feffff	                           jmp 0x40033e5	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x400350f	              0x90	                                     nop	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4003510	    0x488b05000000	            mov rax, qword [0x04003517] 	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4003517	    0x488bb4f860fd	    mov rsi, qword [rax + rdi*8 - 0x2a0]	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x400351f	      0xe9c1feffff	                           jmp 0x40033e5	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4003524	         0xf1f4000	                         nop dword [rax]	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4003528	    0x488b05000000	            mov rax, qword [0x0400352f] 	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400352f	          0x4863ff	                         movsxd rdi, edi	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4003532	    0x488bb4f8a0fd	    mov rsi, qword [rax + rdi*8 - 0x260]	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400353a	            0xebab	                           jmp 0x40034e7	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400353c	         0xf1f4000	                         nop dword [rax]	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4003540	    0x488b05000000	            mov rax, qword [0x04003547] 	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x4003547	          0x488b30	                    mov rsi, qword [rax]	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x400354a	            0xeb9b	                           jmp 0x40034e7	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
OP_ST	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	8
0x4002020	        0x4883ec08	                              sub rsp, 8	     13969	i386-dis.c	FUNCTION_15
0x4002024	    0x480fbe350000	           movsx rsi, byte [0x0400202c] 	       117	string3.h	FUNCTION_108	CALL_3
0x400202c	    0x488b3d000000	            mov rdi, qword [0x04002033] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002033	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x400203a	      0xe800000000	                          call 0x400203f	       117	string3.h	FUNCTION_108	CALL_3
0x400203f	    0x488905000000	            mov qword [0x04002046], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002046	        0x4883c408	                              add rsp, 8	     13971	i386-dis.c	FUNCTION_15
0x400204a	              0xc3	                                     ret	     13971	i386-dis.c	FUNCTION_15
append_seg	IF,1:CALL,6:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,1:FOR,0	60
0x4002050	        0x4883ec08	                              sub rsp, 8	     14582	i386-dis.c	FUNCTION_19
0x4002054	    0x8b0500000000	            mov eax, dword [0x0400205a] 	     14584	i386-dis.c	FUNCTION_19	IF_1
0x400205a	            0x85c0	                           test eax, eax	     14584	i386-dis.c	FUNCTION_19	IF_1
0x400205c	            0x744e	                            je 0x40020ac	     14584	i386-dis.c	FUNCTION_19	IF_1
0x400205e	     0x90500000000	              or dword [0x04002064], eax	     14587	i386-dis.c	FUNCTION_19
0x4002064	          0x83f820	                           cmp eax, 0x20	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002067	     0xf8403010000	                            je 0x4002170	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x400206d	            0x7e49	                           jle 0x40020b8	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x400206f	      0x3d80000000	                           cmp eax, 0x80	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002074	     0xf84c6000000	                            je 0x4002140	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x400207a	      0x3d00010000	                          cmp eax, 0x100	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x400207f	     0xf8493000000	                            je 0x4002118	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002085	          0x83f840	                           cmp eax, 0x40	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002088	            0x7522	                           jne 0x40020ac	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x400208a	    0x480fbe350000	           movsx rsi, byte [0x04002092] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002092	    0x488b3d000000	            mov rdi, qword [0x04002099] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002099	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40020a0	      0xe800000000	                          call 0x40020a5	       117	string3.h	FUNCTION_108	CALL_3
0x40020a5	    0x488905000000	            mov qword [0x040020ac], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40020ac	        0x4883c408	                              add rsp, 8	     14611	i386-dis.c	FUNCTION_19
0x40020b0	              0xc3	                                     ret	     14611	i386-dis.c	FUNCTION_19
0x40020b1	     0xf1f80000000	                         nop dword [rax]	     14611	i386-dis.c	FUNCTION_19
0x40020b8	          0x83f808	                              cmp eax, 8	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x40020bb	            0x7433	                            je 0x40020f0	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x40020bd	          0x83f810	                           cmp eax, 0x10	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x40020c0	            0x75ea	                           jne 0x40020ac	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x40020c2	    0x480fbe350000	           movsx rsi, byte [0x040020ca] 	       117	string3.h	FUNCTION_108	CALL_3
0x40020ca	    0x488b3d000000	            mov rdi, qword [0x040020d1] 	       117	string3.h	FUNCTION_108	CALL_3
0x40020d1	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40020d8	      0xe800000000	                          call 0x40020dd	       117	string3.h	FUNCTION_108	CALL_3
0x40020dd	    0x488905000000	            mov qword [0x040020e4], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40020e4	            0xebc6	                           jmp 0x40020ac	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40020e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40020f0	    0x480fbe350000	           movsx rsi, byte [0x040020f8] 	       117	string3.h	FUNCTION_108	CALL_3
0x40020f8	    0x488b3d000000	            mov rdi, qword [0x040020ff] 	       117	string3.h	FUNCTION_108	CALL_3
0x40020ff	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4002106	      0xe800000000	                          call 0x400210b	       117	string3.h	FUNCTION_108	CALL_3
0x400210b	    0x488905000000	            mov qword [0x04002112], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002112	            0xeb98	                           jmp 0x40020ac	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002114	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002118	    0x480fbe350000	           movsx rsi, byte [0x04002120] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002120	    0x488b3d000000	            mov rdi, qword [0x04002127] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002127	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x400212e	      0xe800000000	                          call 0x4002133	       117	string3.h	FUNCTION_108	CALL_3
0x4002133	    0x488905000000	            mov qword [0x0400213a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400213a	      0xe96dffffff	                           jmp 0x40020ac	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400213f	              0x90	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002140	    0x480fbe350000	           movsx rsi, byte [0x04002148] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002148	    0x488b3d000000	            mov rdi, qword [0x0400214f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400214f	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4002156	      0xe800000000	                          call 0x400215b	       117	string3.h	FUNCTION_108	CALL_3
0x400215b	    0x488905000000	            mov qword [0x04002162], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002162	      0xe945ffffff	                           jmp 0x40020ac	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002167	    0x660f1f840000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002170	    0x480fbe350000	           movsx rsi, byte [0x04002178] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002178	    0x488b3d000000	            mov rdi, qword [0x0400217f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400217f	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4002186	      0xe800000000	                          call 0x400218b	       117	string3.h	FUNCTION_108	CALL_3
0x400218b	    0x488905000000	            mov qword [0x04002192], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002192	      0xe915ffffff	                           jmp 0x40020ac	     14577	i386-dis.c	FUNCTION_18	CALL_1
BadOp	IF,0:CALL,1:functions,0:WHILE,0:ELSE,0:DO,0:SWITCH,0:FOR,0	10
0x4002460	    0x488b05000000	            mov rax, qword [0x04002467] 	     16917	i386-dis.c	FUNCTION_67
0x4002467	      0xba29000000	                           mov edx, 0x29	     16917	i386-dis.c	FUNCTION_67
0x400246c	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4002470	    0x488905000000	            mov qword [0x04002477], rax 	     16917	i386-dis.c	FUNCTION_67
0x4002477	    0x488b05000000	            mov rax, qword [0x0400247e] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400247e	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002484	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002488	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400248c	    0x488905000000	            mov qword [0x04002493], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002493	              0xc3	                                     ret	     14577	i386-dis.c	FUNCTION_18	CALL_1
