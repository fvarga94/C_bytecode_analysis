s_endif	CALL,6:ELSE,1:IF,3:functions,0:WHILE,1:SWITCH,0:FOR,0:DO,0	56
0x4000ec0	        0x4883ec08	                              sub rsp, 8	       382	cond.c	FUNCTION_7
0x4000ec4	    0x488b35000000	            mov rsi, qword [0x04000ecb] 	       385	cond.c	FUNCTION_7	IF_1
0x4000ecb	          0x4885f6	                           test rsi, rsi	       385	cond.c	FUNCTION_7	IF_1
0x4000ece	     0xf84bc000000	                            je 0x4000f90	       385	cond.c	FUNCTION_7	IF_1
0x4000ed4	    0xf60500000000	           test byte [0x04000edb], 0x20 	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000edb	            0x7428	                            je 0x4000f05	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000edd	          0x8b4e2c	            mov ecx, dword [rsi + 0x2c] 	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000ee0	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000ee4	            0x85c9	                           test ecx, ecx	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000ee6	            0x7421	                            je 0x4000f09	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000ee8	          0x4885c0	                           test rax, rax	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000eeb	            0x7407	                            je 0x4000ef4	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000eed	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000ef0	            0x85d2	                           test edx, edx	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000ef2	            0x7515	                           jne 0x4000f09	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000ef4	      0xbf01000000	                              mov edi, 1	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000ef9	      0xe800000000	                          call 0x4000efe	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000efe	    0x488b35000000	            mov rsi, qword [0x04000f05] 	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000f05	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000f09	    0x483935000000	            cmp qword [0x04000f10], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f10	    0x488905000000	            mov qword [0x04000f17], rax 	       398	cond.c	FUNCTION_7	ELSE_1
0x4000f17	            0x7309	                           jae 0x4000f22	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f19	    0x483935000000	            cmp qword [0x04000f20], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f20	            0x7756	                            ja 0x4000f78	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f22	      0xbf00000000	                              mov edi, 0	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f27	      0xe800000000	                          call 0x4000f2c	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f2c	    0x8b0500000000	            mov eax, dword [0x04000f32] 	       402	cond.c	FUNCTION_7	IF_3
0x4000f32	            0x85c0	                           test eax, eax	       402	cond.c	FUNCTION_7	IF_3
0x4000f34	            0x7434	                            je 0x4000f6a	       402	cond.c	FUNCTION_7	IF_3
0x4000f36	    0x488b05000000	            mov rax, qword [0x04000f3d] 	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f3d	           0xfb610	                   movzx edx, byte [rax]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f40	    0x80ba00000000	                       cmp byte [rdx], 0	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f47	            0x7521	                           jne 0x4000f6a	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f49	        0x4883c001	                              add rax, 1	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f4d	           0xf1f00	                         nop dword [rax]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f50	          0x4889c2	                            mov rdx, rax	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f53	    0x488905000000	            mov qword [0x04000f5a], rax 	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f5a	        0x4883c001	                              add rax, 1	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f5e	           0xfb612	                   movzx edx, byte [rdx]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f61	    0x80ba00000000	                       cmp byte [rdx], 0	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f68	            0x74e6	                            je 0x4000f50	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000f6a	        0x4883c408	                              add rsp, 8	       409	cond.c	FUNCTION_7
0x4000f6e	      0xe900000000	                           jmp 0x4000f73	       408	cond.c	FUNCTION_7	CALL_6
0x4000f73	       0xf1f440000	                   nop dword [rax + rax]	       408	cond.c	FUNCTION_7	CALL_6
0x4000f78	    0x488935000000	            mov qword [0x04000f7f], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f7f	    0x488935000000	            mov qword [0x04000f86], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f86	            0xeba4	                           jmp 0x4000f2c	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f88	     0xf1f84000000	                   nop dword [rax + rax]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000f90	            0x31ff	                            xor edi, edi	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000f92	      0xba05000000	                              mov edx, 5	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000f97	      0xbe00000000	                              mov esi, 0	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000f9c	      0xe800000000	                          call 0x4000fa1	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000fa1	          0x4889c7	                            mov rdi, rax	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000fa4	            0x31c0	                            xor eax, eax	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000fa6	      0xe800000000	                          call 0x4000fab	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000fab	      0xe97cffffff	                           jmp 0x4000f2c	       387	cond.c	FUNCTION_7	IF_1	CALL_2
ignore_input	CALL,6:ELSE,1:IF,4:functions,0:WHILE,0:SWITCH,0:FOR,0:DO,0	64
0x4001370	              0x53	                                push rbx	       499	cond.c	FUNCTION_10
0x4001371	    0x488b1d000000	            mov rbx, qword [0x04001378] 	       502	cond.c	FUNCTION_10
0x4001378	        0x807bff2e	                cmp byte [rbx - 1], 0x2e	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400137c	            0x7422	                            je 0x40013a0	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400137e	    0x488b05000000	            mov rax, qword [0x04001385] 	       528	cond.c	FUNCTION_10
0x4001385	          0x4885c0	                           test rax, rax	       528	cond.c	FUNCTION_10
0x4001388	     0xf84b2000000	                            je 0x4001440	       528	cond.c	FUNCTION_10
0x400138e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001391	            0x85c0	                           test eax, eax	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001393	           0xf95c0	                                setne al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001396	           0xfb6c0	                           movzx eax, al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001399	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x400139a	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
0x400139b	       0xf1f440000	                   nop dword [rax + rax]	       529	cond.c	FUNCTION_10
0x40013a0	           0xfb603	                   movzx eax, byte [rbx]	       517	cond.c	FUNCTION_10	IF_4
0x40013a3	          0x83e0df	                     and eax, 0xffffffdf	       517	cond.c	FUNCTION_10	IF_4
0x40013a6	            0x3c49	                            cmp al, 0x49	       516	cond.c	FUNCTION_10	IF_4
0x40013a8	            0x7546	                           jne 0x40013f0	       516	cond.c	FUNCTION_10	IF_4
0x40013aa	      0xba02000000	                              mov edx, 2	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40013af	      0xbe00000000	                              mov esi, 0	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40013b4	          0x4889df	                            mov rdi, rbx	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40013b7	      0xe800000000	                          call 0x40013bc	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40013bc	            0x85c0	                           test eax, eax	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40013be	            0x74d9	                            je 0x4001399	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40013c0	      0xba05000000	                              mov edx, 5	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x40013c5	      0xbe00000000	                              mov esi, 0	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x40013ca	          0x4889df	                            mov rdi, rbx	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x40013cd	      0xe800000000	                          call 0x40013d2	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x40013d2	            0x85c0	                           test eax, eax	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x40013d4	            0x74c3	                            je 0x4001399	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x40013d6	      0xba06000000	                              mov edx, 6	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40013db	      0xbe00000000	                              mov esi, 0	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40013e0	          0x4889df	                            mov rdi, rbx	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40013e3	      0xe800000000	                          call 0x40013e8	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40013e8	            0x85c0	                           test eax, eax	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40013ea	            0x7592	                           jne 0x400137e	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40013ec	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x40013ed	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
0x40013ee	            0x6690	                                     nop	       529	cond.c	FUNCTION_10
0x40013f0	            0x3c45	                            cmp al, 0x45	       521	cond.c	FUNCTION_10	IF_4
0x40013f2	            0x758a	                           jne 0x400137e	       521	cond.c	FUNCTION_10	IF_4
0x40013f4	      0xba04000000	                              mov edx, 4	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40013f9	      0xbe00000000	                              mov esi, 0	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40013fe	          0x4889df	                            mov rdi, rbx	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001401	      0xe800000000	                          call 0x4001406	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001406	            0x85c0	                           test eax, eax	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001408	            0x748f	                            je 0x4001399	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x400140a	      0xba05000000	                              mov edx, 5	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400140f	      0xbe00000000	                              mov esi, 0	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001414	          0x4889df	                            mov rdi, rbx	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001417	      0xe800000000	                          call 0x400141c	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400141c	            0x85c0	                           test eax, eax	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400141e	     0xf8475ffffff	                            je 0x4001399	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001424	      0xba04000000	                              mov edx, 4	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001429	      0xbe00000000	                              mov esi, 0	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x400142e	          0x4889df	                            mov rdi, rbx	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001431	      0xe800000000	                          call 0x4001436	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001436	            0x85c0	                           test eax, eax	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001438	     0xf8540ffffff	                           jne 0x400137e	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x400143e	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x400143f	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
0x4001440	            0x31c0	                            xor eax, eax	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001442	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x4001443	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
s_if	CALL,13:ELSE,1:IF,5:functions,0:WHILE,1:SWITCH,1:FOR,0:DO,0	189
0x4000460	              0x55	                                push rbp	       128	cond.c	FUNCTION_2
0x4000461	              0x53	                                push rbx	       128	cond.c	FUNCTION_2
0x4000462	            0x31db	                            xor ebx, ebx	       128	cond.c	FUNCTION_2
0x4000464	            0x89fd	                            mov ebp, edi	       128	cond.c	FUNCTION_2
0x4000466	        0x4883ec78	                           sub rsp, 0x78	       128	cond.c	FUNCTION_2
0x400046a	    0x448b05000000	            mov r8d, dword [0x04000471] 	       135	cond.c	FUNCTION_2	IF_1
0x4000471	    0x64488b042528	                mov rax, qword fs:[0x28]	       128	cond.c	FUNCTION_2
0x400047a	      0x4889442468	             mov qword [rsp + 0x68], rax	       128	cond.c	FUNCTION_2
0x400047f	            0x31c0	                            xor eax, eax	       128	cond.c	FUNCTION_2
0x4000481	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       133	cond.c	FUNCTION_2
0x4000486	          0x4585c0	                           test r8d, r8d	       135	cond.c	FUNCTION_2	IF_1
0x4000489	     0xf85c9000000	                           jne 0x4000558	       135	cond.c	FUNCTION_2	IF_1
0x400048f	    0x488b05000000	            mov rax, qword [0x04000496] 	       139	cond.c	FUNCTION_2	CALL_2
0x4000496	          0x803820	                    cmp byte [rax], 0x20	       139	cond.c	FUNCTION_2	CALL_2
0x4000499	     0xf84d6000000	                            je 0x4000575	       139	cond.c	FUNCTION_2	CALL_2
0x400049f	    0x488b05000000	            mov rax, qword [0x040004a6] 	       141	cond.c	FUNCTION_2	IF_2
0x40004a6	          0x4885c0	                           test rax, rax	       141	cond.c	FUNCTION_2	IF_2
0x40004a9	            0x745d	                            je 0x4000508	       141	cond.c	FUNCTION_2	IF_2
0x40004ab	          0x8b782c	            mov edi, dword [rax + 0x2c] 	       141	cond.c	FUNCTION_2	IF_2
0x40004ae	            0x85ff	                           test edi, edi	       141	cond.c	FUNCTION_2	IF_2
0x40004b0	            0x7456	                            je 0x4000508	       141	cond.c	FUNCTION_2	IF_2
0x40004b2	    0x488b05000000	            mov rax, qword [0x040004b9] 	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004b9	    0x48c744242000	               mov qword [rsp + 0x20], 0	       143	cond.c	FUNCTION_2	IF_2
0x40004c2	           0xfb610	                   movzx edx, byte [rax]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004c5	        0x4883c001	                              add rax, 1	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004c9	    0x80ba00000000	                       cmp byte [rdx], 0	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004d0	            0x7520	                           jne 0x40004f2	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004d2	    0x660f1f440000	                    nop word [rax + rax]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004d8	          0x4889c2	                            mov rdx, rax	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004db	    0x488905000000	            mov qword [0x040004e2], rax 	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004e2	        0x4883c001	                              add rax, 1	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004e6	           0xfb612	                   movzx edx, byte [rdx]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004e9	    0x80ba00000000	                       cmp byte [rdx], 0	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004f0	            0x74e6	                            je 0x40004d8	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004f2	          0x8d7deb	                   lea edi, [rbp - 0x15]	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004f5	          0x83ff05	                              cmp edi, 5	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004f8	            0x7746	                            ja 0x4000540	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004fa	    0xff24fd000000	                       jmp qword [rdi*8]	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000501	     0xf1f80000000	                         nop dword [rax]	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000508	      0x488d742410	                   lea rsi, [rsp + 0x10]	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x400050d	            0x31d2	                            xor edx, edx	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x400050f	            0x31ff	                            xor edi, edi	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000511	      0xe800000000	                          call 0x4000516	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000516	      0x807c242802	                cmp byte [rsp + 0x28], 2	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x400051b	            0x74d5	                            je 0x40004f2	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x400051d	            0x31ff	                            xor edi, edi	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x400051f	      0xba05000000	                              mov edx, 5	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000524	      0xbe00000000	                              mov esi, 0	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000529	      0xe800000000	                          call 0x400052e	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x400052e	          0x4889c7	                            mov rdi, rax	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000531	            0x31c0	                            xor eax, eax	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000533	      0xe800000000	                          call 0x4000538	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000538	          0x8d7deb	                   lea edi, [rbp - 0x15]	       154	cond.c	FUNCTION_2	SWITCH_1
0x400053b	          0x83ff05	                              cmp edi, 5	       154	cond.c	FUNCTION_2	SWITCH_1
0x400053e	            0x76ba	                           jbe 0x40004fa	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000540	      0xba00000000	                              mov edx, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000545	      0xbea3000000	                           mov esi, 0xa3	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x400054a	      0xbf00000000	                              mov edi, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x400054f	      0xe800000000	                          call 0x4000554	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000554	         0xf1f4000	                         nop dword [rax]	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000558	      0x488d7c240f	                    lea rdi, [rsp + 0xf]	       136	cond.c	FUNCTION_2	CALL_1
0x400055d	      0xe800000000	                          call 0x4000562	       136	cond.c	FUNCTION_2	CALL_1
0x4000562	          0x4889c3	                            mov rbx, rax	       136	cond.c	FUNCTION_2	CALL_1
0x4000565	    0x488b05000000	            mov rax, qword [0x0400056c] 	       139	cond.c	FUNCTION_2	CALL_2
0x400056c	          0x803820	                    cmp byte [rax], 0x20	       139	cond.c	FUNCTION_2	CALL_2
0x400056f	     0xf852affffff	                           jne 0x400049f	       139	cond.c	FUNCTION_2	CALL_2
0x4000575	        0x4883c001	                              add rax, 1	       139	cond.c	FUNCTION_2	CALL_2
0x4000579	    0x488905000000	            mov qword [0x04000580], rax 	       139	cond.c	FUNCTION_2	CALL_2
0x4000580	      0xe91affffff	                           jmp 0x400049f	       139	cond.c	FUNCTION_2	CALL_2
0x4000585	           0xf1f00	                         nop dword [rax]	       139	cond.c	FUNCTION_2	CALL_2
0x4000588	            0x31ed	                            xor ebp, ebp	       156	cond.c	FUNCTION_2	SWITCH_1
0x400058a	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       156	cond.c	FUNCTION_2	SWITCH_1
0x4000590	        0x400f94c5	                                sete bpl	       156	cond.c	FUNCTION_2	SWITCH_1
0x4000594	         0xf1f4000	                         nop dword [rax]	       156	cond.c	FUNCTION_2	SWITCH_1
0x4000598	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       169	cond.c	FUNCTION_2	CALL_7
0x400059d	      0xe8cefbffff	              call sym.initialize_cframe	       169	cond.c	FUNCTION_2	CALL_7
0x40005a2	        0x8b742460	            mov esi, dword [rsp + 0x60] 	       170	cond.c	FUNCTION_2
0x40005a6	            0x89e8	                            mov eax, ebp	       170	cond.c	FUNCTION_2
0x40005a8	            0x85f6	                           test esi, esi	       170	cond.c	FUNCTION_2
0x40005aa	    0x488b35000000	            mov rsi, qword [0x040005b1] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005b1	           0xf95c2	                                setne dl	       170	cond.c	FUNCTION_2
0x40005b4	          0x83f001	                              xor eax, 1	       170	cond.c	FUNCTION_2
0x40005b7	             0x9d0	                             or eax, edx	       170	cond.c	FUNCTION_2
0x40005b9	    0x488b15000000	            mov rdx, qword [0x040005c0] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005c0	           0xfb6c0	                           movzx eax, al	       170	cond.c	FUNCTION_2
0x40005c3	        0x8944245c	             mov dword [rsp + 0x5c], eax	       170	cond.c	FUNCTION_2
0x40005c7	          0x4889f0	                            mov rax, rsi	       172	cond.c	FUNCTION_2	CALL_8
0x40005ca	          0x4829d0	                            sub rax, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x40005cd	        0x4883f837	                           cmp rax, 0x37	       172	cond.c	FUNCTION_2	CALL_8
0x40005d1	     0xf8681010000	                           jbe 0x4000758	       172	cond.c	FUNCTION_2	CALL_8
0x40005d7	    0x488b05000000	            mov rax, qword [0x040005de] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005de	        0x4883c238	                           add rdx, 0x38	       172	cond.c	FUNCTION_2	CALL_8
0x40005e2	          0x4839c2	                            cmp rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x40005e5	     0xf8495010000	                            je 0x4000780	       172	cond.c	FUNCTION_2	CALL_8
0x40005eb	    0x488b0d000000	            mov rcx, qword [0x040005f2] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005f2	          0x4989f0	                             mov r8, rsi	       172	cond.c	FUNCTION_2	CALL_8
0x40005f5	          0x4801ca	                            add rdx, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005f8	          0x48f7d1	                                 not rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005fb	          0x4821ca	                            and rdx, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005fe	    0x488b0d000000	            mov rcx, qword [0x04000605] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000605	          0x4889d7	                            mov rdi, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x4000608	    0x488915000000	            mov qword [0x0400060f], rdx 	       172	cond.c	FUNCTION_2	CALL_8
0x400060f	          0x4829cf	                            sub rdi, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x4000612	          0x4929c8	                             sub r8, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x4000615	          0x4c39c7	                             cmp rdi, r8	       172	cond.c	FUNCTION_2	CALL_8
0x4000618	            0x760a	                           jbe 0x4000624	       172	cond.c	FUNCTION_2	CALL_8
0x400061a	    0x488935000000	            mov qword [0x04000621], rsi 	       172	cond.c	FUNCTION_2	CALL_8
0x4000621	          0x4889f2	                            mov rdx, rsi	       172	cond.c	FUNCTION_2	CALL_8
0x4000624	    0x488915000000	            mov qword [0x0400062b], rdx 	       172	cond.c	FUNCTION_2	CALL_8
0x400062b	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000630	    0x488905000000	            mov qword [0x04000637], rax 	       171	cond.c	FUNCTION_2
0x4000637	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400063a	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x400063f	    0xf60500000000	           test byte [0x04000646], 0x20 	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x4000646	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400064a	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x400064f	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000653	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000658	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400065c	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000661	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000665	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_14	CALL_3
0x400066a	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400066e	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000673	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000677	            0x7427	                            je 0x40006a0	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x4000679	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	       176	cond.c	FUNCTION_2	IF_4
0x400067d	            0x85c9	                           test ecx, ecx	       176	cond.c	FUNCTION_2	IF_4
0x400067f	            0x741f	                            je 0x40006a0	       176	cond.c	FUNCTION_2	IF_4
0x4000681	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       177	cond.c	FUNCTION_2	IF_4
0x4000686	          0x4885c0	                           test rax, rax	       177	cond.c	FUNCTION_2	IF_4
0x4000689	            0x7407	                            je 0x4000692	       177	cond.c	FUNCTION_2	IF_4
0x400068b	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       178	cond.c	FUNCTION_2	IF_4
0x400068e	            0x85d2	                           test edx, edx	       178	cond.c	FUNCTION_2	IF_4
0x4000690	            0x750e	                           jne 0x40006a0	       178	cond.c	FUNCTION_2	IF_4
0x4000692	      0xbf02000000	                              mov edi, 2	       179	cond.c	FUNCTION_2	CALL_11
0x4000697	      0xe800000000	                          call 0x400069c	       179	cond.c	FUNCTION_2	CALL_11
0x400069c	         0xf1f4000	                         nop dword [rax]	       179	cond.c	FUNCTION_2	CALL_11
0x40006a0	    0x8b0500000000	            mov eax, dword [0x040006a6] 	       181	cond.c	FUNCTION_2	IF_5
0x40006a6	            0x85c0	                           test eax, eax	       181	cond.c	FUNCTION_2	IF_5
0x40006a8	            0x740d	                            je 0x40006b7	       181	cond.c	FUNCTION_2	IF_5
0x40006aa	       0xfbe74240f	            movsx esi, byte [rsp + 0xf] 	       182	cond.c	FUNCTION_2	CALL_12
0x40006af	          0x4889df	                            mov rdi, rbx	       182	cond.c	FUNCTION_2	CALL_12
0x40006b2	      0xe800000000	                          call 0x40006b7	       182	cond.c	FUNCTION_2	CALL_12
0x40006b7	      0xe800000000	                          call 0x40006bc	       184	cond.c	FUNCTION_2	CALL_13
0x40006bc	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       185	cond.c	FUNCTION_2
0x40006c1	    0x644833042528	                xor rax, qword fs:[0x28]	       185	cond.c	FUNCTION_2
0x40006ca	     0xf85bc000000	                           jne 0x400078c	       185	cond.c	FUNCTION_2
0x40006d0	        0x4883c478	                           add rsp, 0x78	       185	cond.c	FUNCTION_2
0x40006d4	              0x5b	                                 pop rbx	       185	cond.c	FUNCTION_2
0x40006d5	              0x5d	                                 pop rbp	       185	cond.c	FUNCTION_2
0x40006d6	              0xc3	                                     ret	       185	cond.c	FUNCTION_2
0x40006d7	    0x660f1f840000	                    nop word [rax + rax]	       185	cond.c	FUNCTION_2
0x40006e0	            0x31ed	                            xor ebp, ebp	       157	cond.c	FUNCTION_2	SWITCH_1
0x40006e2	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       157	cond.c	FUNCTION_2	SWITCH_1
0x40006e8	        0x400f95c5	                               setne bpl	       157	cond.c	FUNCTION_2	SWITCH_1
0x40006ec	      0xe9a7feffff	                           jmp 0x4000598	       157	cond.c	FUNCTION_2	SWITCH_1
0x40006f1	     0xf1f80000000	                         nop dword [rax]	       157	cond.c	FUNCTION_2	SWITCH_1
0x40006f8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       158	cond.c	FUNCTION_2	SWITCH_1
0x40006fd	        0x48c1e83f	                           shr rax, 0x3f	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000701	          0x4889c5	                            mov rbp, rax	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000704	      0xe98ffeffff	                           jmp 0x4000598	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000709	     0xf1f80000000	                         nop dword [rax]	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000710	            0x31ed	                            xor ebp, ebp	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000712	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000718	        0x400f9ec5	                               setle bpl	       159	cond.c	FUNCTION_2	SWITCH_1
0x400071c	      0xe977feffff	                           jmp 0x4000598	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000721	     0xf1f80000000	                         nop dword [rax]	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000728	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       160	cond.c	FUNCTION_2	SWITCH_1
0x400072d	          0x48f7d0	                                 not rax	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000730	        0x48c1e83f	                           shr rax, 0x3f	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000734	          0x4889c5	                            mov rbp, rax	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000737	      0xe95cfeffff	                           jmp 0x4000598	       160	cond.c	FUNCTION_2	SWITCH_1
0x400073c	         0xf1f4000	                         nop dword [rax]	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000740	            0x31ed	                            xor ebp, ebp	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000742	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000748	        0x400f9fc5	                                setg bpl	       161	cond.c	FUNCTION_2	SWITCH_1
0x400074c	      0xe947feffff	                           jmp 0x4000598	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000751	     0xf1f80000000	                         nop dword [rax]	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000758	      0xbe38000000	                           mov esi, 0x38	       172	cond.c	FUNCTION_2	CALL_8
0x400075d	      0xbf00000000	                              mov edi, 0	       172	cond.c	FUNCTION_2	CALL_8
0x4000762	      0xe800000000	                          call 0x4000767	       172	cond.c	FUNCTION_2	CALL_8
0x4000767	    0x488b15000000	            mov rdx, qword [0x0400076e] 	       172	cond.c	FUNCTION_2	CALL_8
0x400076e	    0x488b35000000	            mov rsi, qword [0x04000775] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000775	      0xe95dfeffff	                           jmp 0x40005d7	       172	cond.c	FUNCTION_2	CALL_8
0x400077a	    0x660f1f440000	                    nop word [rax + rax]	       172	cond.c	FUNCTION_2	CALL_8
0x4000780	    0x800d00000000	                 or byte [0x04000787], 2	       172	cond.c	FUNCTION_2	CALL_8
0x4000787	      0xe95ffeffff	                           jmp 0x40005eb	       172	cond.c	FUNCTION_2	CALL_8
0x400078c	      0xe800000000	                          call 0x4000791	       185	cond.c	FUNCTION_2
initialize_cframe	CALL,2:ELSE,0:IF,0:functions,0:WHILE,0:SWITCH,0:FOR,0:DO,0	28
0x4000170	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_17	CALL_6
0x4000172	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_17	CALL_6
0x4000177	              0x53	                                push rbx	       533	cond.c	FUNCTION_11
0x4000178	          0x4889fb	                            mov rbx, rdi	       533	cond.c	FUNCTION_11
0x400017b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x400017e	        0x488d7b08	                      lea rdi, [rbx + 8]	       536	cond.c	FUNCTION_11	CALL_2
0x4000182	      0xe800000000	                          call 0x4000187	       536	cond.c	FUNCTION_11	CALL_2
0x4000187	          0x488903	                    mov qword [rbx], rax	       536	cond.c	FUNCTION_11	CALL_2
0x400018a	    0x488b05000000	            mov rax, qword [0x04000191] 	       537	cond.c	FUNCTION_11
0x4000191	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x4000194	        0x48894320	             mov qword [rbx + 0x20], rax	       537	cond.c	FUNCTION_11
0x4000198	            0x741e	                            je 0x40001b8	       538	cond.c	FUNCTION_11
0x400019a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       538	cond.c	FUNCTION_11
0x400019d	            0x85c0	                           test eax, eax	       538	cond.c	FUNCTION_11
0x400019f	           0xf95c0	                                setne al	       538	cond.c	FUNCTION_11
0x40001a2	           0xfb6c0	                           movzx eax, al	       538	cond.c	FUNCTION_11
0x40001a5	          0x894330	             mov dword [rbx + 0x30], eax	       538	cond.c	FUNCTION_11
0x40001a8	    0x8b0500000000	            mov eax, dword [0x040001ae] 	       539	cond.c	FUNCTION_11
0x40001ae	          0x894334	             mov dword [rbx + 0x34], eax	       539	cond.c	FUNCTION_11
0x40001b1	              0x5b	                                 pop rbx	       540	cond.c	FUNCTION_11
0x40001b2	              0xc3	                                     ret	       540	cond.c	FUNCTION_11
0x40001b3	       0xf1f440000	                   nop dword [rax + rax]	       540	cond.c	FUNCTION_11
0x40001b8	            0x31c0	                            xor eax, eax	       538	cond.c	FUNCTION_11
0x40001ba	          0x894330	             mov dword [rbx + 0x30], eax	       538	cond.c	FUNCTION_11
0x40001bd	    0x8b0500000000	            mov eax, dword [0x040001c3] 	       539	cond.c	FUNCTION_11
0x40001c3	          0x894334	             mov dword [rbx + 0x34], eax	       539	cond.c	FUNCTION_11
0x40001c6	              0x5b	                                 pop rbx	       540	cond.c	FUNCTION_11
0x40001c7	              0xc3	                                     ret	       540	cond.c	FUNCTION_11
s_ifdef	CALL,18:ELSE,1:IF,3:functions,0:WHILE,0:SWITCH,0:FOR,0:DO,0	153
0x40001d0	            0x4154	                                push r12	        70	cond.c	FUNCTION_1
0x40001d2	              0x55	                                push rbp	        70	cond.c	FUNCTION_1
0x40001d3	            0x89fd	                            mov ebp, edi	        70	cond.c	FUNCTION_1
0x40001d5	              0x53	                                push rbx	        70	cond.c	FUNCTION_1
0x40001d6	        0x4883ec50	                           sub rsp, 0x50	        70	cond.c	FUNCTION_1
0x40001da	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	cond.c	FUNCTION_1
0x40001e3	      0x4889442448	             mov qword [rsp + 0x48], rax	        70	cond.c	FUNCTION_1
0x40001e8	            0x31c0	                            xor eax, eax	        70	cond.c	FUNCTION_1
0x40001ea	    0x488b05000000	            mov rax, qword [0x040001f1] 	        79	cond.c	FUNCTION_1	CALL_1
0x40001f1	          0x803820	                    cmp byte [rax], 0x20	        79	cond.c	FUNCTION_1	CALL_1
0x40001f4	     0xf84e6010000	                            je 0x40003e0	        79	cond.c	FUNCTION_1	CALL_1
0x40001fa	      0x4889442408	                mov qword [rsp + 8], rax	        80	cond.c	FUNCTION_1
0x40001ff	           0xfb610	                   movzx edx, byte [rax]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000202	    0xf68200000000	                      test byte [rdx], 2	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000209	            0x7565	                           jne 0x4000270	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x400020b	          0x80fa22	                            cmp dl, 0x22	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x400020e	            0x7460	                            je 0x4000270	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000210	            0x31ff	                            xor edi, edi	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000212	      0xba05000000	                              mov edx, 5	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000217	      0xbe00000000	                              mov esi, 0	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x400021c	      0xe800000000	                          call 0x4000221	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000221	          0x4889c7	                            mov rdi, rax	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000224	            0x31c0	                            xor eax, eax	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000226	      0xe800000000	                          call 0x400022b	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x400022b	    0x488b05000000	            mov rax, qword [0x04000232] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000232	    0x483905000000	            cmp qword [0x04000239], rax 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000239	     0xf84c1010000	                            je 0x4000400	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400023f	        0x488d5001	                      lea rdx, [rax + 1]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000243	    0x488915000000	            mov qword [0x0400024a], rdx 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400024a	          0xc60000	                       mov byte [rax], 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400024d	      0xe800000000	                          call 0x4000252	        86	cond.c	FUNCTION_1	IF_1	CALL_6
0x4000252	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       124	cond.c	FUNCTION_1
0x4000257	    0x644833042528	                xor rax, qword fs:[0x28]	       124	cond.c	FUNCTION_1
0x4000260	     0xf85ee010000	                           jne 0x4000454	       124	cond.c	FUNCTION_1
0x4000266	        0x4883c450	                           add rsp, 0x50	       124	cond.c	FUNCTION_1
0x400026a	              0x5b	                                 pop rbx	       124	cond.c	FUNCTION_1
0x400026b	              0x5d	                                 pop rbp	       124	cond.c	FUNCTION_1
0x400026c	            0x415c	                                 pop r12	       124	cond.c	FUNCTION_1
0x400026e	              0xc3	                                     ret	       124	cond.c	FUNCTION_1
0x400026f	              0x90	                                     nop	       124	cond.c	FUNCTION_1
0x4000270	      0x488d7c2408	                      lea rdi, [rsp + 8]	        90	cond.c	FUNCTION_1	CALL_7
0x4000275	      0xe800000000	                          call 0x400027a	        90	cond.c	FUNCTION_1	CALL_7
0x400027a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        91	cond.c	FUNCTION_1	CALL_8
0x400027f	            0x89c3	                            mov ebx, eax	        90	cond.c	FUNCTION_1	CALL_7
0x4000281	      0xe800000000	                          call 0x4000286	        91	cond.c	FUNCTION_1	CALL_8
0x4000286	           0xfbefb	                           movsx edi, bl	        92	cond.c	FUNCTION_1	CALL_9
0x4000289	          0x4989c4	                            mov r12, rax	        91	cond.c	FUNCTION_1	CALL_8
0x400028c	      0xe800000000	                          call 0x4000291	        92	cond.c	FUNCTION_1	CALL_9
0x4000291	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        94	cond.c	FUNCTION_1	CALL_10
0x4000296	      0xe8d5feffff	              call sym.initialize_cframe	        94	cond.c	FUNCTION_1	CALL_10
0x400029b	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	        96	cond.c	FUNCTION_1	IF_2
0x400029f	            0x85c9	                           test ecx, ecx	        96	cond.c	FUNCTION_1	IF_2
0x40002a1	     0xf8401010000	                            je 0x40003a8	        96	cond.c	FUNCTION_1	IF_2
0x40002a7	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	        97	cond.c	FUNCTION_1	IF_2
0x40002af	    0x488b35000000	            mov rsi, qword [0x040002b6] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002b6	    0x488b15000000	            mov rdx, qword [0x040002bd] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002bd	          0x4889f0	                            mov rax, rsi	       114	cond.c	FUNCTION_1	CALL_14
0x40002c0	          0x4829d0	                            sub rax, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x40002c3	        0x4883f837	                           cmp rax, 0x37	       114	cond.c	FUNCTION_1	CALL_14
0x40002c7	     0xf8653010000	                           jbe 0x4000420	       114	cond.c	FUNCTION_1	CALL_14
0x40002cd	    0x488b05000000	            mov rax, qword [0x040002d4] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002d4	        0x4883c238	                           add rdx, 0x38	       114	cond.c	FUNCTION_1	CALL_14
0x40002d8	          0x4839c2	                            cmp rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x40002db	     0xf8467010000	                            je 0x4000448	       114	cond.c	FUNCTION_1	CALL_14
0x40002e1	    0x488b0d000000	            mov rcx, qword [0x040002e8] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002e8	          0x4889f3	                            mov rbx, rsi	       114	cond.c	FUNCTION_1	CALL_14
0x40002eb	          0x4801ca	                            add rdx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x40002ee	          0x48f7d1	                                 not rcx	       114	cond.c	FUNCTION_1	CALL_14
0x40002f1	          0x4821ca	                            and rdx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x40002f4	    0x488b0d000000	            mov rcx, qword [0x040002fb] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002fb	          0x4889d7	                            mov rdi, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x40002fe	    0x488915000000	            mov qword [0x04000305], rdx 	       114	cond.c	FUNCTION_1	CALL_14
0x4000305	          0x4829cf	                            sub rdi, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000308	          0x4829cb	                            sub rbx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x400030b	          0x4839df	                            cmp rdi, rbx	       114	cond.c	FUNCTION_1	CALL_14
0x400030e	            0x760a	                           jbe 0x400031a	       114	cond.c	FUNCTION_1	CALL_14
0x4000310	    0x488935000000	            mov qword [0x04000317], rsi 	       114	cond.c	FUNCTION_1	CALL_14
0x4000317	          0x4889f2	                            mov rdx, rsi	       114	cond.c	FUNCTION_1	CALL_14
0x400031a	    0x488915000000	            mov qword [0x04000321], rdx 	       114	cond.c	FUNCTION_1	CALL_14
0x4000321	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000326	    0x488905000000	            mov qword [0x0400032d], rax 	       113	cond.c	FUNCTION_1
0x400032d	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000330	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000335	    0xf60500000000	           test byte [0x0400033c], 0x20 	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x400033c	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000340	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000345	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000349	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x400034e	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000352	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000357	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400035b	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000360	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000364	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000369	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400036d	            0x7429	                            je 0x4000398	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x400036f	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       118	cond.c	FUNCTION_1	IF_3
0x4000373	            0x85d2	                           test edx, edx	       118	cond.c	FUNCTION_1	IF_3
0x4000375	            0x7421	                            je 0x4000398	       118	cond.c	FUNCTION_1	IF_3
0x4000377	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       119	cond.c	FUNCTION_1	IF_3
0x400037c	          0x4885c0	                           test rax, rax	       119	cond.c	FUNCTION_1	IF_3
0x400037f	            0x7407	                            je 0x4000388	       119	cond.c	FUNCTION_1	IF_3
0x4000381	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       120	cond.c	FUNCTION_1	IF_3
0x4000384	            0x85c0	                           test eax, eax	       120	cond.c	FUNCTION_1	IF_3
0x4000386	            0x7510	                           jne 0x4000398	       120	cond.c	FUNCTION_1	IF_3
0x4000388	      0xbf02000000	                              mov edi, 2	       121	cond.c	FUNCTION_1	CALL_17
0x400038d	      0xe800000000	                          call 0x4000392	       121	cond.c	FUNCTION_1	CALL_17
0x4000392	    0x660f1f440000	                    nop word [rax + rax]	       121	cond.c	FUNCTION_1	CALL_17
0x4000398	      0xe800000000	                          call 0x400039d	       123	cond.c	FUNCTION_1	CALL_18
0x400039d	      0xe9b0feffff	                           jmp 0x4000252	       123	cond.c	FUNCTION_1	CALL_18
0x40003a2	    0x660f1f440000	                    nop word [rax + rax]	       123	cond.c	FUNCTION_1	CALL_18
0x40003a8	          0x4d85e4	                           test r12, r12	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003ab	            0x744f	                            je 0x40003fc	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003ad	          0x4c89e7	                            mov rdi, r12	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003b0	      0xe800000000	                          call 0x40003b5	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003b5	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003b7	            0x7437	                            je 0x40003f0	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003b9	          0x4c89e7	                            mov rdi, r12	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003bc	      0xe800000000	                          call 0x40003c1	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003c1	    0x483905000000	            cmp qword [0x040003c8], rax 	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003c8	           0xf95c0	                                setne al	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003cb	           0xfb6c0	                           movzx eax, al	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003ce	            0x39e8	                            cmp eax, ebp	       110	cond.c	FUNCTION_1	ELSE_1
0x40003d0	           0xf94c0	                                 sete al	       110	cond.c	FUNCTION_1	ELSE_1
0x40003d3	           0xfb6c0	                           movzx eax, al	       110	cond.c	FUNCTION_1	ELSE_1
0x40003d6	        0x8944243c	             mov dword [rsp + 0x3c], eax	       110	cond.c	FUNCTION_1	ELSE_1
0x40003da	      0xe9d0feffff	                           jmp 0x40002af	       110	cond.c	FUNCTION_1	ELSE_1
0x40003df	              0x90	                                     nop	       110	cond.c	FUNCTION_1	ELSE_1
0x40003e0	        0x4883c001	                              add rax, 1	        79	cond.c	FUNCTION_1	CALL_1
0x40003e4	    0x488905000000	            mov qword [0x040003eb], rax 	        79	cond.c	FUNCTION_1	CALL_1
0x40003eb	      0xe90afeffff	                           jmp 0x40001fa	        79	cond.c	FUNCTION_1	CALL_1
0x40003f0	          0x4c89e7	                            mov rdi, r12	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003f3	      0xe800000000	                          call 0x40003f8	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003f8	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003fa	            0x75bd	                           jne 0x40003b9	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003fc	            0x31c0	                            xor eax, eax	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003fe	            0xebce	                           jmp 0x40003ce	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x4000400	      0xbe01000000	                              mov esi, 1	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000405	      0xbf00000000	                              mov edi, 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400040a	      0xe800000000	                          call 0x400040f	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400040f	    0x488b05000000	            mov rax, qword [0x04000416] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000416	      0xe924feffff	                           jmp 0x400023f	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400041b	       0xf1f440000	                   nop dword [rax + rax]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000420	      0xbe38000000	                           mov esi, 0x38	       114	cond.c	FUNCTION_1	CALL_14
0x4000425	      0xbf00000000	                              mov edi, 0	       114	cond.c	FUNCTION_1	CALL_14
0x400042a	      0xe800000000	                          call 0x400042f	       114	cond.c	FUNCTION_1	CALL_14
0x400042f	    0x488b15000000	            mov rdx, qword [0x04000436] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000436	    0x488b35000000	            mov rsi, qword [0x0400043d] 	       114	cond.c	FUNCTION_1	CALL_14
0x400043d	      0xe98bfeffff	                           jmp 0x40002cd	       114	cond.c	FUNCTION_1	CALL_14
0x4000442	    0x660f1f440000	                    nop word [rax + rax]	       114	cond.c	FUNCTION_1	CALL_14
0x4000448	    0x800d00000000	                 or byte [0x0400044f], 2	       114	cond.c	FUNCTION_1	CALL_14
0x400044f	      0xe98dfeffff	                           jmp 0x40002e1	       114	cond.c	FUNCTION_1	CALL_14
0x4000454	      0xe800000000	                          call 0x4000459	       124	cond.c	FUNCTION_1
s_ifeqs	CALL,13:ELSE,0:IF,2:functions,0:WHILE,0:SWITCH,0:FOR,0:DO,0	133
0x4001130	            0x4154	                                push r12	       460	cond.c	FUNCTION_9
0x4001132	              0x55	                                push rbp	       460	cond.c	FUNCTION_9
0x4001133	              0x53	                                push rbx	       460	cond.c	FUNCTION_9
0x4001134	            0x89fb	                            mov ebx, edi	       460	cond.c	FUNCTION_9
0x4001136	        0x4883ec50	                           sub rsp, 0x50	       460	cond.c	FUNCTION_9
0x400113a	      0x488d7c2408	                      lea rdi, [rsp + 8]	       466	cond.c	FUNCTION_9	CALL_1
0x400113f	    0x64488b042528	                mov rax, qword fs:[0x28]	       460	cond.c	FUNCTION_9
0x4001148	      0x4889442448	             mov qword [rsp + 0x48], rax	       460	cond.c	FUNCTION_9
0x400114d	            0x31c0	                            xor eax, eax	       460	cond.c	FUNCTION_9
0x400114f	      0xe800000000	                          call 0x4001154	       466	cond.c	FUNCTION_9	CALL_1
0x4001154	          0x4889c5	                            mov rbp, rax	       466	cond.c	FUNCTION_9	CALL_1
0x4001157	    0x488b05000000	            mov rax, qword [0x0400115e] 	       468	cond.c	FUNCTION_9	CALL_2
0x400115e	           0xfb610	                   movzx edx, byte [rax]	       468	cond.c	FUNCTION_9	CALL_2
0x4001161	          0x80fa20	                            cmp dl, 0x20	       468	cond.c	FUNCTION_9	CALL_2
0x4001164	     0xf8486010000	                            je 0x40012f0	       468	cond.c	FUNCTION_9	CALL_2
0x400116a	          0x80fa2c	                            cmp dl, 0x2c	       469	cond.c	FUNCTION_9	IF_1
0x400116d	            0x7441	                            je 0x40011b0	       469	cond.c	FUNCTION_9	IF_1
0x400116f	      0xba05000000	                              mov edx, 5	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001174	      0xbe00000000	                              mov esi, 0	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001179	            0x31ff	                            xor edi, edi	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x400117b	      0xe800000000	                          call 0x4001180	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001180	          0x4889c7	                            mov rdi, rax	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001183	            0x31c0	                            xor eax, eax	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001185	      0xe800000000	                          call 0x400118a	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x400118a	      0xe800000000	                          call 0x400118f	       472	cond.c	FUNCTION_9	IF_1	CALL_5
0x400118f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       495	cond.c	FUNCTION_9
0x4001194	    0x644833042528	                xor rax, qword fs:[0x28]	       495	cond.c	FUNCTION_9
0x400119d	     0xf85c1010000	                           jne 0x4001364	       495	cond.c	FUNCTION_9
0x40011a3	        0x4883c450	                           add rsp, 0x50	       495	cond.c	FUNCTION_9
0x40011a7	              0x5b	                                 pop rbx	       495	cond.c	FUNCTION_9
0x40011a8	              0x5d	                                 pop rbp	       495	cond.c	FUNCTION_9
0x40011a9	            0x415c	                                 pop r12	       495	cond.c	FUNCTION_9
0x40011ab	              0xc3	                                     ret	       495	cond.c	FUNCTION_9
0x40011ac	         0xf1f4000	                         nop dword [rax]	       495	cond.c	FUNCTION_9
0x40011b0	      0x488d7c240c	                    lea rdi, [rsp + 0xc]	       478	cond.c	FUNCTION_9	CALL_6
0x40011b5	        0x4883c001	                              add rax, 1	       476	cond.c	FUNCTION_9
0x40011b9	          0x4531e4	                          xor r12d, r12d	       480	cond.c	FUNCTION_9	CALL_7
0x40011bc	    0x488905000000	            mov qword [0x040011c3], rax 	       476	cond.c	FUNCTION_9
0x40011c3	      0xe800000000	                          call 0x40011c8	       478	cond.c	FUNCTION_9	CALL_6
0x40011c8	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	       480	cond.c	FUNCTION_9	CALL_7
0x40011cd	        0x3b54240c	              cmp edx, dword [rsp + 0xc]	       480	cond.c	FUNCTION_9	CALL_7
0x40011d1	     0xf8461010000	                            je 0x4001338	       480	cond.c	FUNCTION_9	CALL_7
0x40011d7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       482	cond.c	FUNCTION_9	CALL_8
0x40011dc	      0xe88fefffff	              call sym.initialize_cframe	       482	cond.c	FUNCTION_9	CALL_8
0x40011e1	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	       483	cond.c	FUNCTION_9
0x40011e5	    0x488b35000000	            mov rsi, qword [0x040011ec] 	       485	cond.c	FUNCTION_9	CALL_9
0x40011ec	            0x85c9	                           test ecx, ecx	       483	cond.c	FUNCTION_9
0x40011ee	           0xf95c2	                                setne dl	       483	cond.c	FUNCTION_9
0x40011f1	          0x4139dc	                           cmp r12d, ebx	       483	cond.c	FUNCTION_9
0x40011f4	           0xf94c0	                                 sete al	       483	cond.c	FUNCTION_9
0x40011f7	             0x9d0	                             or eax, edx	       483	cond.c	FUNCTION_9
0x40011f9	    0x488b15000000	            mov rdx, qword [0x04001200] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001200	           0xfb6c0	                           movzx eax, al	       483	cond.c	FUNCTION_9
0x4001203	        0x8944243c	             mov dword [rsp + 0x3c], eax	       483	cond.c	FUNCTION_9
0x4001207	          0x4889f0	                            mov rax, rsi	       485	cond.c	FUNCTION_9	CALL_9
0x400120a	          0x4829d0	                            sub rax, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x400120d	        0x4883f837	                           cmp rax, 0x37	       485	cond.c	FUNCTION_9	CALL_9
0x4001211	     0xf86f9000000	                           jbe 0x4001310	       485	cond.c	FUNCTION_9	CALL_9
0x4001217	    0x488b05000000	            mov rax, qword [0x0400121e] 	       485	cond.c	FUNCTION_9	CALL_9
0x400121e	        0x4883c238	                           add rdx, 0x38	       485	cond.c	FUNCTION_9	CALL_9
0x4001222	          0x4839c2	                            cmp rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001225	     0xf842d010000	                            je 0x4001358	       485	cond.c	FUNCTION_9	CALL_9
0x400122b	    0x488b0d000000	            mov rcx, qword [0x04001232] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001232	          0x4889f3	                            mov rbx, rsi	       485	cond.c	FUNCTION_9	CALL_9
0x4001235	          0x4801ca	                            add rdx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001238	          0x48f7d1	                                 not rcx	       485	cond.c	FUNCTION_9	CALL_9
0x400123b	          0x4821ca	                            and rdx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x400123e	    0x488b0d000000	            mov rcx, qword [0x04001245] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001245	          0x4889d7	                            mov rdi, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x4001248	    0x488915000000	            mov qword [0x0400124f], rdx 	       485	cond.c	FUNCTION_9	CALL_9
0x400124f	          0x4829cf	                            sub rdi, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001252	          0x4829cb	                            sub rbx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001255	          0x4839df	                            cmp rdi, rbx	       485	cond.c	FUNCTION_9	CALL_9
0x4001258	            0x760a	                           jbe 0x4001264	       485	cond.c	FUNCTION_9	CALL_9
0x400125a	    0x488935000000	            mov qword [0x04001261], rsi 	       485	cond.c	FUNCTION_9	CALL_9
0x4001261	          0x4889f2	                            mov rdx, rsi	       485	cond.c	FUNCTION_9	CALL_9
0x4001264	    0x488915000000	            mov qword [0x0400126b], rdx 	       485	cond.c	FUNCTION_9	CALL_9
0x400126b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4001270	    0x488905000000	            mov qword [0x04001277], rax 	       484	cond.c	FUNCTION_9
0x4001277	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400127a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x400127f	    0xf60500000000	           test byte [0x04001286], 0x20 	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x4001286	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400128a	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x400128f	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4001293	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x4001298	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400129c	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x40012a1	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40012a5	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x40012aa	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40012ae	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x40012b3	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40012b7	            0x7427	                            je 0x40012e0	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x40012b9	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       489	cond.c	FUNCTION_9	IF_2
0x40012bd	            0x85d2	                           test edx, edx	       489	cond.c	FUNCTION_9	IF_2
0x40012bf	            0x741f	                            je 0x40012e0	       489	cond.c	FUNCTION_9	IF_2
0x40012c1	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       490	cond.c	FUNCTION_9	IF_2
0x40012c6	          0x4885c0	                           test rax, rax	       490	cond.c	FUNCTION_9	IF_2
0x40012c9	            0x7407	                            je 0x40012d2	       490	cond.c	FUNCTION_9	IF_2
0x40012cb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       491	cond.c	FUNCTION_9	IF_2
0x40012ce	            0x85c0	                           test eax, eax	       491	cond.c	FUNCTION_9	IF_2
0x40012d0	            0x750e	                           jne 0x40012e0	       491	cond.c	FUNCTION_9	IF_2
0x40012d2	      0xbf02000000	                              mov edi, 2	       492	cond.c	FUNCTION_9	CALL_12
0x40012d7	      0xe800000000	                          call 0x40012dc	       492	cond.c	FUNCTION_9	CALL_12
0x40012dc	         0xf1f4000	                         nop dword [rax]	       492	cond.c	FUNCTION_9	CALL_12
0x40012e0	      0xe800000000	                          call 0x40012e5	       494	cond.c	FUNCTION_9	CALL_13
0x40012e5	      0xe9a5feffff	                           jmp 0x400118f	       494	cond.c	FUNCTION_9	CALL_13
0x40012ea	    0x660f1f440000	                    nop word [rax + rax]	       494	cond.c	FUNCTION_9	CALL_13
0x40012f0	        0x488d4801	                      lea rcx, [rax + 1]	       468	cond.c	FUNCTION_9	CALL_2
0x40012f4	    0x48890d000000	            mov qword [0x040012fb], rcx 	       468	cond.c	FUNCTION_9	CALL_2
0x40012fb	         0xfb65001	               movzx edx, byte [rax + 1]	       468	cond.c	FUNCTION_9	CALL_2
0x40012ff	          0x4889c8	                            mov rax, rcx	       468	cond.c	FUNCTION_9	CALL_2
0x4001302	      0xe963feffff	                           jmp 0x400116a	       468	cond.c	FUNCTION_9	CALL_2
0x4001307	    0x660f1f840000	                    nop word [rax + rax]	       468	cond.c	FUNCTION_9	CALL_2
0x4001310	      0xbe38000000	                           mov esi, 0x38	       485	cond.c	FUNCTION_9	CALL_9
0x4001315	      0xbf00000000	                              mov edi, 0	       485	cond.c	FUNCTION_9	CALL_9
0x400131a	      0xe800000000	                          call 0x400131f	       485	cond.c	FUNCTION_9	CALL_9
0x400131f	    0x488b15000000	            mov rdx, qword [0x04001326] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001326	    0x488b35000000	            mov rsi, qword [0x0400132d] 	       485	cond.c	FUNCTION_9	CALL_9
0x400132d	      0xe9e5feffff	                           jmp 0x4001217	       485	cond.c	FUNCTION_9	CALL_9
0x4001332	    0x660f1f440000	                    nop word [rax + rax]	       485	cond.c	FUNCTION_9	CALL_9
0x4001338	          0x4889c6	                            mov rsi, rax	       480	cond.c	FUNCTION_9	CALL_7
0x400133b	          0x4889ef	                            mov rdi, rbp	       480	cond.c	FUNCTION_9	CALL_7
0x400133e	          0x4531e4	                          xor r12d, r12d	       480	cond.c	FUNCTION_9	CALL_7
0x4001341	      0xe800000000	                          call 0x4001346	       480	cond.c	FUNCTION_9	CALL_7
0x4001346	            0x85c0	                           test eax, eax	       480	cond.c	FUNCTION_9	CALL_7
0x4001348	        0x410f94c4	                               sete r12b	       480	cond.c	FUNCTION_9	CALL_7
0x400134c	      0xe986feffff	                           jmp 0x40011d7	       480	cond.c	FUNCTION_9	CALL_7
0x4001351	     0xf1f80000000	                         nop dword [rax]	       480	cond.c	FUNCTION_9	CALL_7
0x4001358	    0x800d00000000	                 or byte [0x0400135f], 2	       485	cond.c	FUNCTION_9	CALL_9
0x400135f	      0xe9c7feffff	                           jmp 0x400122b	       485	cond.c	FUNCTION_9	CALL_9
0x4001364	      0xe800000000	                          call 0x4001369	       495	cond.c	FUNCTION_9
s_ifb	CALL,7:ELSE,1:IF,2:functions,0:WHILE,0:SWITCH,0:FOR,0:DO,0	101
0x40007a0	              0x53	                                push rbx	       192	cond.c	FUNCTION_3
0x40007a1	            0x89fb	                            mov ebx, edi	       192	cond.c	FUNCTION_3
0x40007a3	        0x4883ec40	                           sub rsp, 0x40	       192	cond.c	FUNCTION_3
0x40007a7	          0x4889e7	                            mov rdi, rsp	       195	cond.c	FUNCTION_3	CALL_1
0x40007aa	    0x64488b042528	                mov rax, qword fs:[0x28]	       192	cond.c	FUNCTION_3
0x40007b3	      0x4889442438	             mov qword [rsp + 0x38], rax	       192	cond.c	FUNCTION_3
0x40007b8	            0x31c0	                            xor eax, eax	       192	cond.c	FUNCTION_3
0x40007ba	      0xe8b1f9ffff	              call sym.initialize_cframe	       195	cond.c	FUNCTION_3	CALL_1
0x40007bf	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	       197	cond.c	FUNCTION_3	IF_1
0x40007c3	            0x85c9	                           test ecx, ecx	       197	cond.c	FUNCTION_3	IF_1
0x40007c5	     0xf840d010000	                            je 0x40008d8	       197	cond.c	FUNCTION_3	IF_1
0x40007cb	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	       198	cond.c	FUNCTION_3	IF_1
0x40007d3	    0x488b35000000	            mov rsi, qword [0x040007da] 	       209	cond.c	FUNCTION_3	CALL_3
0x40007da	    0x488b15000000	            mov rdx, qword [0x040007e1] 	       209	cond.c	FUNCTION_3	CALL_3
0x40007e1	          0x4889f0	                            mov rax, rsi	       209	cond.c	FUNCTION_3	CALL_3
0x40007e4	          0x4829d0	                            sub rax, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x40007e7	        0x4883f837	                           cmp rax, 0x37	       209	cond.c	FUNCTION_3	CALL_3
0x40007eb	     0xf8617010000	                           jbe 0x4000908	       209	cond.c	FUNCTION_3	CALL_3
0x40007f1	    0x488b05000000	            mov rax, qword [0x040007f8] 	       209	cond.c	FUNCTION_3	CALL_3
0x40007f8	        0x4883c238	                           add rdx, 0x38	       209	cond.c	FUNCTION_3	CALL_3
0x40007fc	          0x4839c2	                            cmp rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40007ff	     0xf8443010000	                            je 0x4000948	       209	cond.c	FUNCTION_3	CALL_3
0x4000805	    0x488b0d000000	            mov rcx, qword [0x0400080c] 	       209	cond.c	FUNCTION_3	CALL_3
0x400080c	          0x4889f3	                            mov rbx, rsi	       209	cond.c	FUNCTION_3	CALL_3
0x400080f	          0x4801ca	                            add rdx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x4000812	          0x48f7d1	                                 not rcx	       209	cond.c	FUNCTION_3	CALL_3
0x4000815	          0x4821ca	                            and rdx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x4000818	    0x488b0d000000	            mov rcx, qword [0x0400081f] 	       209	cond.c	FUNCTION_3	CALL_3
0x400081f	          0x4889d7	                            mov rdi, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x4000822	    0x488915000000	            mov qword [0x04000829], rdx 	       209	cond.c	FUNCTION_3	CALL_3
0x4000829	          0x4829cf	                            sub rdi, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x400082c	          0x4829cb	                            sub rbx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x400082f	          0x4839df	                            cmp rdi, rbx	       209	cond.c	FUNCTION_3	CALL_3
0x4000832	            0x760a	                           jbe 0x400083e	       209	cond.c	FUNCTION_3	CALL_3
0x4000834	    0x488935000000	            mov qword [0x0400083b], rsi 	       209	cond.c	FUNCTION_3	CALL_3
0x400083b	          0x4889f2	                            mov rdx, rsi	       209	cond.c	FUNCTION_3	CALL_3
0x400083e	    0x488915000000	            mov qword [0x04000845], rdx 	       209	cond.c	FUNCTION_3	CALL_3
0x4000845	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_14	CALL_3
0x4000849	    0x488905000000	            mov qword [0x04000850], rax 	       208	cond.c	FUNCTION_3
0x4000850	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000853	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_14	CALL_3
0x4000858	    0xf60500000000	           test byte [0x0400085f], 0x20 	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x400085f	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000863	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000868	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400086c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000871	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000875	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x400087a	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400087e	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000883	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000887	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x400088c	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000890	            0x7423	                            je 0x40008b5	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x4000892	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	       213	cond.c	FUNCTION_3	IF_2
0x4000896	            0x85d2	                           test edx, edx	       213	cond.c	FUNCTION_3	IF_2
0x4000898	            0x741b	                            je 0x40008b5	       213	cond.c	FUNCTION_3	IF_2
0x400089a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       214	cond.c	FUNCTION_3	IF_2
0x400089f	          0x4885c0	                           test rax, rax	       214	cond.c	FUNCTION_3	IF_2
0x40008a2	            0x7407	                            je 0x40008ab	       214	cond.c	FUNCTION_3	IF_2
0x40008a4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       215	cond.c	FUNCTION_3	IF_2
0x40008a7	            0x85c0	                           test eax, eax	       215	cond.c	FUNCTION_3	IF_2
0x40008a9	            0x750a	                           jne 0x40008b5	       215	cond.c	FUNCTION_3	IF_2
0x40008ab	      0xbf02000000	                              mov edi, 2	       216	cond.c	FUNCTION_3	CALL_6
0x40008b0	      0xe800000000	                          call 0x40008b5	       216	cond.c	FUNCTION_3	CALL_6
0x40008b5	      0xe800000000	                          call 0x40008ba	       218	cond.c	FUNCTION_3	CALL_7
0x40008ba	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       219	cond.c	FUNCTION_3
0x40008bf	    0x644833042528	                xor rax, qword fs:[0x28]	       219	cond.c	FUNCTION_3
0x40008c8	     0xf8586000000	                           jne 0x4000954	       219	cond.c	FUNCTION_3
0x40008ce	        0x4883c440	                           add rsp, 0x40	       219	cond.c	FUNCTION_3
0x40008d2	              0x5b	                                 pop rbx	       219	cond.c	FUNCTION_3
0x40008d3	              0xc3	                                     ret	       219	cond.c	FUNCTION_3
0x40008d4	         0xf1f4000	                         nop dword [rax]	       219	cond.c	FUNCTION_3
0x40008d8	    0x488b15000000	            mov rdx, qword [0x040008df] 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40008df	           0xfb602	                   movzx eax, byte [rdx]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40008e2	            0x3c20	                            cmp al, 0x20	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40008e4	            0x744a	                            je 0x4000930	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40008e6	    0x80b800000000	                       cmp byte [rax], 0	       205	cond.c	FUNCTION_3	ELSE_1
0x40008ed	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x40008f0	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x40008f3	            0x39d8	                            cmp eax, ebx	       205	cond.c	FUNCTION_3	ELSE_1
0x40008f5	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x40008f8	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x40008fb	        0x8944242c	             mov dword [rsp + 0x2c], eax	       205	cond.c	FUNCTION_3	ELSE_1
0x40008ff	      0xe9cffeffff	                           jmp 0x40007d3	       205	cond.c	FUNCTION_3	ELSE_1
0x4000904	         0xf1f4000	                         nop dword [rax]	       205	cond.c	FUNCTION_3	ELSE_1
0x4000908	      0xbe38000000	                           mov esi, 0x38	       209	cond.c	FUNCTION_3	CALL_3
0x400090d	      0xbf00000000	                              mov edi, 0	       209	cond.c	FUNCTION_3	CALL_3
0x4000912	      0xe800000000	                          call 0x4000917	       209	cond.c	FUNCTION_3	CALL_3
0x4000917	    0x488b15000000	            mov rdx, qword [0x0400091e] 	       209	cond.c	FUNCTION_3	CALL_3
0x400091e	    0x488b35000000	            mov rsi, qword [0x04000925] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000925	      0xe9c7feffff	                           jmp 0x40007f1	       209	cond.c	FUNCTION_3	CALL_3
0x400092a	    0x660f1f440000	                    nop word [rax + rax]	       209	cond.c	FUNCTION_3	CALL_3
0x4000930	        0x488d4201	                      lea rax, [rdx + 1]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000934	    0x488905000000	            mov qword [0x0400093b], rax 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x400093b	         0xfb64201	               movzx eax, byte [rdx + 1]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x400093f	            0xeba5	                           jmp 0x40008e6	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000941	     0xf1f80000000	                         nop dword [rax]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000948	    0x800d00000000	                 or byte [0x0400094f], 2	       209	cond.c	FUNCTION_3	CALL_3
0x400094f	      0xe9b1feffff	                           jmp 0x4000805	       209	cond.c	FUNCTION_3	CALL_3
0x4000954	      0xe800000000	                          call 0x4000959	       219	cond.c	FUNCTION_3
s_ifc	CALL,13:ELSE,1:IF,4:functions,0:WHILE,0:SWITCH,0:FOR,0:DO,0	144
0x4000960	            0x4155	                                push r13	       265	cond.c	FUNCTION_5
0x4000962	            0x4154	                                push r12	       265	cond.c	FUNCTION_5
0x4000964	              0x55	                                push rbp	       265	cond.c	FUNCTION_5
0x4000965	              0x53	                                push rbx	       265	cond.c	FUNCTION_5
0x4000966	            0x89fd	                            mov ebp, edi	       265	cond.c	FUNCTION_5
0x4000968	            0x31db	                            xor ebx, ebx	       265	cond.c	FUNCTION_5
0x400096a	        0x4883ec58	                           sub rsp, 0x58	       265	cond.c	FUNCTION_5
0x400096e	    0x8b3d00000000	            mov edi, dword [0x04000974] 	       273	cond.c	FUNCTION_5	IF_1
0x4000974	    0x64488b042528	                mov rax, qword fs:[0x28]	       265	cond.c	FUNCTION_5
0x400097d	      0x4889442448	             mov qword [rsp + 0x48], rax	       265	cond.c	FUNCTION_5
0x4000982	            0x31c0	                            xor eax, eax	       265	cond.c	FUNCTION_5
0x4000984	      0xc644240700	                   mov byte [rsp + 7], 0	       267	cond.c	FUNCTION_5
0x4000989	            0x85ff	                           test edi, edi	       273	cond.c	FUNCTION_5	IF_1
0x400098b	     0xf85bf010000	                           jne 0x4000b50	       273	cond.c	FUNCTION_5	IF_1
0x4000991	      0x488d742408	                      lea rsi, [rsp + 8]	       276	cond.c	FUNCTION_5	CALL_2
0x4000996	      0xbf2c000000	                           mov edi, 0x2c	       276	cond.c	FUNCTION_5	CALL_2
0x400099b	      0xe8a0f6ffff	                 call sym.get_mri_string	       276	cond.c	FUNCTION_5	CALL_2
0x40009a0	          0x4989c4	                            mov r12, rax	       276	cond.c	FUNCTION_5	CALL_2
0x40009a3	    0x488b05000000	            mov rax, qword [0x040009aa] 	       278	cond.c	FUNCTION_5	IF_2
0x40009aa	          0x80382c	                    cmp byte [rax], 0x2c	       278	cond.c	FUNCTION_5	IF_2
0x40009ad	     0xf8485010000	                            je 0x4000b38	       278	cond.c	FUNCTION_5	IF_2
0x40009b3	            0x31ff	                            xor edi, edi	       279	cond.c	FUNCTION_5	CALL_4
0x40009b5	      0xba05000000	                              mov edx, 5	       279	cond.c	FUNCTION_5	CALL_4
0x40009ba	      0xbe00000000	                              mov esi, 0	       279	cond.c	FUNCTION_5	CALL_4
0x40009bf	      0xe800000000	                          call 0x40009c4	       279	cond.c	FUNCTION_5	CALL_4
0x40009c4	          0x4889c7	                            mov rdi, rax	       279	cond.c	FUNCTION_5	CALL_4
0x40009c7	            0x31c0	                            xor eax, eax	       279	cond.c	FUNCTION_5	CALL_4
0x40009c9	      0xe800000000	                          call 0x40009ce	       279	cond.c	FUNCTION_5	CALL_4
0x40009ce	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       283	cond.c	FUNCTION_5	CALL_5
0x40009d3	      0xbf3b000000	                           mov edi, 0x3b	       283	cond.c	FUNCTION_5	CALL_5
0x40009d8	          0x4531ed	                          xor r13d, r13d	       285	cond.c	FUNCTION_5	CALL_6
0x40009db	      0xe860f6ffff	                 call sym.get_mri_string	       283	cond.c	FUNCTION_5	CALL_5
0x40009e0	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	       285	cond.c	FUNCTION_5	CALL_6
0x40009e5	        0x3b54240c	              cmp edx, dword [rsp + 0xc]	       285	cond.c	FUNCTION_5	CALL_6
0x40009e9	     0xf84a1010000	                            je 0x4000b90	       285	cond.c	FUNCTION_5	CALL_6
0x40009ef	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       287	cond.c	FUNCTION_5	CALL_7
0x40009f4	      0xe877f7ffff	              call sym.initialize_cframe	       287	cond.c	FUNCTION_5	CALL_7
0x40009f9	        0x8b742440	            mov esi, dword [rsp + 0x40] 	       288	cond.c	FUNCTION_5
0x40009fd	            0x85f6	                           test esi, esi	       288	cond.c	FUNCTION_5
0x40009ff	    0x488b35000000	            mov rsi, qword [0x04000a06] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a06	           0xf95c2	                                setne dl	       288	cond.c	FUNCTION_5
0x4000a09	          0x4139ed	                           cmp r13d, ebp	       288	cond.c	FUNCTION_5
0x4000a0c	           0xf94c0	                                 sete al	       288	cond.c	FUNCTION_5
0x4000a0f	             0x9d0	                             or eax, edx	       288	cond.c	FUNCTION_5
0x4000a11	    0x488b15000000	            mov rdx, qword [0x04000a18] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a18	           0xfb6c0	                           movzx eax, al	       288	cond.c	FUNCTION_5
0x4000a1b	        0x8944243c	             mov dword [rsp + 0x3c], eax	       288	cond.c	FUNCTION_5
0x4000a1f	          0x4889f0	                            mov rax, rsi	       290	cond.c	FUNCTION_5	CALL_8
0x4000a22	          0x4829d0	                            sub rax, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000a25	        0x4883f837	                           cmp rax, 0x37	       290	cond.c	FUNCTION_5	CALL_8
0x4000a29	     0xf8639010000	                           jbe 0x4000b68	       290	cond.c	FUNCTION_5	CALL_8
0x4000a2f	    0x488b05000000	            mov rax, qword [0x04000a36] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a36	        0x4883c238	                           add rdx, 0x38	       290	cond.c	FUNCTION_5	CALL_8
0x4000a3a	          0x4839c2	                            cmp rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000a3d	     0xf846d010000	                            je 0x4000bb0	       290	cond.c	FUNCTION_5	CALL_8
0x4000a43	    0x488b0d000000	            mov rcx, qword [0x04000a4a] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a4a	          0x4989f0	                             mov r8, rsi	       290	cond.c	FUNCTION_5	CALL_8
0x4000a4d	          0x4801ca	                            add rdx, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000a50	          0x48f7d1	                                 not rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000a53	          0x4821ca	                            and rdx, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000a56	    0x488b0d000000	            mov rcx, qword [0x04000a5d] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a5d	          0x4889d7	                            mov rdi, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000a60	    0x488915000000	            mov qword [0x04000a67], rdx 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a67	          0x4829cf	                            sub rdi, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000a6a	          0x4929c8	                             sub r8, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000a6d	          0x4c39c7	                             cmp rdi, r8	       290	cond.c	FUNCTION_5	CALL_8
0x4000a70	            0x760a	                           jbe 0x4000a7c	       290	cond.c	FUNCTION_5	CALL_8
0x4000a72	    0x488935000000	            mov qword [0x04000a79], rsi 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a79	          0x4889f2	                            mov rdx, rsi	       290	cond.c	FUNCTION_5	CALL_8
0x4000a7c	    0x488915000000	            mov qword [0x04000a83], rdx 	       290	cond.c	FUNCTION_5	CALL_8
0x4000a83	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000a88	    0x488905000000	            mov qword [0x04000a8f], rax 	       289	cond.c	FUNCTION_5
0x4000a8f	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000a92	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000a97	    0xf60500000000	           test byte [0x04000a9e], 0x20 	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000a9e	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000aa2	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000aa7	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000aab	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000ab0	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000ab4	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000ab9	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000abd	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000ac2	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000ac6	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000acb	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000acf	            0x7408	                            je 0x4000ad9	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000ad1	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       294	cond.c	FUNCTION_5	IF_3
0x4000ad5	            0x85c9	                           test ecx, ecx	       294	cond.c	FUNCTION_5	IF_3
0x4000ad7	            0x753f	                           jne 0x4000b18	       294	cond.c	FUNCTION_5	IF_3
0x4000ad9	    0x8b0500000000	            mov eax, dword [0x04000adf] 	       299	cond.c	FUNCTION_5	IF_4
0x4000adf	            0x85c0	                           test eax, eax	       299	cond.c	FUNCTION_5	IF_4
0x4000ae1	            0x740d	                            je 0x4000af0	       299	cond.c	FUNCTION_5	IF_4
0x4000ae3	       0xfbe742407	               movsx esi, byte [rsp + 7]	       300	cond.c	FUNCTION_5	CALL_12
0x4000ae8	          0x4889df	                            mov rdi, rbx	       300	cond.c	FUNCTION_5	CALL_12
0x4000aeb	      0xe800000000	                          call 0x4000af0	       300	cond.c	FUNCTION_5	CALL_12
0x4000af0	      0xe800000000	                          call 0x4000af5	       302	cond.c	FUNCTION_5	CALL_13
0x4000af5	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       303	cond.c	FUNCTION_5
0x4000afa	    0x644833042528	                xor rax, qword fs:[0x28]	       303	cond.c	FUNCTION_5
0x4000b03	     0xf85b3000000	                           jne 0x4000bbc	       303	cond.c	FUNCTION_5
0x4000b09	        0x4883c458	                           add rsp, 0x58	       303	cond.c	FUNCTION_5
0x4000b0d	              0x5b	                                 pop rbx	       303	cond.c	FUNCTION_5
0x4000b0e	              0x5d	                                 pop rbp	       303	cond.c	FUNCTION_5
0x4000b0f	            0x415c	                                 pop r12	       303	cond.c	FUNCTION_5
0x4000b11	            0x415d	                                 pop r13	       303	cond.c	FUNCTION_5
0x4000b13	              0xc3	                                     ret	       303	cond.c	FUNCTION_5
0x4000b14	         0xf1f4000	                         nop dword [rax]	       303	cond.c	FUNCTION_5
0x4000b18	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       295	cond.c	FUNCTION_5	IF_3
0x4000b1d	          0x4885c0	                           test rax, rax	       295	cond.c	FUNCTION_5	IF_3
0x4000b20	            0x7407	                            je 0x4000b29	       295	cond.c	FUNCTION_5	IF_3
0x4000b22	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       296	cond.c	FUNCTION_5	IF_3
0x4000b25	            0x85d2	                           test edx, edx	       296	cond.c	FUNCTION_5	IF_3
0x4000b27	            0x75b0	                           jne 0x4000ad9	       296	cond.c	FUNCTION_5	IF_3
0x4000b29	      0xbf02000000	                              mov edi, 2	       297	cond.c	FUNCTION_5	CALL_11
0x4000b2e	      0xe800000000	                          call 0x4000b33	       297	cond.c	FUNCTION_5	CALL_11
0x4000b33	            0xeba4	                           jmp 0x4000ad9	       297	cond.c	FUNCTION_5	CALL_11
0x4000b35	           0xf1f00	                         nop dword [rax]	       297	cond.c	FUNCTION_5	CALL_11
0x4000b38	        0x4883c001	                              add rax, 1	       281	cond.c	FUNCTION_5	ELSE_1
0x4000b3c	    0x488905000000	            mov qword [0x04000b43], rax 	       281	cond.c	FUNCTION_5	ELSE_1
0x4000b43	      0xe986feffff	                           jmp 0x40009ce	       281	cond.c	FUNCTION_5	ELSE_1
0x4000b48	     0xf1f84000000	                   nop dword [rax + rax]	       281	cond.c	FUNCTION_5	ELSE_1
0x4000b50	      0x488d7c2407	                      lea rdi, [rsp + 7]	       274	cond.c	FUNCTION_5	CALL_1
0x4000b55	      0xe800000000	                          call 0x4000b5a	       274	cond.c	FUNCTION_5	CALL_1
0x4000b5a	          0x4889c3	                            mov rbx, rax	       274	cond.c	FUNCTION_5	CALL_1
0x4000b5d	      0xe92ffeffff	                           jmp 0x4000991	       274	cond.c	FUNCTION_5	CALL_1
0x4000b62	    0x660f1f440000	                    nop word [rax + rax]	       274	cond.c	FUNCTION_5	CALL_1
0x4000b68	      0xbe38000000	                           mov esi, 0x38	       290	cond.c	FUNCTION_5	CALL_8
0x4000b6d	      0xbf00000000	                              mov edi, 0	       290	cond.c	FUNCTION_5	CALL_8
0x4000b72	      0xe800000000	                          call 0x4000b77	       290	cond.c	FUNCTION_5	CALL_8
0x4000b77	    0x488b15000000	            mov rdx, qword [0x04000b7e] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b7e	    0x488b35000000	            mov rsi, qword [0x04000b85] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b85	      0xe9a5feffff	                           jmp 0x4000a2f	       290	cond.c	FUNCTION_5	CALL_8
0x4000b8a	    0x660f1f440000	                    nop word [rax + rax]	       290	cond.c	FUNCTION_5	CALL_8
0x4000b90	          0x4889c6	                            mov rsi, rax	       285	cond.c	FUNCTION_5	CALL_6
0x4000b93	          0x4c89e7	                            mov rdi, r12	       285	cond.c	FUNCTION_5	CALL_6
0x4000b96	          0x4531ed	                          xor r13d, r13d	       285	cond.c	FUNCTION_5	CALL_6
0x4000b99	      0xe800000000	                          call 0x4000b9e	       285	cond.c	FUNCTION_5	CALL_6
0x4000b9e	            0x85c0	                           test eax, eax	       285	cond.c	FUNCTION_5	CALL_6
0x4000ba0	        0x410f94c5	                               sete r13b	       285	cond.c	FUNCTION_5	CALL_6
0x4000ba4	      0xe946feffff	                           jmp 0x40009ef	       285	cond.c	FUNCTION_5	CALL_6
0x4000ba9	     0xf1f80000000	                         nop dword [rax]	       285	cond.c	FUNCTION_5	CALL_6
0x4000bb0	    0x800d00000000	                 or byte [0x04000bb7], 2	       290	cond.c	FUNCTION_5	CALL_8
0x4000bb7	      0xe987feffff	                           jmp 0x4000a43	       290	cond.c	FUNCTION_5	CALL_8
0x4000bbc	      0xe800000000	                          call 0x4000bc1	       303	cond.c	FUNCTION_5
cond_finish_check	CALL,8:ELSE,1:IF,3:functions,0:WHILE,0:SWITCH,0:FOR,0:DO,0	45
0x4001450	    0x488b05000000	            mov rax, qword [0x04001457] 	       550	cond.c	FUNCTION_12	IF_1
0x4001457	          0x4885c0	                           test rax, rax	       550	cond.c	FUNCTION_12	IF_1
0x400145a	            0x745c	                            je 0x40014b8	       550	cond.c	FUNCTION_12	IF_1
0x400145c	          0x397834	            cmp dword [rax + 0x34], edi 	       550	cond.c	FUNCTION_12	IF_1
0x400145f	            0x7c57	                            jl 0x40014b8	       550	cond.c	FUNCTION_12	IF_1
0x4001461	            0x85ff	                           test edi, edi	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x4001463	              0x53	                                push rbx	       549	cond.c	FUNCTION_12
0x4001464	      0xba05000000	                              mov edx, 5	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001469	      0xbe00000000	                              mov esi, 0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x400146e	            0x7878	                            js 0x40014e8	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x4001470	            0x31ff	                            xor edi, edi	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x4001472	      0xe800000000	                          call 0x4001477	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x4001477	          0x4889c7	                            mov rdi, rax	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x400147a	            0x31c0	                            xor eax, eax	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x400147c	      0xe800000000	                          call 0x4001481	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x4001481	            0x31ff	                            xor edi, edi	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x4001483	      0xba05000000	                              mov edx, 5	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x4001488	      0xbe00000000	                              mov esi, 0	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x400148d	      0xe800000000	                          call 0x4001492	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x4001492	    0x488b0d000000	            mov rcx, qword [0x04001499] 	       558	cond.c	FUNCTION_12	IF_1
0x4001499	          0x4889c2	                            mov rdx, rax	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x400149c	            0x31c0	                            xor eax, eax	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x400149e	          0x8b7108	                mov esi, dword [rcx + 8]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40014a1	          0x488b39	                    mov rdi, qword [rcx]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40014a4	      0xe800000000	                          call 0x40014a9	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40014a9	    0x488b1d000000	            mov rbx, qword [0x040014b0] 	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40014b0	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40014b3	            0x85c0	                           test eax, eax	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40014b5	            0x7509	                           jne 0x40014c0	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40014b7	              0x5b	                                 pop rbx	       565	cond.c	FUNCTION_12
0x40014b8	            0xf3c3	                                     ret	       565	cond.c	FUNCTION_12
0x40014ba	    0x660f1f440000	                    nop word [rax + rax]	       565	cond.c	FUNCTION_12
0x40014c0	      0xba05000000	                              mov edx, 5	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40014c5	      0xbe00000000	                              mov esi, 0	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40014ca	            0x31ff	                            xor edi, edi	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40014cc	      0xe800000000	                          call 0x40014d1	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40014d1	          0x8b7318	            mov esi, dword [rbx + 0x18] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40014d4	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40014d8	          0x4889c2	                            mov rdx, rax	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40014db	              0x5b	                                 pop rbx	       565	cond.c	FUNCTION_12
0x40014dc	            0x31c0	                            xor eax, eax	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40014de	      0xe900000000	                           jmp 0x40014e3	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40014e3	       0xf1f440000	                   nop dword [rax + rax]	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40014e8	      0xbe00000000	                              mov esi, 0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40014ed	            0xeb81	                           jmp 0x4001470	       555	cond.c	FUNCTION_12	IF_1	CALL_4
cond_exit_macro	CALL,1:ELSE,0:IF,0:functions,0:WHILE,1:SWITCH,0:FOR,0:DO,0	26
0x40014f0	    0x488b35000000	            mov rsi, qword [0x040014f7] 	       573	cond.c	FUNCTION_13
0x40014f7	              0x53	                                push rbx	       573	cond.c	FUNCTION_13
0x40014f8	            0x89fb	                            mov ebx, edi	       573	cond.c	FUNCTION_13
0x40014fa	    0x660f1f440000	                    nop word [rax + rax]	       573	cond.c	FUNCTION_13
0x4001500	          0x4885f6	                           test rsi, rsi	       574	cond.c	FUNCTION_13	WHILE_1
0x4001503	            0x7438	                            je 0x400153d	       574	cond.c	FUNCTION_13	WHILE_1
0x4001505	          0x395e34	            cmp dword [rsi + 0x34], ebx 	       574	cond.c	FUNCTION_13	WHILE_1
0x4001508	            0x7c33	                            jl 0x400153d	       574	cond.c	FUNCTION_13	WHILE_1
0x400150a	    0x483935000000	            cmp qword [0x04001511], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001511	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       579	cond.c	FUNCTION_13	WHILE_1
0x4001515	    0x488905000000	            mov qword [0x0400151c], rax 	       579	cond.c	FUNCTION_13	WHILE_1
0x400151c	            0x7322	                           jae 0x4001540	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400151e	    0x483935000000	            cmp qword [0x04001525], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001525	            0x7619	                           jbe 0x4001540	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001527	    0x488935000000	            mov qword [0x0400152e], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400152e	    0x488935000000	            mov qword [0x04001535], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001535	          0x4889c6	                            mov rsi, rax	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001538	          0x4885f6	                           test rsi, rsi	       574	cond.c	FUNCTION_13	WHILE_1
0x400153b	            0x75c8	                           jne 0x4001505	       574	cond.c	FUNCTION_13	WHILE_1
0x400153d	              0x5b	                                 pop rbx	       582	cond.c	FUNCTION_13
0x400153e	              0xc3	                                     ret	       582	cond.c	FUNCTION_13
0x400153f	              0x90	                                     nop	       582	cond.c	FUNCTION_13
0x4001540	      0xbf00000000	                              mov edi, 0	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001545	      0xe800000000	                          call 0x400154a	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400154a	    0x488b35000000	            mov rsi, qword [0x04001551] 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001551	            0xebad	                           jmp 0x4001500	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
s_elseif	CALL,18:ELSE,4:IF,7:functions,0:WHILE,1:SWITCH,1:FOR,0:DO,0	180
0x4000bd0	              0x55	                                push rbp	       307	cond.c	FUNCTION_6
0x4000bd1	              0x53	                                push rbx	       307	cond.c	FUNCTION_6
0x4000bd2	            0x89fd	                            mov ebp, edi	       307	cond.c	FUNCTION_6
0x4000bd4	        0x4883ec38	                           sub rsp, 0x38	       307	cond.c	FUNCTION_6
0x4000bd8	    0x488b1d000000	            mov rbx, qword [0x04000bdf] 	       308	cond.c	FUNCTION_6	IF_1
0x4000bdf	    0x64488b042528	                mov rax, qword fs:[0x28]	       307	cond.c	FUNCTION_6
0x4000be8	      0x4889442428	             mov qword [rsp + 0x28], rax	       307	cond.c	FUNCTION_6
0x4000bed	            0x31c0	                            xor eax, eax	       307	cond.c	FUNCTION_6
0x4000bef	          0x4885db	                           test rbx, rbx	       308	cond.c	FUNCTION_6	IF_1
0x4000bf2	     0xf8478020000	                            je 0x4000e70	       308	cond.c	FUNCTION_6	IF_1
0x4000bf8	        0x448b4b28	            mov r9d, dword [rbx + 0x28] 	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000bfc	          0x4585c9	                           test r9d, r9d	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000bff	     0xf85ab000000	                           jne 0x4000cb0	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000c05	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000c09	      0xe800000000	                          call 0x4000c0e	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000c0e	    0x488b0d000000	            mov rcx, qword [0x04000c15] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000c15	        0x48894310	             mov qword [rbx + 0x10], rax	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000c19	            0x31c0	                            xor eax, eax	       327	cond.c	FUNCTION_6	ELSE_2
0x4000c1b	        0x448b412c	            mov r8d, dword [rcx + 0x2c] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000c1f	          0x4585c0	                           test r8d, r8d	       327	cond.c	FUNCTION_6	ELSE_2
0x4000c22	           0xf94c0	                                 sete al	       327	cond.c	FUNCTION_6	ELSE_2
0x4000c25	           0xb4130	              or eax, dword [rcx + 0x30]	       327	cond.c	FUNCTION_6	ELSE_2
0x4000c28	          0x894130	             mov dword [rcx + 0x30], eax	       327	cond.c	FUNCTION_6	ELSE_2
0x4000c2b	          0x89412c	             mov dword [rcx + 0x2c], eax	       328	cond.c	FUNCTION_6	ELSE_2
0x4000c2e	          0x8b792c	            mov edi, dword [rcx + 0x2c] 	       331	cond.c	FUNCTION_6	IF_3
0x4000c31	            0x85ff	                           test edi, edi	       331	cond.c	FUNCTION_6	IF_3
0x4000c33	     0xf8437010000	                            je 0x4000d70	       331	cond.c	FUNCTION_6	IF_3
0x4000c39	    0x488b05000000	            mov rax, qword [0x04000c40] 	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c40	           0xfb610	                   movzx edx, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c43	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c4a	            0x7523	                           jne 0x4000c6f	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c4c	        0x4883c001	                              add rax, 1	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c50	          0x4889c2	                            mov rdx, rax	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c53	    0x488905000000	            mov qword [0x04000c5a], rax 	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c5a	        0x4883c001	                              add rax, 1	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c5e	           0xfb612	                   movzx edx, byte [rdx]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c61	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c68	            0x74e6	                            je 0x4000c50	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000c6a	          0x4885c9	                           test rcx, rcx	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000c6d	            0x7426	                            je 0x4000c95	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000c6f	    0xf60500000000	           test byte [0x04000c76], 0x20 	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4000c76	            0x7418	                            je 0x4000c90	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4000c78	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       368	cond.c	FUNCTION_6	IF_6
0x4000c7c	          0x4885c0	                           test rax, rax	       368	cond.c	FUNCTION_6	IF_6
0x4000c7f	     0xf84cb000000	                            je 0x4000d50	       368	cond.c	FUNCTION_6	IF_6
0x4000c85	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       369	cond.c	FUNCTION_6	IF_6
0x4000c88	            0x85d2	                           test edx, edx	       369	cond.c	FUNCTION_6	IF_6
0x4000c8a	     0xf84c0000000	                            je 0x4000d50	       369	cond.c	FUNCTION_6	IF_6
0x4000c90	      0xe800000000	                          call 0x4000c95	       377	cond.c	FUNCTION_6	CALL_18
0x4000c95	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       378	cond.c	FUNCTION_6
0x4000c9a	    0x644833042528	                xor rax, qword fs:[0x28]	       378	cond.c	FUNCTION_6
0x4000ca3	     0xf850b020000	                           jne 0x4000eb4	       378	cond.c	FUNCTION_6
0x4000ca9	        0x4883c438	                           add rsp, 0x38	       378	cond.c	FUNCTION_6
0x4000cad	              0x5b	                                 pop rbx	       378	cond.c	FUNCTION_6
0x4000cae	              0x5d	                                 pop rbp	       378	cond.c	FUNCTION_6
0x4000caf	              0xc3	                                     ret	       378	cond.c	FUNCTION_6
0x4000cb0	      0xba05000000	                              mov edx, 5	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000cb5	      0xbe00000000	                              mov esi, 0	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000cba	            0x31ff	                            xor edi, edi	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000cbc	      0xe800000000	                          call 0x4000cc1	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000cc1	          0x4889c7	                            mov rdi, rax	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000cc4	            0x31c0	                            xor eax, eax	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000cc6	      0xe800000000	                          call 0x4000ccb	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000ccb	      0xba05000000	                              mov edx, 5	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000cd0	      0xbe00000000	                              mov esi, 0	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000cd5	            0x31ff	                            xor edi, edi	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000cd7	      0xe800000000	                          call 0x4000cdc	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000cdc	    0x488b0d000000	            mov rcx, qword [0x04000ce3] 	       316	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000ce3	          0x4889c2	                            mov rdx, rax	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ce6	            0x31c0	                            xor eax, eax	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ce8	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ceb	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000cef	      0xe800000000	                          call 0x4000cf4	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000cf4	      0xba05000000	                              mov edx, 5	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000cf9	      0xbe00000000	                              mov esi, 0	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000cfe	            0x31ff	                            xor edi, edi	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000d00	      0xe800000000	                          call 0x4000d05	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000d05	    0x488b0d000000	            mov rcx, qword [0x04000d0c] 	       319	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000d0c	          0x4889c2	                            mov rdx, rax	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000d0f	            0x31c0	                            xor eax, eax	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000d11	          0x8b7108	                mov esi, dword [rcx + 8]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000d14	          0x488b39	                    mov rdi, qword [rcx]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000d17	      0xe800000000	                          call 0x4000d1c	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000d1c	    0x488b0d000000	            mov rcx, qword [0x04000d23] 	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000d23	          0x4885c9	                           test rcx, rcx	       331	cond.c	FUNCTION_6	IF_3
0x4000d26	     0xf8502ffffff	                           jne 0x4000c2e	       331	cond.c	FUNCTION_6	IF_3
0x4000d2c	    0x488b05000000	            mov rax, qword [0x04000d33] 	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d33	           0xfb610	                   movzx edx, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d36	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d3d	     0xf8409ffffff	                            je 0x4000c4c	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d43	      0xe94dffffff	                           jmp 0x4000c95	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d48	     0xf1f84000000	                   nop dword [rax + rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d50	          0x8b412c	            mov eax, dword [rcx + 0x2c] 	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000d53	            0x85c0	                           test eax, eax	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000d55	            0x7571	                           jne 0x4000dc8	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000d57	      0xbf01000000	                              mov edi, 1	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000d5c	      0xe800000000	                          call 0x4000d61	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000d61	      0xe92affffff	                           jmp 0x4000c90	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000d66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000d70	    0x488b05000000	            mov rax, qword [0x04000d77] 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000d77	          0x803820	                    cmp byte [rax], 0x20	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000d7a	     0xf84e0000000	                            je 0x4000e60	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000d80	            0x31d2	                            xor edx, edx	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000d82	            0x31ff	                            xor edi, edi	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000d84	          0x4889e6	                            mov rsi, rsp	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000d87	      0xe800000000	                          call 0x4000d8c	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000d8c	      0x807c241802	                cmp byte [rsp + 0x18], 2	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000d91	            0x741b	                            je 0x4000dae	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000d93	            0x31ff	                            xor edi, edi	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000d95	      0xba05000000	                              mov edx, 5	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000d9a	      0xbe00000000	                              mov esi, 0	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000d9f	      0xe800000000	                          call 0x4000da4	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000da4	          0x4889c7	                            mov rdi, rax	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000da7	            0x31c0	                            xor eax, eax	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000da9	      0xe800000000	                          call 0x4000dae	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000dae	          0x83ed15	                           sub ebp, 0x15	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000db1	          0x83fd05	                              cmp ebp, 5	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000db4	     0xf87e6000000	                            ja 0x4000ea0	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000dba	    0xff24ed000000	                       jmp qword [rbp*8]	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000dc1	     0xf1f80000000	                         nop dword [rax]	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000dc8	      0xbf02000000	                              mov edi, 2	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000dcd	      0xe800000000	                          call 0x4000dd2	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000dd2	      0xe9b9feffff	                           jmp 0x4000c90	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000dd7	    0x660f1f840000	                    nop word [rax + rax]	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000de0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000de5	          0x48f7d0	                                 not rax	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000de8	        0x48c1e83f	                           shr rax, 0x3f	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000dec	         0xf1f4000	                         nop dword [rax]	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000df0	    0x488b0d000000	            mov rcx, qword [0x04000df7] 	       364	cond.c	FUNCTION_6	ELSE_3
0x4000df7	          0x8b7130	            mov esi, dword [rcx + 0x30] 	       364	cond.c	FUNCTION_6	ELSE_3
0x4000dfa	            0x85f6	                           test esi, esi	       364	cond.c	FUNCTION_6	ELSE_3
0x4000dfc	           0xf95c2	                                setne dl	       364	cond.c	FUNCTION_6	ELSE_3
0x4000dff	          0x83f001	                              xor eax, 1	       364	cond.c	FUNCTION_6	ELSE_3
0x4000e02	             0x9d0	                             or eax, edx	       364	cond.c	FUNCTION_6	ELSE_3
0x4000e04	           0xfb6c0	                           movzx eax, al	       364	cond.c	FUNCTION_6	ELSE_3
0x4000e07	          0x89412c	             mov dword [rcx + 0x2c], eax	       364	cond.c	FUNCTION_6	ELSE_3
0x4000e0a	      0xe960feffff	                           jmp 0x4000c6f	       364	cond.c	FUNCTION_6	ELSE_3
0x4000e0f	              0x90	                                     nop	       364	cond.c	FUNCTION_6	ELSE_3
0x4000e10	            0x31c0	                            xor eax, eax	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e12	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e18	           0xf9ec0	                                setle al	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e1b	            0xebd3	                           jmp 0x4000df0	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e1d	           0xf1f00	                         nop dword [rax]	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e20	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e25	        0x48c1e83f	                           shr rax, 0x3f	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e29	            0xebc5	                           jmp 0x4000df0	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e2b	       0xf1f440000	                   nop dword [rax + rax]	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e30	            0x31c0	                            xor eax, eax	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e32	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e38	           0xf95c0	                                setne al	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e3b	            0xebb3	                           jmp 0x4000df0	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e3d	           0xf1f00	                         nop dword [rax]	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e40	            0x31c0	                            xor eax, eax	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e42	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e48	           0xf94c0	                                 sete al	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e4b	            0xeba3	                           jmp 0x4000df0	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e4d	           0xf1f00	                         nop dword [rax]	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e50	            0x31c0	                            xor eax, eax	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e52	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e58	           0xf9fc0	                                 setg al	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e5b	            0xeb93	                           jmp 0x4000df0	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e5d	           0xf1f00	                         nop dword [rax]	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000e60	        0x4883c001	                              add rax, 1	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000e64	    0x488905000000	            mov qword [0x04000e6b], rax 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000e6b	      0xe910ffffff	                           jmp 0x4000d80	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000e70	      0xba05000000	                              mov edx, 5	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e75	      0xbe00000000	                              mov esi, 0	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e7a	            0x31ff	                            xor edi, edi	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e7c	      0xe800000000	                          call 0x4000e81	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e81	          0x4889c7	                            mov rdi, rax	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e84	            0x31c0	                            xor eax, eax	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e86	      0xe800000000	                          call 0x4000e8b	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e8b	    0x488b0d000000	            mov rcx, qword [0x04000e92] 	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e92	      0xe98cfeffff	                           jmp 0x4000d23	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000e97	    0x660f1f840000	                    nop word [rax + rax]	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000ea0	      0xba00000000	                              mov edx, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000ea5	      0xbe68010000	                          mov esi, 0x168	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000eaa	      0xbf00000000	                              mov edi, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000eaf	      0xe800000000	                          call 0x4000eb4	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000eb4	      0xe800000000	                          call 0x4000eb9	       378	cond.c	FUNCTION_6
get_mri_string	CALL,2:ELSE,1:IF,3:functions,0:WHILE,3:SWITCH,0:FOR,0:DO,0	80
0x4000040	    0x488b05000000	            mov rax, qword [0x04000047] 	       229	cond.c	FUNCTION_4	CALL_1
0x4000047	           0xfb610	                   movzx edx, byte [rax]	       229	cond.c	FUNCTION_4	CALL_1
0x400004a	          0x80fa20	                            cmp dl, 0x20	       229	cond.c	FUNCTION_4	CALL_1
0x400004d	     0xf84fd000000	                            je 0x4000150	       229	cond.c	FUNCTION_4	CALL_1
0x4000053	          0x80fa27	                            cmp dl, 0x27	       231	cond.c	FUNCTION_4	IF_1
0x4000056	            0x7478	                            je 0x40000d0	       231	cond.c	FUNCTION_4	IF_1
0x4000058	           0xfbeca	                           movsx ecx, dl	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400005b	            0x39cf	                            cmp edi, ecx	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400005d	            0x7469	                            je 0x40000c8	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400005f	           0xfb6ca	                           movzx ecx, dl	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000062	          0x4889c2	                            mov rdx, rax	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000065	    0x80b900000000	                       cmp byte [rcx], 0	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400006c	            0x740f	                            je 0x400007d	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400006e	            0xeb58	                           jmp 0x40000c8	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000070	        0x410fb6c8	                          movzx ecx, r8b	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000074	    0x80b900000000	                       cmp byte [rcx], 0	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400007b	            0x7514	                           jne 0x4000091	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400007d	        0x4883c201	                              add rdx, 1	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000081	    0x488915000000	            mov qword [0x04000088], rdx 	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000088	        0x440fbe02	                   movsx r8d, byte [rdx]	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400008c	          0x4139f8	                            cmp r8d, edi	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400008f	            0x75df	                           jne 0x4000070	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000091	          0x4839c2	                            cmp rdx, rax	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000094	            0x7629	                           jbe 0x40000bf	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000096	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400009a	          0x80f909	                               cmp cl, 9	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400009d	            0x7409	                            je 0x40000a8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400009f	          0x80f920	                            cmp cl, 0x20	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000a2	            0x751b	                           jne 0x40000bf	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000a4	         0xf1f4000	                         nop dword [rax]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000a8	        0x4883ea01	                              sub rdx, 1	       254	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000ac	          0x4839c2	                            cmp rdx, rax	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000af	            0x7417	                            je 0x40000c8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000b1	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000b5	          0x80f920	                            cmp cl, 0x20	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000b8	            0x74ee	                            je 0x40000a8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000ba	          0x80f909	                               cmp cl, 9	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000bd	            0x74e9	                            je 0x40000a8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000bf	            0x29c2	                            sub edx, eax	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000c1	            0x8916	                    mov dword [rsi], edx	       257	cond.c	FUNCTION_4
0x40000c3	              0xc3	                                     ret	       259	cond.c	FUNCTION_4
0x40000c4	         0xf1f4000	                         nop dword [rax]	       259	cond.c	FUNCTION_4
0x40000c8	            0x31d2	                            xor edx, edx	       259	cond.c	FUNCTION_4
0x40000ca	            0x8916	                    mov dword [rsi], edx	       257	cond.c	FUNCTION_4
0x40000cc	              0xc3	                                     ret	       259	cond.c	FUNCTION_4
0x40000cd	           0xf1f00	                         nop dword [rax]	       259	cond.c	FUNCTION_4
0x40000d0	        0x488d5001	                      lea rdx, [rax + 1]	       233	cond.c	FUNCTION_4	IF_1
0x40000d4	    0x488915000000	            mov qword [0x040000db], rdx 	       234	cond.c	FUNCTION_4	IF_1
0x40000db	          0x4889d1	                            mov rcx, rdx	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000de	            0x6690	                                     nop	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000e0	        0x440fb601	                   movzx r8d, byte [rcx]	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000e4	    0x4180b8000000	                        cmp byte [r8], 0	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000ec	          0x4c89c7	                             mov rdi, r8	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000ef	            0x753f	                           jne 0x4000130	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000f1	        0x488d7901	                      lea rdi, [rcx + 1]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000f5	        0x4883c201	                              add rdx, 1	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000f9	    0x48893d000000	            mov qword [0x04000100], rdi 	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000100	           0xfb609	                   movzx ecx, byte [rcx]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000103	          0x80f927	                            cmp cl, 0x27	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000106	          0x884aff	                  mov byte [rdx - 1], cl	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000109	    0x488b0d000000	            mov rcx, qword [0x04000110] 	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000110	            0x75ce	                           jne 0x40000e0	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000112	           0xfb639	                   movzx edi, byte [rcx]	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000115	        0x4080ff27	                           cmp dil, 0x27	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000119	            0x7515	                           jne 0x4000130	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x400011b	        0x4883c101	                              add rcx, 1	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x400011f	    0x48890d000000	            mov qword [0x04000126], rcx 	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000126	            0xebb8	                           jmp 0x40000e0	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000128	     0xf1f84000000	                   nop dword [rax + rax]	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000130	        0x4080ff20	                           cmp dil, 0x20	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000134	            0x7589	                           jne 0x40000bf	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000136	        0x4883c101	                              add rcx, 1	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x400013a	    0x48890d000000	            mov qword [0x04000141], rcx 	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000141	      0xe979ffffff	                           jmp 0x40000bf	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000146	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000150	        0x488d4801	                      lea rcx, [rax + 1]	       229	cond.c	FUNCTION_4	CALL_1
0x4000154	    0x48890d000000	            mov qword [0x0400015b], rcx 	       229	cond.c	FUNCTION_4	CALL_1
0x400015b	         0xfb65001	               movzx edx, byte [rax + 1]	       229	cond.c	FUNCTION_4	CALL_1
0x400015f	          0x4889c8	                            mov rax, rcx	       229	cond.c	FUNCTION_4	CALL_1
0x4000162	      0xe9ecfeffff	                           jmp 0x4000053	       229	cond.c	FUNCTION_4	CALL_1
s_else	CALL,13:ELSE,3:IF,5:functions,0:WHILE,1:SWITCH,0:FOR,0:DO,0	91
0x4000fb0	              0x53	                                push rbx	       413	cond.c	FUNCTION_8
0x4000fb1	    0x488b1d000000	            mov rbx, qword [0x04000fb8] 	       414	cond.c	FUNCTION_8	IF_1
0x4000fb8	          0x4885db	                           test rbx, rbx	       414	cond.c	FUNCTION_8	IF_1
0x4000fbb	     0xf8427010000	                            je 0x40010e8	       414	cond.c	FUNCTION_8	IF_1
0x4000fc1	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000fc4	            0x85ff	                           test edi, edi	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000fc6	     0xf84b4000000	                            je 0x4001080	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000fcc	      0xba05000000	                              mov edx, 5	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000fd1	      0xbe00000000	                              mov esi, 0	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000fd6	            0x31ff	                            xor edi, edi	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000fd8	      0xe800000000	                          call 0x4000fdd	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000fdd	          0x4889c7	                            mov rdi, rax	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000fe0	            0x31c0	                            xor eax, eax	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000fe2	      0xe800000000	                          call 0x4000fe7	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000fe7	      0xba05000000	                              mov edx, 5	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000fec	      0xbe00000000	                              mov esi, 0	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000ff1	            0x31ff	                            xor edi, edi	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000ff3	      0xe800000000	                          call 0x4000ff8	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000ff8	    0x488b0d000000	            mov rcx, qword [0x04000fff] 	       422	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000fff	          0x4889c2	                            mov rdx, rax	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4001002	            0x31c0	                            xor eax, eax	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4001004	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4001007	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x400100b	      0xe800000000	                          call 0x4001010	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4001010	      0xba05000000	                              mov edx, 5	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4001015	      0xbe00000000	                              mov esi, 0	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x400101a	            0x31ff	                            xor edi, edi	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x400101c	      0xe800000000	                          call 0x4001021	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4001021	    0x488b0d000000	            mov rcx, qword [0x04001028] 	       425	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4001028	          0x4889c2	                            mov rdx, rax	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x400102b	            0x31c0	                            xor eax, eax	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x400102d	          0x8b7108	                mov esi, dword [rcx + 8]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4001030	          0x488b39	                    mov rdi, qword [rcx]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4001033	      0xe800000000	                          call 0x4001038	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4001038	    0x8b0500000000	            mov eax, dword [0x0400103e] 	       449	cond.c	FUNCTION_8	IF_5
0x400103e	            0x85c0	                           test eax, eax	       449	cond.c	FUNCTION_8	IF_5
0x4001040	            0x7438	                            je 0x400107a	       449	cond.c	FUNCTION_8	IF_5
0x4001042	    0x488b05000000	            mov rax, qword [0x04001049] 	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001049	           0xfb610	                   movzx edx, byte [rax]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400104c	    0x80ba00000000	                       cmp byte [rdx], 0	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001053	            0x7525	                           jne 0x400107a	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001055	        0x4883c001	                              add rax, 1	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001059	     0xf1f80000000	                         nop dword [rax]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001060	          0x4889c2	                            mov rdx, rax	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001063	    0x488905000000	            mov qword [0x0400106a], rax 	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400106a	        0x4883c001	                              add rax, 1	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400106e	           0xfb612	                   movzx edx, byte [rdx]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001071	    0x80ba00000000	                       cmp byte [rdx], 0	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001078	            0x74e6	                            je 0x4001060	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400107a	              0x5b	                                 pop rbx	       456	cond.c	FUNCTION_8
0x400107b	      0xe900000000	                           jmp 0x4001080	       455	cond.c	FUNCTION_8	CALL_13
0x4001080	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x4001084	      0xe800000000	                          call 0x4001089	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x4001089	        0x48894310	             mov qword [rbx + 0x10], rax	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x400108d	    0x488b05000000	            mov rax, qword [0x04001094] 	       434	cond.c	FUNCTION_8	ELSE_2
0x4001094	            0x31d2	                            xor edx, edx	       434	cond.c	FUNCTION_8	ELSE_2
0x4001096	          0x8b702c	            mov esi, dword [rax + 0x2c] 	       434	cond.c	FUNCTION_8	ELSE_2
0x4001099	            0x85f6	                           test esi, esi	       434	cond.c	FUNCTION_8	ELSE_2
0x400109b	           0xf94c2	                                 sete dl	       434	cond.c	FUNCTION_8	ELSE_2
0x400109e	           0xb5030	              or edx, dword [rax + 0x30]	       434	cond.c	FUNCTION_8	ELSE_2
0x40010a1	    0xf60500000000	           test byte [0x040010a8], 0x20 	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x40010a8	          0x89502c	             mov dword [rax + 0x2c], edx	       433	cond.c	FUNCTION_8	ELSE_2
0x40010ab	            0x742b	                            je 0x40010d8	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x40010ad	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40010b1	          0x4885c9	                           test rcx, rcx	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40010b4	            0x7407	                            je 0x40010bd	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40010b6	          0x8b492c	            mov ecx, dword [rcx + 0x2c] 	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40010b9	            0x85c9	                           test ecx, ecx	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40010bb	            0x751b	                           jne 0x40010d8	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40010bd	            0x85d2	                           test edx, edx	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x40010bf	            0x754f	                           jne 0x4001110	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x40010c1	      0xbf01000000	                              mov edi, 1	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40010c6	      0xe800000000	                          call 0x40010cb	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40010cb	    0x488b05000000	            mov rax, qword [0x040010d2] 	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40010d2	    0x660f1f440000	                    nop word [rax + rax]	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40010d8	    0xc74028010000	               mov dword [rax + 0x28], 1	       446	cond.c	FUNCTION_8	ELSE_2
0x40010df	      0xe954ffffff	                           jmp 0x4001038	       446	cond.c	FUNCTION_8	ELSE_2
0x40010e4	         0xf1f4000	                         nop dword [rax]	       446	cond.c	FUNCTION_8	ELSE_2
0x40010e8	            0x31ff	                            xor edi, edi	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40010ea	      0xba05000000	                              mov edx, 5	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40010ef	      0xbe00000000	                              mov esi, 0	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40010f4	      0xe800000000	                          call 0x40010f9	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40010f9	          0x4889c7	                            mov rdi, rax	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40010fc	            0x31c0	                            xor eax, eax	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40010fe	      0xe800000000	                          call 0x4001103	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001103	      0xe930ffffff	                           jmp 0x4001038	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001108	     0xf1f84000000	                   nop dword [rax + rax]	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001110	      0xbf02000000	                              mov edi, 2	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4001115	      0xe800000000	                          call 0x400111a	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x400111a	    0x488b05000000	            mov rax, qword [0x04001121] 	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4001121	            0xebb5	                           jmp 0x40010d8	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
