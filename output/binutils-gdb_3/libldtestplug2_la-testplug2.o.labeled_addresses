xstrdup	FOR,0:ELSE,0:SWITCH,0:DO,0:functions,0:CALL,3:WHILE,0:IF,0	15
0x4000a20	              0x55	                                push rbp	       502	testplug2.c	FUNCTION_10
0x4000a21	              0x53	                                push rbx	       502	testplug2.c	FUNCTION_10
0x4000a22	          0x4889fd	                            mov rbp, rdi	       502	testplug2.c	FUNCTION_10
0x4000a25	        0x4883ec08	                              sub rsp, 8	       502	testplug2.c	FUNCTION_10
0x4000a29	      0xe800000000	                          call 0x4000a2e	       503	testplug2.c	FUNCTION_10	CALL_1
0x4000a2e	        0x488d7802	                      lea rdi, [rax + 2]	       504	testplug2.c	FUNCTION_10	CALL_2
0x4000a32	          0x4889c3	                            mov rbx, rax	       503	testplug2.c	FUNCTION_10	CALL_1
0x4000a35	      0xe800000000	                          call 0x4000a3a	       504	testplug2.c	FUNCTION_10	CALL_2
0x4000a3a	        0x4883c408	                              add rsp, 8	       506	testplug2.c	FUNCTION_10
0x4000a3e	        0x488d5301	                      lea rdx, [rbx + 1]	        53	string3.h	FUNCTION_14	CALL_3
0x4000a42	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_14	CALL_3
0x4000a45	              0x5b	                                 pop rbx	       506	testplug2.c	FUNCTION_10
0x4000a46	              0x5d	                                 pop rbp	       506	testplug2.c	FUNCTION_10
0x4000a47	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_14	CALL_3
0x4000a4a	      0xe900000000	                           jmp 0x4000a4f	        53	string3.h	FUNCTION_14	CALL_3
oncleanup	FOR,0:ELSE,0:SWITCH,0:DO,0:functions,0:CALL,1:WHILE,0:IF,0	13
0x4000040	        0x4883ec08	                              sub rsp, 8	       664	testplug2.c	FUNCTION_13
0x4000044	    0x488b15000000	            mov rdx, qword [0x0400004b] 	       665	testplug2.c	FUNCTION_13
0x400004b	          0x4885d2	                           test rdx, rdx	       665	testplug2.c	FUNCTION_13
0x400004e	            0x740b	                            je 0x400005b	       665	testplug2.c	FUNCTION_13
0x4000050	      0xbe00000000	                              mov esi, 0	       665	testplug2.c	FUNCTION_13
0x4000055	            0x31ff	                            xor edi, edi	       665	testplug2.c	FUNCTION_13
0x4000057	            0x31c0	                            xor eax, eax	       665	testplug2.c	FUNCTION_13
0x4000059	            0xffd2	                                call rdx	       665	testplug2.c	FUNCTION_13
0x400005b	            0x31ff	                            xor edi, edi	       666	testplug2.c	FUNCTION_13	CALL_1
0x400005d	      0xe800000000	                          call 0x4000062	       666	testplug2.c	FUNCTION_13	CALL_1
0x4000062	    0x8b0500000000	            mov eax, dword [0x04000068] 	       668	testplug2.c	FUNCTION_13
0x4000068	        0x4883c408	                              add rsp, 8	       668	testplug2.c	FUNCTION_13
0x400006c	              0xc3	                                     ret	       668	testplug2.c	FUNCTION_13
record_claim_file	FOR,0:ELSE,0:SWITCH,0:DO,0:functions,0:CALL,2:WHILE,0:IF,1	23
0x4000070	              0x55	                                push rbp	       148	testplug2.c	FUNCTION_1
0x4000071	              0x53	                                push rbx	       148	testplug2.c	FUNCTION_1
0x4000072	          0x4889fd	                            mov rbp, rdi	       148	testplug2.c	FUNCTION_1
0x4000075	          0x4889f3	                            mov rbx, rsi	       148	testplug2.c	FUNCTION_1
0x4000078	      0xbf48000000	                           mov edi, 0x48	       151	testplug2.c	FUNCTION_1	CALL_1
0x400007d	      0xbe01000000	                              mov esi, 1	       151	testplug2.c	FUNCTION_1	CALL_1
0x4000082	        0x4883ec08	                              sub rsp, 8	       148	testplug2.c	FUNCTION_1
0x4000086	      0xe800000000	                          call 0x400008b	       151	testplug2.c	FUNCTION_1	CALL_1
0x400008b	          0x4889c2	                            mov rdx, rax	       151	testplug2.c	FUNCTION_1	CALL_1
0x400008e	      0xb803000000	                              mov eax, 3	       151	testplug2.c	FUNCTION_1	CALL_1
0x4000093	          0x4885d2	                           test rdx, rdx	       152	testplug2.c	FUNCTION_1	IF_1
0x4000096	            0x7422	                            je 0x40000ba	       152	testplug2.c	FUNCTION_1	IF_1
0x4000098	    0x488b05000000	            mov rax, qword [0x0400009f] 	       159	testplug2.c	FUNCTION_1
0x400009f	        0x48896a08	                mov qword [rdx + 8], rbp	       156	testplug2.c	FUNCTION_1
0x40000a3	        0x48895a20	             mov qword [rdx + 0x20], rbx	       157	testplug2.c	FUNCTION_1
0x40000a7	    0x488915000000	            mov qword [0x040000ae], rdx 	       160	testplug2.c	FUNCTION_1
0x40000ae	    0x488915000000	            mov qword [0x040000b5], rdx 	       162	testplug2.c	FUNCTION_1
0x40000b5	          0x488910	                    mov qword [rax], rdx	       159	testplug2.c	FUNCTION_1
0x40000b8	            0x31c0	                            xor eax, eax	       163	testplug2.c	FUNCTION_1
0x40000ba	        0x4883c408	                              add rsp, 8	       164	testplug2.c	FUNCTION_1
0x40000be	              0x5b	                                 pop rbx	       164	testplug2.c	FUNCTION_1
0x40000bf	              0x5d	                                 pop rbp	       164	testplug2.c	FUNCTION_1
0x40000c0	              0xc3	                                     ret	       164	testplug2.c	FUNCTION_1
onclaim_file	FOR,1:ELSE,1:SWITCH,0:DO,0:functions,0:CALL,5:WHILE,1:IF,5	118
0x4000e10	            0x4157	                                push r15	       511	testplug2.c	FUNCTION_11
0x4000e12	            0x4156	                                push r14	       511	testplug2.c	FUNCTION_11
0x4000e14	          0x4989f6	                            mov r14, rsi	       511	testplug2.c	FUNCTION_11
0x4000e17	            0x4155	                                push r13	       511	testplug2.c	FUNCTION_11
0x4000e19	            0x4154	                                push r12	       511	testplug2.c	FUNCTION_11
0x4000e1b	          0x4989fc	                            mov r12, rdi	       511	testplug2.c	FUNCTION_11
0x4000e1e	              0x55	                                push rbp	       511	testplug2.c	FUNCTION_11
0x4000e1f	              0x53	                                push rbx	       511	testplug2.c	FUNCTION_11
0x4000e20	        0x4883ec08	                              sub rsp, 8	       511	testplug2.c	FUNCTION_11
0x4000e24	          0x4c8b2f	                    mov r13, qword [rdi]	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e27	    0x488b1d000000	            mov rbx, qword [0x04000e2e] 	       513	testplug2.c	FUNCTION_11
0x4000e2e	          0x4c89ef	                            mov rdi, r13	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e31	      0xe800000000	                          call 0x4000e36	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e36	          0x4c89ef	                            mov rdi, r13	       515	testplug2.c	FUNCTION_11	CALL_2
0x4000e39	          0x4889c5	                            mov rbp, rax	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e3c	      0xe800000000	                          call 0x4000e41	       515	testplug2.c	FUNCTION_11	CALL_2
0x4000e41	          0x4801c5	                            add rbp, rax	       516	testplug2.c	FUNCTION_11
0x4000e44	          0x4989c5	                            mov r13, rax	       515	testplug2.c	FUNCTION_11	CALL_2
0x4000e47	         0xfb64500	                   movzx eax, byte [rbp]	       520	testplug2.c	FUNCTION_11
0x4000e4b	            0x3c61	                            cmp al, 0x61	       520	testplug2.c	FUNCTION_11
0x4000e4d	     0xf840d010000	                            je 0x4000f60	       520	testplug2.c	FUNCTION_11
0x4000e53	          0x4531ff	                          xor r15d, r15d	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e56	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e59	            0x7438	                            je 0x4000e93	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e5b	            0x3c2f	                            cmp al, 0x2f	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e5d	            0x7513	                           jne 0x4000e72	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e5f	      0xe9ec000000	                           jmp 0x4000f50	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e64	         0xf1f4000	                         nop dword [rax]	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e68	        0x807d002f	                    cmp byte [rbp], 0x2f	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e6c	     0xf84de000000	                            je 0x4000f50	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e72	        0x4883ed01	                              sub rbp, 1	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e76	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e79	            0x75ed	                           jne 0x4000e68	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e7b	            0xeb16	                           jmp 0x4000e93	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e7d	           0xf1f00	                         nop dword [rax]	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e80	          0x4585ff	                         test r15d, r15d	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e83	            0x7434	                            je 0x4000eb9	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e85	    0x49837c241000	               cmp qword [r12 + 0x10], 0	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e8b	            0x752c	                           jne 0x4000eb9	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e8d	           0xf1f00	                         nop dword [rax]	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e90	          0x488b1b	                    mov rbx, qword [rbx]	       536	testplug2.c	FUNCTION_11	WHILE_1
0x4000e93	          0x4885db	                           test rbx, rbx	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000e96	     0xf848c000000	                            je 0x4000f28	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000e9c	        0x488b7308	                mov rsi, qword [rbx + 8]	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000ea0	          0x4889ef	                            mov rdi, rbp	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000ea3	      0xe800000000	                          call 0x4000ea8	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000ea8	            0x85c0	                           test eax, eax	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000eaa	            0x75e4	                           jne 0x4000e90	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000eac	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       533	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000eb1	        0x48394320	            cmp qword [rbx + 0x20], rax 	       533	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000eb5	            0x75d9	                           jne 0x4000e90	       533	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000eb7	            0xebc7	                           jmp 0x4000e80	       533	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000eb9	          0x4c89ef	                            mov rdi, r13	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000ebc	      0xe800000000	                          call 0x4000ec1	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000ec1	    0x41c706010000	                      mov dword [r14], 1	       543	testplug2.c	FUNCTION_11
0x4000ec8	        0x498b0424	                    mov rax, qword [r12]	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ecc	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000ecf	    0xc74330010000	               mov dword [rbx + 0x30], 1	       546	testplug2.c	FUNCTION_11	IF_3
0x4000ed6	        0x48894308	                mov qword [rbx + 8], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000eda	      0x498b442408	                mov rax, qword [r12 + 8]	       547	testplug2.c	FUNCTION_11	IF_3
0x4000edf	            0x85f6	                           test esi, esi	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000ee1	        0x48894310	             mov qword [rbx + 0x10], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ee5	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       547	testplug2.c	FUNCTION_11	IF_3
0x4000eea	        0x48894318	             mov qword [rbx + 0x18], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000eee	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ef3	        0x48894320	             mov qword [rbx + 0x20], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ef7	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	       547	testplug2.c	FUNCTION_11	IF_3
0x4000efc	        0x48897b28	             mov qword [rbx + 0x28], rdi	       547	testplug2.c	FUNCTION_11	IF_3
0x4000f00	            0x7435	                            je 0x4000f37	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f02	    0x488b05000000	            mov rax, qword [0x04000f09] 	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f09	          0x4885c0	                           test rax, rax	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f0c	            0x7472	                            je 0x4000f80	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f0e	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       551	testplug2.c	FUNCTION_11	IF_3	ELSE_1	IF_5
0x4000f12	        0x4883c408	                              add rsp, 8	       556	testplug2.c	FUNCTION_11
0x4000f16	              0x5b	                                 pop rbx	       556	testplug2.c	FUNCTION_11
0x4000f17	              0x5d	                                 pop rbp	       556	testplug2.c	FUNCTION_11
0x4000f18	            0x415c	                                 pop r12	       556	testplug2.c	FUNCTION_11
0x4000f1a	            0x415d	                                 pop r13	       556	testplug2.c	FUNCTION_11
0x4000f1c	            0x415e	                                 pop r14	       556	testplug2.c	FUNCTION_11
0x4000f1e	            0x415f	                                 pop r15	       556	testplug2.c	FUNCTION_11
0x4000f20	            0xffe0	                                 jmp rax	       551	testplug2.c	FUNCTION_11	IF_3	ELSE_1	IF_5
0x4000f22	    0x660f1f440000	                    nop word [rax + rax]	       551	testplug2.c	FUNCTION_11	IF_3	ELSE_1	IF_5
0x4000f28	          0x4c89ef	                            mov rdi, r13	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000f2b	      0xe800000000	                          call 0x4000f30	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000f30	    0x41c706000000	                      mov dword [r14], 0	       543	testplug2.c	FUNCTION_11
0x4000f37	    0x8b0500000000	            mov eax, dword [0x04000f3d] 	       555	testplug2.c	FUNCTION_11
0x4000f3d	        0x4883c408	                              add rsp, 8	       556	testplug2.c	FUNCTION_11
0x4000f41	              0x5b	                                 pop rbx	       556	testplug2.c	FUNCTION_11
0x4000f42	              0x5d	                                 pop rbp	       556	testplug2.c	FUNCTION_11
0x4000f43	            0x415c	                                 pop r12	       556	testplug2.c	FUNCTION_11
0x4000f45	            0x415d	                                 pop r13	       556	testplug2.c	FUNCTION_11
0x4000f47	            0x415e	                                 pop r14	       556	testplug2.c	FUNCTION_11
0x4000f49	            0x415f	                                 pop r15	       556	testplug2.c	FUNCTION_11
0x4000f4b	              0xc3	                                     ret	       556	testplug2.c	FUNCTION_11
0x4000f4c	         0xf1f4000	                         nop dword [rax]	       556	testplug2.c	FUNCTION_11
0x4000f50	        0x4883c501	                              add rbp, 1	       524	testplug2.c	FUNCTION_11	FOR_1	IF_1
0x4000f54	      0xe93affffff	                           jmp 0x4000e93	       525	testplug2.c	FUNCTION_11	FOR_1	IF_1
0x4000f59	     0xf1f80000000	                         nop dword [rax]	       525	testplug2.c	FUNCTION_11	FOR_1	IF_1
0x4000f60	        0x807dff2e	                cmp byte [rbp - 1], 0x2e	       520	testplug2.c	FUNCTION_11
0x4000f64	            0x742e	                            je 0x4000f94	       520	testplug2.c	FUNCTION_11
0x4000f66	          0x4531ff	                          xor r15d, r15d	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f69	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f6c	     0xf8500ffffff	                           jne 0x4000e72	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f72	      0xe91cffffff	                           jmp 0x4000e93	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f77	    0x660f1f840000	                    nop word [rax + rax]	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f80	        0x4883c408	                              add rsp, 8	       556	testplug2.c	FUNCTION_11
0x4000f84	      0xb803000000	                              mov eax, 3	       549	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f89	              0x5b	                                 pop rbx	       556	testplug2.c	FUNCTION_11
0x4000f8a	              0x5d	                                 pop rbp	       556	testplug2.c	FUNCTION_11
0x4000f8b	            0x415c	                                 pop r12	       556	testplug2.c	FUNCTION_11
0x4000f8d	            0x415d	                                 pop r13	       556	testplug2.c	FUNCTION_11
0x4000f8f	            0x415e	                                 pop r14	       556	testplug2.c	FUNCTION_11
0x4000f91	            0x415f	                                 pop r15	       556	testplug2.c	FUNCTION_11
0x4000f93	              0xc3	                                     ret	       556	testplug2.c	FUNCTION_11
0x4000f94	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f97	    0x41bf01000000	                             mov r15d, 1	       520	testplug2.c	FUNCTION_11
0x4000f9d	     0xf85cffeffff	                           jne 0x4000e72	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000fa3	      0xe9ebfeffff	                           jmp 0x4000e93	       521	testplug2.c	FUNCTION_11	FOR_1
onload	FOR,0:ELSE,0:SWITCH,0:DO,1:functions,0:CALL,10:WHILE,0:IF,10	322
0x40004a0	          0x4885ff	                           test rdi, rdi	       440	testplug2.c	FUNCTION_9	IF_1
0x40004a3	     0xf8467020000	                            je 0x4000710	       440	testplug2.c	FUNCTION_9	IF_1
0x40004a9	            0x4154	                                push r12	       435	testplug2.c	FUNCTION_9
0x40004ab	              0x55	                                push rbp	       435	testplug2.c	FUNCTION_9
0x40004ac	              0x53	                                push rbx	       435	testplug2.c	FUNCTION_9
0x40004ad	            0x8b2f	                    mov ebp, dword [rdi]	       445	testplug2.c	FUNCTION_9	IF_2
0x40004af	          0x4889fb	                            mov rbx, rdi	       445	testplug2.c	FUNCTION_9	IF_2
0x40004b2	          0x83fd0b	                            cmp ebp, 0xb	       445	testplug2.c	FUNCTION_9	IF_2
0x40004b5	     0xf8495020000	                            je 0x4000750	       445	testplug2.c	FUNCTION_9	IF_2
0x40004bb	       0xf1f440000	                   nop dword [rax + rax]	       445	testplug2.c	FUNCTION_9	IF_2
0x40004c0	          0x8d45fc	                      lea eax, [rbp - 4]	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40004c3	          0x83f815	                           cmp eax, 0x15	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40004c6	     0xf87ac000000	                            ja 0x4000578	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40004cc	    0xff24c5000000	                       jmp qword [rax*8]	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40004d3	      0xbe00000000	                              mov esi, 0	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x40004d8	      0xb904000000	                              mov ecx, 4	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x40004dd	          0x4889c7	                            mov rdi, rax	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x40004e0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x40004e2	     0xf84f3020000	                            je 0x40007db	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x40004e8	      0xbe00000000	                              mov esi, 0	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x40004ed	      0xb904000000	                              mov ecx, 4	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x40004f2	          0x4889c7	                            mov rdi, rax	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x40004f5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x40004f7	     0xf84ba030000	                            je 0x40008b7	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x40004fd	      0xbe00000000	                              mov esi, 0	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x4000502	      0xb908000000	                              mov ecx, 8	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x4000507	          0x4889c7	                            mov rdi, rax	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x400050a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x400050c	     0xf84b5030000	                            je 0x40008c7	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x4000512	      0xbe00000000	                              mov esi, 0	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x4000517	      0xb90a000000	                            mov ecx, 0xa	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x400051c	          0x4889c7	                            mov rdi, rax	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x400051f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x4000521	     0xf84b3030000	                            je 0x40008da	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x4000527	      0xbe00000000	                              mov esi, 0	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x400052c	      0xb906000000	                              mov ecx, 6	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x4000531	          0x4889c7	                            mov rdi, rax	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x4000534	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x4000536	     0xf84ae030000	                            je 0x40008ea	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x400053c	      0xbe00000000	                              mov esi, 0	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x4000541	      0xb904000000	                              mov ecx, 4	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x4000546	          0x4889c7	                            mov rdi, rax	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x4000549	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x400054b	     0xf8508030000	                           jne 0x4000859	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x4000551	    0x48833d000000	               cmp qword [0x04000559], 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000559	        0x488d7804	                      lea rdi, [rax + 4]	       353	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9
0x400055d	     0xf844a030000	                            je 0x40008ad	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000563	      0xe8b8fcffff	call sym.record_claimed_file_symbol.part.2	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000568	            0x85c0	                           test eax, eax	       449	testplug2.c	FUNCTION_9	DO_1	IF_3	CALL_1
0x400056a	     0xf85a9000000	                           jne 0x4000619	       449	testplug2.c	FUNCTION_9	DO_1	IF_3	CALL_1
0x4000570	            0x8b2b	                    mov ebp, dword [rbx]	       449	testplug2.c	FUNCTION_9	DO_1	IF_3	CALL_1
0x4000572	    0x660f1f440000	                    nop word [rax + rax]	       449	testplug2.c	FUNCTION_9	DO_1	IF_3	CALL_1
0x4000578	        0x4883c310	                           add rbx, 0x10	       451	testplug2.c	FUNCTION_9
0x400057c	            0x85ed	                           test ebp, ebp	       451	testplug2.c	FUNCTION_9
0x400057e	            0x7428	                            je 0x40005a8	       451	testplug2.c	FUNCTION_9
0x4000580	            0x8b2b	                    mov ebp, dword [rbx]	       451	testplug2.c	FUNCTION_9
0x4000582	      0xe939ffffff	                           jmp 0x40004c0	       451	testplug2.c	FUNCTION_9
0x4000587	    0x660f1f840000	                    nop word [rax + rax]	       451	testplug2.c	FUNCTION_9
0x4000590	        0x488b4308	                mov rax, qword [rbx + 8]	       404	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000594	        0x4883c310	                           add rbx, 0x10	       451	testplug2.c	FUNCTION_9
0x4000598	            0x85ed	                           test ebp, ebp	       451	testplug2.c	FUNCTION_9
0x400059a	    0x488905000000	            mov qword [0x040005a1], rax 	       404	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40005a1	            0x75dd	                           jne 0x4000580	       451	testplug2.c	FUNCTION_9
0x40005a3	       0xf1f440000	                   nop dword [rax + rax]	       451	testplug2.c	FUNCTION_9
0x40005a8	    0x8b0d00000000	            mov ecx, dword [0x040005ae] 	       454	testplug2.c	FUNCTION_9	IF_4
0x40005ae	            0x85c9	                           test ecx, ecx	       454	testplug2.c	FUNCTION_9	IF_4
0x40005b0	            0x7417	                            je 0x40005c9	       454	testplug2.c	FUNCTION_9	IF_4
0x40005b2	    0x488b05000000	            mov rax, qword [0x040005b9] 	       456	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40005b9	          0x4885c0	                           test rax, rax	       456	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40005bc	     0xf84d6010000	                            je 0x4000798	       456	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40005c2	      0xbf00000000	                              mov edi, 0	       462	testplug2.c	FUNCTION_9	IF_4
0x40005c7	            0xffd0	                                call rax	       462	testplug2.c	FUNCTION_9	IF_4
0x40005c9	    0x8b1500000000	            mov edx, dword [0x040005cf] 	       464	testplug2.c	FUNCTION_9	IF_6
0x40005cf	            0x85d2	                           test edx, edx	       464	testplug2.c	FUNCTION_9	IF_6
0x40005d1	            0x7417	                            je 0x40005ea	       464	testplug2.c	FUNCTION_9	IF_6
0x40005d3	    0x488b05000000	            mov rax, qword [0x040005da] 	       466	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40005da	          0x4885c0	                           test rax, rax	       466	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40005dd	     0xf84de010000	                            je 0x40007c1	       466	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40005e3	      0xbf00000000	                              mov edi, 0	       472	testplug2.c	FUNCTION_9	IF_6
0x40005e8	            0xffd0	                                call rax	       472	testplug2.c	FUNCTION_9	IF_6
0x40005ea	    0x8b0500000000	            mov eax, dword [0x040005f0] 	       474	testplug2.c	FUNCTION_9	IF_8
0x40005f0	            0x85c0	                           test eax, eax	       474	testplug2.c	FUNCTION_9	IF_8
0x40005f2	            0x7417	                            je 0x400060b	       474	testplug2.c	FUNCTION_9	IF_8
0x40005f4	    0x488b05000000	            mov rax, qword [0x040005fb] 	       476	testplug2.c	FUNCTION_9	IF_8	IF_9
0x40005fb	          0x4885c0	                           test rax, rax	       476	testplug2.c	FUNCTION_9	IF_8	IF_9
0x40005fe	     0xf84ea010000	                            je 0x40007ee	       476	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000604	      0xbf00000000	                              mov edi, 0	       482	testplug2.c	FUNCTION_9	IF_8
0x4000609	            0xffd0	                                call rax	       482	testplug2.c	FUNCTION_9	IF_8
0x400060b	    0x8b0500000000	            mov eax, dword [0x04000611] 	       488	testplug2.c	FUNCTION_9	IF_10
0x4000611	            0x85c0	                           test eax, eax	       488	testplug2.c	FUNCTION_9	IF_10
0x4000613	     0xf84ef010000	                            je 0x4000808	       488	testplug2.c	FUNCTION_9	IF_10
0x4000619	              0x5b	                                 pop rbx	       498	testplug2.c	FUNCTION_9
0x400061a	              0x5d	                                 pop rbp	       498	testplug2.c	FUNCTION_9
0x400061b	            0x415c	                                 pop r12	       498	testplug2.c	FUNCTION_9
0x400061d	              0xc3	                                     ret	       498	testplug2.c	FUNCTION_9
0x400061e	            0x6690	                                     nop	       498	testplug2.c	FUNCTION_9
0x4000620	        0x488b4308	                mov rax, qword [rbx + 8]	       422	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000624	    0x488905000000	            mov qword [0x0400062b], rax 	       422	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400062b	      0xe948ffffff	                           jmp 0x4000578	       422	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000630	        0x488b4308	                mov rax, qword [rbx + 8]	       419	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000634	    0x488905000000	            mov qword [0x0400063b], rax 	       419	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400063b	      0xe938ffffff	                           jmp 0x4000578	       419	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000640	        0x488b4308	                mov rax, qword [rbx + 8]	       413	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000644	    0x488905000000	            mov qword [0x0400064b], rax 	       413	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400064b	      0xe928ffffff	                           jmp 0x4000578	       413	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000650	        0x488b4308	                mov rax, qword [rbx + 8]	       410	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000654	    0x488905000000	            mov qword [0x0400065b], rax 	       410	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400065b	      0xe918ffffff	                           jmp 0x4000578	       410	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000660	        0x488b4308	                mov rax, qword [rbx + 8]	       407	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000664	    0x488905000000	            mov qword [0x0400066b], rax 	       407	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400066b	      0xe908ffffff	                           jmp 0x4000578	       407	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000670	        0x488b4308	                mov rax, qword [rbx + 8]	       425	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000674	    0x488905000000	            mov qword [0x0400067b], rax 	       425	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400067b	      0xe9f8feffff	                           jmp 0x4000578	       425	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000680	        0x488b4308	                mov rax, qword [rbx + 8]	       398	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000684	    0x488905000000	            mov qword [0x0400068b], rax 	       398	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400068b	      0xe9e8feffff	                           jmp 0x4000578	       398	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000690	        0x488b4308	                mov rax, qword [rbx + 8]	       395	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000694	    0x488905000000	            mov qword [0x0400069b], rax 	       395	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400069b	      0xe9d8feffff	                           jmp 0x4000578	       395	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40006a0	        0x488b4308	                mov rax, qword [rbx + 8]	       392	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40006a4	    0x488905000000	            mov qword [0x040006ab], rax 	       392	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40006ab	      0xe9c8feffff	                           jmp 0x4000578	       392	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40006b0	        0x488b4308	                mov rax, qword [rbx + 8]	       389	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40006b4	    0x488905000000	            mov qword [0x040006bb], rax 	       389	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40006bb	      0xe9b8feffff	                           jmp 0x4000578	       389	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40006c0	        0x488b4308	                mov rax, qword [rbx + 8]	       375	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1	CALL_1
0x40006c4	      0xbe00000000	                              mov esi, 0	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x40006c9	      0xb905000000	                              mov ecx, 5	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x40006ce	          0x4889c7	                            mov rdi, rax	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x40006d1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x40006d3	            0x754b	                           jne 0x4000720	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x40006d5	    0x488b15000000	            mov rdx, qword [0x040006dc] 	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x40006dc	          0x4885d2	                           test rdx, rdx	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x40006df	            0x740e	                            je 0x40006ef	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x40006e1	      0xbe00000000	                              mov esi, 0	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x40006e6	      0xbf03000000	                              mov edi, 3	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x40006eb	            0x31c0	                            xor eax, eax	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x40006ed	            0xffd2	                                call rdx	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x40006ef	            0x31ff	                            xor edi, edi	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x40006f1	      0xe800000000	                          call 0x40006f6	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x40006f6	            0x8b2b	                    mov ebp, dword [rbx]	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x40006f8	      0xe97bfeffff	                           jmp 0x4000578	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x40006fd	           0xf1f00	                         nop dword [rax]	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x4000700	        0x488b4308	                mov rax, qword [rbx + 8]	       416	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000704	    0x488905000000	            mov qword [0x0400070b], rax 	       416	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400070b	      0xe968feffff	                           jmp 0x4000578	       416	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000710	      0xb803000000	                              mov eax, 3	       495	testplug2.c	FUNCTION_9	IF_10
0x4000715	              0xc3	                                     ret	       498	testplug2.c	FUNCTION_9
0x4000716	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       498	testplug2.c	FUNCTION_9
0x4000720	      0xbe00000000	                              mov esi, 0	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000725	      0xb905000000	                              mov ecx, 5	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400072a	          0x4889c7	                            mov rdi, rax	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400072d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400072f	            0x752f	                           jne 0x4000760	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000731	    0x488b15000000	            mov rdx, qword [0x04000738] 	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x4000738	          0x4885d2	                           test rdx, rdx	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x400073b	            0x74b2	                            je 0x40006ef	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x400073d	      0xbe00000000	                              mov esi, 0	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x4000742	      0xbf02000000	                              mov edi, 2	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x4000747	            0x31c0	                            xor eax, eax	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x4000749	            0xffd2	                                call rdx	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x400074b	            0xeba2	                           jmp 0x40006ef	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x400074d	           0xf1f00	                         nop dword [rax]	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x4000750	        0x488b4708	                mov rax, qword [rdi + 8]	       446	testplug2.c	FUNCTION_9	IF_2
0x4000754	    0x488905000000	            mov qword [0x0400075b], rax 	       446	testplug2.c	FUNCTION_9	IF_2
0x400075b	      0xe960fdffff	                           jmp 0x40004c0	       446	testplug2.c	FUNCTION_9	IF_2
0x4000760	      0xbe00000000	                              mov esi, 0	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x4000765	      0xb907000000	                              mov ecx, 7	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x400076a	          0x4889c7	                            mov rdi, rax	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x400076d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x400076f	     0xf855efdffff	                           jne 0x40004d3	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x4000775	    0x488b15000000	            mov rdx, qword [0x0400077c] 	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x400077c	          0x4885d2	                           test rdx, rdx	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x400077f	     0xf846affffff	                            je 0x40006ef	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x4000785	      0xbe00000000	                              mov esi, 0	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x400078a	      0xbf01000000	                              mov edi, 1	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x400078f	            0x31c0	                            xor eax, eax	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x4000791	            0xffd2	                                call rdx	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x4000793	      0xe957ffffff	                           jmp 0x40006ef	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x4000798	    0x488b15000000	            mov rdx, qword [0x0400079f] 	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x400079f	          0x4885d2	                           test rdx, rdx	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40007a2	            0x740c	                            je 0x40007b0	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40007a4	      0xbe00000000	                              mov esi, 0	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40007a9	      0xbf03000000	                              mov edi, 3	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40007ae	            0xffd2	                                call rdx	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40007b0	            0x31ff	                            xor edi, edi	       459	testplug2.c	FUNCTION_9	IF_4	IF_5	CALL_2
0x40007b2	      0xe800000000	                          call 0x40007b7	       459	testplug2.c	FUNCTION_9	IF_4	IF_5	CALL_2
0x40007b7	              0x5b	                                 pop rbx	       498	testplug2.c	FUNCTION_9
0x40007b8	      0xb803000000	                              mov eax, 3	       460	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40007bd	              0x5d	                                 pop rbp	       498	testplug2.c	FUNCTION_9
0x40007be	            0x415c	                                 pop r12	       498	testplug2.c	FUNCTION_9
0x40007c0	              0xc3	                                     ret	       498	testplug2.c	FUNCTION_9
0x40007c1	    0x488b15000000	            mov rdx, qword [0x040007c8] 	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40007c8	          0x4885d2	                           test rdx, rdx	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40007cb	            0x74e3	                            je 0x40007b0	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40007cd	      0xbe00000000	                              mov esi, 0	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40007d2	      0xbf03000000	                              mov edi, 3	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40007d7	            0xffd2	                                call rdx	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40007d9	            0xebd5	                           jmp 0x40007b0	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40007db	        0x488d7804	                      lea rdi, [rax + 4]	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x40007df	      0xbe03000000	                              mov esi, 3	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x40007e4	      0xe8e7f8ffff	                    call sym.set_ret_val	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x40007e9	      0xe97afdffff	                           jmp 0x4000568	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x40007ee	    0x488b15000000	            mov rdx, qword [0x040007f5] 	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x40007f5	          0x4885d2	                           test rdx, rdx	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x40007f8	            0x74b6	                            je 0x40007b0	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x40007fa	      0xbe00000000	                              mov esi, 0	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x40007ff	      0xbf03000000	                              mov edi, 3	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000804	            0xffd2	                                call rdx	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000806	            0xeba8	                           jmp 0x40007b0	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000808	      0xbef8000000	                           mov esi, 0xf8	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x400080d	      0xbf00000000	                              mov edi, 0	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x4000812	      0xe859f8ffff	              call sym.record_claim_file	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x4000817	            0x85c0	                           test eax, eax	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x4000819	            0x752a	                           jne 0x4000845	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x400081b	    0x48833d000000	               cmp qword [0x04000823], 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000823	            0x7420	                            je 0x4000845	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000825	      0xbf00000000	                              mov edi, 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x400082a	      0xe8f1f9ffff	call sym.record_claimed_file_symbol.part.2	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x400082f	            0x85c0	                           test eax, eax	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000831	            0x7512	                           jne 0x4000845	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000833	      0xbf00000000	                              mov edi, 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000838	      0xe8e3f9ffff	call sym.record_claimed_file_symbol.part.2	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x400083d	            0x85c0	                           test eax, eax	       491	testplug2.c	FUNCTION_9	IF_10	CALL_7
0x400083f	     0xf84b5000000	                            je 0x40008fa	       491	testplug2.c	FUNCTION_9	IF_10	CALL_7
0x4000845	    0xc70500000000	               mov dword [0x0400084f], 3	       495	testplug2.c	FUNCTION_9	IF_10
0x400084f	      0xb803000000	                              mov eax, 3	       495	testplug2.c	FUNCTION_9	IF_10
0x4000854	      0xe9c0fdffff	                           jmp 0x4000619	       495	testplug2.c	FUNCTION_9	IF_10
0x4000859	      0xbe00000000	                              mov esi, 0	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x400085e	      0xb904000000	                              mov ecx, 4	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000863	          0x4889c7	                            mov rdi, rax	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000866	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000868	     0xf84e2000000	                            je 0x4000950	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x400086e	      0xbe00000000	                              mov esi, 0	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000873	      0xb904000000	                              mov ecx, 4	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000878	          0x4889c7	                            mov rdi, rax	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x400087b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x400087d	     0xf840c010000	                            je 0x400098f	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000883	      0xbe00000000	                              mov esi, 0	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000888	      0xb904000000	                              mov ecx, 4	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x400088d	          0x4889c7	                            mov rdi, rax	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000890	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000892	     0xf8436010000	                            je 0x40009ce	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000898	      0xbe00000000	                              mov esi, 0	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x400089d	      0xb910000000	                           mov ecx, 0x10	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40008a2	          0x4889c7	                            mov rdi, rax	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40008a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40008a7	     0xf8460010000	                            je 0x4000a0d	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40008ad	      0xb803000000	                              mov eax, 3	       495	testplug2.c	FUNCTION_9	IF_10
0x40008b2	      0xe962fdffff	                           jmp 0x4000619	       495	testplug2.c	FUNCTION_9	IF_10
0x40008b7	        0x488d7804	                      lea rdi, [rax + 4]	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x40008bb	            0x31f6	                            xor esi, esi	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x40008bd	      0xe80ef8ffff	                    call sym.set_ret_val	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x40008c2	      0xe9a1fcffff	                           jmp 0x4000568	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x40008c7	        0x488d7808	                      lea rdi, [rax + 8]	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x40008cb	      0xbe01000000	                              mov esi, 1	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x40008d0	      0xe89bf8ffff	              call sym.set_register_hook	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x40008d5	      0xe98efcffff	                           jmp 0x4000568	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x40008da	        0x488d780a	                    lea rdi, [rax + 0xa]	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40008de	            0x31f6	                            xor esi, esi	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40008e0	      0xe88bf8ffff	              call sym.set_register_hook	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40008e5	      0xe97efcffff	                           jmp 0x4000568	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40008ea	        0x488d7806	                      lea rdi, [rax + 6]	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40008ee	            0x31f6	                            xor esi, esi	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40008f0	      0xe87bf7ffff	              call sym.record_claim_file	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40008f5	      0xe96efcffff	                           jmp 0x4000568	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40008fa	      0xbef8000000	                           mov esi, 0xf8	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x40008ff	      0xbf00000000	                              mov edi, 0	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x4000904	      0xe867f7ffff	              call sym.record_claim_file	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x4000909	            0x85c0	                           test eax, eax	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x400090b	     0xf8534ffffff	                           jne 0x4000845	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x4000911	    0x48833d000000	               cmp qword [0x04000919], 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000919	     0xf8426ffffff	                            je 0x4000845	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x400091f	      0xbf00000000	                              mov edi, 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000924	      0xe8f7f8ffff	call sym.record_claimed_file_symbol.part.2	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000929	            0x85c0	                           test eax, eax	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x400092b	     0xf8514ffffff	                           jne 0x4000845	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000931	      0xbf00000000	                              mov edi, 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000936	      0xe8e5f8ffff	call sym.record_claimed_file_symbol.part.2	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x400093b	            0x85c0	                           test eax, eax	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x400093d	     0xf84d6fcffff	                            je 0x4000619	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x4000943	      0xe9fdfeffff	                           jmp 0x4000845	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x4000948	     0xf1f84000000	                   nop dword [rax + rax]	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x4000950	      0xbf18000000	                           mov edi, 0x18	       172	testplug2.c	FUNCTION_2	CALL_1
0x4000955	        0x4c8d6004	                      lea r12, [rax + 4]	       355	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10
0x4000959	      0xe800000000	                          call 0x400095e	       172	testplug2.c	FUNCTION_2	CALL_1
0x400095e	          0x4885c0	                           test rax, rax	       173	testplug2.c	FUNCTION_2	IF_1
0x4000961	     0xf8446ffffff	                            je 0x40008ad	       173	testplug2.c	FUNCTION_2	IF_1
0x4000967	    0x488b15000000	            mov rdx, qword [0x0400096e] 	       179	testplug2.c	FUNCTION_2
0x400096e	    0x48c700000000	                      mov qword [rax], 0	       175	testplug2.c	FUNCTION_2
0x4000975	        0x4c896008	                mov qword [rax + 8], r12	       176	testplug2.c	FUNCTION_2
0x4000979	    0xc74010000000	               mov dword [rax + 0x10], 0	       177	testplug2.c	FUNCTION_2
0x4000980	          0x488902	                    mov qword [rdx], rax	       179	testplug2.c	FUNCTION_2
0x4000983	    0x488905000000	            mov qword [0x0400098a], rax 	       180	testplug2.c	FUNCTION_2
0x400098a	      0xe9e9fbffff	                           jmp 0x4000578	       180	testplug2.c	FUNCTION_2
0x400098f	      0xbf18000000	                           mov edi, 0x18	       172	testplug2.c	FUNCTION_2	CALL_1
0x4000994	        0x4c8d6004	                      lea r12, [rax + 4]	       357	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11
0x4000998	      0xe800000000	                          call 0x400099d	       172	testplug2.c	FUNCTION_2	CALL_1
0x400099d	          0x4885c0	                           test rax, rax	       173	testplug2.c	FUNCTION_2	IF_1
0x40009a0	     0xf8407ffffff	                            je 0x40008ad	       173	testplug2.c	FUNCTION_2	IF_1
0x40009a6	    0x488b15000000	            mov rdx, qword [0x040009ad] 	       179	testplug2.c	FUNCTION_2
0x40009ad	    0x48c700000000	                      mov qword [rax], 0	       175	testplug2.c	FUNCTION_2
0x40009b4	        0x4c896008	                mov qword [rax + 8], r12	       176	testplug2.c	FUNCTION_2
0x40009b8	    0xc74010010000	               mov dword [rax + 0x10], 1	       177	testplug2.c	FUNCTION_2
0x40009bf	          0x488902	                    mov qword [rdx], rax	       179	testplug2.c	FUNCTION_2
0x40009c2	    0x488905000000	            mov qword [0x040009c9], rax 	       180	testplug2.c	FUNCTION_2
0x40009c9	      0xe9aafbffff	                           jmp 0x4000578	       180	testplug2.c	FUNCTION_2
0x40009ce	      0xbf18000000	                           mov edi, 0x18	       172	testplug2.c	FUNCTION_2	CALL_1
0x40009d3	        0x4c8d6004	                      lea r12, [rax + 4]	       359	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12
0x40009d7	      0xe800000000	                          call 0x40009dc	       172	testplug2.c	FUNCTION_2	CALL_1
0x40009dc	          0x4885c0	                           test rax, rax	       173	testplug2.c	FUNCTION_2	IF_1
0x40009df	     0xf84c8feffff	                            je 0x40008ad	       173	testplug2.c	FUNCTION_2	IF_1
0x40009e5	    0x488b15000000	            mov rdx, qword [0x040009ec] 	       179	testplug2.c	FUNCTION_2
0x40009ec	    0x48c700000000	                      mov qword [rax], 0	       175	testplug2.c	FUNCTION_2
0x40009f3	        0x4c896008	                mov qword [rax + 8], r12	       176	testplug2.c	FUNCTION_2
0x40009f7	    0xc74010020000	               mov dword [rax + 0x10], 2	       177	testplug2.c	FUNCTION_2
0x40009fe	          0x488902	                    mov qword [rdx], rax	       179	testplug2.c	FUNCTION_2
0x4000a01	    0x488905000000	            mov qword [0x04000a08], rax 	       180	testplug2.c	FUNCTION_2
0x4000a08	      0xe96bfbffff	                           jmp 0x4000578	       180	testplug2.c	FUNCTION_2
0x4000a0d	    0xc70500000000	               mov dword [0x04000a17], 1	       361	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13
0x4000a17	      0xe95cfbffff	                           jmp 0x4000578	       361	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13
