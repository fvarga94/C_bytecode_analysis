fill_window	DO,1:IF,12:CALL,9:ELSE,2:functions,0:SWITCH,0:WHILE,1:FOR,0	170
0x4000400	            0x4156	                                push r14	      1484	deflate.c	
0x4000402	            0x4155	                                push r13	      1484	deflate.c	
0x4000404	          0x4989fd	                            mov r13, rdi	      1484	deflate.c	
0x4000407	            0x4154	                                push r12	      1484	deflate.c	
0x4000409	              0x55	                                push rbp	      1484	deflate.c	
0x400040a	              0x53	                                push rbx	      1484	deflate.c	
0x400040b	        0x448b6750	           mov r12d, dword [rdi + 0x50] 	      1487	deflate.c	
0x400040f	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      1487	deflate.c	
0x4000415	    0x418dac24fafe	                  lea ebp, [r12 - 0x106]	      1487	deflate.c	
0x400041d	          0x4c89e3	                            mov rbx, r12	      1487	deflate.c	
0x4000420	          0x4489e2	                           mov edx, r12d	      1487	deflate.c	
0x4000423	       0xf1f440000	                   nop dword [rax + rax]	      1487	deflate.c	
0x4000428	        0x458b7568	           mov r14d, dword [r13 + 0x68] 	      1492	deflate.c	FUNCTION_19
0x400042c	    0x418b8dac0000	            mov ecx, dword [r13 + 0xac] 	      1492	deflate.c	FUNCTION_19
0x4000433	          0x4129c6	                           sub r14d, eax	      1492	deflate.c	FUNCTION_19
0x4000436	        0x8d441500	                    lea eax, [rbp + rdx]	      1510	deflate.c	FUNCTION_19	DO_1
0x400043a	          0x4129ce	                           sub r14d, ecx	      1492	deflate.c	FUNCTION_19
0x400043d	            0x39c1	                            cmp ecx, eax	      1510	deflate.c	FUNCTION_19	DO_1
0x400043f	     0xf8313010000	                           jae 0x4000558	      1510	deflate.c	FUNCTION_19	DO_1
0x4000445	        0x498b7d00	                    mov rdi, qword [r13]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000449	        0x448b4f08	                mov r9d, dword [rdi + 8]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x400044d	          0x4585c9	                           test r9d, r9d	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000450	     0xf844a010000	                            je 0x40005a0	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000456	    0x418bb5ac0000	            mov esi, dword [r13 + 0xac] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x400045d	    0x418b85b40000	            mov eax, dword [r13 + 0xb4] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x4000464	          0x4489f2	                           mov edx, r14d	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x4000467	          0x4801c6	                            add rsi, rax	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x400046a	        0x49037560	             add rsi, qword [r13 + 0x60]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x400046e	      0xe8fdfeffff	                       call sym.read_buf	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x4000473	    0x410385b40000	             add eax, dword [r13 + 0xb4]	      1535	deflate.c	FUNCTION_19	DO_1
0x400047a	    0x418bb52c1700	          mov esi, dword [r13 + 0x172c] 	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4000481	          0x8d1430	                    lea edx, [rax + rsi]	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4000484	    0x418985b40000	             mov dword [r13 + 0xb4], eax	      1535	deflate.c	FUNCTION_19	DO_1
0x400048b	          0x83fa02	                              cmp edx, 2	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x400048e	     0xf86a2000000	                           jbe 0x4000536	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4000494	    0x418bbdac0000	            mov edi, dword [r13 + 0xac] 	      1539	deflate.c	FUNCTION_19	DO_1
0x400049b	        0x4d8b4560	              mov r8, qword [r13 + 0x60]	      1540	deflate.c	FUNCTION_19	DO_1
0x400049f	    0x418b8d900000	            mov ecx, dword [r13 + 0x90] 	      1541	deflate.c	FUNCTION_19	DO_1
0x40004a6	    0x458b8d8c0000	            mov r9d, dword [r13 + 0x8c] 	      1541	deflate.c	FUNCTION_19	DO_1
0x40004ad	            0x29f7	                            sub edi, esi	      1539	deflate.c	FUNCTION_19	DO_1
0x40004af	            0x89fa	                            mov edx, edi	      1540	deflate.c	FUNCTION_19	DO_1
0x40004b1	        0x448d5701	                     lea r10d, [rdi + 1]	      1541	deflate.c	FUNCTION_19	DO_1
0x40004b5	      0x410fb61410	              movzx edx, byte [r8 + rdx]	      1540	deflate.c	FUNCTION_19	DO_1
0x40004ba	    0x418995800000	             mov dword [r13 + 0x80], edx	      1540	deflate.c	FUNCTION_19	DO_1
0x40004c1	      0x470fb61410	             movzx r10d, byte [r8 + r10]	      1541	deflate.c	FUNCTION_19	DO_1
0x40004c6	            0xd3e2	                             shl edx, cl	      1541	deflate.c	FUNCTION_19	DO_1
0x40004c8	          0x4431d2	                           xor edx, r10d	      1541	deflate.c	FUNCTION_19	DO_1
0x40004cb	          0x4421ca	                            and edx, r9d	      1541	deflate.c	FUNCTION_19	DO_1
0x40004ce	    0x418995800000	             mov dword [r13 + 0x80], edx	      1541	deflate.c	FUNCTION_19	DO_1
0x40004d5	            0xeb5b	                           jmp 0x4000532	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004d7	    0x660f1f840000	                    nop word [rax + rax]	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004e0	          0x8d5702	                      lea edx, [rdi + 2]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004e3	          0x4189fb	                           mov r11d, edi	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004e6	        0x45235d58	            and r11d, dword [r13 + 0x58]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004ea	          0x83ee01	                              sub esi, 1	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004ed	      0x450fb61410	             movzx r10d, byte [r8 + rdx]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004f2	    0x418b95800000	            mov edx, dword [r13 + 0x80] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004f9	            0xd3e2	                             shl edx, cl	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004fb	          0x4431d2	                           xor edx, r10d	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004fe	        0x4d8b5578	            mov r10, qword [r13 + 0x78] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000502	          0x4421ca	                            and edx, r9d	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000505	    0x418995800000	             mov dword [r13 + 0x80], edx	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x400050c	        0x498d1452	                  lea rdx, [r10 + rdx*2]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000510	        0x4d8b5570	            mov r10, qword [r13 + 0x70] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000514	        0x440fb732	                  movzx r14d, word [rdx]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000518	      0x664789345a	            mov word [r10 + r11*2], r14w	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x400051d	          0x66893a	                      mov word [rdx], di	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000520	          0x8d1430	                    lea edx, [rax + rsi]	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000523	          0x83c701	                              add edi, 1	      1551	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000526	    0x4189b52c1700	          mov dword [r13 + 0x172c], esi 	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x400052d	          0x83fa02	                              cmp edx, 2	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000530	            0x7604	                           jbe 0x4000536	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000532	            0x85f6	                           test esi, esi	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000534	            0x75aa	                           jne 0x40004e0	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000536	      0x3d05010000	                          cmp eax, 0x105	      1561	deflate.c	FUNCTION_19	DO_1
0x400053b	            0x7763	                            ja 0x40005a0	      1561	deflate.c	FUNCTION_19	DO_1
0x400053d	        0x498b5500	                    mov rdx, qword [r13]	      1561	deflate.c	FUNCTION_19	DO_1
0x4000541	        0x448b4208	                mov r8d, dword [rdx + 8]	      1561	deflate.c	FUNCTION_19	DO_1
0x4000545	          0x4585c0	                           test r8d, r8d	      1561	deflate.c	FUNCTION_19	DO_1
0x4000548	            0x7456	                            je 0x40005a0	      1561	deflate.c	FUNCTION_19	DO_1
0x400054a	        0x418b5550	            mov edx, dword [r13 + 0x50] 	      1561	deflate.c	FUNCTION_19	DO_1
0x400054e	      0xe9d5feffff	                           jmp 0x4000428	      1561	deflate.c	FUNCTION_19	DO_1
0x4000553	       0xf1f440000	                   nop dword [rax + rax]	      1561	deflate.c	FUNCTION_19	DO_1
0x4000558	        0x498b7d60	            mov rdi, qword [r13 + 0x60] 	      1512	deflate.c	FUNCTION_19	DO_1
0x400055c	            0x89da	                            mov edx, ebx	        53	string3.h	FUNCTION_25	CALL_3
0x400055e	          0x4429f2	                           sub edx, r14d	        53	string3.h	FUNCTION_25	CALL_3
0x4000561	          0x4101de	                           add r14d, ebx	      1517	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000564	        0x4a8d3427	                    lea rsi, [rdi + r12]	        53	string3.h	FUNCTION_25	CALL_3
0x4000568	      0xe800000000	                          call 0x400056d	        53	string3.h	FUNCTION_25	CALL_3
0x400056d	    0x41299db00000	             sub dword [r13 + 0xb0], ebx	      1513	deflate.c	FUNCTION_19	DO_1
0x4000574	    0x41299dac0000	             sub dword [r13 + 0xac], ebx	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400057b	          0x4c89ef	                            mov rdi, r13	      1516	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_3
0x400057e	    0x4d29a5980000	             sub qword [r13 + 0x98], r12	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000585	      0xe8b6faffff	                     call sym.slide_hash	      1516	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_3
0x400058a	        0x498b7d00	                    mov rdi, qword [r13]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x400058e	        0x448b4f08	                mov r9d, dword [rdi + 8]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000592	          0x4585c9	                           test r9d, r9d	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000595	     0xf85bbfeffff	                           jne 0x4000456	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x400059b	       0xf1f440000	                   nop dword [rax + rax]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x40005a0	    0x498b8d381700	          mov rcx, qword [r13 + 0x1738] 	      1570	deflate.c	FUNCTION_19	DO_1
0x40005a7	        0x498b4568	            mov rax, qword [r13 + 0x68] 	      1570	deflate.c	FUNCTION_19	DO_1
0x40005ab	          0x4839c1	                            cmp rcx, rax	      1570	deflate.c	FUNCTION_19	DO_1
0x40005ae	            0x7357	                           jae 0x4000607	      1570	deflate.c	FUNCTION_19	DO_1
0x40005b0	    0x418bb5ac0000	            mov esi, dword [r13 + 0xac] 	      1571	deflate.c	FUNCTION_19	DO_1
0x40005b7	    0x418b95b40000	            mov edx, dword [r13 + 0xb4] 	      1571	deflate.c	FUNCTION_19	DO_1
0x40005be	          0x4801d6	                            add rsi, rdx	      1571	deflate.c	FUNCTION_19	DO_1
0x40005c1	          0x4839f1	                            cmp rcx, rsi	      1574	deflate.c	FUNCTION_19	IF_8
0x40005c4	            0x734a	                           jae 0x4000610	      1574	deflate.c	FUNCTION_19	IF_8
0x40005c6	          0x4829f0	                            sub rax, rsi	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x40005c9	      0xba02010000	                          mov edx, 0x102	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x40005ce	    0x483d02010000	                          cmp rax, 0x102	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x40005d4	        0x480f46d0	                         cmovbe rdx, rax	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x40005d8	          0x4889f0	                            mov rax, rsi	        90	string3.h	FUNCTION_28	CALL_6
0x40005db	        0x49034560	             add rax, qword [r13 + 0x60]	        90	string3.h	FUNCTION_28	CALL_6
0x40005df	          0x83fa08	                              cmp edx, 8	        90	string3.h	FUNCTION_28	CALL_6
0x40005e2	            0x736c	                           jae 0x4000650	        90	string3.h	FUNCTION_28	CALL_6
0x40005e4	          0xf6c204	                              test dl, 4	        90	string3.h	FUNCTION_28	CALL_6
0x40005e7	     0xf858d000000	                           jne 0x400067a	        90	string3.h	FUNCTION_28	CALL_6
0x40005ed	            0x85d2	                           test edx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x40005ef	            0x740c	                            je 0x40005fd	        90	string3.h	FUNCTION_28	CALL_6
0x40005f1	          0xf6c202	                              test dl, 2	        90	string3.h	FUNCTION_28	CALL_6
0x40005f4	          0xc60000	                       mov byte [rax], 0	        90	string3.h	FUNCTION_28	CALL_6
0x40005f7	     0xf8592000000	                           jne 0x400068f	        90	string3.h	FUNCTION_28	CALL_6
0x40005fd	          0x4801f2	                            add rdx, rsi	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000600	    0x498995381700	          mov qword [r13 + 0x1738], rdx 	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000607	              0x5b	                                 pop rbx	      1599	deflate.c	FUNCTION_19	IF_8
0x4000608	              0x5d	                                 pop rbp	      1599	deflate.c	FUNCTION_19	IF_8
0x4000609	            0x415c	                                 pop r12	      1599	deflate.c	FUNCTION_19	IF_8
0x400060b	            0x415d	                                 pop r13	      1599	deflate.c	FUNCTION_19	IF_8
0x400060d	            0x415e	                                 pop r14	      1599	deflate.c	FUNCTION_19	IF_8
0x400060f	              0xc3	                                     ret	      1599	deflate.c	FUNCTION_19	IF_8
0x4000610	    0x488d96020100	                  lea rdx, [rsi + 0x102]	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x4000617	          0x4839d1	                            cmp rcx, rdx	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x400061a	            0x73eb	                           jae 0x4000607	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x400061c	          0x4829ce	                            sub rsi, rcx	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400061f	          0x4829c8	                            sub rax, rcx	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4000622	    0x488d9e020100	                  lea rbx, [rsi + 0x102]	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4000629	          0x4839c3	                            cmp rbx, rax	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400062c	        0x480f47d8	                          cmova rbx, rax	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4000630	        0x49034d60	             add rcx, qword [r13 + 0x60]	        90	string3.h	FUNCTION_28	CALL_6
0x4000634	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x4000636	            0x89da	                            mov edx, ebx	        90	string3.h	FUNCTION_28	CALL_6
0x4000638	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_28	CALL_6
0x400063b	      0xe800000000	                          call 0x4000640	        90	string3.h	FUNCTION_28	CALL_6
0x4000640	    0x49019d381700	          add qword [r13 + 0x1738], rbx 	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4000647	              0x5b	                                 pop rbx	      1599	deflate.c	FUNCTION_19	IF_8
0x4000648	              0x5d	                                 pop rbp	      1599	deflate.c	FUNCTION_19	IF_8
0x4000649	            0x415c	                                 pop r12	      1599	deflate.c	FUNCTION_19	IF_8
0x400064b	            0x415d	                                 pop r13	      1599	deflate.c	FUNCTION_19	IF_8
0x400064d	            0x415e	                                 pop r14	      1599	deflate.c	FUNCTION_19	IF_8
0x400064f	              0xc3	                                     ret	      1599	deflate.c	FUNCTION_19	IF_8
0x4000650	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_28	CALL_6
0x4000654	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x4000656	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_28	CALL_6
0x400065d	    0x48c74408f800	            mov qword [rax + rcx - 8], 0	        90	string3.h	FUNCTION_28	CALL_6
0x4000666	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_28	CALL_6
0x400066a	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_28	CALL_6
0x400066d	          0x8d0c02	                    lea ecx, [rdx + rax]	        90	string3.h	FUNCTION_28	CALL_6
0x4000670	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_28	CALL_6
0x4000672	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_28	CALL_6
0x4000675	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_28	CALL_6
0x4000678	            0xeb83	                           jmp 0x40005fd	        90	string3.h	FUNCTION_28	CALL_6
0x400067a	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x400067c	    0xc70000000000	                      mov dword [rax], 0	        90	string3.h	FUNCTION_28	CALL_6
0x4000682	    0xc74408fc0000	            mov dword [rax + rcx - 4], 0	        90	string3.h	FUNCTION_28	CALL_6
0x400068a	      0xe96effffff	                           jmp 0x40005fd	        90	string3.h	FUNCTION_28	CALL_6
0x400068f	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_28	CALL_6
0x4000691	            0x31ff	                            xor edi, edi	        90	string3.h	FUNCTION_28	CALL_6
0x4000693	      0x66897c08fe	            mov word [rax + rcx - 2], di	        90	string3.h	FUNCTION_28	CALL_6
0x4000698	      0xe960ffffff	                           jmp 0x40005fd	        90	string3.h	FUNCTION_28	CALL_6
deflate_stored	DO,1:IF,20:CALL,11:ELSE,1:functions,0:SWITCH,0:WHILE,0:FOR,0	334
0x4001120	            0x4157	                                push r15	      1646	deflate.c	
0x4001122	            0x4156	                                push r14	      1646	deflate.c	
0x4001124	            0x4155	                                push r13	      1646	deflate.c	
0x4001126	            0x4154	                                push r12	      1646	deflate.c	
0x4001128	          0x4189f4	                           mov r12d, esi	      1646	deflate.c	
0x400112b	              0x55	                                push rbp	      1646	deflate.c	
0x400112c	              0x53	                                push rbx	      1646	deflate.c	
0x400112d	          0x4889fb	                            mov rbx, rdi	      1646	deflate.c	
0x4001130	        0x4883ec28	                           sub rsp, 0x28	      1646	deflate.c	
0x4001134	        0x448b6f50	           mov r13d, dword [rdi + 0x50] 	      1651	deflate.c	FUNCTION_20
0x4001138	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1651	deflate.c	FUNCTION_20
0x400113c	          0x488b3f	                    mov rdi, qword [rdi]	      1658	deflate.c	FUNCTION_20
0x400113f	        0x4883e805	                              sub rax, 5	      1651	deflate.c	FUNCTION_20
0x4001143	          0x4c39e8	                            cmp rax, r13	      1651	deflate.c	FUNCTION_20
0x4001146	        0x4c0f46e8	                         cmovbe r13, rax	      1651	deflate.c	FUNCTION_20
0x400114a	          0x8b4708	                mov eax, dword [rdi + 8]	      1658	deflate.c	FUNCTION_20
0x400114d	        0x4c892c24	                    mov qword [rsp], r13	      1651	deflate.c	FUNCTION_20
0x4001151	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1658	deflate.c	FUNCTION_20
0x4001155	            0x89c1	                            mov ecx, eax	      1658	deflate.c	FUNCTION_20
0x4001157	            0xeb1e	                           jmp 0x4001177	      1658	deflate.c	FUNCTION_20
0x4001159	     0xf1f80000000	                         nop dword [rax]	      1658	deflate.c	FUNCTION_20
0x4001160	          0x4585ff	                         test r15d, r15d	      1722	deflate.c	FUNCTION_20	DO_1
0x4001163	          0x488b3b	                    mov rdi, qword [rbx]	      1722	deflate.c	FUNCTION_20	DO_1
0x4001166	     0xf853f010000	                           jne 0x40012ab	      1722	deflate.c	FUNCTION_20	DO_1
0x400116c	            0x85ed	                           test ebp, ebp	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x400116e	          0x8b4f08	                mov ecx, dword [rdi + 8]	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001171	     0xf855d010000	                           jne 0x40012d4	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001177	    0x8b8334170000	          mov eax, dword [rbx + 0x1734] 	      1665	deflate.c	FUNCTION_20	DO_1
0x400117d	        0x448b4720	            mov r8d, dword [rdi + 0x20] 	      1666	deflate.c	FUNCTION_20	DO_1
0x4001181	          0x83c02a	                           add eax, 0x2a	      1665	deflate.c	FUNCTION_20	DO_1
0x4001184	          0xc1f803	                              sar eax, 3	      1665	deflate.c	FUNCTION_20	DO_1
0x4001187	          0x4439c0	                            cmp eax, r8d	      1666	deflate.c	FUNCTION_20	DO_1
0x400118a	     0xf87e8010000	                            ja 0x4001378	      1666	deflate.c	FUNCTION_20	DO_1
0x4001190	          0x4129c0	                            sub r8d, eax	      1669	deflate.c	FUNCTION_20	DO_1
0x4001193	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x4001199	    0x2b8398000000	             sub eax, dword [rbx + 0x98]	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x400119f	            0x89ca	                            mov edx, ecx	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40011a1	            0x89c6	                            mov esi, eax	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40011a3	          0x4801f2	                            add rdx, rsi	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x40011a6	          0x4989f5	                            mov r13, rsi	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x40011a9	          0x8d340e	                    lea esi, [rsi + rcx]	      1672	deflate.c	FUNCTION_20	DO_1
0x40011ac	    0x4881fafeff00	                         cmp rdx, 0xfffe	      1672	deflate.c	FUNCTION_20	DO_1
0x40011b3	      0xbaffff0000	                         mov edx, 0xffff	      1672	deflate.c	FUNCTION_20	DO_1
0x40011b8	           0xf46d6	                         cmovbe edx, esi	      1672	deflate.c	FUNCTION_20	DO_1
0x40011bb	          0x4439c2	                            cmp edx, r8d	      1672	deflate.c	FUNCTION_20	DO_1
0x40011be	        0x440f46c2	                         cmovbe r8d, edx	      1672	deflate.c	FUNCTION_20	DO_1
0x40011c2	        0x44390424	                    cmp dword [rsp], r8d	      1681	deflate.c	FUNCTION_20	DO_1
0x40011c6	          0x4589c7	                           mov r15d, r8d	      1681	deflate.c	FUNCTION_20	DO_1
0x40011c9	            0x7629	                           jbe 0x40011f4	      1681	deflate.c	FUNCTION_20	DO_1
0x40011cb	          0x4585c0	                           test r8d, r8d	      1681	deflate.c	FUNCTION_20	DO_1
0x40011ce	        0x410f94c1	                                sete r9b	      1681	deflate.c	FUNCTION_20	DO_1
0x40011d2	        0x4183fc04	                             cmp r12d, 4	      1681	deflate.c	FUNCTION_20	DO_1
0x40011d6	           0xf95c2	                                setne dl	      1681	deflate.c	FUNCTION_20	DO_1
0x40011d9	          0x4184d1	                            test r9b, dl	      1681	deflate.c	FUNCTION_20	DO_1
0x40011dc	     0xf8596010000	                           jne 0x4001378	      1681	deflate.c	FUNCTION_20	DO_1
0x40011e2	          0x4585e4	                         test r12d, r12d	      1681	deflate.c	FUNCTION_20	DO_1
0x40011e5	     0xf848d010000	                            je 0x4001378	      1681	deflate.c	FUNCTION_20	DO_1
0x40011eb	          0x4439c6	                            cmp esi, r8d	      1682	deflate.c	FUNCTION_20	DO_1
0x40011ee	     0xf8584010000	                           jne 0x4001378	      1682	deflate.c	FUNCTION_20	DO_1
0x40011f4	            0x31ed	                            xor ebp, ebp	      1689	deflate.c	FUNCTION_20	DO_1
0x40011f6	        0x4183fc04	                             cmp r12d, 4	      1689	deflate.c	FUNCTION_20	DO_1
0x40011fa	     0xf8460010000	                            je 0x4001360	      1689	deflate.c	FUNCTION_20	DO_1
0x4001200	            0x31d2	                            xor edx, edx	      1690	deflate.c	FUNCTION_20	DO_1
0x4001202	            0x31f6	                            xor esi, esi	      1690	deflate.c	FUNCTION_20	DO_1
0x4001204	            0x89e9	                            mov ecx, ebp	      1690	deflate.c	FUNCTION_20	DO_1
0x4001206	          0x4889df	                            mov rdi, rbx	      1690	deflate.c	FUNCTION_20	DO_1
0x4001209	      0xe800000000	                          call 0x400120e	      1690	deflate.c	FUNCTION_20	DO_1
0x400120e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1693	deflate.c	FUNCTION_20	DO_1
0x4001212	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1693	deflate.c	FUNCTION_20	DO_1
0x4001216	          0x4489fe	                           mov esi, r15d	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4001219	          0xc1ee08	                              shr esi, 8	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x400121c	      0x44887c11fc	          mov byte [rcx + rdx - 4], r15b	      1693	deflate.c	FUNCTION_20	DO_1
0x4001221	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4001225	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4001229	      0x40887411fd	           mov byte [rcx + rdx - 3], sil	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x400122e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1695	deflate.c	FUNCTION_20	DO_1
0x4001232	          0x4489fe	                           mov esi, r15d	      1695	deflate.c	FUNCTION_20	DO_1
0x4001235	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1695	deflate.c	FUNCTION_20	DO_1
0x4001239	            0xf7d6	                                 not esi	      1695	deflate.c	FUNCTION_20	DO_1
0x400123b	      0x40887411fe	           mov byte [rcx + rdx - 2], sil	      1695	deflate.c	FUNCTION_20	DO_1
0x4001240	          0x4489fa	                           mov edx, r15d	      1696	deflate.c	FUNCTION_20	DO_1
0x4001243	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1696	deflate.c	FUNCTION_20	DO_1
0x4001247	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      1696	deflate.c	FUNCTION_20	DO_1
0x400124b	            0xf7d2	                                 not edx	      1696	deflate.c	FUNCTION_20	DO_1
0x400124d	          0xc1ea08	                              shr edx, 8	      1696	deflate.c	FUNCTION_20	DO_1
0x4001250	        0x88540eff	            mov byte [rsi + rcx - 1], dl	      1696	deflate.c	FUNCTION_20	DO_1
0x4001254	          0x488b3b	                    mov rdi, qword [rbx]	      1699	deflate.c	FUNCTION_20	DO_1
0x4001257	      0xe844f4ffff	                  call sym.flush_pending	      1699	deflate.c	FUNCTION_20	DO_1
0x400125c	          0x4585ed	                         test r13d, r13d	      1708	deflate.c	FUNCTION_20	DO_1
0x400125f	     0xf84fbfeffff	                            je 0x4001160	      1708	deflate.c	FUNCTION_20	DO_1
0x4001265	          0x488b03	                    mov rax, qword [rbx]	      1711	deflate.c	FUNCTION_20	DO_1
0x4001268	          0x4539fd	                          cmp r13d, r15d	      1711	deflate.c	FUNCTION_20	DO_1
0x400126b	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001272	        0x450f47ef	                        cmova r13d, r15d	        53	string3.h	FUNCTION_25	CALL_3
0x4001276	        0x48037360	             add rsi, qword [rbx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x400127a	          0x4589ee	                          mov r14d, r13d	      1711	deflate.c	FUNCTION_20	DO_1
0x400127d	          0x4529ef	                          sub r15d, r13d	      1716	deflate.c	FUNCTION_20	DO_1	IF_5
0x4001280	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001284	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_25	CALL_3
0x4001287	      0xe800000000	                          call 0x400128c	        53	string3.h	FUNCTION_25	CALL_3
0x400128c	          0x488b3b	                    mov rdi, qword [rbx]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x400128f	        0x4c017718	            add qword [rdi + 0x18], r14 	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x4001293	        0x44296f20	            sub dword [rdi + 0x20], r13d	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4001297	        0x4c017728	            add qword [rdi + 0x28], r14 	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x400129b	    0x4c01b3980000	            add qword [rbx + 0x98], r14 	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x40012a2	          0x4585ff	                         test r15d, r15d	      1722	deflate.c	FUNCTION_20	DO_1
0x40012a5	     0xf84c1feffff	                            je 0x400116c	      1722	deflate.c	FUNCTION_20	DO_1
0x40012ab	          0x4489fa	                           mov edx, r15d	      1723	deflate.c	FUNCTION_20	DO_1
0x40012ae	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1723	deflate.c	FUNCTION_20	DO_1
0x40012b2	      0xe8b9f0ffff	                       call sym.read_buf	      1723	deflate.c	FUNCTION_20	DO_1
0x40012b7	          0x488b3b	                    mov rdi, qword [rbx]	      1724	deflate.c	FUNCTION_20	DO_1
0x40012ba	          0x4489f8	                           mov eax, r15d	      1724	deflate.c	FUNCTION_20	DO_1
0x40012bd	        0x44297f20	            sub dword [rdi + 0x20], r15d	      1725	deflate.c	FUNCTION_20	DO_1
0x40012c1	        0x48014718	            add qword [rdi + 0x18], rax 	      1724	deflate.c	FUNCTION_20	DO_1
0x40012c5	          0x8b4f08	                mov ecx, dword [rdi + 8]	      1724	deflate.c	FUNCTION_20	DO_1
0x40012c8	        0x48014728	            add qword [rdi + 0x28], rax 	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x40012cc	            0x85ed	                           test ebp, ebp	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x40012ce	     0xf84a3feffff	                            je 0x4001177	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x40012d4	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	      1737	deflate.c	FUNCTION_20
0x40012d9	      0xbd01000000	                              mov ebp, 1	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x40012de	          0x4129cf	                           sub r15d, ecx	      1737	deflate.c	FUNCTION_20
0x40012e1	     0xf84a1000000	                            je 0x4001388	      1737	deflate.c	FUNCTION_20
0x40012e7	          0x8b4b50	            mov ecx, dword [rbx + 0x50] 	      1741	deflate.c	FUNCTION_20	IF_8
0x40012ea	          0x4139cf	                           cmp r15d, ecx	      1741	deflate.c	FUNCTION_20	IF_8
0x40012ed	     0xf8304020000	                           jae 0x40014f7	      1741	deflate.c	FUNCTION_20	IF_8
0x40012f3	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40012f9	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40012fd	          0x4589fd	                          mov r13d, r15d	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4001300	          0x4829c2	                            sub rdx, rax	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4001303	          0x4889c6	                            mov rsi, rax	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4001306	          0x4c39ea	                            cmp rdx, r13	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x4001309	     0xf8613020000	                           jbe 0x4001522	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x400130f	        0x48034360	             add rax, qword [rbx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x4001313	          0x488b37	                    mov rsi, qword [rdi]	        53	string3.h	FUNCTION_25	CALL_3
0x4001316	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_25	CALL_3
0x4001319	          0x4c29ee	                            sub rsi, r13	        53	string3.h	FUNCTION_25	CALL_3
0x400131c	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_25	CALL_3
0x400131f	      0xe800000000	                          call 0x4001324	        53	string3.h	FUNCTION_25	CALL_3
0x4001324	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x400132a	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x400132d	          0x4401fa	                           add edx, r15d	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x4001330	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x4001336	    0x8b8b2c170000	          mov ecx, dword [rbx + 0x172c] 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x400133c	            0x89d7	                            mov edi, edx	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400133e	    0x4889bb980000	             mov qword [rbx + 0x98], rdi	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001345	            0x29c8	                            sub eax, ecx	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001347	          0x4439f8	                           cmp eax, r15d	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x400134a	        0x410f47c7	                         cmova eax, r15d	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x400134e	             0x1c8	                            add eax, ecx	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001350	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001356	            0xeb36	                           jmp 0x400138e	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001358	     0xf1f84000000	                   nop dword [rax + rax]	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001360	          0x4401e9	                           add ecx, r13d	      1689	deflate.c	FUNCTION_20	DO_1
0x4001363	            0x31ed	                            xor ebp, ebp	      1689	deflate.c	FUNCTION_20	DO_1
0x4001365	          0x4439f9	                           cmp ecx, r15d	      1689	deflate.c	FUNCTION_20	DO_1
0x4001368	        0x400f94c5	                                sete bpl	      1689	deflate.c	FUNCTION_20	DO_1
0x400136c	      0xe98ffeffff	                           jmp 0x4001200	      1689	deflate.c	FUNCTION_20	DO_1
0x4001371	     0xf1f80000000	                         nop dword [rax]	      1689	deflate.c	FUNCTION_20	DO_1
0x4001378	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	      1737	deflate.c	FUNCTION_20
0x400137d	            0x31ed	                            xor ebp, ebp	      1737	deflate.c	FUNCTION_20
0x400137f	          0x4129cf	                           sub r15d, ecx	      1737	deflate.c	FUNCTION_20
0x4001382	     0xf855fffffff	                           jne 0x40012e7	      1737	deflate.c	FUNCTION_20
0x4001388	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1737	deflate.c	FUNCTION_20
0x400138e	            0x89d1	                            mov ecx, edx	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4001390	    0x48398b381700	          cmp qword [rbx + 0x1738], rcx 	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4001397	          0x4889ce	                            mov rsi, rcx	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400139a	            0x7307	                           jae 0x40013a3	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400139c	    0x48898b381700	          mov qword [rbx + 0x1738], rcx 	      1761	deflate.c	FUNCTION_20	IF_8
0x40013a3	            0x85ed	                           test ebp, ebp	      1764	deflate.c	FUNCTION_20	IF_12
0x40013a5	      0xb803000000	                              mov eax, 3	      1765	deflate.c	FUNCTION_20	IF_12
0x40013aa	            0x7414	                            je 0x40013c0	      1764	deflate.c	FUNCTION_20	IF_12
0x40013ac	        0x4883c428	                           add rsp, 0x28	      1815	deflate.c	FUNCTION_20	IF_20
0x40013b0	              0x5b	                                 pop rbx	      1815	deflate.c	FUNCTION_20	IF_20
0x40013b1	              0x5d	                                 pop rbp	      1815	deflate.c	FUNCTION_20	IF_20
0x40013b2	            0x415c	                                 pop r12	      1815	deflate.c	FUNCTION_20	IF_20
0x40013b4	            0x415d	                                 pop r13	      1815	deflate.c	FUNCTION_20	IF_20
0x40013b6	            0x415e	                                 pop r14	      1815	deflate.c	FUNCTION_20	IF_20
0x40013b8	            0x415f	                                 pop r15	      1815	deflate.c	FUNCTION_20	IF_20
0x40013ba	              0xc3	                                     ret	      1815	deflate.c	FUNCTION_20	IF_20
0x40013bb	       0xf1f440000	                   nop dword [rax + rax]	      1815	deflate.c	FUNCTION_20	IF_20
0x40013c0	          0x488b3b	                    mov rdi, qword [rbx]	      1769	deflate.c	FUNCTION_20	IF_13
0x40013c3	    0x41f7c4fbffff	                   test r12d, 0xfffffffb	      1768	deflate.c	FUNCTION_20	IF_13
0x40013ca	          0x8b4708	                mov eax, dword [rdi + 8]	      1769	deflate.c	FUNCTION_20	IF_13
0x40013cd	     0xf84d5000000	                            je 0x40014a8	      1768	deflate.c	FUNCTION_20	IF_13
0x40013d3	            0x85c0	                           test eax, eax	      1768	deflate.c	FUNCTION_20	IF_13
0x40013d5	     0xf85cd000000	                           jne 0x40014a8	      1768	deflate.c	FUNCTION_20	IF_13
0x40013db	    0x483b8b980000	            cmp rcx, qword [rbx + 0x98] 	      1769	deflate.c	FUNCTION_20	IF_13
0x40013e2	     0xf84b0010000	                            je 0x4001598	      1769	deflate.c	FUNCTION_20	IF_13
0x40013e8	    0x4839b3381700	          cmp qword [rbx + 0x1738], rsi 	      1789	deflate.c	FUNCTION_20	IF_18
0x40013ef	            0x7307	                           jae 0x40013f8	      1789	deflate.c	FUNCTION_20	IF_18
0x40013f1	    0x4889b3381700	          mov qword [rbx + 0x1738], rsi 	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x40013f8	    0x8b8334170000	          mov eax, dword [rbx + 0x1734] 	      1799	deflate.c	FUNCTION_20
0x40013fe	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1799	deflate.c	FUNCTION_20
0x4001402	      0xb9ffff0000	                         mov ecx, 0xffff	      1799	deflate.c	FUNCTION_20
0x4001407	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	      1801	deflate.c	FUNCTION_20
0x400140e	          0x83c02a	                           add eax, 0x2a	      1799	deflate.c	FUNCTION_20
0x4001411	          0xc1f803	                              sar eax, 3	      1799	deflate.c	FUNCTION_20
0x4001414	          0x4829c7	                            sub rdi, rax	      1799	deflate.c	FUNCTION_20
0x4001417	    0x4881ffffff00	                         cmp rdi, 0xffff	      1799	deflate.c	FUNCTION_20
0x400141e	          0x4889f8	                            mov rax, rdi	      1799	deflate.c	FUNCTION_20
0x4001421	        0x480f47c1	                          cmova rax, rcx	      1799	deflate.c	FUNCTION_20
0x4001425	            0x29f2	                            sub edx, esi	      1801	deflate.c	FUNCTION_20
0x4001427	          0x394350	            cmp dword [rbx + 0x50], eax 	      1802	deflate.c	FUNCTION_20
0x400142a	            0x89c1	                            mov ecx, eax	      1799	deflate.c	FUNCTION_20
0x400142c	         0xf464350	          cmovbe eax, dword [rbx + 0x50]	      1802	deflate.c	FUNCTION_20
0x4001430	            0x39d0	                            cmp eax, edx	      1802	deflate.c	FUNCTION_20
0x4001432	            0x762c	                           jbe 0x4001460	      1802	deflate.c	FUNCTION_20
0x4001434	            0x85d2	                           test edx, edx	      1803	deflate.c	FUNCTION_20
0x4001436	        0x400f95c7	                               setne dil	      1803	deflate.c	FUNCTION_20
0x400143a	        0x4183fc04	                             cmp r12d, 4	      1803	deflate.c	FUNCTION_20
0x400143e	           0xf94c0	                                 sete al	      1803	deflate.c	FUNCTION_20
0x4001441	          0x4008c7	                              or dil, al	      1803	deflate.c	FUNCTION_20
0x4001444	            0x744d	                            je 0x4001493	      1803	deflate.c	FUNCTION_20
0x4001446	          0x4585e4	                         test r12d, r12d	      1803	deflate.c	FUNCTION_20
0x4001449	            0x7448	                            je 0x4001493	      1803	deflate.c	FUNCTION_20
0x400144b	          0x488b03	                    mov rax, qword [rbx]	      1804	deflate.c	FUNCTION_20
0x400144e	          0x8b7808	                mov edi, dword [rax + 8]	      1804	deflate.c	FUNCTION_20
0x4001451	            0x85ff	                           test edi, edi	      1804	deflate.c	FUNCTION_20
0x4001453	            0x753e	                           jne 0x4001493	      1804	deflate.c	FUNCTION_20
0x4001455	            0x39d1	                            cmp ecx, edx	      1804	deflate.c	FUNCTION_20
0x4001457	            0x723a	                            jb 0x4001493	      1804	deflate.c	FUNCTION_20
0x4001459	     0xf1f80000000	                         nop dword [rax]	      1804	deflate.c	FUNCTION_20
0x4001460	            0x39d1	                            cmp ecx, edx	      1805	deflate.c	FUNCTION_20
0x4001462	            0x89c8	                            mov eax, ecx	      1805	deflate.c	FUNCTION_20
0x4001464	           0xf47c2	                          cmova eax, edx	      1805	deflate.c	FUNCTION_20
0x4001467	        0x4183fc04	                             cmp r12d, 4	      1807	deflate.c	FUNCTION_20	IF_20
0x400146b	     0xf8431010000	                            je 0x40015a2	      1807	deflate.c	FUNCTION_20	IF_20
0x4001471	        0x48037360	             add rsi, qword [rbx + 0x60]	      1808	deflate.c	FUNCTION_20	IF_20
0x4001475	            0x89c5	                            mov ebp, eax	      1808	deflate.c	FUNCTION_20	IF_20
0x4001477	          0x4889df	                            mov rdi, rbx	      1808	deflate.c	FUNCTION_20	IF_20
0x400147a	            0x31c9	                            xor ecx, ecx	      1808	deflate.c	FUNCTION_20	IF_20
0x400147c	          0x4889ea	                            mov rdx, rbp	      1808	deflate.c	FUNCTION_20	IF_20
0x400147f	      0xe800000000	                          call 0x4001484	      1808	deflate.c	FUNCTION_20	IF_20
0x4001484	    0x4801ab980000	            add qword [rbx + 0x98], rbp 	      1809	deflate.c	FUNCTION_20	IF_20
0x400148b	          0x488b3b	                    mov rdi, qword [rbx]	      1810	deflate.c	FUNCTION_20	IF_20
0x400148e	      0xe80df2ffff	                  call sym.flush_pending	      1810	deflate.c	FUNCTION_20	IF_20
0x4001493	        0x4883c428	                           add rsp, 0x28	      1815	deflate.c	FUNCTION_20	IF_20
0x4001497	            0x31c0	                            xor eax, eax	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4001499	              0x5b	                                 pop rbx	      1815	deflate.c	FUNCTION_20	IF_20
0x400149a	              0x5d	                                 pop rbp	      1815	deflate.c	FUNCTION_20	IF_20
0x400149b	            0x415c	                                 pop r12	      1815	deflate.c	FUNCTION_20	IF_20
0x400149d	            0x415d	                                 pop r13	      1815	deflate.c	FUNCTION_20	IF_20
0x400149f	            0x415e	                                 pop r14	      1815	deflate.c	FUNCTION_20	IF_20
0x40014a1	            0x415f	                                 pop r15	      1815	deflate.c	FUNCTION_20	IF_20
0x40014a3	              0xc3	                                     ret	      1815	deflate.c	FUNCTION_20	IF_20
0x40014a4	         0xf1f4000	                         nop dword [rax]	      1815	deflate.c	FUNCTION_20	IF_20
0x40014a8	            0x89d5	                            mov ebp, edx	      1773	deflate.c	FUNCTION_20	IF_14
0x40014aa	          0x4889ce	                            mov rsi, rcx	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x40014ad	            0xf7d5	                                 not ebp	      1773	deflate.c	FUNCTION_20	IF_14
0x40014af	           0x36b68	             add ebp, dword [rbx + 0x68]	      1773	deflate.c	FUNCTION_20	IF_14
0x40014b2	            0x39c5	                            cmp ebp, eax	      1774	deflate.c	FUNCTION_20	IF_14
0x40014b4	            0x7314	                           jae 0x40014ca	      1774	deflate.c	FUNCTION_20	IF_14
0x40014b6	        0x448b4350	            mov r8d, dword [rbx + 0x50] 	      1774	deflate.c	FUNCTION_20	IF_14
0x40014ba	    0x4c8b8b980000	              mov r9, qword [rbx + 0x98]	      1774	deflate.c	FUNCTION_20	IF_14
0x40014c1	          0x4d39c1	                              cmp r9, r8	      1774	deflate.c	FUNCTION_20	IF_14
0x40014c4	     0xf8d8c000000	                           jge 0x4001556	      1774	deflate.c	FUNCTION_20	IF_14
0x40014ca	            0x39c5	                            cmp ebp, eax	      1774	deflate.c	FUNCTION_20	IF_14
0x40014cc	           0xf47e8	                          cmova ebp, eax	      1774	deflate.c	FUNCTION_20	IF_14
0x40014cf	            0x85ed	                           test ebp, ebp	      1785	deflate.c	FUNCTION_20	IF_15
0x40014d1	     0xf8411ffffff	                            je 0x40013e8	      1785	deflate.c	FUNCTION_20	IF_15
0x40014d7	        0x48037360	             add rsi, qword [rbx + 0x60]	      1786	deflate.c	FUNCTION_20	IF_15
0x40014db	            0x89ea	                            mov edx, ebp	      1786	deflate.c	FUNCTION_20	IF_15
0x40014dd	      0xe88eeeffff	                       call sym.read_buf	      1786	deflate.c	FUNCTION_20	IF_15
0x40014e2	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1787	deflate.c	FUNCTION_20	IF_17
0x40014e8	             0x1ea	                            add edx, ebp	      1787	deflate.c	FUNCTION_20	IF_17
0x40014ea	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1787	deflate.c	FUNCTION_20	IF_17
0x40014f0	            0x89d6	                            mov esi, edx	      1787	deflate.c	FUNCTION_20	IF_17
0x40014f2	      0xe9f1feffff	                           jmp 0x40013e8	      1787	deflate.c	FUNCTION_20	IF_17
0x40014f7	          0x488b37	                    mov rsi, qword [rdi]	        53	string3.h	FUNCTION_25	CALL_3
0x40014fa	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x40014fe	            0x89ca	                            mov edx, ecx	      1743	deflate.c	FUNCTION_20	IF_8
0x4001500	    0xc78328170000	            mov dword [rbx + 0x1728], 2 	      1742	deflate.c	FUNCTION_20	IF_8
0x400150a	          0x4829d6	                            sub rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x400150d	      0xe800000000	                          call 0x4001512	        53	string3.h	FUNCTION_25	CALL_3
0x4001512	          0x8b5350	            mov edx, dword [rbx + 0x50] 	      1744	deflate.c	FUNCTION_20	IF_8
0x4001515	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1744	deflate.c	FUNCTION_20	IF_8
0x400151b	            0x89d0	                            mov eax, edx	      1744	deflate.c	FUNCTION_20	IF_8
0x400151d	      0xe914feffff	                           jmp 0x4001336	      1744	deflate.c	FUNCTION_20	IF_8
0x4001522	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4001526	            0x29ce	                            sub esi, ecx	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x4001528	    0x89b3ac000000	             mov dword [rbx + 0xac], esi	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x400152e	            0x89f2	                            mov edx, esi	        53	string3.h	FUNCTION_25	CALL_3
0x4001530	        0x488d340f	                    lea rsi, [rdi + rcx]	        53	string3.h	FUNCTION_25	CALL_3
0x4001534	      0xe800000000	                          call 0x4001539	        53	string3.h	FUNCTION_25	CALL_3
0x4001539	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400153f	          0x83f801	                              cmp eax, 1	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001542	     0xf86a5000000	                           jbe 0x40015ed	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001548	          0x488b3b	                    mov rdi, qword [rbx]	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400154b	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001551	      0xe9b9fdffff	                           jmp 0x400130f	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001556	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1778	deflate.c	FUNCTION_20	IF_15
0x400155a	          0x4d29c1	                              sub r9, r8	      1776	deflate.c	FUNCTION_20
0x400155d	          0x4429c2	                            sub edx, r8d	      1777	deflate.c	FUNCTION_20
0x4001560	    0x4c898b980000	              mov qword [rbx + 0x98], r9	      1776	deflate.c	FUNCTION_20
0x4001567	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1777	deflate.c	FUNCTION_20
0x400156d	        0x4a8d3407	                     lea rsi, [rdi + r8]	        53	string3.h	FUNCTION_25	CALL_3
0x4001571	      0xe800000000	                          call 0x4001576	        53	string3.h	FUNCTION_25	CALL_3
0x4001576	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	      1779	deflate.c	FUNCTION_20	IF_15
0x400157c	          0x83f801	                              cmp eax, 1	      1779	deflate.c	FUNCTION_20	IF_15
0x400157f	            0x767a	                           jbe 0x40015fb	      1779	deflate.c	FUNCTION_20	IF_15
0x4001581	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      1779	deflate.c	FUNCTION_20	IF_15
0x4001587	          0x488b3b	                    mov rdi, qword [rbx]	      1779	deflate.c	FUNCTION_20	IF_15
0x400158a	           0x36b50	             add ebp, dword [rbx + 0x50]	      1781	deflate.c	FUNCTION_20	IF_15
0x400158d	          0x8b4708	                mov eax, dword [rdi + 8]	      1781	deflate.c	FUNCTION_20	IF_15
0x4001590	          0x4889f2	                            mov rdx, rsi	      1781	deflate.c	FUNCTION_20	IF_15
0x4001593	      0xe932ffffff	                           jmp 0x40014ca	      1781	deflate.c	FUNCTION_20	IF_15
0x4001598	      0xb801000000	                              mov eax, 1	      1770	deflate.c	FUNCTION_20
0x400159d	      0xe90afeffff	                           jmp 0x40013ac	      1770	deflate.c	FUNCTION_20
0x40015a2	          0x488b0b	                    mov rcx, qword [rbx]	      1806	deflate.c	FUNCTION_20	IF_20
0x40015a5	            0x89c5	                            mov ebp, eax	      1808	deflate.c	FUNCTION_20	IF_20
0x40015a7	          0x4889df	                            mov rdi, rbx	      1808	deflate.c	FUNCTION_20	IF_20
0x40015aa	          0x8b4908	                mov ecx, dword [rcx + 8]	      1807	deflate.c	FUNCTION_20	IF_20
0x40015ad	            0x85c9	                           test ecx, ecx	      1807	deflate.c	FUNCTION_20	IF_20
0x40015af	        0x410f94c4	                               sete r12b	      1807	deflate.c	FUNCTION_20	IF_20
0x40015b3	            0x39c2	                            cmp edx, eax	      1807	deflate.c	FUNCTION_20	IF_20
0x40015b5	           0xf94c2	                                 sete dl	      1807	deflate.c	FUNCTION_20	IF_20
0x40015b8	        0x48037360	             add rsi, qword [rbx + 0x60]	      1808	deflate.c	FUNCTION_20	IF_20
0x40015bc	          0x4121d4	                           and r12d, edx	      1807	deflate.c	FUNCTION_20	IF_20
0x40015bf	          0x4889ea	                            mov rdx, rbp	      1808	deflate.c	FUNCTION_20	IF_20
0x40015c2	        0x410fb6cc	                         movzx ecx, r12b	      1808	deflate.c	FUNCTION_20	IF_20
0x40015c6	      0xe800000000	                          call 0x40015cb	      1808	deflate.c	FUNCTION_20	IF_20
0x40015cb	    0x4801ab980000	            add qword [rbx + 0x98], rbp 	      1809	deflate.c	FUNCTION_20	IF_20
0x40015d2	          0x488b3b	                    mov rdi, qword [rbx]	      1810	deflate.c	FUNCTION_20	IF_20
0x40015d5	      0xe8c6f0ffff	                  call sym.flush_pending	      1810	deflate.c	FUNCTION_20	IF_20
0x40015da	          0x4584e4	                         test r12b, r12b	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40015dd	     0xf84b0feffff	                            je 0x4001493	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40015e3	      0xb802000000	                              mov eax, 2	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40015e8	      0xe9bffdffff	                           jmp 0x40013ac	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40015ed	          0x83c001	                              add eax, 1	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40015f0	    0x898328170000	          mov dword [rbx + 0x1728], eax 	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40015f6	      0xe94dffffff	                           jmp 0x4001548	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40015fb	          0x83c001	                              add eax, 1	      1780	deflate.c	FUNCTION_20	IF_15
0x40015fe	    0x898328170000	          mov dword [rbx + 0x1728], eax 	      1780	deflate.c	FUNCTION_20	IF_15
0x4001604	      0xe978ffffff	                           jmp 0x4001581	      1780	deflate.c	FUNCTION_20	IF_15
deflatePrime	DO,1:IF,3:CALL,2:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	54
0x4001ad0	            0x4157	                                push r15	       546	deflate.c	
0x4001ad2	            0x4156	                                push r14	       546	deflate.c	
0x4001ad4	          0x4189d6	                           mov r14d, edx	       546	deflate.c	
0x4001ad7	            0x4155	                                push r13	       546	deflate.c	
0x4001ad9	            0x4154	                                push r12	       546	deflate.c	
0x4001adb	          0x4189f5	                           mov r13d, esi	       546	deflate.c	
0x4001ade	              0x55	                                push rbp	       546	deflate.c	
0x4001adf	              0x53	                                push rbx	       546	deflate.c	
0x4001ae0	        0x4883ec08	                              sub rsp, 8	       546	deflate.c	
0x4001ae4	      0xe8d7e5ffff	              call sym.deflateStateCheck	       550	deflate.c	FUNCTION_7
0x4001ae9	            0x85c0	                           test eax, eax	       550	deflate.c	FUNCTION_7
0x4001aeb	     0xf857d000000	                           jne 0x4001b6e	       550	deflate.c	FUNCTION_7
0x4001af1	        0x4c8b7f38	            mov r15, qword [rdi + 0x38] 	       551	deflate.c	FUNCTION_7
0x4001af5	            0x89c5	                            mov ebp, eax	       551	deflate.c	FUNCTION_7
0x4001af7	        0x498b4720	            mov rax, qword [r15 + 0x20] 	       552	deflate.c	FUNCTION_7
0x4001afb	        0x4883c002	                              add rax, 2	       552	deflate.c	FUNCTION_7
0x4001aff	    0x493987101700	          cmp qword [r15 + 0x1710], rax 	       552	deflate.c	FUNCTION_7
0x4001b06	            0x726d	                            jb 0x4001b75	       552	deflate.c	FUNCTION_7
0x4001b08	      0xbb10000000	                           mov ebx, 0x10	       555	deflate.c	FUNCTION_7
0x4001b0d	           0xf1f00	                         nop dword [rax]	       555	deflate.c	FUNCTION_7
0x4001b10	    0x418bbf341700	          mov edi, dword [r15 + 0x1734] 	       555	deflate.c	FUNCTION_7
0x4001b17	          0x4189dc	                           mov r12d, ebx	       555	deflate.c	FUNCTION_7
0x4001b1a	      0xb801000000	                              mov eax, 1	       558	deflate.c	FUNCTION_7	DO_1
0x4001b1f	          0x4129fc	                           sub r12d, edi	       555	deflate.c	FUNCTION_7
0x4001b22	          0x4539e5	                          cmp r13d, r12d	       555	deflate.c	FUNCTION_7
0x4001b25	        0x450f4ee5	                       cmovle r12d, r13d	       555	deflate.c	FUNCTION_7
0x4001b29	          0x4489e1	                           mov ecx, r12d	       558	deflate.c	FUNCTION_7	DO_1
0x4001b2c	            0xd3e0	                             shl eax, cl	       558	deflate.c	FUNCTION_7	DO_1
0x4001b2e	            0x89f9	                            mov ecx, edi	       558	deflate.c	FUNCTION_7	DO_1
0x4001b30	          0x4401e7	                           add edi, r12d	       559	deflate.c	FUNCTION_7	DO_1
0x4001b33	          0x83e801	                              sub eax, 1	       558	deflate.c	FUNCTION_7	DO_1
0x4001b36	    0x4189bf341700	          mov dword [r15 + 0x1734], edi 	       559	deflate.c	FUNCTION_7	DO_1
0x4001b3d	          0x4c89ff	                            mov rdi, r15	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x4001b40	          0x4421f0	                           and eax, r14d	       558	deflate.c	FUNCTION_7	DO_1
0x4001b43	            0xd3e0	                             shl eax, cl	       558	deflate.c	FUNCTION_7	DO_1
0x4001b45	    0x664109873017	              or word [r15 + 0x1730], ax	       558	deflate.c	FUNCTION_7	DO_1
0x4001b4d	      0xe800000000	                          call 0x4001b52	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x4001b52	          0x4489e1	                           mov ecx, r12d	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x4001b55	          0x41d3fe	                            sar r14d, cl	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x4001b58	          0x4529e5	                          sub r13d, r12d	       563	deflate.c	FUNCTION_7	DO_1
0x4001b5b	            0x75b3	                           jne 0x4001b10	       563	deflate.c	FUNCTION_7	DO_1
0x4001b5d	        0x4883c408	                              add rsp, 8	       565	deflate.c	FUNCTION_7	DO_1
0x4001b61	            0x89e8	                            mov eax, ebp	       565	deflate.c	FUNCTION_7	DO_1
0x4001b63	              0x5b	                                 pop rbx	       565	deflate.c	FUNCTION_7	DO_1
0x4001b64	              0x5d	                                 pop rbp	       565	deflate.c	FUNCTION_7	DO_1
0x4001b65	            0x415c	                                 pop r12	       565	deflate.c	FUNCTION_7	DO_1
0x4001b67	            0x415d	                                 pop r13	       565	deflate.c	FUNCTION_7	DO_1
0x4001b69	            0x415e	                                 pop r14	       565	deflate.c	FUNCTION_7	DO_1
0x4001b6b	            0x415f	                                 pop r15	       565	deflate.c	FUNCTION_7	DO_1
0x4001b6d	              0xc3	                                     ret	       565	deflate.c	FUNCTION_7	DO_1
0x4001b6e	      0xbdfeffffff	                     mov ebp, 0xfffffffe	       550	deflate.c	FUNCTION_7
0x4001b73	            0xebe8	                           jmp 0x4001b5d	       550	deflate.c	FUNCTION_7
0x4001b75	      0xbdfbffffff	                     mov ebp, 0xfffffffb	       553	deflate.c	FUNCTION_7
0x4001b7a	            0xebe1	                           jmp 0x4001b5d	       553	deflate.c	FUNCTION_7
deflate_slow	DO,1:IF,15:CALL,9:ELSE,2:functions,0:SWITCH,0:WHILE,0:FOR,1	327
0x4000720	            0x4156	                                push r14	      1929	deflate.c	
0x4000722	            0x4155	                                push r13	      1929	deflate.c	
0x4000724	            0x4154	                                push r12	      1929	deflate.c	
0x4000726	              0x55	                                push rbp	      1929	deflate.c	
0x4000727	            0x89f5	                            mov ebp, esi	      1929	deflate.c	
0x4000729	              0x53	                                push rbx	      1929	deflate.c	
0x400072a	          0x4889fb	                            mov rbx, rdi	      1929	deflate.c	
0x400072d	    0x8bbbb4000000	            mov edi, dword [rbx + 0xb4] 	      1929	deflate.c	
0x4000733	       0xf1f440000	                   nop dword [rax + rax]	      1929	deflate.c	
0x4000738	    0x81ff05010000	                          cmp edi, 0x105	      1940	deflate.c	FUNCTION_22	FOR_1
0x400073e	     0xf86da020000	                           jbe 0x4000a1e	      1940	deflate.c	FUNCTION_22	FOR_1
0x4000744	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400074a	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400074e	          0x8d5002	                      lea edx, [rax + 2]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000751	            0x89c7	                            mov edi, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000753	          0x237b58	             and edi, dword [rbx + 0x58]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000756	         0xfb63411	             movzx esi, byte [rcx + rdx]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400075a	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000760	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000766	            0xd3e2	                             shl edx, cl	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000768	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400076c	            0x31f2	                            xor edx, esi	      1953	deflate.c	FUNCTION_22	FOR_1
0x400076e	    0x23938c000000	             and edx, dword [rbx + 0x8c]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000774	    0x899380000000	             mov dword [rbx + 0x80], edx	      1953	deflate.c	FUNCTION_22	FOR_1
0x400077a	        0x488d1451	                  lea rdx, [rcx + rdx*2]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400077e	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000782	           0xfb732	                   movzx esi, word [rdx]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000785	        0x66893479	              mov word [rcx + rdi*2], si	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000789	          0x668902	                      mov word [rdx], ax	      1953	deflate.c	FUNCTION_22	FOR_1
0x400078c	            0x85f6	                           test esi, esi	      1961	deflate.c	FUNCTION_22	FOR_1
0x400078e	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000794	    0x8b8bb0000000	            mov ecx, dword [rbx + 0xb0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x400079a	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x40007a4	    0x8993b8000000	             mov dword [rbx + 0xb8], edx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40007aa	    0x898ba4000000	             mov dword [rbx + 0xa4], ecx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40007b0	            0x741e	                            je 0x40007d0	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007b2	    0x3b93c0000000	            cmp edx, dword [rbx + 0xc0] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007b8	            0x7316	                           jae 0x40007d0	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007ba	          0x8b4b50	            mov ecx, dword [rbx + 0x50] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007bd	            0x89c7	                            mov edi, eax	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007bf	            0x29f7	                            sub edi, esi	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007c1	    0x81e906010000	                          sub ecx, 0x106	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007c7	            0x39cf	                            cmp edi, ecx	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007c9	     0xf8649030000	                           jbe 0x4000b18	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007cf	              0x90	                                     nop	      1961	deflate.c	FUNCTION_22	FOR_1
0x40007d0	          0x83fa02	                              cmp edx, 2	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40007d3	     0xf86af010000	                           jbe 0x4000988	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40007d9	    0x3993a0000000	            cmp dword [rbx + 0xa0], edx 	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40007df	     0xf87a3010000	                            ja 0x4000988	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x40007e5	    0x8b8bb4000000	            mov ecx, dword [rbx + 0xb4] 	      1987	deflate.c	FUNCTION_22	FOR_1
0x40007eb	    0x8bb30c170000	          mov esi, dword [rbx + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007f1	          0x83ea03	                              sub edx, 3	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007f4	    0x488bbb101700	          mov rdi, qword [rbx + 0x1710] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007fb	      0x448d4408fd	                lea r8d, [rax + rcx - 3]	      1987	deflate.c	FUNCTION_22	FOR_1
0x4000800	    0x662b83a40000	               sub ax, word [rbx + 0xa4]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000807	          0x4889f1	                            mov rcx, rsi	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400080a	          0x83c101	                              add ecx, 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400080d	        0x448d48ff	                      lea r9d, [rax - 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000811	          0x83e802	                              sub eax, 2	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000814	      0x6644890c77	             mov word [rdi + rsi*2], r9w	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000819	    0x488bbb001700	          mov rdi, qword [rbx + 0x1700] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000820	    0x898b0c170000	          mov dword [rbx + 0x170c], ecx 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000826	          0x881437	                mov byte [rdi + rsi], dl	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000829	           0xfb6d2	                           movzx edx, dl	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400082c	     0xfb692000000	                   movzx edx, byte [rdx]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000833	    0x66838493d804	       add word [rbx + rdx*4 + 0x4d8], 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400083c	        0x663dff00	                            cmp ax, 0xff	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000840	     0xf876a020000	                            ja 0x4000ab0	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000846	           0xfb7c0	                           movzx eax, ax	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000849	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000850	    0x66838483c809	       add word [rbx + rax*4 + 0x9c8], 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000859	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400085f	    0x448b93b80000	           mov r10d, dword [rbx + 0xb8] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000866	    0x448b9bac0000	           mov r11d, dword [rbx + 0xac] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400086d	    0x448ba30c1700	         mov r12d, dword [rbx + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000874	        0x448d48ff	                      lea r9d, [rax - 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000878	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400087e	        0x418d72fe	                      lea esi, [r10 - 2]	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000882	    0x89b3b8000000	             mov dword [rbx + 0xb8], esi	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000888	          0x8d7801	                      lea edi, [rax + 1]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400088b	        0x418d4301	                      lea eax, [r11 + 1]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400088f	          0x4429d7	                           sub edi, r10d	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000892	    0x89bbb4000000	             mov dword [rbx + 0xb4], edi	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000898	     0xf1f84000000	                   nop dword [rax + rax]	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008a0	          0x4139c0	                            cmp r8d, eax	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008a3	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008a9	            0x7248	                            jb 0x40008f3	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008ab	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008af	          0x8d5002	                      lea edx, [rax + 2]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008b2	      0x440fb62c11	            movzx r13d, byte [rcx + rdx]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008b7	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008bd	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008c3	            0xd3e2	                             shl edx, cl	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008c5	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008c9	          0x4431ea	                           xor edx, r13d	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008cc	    0x23938c000000	             and edx, dword [rbx + 0x8c]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008d2	          0x4189c5	                           mov r13d, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008d5	        0x44236b58	            and r13d, dword [rbx + 0x58]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008d9	    0x899380000000	             mov dword [rbx + 0x80], edx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008df	        0x488d1451	                  lea rdx, [rcx + rdx*2]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008e3	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008e7	        0x440fb732	                  movzx r14d, word [rdx]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008eb	      0x6646893469	            mov word [rcx + r13*2], r14w	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008f0	          0x668902	                      mov word [rdx], ax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008f3	          0x83ee01	                              sub esi, 1	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008f6	          0x83c001	                              add eax, 1	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008f9	            0x85f6	                           test esi, esi	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008fb	    0x89b3b8000000	             mov dword [rbx + 0xb8], esi	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x4000901	            0x759d	                           jne 0x40008a0	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x4000903	      0x438d441aff	                lea eax, [r10 + r11 - 1]	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x4000908	          0x4539cc	                           cmp r12d, r9d	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400090b	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      2007	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x4000915	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      2008	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x400091f	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x4000925	     0xf850dfeffff	                           jne 0x4000738	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400092b	    0x488b8b980000	            mov rcx, qword [rbx + 0x98] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000932	            0x89c2	                            mov edx, eax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000934	            0x31f6	                            xor esi, esi	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000936	          0x4829ca	                            sub rdx, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000939	          0x4885c9	                           test rcx, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400093c	            0x7809	                            js 0x4000947	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400093e	            0x89c9	                            mov ecx, ecx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000940	          0x4889ce	                            mov rsi, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000943	        0x48037360	             add rsi, qword [rbx + 0x60]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000947	            0x31c9	                            xor ecx, ecx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000949	          0x4889df	                            mov rdi, rbx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400094c	      0xe800000000	                          call 0x4000951	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000951	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000957	          0x488b3b	                    mov rdi, qword [rbx]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400095a	    0x488983980000	             mov qword [rbx + 0x98], rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000961	      0xe83afdffff	                  call sym.flush_pending	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000966	          0x488b03	                    mov rax, qword [rbx]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000969	        0x448b6020	           mov r12d, dword [rax + 0x20] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400096d	          0x4585e4	                         test r12d, r12d	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000970	     0xf85b7fdffff	                           jne 0x400072d	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000976	            0x31c0	                            xor eax, eax	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000978	              0x5b	                                 pop rbx	      2049	deflate.c	FUNCTION_22	IF_14
0x4000979	              0x5d	                                 pop rbp	      2049	deflate.c	FUNCTION_22	IF_14
0x400097a	            0x415c	                                 pop r12	      2049	deflate.c	FUNCTION_22	IF_14
0x400097c	            0x415d	                                 pop r13	      2049	deflate.c	FUNCTION_22	IF_14
0x400097e	            0x415e	                                 pop r14	      2049	deflate.c	FUNCTION_22	IF_14
0x4000980	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
0x4000981	     0xf1f80000000	                         nop dword [rax]	      2049	deflate.c	FUNCTION_22	IF_14
0x4000988	    0x448b9ba80000	           mov r11d, dword [rbx + 0xa8] 	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400098f	          0x4585db	                         test r11d, r11d	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000992	     0xf84e8000000	                            je 0x4000a80	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000998	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400099c	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009a2	          0x83e801	                              sub eax, 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009a5	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009ac	          0x4531d2	                          xor r10d, r10d	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009af	         0xfb60402	             movzx eax, byte [rdx + rax]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009b3	      0x664489144e	            mov word [rsi + rcx*2], r10w	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009b8	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009bf	          0x4889ca	                            mov rdx, rcx	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009c2	          0x83c201	                              add edx, 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009c5	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009cb	          0x88040e	                mov byte [rsi + rcx], al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009ce	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009d7	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009dd	          0x83e801	                              sub eax, 1	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009e0	    0x39830c170000	          cmp dword [rbx + 0x170c], eax 	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009e6	     0xf84e4000000	                            je 0x4000ad0	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009ec	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x40009f2	    0x8383ac000000	               add dword [rbx + 0xac], 1	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x40009f9	          0x8d78ff	                      lea edi, [rax - 1]	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x40009fc	          0x488b03	                    mov rax, qword [rbx]	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x40009ff	    0x89bbb4000000	             mov dword [rbx + 0xb4], edi	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000a05	        0x448b4820	            mov r9d, dword [rax + 0x20] 	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000a09	          0x4585c9	                           test r9d, r9d	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000a0c	     0xf8464ffffff	                            je 0x4000976	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000a12	    0x81ff05010000	                          cmp edi, 0x105	      1940	deflate.c	FUNCTION_22	FOR_1
0x4000a18	     0xf8726fdffff	                            ja 0x4000744	      1940	deflate.c	FUNCTION_22	FOR_1
0x4000a1e	          0x4889df	                            mov rdi, rbx	      1941	deflate.c	FUNCTION_22	FOR_1
0x4000a21	      0xe8daf9ffff	                    call sym.fill_window	      1941	deflate.c	FUNCTION_22	FOR_1
0x4000a26	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000a2c	      0x3d05010000	                          cmp eax, 0x105	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000a31	     0xf870dfdffff	                            ja 0x4000744	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000a37	            0x85ed	                           test ebp, ebp	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000a39	     0xf8437ffffff	                            je 0x4000976	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000a3f	            0x85c0	                           test eax, eax	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x4000a41	     0xf8436010000	                            je 0x4000b7d	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x4000a47	          0x83f802	                              cmp eax, 2	      1952	deflate.c	FUNCTION_22	FOR_1
0x4000a4a	     0xf87f4fcffff	                            ja 0x4000744	      1952	deflate.c	FUNCTION_22	FOR_1
0x4000a50	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000a56	    0x8b83b0000000	            mov eax, dword [rbx + 0xb0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000a5c	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x4000a66	    0x8983a4000000	             mov dword [rbx + 0xa4], eax	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000a6c	    0x8993b8000000	             mov dword [rbx + 0xb8], edx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000a72	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000a78	      0xe953fdffff	                           jmp 0x40007d0	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000a7d	           0xf1f00	                         nop dword [rax]	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000a80	          0x83c001	                              add eax, 1	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a83	    0xc783a8000000	               mov dword [rbx + 0xa8], 1	      2030	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000a8d	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a93	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a99	          0x8d78ff	                      lea edi, [rax - 1]	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a9c	    0x89bbb4000000	             mov dword [rbx + 0xb4], edi	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000aa2	      0xe991fcffff	                           jmp 0x4000738	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000aa7	    0x660f1f840000	                    nop word [rax + rax]	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000ab0	        0x66c1e807	                               shr ax, 7	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000ab4	    0x480500010000	                          add rax, 0x100	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000aba	      0x25ff030000	                          and eax, 0x3ff	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000abf	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000ac6	      0xe985fdffff	                           jmp 0x4000850	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000acb	       0xf1f440000	                   nop dword [rax + rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000ad0	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000ad6	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000add	            0x31f6	                            xor esi, esi	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000adf	          0x4829c2	                            sub rdx, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000ae2	          0x4885c0	                           test rax, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000ae5	            0x7809	                            js 0x4000af0	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000ae7	            0x89c0	                            mov eax, eax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000ae9	        0x48034360	             add rax, qword [rbx + 0x60]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000aed	          0x4889c6	                            mov rsi, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000af0	          0x4889df	                            mov rdi, rbx	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000af3	            0x31c9	                            xor ecx, ecx	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000af5	      0xe800000000	                          call 0x4000afa	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000afa	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000b00	          0x488b3b	                    mov rdi, qword [rbx]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000b03	    0x488983980000	             mov qword [rbx + 0x98], rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000b0a	      0xe891fbffff	                  call sym.flush_pending	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000b0f	      0xe9d8feffff	                           jmp 0x40009ec	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000b14	         0xf1f4000	                         nop dword [rax]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000b18	          0x4889df	                            mov rdi, rbx	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b1b	      0xe820f6ffff	                  call sym.longest_match	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b20	          0x83f805	                              cmp eax, 5	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b23	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b29	            0x770e	                            ja 0x4000b39	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b2b	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b32	            0x7416	                            je 0x4000b4a	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b34	          0x83f803	                              cmp eax, 3	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b37	            0x742c	                            je 0x4000b65	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b39	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b3f	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b45	      0xe986fcffff	                           jmp 0x40007d0	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b4a	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b50	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x4000b5a	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x4000b60	      0xe96bfcffff	                           jmp 0x40007d0	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x4000b65	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1973	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b6b	            0x89c2	                            mov edx, eax	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b6d	    0x2b93b0000000	             sub edx, dword [rbx + 0xb0]	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b73	    0x81fa00100000	                         cmp edx, 0x1000	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b79	            0x76df	                           jbe 0x4000b5a	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b7b	            0xebd3	                           jmp 0x4000b50	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000b7d	    0x448b83a80000	            mov r8d, dword [rbx + 0xa8] 	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000b84	          0x4585c0	                           test r8d, r8d	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000b87	     0xf8583000000	                           jne 0x4000c10	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000b8d	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000b93	      0xb802000000	                              mov eax, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000b98	          0x83fa02	                              cmp edx, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000b9b	           0xf46c2	                         cmovbe eax, edx	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000b9e	          0x83fd04	                              cmp ebp, 4	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x4000ba1	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000ba7	     0xf84b5000000	                            je 0x4000c62	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x4000bad	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2046	deflate.c	FUNCTION_22	IF_14
0x4000bb3	      0xb801000000	                              mov eax, 1	      2048	deflate.c	FUNCTION_22	IF_14
0x4000bb8	            0x85c9	                           test ecx, ecx	      2046	deflate.c	FUNCTION_22	IF_14
0x4000bba	     0xf84b8fdffff	                            je 0x4000978	      2046	deflate.c	FUNCTION_22	IF_14
0x4000bc0	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bc7	            0x31f6	                            xor esi, esi	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bc9	          0x4829c2	                            sub rdx, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bcc	          0x4885c0	                           test rax, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bcf	            0x7809	                            js 0x4000bda	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bd1	            0x89c0	                            mov eax, eax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bd3	        0x48034360	             add rax, qword [rbx + 0x60]	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bd7	          0x4889c6	                            mov rsi, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bda	            0x31c9	                            xor ecx, ecx	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bdc	          0x4889df	                            mov rdi, rbx	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bdf	      0xe800000000	                          call 0x4000be4	      2047	deflate.c	FUNCTION_22	IF_14
0x4000be4	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bea	          0x488b3b	                    mov rdi, qword [rbx]	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bed	    0x488983980000	             mov qword [rbx + 0x98], rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bf4	      0xe8a7faffff	                  call sym.flush_pending	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bf9	          0x488b03	                    mov rax, qword [rbx]	      2047	deflate.c	FUNCTION_22	IF_14
0x4000bfc	              0x5b	                                 pop rbx	      2049	deflate.c	FUNCTION_22	IF_14
0x4000bfd	              0x5d	                                 pop rbp	      2049	deflate.c	FUNCTION_22	IF_14
0x4000bfe	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000c01	            0x415c	                                 pop r12	      2049	deflate.c	FUNCTION_22	IF_14
0x4000c03	            0x415d	                                 pop r13	      2049	deflate.c	FUNCTION_22	IF_14
0x4000c05	            0x85c0	                           test eax, eax	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000c07	           0xf95c0	                                setne al	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000c0a	           0xfb6c0	                           movzx eax, al	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000c0d	            0x415e	                                 pop r14	      2049	deflate.c	FUNCTION_22	IF_14
0x4000c0f	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
0x4000c10	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c16	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c1a	            0x31ff	                            xor edi, edi	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c1c	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c22	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c29	          0x83e801	                              sub eax, 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c2c	         0xfb60402	             movzx eax, byte [rdx + rax]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c30	        0x66893c4e	              mov word [rsi + rcx*2], di	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c34	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c3b	          0x4889ca	                            mov rdx, rcx	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c3e	          0x83c201	                              add edx, 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c41	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c47	          0x88040e	                mov byte [rsi + rcx], al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c4a	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000c53	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      2039	deflate.c	FUNCTION_22	CALL_7
0x4000c5d	      0xe92bffffff	                           jmp 0x4000b8d	      2039	deflate.c	FUNCTION_22	CALL_7
0x4000c62	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c69	            0x31f6	                            xor esi, esi	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c6b	          0x4829c2	                            sub rdx, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c6e	          0x4885c0	                           test rax, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c71	            0x7809	                            js 0x4000c7c	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c73	            0x89c0	                            mov eax, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c75	        0x48034360	             add rax, qword [rbx + 0x60]	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c79	          0x4889c6	                            mov rsi, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c7c	          0x4889df	                            mov rdi, rbx	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c7f	      0xb901000000	                              mov ecx, 1	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c84	      0xe800000000	                          call 0x4000c89	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c89	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c8f	          0x488b3b	                    mov rdi, qword [rbx]	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c92	    0x488983980000	             mov qword [rbx + 0x98], rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c99	      0xe802faffff	                  call sym.flush_pending	      2043	deflate.c	FUNCTION_22	IF_13
0x4000c9e	          0x488b03	                    mov rax, qword [rbx]	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ca1	              0x5b	                                 pop rbx	      2049	deflate.c	FUNCTION_22	IF_14
0x4000ca2	              0x5d	                                 pop rbp	      2049	deflate.c	FUNCTION_22	IF_14
0x4000ca3	        0x83782001	               cmp dword [rax + 0x20], 1	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ca7	            0x415c	                                 pop r12	      2049	deflate.c	FUNCTION_22	IF_14
0x4000ca9	            0x415d	                                 pop r13	      2049	deflate.c	FUNCTION_22	IF_14
0x4000cab	            0x415e	                                 pop r14	      2049	deflate.c	FUNCTION_22	IF_14
0x4000cad	            0x19c0	                            sbb eax, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000caf	          0x83c003	                              add eax, 3	      2043	deflate.c	FUNCTION_22	IF_13
0x4000cb2	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
deflateCopy	DO,0:IF,3:CALL,13:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	148
0x4003400	            0x4155	                                push r13	      1105	deflate.c	
0x4003402	            0x4154	                                push r12	      1105	deflate.c	
0x4003404	              0x55	                                push rbp	      1105	deflate.c	
0x4003405	              0x53	                                push rbx	      1105	deflate.c	
0x4003406	          0x4889fd	                            mov rbp, rdi	      1105	deflate.c	
0x4003409	          0x4889f7	                            mov rdi, rsi	      1114	deflate.c	FUNCTION_15
0x400340c	          0x4889f3	                            mov rbx, rsi	      1105	deflate.c	
0x400340f	        0x4883ec08	                              sub rsp, 8	      1105	deflate.c	
0x4003413	      0xe8a8ccffff	              call sym.deflateStateCheck	      1114	deflate.c	FUNCTION_15
0x4003418	          0x4885ed	                           test rbp, rbp	      1114	deflate.c	FUNCTION_15
0x400341b	     0xf841f020000	                            je 0x4003640	      1114	deflate.c	FUNCTION_15
0x4003421	            0x85c0	                           test eax, eax	      1114	deflate.c	FUNCTION_15
0x4003423	     0xf8517020000	                           jne 0x4003640	      1114	deflate.c	FUNCTION_15
0x4003429	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_25	CALL_3
0x400342c	        0x4c8b6338	            mov r12, qword [rbx + 0x38] 	      1118	deflate.c	FUNCTION_15	IF_1	CALL_1
0x4003430	      0xbe01000000	                              mov esi, 1	      1122	deflate.c	FUNCTION_15
0x4003435	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4003439	        0x488b4308	                mov rax, qword [rbx + 8]	        53	string3.h	FUNCTION_25	CALL_3
0x400343d	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4003441	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003445	        0x48894510	            mov qword [rbp + 0x10], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003449	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x400344d	        0x48894518	            mov qword [rbp + 0x18], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003451	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003455	        0x48894520	            mov qword [rbp + 0x20], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003459	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        53	string3.h	FUNCTION_25	CALL_3
0x400345d	        0x48894528	            mov qword [rbp + 0x28], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003461	        0x488b4330	            mov rax, qword [rbx + 0x30] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003465	        0x48894530	            mov qword [rbp + 0x30], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003469	        0x488b4338	            mov rax, qword [rbx + 0x38] 	        53	string3.h	FUNCTION_25	CALL_3
0x400346d	        0x48894538	            mov qword [rbp + 0x38], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003471	        0x488b4340	            mov rax, qword [rbx + 0x40] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003475	        0x48894540	            mov qword [rbp + 0x40], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003479	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	        53	string3.h	FUNCTION_25	CALL_3
0x400347d	        0x48895548	            mov qword [rbp + 0x48], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4003481	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003485	        0x48897d50	            mov qword [rbp + 0x50], rdi 	        53	string3.h	FUNCTION_25	CALL_3
0x4003489	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	        53	string3.h	FUNCTION_25	CALL_3
0x400348d	        0x48895558	            mov qword [rbp + 0x58], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4003491	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003495	        0x48895560	            mov qword [rbp + 0x60], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4003499	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	        53	string3.h	FUNCTION_25	CALL_3
0x400349d	        0x48895568	            mov qword [rbp + 0x68], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x40034a1	      0xba40170000	                         mov edx, 0x1740	      1122	deflate.c	FUNCTION_15
0x40034a6	            0xffd0	                                call rax	      1122	deflate.c	FUNCTION_15
0x40034a8	          0x4885c0	                           test rax, rax	      1123	deflate.c	FUNCTION_15
0x40034ab	          0x4889c3	                            mov rbx, rax	      1122	deflate.c	FUNCTION_15
0x40034ae	     0xf849c010000	                            je 0x4003650	      1123	deflate.c	FUNCTION_15
0x40034b4	        0x48894538	            mov qword [rbp + 0x38], rax 	      1124	deflate.c	FUNCTION_15	CALL_2
0x40034b8	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_25	CALL_3
0x40034bc	        0x488d7b08	                      lea rdi, [rbx + 8]	        53	string3.h	FUNCTION_25	CALL_3
0x40034c0	          0x4889d9	                            mov rcx, rbx	        53	string3.h	FUNCTION_25	CALL_3
0x40034c3	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_25	CALL_3
0x40034c6	      0xba02000000	                              mov edx, 2	      1128	deflate.c	FUNCTION_15
0x40034cb	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_25	CALL_3
0x40034cf	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_25	CALL_3
0x40034d2	    0x498b84243817	          mov rax, qword [r12 + 0x1738] 	        53	string3.h	FUNCTION_25	CALL_3
0x40034da	          0x4829f9	                            sub rcx, rdi	        53	string3.h	FUNCTION_25	CALL_3
0x40034dd	          0x4829ce	                            sub rsi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x40034e0	    0x81c140170000	                         add ecx, 0x1740	        53	string3.h	FUNCTION_25	CALL_3
0x40034e6	          0xc1e903	                              shr ecx, 3	        53	string3.h	FUNCTION_25	CALL_3
0x40034e9	    0x488983381700	          mov qword [rbx + 0x1738], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x40034f0	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_25	CALL_3
0x40034f3	          0x48892b	                    mov qword [rbx], rbp	      1126	deflate.c	FUNCTION_15	CALL_3
0x40034f6	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      1128	deflate.c	FUNCTION_15
0x40034f9	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1128	deflate.c	FUNCTION_15
0x40034fd	          0xff5540	                 call qword [rbp + 0x40]	      1128	deflate.c	FUNCTION_15
0x4003500	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003503	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003507	      0xba02000000	                              mov edx, 2	      1129	deflate.c	FUNCTION_15	CALL_4
0x400350c	        0x48894360	             mov qword [rbx + 0x60], rax	      1128	deflate.c	FUNCTION_15
0x4003510	          0xff5540	                 call qword [rbp + 0x40]	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003513	    0x8bb384000000	            mov esi, dword [rbx + 0x84] 	      1130	deflate.c	FUNCTION_15
0x4003519	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1130	deflate.c	FUNCTION_15
0x400351d	      0xba02000000	                              mov edx, 2	      1130	deflate.c	FUNCTION_15
0x4003522	        0x48894370	             mov qword [rbx + 0x70], rax	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003526	          0xff5540	                 call qword [rbp + 0x40]	      1130	deflate.c	FUNCTION_15
0x4003529	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1131	deflate.c	FUNCTION_15
0x400352d	        0x48894378	             mov qword [rbx + 0x78], rax	      1130	deflate.c	FUNCTION_15
0x4003531	      0xba04000000	                              mov edx, 4	      1131	deflate.c	FUNCTION_15
0x4003536	    0x8bb308170000	          mov esi, dword [rbx + 0x1708] 	      1131	deflate.c	FUNCTION_15
0x400353c	          0xff5540	                 call qword [rbp + 0x40]	      1131	deflate.c	FUNCTION_15
0x400353f	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003543	          0x4989c5	                            mov r13, rax	      1131	deflate.c	FUNCTION_15
0x4003546	        0x48894310	             mov qword [rbx + 0x10], rax	      1132	deflate.c	FUNCTION_15	CALL_5
0x400354a	          0x4885ff	                           test rdi, rdi	      1134	deflate.c	FUNCTION_15	CALL_7
0x400354d	     0xf84dd000000	                            je 0x4003630	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003553	      0x48837b7000	               cmp qword [rbx + 0x70], 0	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003558	     0xf84d2000000	                            je 0x4003630	      1134	deflate.c	FUNCTION_15	CALL_7
0x400355e	      0x48837b7800	               cmp qword [rbx + 0x78], 0	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003563	     0xf84c7000000	                            je 0x4003630	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003569	          0x4885c0	                           test rax, rax	      1134	deflate.c	FUNCTION_15	CALL_7
0x400356c	     0xf84be000000	                            je 0x4003630	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003572	          0x8b4350	            mov eax, dword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003575	      0x498b742460	            mov rsi, qword [r12 + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x400357a	          0x8d1400	                    lea edx, [rax + rax]	        53	string3.h	FUNCTION_25	CALL_3
0x400357d	      0xe800000000	                          call 0x4003582	        53	string3.h	FUNCTION_25	CALL_3
0x4003582	          0x8b5350	            mov edx, dword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003585	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003589	      0x498b742470	            mov rsi, qword [r12 + 0x70] 	        53	string3.h	FUNCTION_25	CALL_3
0x400358e	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4003591	      0xe800000000	                          call 0x4003596	        53	string3.h	FUNCTION_25	CALL_3
0x4003596	    0x8b9384000000	            mov edx, dword [rbx + 0x84] 	        53	string3.h	FUNCTION_25	CALL_3
0x400359c	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	        53	string3.h	FUNCTION_25	CALL_3
0x40035a0	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	        53	string3.h	FUNCTION_25	CALL_3
0x40035a5	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x40035a8	      0xe800000000	                          call 0x40035ad	        53	string3.h	FUNCTION_25	CALL_3
0x40035ad	          0x8b5318	            mov edx, dword [rbx + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40035b0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x40035b4	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x40035b9	      0xe800000000	                          call 0x40035be	        53	string3.h	FUNCTION_25	CALL_3
0x40035be	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1145	deflate.c	FUNCTION_15	CALL_11
0x40035c2	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1146	deflate.c	FUNCTION_15	CALL_12
0x40035c8	          0x4889ca	                            mov rdx, rcx	      1145	deflate.c	FUNCTION_15	CALL_11
0x40035cb	      0x492b542410	             sub rdx, qword [r12 + 0x10]	      1145	deflate.c	FUNCTION_15	CALL_11
0x40035d0	      0x4903542420	             add rdx, qword [r12 + 0x20]	      1145	deflate.c	FUNCTION_15	CALL_11
0x40035d5	        0x48895320	             mov qword [rbx + 0x20], rdx	      1145	deflate.c	FUNCTION_15	CALL_11
0x40035d9	            0x89c2	                            mov edx, eax	      1146	deflate.c	FUNCTION_15	CALL_12
0x40035db	        0x488d0440	                  lea rax, [rax + rax*2]	      1147	deflate.c	FUNCTION_15	CALL_13
0x40035df	            0xd1ea	                              shr edx, 1	      1146	deflate.c	FUNCTION_15	CALL_12
0x40035e1	          0x4801c8	                            add rax, rcx	      1147	deflate.c	FUNCTION_15	CALL_13
0x40035e4	      0x498d545500	                  lea rdx, [r13 + rdx*2]	      1146	deflate.c	FUNCTION_15	CALL_12
0x40035e9	    0x488983001700	          mov qword [rbx + 0x1700], rax 	      1147	deflate.c	FUNCTION_15	CALL_13
0x40035f0	    0x488d83d40000	                   lea rax, [rbx + 0xd4]	      1149	deflate.c	FUNCTION_15
0x40035f7	    0x488993101700	          mov qword [rbx + 0x1710], rdx 	      1146	deflate.c	FUNCTION_15	CALL_12
0x40035fe	    0x488983580b00	            mov qword [rbx + 0xb58], rax	      1149	deflate.c	FUNCTION_15
0x4003605	    0x488d83c80900	                  lea rax, [rbx + 0x9c8]	      1150	deflate.c	FUNCTION_15
0x400360c	    0x488983700b00	            mov qword [rbx + 0xb70], rax	      1150	deflate.c	FUNCTION_15
0x4003613	    0x488d83bc0a00	                  lea rax, [rbx + 0xabc]	      1151	deflate.c	FUNCTION_15
0x400361a	    0x488983880b00	            mov qword [rbx + 0xb88], rax	      1151	deflate.c	FUNCTION_15
0x4003621	            0x31c0	                            xor eax, eax	      1153	deflate.c	FUNCTION_15
0x4003623	        0x4883c408	                              add rsp, 8	      1155	deflate.c	FUNCTION_15
0x4003627	              0x5b	                                 pop rbx	      1155	deflate.c	FUNCTION_15
0x4003628	              0x5d	                                 pop rbp	      1155	deflate.c	FUNCTION_15
0x4003629	            0x415c	                                 pop r12	      1155	deflate.c	FUNCTION_15
0x400362b	            0x415d	                                 pop r13	      1155	deflate.c	FUNCTION_15
0x400362d	              0xc3	                                     ret	      1155	deflate.c	FUNCTION_15
0x400362e	            0x6690	                                     nop	      1155	deflate.c	FUNCTION_15
0x4003630	          0x4889ef	                            mov rdi, rbp	      1136	deflate.c	FUNCTION_15
0x4003633	      0xe800000000	                          call 0x4003638	      1136	deflate.c	FUNCTION_15
0x4003638	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1137	deflate.c	FUNCTION_15
0x400363d	            0xebe4	                           jmp 0x4003623	      1137	deflate.c	FUNCTION_15
0x400363f	              0x90	                                     nop	      1137	deflate.c	FUNCTION_15
0x4003640	      0xb8feffffff	                     mov eax, 0xfffffffe	      1115	deflate.c	FUNCTION_15
0x4003645	            0xebdc	                           jmp 0x4003623	      1115	deflate.c	FUNCTION_15
0x4003647	    0x660f1f840000	                    nop word [rax + rax]	      1115	deflate.c	FUNCTION_15
0x4003650	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1123	deflate.c	FUNCTION_15
0x4003655	            0xebcc	                           jmp 0x4003623	      1123	deflate.c	FUNCTION_15
slide_hash	DO,2:IF,0:CALL,0:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	41
0x4000040	    0x8bb784000000	            mov esi, dword [rdi + 0x84] 	       208	deflate.c	FUNCTION_1
0x4000046	        0x488b5778	            mov rdx, qword [rdi + 0x78] 	       209	deflate.c	FUNCTION_1
0x400004a	          0x8b4750	            mov eax, dword [rdi + 0x50] 	       206	deflate.c	
0x400004d	          0x4889f1	                            mov rcx, rsi	       208	deflate.c	FUNCTION_1
0x4000050	        0x488d1472	                  lea rdx, [rdx + rsi*2]	       209	deflate.c	FUNCTION_1
0x4000054	          0x83e901	                              sub ecx, 1	       209	deflate.c	FUNCTION_1
0x4000057	          0x4801c9	                            add rcx, rcx	       209	deflate.c	FUNCTION_1
0x400005a	          0x4889d6	                            mov rsi, rdx	       209	deflate.c	FUNCTION_1
0x400005d	          0x4829ce	                            sub rsi, rcx	       209	deflate.c	FUNCTION_1
0x4000060	        0x4c8d46fe	                       lea r8, [rsi - 2]	       209	deflate.c	FUNCTION_1
0x4000064	         0xf1f4000	                         nop dword [rax]	       209	deflate.c	FUNCTION_1
0x4000068	        0x4883ea02	                              sub rdx, 2	       211	deflate.c	FUNCTION_1
0x400006c	           0xfb732	                   movzx esi, word [rdx]	       211	deflate.c	FUNCTION_1
0x400006f	            0x89f1	                            mov ecx, esi	       212	deflate.c	FUNCTION_1
0x4000071	            0x29c1	                            sub ecx, eax	       212	deflate.c	FUNCTION_1
0x4000073	            0x39f0	                            cmp eax, esi	       212	deflate.c	FUNCTION_1
0x4000075	      0xbe00000000	                              mov esi, 0	       212	deflate.c	FUNCTION_1
0x400007a	           0xf47ce	                          cmova ecx, esi	       212	deflate.c	FUNCTION_1
0x400007d	          0x4c39c2	                             cmp rdx, r8	       213	deflate.c	FUNCTION_1
0x4000080	          0x66890a	                      mov word [rdx], cx	       212	deflate.c	FUNCTION_1
0x4000083	            0x75e3	                           jne 0x4000068	       213	deflate.c	FUNCTION_1
0x4000085	        0x488b4f70	            mov rcx, qword [rdi + 0x70] 	       216	deflate.c	FUNCTION_1	DO_1
0x4000089	            0x89c2	                            mov edx, eax	       216	deflate.c	FUNCTION_1	DO_1
0x400008b	        0x488d1451	                  lea rdx, [rcx + rdx*2]	       216	deflate.c	FUNCTION_1	DO_1
0x400008f	          0x8d48ff	                      lea ecx, [rax - 1]	       216	deflate.c	FUNCTION_1	DO_1
0x4000092	          0x4889d7	                            mov rdi, rdx	       216	deflate.c	FUNCTION_1	DO_1
0x4000095	          0x4801c9	                            add rcx, rcx	       216	deflate.c	FUNCTION_1	DO_1
0x4000098	          0x4829cf	                            sub rdi, rcx	       216	deflate.c	FUNCTION_1	DO_1
0x400009b	        0x488d7ffe	                      lea rdi, [rdi - 2]	       216	deflate.c	FUNCTION_1	DO_1
0x400009f	              0x90	                                     nop	       216	deflate.c	FUNCTION_1	DO_1
0x40000a0	        0x4883ea02	                              sub rdx, 2	       218	deflate.c	FUNCTION_1
0x40000a4	           0xfb732	                   movzx esi, word [rdx]	       218	deflate.c	FUNCTION_1
0x40000a7	            0x89f1	                            mov ecx, esi	       219	deflate.c	FUNCTION_1
0x40000a9	            0x29c1	                            sub ecx, eax	       219	deflate.c	FUNCTION_1
0x40000ab	            0x39f0	                            cmp eax, esi	       219	deflate.c	FUNCTION_1
0x40000ad	      0xbe00000000	                              mov esi, 0	       219	deflate.c	FUNCTION_1
0x40000b2	           0xf47ce	                          cmova ecx, esi	       219	deflate.c	FUNCTION_1
0x40000b5	          0x4839fa	                            cmp rdx, rdi	       223	deflate.c	FUNCTION_1	DO_2
0x40000b8	          0x66890a	                      mov word [rdx], cx	       219	deflate.c	FUNCTION_1
0x40000bb	            0x75e3	                           jne 0x40000a0	       223	deflate.c	FUNCTION_1	DO_2
0x40000bd	            0xf3c3	                                     ret	       225	deflate.c	FUNCTION_1	DO_2
deflateParams	DO,0:IF,10:CALL,3:ELSE,1:functions,0:SWITCH,0:WHILE,0:FOR,0	105
0x4002e60	            0x4156	                                push r14	       572	deflate.c	
0x4002e62	            0x4155	                                push r13	       572	deflate.c	
0x4002e64	          0x4989fd	                            mov r13, rdi	       572	deflate.c	
0x4002e67	            0x4154	                                push r12	       572	deflate.c	
0x4002e69	              0x55	                                push rbp	       572	deflate.c	
0x4002e6a	          0x4189d4	                           mov r12d, edx	       572	deflate.c	
0x4002e6d	              0x53	                                push rbx	       572	deflate.c	
0x4002e6e	          0x4863ee	                         movsxd rbp, esi	       572	deflate.c	
0x4002e71	      0xe84ad2ffff	              call sym.deflateStateCheck	       576	deflate.c	FUNCTION_8
0x4002e76	            0x85c0	                           test eax, eax	       576	deflate.c	FUNCTION_8
0x4002e78	     0xf854a010000	                           jne 0x4002fc8	       576	deflate.c	FUNCTION_8
0x4002e7e	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       582	deflate.c	FUNCTION_8
0x4002e81	          0x4189c6	                           mov r14d, eax	       582	deflate.c	FUNCTION_8
0x4002e84	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       577	deflate.c	FUNCTION_8
0x4002e88	     0xf84d2000000	                            je 0x4002f60	       582	deflate.c	FUNCTION_8
0x4002e8e	          0x83fd09	                              cmp ebp, 9	       582	deflate.c	FUNCTION_8
0x4002e91	           0xf97c0	                                 seta al	       582	deflate.c	FUNCTION_8
0x4002e94	        0x4183fc04	                             cmp r12d, 4	       584	deflate.c	FUNCTION_8	IF_2
0x4002e98	     0xf872a010000	                            ja 0x4002fc8	       584	deflate.c	FUNCTION_8	IF_2
0x4002e9e	            0x84c0	                             test al, al	       584	deflate.c	FUNCTION_8	IF_2
0x4002ea0	     0xf8522010000	                           jne 0x4002fc8	       584	deflate.c	FUNCTION_8	IF_2
0x4002ea6	    0x443ba3c80000	           cmp r12d, dword [rbx + 0xc8] 	       589	deflate.c	FUNCTION_8	IF_4
0x4002ead	    0x8b83c4000000	            mov eax, dword [rbx + 0xc4] 	       587	deflate.c	FUNCTION_8
0x4002eb3	     0xf84b7000000	                            je 0x4002f70	       589	deflate.c	FUNCTION_8	IF_4
0x4002eb9	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	       589	deflate.c	FUNCTION_8	IF_4
0x4002ec1	     0xf85d9000000	                           jne 0x4002fa0	       589	deflate.c	FUNCTION_8	IF_4
0x4002ec7	            0x39c5	                            cmp ebp, eax	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4002ec9	            0x7442	                            je 0x4002f0d	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4002ecb	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002ecd	            0x7451	                            je 0x4002f20	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002ecf	    0x89abc4000000	             mov dword [rbx + 0xc4], ebp	       606	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002ed5	        0x48c1e504	                              shl rbp, 4	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002ed9	     0xfb795000000	                   movzx edx, word [rbp]	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002ee0	     0xfb785000000	                   movzx eax, word [rbp]	       610	deflate.c	FUNCTION_8	IF_8
0x4002ee7	    0x8993c0000000	             mov dword [rbx + 0xc0], edx	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002eed	     0xfb795000000	                   movzx edx, word [rbp]	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002ef4	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	       610	deflate.c	FUNCTION_8	IF_8
0x4002efa	    0x8993cc000000	             mov dword [rbx + 0xcc], edx	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f00	     0xfb795000000	                   movzx edx, word [rbp]	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f07	    0x8993d0000000	             mov dword [rbx + 0xd0], edx	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f0d	    0x4489a3c80000	            mov dword [rbx + 0xc8], r12d	       612	deflate.c	FUNCTION_8	IF_8
0x4002f14	              0x5b	                                 pop rbx	       614	deflate.c	FUNCTION_8	IF_8
0x4002f15	          0x4489f0	                           mov eax, r14d	       614	deflate.c	FUNCTION_8	IF_8
0x4002f18	              0x5d	                                 pop rbp	       614	deflate.c	FUNCTION_8	IF_8
0x4002f19	            0x415c	                                 pop r12	       614	deflate.c	FUNCTION_8	IF_8
0x4002f1b	            0x415d	                                 pop r13	       614	deflate.c	FUNCTION_8	IF_8
0x4002f1d	            0x415e	                                 pop r14	       614	deflate.c	FUNCTION_8	IF_8
0x4002f1f	              0xc3	                                     ret	       614	deflate.c	FUNCTION_8	IF_8
0x4002f20	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002f26	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002f28	            0x74a5	                            je 0x4002ecf	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002f2a	          0x83f801	                              cmp eax, 1	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002f2d	     0xf84ad000000	                            je 0x4002fe0	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002f33	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f39	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f3d	            0x31c9	                            xor ecx, ecx	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f3f	          0x83e801	                              sub eax, 1	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f42	        0x488d1400	                    lea rdx, [rax + rax]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f46	        0x66890c47	              mov word [rdi + rax*2], cx	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002f4a	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x4002f4c	      0xe800000000	                          call 0x4002f51	        90	string3.h	FUNCTION_28	CALL_6
0x4002f51	    0xc78328170000	            mov dword [rbx + 0x1728], 0 	       604	deflate.c	FUNCTION_8	IF_8	IF_9	IF_10
0x4002f5b	      0xe96fffffff	                           jmp 0x4002ecf	       604	deflate.c	FUNCTION_8	IF_8	IF_9	IF_10
0x4002f60	            0x31c0	                            xor eax, eax	       604	deflate.c	FUNCTION_8	IF_8	IF_9	IF_10
0x4002f62	      0xbd06000000	                              mov ebp, 6	       582	deflate.c	FUNCTION_8
0x4002f67	      0xe928ffffff	                           jmp 0x4002e94	       582	deflate.c	FUNCTION_8
0x4002f6c	         0xf1f4000	                         nop dword [rax]	       582	deflate.c	FUNCTION_8
0x4002f70	          0x4863c8	                         movsxd rcx, eax	       587	deflate.c	FUNCTION_8
0x4002f73	          0x4863d5	                         movsxd rdx, ebp	       589	deflate.c	FUNCTION_8	IF_4
0x4002f76	        0x48c1e204	                              shl rdx, 4	       589	deflate.c	FUNCTION_8	IF_4
0x4002f7a	        0x48c1e104	                              shl rcx, 4	       587	deflate.c	FUNCTION_8
0x4002f7e	    0x488bb2000000	                    mov rsi, qword [rdx]	       589	deflate.c	FUNCTION_8	IF_4
0x4002f85	    0x4839b1000000	                    cmp qword [rcx], rsi	       589	deflate.c	FUNCTION_8	IF_4
0x4002f8c	     0xf8435ffffff	                            je 0x4002ec7	       589	deflate.c	FUNCTION_8	IF_4
0x4002f92	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	       589	deflate.c	FUNCTION_8	IF_4
0x4002f9a	     0xf8427ffffff	                            je 0x4002ec7	       589	deflate.c	FUNCTION_8	IF_4
0x4002fa0	      0xbe05000000	                              mov esi, 5	       592	deflate.c	FUNCTION_8
0x4002fa5	          0x4c89ef	                            mov rdi, r13	       592	deflate.c	FUNCTION_8
0x4002fa8	      0xe800000000	                          call 0x4002fad	       592	deflate.c	FUNCTION_8
0x4002fad	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       593	deflate.c	FUNCTION_8	IF_5
0x4002fb0	            0x7416	                            je 0x4002fc8	       593	deflate.c	FUNCTION_8	IF_5
0x4002fb2	        0x418b7520	            mov esi, dword [r13 + 0x20] 	       595	deflate.c	FUNCTION_8	IF_5
0x4002fb6	            0x85f6	                           test esi, esi	       595	deflate.c	FUNCTION_8	IF_5
0x4002fb8	            0x7443	                            je 0x4002ffd	       595	deflate.c	FUNCTION_8	IF_5
0x4002fba	    0x8b83c4000000	            mov eax, dword [rbx + 0xc4] 	       595	deflate.c	FUNCTION_8	IF_5
0x4002fc0	      0xe902ffffff	                           jmp 0x4002ec7	       595	deflate.c	FUNCTION_8	IF_5
0x4002fc5	           0xf1f00	                         nop dword [rax]	       595	deflate.c	FUNCTION_8	IF_5
0x4002fc8	    0x41befeffffff	                    mov r14d, 0xfffffffe	       576	deflate.c	FUNCTION_8
0x4002fce	              0x5b	                                 pop rbx	       614	deflate.c	FUNCTION_8	IF_8
0x4002fcf	          0x4489f0	                           mov eax, r14d	       614	deflate.c	FUNCTION_8	IF_8
0x4002fd2	              0x5d	                                 pop rbp	       614	deflate.c	FUNCTION_8	IF_8
0x4002fd3	            0x415c	                                 pop r12	       614	deflate.c	FUNCTION_8	IF_8
0x4002fd5	            0x415d	                                 pop r13	       614	deflate.c	FUNCTION_8	IF_8
0x4002fd7	            0x415e	                                 pop r14	       614	deflate.c	FUNCTION_8	IF_8
0x4002fd9	              0xc3	                                     ret	       614	deflate.c	FUNCTION_8	IF_8
0x4002fda	    0x660f1f440000	                    nop word [rax + rax]	       614	deflate.c	FUNCTION_8	IF_8
0x4002fe0	          0x4889df	                            mov rdi, rbx	       601	deflate.c	FUNCTION_8	IF_5
0x4002fe3	      0xe858d0ffff	                     call sym.slide_hash	       601	deflate.c	FUNCTION_8	IF_5
0x4002fe8	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	       601	deflate.c	FUNCTION_8	IF_5
0x4002fee	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       601	deflate.c	FUNCTION_8	IF_5
0x4002ff2	          0x8d50ff	                      lea edx, [rax - 1]	       601	deflate.c	FUNCTION_8	IF_5
0x4002ff5	          0x4801d2	                            add rdx, rdx	       601	deflate.c	FUNCTION_8	IF_5
0x4002ff8	      0xe94dffffff	                           jmp 0x4002f4a	       601	deflate.c	FUNCTION_8	IF_5
0x4002ffd	    0x41befbffffff	                    mov r14d, 0xfffffffb	       596	deflate.c	FUNCTION_8	IF_5	CALL_2
0x4003003	      0xe90cffffff	                           jmp 0x4002f14	       596	deflate.c	FUNCTION_8	IF_5	CALL_2
deflate	DO,2:IF,49:CALL,62:ELSE,7:functions,0:SWITCH,0:WHILE,1:FOR,0	1082
0x4001cf0	            0x4157	                                push r15	       766	deflate.c	
0x4001cf2	            0x4156	                                push r14	       766	deflate.c	
0x4001cf4	            0x4155	                                push r13	       766	deflate.c	
0x4001cf6	            0x4154	                                push r12	       766	deflate.c	
0x4001cf8	          0x4189f4	                           mov r12d, esi	       766	deflate.c	
0x4001cfb	              0x55	                                push rbp	       766	deflate.c	
0x4001cfc	              0x53	                                push rbx	       766	deflate.c	
0x4001cfd	          0x4889fb	                            mov rbx, rdi	       766	deflate.c	
0x4001d00	        0x4883ec18	                           sub rsp, 0x18	       766	deflate.c	
0x4001d04	      0xe8b7e3ffff	              call sym.deflateStateCheck	       770	deflate.c	FUNCTION_13
0x4001d09	            0x85c0	                           test eax, eax	       770	deflate.c	FUNCTION_13
0x4001d0b	        0x89442408	                mov dword [rsp + 8], eax	       770	deflate.c	FUNCTION_13
0x4001d0f	     0xf851b0b0000	                           jne 0x4002830	       770	deflate.c	FUNCTION_13
0x4001d15	        0x4183fc05	                             cmp r12d, 5	       770	deflate.c	FUNCTION_13
0x4001d19	     0xf87110b0000	                            ja 0x4002830	       770	deflate.c	FUNCTION_13
0x4001d1f	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       775	deflate.c	FUNCTION_13	IF_1
0x4001d24	        0x4c8b7738	            mov r14, qword [rdi + 0x38] 	       773	deflate.c	FUNCTION_13
0x4001d28	     0xf84aa000000	                            je 0x4001dd8	       775	deflate.c	FUNCTION_13	IF_1
0x4001d2e	          0x8b5708	                mov edx, dword [rdi + 8]	       776	deflate.c	FUNCTION_13	IF_1
0x4001d31	            0x85d2	                           test edx, edx	       775	deflate.c	FUNCTION_13	IF_1
0x4001d33	     0xf858f000000	                           jne 0x4001dc8	       775	deflate.c	FUNCTION_13	IF_1
0x4001d39	        0x418b4608	                mov eax, dword [r14 + 8]	       777	deflate.c	FUNCTION_13
0x4001d3d	        0x4183fc04	                             cmp r12d, 4	       777	deflate.c	FUNCTION_13
0x4001d41	           0xf95c1	                                setne cl	       777	deflate.c	FUNCTION_13
0x4001d44	      0x3d9a020000	                          cmp eax, 0x29a	       777	deflate.c	FUNCTION_13
0x4001d49	            0x7508	                           jne 0x4001d53	       777	deflate.c	FUNCTION_13
0x4001d4b	            0x84c9	                             test cl, cl	       777	deflate.c	FUNCTION_13
0x4001d4d	     0xf8585000000	                           jne 0x4001dd8	       777	deflate.c	FUNCTION_13
0x4001d53	        0x448b6b20	           mov r13d, dword [rbx + 0x20] 	       780	deflate.c	FUNCTION_13	IF_2
0x4001d57	          0x4585ed	                         test r13d, r13d	       780	deflate.c	FUNCTION_13	IF_2
0x4001d5a	     0xf8450050000	                            je 0x40022b0	       780	deflate.c	FUNCTION_13	IF_2
0x4001d60	      0x49837e2800	               cmp qword [r14 + 0x28], 0	       786	deflate.c	FUNCTION_13
0x4001d65	        0x418b764c	            mov esi, dword [r14 + 0x4c] 	       782	deflate.c	FUNCTION_13	IF_2	CALL_2
0x4001d69	        0x4589664c	            mov dword [r14 + 0x4c], r12d	       783	deflate.c	FUNCTION_13	IF_2
0x4001d6d	     0xf85f5010000	                           jne 0x4001f68	       786	deflate.c	FUNCTION_13
0x4001d73	            0x85d2	                           test edx, edx	       803	deflate.c	FUNCTION_13	IF_4
0x4001d75	            0x7479	                            je 0x4001df0	       803	deflate.c	FUNCTION_13	IF_4
0x4001d77	      0x3d9a020000	                          cmp eax, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001d7c	     0xf842e050000	                            je 0x40022b0	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001d82	          0x83f82a	                           cmp eax, 0x2a	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x4001d85	     0xf8445020000	                            je 0x4001fd0	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x4001d8b	          0x83f839	                           cmp eax, 0x39	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x4001d8e	     0xf84bc080000	                            je 0x4002650	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x4001d94	          0x83f845	                           cmp eax, 0x45	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001d97	     0xf8443050000	                            je 0x40022e0	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001d9d	          0x83f849	                           cmp eax, 0x49	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001da0	     0xf845a0d0000	                            je 0x4002b00	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4001da6	          0x83f85b	                           cmp eax, 0x5b	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001da9	     0xf84a50d0000	                            je 0x4002b54	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x4001daf	          0x83f867	                           cmp eax, 0x67	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001db2	     0xf8580000000	                           jne 0x4001e38	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001db8	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001dbc	      0xe9c7070000	                           jmp 0x4002588	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001dc1	     0xf1f80000000	                         nop dword [rax]	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x4001dc8	        0x48833f00	                      cmp qword [rdi], 0	       776	deflate.c	FUNCTION_13	IF_1
0x4001dcc	     0xf8567ffffff	                           jne 0x4001d39	       776	deflate.c	FUNCTION_13	IF_1
0x4001dd2	    0x660f1f440000	                    nop word [rax + rax]	       776	deflate.c	FUNCTION_13	IF_1
0x4001dd8	    0x488b05000000	            mov rax, qword [0x04001ddf] 	       778	deflate.c	FUNCTION_13
0x4001ddf	    0xc7442408feff	        mov dword [rsp + 8], 0xfffffffe 	       778	deflate.c	FUNCTION_13
0x4001de7	        0x48894330	             mov qword [rbx + 0x30], rax	       778	deflate.c	FUNCTION_13
0x4001deb	      0xe9c8010000	                           jmp 0x4001fb8	       778	deflate.c	FUNCTION_13
0x4001df0	            0x31d2	                            xor edx, edx	       803	deflate.c	FUNCTION_13	IF_4
0x4001df2	        0x4183fc05	                             cmp r12d, 5	       803	deflate.c	FUNCTION_13	IF_4
0x4001df6	        0x478d0c24	                    lea r9d, [r12 + r12]	       803	deflate.c	FUNCTION_13	IF_4
0x4001dfa	           0xf94c2	                                 sete dl	       803	deflate.c	FUNCTION_13	IF_4
0x4001dfd	          0x8d3c36	                    lea edi, [rsi + rsi]	       803	deflate.c	FUNCTION_13	IF_4
0x4001e00	          0x8d14d2	                  lea edx, [rdx + rdx*8]	       803	deflate.c	FUNCTION_13	IF_4
0x4001e03	          0x4129d1	                            sub r9d, edx	       803	deflate.c	FUNCTION_13	IF_4
0x4001e06	            0x31d2	                            xor edx, edx	       803	deflate.c	FUNCTION_13	IF_4
0x4001e08	          0x83fe05	                              cmp esi, 5	       803	deflate.c	FUNCTION_13	IF_4
0x4001e0b	           0xf9dc2	                                setge dl	       803	deflate.c	FUNCTION_13	IF_4
0x4001e0e	          0x8d14d2	                  lea edx, [rdx + rdx*8]	       803	deflate.c	FUNCTION_13	IF_4
0x4001e11	            0x29d7	                            sub edi, edx	       803	deflate.c	FUNCTION_13	IF_4
0x4001e13	          0x4139f9	                            cmp r9d, edi	       803	deflate.c	FUNCTION_13	IF_4
0x4001e16	            0x7f08	                            jg 0x4001e20	       803	deflate.c	FUNCTION_13	IF_4
0x4001e18	            0x84c9	                             test cl, cl	       803	deflate.c	FUNCTION_13	IF_4
0x4001e1a	     0xf8590040000	                           jne 0x40022b0	       803	deflate.c	FUNCTION_13	IF_4
0x4001e20	      0x3d9a020000	                          cmp eax, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001e25	     0xf8557ffffff	                           jne 0x4001d82	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001e2b	        0x448b5b08	               mov r11d, dword [rbx + 8]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001e2f	          0x4585db	                         test r11d, r11d	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001e32	     0xf8578040000	                           jne 0x40022b0	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001e38	        0x448b5308	               mov r10d, dword [rbx + 8]	       996	deflate.c	FUNCTION_13
0x4001e3c	          0x4585d2	                         test r10d, r10d	       996	deflate.c	FUNCTION_13
0x4001e3f	            0x751f	                           jne 0x4001e60	       996	deflate.c	FUNCTION_13
0x4001e41	    0x458b8eb40000	            mov r9d, dword [r14 + 0xb4] 	       996	deflate.c	FUNCTION_13
0x4001e48	          0x4585c9	                           test r9d, r9d	       996	deflate.c	FUNCTION_13
0x4001e4b	            0x7513	                           jne 0x4001e60	       996	deflate.c	FUNCTION_13
0x4001e4d	          0x4585e4	                         test r12d, r12d	       996	deflate.c	FUNCTION_13
0x4001e50	     0xf8462010000	                            je 0x4001fb8	       996	deflate.c	FUNCTION_13
0x4001e56	    0x41817e089a02	              cmp dword [r14 + 8], 0x29a	       997	deflate.c	FUNCTION_13
0x4001e5e	            0x745a	                            je 0x4001eba	       997	deflate.c	FUNCTION_13
0x4001e60	    0x496386c40000	         movsxd rax, dword [r14 + 0xc4] 	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e67	            0x85c0	                           test eax, eax	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e69	     0xf8461040000	                            je 0x40022d0	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e6f	    0x418b96c80000	            mov edx, dword [r14 + 0xc8] 	      1001	deflate.c	FUNCTION_13	IF_36
0x4001e76	          0x83fa02	                              cmp edx, 2	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e79	     0xf84f1020000	                            je 0x4002170	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e7f	          0x83fa03	                              cmp edx, 3	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e82	     0xf84b8090000	                            je 0x4002840	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e88	        0x48c1e004	                              shl rax, 4	      1003	deflate.c	FUNCTION_13	IF_36
0x4001e8c	          0x4489e6	                           mov esi, r12d	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e8f	          0x4c89f7	                            mov rdi, r14	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e92	    0xff9000000000	                        call qword [rax]	      1000	deflate.c	FUNCTION_13	IF_36
0x4001e98	          0x8d50fe	                      lea edx, [rax - 2]	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4001e9b	          0x83fa01	                              cmp edx, 1	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4001e9e	     0xf86ec000000	                           jbe 0x4001f90	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4001ea4	            0x89c2	                            mov edx, eax	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4001ea6	          0x83e2fd	                     and edx, 0xfffffffd	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x4001ea9	            0x85d2	                           test edx, edx	      1008	deflate.c	FUNCTION_13	IF_36
0x4001eab	     0xf84f2000000	                            je 0x4001fa3	      1008	deflate.c	FUNCTION_13	IF_36
0x4001eb1	          0x83f801	                              cmp eax, 1	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x4001eb4	     0xf84560c0000	                            je 0x4002b10	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x4001eba	        0x4183fc04	                             cmp r12d, 4	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x4001ebe	     0xf85f4000000	                           jne 0x4001fb8	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x4001ec4	        0x418b4630	            mov eax, dword [r14 + 0x30] 	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4001ec8	            0x85c0	                           test eax, eax	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4001eca	     0xf8e000e0000	                           jle 0x4002cd0	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4001ed0	          0x83f802	                              cmp eax, 2	      1051	deflate.c	FUNCTION_13	IF_47
0x4001ed3	     0xf84220d0000	                            je 0x4002bfb	      1051	deflate.c	FUNCTION_13	IF_47
0x4001ed9	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       720	deflate.c	
0x4001edd	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1064	deflate.c	FUNCTION_13	IF_48
0x4001ee1	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       720	deflate.c	
0x4001ee5	        0x488d7201	                      lea rsi, [rdx + 1]	       720	deflate.c	
0x4001ee9	        0x48c1e810	                           shr rax, 0x10	      1064	deflate.c	FUNCTION_13	IF_48
0x4001eed	        0x49897628	             mov qword [r14 + 0x28], rsi	       720	deflate.c	
0x4001ef1	            0x89c6	                            mov esi, eax	       720	deflate.c	
0x4001ef3	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4001ef6	        0x40883411	               mov byte [rcx + rdx], sil	       720	deflate.c	
0x4001efa	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       721	deflate.c	
0x4001efe	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       721	deflate.c	
0x4001f02	        0x488d7201	                      lea rsi, [rdx + 1]	       721	deflate.c	
0x4001f06	        0x49897628	             mov qword [r14 + 0x28], rsi	       721	deflate.c	
0x4001f0a	          0x880411	                mov byte [rcx + rdx], al	       721	deflate.c	
0x4001f0d	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       720	deflate.c	
0x4001f11	         0xfb75360	           movzx edx, word [rbx + 0x60] 	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4001f15	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       720	deflate.c	
0x4001f19	        0x488d7001	                      lea rsi, [rax + 1]	       720	deflate.c	
0x4001f1d	        0x49897628	             mov qword [r14 + 0x28], rsi	       720	deflate.c	
0x4001f21	            0x89d6	                            mov esi, edx	       720	deflate.c	
0x4001f23	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4001f26	        0x40883401	               mov byte [rcx + rax], sil	       720	deflate.c	
0x4001f2a	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       721	deflate.c	
0x4001f2e	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       721	deflate.c	
0x4001f32	        0x488d7001	                      lea rsi, [rax + 1]	       721	deflate.c	
0x4001f36	        0x49897628	             mov qword [r14 + 0x28], rsi	       721	deflate.c	
0x4001f3a	          0x881401	                mov byte [rcx + rax], dl	       721	deflate.c	
0x4001f3d	          0x4889df	                            mov rdi, rbx	      1067	deflate.c	FUNCTION_13	ELSE_7
0x4001f40	      0xe85be7ffff	                  call sym.flush_pending	      1067	deflate.c	FUNCTION_13	ELSE_7
0x4001f45	        0x418b4630	            mov eax, dword [r14 + 0x30] 	      1071	deflate.c	FUNCTION_13	CALL_62
0x4001f49	            0x85c0	                           test eax, eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x4001f4b	            0x7e06	                           jle 0x4001f53	      1071	deflate.c	FUNCTION_13	CALL_62
0x4001f4d	            0xf7d8	                                 neg eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x4001f4f	        0x41894630	             mov dword [r14 + 0x30], eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x4001f53	            0x31c0	                            xor eax, eax	      1072	deflate.c	FUNCTION_13
0x4001f55	      0x49837e2800	               cmp qword [r14 + 0x28], 0	      1072	deflate.c	FUNCTION_13
0x4001f5a	           0xf94c0	                                 sete al	      1072	deflate.c	FUNCTION_13
0x4001f5d	        0x89442408	                mov dword [rsp + 8], eax	      1072	deflate.c	FUNCTION_13
0x4001f61	            0xeb55	                           jmp 0x4001fb8	      1072	deflate.c	FUNCTION_13
0x4001f63	       0xf1f440000	                   nop dword [rax + rax]	      1072	deflate.c	FUNCTION_13
0x4001f68	          0x4889df	                            mov rdi, rbx	       787	deflate.c	FUNCTION_13
0x4001f6b	      0xe830e7ffff	                  call sym.flush_pending	       787	deflate.c	FUNCTION_13
0x4001f70	          0x8b6b20	            mov ebp, dword [rbx + 0x20] 	       788	deflate.c	FUNCTION_13
0x4001f73	            0x85ed	                           test ebp, ebp	       788	deflate.c	FUNCTION_13
0x4001f75	            0x7439	                            je 0x4001fb0	       788	deflate.c	FUNCTION_13
0x4001f77	        0x418b4608	                mov eax, dword [r14 + 8]	       788	deflate.c	FUNCTION_13
0x4001f7b	      0x3d9a020000	                          cmp eax, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001f80	     0xf85fcfdffff	                           jne 0x4001d82	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001f86	      0xe9a0feffff	                           jmp 0x4001e2b	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001f8b	       0xf1f440000	                   nop dword [rax + rax]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001f90	          0x83e0fd	                     and eax, 0xfffffffd	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001f93	            0x85c0	                           test eax, eax	      1008	deflate.c	FUNCTION_13	IF_36
0x4001f95	    0x41c746089a02	              mov dword [r14 + 8], 0x29a	      1006	deflate.c	FUNCTION_13	IF_36	CALL_48
0x4001f9d	     0xf8517ffffff	                           jne 0x4001eba	      1008	deflate.c	FUNCTION_13	IF_36
0x4001fa3	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x4001fa6	            0x85c0	                           test eax, eax	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x4001fa8	            0x750e	                           jne 0x4001fb8	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x4001faa	    0x660f1f440000	                    nop word [rax + rax]	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x4001fb0	    0x41c7464cffff	     mov dword [r14 + 0x4c], 0xffffffff 	      1040	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4001fb8	        0x8b442408	                mov eax, dword [rsp + 8]	      1073	deflate.c	FUNCTION_13
0x4001fbc	        0x4883c418	                           add rsp, 0x18	      1073	deflate.c	FUNCTION_13
0x4001fc0	              0x5b	                                 pop rbx	      1073	deflate.c	FUNCTION_13
0x4001fc1	              0x5d	                                 pop rbp	      1073	deflate.c	FUNCTION_13
0x4001fc2	            0x415c	                                 pop r12	      1073	deflate.c	FUNCTION_13
0x4001fc4	            0x415d	                                 pop r13	      1073	deflate.c	FUNCTION_13
0x4001fc6	            0x415e	                                 pop r14	      1073	deflate.c	FUNCTION_13
0x4001fc8	            0x415f	                                 pop r15	      1073	deflate.c	FUNCTION_13
0x4001fca	              0xc3	                                     ret	      1073	deflate.c	FUNCTION_13
0x4001fcb	       0xf1f440000	                   nop dword [rax + rax]	      1073	deflate.c	FUNCTION_13
0x4001fd0	        0x418b4654	            mov eax, dword [r14 + 0x54] 	       816	deflate.c	FUNCTION_13
0x4001fd4	          0xc1e00c	                            shl eax, 0xc	       816	deflate.c	FUNCTION_13
0x4001fd7	    0x8d880088ffff	                 lea ecx, [rax - 0x7800]	       816	deflate.c	FUNCTION_13
0x4001fdd	            0x31c0	                            xor eax, eax	       816	deflate.c	FUNCTION_13
0x4001fdf	    0x4183bec80000	               cmp dword [r14 + 0xc8], 1	       819	deflate.c	FUNCTION_13	IF_8
0x4001fe7	     0xf8e03010000	                           jle 0x40020f0	       819	deflate.c	FUNCTION_13	IF_8
0x4001fed	    0x458b8eac0000	            mov r9d, dword [r14 + 0xac] 	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001ff4	             0x9c1	                             or ecx, eax	       827	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001ff6	      0xba85104208	                      mov edx, 0x8421085	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001ffb	            0x89c8	                            mov eax, ecx	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001ffd	          0x83c820	                            or eax, 0x20	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002000	          0x4585c9	                           test r9d, r9d	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002003	           0xf45c8	                         cmovne ecx, eax	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4002006	            0x89c8	                            mov eax, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002008	            0xf7e2	                                 mul edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400200a	            0x29d1	                            sub ecx, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400200c	            0xd1e9	                              shr ecx, 1	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400200e	             0x1ca	                            add edx, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002010	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       720	deflate.c	
0x4002014	          0xc1ea04	                              shr edx, 4	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002017	            0x89d0	                            mov eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002019	          0xc1e005	                              shl eax, 5	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400201c	            0x29d0	                            sub eax, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x400201e	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       720	deflate.c	
0x4002022	          0x83c01f	                           add eax, 0x1f	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4002025	        0x488d7201	                      lea rsi, [rdx + 1]	       720	deflate.c	
0x4002029	        0x49897628	             mov qword [r14 + 0x28], rsi	       720	deflate.c	
0x400202d	            0x89c6	                            mov esi, eax	       720	deflate.c	
0x400202f	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4002032	        0x40883411	               mov byte [rcx + rdx], sil	       720	deflate.c	
0x4002036	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       721	deflate.c	
0x400203a	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       721	deflate.c	
0x400203e	        0x488d7201	                      lea rsi, [rdx + 1]	       721	deflate.c	
0x4002042	        0x49897628	             mov qword [r14 + 0x28], rsi	       721	deflate.c	
0x4002046	          0x880411	                mov byte [rcx + rdx], al	       721	deflate.c	
0x4002049	    0x458b96ac0000	           mov r10d, dword [r14 + 0xac] 	       834	deflate.c	FUNCTION_13	IF_8
0x4002050	          0x4585d2	                         test r10d, r10d	       834	deflate.c	FUNCTION_13	IF_8
0x4002053	            0x7464	                            je 0x40020b9	       834	deflate.c	FUNCTION_13	IF_8
0x4002055	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       720	deflate.c	
0x4002059	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x400205d	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       720	deflate.c	
0x4002061	        0x488d7201	                      lea rsi, [rdx + 1]	       720	deflate.c	
0x4002065	        0x48c1e810	                           shr rax, 0x10	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x4002069	        0x49897628	             mov qword [r14 + 0x28], rsi	       720	deflate.c	
0x400206d	            0x89c6	                            mov esi, eax	       720	deflate.c	
0x400206f	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x4002072	        0x40883411	               mov byte [rcx + rdx], sil	       720	deflate.c	
0x4002076	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       721	deflate.c	
0x400207a	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       721	deflate.c	
0x400207e	        0x488d7201	                      lea rsi, [rdx + 1]	       721	deflate.c	
0x4002082	        0x49897628	             mov qword [r14 + 0x28], rsi	       721	deflate.c	
0x4002086	          0x880411	                mov byte [rcx + rdx], al	       721	deflate.c	
0x4002089	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       720	deflate.c	
0x400208d	         0xfb75360	           movzx edx, word [rbx + 0x60] 	       836	deflate.c	FUNCTION_13	IF_8
0x4002091	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       720	deflate.c	
0x4002095	        0x488d7001	                      lea rsi, [rax + 1]	       720	deflate.c	
0x4002099	        0x49897628	             mov qword [r14 + 0x28], rsi	       720	deflate.c	
0x400209d	            0x89d6	                            mov esi, edx	       720	deflate.c	
0x400209f	          0xc1ee08	                              shr esi, 8	       720	deflate.c	
0x40020a2	        0x40883401	               mov byte [rcx + rax], sil	       720	deflate.c	
0x40020a6	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       721	deflate.c	
0x40020aa	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       721	deflate.c	
0x40020ae	        0x488d7001	                      lea rsi, [rax + 1]	       721	deflate.c	
0x40020b2	        0x49897628	             mov qword [r14 + 0x28], rsi	       721	deflate.c	
0x40020b6	          0x881401	                mov byte [rcx + rax], dl	       721	deflate.c	
0x40020b9	            0x31d2	                            xor edx, edx	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x40020bb	            0x31f6	                            xor esi, esi	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x40020bd	            0x31ff	                            xor edi, edi	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x40020bf	      0xe800000000	                          call 0x40020c4	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x40020c4	          0x4889df	                            mov rdi, rbx	       842	deflate.c	FUNCTION_13	IF_8	CALL_10
0x40020c7	        0x48894360	             mov qword [rbx + 0x60], rax	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x40020cb	    0x41c746087100	               mov dword [r14 + 8], 0x71	       839	deflate.c	FUNCTION_13	IF_8	IF_13	CALL_8
0x40020d3	      0xe8c8e5ffff	                  call sym.flush_pending	       842	deflate.c	FUNCTION_13	IF_8	CALL_10
0x40020d8	      0x49837e2800	               cmp qword [r14 + 0x28], 0	       843	deflate.c	FUNCTION_13	IF_8
0x40020dd	     0xf85cdfeffff	                           jne 0x4001fb0	       843	deflate.c	FUNCTION_13	IF_8
0x40020e3	        0x418b4608	                mov eax, dword [r14 + 8]	       843	deflate.c	FUNCTION_13	IF_8
0x40020e7	      0xe99ffcffff	                           jmp 0x4001d8b	       843	deflate.c	FUNCTION_13	IF_8
0x40020ec	         0xf1f4000	                         nop dword [rax]	       843	deflate.c	FUNCTION_13	IF_8
0x40020f0	    0x418b96c40000	            mov edx, dword [r14 + 0xc4] 	       819	deflate.c	FUNCTION_13	IF_8
0x40020f7	          0x83fa01	                              cmp edx, 1	       819	deflate.c	FUNCTION_13	IF_8
0x40020fa	     0xf8eedfeffff	                           jle 0x4001fed	       819	deflate.c	FUNCTION_13	IF_8
0x4002100	          0x83fa05	                              cmp edx, 5	       821	deflate.c	FUNCTION_13	IF_8
0x4002103	      0xb840000000	                           mov eax, 0x40	       821	deflate.c	FUNCTION_13	IF_8
0x4002108	     0xf8edffeffff	                           jle 0x4001fed	       821	deflate.c	FUNCTION_13	IF_8
0x400210e	          0x83fa06	                              cmp edx, 6	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4002111	      0xb8c0000000	                           mov eax, 0xc0	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4002116	      0xba80000000	                           mov edx, 0x80	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x400211b	           0xf44c2	                          cmove eax, edx	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x400211e	      0xe9cafeffff	                           jmp 0x4001fed	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4002123	       0xf1f440000	                   nop dword [rax + rax]	       823	deflate.c	FUNCTION_13	IF_8	IF_9
0x4002128	    0x498b86980000	            mov rax, qword [r14 + 0x98] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400212f	            0x31f6	                            xor esi, esi	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002131	          0x4829c2	                            sub rdx, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002134	          0x4885c0	                           test rax, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002137	            0x7809	                            js 0x4002142	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002139	            0x89c0	                            mov eax, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400213b	        0x49034660	             add rax, qword [r14 + 0x60]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400213f	          0x4889c6	                            mov rsi, rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002142	            0x31c9	                            xor ecx, ecx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002144	          0x4c89f7	                            mov rdi, r14	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002147	      0xe800000000	                          call 0x400214c	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400214c	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002153	          0x498b3e	                    mov rdi, qword [r14]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002156	    0x498986980000	             mov qword [r14 + 0x98], rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400215d	      0xe83ee5ffff	                  call sym.flush_pending	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002162	          0x498b06	                    mov rax, qword [r14]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002165	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002168	            0x85c0	                           test eax, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400216a	     0xf8433feffff	                            je 0x4001fa3	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002170	    0x418b86b40000	            mov eax, dword [r14 + 0xb4] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002177	      0xe98c000000	                           jmp 0x4002208	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400217c	         0xf1f4000	                         nop dword [rax]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002180	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002187	    0x418b8e0c1700	          mov ecx, dword [r14 + 0x170c] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400218e	            0x31ff	                            xor edi, edi	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002190	        0x498b5660	            mov rdx, qword [r14 + 0x60] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002194	    0x498bb6101700	          mov rsi, qword [r14 + 0x1710] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400219b	    0x41c786a00000	               mov dword [r14 + 0xa0], 0	      2148	deflate.c	FUNCTION_24	FOR_1	IF_1	IF_2
0x40021a6	         0xfb60402	             movzx eax, byte [rdx + rax]	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021aa	        0x66893c4e	              mov word [rsi + rcx*2], di	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021ae	          0x4889ca	                            mov rdx, rcx	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021b1	    0x498bb6001700	          mov rsi, qword [r14 + 0x1700] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021b8	          0x83c201	                              add edx, 1	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021bb	    0x4189960c1700	          mov dword [r14 + 0x170c], edx 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021c2	          0x88040e	                mov byte [rsi + rcx], al	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021c5	    0x6641838486d4	        add word [r14 + rax*4 + 0xd4], 1	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021cf	    0x418b86081700	          mov eax, dword [r14 + 0x1708] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021d6	    0x418bbeac0000	            mov edi, dword [r14 + 0xac] 	      2152	deflate.c	FUNCTION_24	FOR_1
0x40021dd	          0x8d48ff	                      lea ecx, [rax - 1]	      2150	deflate.c	FUNCTION_24	FOR_1
0x40021e0	    0x418b86b40000	            mov eax, dword [r14 + 0xb4] 	      2151	deflate.c	FUNCTION_24	FOR_1
0x40021e7	          0x8d5701	                      lea edx, [rdi + 1]	      2152	deflate.c	FUNCTION_24	FOR_1
0x40021ea	    0x418996ac0000	             mov dword [r14 + 0xac], edx	      2152	deflate.c	FUNCTION_24	FOR_1
0x40021f1	          0x83e801	                              sub eax, 1	      2151	deflate.c	FUNCTION_24	FOR_1
0x40021f4	    0x41398e0c1700	          cmp dword [r14 + 0x170c], ecx 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x40021fb	    0x418986b40000	             mov dword [r14 + 0xb4], eax	      2151	deflate.c	FUNCTION_24	FOR_1
0x4002202	     0xf8420ffffff	                            je 0x4002128	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002208	            0x85c0	                           test eax, eax	      2138	deflate.c	FUNCTION_24
0x400220a	     0xf8570ffffff	                           jne 0x4002180	      2138	deflate.c	FUNCTION_24
0x4002210	          0x4c89f7	                            mov rdi, r14	      2139	deflate.c	FUNCTION_24
0x4002213	      0xe8e8e1ffff	                    call sym.fill_window	      2139	deflate.c	FUNCTION_24
0x4002218	    0x458b86b40000	            mov r8d, dword [r14 + 0xb4] 	      2140	deflate.c	FUNCTION_24	FOR_1
0x400221f	          0x4585c0	                           test r8d, r8d	      2140	deflate.c	FUNCTION_24	FOR_1
0x4002222	     0xf8558ffffff	                           jne 0x4002180	      2140	deflate.c	FUNCTION_24	FOR_1
0x4002228	          0x4585e4	                         test r12d, r12d	      2141	deflate.c	FUNCTION_24	FOR_1
0x400222b	     0xf8472fdffff	                            je 0x4001fa3	      2141	deflate.c	FUNCTION_24	FOR_1
0x4002231	        0x4183fc04	                             cmp r12d, 4	      2156	deflate.c	FUNCTION_24	FOR_1
0x4002235	    0x41c7862c1700	            mov dword [r14 + 0x172c], 0 	      2155	deflate.c	FUNCTION_24	FOR_1
0x4002240	     0xf8417090000	                            je 0x4002b5d	      2156	deflate.c	FUNCTION_24	FOR_1
0x4002246	    0x458b8e0c1700	          mov r9d, dword [r14 + 0x170c] 	      2121	deflate.c	FUNCTION_23	IF_9
0x400224d	          0x4585c9	                           test r9d, r9d	      2121	deflate.c	FUNCTION_23	IF_9
0x4002250	     0xf84ba080000	                            je 0x4002b10	      2121	deflate.c	FUNCTION_23	IF_9
0x4002256	    0x418b96ac0000	            mov edx, dword [r14 + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x400225d	    0x498b86980000	            mov rax, qword [r14 + 0x98] 	      2122	deflate.c	FUNCTION_23	IF_9
0x4002264	            0x31f6	                            xor esi, esi	      2122	deflate.c	FUNCTION_23	IF_9
0x4002266	          0x4829c2	                            sub rdx, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002269	          0x4885c0	                           test rax, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x400226c	            0x7809	                            js 0x4002277	      2122	deflate.c	FUNCTION_23	IF_9
0x400226e	            0x89c0	                            mov eax, eax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002270	        0x49034660	             add rax, qword [r14 + 0x60]	      2122	deflate.c	FUNCTION_23	IF_9
0x4002274	          0x4889c6	                            mov rsi, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002277	            0x31c9	                            xor ecx, ecx	      2122	deflate.c	FUNCTION_23	IF_9
0x4002279	          0x4c89f7	                            mov rdi, r14	      2122	deflate.c	FUNCTION_23	IF_9
0x400227c	      0xe800000000	                          call 0x4002281	      2122	deflate.c	FUNCTION_23	IF_9
0x4002281	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x4002288	          0x498b3e	                    mov rdi, qword [r14]	      2122	deflate.c	FUNCTION_23	IF_9
0x400228b	    0x498986980000	             mov qword [r14 + 0x98], rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002292	      0xe809e4ffff	                  call sym.flush_pending	      2122	deflate.c	FUNCTION_23	IF_9
0x4002297	          0x498b06	                    mov rax, qword [r14]	      2122	deflate.c	FUNCTION_23	IF_9
0x400229a	        0x448b4020	            mov r8d, dword [rax + 0x20] 	      2162	deflate.c	FUNCTION_24	IF_5
0x400229e	            0x31c0	                            xor eax, eax	      2162	deflate.c	FUNCTION_24	IF_5
0x40022a0	          0x4585c0	                           test r8d, r8d	      2162	deflate.c	FUNCTION_24	IF_5
0x40022a3	           0xf95c0	                                setne al	      2162	deflate.c	FUNCTION_24	IF_5
0x40022a6	            0x89c2	                            mov edx, eax	      2162	deflate.c	FUNCTION_24	IF_5
0x40022a8	      0xe9fcfbffff	                           jmp 0x4001ea9	      2162	deflate.c	FUNCTION_24	IF_5
0x40022ad	           0xf1f00	                         nop dword [rax]	      2162	deflate.c	FUNCTION_24	IF_5
0x40022b0	    0x488b05000000	            mov rax, qword [0x040022b7] 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40022b7	    0xc7442408fbff	        mov dword [rsp + 8], 0xfffffffb 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40022bf	        0x48894330	             mov qword [rbx + 0x30], rax	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40022c3	      0xe9f0fcffff	                           jmp 0x4001fb8	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40022c8	     0xf1f84000000	                   nop dword [rax + rax]	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x40022d0	          0x4489e6	                           mov esi, r12d	      1000	deflate.c	FUNCTION_13	IF_36
0x40022d3	          0x4c89f7	                            mov rdi, r14	      1000	deflate.c	FUNCTION_13	IF_36
0x40022d6	      0xe845eeffff	                 call sym.deflate_stored	      1000	deflate.c	FUNCTION_13	IF_36
0x40022db	      0xe9b8fbffff	                           jmp 0x4001e98	      1000	deflate.c	FUNCTION_13	IF_36
0x40022e0	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      1000	deflate.c	FUNCTION_13	IF_36
0x40022e4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40022e8	          0x4885d2	                           test rdx, rdx	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40022eb	     0xf8417010000	                            je 0x4002408	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40022f1	      0x440fb76820	          movzx r13d, word [rax + 0x20] 	       903	deflate.c	FUNCTION_13	IF_15
0x40022f6	        0x498b7640	            mov rsi, qword [r14 + 0x40] 	       903	deflate.c	FUNCTION_13	IF_15
0x40022fa	        0x498b4e28	            mov rcx, qword [r14 + 0x28] 	       902	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40022fe	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002302	          0x4129f5	                           sub r13d, esi	       903	deflate.c	FUNCTION_13	IF_15
0x4002305	          0x4589ef	                          mov r15d, r13d	       904	deflate.c	FUNCTION_13	IF_20
0x4002308	        0x4a8d0439	                    lea rax, [rcx + r15]	       904	deflate.c	FUNCTION_13	IF_20
0x400230c	          0x4839e8	                            cmp rax, rbp	       904	deflate.c	FUNCTION_13	IF_20
0x400230f	            0x7743	                            ja 0x4002354	       904	deflate.c	FUNCTION_13	IF_20
0x4002311	      0xe99a000000	                           jmp 0x40023b0	       904	deflate.c	FUNCTION_13	IF_20
0x4002316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       904	deflate.c	FUNCTION_13	IF_20
0x4002320	        0x4d017e40	            add qword [r14 + 0x40], r15 	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4002324	          0x4889df	                            mov rdi, rbx	       911	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002327	      0xe874e3ffff	                  call sym.flush_pending	       911	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400232c	      0x49837e2800	               cmp qword [r14 + 0x28], 0	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002331	     0xf8579fcffff	                           jne 0x4001fb0	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002337	          0x4129ed	                           sub r13d, ebp	       917	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x400233a	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x400233e	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002342	          0x4589ef	                          mov r15d, r13d	       904	deflate.c	FUNCTION_13	IF_20
0x4002345	            0x31c9	                            xor ecx, ecx	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002347	        0x498b7640	            mov rsi, qword [r14 + 0x40] 	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x400234b	          0x4939ef	                            cmp r15, rbp	       904	deflate.c	FUNCTION_13	IF_20
0x400234e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002352	            0x765c	                           jbe 0x40023b0	       904	deflate.c	FUNCTION_13	IF_20
0x4002354	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x4002357	        0x49037e10	             add rdi, qword [r14 + 0x10]	        53	string3.h	FUNCTION_25	CALL_3
0x400235b	            0x29cd	                            sub ebp, ecx	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x400235d	          0x4189ef	                           mov r15d, ebp	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002360	          0x4801d6	                            add rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x4002363	        0x894c240c	              mov dword [rsp + 0xc], ecx	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002367	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x400236a	        0x48890c24	                    mov qword [rsp], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x400236e	      0xe800000000	                          call 0x4002373	        53	string3.h	FUNCTION_25	CALL_3
0x4002373	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002377	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400237b	          0x8b7044	            mov esi, dword [rax + 0x44] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400237e	        0x49895628	             mov qword [r14 + 0x28], rdx	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002382	            0x85f6	                           test esi, esi	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002384	            0x749a	                            je 0x4002320	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002386	        0x488b0c24	                    mov rcx, qword [rsp]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400238a	          0x4839ca	                            cmp rdx, rcx	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400238d	            0x7691	                           jbe 0x4002320	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400238f	          0x4889ce	                            mov rsi, rcx	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002392	        0x2b54240c	              sub edx, dword [rsp + 0xc]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002396	        0x49037610	             add rsi, qword [r14 + 0x10]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400239a	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400239e	      0xe800000000	                          call 0x40023a3	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023a3	        0x48894360	             mov qword [rbx + 0x60], rax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023a7	      0xe974ffffff	                           jmp 0x4002320	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023ac	         0xf1f4000	                         nop dword [rax]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023b0	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x40023b3	        0x49037e10	             add rdi, qword [r14 + 0x10]	        53	string3.h	FUNCTION_25	CALL_3
0x40023b7	          0x4801d6	                            add rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x40023ba	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x40023bd	        0x48890c24	                    mov qword [rsp], rcx	        53	string3.h	FUNCTION_25	CALL_3
0x40023c1	      0xe800000000	                          call 0x40023c6	        53	string3.h	FUNCTION_25	CALL_3
0x40023c6	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023ca	          0x4c89fa	                            mov rdx, r15	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023cd	        0x49035628	             add rdx, qword [r14 + 0x28]	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023d1	          0x8b4844	            mov ecx, dword [rax + 0x44] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023d4	        0x49895628	             mov qword [r14 + 0x28], rdx	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023d8	            0x85c9	                           test ecx, ecx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023da	            0x7424	                            je 0x4002400	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023dc	        0x488b0c24	                    mov rcx, qword [rsp]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023e0	          0x4839ca	                            cmp rdx, rcx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023e3	            0x761b	                           jbe 0x4002400	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023e5	          0x4889ce	                            mov rsi, rcx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023e8	        0x49037610	             add rsi, qword [r14 + 0x10]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023ec	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023f0	            0x29ca	                            sub edx, ecx	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023f2	      0xe800000000	                          call 0x40023f7	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023f7	        0x48894360	             mov qword [rbx + 0x60], rax	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023fb	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40023ff	              0x90	                                     nop	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002400	    0x49c746400000	               mov qword [r14 + 0x40], 0	       923	deflate.c	FUNCTION_13	IF_20	IF_21	CALL_36
0x4002408	    0x41c746084900	               mov dword [r14 + 8], 0x49	       925	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002410	      0x4883782800	               cmp qword [rax + 0x28], 0	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002415	     0xf84ad000000	                            je 0x40024c8	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x400241b	        0x498b7628	            mov rsi, qword [r14 + 0x28] 	       929	deflate.c	FUNCTION_13	IF_20
0x400241f	          0x4889f2	                            mov rdx, rsi	       929	deflate.c	FUNCTION_13	IF_20
0x4002422	            0xeb33	                           jmp 0x4002457	       929	deflate.c	FUNCTION_13	IF_20
0x4002424	         0xf1f4000	                         nop dword [rax]	       929	deflate.c	FUNCTION_13	IF_20
0x4002428	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x400242c	        0x498b4640	            mov rax, qword [r14 + 0x40] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002430	        0x488d7801	                      lea rdi, [rax + 1]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002434	        0x49897e40	             mov qword [r14 + 0x40], rdi	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002438	         0xfb60401	             movzx eax, byte [rcx + rax]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x400243c	        0x488d7a01	                      lea rdi, [rdx + 1]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002440	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002444	        0x49897e28	             mov qword [r14 + 0x28], rdi	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002448	            0x84c0	                             test al, al	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x400244a	          0x880411	                mov byte [rcx + rdx], al	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x400244d	            0x7441	                            je 0x4002490	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x400244f	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002453	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002457	        0x49395618	            cmp qword [r14 + 0x18], rdx 	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x400245b	            0x75cb	                           jne 0x4002428	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x400245d	          0x8b4044	            mov eax, dword [rax + 0x44] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002460	            0x85c0	                           test eax, eax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002462	            0x7409	                            je 0x400246d	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002464	          0x4839d6	                            cmp rsi, rdx	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002467	     0xf82ab010000	                            jb 0x4002618	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400246d	          0x4889df	                            mov rdi, rbx	       934	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002470	      0xe82be2ffff	                  call sym.flush_pending	       934	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002475	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002479	          0x4885d2	                           test rdx, rdx	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x400247c	     0xf852efbffff	                           jne 0x4001fb0	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002482	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002486	            0x31f6	                            xor esi, esi	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002488	            0xeb9e	                           jmp 0x4002428	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x400248a	    0x660f1f440000	                    nop word [rax + rax]	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002490	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002494	        0x448b7844	           mov r15d, dword [rax + 0x44] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002498	          0x4585ff	                         test r15d, r15d	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x400249b	            0x7423	                            je 0x40024c0	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x400249d	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024a1	          0x4839d6	                            cmp rsi, rdx	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024a4	            0x731a	                           jae 0x40024c0	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024a6	            0x29f2	                            sub edx, esi	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024a8	        0x49037610	             add rsi, qword [r14 + 0x10]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024ac	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024b0	      0xe800000000	                          call 0x40024b5	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024b5	        0x48894360	             mov qword [rbx + 0x60], rax	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024b9	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024bd	           0xf1f00	                         nop dword [rax]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40024c0	    0x49c746400000	               mov qword [r14 + 0x40], 0	       945	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x40024c8	    0x41c746085b00	               mov dword [r14 + 8], 0x5b	       947	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x40024d0	      0x4883783800	               cmp qword [rax + 0x38], 0	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x40024d5	     0xf84a5000000	                            je 0x4002580	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x40024db	        0x498b7628	            mov rsi, qword [r14 + 0x28] 	       951	deflate.c	FUNCTION_13	IF_23
0x40024df	          0x4889f2	                            mov rdx, rsi	       951	deflate.c	FUNCTION_13	IF_23
0x40024e2	            0xeb33	                           jmp 0x4002517	       951	deflate.c	FUNCTION_13	IF_23
0x40024e4	         0xf1f4000	                         nop dword [rax]	       951	deflate.c	FUNCTION_13	IF_23
0x40024e8	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x40024ec	        0x498b4640	            mov rax, qword [r14 + 0x40] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x40024f0	        0x488d7801	                      lea rdi, [rax + 1]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x40024f4	        0x49897e40	             mov qword [r14 + 0x40], rdi	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x40024f8	         0xfb60401	             movzx eax, byte [rcx + rax]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x40024fc	        0x488d7a01	                      lea rdi, [rdx + 1]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002500	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002504	        0x49897e28	             mov qword [r14 + 0x28], rdi	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002508	            0x84c0	                             test al, al	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400250a	          0x880411	                mov byte [rcx + rdx], al	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400250d	            0x7441	                            je 0x4002550	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400250f	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002513	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002517	        0x49395618	            cmp qword [r14 + 0x18], rdx 	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x400251b	            0x75cb	                           jne 0x40024e8	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x400251d	        0x448b6844	           mov r13d, dword [rax + 0x44] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002521	          0x4585ed	                         test r13d, r13d	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002524	            0x7409	                            je 0x400252f	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002526	          0x4839d6	                            cmp rsi, rdx	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002529	     0xf8201010000	                            jb 0x4002630	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x400252f	          0x4889df	                            mov rdi, rbx	       956	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002532	      0xe869e1ffff	                  call sym.flush_pending	       956	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002537	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x400253b	          0x4885d2	                           test rdx, rdx	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x400253e	     0xf856cfaffff	                           jne 0x4001fb0	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002544	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002548	            0x31f6	                            xor esi, esi	       961	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400254a	            0xeb9c	                           jmp 0x40024e8	       961	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400254c	         0xf1f4000	                         nop dword [rax]	       961	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002550	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002554	          0x8b6844	            mov ebp, dword [rax + 0x44] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002557	            0x85ed	                           test ebp, ebp	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002559	            0x7425	                            je 0x4002580	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400255b	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400255f	          0x4839d6	                            cmp rsi, rdx	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002562	            0x731c	                           jae 0x4002580	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002564	            0x29f2	                            sub edx, esi	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002566	        0x49037610	             add rsi, qword [r14 + 0x10]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400256a	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400256e	      0xe800000000	                          call 0x4002573	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002573	        0x48894360	             mov qword [rbx + 0x60], rax	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002577	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400257b	       0xf1f440000	                   nop dword [rax + rax]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002580	    0x41c746086700	               mov dword [r14 + 8], 0x67	       968	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	CALL_40
0x4002588	        0x448b5844	           mov r11d, dword [rax + 0x44] 	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x400258c	          0x4585db	                         test r11d, r11d	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x400258f	            0x7460	                            je 0x40025f1	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002591	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       972	deflate.c	FUNCTION_13	IF_27
0x4002595	        0x488d5002	                      lea rdx, [rax + 2]	       972	deflate.c	FUNCTION_13	IF_27
0x4002599	        0x493b5618	            cmp rdx, qword [r14 + 0x18] 	       972	deflate.c	FUNCTION_13	IF_27
0x400259d	            0x7615	                           jbe 0x40025b4	       972	deflate.c	FUNCTION_13	IF_27
0x400259f	          0x4889df	                            mov rdi, rbx	       973	deflate.c	FUNCTION_13	IF_27
0x40025a2	      0xe8f9e0ffff	                  call sym.flush_pending	       973	deflate.c	FUNCTION_13	IF_27
0x40025a7	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       974	deflate.c	FUNCTION_13	IF_31
0x40025ab	          0x4885c0	                           test rax, rax	       974	deflate.c	FUNCTION_13	IF_31
0x40025ae	     0xf85fcf9ffff	                           jne 0x4001fb0	       974	deflate.c	FUNCTION_13	IF_31
0x40025b4	        0x488d4801	                      lea rcx, [rax + 1]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025b8	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025bc	            0x31f6	                            xor esi, esi	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025be	            0x31ff	                            xor edi, edi	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025c0	        0x49894e28	             mov qword [r14 + 0x28], rcx	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025c4	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025c8	          0x880c02	                mov byte [rdx + rax], cl	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025cb	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025cf	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025d3	        0x488d4201	                      lea rax, [rdx + 1]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025d7	        0x49894628	             mov qword [r14 + 0x28], rax	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025db	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025df	        0x48c1e808	                              shr rax, 8	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025e3	          0x880411	                mov byte [rcx + rdx], al	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025e6	            0x31d2	                            xor edx, edx	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025e8	      0xe800000000	                          call 0x40025ed	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025ed	        0x48894360	             mov qword [rbx + 0x60], rax	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40025f1	    0x41c746087100	               mov dword [r14 + 8], 0x71	       983	deflate.c	FUNCTION_13	IF_31	IF_32	CALL_42
0x40025f9	          0x4889df	                            mov rdi, rbx	       986	deflate.c	FUNCTION_13	IF_31	IF_32
0x40025fc	      0xe89fe0ffff	                  call sym.flush_pending	       986	deflate.c	FUNCTION_13	IF_31	IF_32
0x4002601	      0x49837e2800	               cmp qword [r14 + 0x28], 0	       987	deflate.c	FUNCTION_13	IF_31
0x4002606	     0xf842cf8ffff	                            je 0x4001e38	       987	deflate.c	FUNCTION_13	IF_31
0x400260c	      0xe99ff9ffff	                           jmp 0x4001fb0	       987	deflate.c	FUNCTION_13	IF_31
0x4002611	     0xf1f80000000	                         nop dword [rax]	       987	deflate.c	FUNCTION_13	IF_31
0x4002618	            0x29f2	                            sub edx, esi	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400261a	        0x49037610	             add rsi, qword [r14 + 0x10]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400261e	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002622	      0xe800000000	                          call 0x4002627	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002627	        0x48894360	             mov qword [rbx + 0x60], rax	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400262b	      0xe93dfeffff	                           jmp 0x400246d	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002630	            0x29f2	                            sub edx, esi	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002632	        0x49037610	             add rsi, qword [r14 + 0x10]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002636	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x400263a	      0xe800000000	                          call 0x400263f	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x400263f	        0x48894360	             mov qword [rbx + 0x60], rax	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002643	      0xe9e7feffff	                           jmp 0x400252f	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002648	     0xf1f84000000	                   nop dword [rax + rax]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002650	            0x31d2	                            xor edx, edx	       851	deflate.c	FUNCTION_13	IF_8
0x4002652	            0x31f6	                            xor esi, esi	       851	deflate.c	FUNCTION_13	IF_8
0x4002654	            0x31ff	                            xor edi, edi	       851	deflate.c	FUNCTION_13	IF_8
0x4002656	      0xe800000000	                          call 0x400265b	       851	deflate.c	FUNCTION_13	IF_8
0x400265b	        0x48894360	             mov qword [rbx + 0x60], rax	       851	deflate.c	FUNCTION_13	IF_8
0x400265f	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       852	deflate.c	FUNCTION_13
0x4002663	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       852	deflate.c	FUNCTION_13
0x4002667	        0x488d4801	                      lea rcx, [rax + 1]	       852	deflate.c	FUNCTION_13
0x400266b	        0x49894e28	             mov qword [r14 + 0x28], rcx	       852	deflate.c	FUNCTION_13
0x400266f	        0xc604021f	              mov byte [rdx + rax], 0x1f	       852	deflate.c	FUNCTION_13
0x4002673	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       853	deflate.c	FUNCTION_13	IF_15
0x4002677	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       853	deflate.c	FUNCTION_13	IF_15
0x400267b	        0x488d4801	                      lea rcx, [rax + 1]	       853	deflate.c	FUNCTION_13	IF_15
0x400267f	        0x49894e28	             mov qword [r14 + 0x28], rcx	       853	deflate.c	FUNCTION_13	IF_15
0x4002683	        0xc604028b	              mov byte [rdx + rax], 0x8b	       853	deflate.c	FUNCTION_13	IF_15
0x4002687	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       854	deflate.c	FUNCTION_13	IF_15
0x400268b	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       854	deflate.c	FUNCTION_13	IF_15
0x400268f	        0x488d4801	                      lea rcx, [rax + 1]	       854	deflate.c	FUNCTION_13	IF_15
0x4002693	        0x49894e28	             mov qword [r14 + 0x28], rcx	       854	deflate.c	FUNCTION_13	IF_15
0x4002697	        0xc6040208	                 mov byte [rdx + rax], 8	       854	deflate.c	FUNCTION_13	IF_15
0x400269b	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x400269f	          0x4885d2	                           test rdx, rdx	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x40026a2	     0xf8435060000	                            je 0x4002cdd	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x40026a8	        0x498b7628	            mov rsi, qword [r14 + 0x28] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026ac	          0x448b02	                    mov r8d, dword [rdx]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026af	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026b3	        0x488d4601	                      lea rax, [rsi + 1]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026b7	          0x4585c0	                           test r8d, r8d	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026ba	        0x49894628	             mov qword [r14 + 0x28], rax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026be	           0xf95c0	                                setne al	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026c1	        0x837a4401	               cmp dword [rdx + 0x44], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026c5	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026c7	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026c9	          0x83e102	                              and ecx, 2	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026cc	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026ce	      0x48837a1801	               cmp qword [rdx + 0x18], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026d3	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026d5	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026d7	          0x83e104	                              and ecx, 4	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026da	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026dc	      0x48837a2801	               cmp qword [rdx + 0x28], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026e1	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026e3	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026e5	          0x83e108	                              and ecx, 8	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026e8	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026ea	      0x48837a3801	               cmp qword [rdx + 0x38], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026ef	            0x19d2	                            sbb edx, edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026f1	            0xf7d2	                                 not edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026f3	          0x83e210	                           and edx, 0x10	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026f6	             0x1d0	                            add eax, edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026f8	          0x880437	                mov byte [rdi + rsi], al	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x40026fb	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40026ff	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002703	        0x488d4801	                      lea rcx, [rax + 1]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002707	        0x49894e28	             mov qword [r14 + 0x28], rcx	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400270b	        0x498b4e38	            mov rcx, qword [r14 + 0x38] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400270f	        0x488b4908	                mov rcx, qword [rcx + 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002713	          0x880c02	                mov byte [rdx + rax], cl	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002716	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400271a	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400271e	        0x488d4201	                      lea rax, [rdx + 1]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002722	        0x49894628	             mov qword [r14 + 0x28], rax	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002726	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400272a	        0x488b4008	                mov rax, qword [rax + 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400272e	        0x48c1e808	                              shr rax, 8	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002732	          0x880411	                mov byte [rcx + rdx], al	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002735	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002739	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400273d	        0x488d4201	                      lea rax, [rdx + 1]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002741	        0x49894628	             mov qword [r14 + 0x28], rax	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002745	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002749	        0x488b4008	                mov rax, qword [rax + 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400274d	        0x48c1e810	                           shr rax, 0x10	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002751	          0x880411	                mov byte [rcx + rdx], al	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002754	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002758	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400275c	        0x488d4201	                      lea rax, [rdx + 1]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002760	        0x49894628	             mov qword [r14 + 0x28], rax	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002764	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002768	        0x488b4008	                mov rax, qword [rax + 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400276c	        0x48c1e818	                           shr rax, 0x18	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002770	          0x880411	                mov byte [rcx + rdx], al	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002773	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4002777	    0x418b8ec40000	            mov ecx, dword [r14 + 0xc4] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400277e	        0x488d5001	                      lea rdx, [rax + 1]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4002782	        0x49034610	             add rax, qword [r14 + 0x10]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4002786	          0x83f909	                              cmp ecx, 9	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4002789	        0x49895628	             mov qword [r14 + 0x28], rdx	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400278d	      0xba02000000	                              mov edx, 2	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4002792	            0x741c	                            je 0x40027b0	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4002794	    0x4183bec80000	               cmp dword [r14 + 0xc8], 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400279c	            0x7f07	                            jg 0x40027a5	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x400279e	            0x31d2	                            xor edx, edx	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40027a0	          0x83f901	                              cmp ecx, 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40027a3	            0x7f0b	                            jg 0x40027b0	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40027a5	      0xba04000000	                              mov edx, 4	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40027aa	    0x660f1f440000	                    nop word [rax + rax]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40027b0	            0x8810	                      mov byte [rax], dl	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x40027b2	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x40027b6	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x40027ba	        0x488d4801	                      lea rcx, [rax + 1]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x40027be	        0x49894e28	             mov qword [r14 + 0x28], rcx	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x40027c2	        0x498b4e38	            mov rcx, qword [r14 + 0x38] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x40027c6	          0x8b4914	            mov ecx, dword [rcx + 0x14] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x40027c9	          0x880c02	                mov byte [rdx + rax], cl	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x40027cc	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x40027d0	      0x4883781800	               cmp qword [rax + 0x18], 0	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x40027d5	            0x7437	                            je 0x400280e	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x40027d7	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027db	          0x8b4020	            mov eax, dword [rax + 0x20] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027de	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027e2	        0x488d7201	                      lea rsi, [rdx + 1]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027e6	        0x49897628	             mov qword [r14 + 0x28], rsi	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027ea	          0x880411	                mov byte [rcx + rdx], al	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027ed	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027f1	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027f5	        0x488d4201	                      lea rax, [rdx + 1]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027f9	        0x49894628	             mov qword [r14 + 0x28], rax	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x40027fd	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002801	          0x8b4020	            mov eax, dword [rax + 0x20] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002804	          0xc1e808	                              shr eax, 8	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4002807	          0x880411	                mov byte [rcx + rdx], al	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400280a	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x400280e	          0x8b7844	            mov edi, dword [rax + 0x44] 	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4002811	            0x85ff	                           test edi, edi	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4002813	     0xf85c4030000	                           jne 0x4002bdd	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4002819	    0x49c746400000	               mov qword [r14 + 0x40], 0	       896	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4002821	    0x41c746084500	               mov dword [r14 + 8], 0x45	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x4002829	      0xe9b6faffff	                           jmp 0x40022e4	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x400282e	            0x6690	                                     nop	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x4002830	    0xc7442408feff	        mov dword [rsp + 8], 0xfffffffe 	       771	deflate.c	FUNCTION_13
0x4002838	      0xe97bf7ffff	                           jmp 0x4001fb8	       771	deflate.c	FUNCTION_13
0x400283d	           0xf1f00	                         nop dword [rax]	       771	deflate.c	FUNCTION_13
0x4002840	     0xfb605000000	           movzx eax, byte [0x04002847] 	       771	deflate.c	FUNCTION_13
0x4002847	        0x498d2c86	                  lea rbp, [r14 + rax*4]	       771	deflate.c	FUNCTION_13
0x400284b	      0xe98a000000	                           jmp 0x40028da	       771	deflate.c	FUNCTION_13
0x4002850	    0x41c786a00000	               mov dword [r14 + 0xa0], 0	      2079	deflate.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400285b	    0x418b96ac0000	            mov edx, dword [r14 + 0xac] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4002862	        0x498b7660	            mov rsi, qword [r14 + 0x60] 	      2081	deflate.c	FUNCTION_23	FOR_1
0x4002866	            0x85d2	                           test edx, edx	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4002868	     0xf85d2000000	                           jne 0x4002940	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400286e	            0x31d2	                            xor edx, edx	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4002870	    0x418b8e0c1700	          mov ecx, dword [r14 + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002877	         0xfb60416	             movzx eax, byte [rsi + rdx]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400287b	          0x4531db	                          xor r11d, r11d	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400287e	    0x498bb6101700	          mov rsi, qword [r14 + 0x1710] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002885	      0x6644891c4e	            mov word [rsi + rcx*2], r11w	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400288a	    0x498bb6001700	          mov rsi, qword [r14 + 0x1700] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002891	          0x4889ca	                            mov rdx, rcx	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002894	          0x83c201	                              add edx, 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002897	    0x4189960c1700	          mov dword [r14 + 0x170c], edx 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400289e	          0x88040e	                mov byte [rsi + rcx], al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40028a1	    0x6641838486d4	        add word [r14 + rax*4 + 0xd4], 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40028ab	    0x418b86081700	          mov eax, dword [r14 + 0x1708] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40028b2	          0x83e801	                              sub eax, 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40028b5	    0x413b860c1700	          cmp eax, dword [r14 + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40028bc	           0xf94c0	                                 sete al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40028bf	    0x4183aeb40000	               sub dword [r14 + 0xb4], 1	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40028c7	    0x418386ac0000	               add dword [r14 + 0xac], 1	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40028cf	           0xfb6c0	                           movzx eax, al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x40028d2	            0x85c0	                           test eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40028d4	     0xf85c8010000	                           jne 0x4002aa2	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40028da	    0x418b8eb40000	            mov ecx, dword [r14 + 0xb4] 	      2070	deflate.c	FUNCTION_23	FOR_1
0x40028e1	    0x81f902010000	                          cmp ecx, 0x102	      2070	deflate.c	FUNCTION_23	FOR_1
0x40028e7	     0xf8763ffffff	                            ja 0x4002850	      2070	deflate.c	FUNCTION_23	FOR_1
0x40028ed	          0x4c89f7	                            mov rdi, r14	      2071	deflate.c	FUNCTION_23	FOR_1
0x40028f0	      0xe80bdbffff	                    call sym.fill_window	      2071	deflate.c	FUNCTION_23	FOR_1
0x40028f5	    0x418b8eb40000	            mov ecx, dword [r14 + 0xb4] 	      2072	deflate.c	FUNCTION_23	FOR_1
0x40028fc	    0x81f902010000	                          cmp ecx, 0x102	      2072	deflate.c	FUNCTION_23	FOR_1
0x4002902	     0xf8748ffffff	                            ja 0x4002850	      2072	deflate.c	FUNCTION_23	FOR_1
0x4002908	          0x4585e4	                         test r12d, r12d	      2072	deflate.c	FUNCTION_23	FOR_1
0x400290b	     0xf8492f6ffff	                            je 0x4001fa3	      2072	deflate.c	FUNCTION_23	FOR_1
0x4002911	            0x85c9	                           test ecx, ecx	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4002913	     0xf8418f9ffff	                            je 0x4002231	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4002919	          0x83f902	                              cmp ecx, 2	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400291c	    0x41c786a00000	               mov dword [r14 + 0xa0], 0	      2079	deflate.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4002927	     0xf872effffff	                            ja 0x400285b	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400292d	        0x498b7660	            mov rsi, qword [r14 + 0x60] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4002931	    0x418b96ac0000	            mov edx, dword [r14 + 0xac] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4002938	      0xe933ffffff	                           jmp 0x4002870	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x400293d	           0xf1f00	                         nop dword [rax]	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x4002940	      0x488d4416ff	                lea rax, [rsi + rdx - 1]	      2081	deflate.c	FUNCTION_23	FOR_1
0x4002945	        0x440fb600	                   movzx r8d, byte [rax]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4002949	           0xfb638	                   movzx edi, byte [rax]	      2083	deflate.c	FUNCTION_23	FOR_1
0x400294c	        0x44384001	                 cmp byte [rax + 1], r8b	      2083	deflate.c	FUNCTION_23	FOR_1
0x4002950	     0xf851affffff	                           jne 0x4002870	      2083	deflate.c	FUNCTION_23	FOR_1
0x4002956	      0x440fb64802	               movzx r9d, byte [rax + 2]	      2083	deflate.c	FUNCTION_23	FOR_1
0x400295b	          0x4439cf	                            cmp edi, r9d	      2083	deflate.c	FUNCTION_23	FOR_1
0x400295e	     0xf850cffffff	                           jne 0x4002870	      2083	deflate.c	FUNCTION_23	FOR_1
0x4002964	      0x440fb64803	               movzx r9d, byte [rax + 3]	      2083	deflate.c	FUNCTION_23	FOR_1
0x4002969	          0x4439cf	                            cmp edi, r9d	      2083	deflate.c	FUNCTION_23	FOR_1
0x400296c	     0xf85fefeffff	                           jne 0x4002870	      2083	deflate.c	FUNCTION_23	FOR_1
0x4002972	        0x4883c003	                              add rax, 3	      2083	deflate.c	FUNCTION_23	FOR_1
0x4002976	    0x4c8d94160201	           lea r10, [rsi + rdx + 0x102] 	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400297e	            0xeb66	                           jmp 0x40029e6	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002980	      0x440fb64802	               movzx r9d, byte [rax + 2]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002985	          0x4439cf	                            cmp edi, r9d	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002988	     0xf858e040000	                           jne 0x4002e1c	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400298e	      0x440fb64803	               movzx r9d, byte [rax + 3]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002993	          0x4439cf	                            cmp edi, r9d	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002996	     0xf8592040000	                           jne 0x4002e2e	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400299c	      0x440fb64804	               movzx r9d, byte [rax + 4]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029a1	          0x4439cf	                            cmp edi, r9d	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029a4	     0xf857b040000	                           jne 0x4002e25	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029aa	      0x440fb64805	               movzx r9d, byte [rax + 5]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029af	          0x4439cf	                            cmp edi, r9d	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029b2	     0xf859b040000	                           jne 0x4002e53	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029b8	      0x440fb64806	               movzx r9d, byte [rax + 6]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029bd	          0x4439cf	                            cmp edi, r9d	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029c0	     0xf8584040000	                           jne 0x4002e4a	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029c6	      0x440fb64807	               movzx r9d, byte [rax + 7]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029cb	          0x4439cf	                            cmp edi, r9d	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029ce	     0xf856d040000	                           jne 0x4002e41	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029d4	        0x4883c008	                              add rax, 8	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029d8	        0x440fb608	                   movzx r9d, byte [rax]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029dc	          0x4139f9	                            cmp r9d, edi	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029df	            0x7513	                           jne 0x40029f4	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029e1	          0x4939c2	                            cmp r10, rax	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029e4	            0x760e	                           jbe 0x40029f4	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029e6	      0x440fb64801	               movzx r9d, byte [rax + 1]	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029eb	          0x4439cf	                            cmp edi, r9d	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029ee	            0x7490	                            je 0x4002980	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029f0	        0x4883c001	                              add rax, 1	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x40029f4	          0x4429d0	                           sub eax, r10d	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029f7	       0x502010000	                          add eax, 0x102	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029fc	            0x39c8	                            cmp eax, ecx	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x40029fe	    0x418986a00000	             mov dword [r14 + 0xa0], eax	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002a05	     0xf86aa030000	                           jbe 0x4002db5	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002a0b	    0x41898ea00000	             mov dword [r14 + 0xa0], ecx	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002a12	            0x89c8	                            mov eax, ecx	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002a14	    0x418b8e0c1700	          mov ecx, dword [r14 + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a1b	    0x498bb6101700	          mov rsi, qword [r14 + 0x1710] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a22	    0x41bd01000000	                             mov r13d, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a28	          0x83e803	                              sub eax, 3	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a2b	      0x6644892c4e	            mov word [rsi + rcx*2], r13w	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a30	    0x498bb6001700	          mov rsi, qword [r14 + 0x1700] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a37	          0x4889ca	                            mov rdx, rcx	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a3a	          0x83c201	                              add edx, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a3d	    0x4189960c1700	          mov dword [r14 + 0x170c], edx 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a44	          0x88040e	                mov byte [rsi + rcx], al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a47	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a4a	     0xfb680000000	                   movzx eax, byte [rax]	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a51	    0x6641838486d8	       add word [r14 + rax*4 + 0x4d8], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a5b	    0x668385c80900	               add word [rbp + 0x9c8], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a63	    0x418b86081700	          mov eax, dword [r14 + 0x1708] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a6a	    0x418b96a00000	            mov edx, dword [r14 + 0xa0] 	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002a71	    0x41c786a00000	               mov dword [r14 + 0xa0], 0	      2106	deflate.c	FUNCTION_23	FOR_1	IF_7	CALL_3
0x4002a7c	          0x83e801	                              sub eax, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a7f	    0x413b860c1700	          cmp eax, dword [r14 + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a86	           0xf94c0	                                 sete al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a89	    0x412996b40000	             sub dword [r14 + 0xb4], edx	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002a90	    0x410196ac0000	             add dword [r14 + 0xac], edx	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002a97	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002a9a	            0x85c0	                           test eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002a9c	     0xf8438feffff	                            je 0x40028da	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002aa2	    0x418b96ac0000	            mov edx, dword [r14 + 0xac] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002aa9	    0x498b86980000	            mov rax, qword [r14 + 0x98] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ab0	            0x31f6	                            xor esi, esi	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ab2	          0x4829c2	                            sub rdx, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ab5	          0x4885c0	                           test rax, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ab8	            0x7809	                            js 0x4002ac3	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002aba	            0x89c0	                            mov eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002abc	        0x49034660	             add rax, qword [r14 + 0x60]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ac0	          0x4889c6	                            mov rsi, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ac3	            0x31c9	                            xor ecx, ecx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ac5	          0x4c89f7	                            mov rdi, r14	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ac8	      0xe800000000	                          call 0x4002acd	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002acd	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ad4	          0x498b3e	                    mov rdi, qword [r14]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ad7	    0x498986980000	             mov qword [r14 + 0x98], rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ade	      0xe8bddbffff	                  call sym.flush_pending	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ae3	          0x498b06	                    mov rax, qword [r14]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002ae6	        0x448b5020	           mov r10d, dword [rax + 0x20] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002aea	          0x4585d2	                         test r10d, r10d	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002aed	     0xf85e7fdffff	                           jne 0x40028da	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002af3	      0xe9abf4ffff	                           jmp 0x4001fa3	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002af8	     0xf1f84000000	                   nop dword [rax + rax]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002b00	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002b04	      0xe907f9ffff	                           jmp 0x4002410	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002b09	     0xf1f80000000	                         nop dword [rax]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002b10	        0x4183fc01	                             cmp r12d, 1	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b14	     0xf84a3000000	                            je 0x4002bbd	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b1a	        0x4183fc05	                             cmp r12d, 5	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b1e	     0xf84a1000000	                            je 0x4002bc5	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002b24	            0x31c9	                            xor ecx, ecx	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b26	            0x31d2	                            xor edx, edx	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b28	            0x31f6	                            xor esi, esi	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b2a	          0x4c89f7	                            mov rdi, r14	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b2d	      0xe800000000	                          call 0x4002b32	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002b32	        0x4183fc03	                             cmp r12d, 3	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x4002b36	     0xf848c020000	                            je 0x4002dc8	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x4002b3c	          0x4889df	                            mov rdi, rbx	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b3f	      0xe85cdbffff	                  call sym.flush_pending	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b44	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b47	            0x85c9	                           test ecx, ecx	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b49	     0xf856bf3ffff	                           jne 0x4001eba	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b4f	      0xe95cf4ffff	                           jmp 0x4001fb0	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b54	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b58	      0xe973f9ffff	                           jmp 0x40024d0	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b5d	    0x418b96ac0000	            mov edx, dword [r14 + 0xac] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b64	    0x498b86980000	            mov rax, qword [r14 + 0x98] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b6b	            0x31f6	                            xor esi, esi	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b6d	          0x4829c2	                            sub rdx, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b70	          0x4885c0	                           test rax, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b73	            0x7809	                            js 0x4002b7e	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b75	            0x89c0	                            mov eax, eax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b77	        0x49034660	             add rax, qword [r14 + 0x60]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b7b	          0x4889c6	                            mov rsi, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b7e	      0xb901000000	                              mov ecx, 1	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b83	          0x4c89f7	                            mov rdi, r14	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b86	      0xe800000000	                          call 0x4002b8b	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b8b	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b92	          0x498b3e	                    mov rdi, qword [r14]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b95	    0x498986980000	             mov qword [r14 + 0x98], rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002b9c	      0xe8ffdaffff	                  call sym.flush_pending	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002ba1	          0x498b06	                    mov rax, qword [r14]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002ba4	        0x448b7820	           mov r15d, dword [rax + 0x20] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002ba8	      0xb801000000	                              mov eax, 1	      2161	deflate.c	FUNCTION_24	IF_5
0x4002bad	          0x4585ff	                         test r15d, r15d	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002bb0	     0xf85ddf3ffff	                           jne 0x4001f93	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x4002bb6	            0x31c0	                            xor eax, eax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002bb8	      0xe9d6f3ffff	                           jmp 0x4001f93	      2161	deflate.c	FUNCTION_24	IF_5
0x4002bbd	          0x4c89f7	                            mov rdi, r14	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002bc0	      0xe800000000	                          call 0x4002bc5	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002bc5	          0x4889df	                            mov rdi, rbx	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bc8	      0xe8d3daffff	                  call sym.flush_pending	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bcd	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bd0	            0x85d2	                           test edx, edx	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bd2	     0xf85e0f3ffff	                           jne 0x4001fb8	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bd8	      0xe9d3f3ffff	                           jmp 0x4001fb0	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002bdd	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4002be1	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4002be5	        0x418b5628	            mov edx, dword [r14 + 0x28] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4002be9	      0xe800000000	                          call 0x4002bee	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4002bee	        0x48894360	             mov qword [rbx + 0x60], rax	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4002bf2	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4002bf6	      0xe91efcffff	                           jmp 0x4002819	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4002bfb	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1052	deflate.c	FUNCTION_13
0x4002bff	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      1052	deflate.c	FUNCTION_13
0x4002c03	        0x488d4801	                      lea rcx, [rax + 1]	      1052	deflate.c	FUNCTION_13
0x4002c07	        0x49894e28	             mov qword [r14 + 0x28], rcx	      1052	deflate.c	FUNCTION_13
0x4002c0b	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1052	deflate.c	FUNCTION_13
0x4002c0f	          0x880c02	                mov byte [rdx + rax], cl	      1052	deflate.c	FUNCTION_13
0x4002c12	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	      1053	deflate.c	FUNCTION_13
0x4002c16	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	      1053	deflate.c	FUNCTION_13
0x4002c1a	        0x488d4201	                      lea rax, [rdx + 1]	      1053	deflate.c	FUNCTION_13
0x4002c1e	        0x49894628	             mov qword [r14 + 0x28], rax	      1053	deflate.c	FUNCTION_13
0x4002c22	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1053	deflate.c	FUNCTION_13
0x4002c26	        0x48c1e808	                              shr rax, 8	      1053	deflate.c	FUNCTION_13
0x4002c2a	          0x880411	                mov byte [rcx + rdx], al	      1053	deflate.c	FUNCTION_13
0x4002c2d	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	      1054	deflate.c	FUNCTION_13
0x4002c31	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	      1054	deflate.c	FUNCTION_13
0x4002c35	        0x488d4201	                      lea rax, [rdx + 1]	      1054	deflate.c	FUNCTION_13
0x4002c39	        0x49894628	             mov qword [r14 + 0x28], rax	      1054	deflate.c	FUNCTION_13
0x4002c3d	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1054	deflate.c	FUNCTION_13
0x4002c41	        0x48c1e810	                           shr rax, 0x10	      1054	deflate.c	FUNCTION_13
0x4002c45	          0x880411	                mov byte [rcx + rdx], al	      1054	deflate.c	FUNCTION_13
0x4002c48	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4002c4c	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4002c50	        0x488d4201	                      lea rax, [rdx + 1]	      1055	deflate.c	FUNCTION_13	IF_48
0x4002c54	        0x49894628	             mov qword [r14 + 0x28], rax	      1055	deflate.c	FUNCTION_13	IF_48
0x4002c58	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4002c5c	        0x48c1e818	                           shr rax, 0x18	      1055	deflate.c	FUNCTION_13	IF_48
0x4002c60	          0x880411	                mov byte [rcx + rdx], al	      1055	deflate.c	FUNCTION_13	IF_48
0x4002c63	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002c67	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002c6b	        0x488d4801	                      lea rcx, [rax + 1]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002c6f	        0x49894e28	             mov qword [r14 + 0x28], rcx	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002c73	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002c77	          0x880c02	                mov byte [rdx + rax], cl	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002c7a	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002c7e	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002c82	        0x488d4201	                      lea rax, [rdx + 1]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002c86	        0x49894628	             mov qword [r14 + 0x28], rax	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002c8a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002c8e	        0x48c1e808	                              shr rax, 8	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002c92	          0x880411	                mov byte [rcx + rdx], al	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002c95	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002c99	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002c9d	        0x488d4201	                      lea rax, [rdx + 1]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002ca1	        0x49894628	             mov qword [r14 + 0x28], rax	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002ca5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002ca9	        0x48c1e810	                           shr rax, 0x10	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002cad	          0x880411	                mov byte [rcx + rdx], al	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002cb0	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002cb4	        0x498b4e10	            mov rcx, qword [r14 + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002cb8	        0x488d4201	                      lea rax, [rdx + 1]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002cbc	        0x49894628	             mov qword [r14 + 0x28], rax	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002cc0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002cc4	        0x48c1e818	                           shr rax, 0x18	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002cc8	          0x880411	                mov byte [rcx + rdx], al	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002ccb	      0xe96df2ffff	                           jmp 0x4001f3d	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002cd0	    0xc74424080100	                  mov dword [rsp + 8], 1	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002cd8	      0xe9dbf2ffff	                           jmp 0x4001fb8	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002cdd	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4002ce1	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4002ce5	        0x488d4801	                      lea rcx, [rax + 1]	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4002ce9	        0x49894e28	             mov qword [r14 + 0x28], rcx	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4002ced	        0xc6040200	                 mov byte [rdx + rax], 0	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4002cf1	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4002cf5	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4002cf9	        0x488d4801	                      lea rcx, [rax + 1]	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4002cfd	        0x49894e28	             mov qword [r14 + 0x28], rcx	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4002d01	        0xc6040200	                 mov byte [rdx + rax], 0	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4002d05	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4002d09	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4002d0d	        0x488d4801	                      lea rcx, [rax + 1]	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4002d11	        0x49894e28	             mov qword [r14 + 0x28], rcx	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4002d15	        0xc6040200	                 mov byte [rdx + rax], 0	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4002d19	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002d1d	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002d21	        0x488d4801	                      lea rcx, [rax + 1]	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002d25	        0x49894e28	             mov qword [r14 + 0x28], rcx	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002d29	        0xc6040200	                 mov byte [rdx + rax], 0	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002d2d	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4002d31	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4002d35	        0x488d4801	                      lea rcx, [rax + 1]	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4002d39	        0x49894e28	             mov qword [r14 + 0x28], rcx	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4002d3d	        0xc6040200	                 mov byte [rdx + rax], 0	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4002d41	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d45	    0x418b8ec40000	            mov ecx, dword [r14 + 0xc4] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d4c	        0x488d5001	                      lea rdx, [rax + 1]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d50	        0x49034610	             add rax, qword [r14 + 0x10]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d54	          0x83f909	                              cmp ecx, 9	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d57	        0x49895628	             mov qword [r14 + 0x28], rdx	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d5b	      0xba02000000	                              mov edx, 2	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d60	            0x7419	                            je 0x4002d7b	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d62	    0x4183bec80000	               cmp dword [r14 + 0xc8], 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d6a	     0xf8fc7000000	                            jg 0x4002e37	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d70	            0x31d2	                            xor edx, edx	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d72	          0x83f901	                              cmp ecx, 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d75	     0xf8ebc000000	                           jle 0x4002e37	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d7b	            0x8810	                      mov byte [rax], dl	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002d7d	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4002d81	          0x4889df	                            mov rdi, rbx	       868	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_22
0x4002d84	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4002d88	        0x488d4801	                      lea rcx, [rax + 1]	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4002d8c	        0x49894e28	             mov qword [r14 + 0x28], rcx	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4002d90	        0xc6040203	                 mov byte [rdx + rax], 3	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4002d94	    0x41c746087100	               mov dword [r14 + 8], 0x71	       865	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_21
0x4002d9c	      0xe8ffd8ffff	                  call sym.flush_pending	       868	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_22
0x4002da1	      0x49837e2800	               cmp qword [r14 + 0x28], 0	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002da6	     0xf8504f2ffff	                           jne 0x4001fb0	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002dac	        0x418b4608	                mov eax, dword [r14 + 8]	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002db0	      0xe9dfefffff	                           jmp 0x4001d94	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4002db5	          0x83f802	                              cmp eax, 2	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4002db8	     0xf8756fcffff	                            ja 0x4002a14	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4002dbe	      0xe9adfaffff	                           jmp 0x4002870	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4002dc3	       0xf1f440000	                   nop dword [rax + rax]	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4002dc8	    0x418b86840000	            mov eax, dword [r14 + 0x84] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002dcf	        0x498b7e78	            mov rdi, qword [r14 + 0x78] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002dd3	            0x31f6	                            xor esi, esi	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002dd5	          0x83e801	                              sub eax, 1	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002dd8	        0x488d1400	                    lea rdx, [rax + rax]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002ddc	        0x66893447	              mov word [rdi + rax*2], si	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002de0	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x4002de2	      0xe800000000	                          call 0x4002de7	        90	string3.h	FUNCTION_28	CALL_6
0x4002de7	    0x418bbeb40000	            mov edi, dword [r14 + 0xb4] 	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002dee	            0x85ff	                           test edi, edi	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002df0	     0xf85cffdffff	                           jne 0x4002bc5	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002df6	    0x41c786ac0000	               mov dword [r14 + 0xac], 0	      1032	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002e01	    0x49c786980000	               mov qword [r14 + 0x98], 0	      1033	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002e0c	    0x41c7862c1700	            mov dword [r14 + 0x172c], 0 	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002e17	      0xe9a9fdffff	                           jmp 0x4002bc5	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002e1c	        0x4883c002	                              add rax, 2	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002e20	      0xe9cffbffff	                           jmp 0x40029f4	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002e25	        0x4883c004	                              add rax, 4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002e29	      0xe9c6fbffff	                           jmp 0x40029f4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002e2e	        0x4883c003	                              add rax, 3	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002e32	      0xe9bdfbffff	                           jmp 0x40029f4	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002e37	      0xba04000000	                              mov edx, 4	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002e3c	      0xe93affffff	                           jmp 0x4002d7b	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4002e41	        0x4883c007	                              add rax, 7	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002e45	      0xe9aafbffff	                           jmp 0x40029f4	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002e4a	        0x4883c006	                              add rax, 6	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002e4e	      0xe9a1fbffff	                           jmp 0x40029f4	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002e53	        0x4883c005	                              add rax, 5	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002e57	      0xe998fbffff	                           jmp 0x40029f4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
flush_pending	DO,0:IF,3:CALL,2:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	41
0x40006a0	            0x4155	                                push r13	       732	deflate.c	
0x40006a2	            0x4154	                                push r12	       732	deflate.c	
0x40006a4	              0x55	                                push rbp	       732	deflate.c	
0x40006a5	              0x53	                                push rbx	       732	deflate.c	
0x40006a6	          0x4889fd	                            mov rbp, rdi	       732	deflate.c	
0x40006a9	        0x4883ec08	                              sub rsp, 8	       732	deflate.c	
0x40006ad	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	       734	deflate.c	
0x40006b1	          0x4c89e7	                            mov rdi, r12	       736	deflate.c	FUNCTION_12
0x40006b4	      0xe800000000	                          call 0x40006b9	       736	deflate.c	FUNCTION_12
0x40006b9	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       737	deflate.c	FUNCTION_12
0x40006be	          0x8b5d20	            mov ebx, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x40006c1	            0x39d8	                            cmp eax, ebx	       738	deflate.c	FUNCTION_12
0x40006c3	           0xf46d8	                         cmovbe ebx, eax	       738	deflate.c	FUNCTION_12
0x40006c6	            0x85db	                           test ebx, ebx	       739	deflate.c	FUNCTION_12
0x40006c8	            0x750e	                           jne 0x40006d8	       739	deflate.c	FUNCTION_12
0x40006ca	        0x4883c408	                              add rsp, 8	       750	deflate.c	FUNCTION_12
0x40006ce	              0x5b	                                 pop rbx	       750	deflate.c	FUNCTION_12
0x40006cf	              0x5d	                                 pop rbp	       750	deflate.c	FUNCTION_12
0x40006d0	            0x415c	                                 pop r12	       750	deflate.c	FUNCTION_12
0x40006d2	            0x415d	                                 pop r13	       750	deflate.c	FUNCTION_12
0x40006d4	              0xc3	                                     ret	       750	deflate.c	FUNCTION_12
0x40006d5	           0xf1f00	                         nop dword [rax]	       750	deflate.c	FUNCTION_12
0x40006d8	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40006dc	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x40006e1	          0x4189dd	                           mov r13d, ebx	       741	deflate.c	FUNCTION_12
0x40006e4	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_25	CALL_3
0x40006e7	      0xe800000000	                          call 0x40006ec	        53	string3.h	FUNCTION_25	CALL_3
0x40006ec	        0x4c016d18	            add qword [rbp + 0x18], r13 	       742	deflate.c	FUNCTION_12	IF_1
0x40006f0	      0x4d016c2420	            add qword [r12 + 0x20], r13 	       743	deflate.c	FUNCTION_12	IF_2
0x40006f5	        0x4c016d28	            add qword [rbp + 0x28], r13 	       744	deflate.c	FUNCTION_12
0x40006f9	          0x295d20	             sub dword [rbp + 0x20], ebx	       745	deflate.c	FUNCTION_12	CALL_2
0x40006fc	      0x4d296c2428	             sub qword [r12 + 0x28], r13	       747	deflate.c	FUNCTION_12
0x4000701	            0x75c7	                           jne 0x40006ca	       747	deflate.c	FUNCTION_12
0x4000703	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4000708	      0x4989442420	             mov qword [r12 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x400070d	        0x4883c408	                              add rsp, 8	       750	deflate.c	FUNCTION_12
0x4000711	              0x5b	                                 pop rbx	       750	deflate.c	FUNCTION_12
0x4000712	              0x5d	                                 pop rbp	       750	deflate.c	FUNCTION_12
0x4000713	            0x415c	                                 pop r12	       750	deflate.c	FUNCTION_12
0x4000715	            0x415d	                                 pop r13	       750	deflate.c	FUNCTION_12
0x4000717	              0xc3	                                     ret	       750	deflate.c	FUNCTION_12
deflateReset	DO,0:IF,1:CALL,2:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	44
0x4001980	              0x55	                                push rbp	       507	deflate.c	
0x4001981	              0x53	                                push rbx	       507	deflate.c	
0x4001982	          0x4889fb	                            mov rbx, rdi	       507	deflate.c	
0x4001985	        0x4883ec08	                              sub rsp, 8	       507	deflate.c	
0x4001989	      0xe800000000	                          call 0x400198e	       510	deflate.c	
0x400198e	            0x85c0	                           test eax, eax	       511	deflate.c	FUNCTION_5
0x4001990	            0x89c5	                            mov ebp, eax	       510	deflate.c	
0x4001992	     0xf85bd000000	                           jne 0x4001a55	       511	deflate.c	FUNCTION_5
0x4001998	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	       512	deflate.c	FUNCTION_5
0x400199c	            0x31c9	                            xor ecx, ecx	      1199	deflate.c	
0x400199e	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x40019a0	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1197	deflate.c	
0x40019a3	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	      1199	deflate.c	
0x40019a7	          0x4801c0	                            add rax, rax	      1197	deflate.c	
0x40019aa	        0x48894368	             mov qword [rbx + 0x68], rax	      1197	deflate.c	
0x40019ae	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1199	deflate.c	
0x40019b4	          0x83e801	                              sub eax, 1	      1199	deflate.c	
0x40019b7	        0x488d1400	                    lea rdx, [rax + rax]	      1199	deflate.c	
0x40019bb	        0x66890c47	              mov word [rdi + rax*2], cx	      1199	deflate.c	
0x40019bf	      0xe800000000	                          call 0x40019c4	        90	string3.h	FUNCTION_28	CALL_6
0x40019c4	    0x486383c40000	         movsxd rax, dword [rbx + 0xc4] 	      1203	deflate.c	FUNCTION_16
0x40019cb	    0xc783ac000000	               mov dword [rbx + 0xac], 0	      1208	deflate.c	FUNCTION_16
0x40019d5	    0x48c783980000	               mov qword [rbx + 0x98], 0	      1209	deflate.c	FUNCTION_16
0x40019e0	    0xc783b4000000	               mov dword [rbx + 0xb4], 0	      1210	deflate.c	FUNCTION_16
0x40019ea	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      1211	deflate.c	FUNCTION_16
0x40019f4	    0xc783b8000000	               mov dword [rbx + 0xb8], 2	      1212	deflate.c	FUNCTION_16
0x40019fe	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1212	deflate.c	FUNCTION_16
0x4001a08	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      1213	deflate.c	FUNCTION_16
0x4001a12	        0x48c1e004	                              shl rax, 4	      1203	deflate.c	FUNCTION_16
0x4001a16	    0xc78380000000	               mov dword [rbx + 0x80], 0	      1214	deflate.c	FUNCTION_16
0x4001a20	    0x488d90000000	                          lea rdx, [rax]	      1203	deflate.c	FUNCTION_16
0x4001a27	     0xfb788000000	                   movzx ecx, word [rax]	      1203	deflate.c	FUNCTION_16
0x4001a2e	     0xfb780000000	                   movzx eax, word [rax]	      1204	deflate.c	FUNCTION_16
0x4001a35	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	      1204	deflate.c	FUNCTION_16
0x4001a3b	         0xfb74204	               movzx eax, word [rdx + 4]	      1205	deflate.c	FUNCTION_16
0x4001a3f	    0x898bc0000000	             mov dword [rbx + 0xc0], ecx	      1203	deflate.c	FUNCTION_16
0x4001a45	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	      1205	deflate.c	FUNCTION_16
0x4001a4b	         0xfb74206	               movzx eax, word [rdx + 6]	      1206	deflate.c	FUNCTION_16
0x4001a4f	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	      1206	deflate.c	FUNCTION_16
0x4001a55	        0x4883c408	                              add rsp, 8	       514	deflate.c	FUNCTION_5	CALL_1
0x4001a59	            0x89e8	                            mov eax, ebp	       514	deflate.c	FUNCTION_5	CALL_1
0x4001a5b	              0x5b	                                 pop rbx	       514	deflate.c	FUNCTION_5	CALL_1
0x4001a5c	              0x5d	                                 pop rbp	       514	deflate.c	FUNCTION_5	CALL_1
0x4001a5d	              0xc3	                                     ret	       514	deflate.c	FUNCTION_5	CALL_1
deflateGetDictionary	DO,0:IF,4:CALL,2:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	40
0x4001840	            0x4154	                                push r12	       449	deflate.c	
0x4001842	              0x55	                                push rbp	       449	deflate.c	
0x4001843	          0x4989f1	                             mov r9, rsi	       449	deflate.c	
0x4001846	              0x53	                                push rbx	       449	deflate.c	
0x4001847	          0x4889d5	                            mov rbp, rdx	       449	deflate.c	
0x400184a	      0xe871e8ffff	              call sym.deflateStateCheck	       453	deflate.c	FUNCTION_3
0x400184f	            0x85c0	                           test eax, eax	       453	deflate.c	FUNCTION_3
0x4001851	            0x755d	                           jne 0x40018b0	       453	deflate.c	FUNCTION_3
0x4001853	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       455	deflate.c	FUNCTION_3
0x4001857	            0x89c3	                            mov ebx, eax	       455	deflate.c	FUNCTION_3
0x4001859	    0x8bb1ac000000	            mov esi, dword [rcx + 0xac] 	       456	deflate.c	FUNCTION_3
0x400185f	    0x8b81b4000000	            mov eax, dword [rcx + 0xb4] 	       456	deflate.c	FUNCTION_3
0x4001865	          0x8b5150	            mov edx, dword [rcx + 0x50] 	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x4001868	          0x8d3c06	                    lea edi, [rsi + rax]	       456	deflate.c	FUNCTION_3
0x400186b	            0x39d7	                            cmp edi, edx	       456	deflate.c	FUNCTION_3
0x400186d	           0xf46d7	                         cmovbe edx, edi	       456	deflate.c	FUNCTION_3
0x4001870	          0x4d85c9	                             test r9, r9	       459	deflate.c	FUNCTION_3
0x4001873	          0x4189d4	                           mov r12d, edx	       459	deflate.c	FUNCTION_3
0x4001876	            0x7404	                            je 0x400187c	       459	deflate.c	FUNCTION_3
0x4001878	            0x85d2	                           test edx, edx	       459	deflate.c	FUNCTION_3
0x400187a	            0x7514	                           jne 0x4001890	       459	deflate.c	FUNCTION_3
0x400187c	          0x4885ed	                           test rbp, rbp	       461	deflate.c	FUNCTION_3	IF_2
0x400187f	            0x7404	                            je 0x4001885	       461	deflate.c	FUNCTION_3	IF_2
0x4001881	        0x44896500	                   mov dword [rbp], r12d	       462	deflate.c	FUNCTION_3	IF_2
0x4001885	            0x89d8	                            mov eax, ebx	       464	deflate.c	FUNCTION_3	CALL_2
0x4001887	              0x5b	                                 pop rbx	       464	deflate.c	FUNCTION_3	CALL_2
0x4001888	              0x5d	                                 pop rbp	       464	deflate.c	FUNCTION_3	CALL_2
0x4001889	            0x415c	                                 pop r12	       464	deflate.c	FUNCTION_3	CALL_2
0x400188b	              0xc3	                                     ret	       464	deflate.c	FUNCTION_3	CALL_2
0x400188c	         0xf1f4000	                         nop dword [rax]	       464	deflate.c	FUNCTION_3	CALL_2
0x4001890	            0x89d2	                            mov edx, edx	       460	deflate.c	FUNCTION_3
0x4001892	          0x4801c6	                            add rsi, rax	        53	string3.h	FUNCTION_25	CALL_3
0x4001895	          0x4c89cf	                             mov rdi, r9	        53	string3.h	FUNCTION_25	CALL_3
0x4001898	          0x4829d6	                            sub rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x400189b	        0x48037160	             add rsi, qword [rcx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x400189f	      0xe800000000	                          call 0x40018a4	        53	string3.h	FUNCTION_25	CALL_3
0x40018a4	            0xebd6	                           jmp 0x400187c	        53	string3.h	FUNCTION_25	CALL_3
0x40018a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        53	string3.h	FUNCTION_25	CALL_3
0x40018b0	      0xbbfeffffff	                     mov ebx, 0xfffffffe	       454	deflate.c	FUNCTION_3
0x40018b5	            0xebce	                           jmp 0x4001885	       454	deflate.c	FUNCTION_3
deflateEnd	DO,0:IF,1:CALL,6:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	49
0x4003010	            0x4154	                                push r12	      1078	deflate.c	
0x4003012	              0x55	                                push rbp	      1078	deflate.c	
0x4003013	              0x53	                                push rbx	      1078	deflate.c	
0x4003014	          0x4889fb	                            mov rbx, rdi	      1078	deflate.c	
0x4003017	      0xe8a4d0ffff	              call sym.deflateStateCheck	      1081	deflate.c	
0x400301c	            0x85c0	                           test eax, eax	      1081	deflate.c	
0x400301e	     0xf8584000000	                           jne 0x40030a8	      1081	deflate.c	
0x4003024	            0x89c5	                            mov ebp, eax	      1081	deflate.c	
0x4003026	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      1083	deflate.c	FUNCTION_14
0x400302a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1086	deflate.c	FUNCTION_14
0x400302e	        0x448b6008	               mov r12d, dword [rax + 8]	      1083	deflate.c	FUNCTION_14
0x4003032	          0x4885f6	                           test rsi, rsi	      1086	deflate.c	FUNCTION_14
0x4003035	            0x740b	                            je 0x4003042	      1086	deflate.c	FUNCTION_14
0x4003037	        0x488b7f50	            mov rdi, qword [rdi + 0x50] 	      1086	deflate.c	FUNCTION_14
0x400303b	          0xff5348	                 call qword [rbx + 0x48]	      1086	deflate.c	FUNCTION_14
0x400303e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1086	deflate.c	FUNCTION_14
0x4003042	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      1087	deflate.c	FUNCTION_14
0x4003046	          0x4885f6	                           test rsi, rsi	      1087	deflate.c	FUNCTION_14
0x4003049	            0x740b	                            je 0x4003056	      1087	deflate.c	FUNCTION_14
0x400304b	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1087	deflate.c	FUNCTION_14
0x400304f	          0xff5348	                 call qword [rbx + 0x48]	      1087	deflate.c	FUNCTION_14
0x4003052	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1087	deflate.c	FUNCTION_14
0x4003056	        0x488b7070	            mov rsi, qword [rax + 0x70] 	      1088	deflate.c	FUNCTION_14
0x400305a	          0x4885f6	                           test rsi, rsi	      1088	deflate.c	FUNCTION_14
0x400305d	            0x740b	                            je 0x400306a	      1088	deflate.c	FUNCTION_14
0x400305f	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1088	deflate.c	FUNCTION_14
0x4003063	          0xff5348	                 call qword [rbx + 0x48]	      1088	deflate.c	FUNCTION_14
0x4003066	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1088	deflate.c	FUNCTION_14
0x400306a	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      1089	deflate.c	FUNCTION_14
0x400306e	          0x4885f6	                           test rsi, rsi	      1089	deflate.c	FUNCTION_14
0x4003071	            0x740b	                            je 0x400307e	      1089	deflate.c	FUNCTION_14
0x4003073	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1089	deflate.c	FUNCTION_14
0x4003077	          0xff5348	                 call qword [rbx + 0x48]	      1089	deflate.c	FUNCTION_14
0x400307a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1089	deflate.c	FUNCTION_14
0x400307e	          0x4889c6	                            mov rsi, rax	      1091	deflate.c	FUNCTION_14	CALL_3
0x4003081	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1091	deflate.c	FUNCTION_14	CALL_3
0x4003085	          0xff5348	                 call qword [rbx + 0x48]	      1091	deflate.c	FUNCTION_14	CALL_3
0x4003088	        0x4183fc71	                          cmp r12d, 0x71	      1094	deflate.c	FUNCTION_14
0x400308c	      0xb8fdffffff	                     mov eax, 0xfffffffd	      1094	deflate.c	FUNCTION_14
0x4003091	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1092	deflate.c	FUNCTION_14	CALL_4
0x4003099	           0xf44e8	                          cmove ebp, eax	      1094	deflate.c	FUNCTION_14
0x400309c	            0x89e8	                            mov eax, ebp	      1095	deflate.c	FUNCTION_14	CALL_6
0x400309e	              0x5b	                                 pop rbx	      1095	deflate.c	FUNCTION_14	CALL_6
0x400309f	              0x5d	                                 pop rbp	      1095	deflate.c	FUNCTION_14	CALL_6
0x40030a0	            0x415c	                                 pop r12	      1095	deflate.c	FUNCTION_14	CALL_6
0x40030a2	              0xc3	                                     ret	      1095	deflate.c	FUNCTION_14	CALL_6
0x40030a3	       0xf1f440000	                   nop dword [rax + rax]	      1095	deflate.c	FUNCTION_14	CALL_6
0x40030a8	      0xbdfeffffff	                     mov ebp, 0xfffffffe	      1081	deflate.c	
0x40030ad	            0xebed	                           jmp 0x400309c	      1081	deflate.c	
deflateTune	DO,0:IF,1:CALL,1:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	18
0x4001b80	              0x53	                                push rbx	       623	deflate.c	
0x4001b81	          0x4189d3	                           mov r11d, edx	       623	deflate.c	
0x4001b84	            0x89f3	                            mov ebx, esi	       623	deflate.c	
0x4001b86	          0x4189ca	                           mov r10d, ecx	       623	deflate.c	
0x4001b89	      0xe832e5ffff	              call sym.deflateStateCheck	       626	deflate.c	
0x4001b8e	            0x85c0	                           test eax, eax	       626	deflate.c	
0x4001b90	            0x7526	                           jne 0x4001bb8	       626	deflate.c	
0x4001b92	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	       627	deflate.c	FUNCTION_9
0x4001b96	    0x899fcc000000	             mov dword [rdi + 0xcc], ebx	       628	deflate.c	FUNCTION_9
0x4001b9c	    0x44899fc00000	            mov dword [rdi + 0xc0], r11d	       629	deflate.c	FUNCTION_9
0x4001ba3	    0x448997d00000	            mov dword [rdi + 0xd0], r10d	       630	deflate.c	FUNCTION_9	CALL_1
0x4001baa	    0x448987bc0000	             mov dword [rdi + 0xbc], r8d	       631	deflate.c	FUNCTION_9
0x4001bb1	              0x5b	                                 pop rbx	       633	deflate.c	FUNCTION_9
0x4001bb2	              0xc3	                                     ret	       633	deflate.c	FUNCTION_9
0x4001bb3	       0xf1f440000	                   nop dword [rax + rax]	       633	deflate.c	FUNCTION_9
0x4001bb8	      0xb8feffffff	                     mov eax, 0xfffffffe	       626	deflate.c	
0x4001bbd	              0x5b	                                 pop rbx	       633	deflate.c	FUNCTION_9
0x4001bbe	              0xc3	                                     ret	       633	deflate.c	FUNCTION_9
deflate_fast	DO,1:IF,10:CALL,6:ELSE,2:functions,0:SWITCH,0:WHILE,0:FOR,1	271
0x4000cc0	            0x4157	                                push r15	      1827	deflate.c	
0x4000cc2	            0x4156	                                push r14	      1827	deflate.c	
0x4000cc4	            0x4155	                                push r13	      1827	deflate.c	
0x4000cc6	            0x4154	                                push r12	      1827	deflate.c	
0x4000cc8	              0x55	                                push rbp	      1827	deflate.c	
0x4000cc9	              0x53	                                push rbx	      1827	deflate.c	
0x4000cca	          0x4889fb	                            mov rbx, rdi	      1827	deflate.c	
0x4000ccd	        0x4883ec18	                           sub rsp, 0x18	      1827	deflate.c	
0x4000cd1	        0x8974240c	              mov dword [rsp + 0xc], esi	      1827	deflate.c	
0x4000cd5	           0xf1f00	                         nop dword [rax]	      1827	deflate.c	
0x4000cd8	    0x81bbb4000000	          cmp dword [rbx + 0xb4], 0x105 	      1837	deflate.c	FUNCTION_21	FOR_1
0x4000ce2	     0xf86d0020000	                           jbe 0x4000fb8	      1837	deflate.c	FUNCTION_21	FOR_1
0x4000ce8	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000cee	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000cf2	          0x8d4202	                      lea eax, [rdx + 2]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000cf5	            0x89d7	                            mov edi, edx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000cf7	          0x237b58	             and edi, dword [rbx + 0x58]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000cfa	         0xfb63401	             movzx esi, byte [rcx + rax]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000cfe	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d04	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d0a	            0xd3e0	                             shl eax, cl	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d0c	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d10	            0x31f0	                            xor eax, esi	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d12	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d18	    0x898380000000	             mov dword [rbx + 0x80], eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d1e	        0x488d0441	                  lea rax, [rcx + rax*2]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d22	        0x488b4b70	            mov rcx, qword [rbx + 0x70] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d26	           0xfb730	                   movzx esi, word [rax]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d29	            0x85f6	                           test esi, esi	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d2b	        0x66893479	              mov word [rcx + rdi*2], si	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d2f	          0x668910	                      mov word [rax], dx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000d32	            0x7414	                            je 0x4000d48	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d34	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d37	            0x89d1	                            mov ecx, edx	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d39	            0x29f1	                            sub ecx, esi	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d3b	      0x2d06010000	                          sub eax, 0x106	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d40	            0x39c1	                            cmp ecx, eax	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d42	     0xf86d8020000	                           jbe 0x4001020	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d48	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000d4e	          0x83f802	                              cmp eax, 2	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d51	     0xf86a9010000	                           jbe 0x4000f00	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d57	    0x662b93b00000	               sub dx, word [rbx + 0xb0]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d5e	    0x8bb30c170000	          mov esi, dword [rbx + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d64	          0x83e803	                              sub eax, 3	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d67	    0x488bbb101700	          mov rdi, qword [rbx + 0x1710] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d6e	        0x66891477	              mov word [rdi + rsi*2], dx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d72	    0x488bbb001700	          mov rdi, qword [rbx + 0x1700] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d79	          0x4889f1	                            mov rcx, rsi	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d7c	          0x83c101	                              add ecx, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d7f	          0x83ea01	                              sub edx, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d82	    0x898b0c170000	          mov dword [rbx + 0x170c], ecx 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d88	          0x880437	                mov byte [rdi + rsi], al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d8b	           0xfb6c0	                           movzx eax, al	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d8e	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d95	    0x66838483d804	       add word [rbx + rax*4 + 0x4d8], 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d9e	      0x6681faff00	                            cmp dx, 0xff	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000da3	     0xf8757020000	                            ja 0x4001000	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000da9	           0xfb7d2	                           movzx edx, dx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000dac	     0xfb682000000	                   movzx eax, byte [rdx]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000db3	    0x66838483c809	       add word [rbx + rax*4 + 0x9c8], 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000dbc	          0x4531d2	                          xor r10d, r10d	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000dbf	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000dc5	    0x448b83a00000	            mov r8d, dword [rbx + 0xa0] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000dcc	          0x83e801	                              sub eax, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000dcf	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000dd5	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000ddb	        0x410f94c2	                               sete r10b	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000ddf	          0x4429c0	                            sub eax, r8d	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000de2	    0x443b83c00000	            cmp r8d, dword [rbx + 0xc0] 	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000de9	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000def	     0xf8773010000	                            ja 0x4000f68	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000df5	          0x83f802	                              cmp eax, 2	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000df8	     0xf866a010000	                           jbe 0x4000f68	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000dfe	    0x448bbbac0000	           mov r15d, dword [rbx + 0xac] 	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e05	        0x418d70ff	                       lea esi, [r8 - 1]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e09	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e0f	        0x4c8b7370	            mov r14, qword [rbx + 0x70] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e13	        0x448b6b58	           mov r13d, dword [rbx + 0x58] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e17	        0x4c8b6378	            mov r12, qword [rbx + 0x78] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e1b	        0x488b6b60	            mov rbp, qword [rbx + 0x60] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e1f	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e25	    0x448b9b8c0000	           mov r11d, dword [rbx + 0x8c] 	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e2c	        0x418d5701	                      lea edx, [r15 + 1]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e30	    0x89b3a0000000	             mov dword [rbx + 0xa0], esi	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e36	      0x4489442408	                mov dword [rsp + 8], r8d	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e3b	       0xf1f440000	                   nop dword [rax + rax]	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000e40	          0x8d7a02	                      lea edi, [rdx + 2]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e43	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e49	            0xd3e0	                             shl eax, cl	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e4b	          0x4189d1	                            mov r9d, edx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e4e	          0x83ee01	                              sub esi, 1	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e51	       0xfb67c3d00	             movzx edi, byte [rbp + rdi]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e56	          0x4521e9	                           and r9d, r13d	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e59	            0x31f8	                            xor eax, edi	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e5b	          0x4421d8	                           and eax, r11d	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e5e	            0x89c7	                            mov edi, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e60	    0x898380000000	             mov dword [rbx + 0x80], eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e66	        0x498d3c7c	                  lea rdi, [r12 + rdi*2]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e6a	        0x440fb707	                   movzx r8d, word [rdi]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e6e	      0x664789044e	              mov word [r14 + r9*2], r8w	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e73	          0x668917	                      mov word [rdi], dx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e76	          0x83c201	                              add edx, 1	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000e79	            0x85f6	                           test esi, esi	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e7b	    0x89b3a0000000	             mov dword [rbx + 0xa0], esi	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e81	            0x75bd	                           jne 0x4000e40	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e83	      0x448b442408	                mov r8d, dword [rsp + 8]	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e88	          0x4501f8	                           add r8d, r15d	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e8b	    0x448983ac0000	             mov dword [rbx + 0xac], r8d	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e92	    0x660f1f440000	                    nop word [rax + rax]	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000e98	          0x4585d2	                         test r10d, r10d	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e9b	     0xf8437feffff	                            je 0x4000cd8	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ea1	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ea7	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eae	            0x31f6	                            xor esi, esi	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eb0	          0x4829c2	                            sub rdx, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eb3	          0x4885c0	                           test rax, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eb6	            0x7809	                            js 0x4000ec1	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eb8	            0x89c0	                            mov eax, eax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eba	        0x48034360	             add rax, qword [rbx + 0x60]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ebe	          0x4889c6	                            mov rsi, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ec1	            0x31c9	                            xor ecx, ecx	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ec3	          0x4889df	                            mov rdi, rbx	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ec6	      0xe800000000	                          call 0x4000ecb	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ecb	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ed1	          0x488b3b	                    mov rdi, qword [rbx]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ed4	    0x488983980000	             mov qword [rbx + 0x98], rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000edb	      0xe8c0f7ffff	                  call sym.flush_pending	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ee0	          0x488b03	                    mov rax, qword [rbx]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ee3	          0x8b7020	            mov esi, dword [rax + 0x20] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ee6	            0x85f6	                           test esi, esi	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ee8	     0xf85eafdffff	                           jne 0x4000cd8	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eee	        0x4883c418	                           add rsp, 0x18	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ef2	            0x31c0	                            xor eax, eax	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000ef4	              0x5b	                                 pop rbx	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ef5	              0x5d	                                 pop rbp	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ef6	            0x415c	                                 pop r12	      1918	deflate.c	FUNCTION_21	IF_9
0x4000ef8	            0x415d	                                 pop r13	      1918	deflate.c	FUNCTION_21	IF_9
0x4000efa	            0x415e	                                 pop r14	      1918	deflate.c	FUNCTION_21	IF_9
0x4000efc	            0x415f	                                 pop r15	      1918	deflate.c	FUNCTION_21	IF_9
0x4000efe	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
0x4000eff	              0x90	                                     nop	      1918	deflate.c	FUNCTION_21	IF_9
0x4000f00	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f06	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f0a	            0x31ff	                            xor edi, edi	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f0c	    0x488bb3101700	          mov rsi, qword [rbx + 0x1710] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f13	          0x4531d2	                          xor r10d, r10d	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f16	         0xfb60410	             movzx eax, byte [rax + rdx]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f1a	        0x66893c4e	              mov word [rsi + rcx*2], di	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f1e	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f25	          0x4889ca	                            mov rdx, rcx	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f28	          0x83c201	                              add edx, 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f2b	    0x89930c170000	          mov dword [rbx + 0x170c], edx 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f31	          0x88040e	                mov byte [rsi + rcx], al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f34	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f3d	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f43	          0x83e801	                              sub eax, 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f46	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f4c	        0x410f94c2	                               sete r10b	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f50	    0x83abb4000000	               sub dword [rbx + 0xb4], 1	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000f57	    0x8383ac000000	               add dword [rbx + 0xac], 1	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000f5e	      0xe935ffffff	                           jmp 0x4000e98	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000f63	       0xf1f440000	                   nop dword [rax + rax]	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000f68	    0x440383ac0000	             add r8d, dword [rbx + 0xac]	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000f6f	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f73	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      1891	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f7d	          0x4489c0	                            mov eax, r8d	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f80	    0x448983ac0000	             mov dword [rbx + 0xac], r8d	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000f87	        0x418d4801	                       lea ecx, [r8 + 1]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f8b	         0xfb60402	             movzx eax, byte [rdx + rax]	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f8f	    0x898380000000	             mov dword [rbx + 0x80], eax	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f95	         0xfb6140a	             movzx edx, byte [rdx + rcx]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f99	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000f9f	            0xd3e0	                             shl eax, cl	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000fa1	            0x31d0	                            xor eax, edx	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000fa3	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000fa9	    0x898380000000	             mov dword [rbx + 0x80], eax	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000faf	      0xe9e4feffff	                           jmp 0x4000e98	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000fb4	         0xf1f4000	                         nop dword [rax]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000fb8	          0x4889df	                            mov rdi, rbx	      1838	deflate.c	FUNCTION_21	FOR_1
0x4000fbb	      0xe840f4ffff	                    call sym.fill_window	      1838	deflate.c	FUNCTION_21	FOR_1
0x4000fc0	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000fc6	      0x3d05010000	                          cmp eax, 0x105	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000fcb	     0xf8717fdffff	                            ja 0x4000ce8	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000fd1	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000fd6	          0x4585c0	                           test r8d, r8d	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000fd9	     0xf840fffffff	                            je 0x4000eee	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000fdf	            0x85c0	                           test eax, eax	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4000fe1	            0x7456	                            je 0x4001039	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4000fe3	          0x83f802	                              cmp eax, 2	      1849	deflate.c	FUNCTION_21	FOR_1
0x4000fe6	     0xf87fcfcffff	                            ja 0x4000ce8	      1849	deflate.c	FUNCTION_21	FOR_1
0x4000fec	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1849	deflate.c	FUNCTION_21	FOR_1
0x4000ff2	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1849	deflate.c	FUNCTION_21	FOR_1
0x4000ff8	      0xe951fdffff	                           jmp 0x4000d4e	      1849	deflate.c	FUNCTION_21	FOR_1
0x4000ffd	           0xf1f00	                         nop dword [rax]	      1849	deflate.c	FUNCTION_21	FOR_1
0x4001000	        0x66c1ea07	                               shr dx, 7	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001004	    0x488d82000100	                  lea rax, [rdx + 0x100]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400100b	      0x25ff030000	                          and eax, 0x3ff	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001010	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001017	      0xe997fdffff	                           jmp 0x4000db3	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400101c	         0xf1f4000	                         nop dword [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001020	          0x4889df	                            mov rdi, rbx	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001023	      0xe818f1ffff	                  call sym.longest_match	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001028	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x400102e	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001034	      0xe915fdffff	                           jmp 0x4000d4e	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4001039	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400103f	      0xb802000000	                              mov eax, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4001044	          0x83fa02	                              cmp edx, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4001047	           0xf46c2	                         cmovbe eax, edx	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400104a	      0x837c240c04	                cmp dword [rsp + 0xc], 4	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x400104f	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4001055	            0x7465	                            je 0x40010bc	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4001057	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      1915	deflate.c	FUNCTION_21	IF_9
0x400105d	      0xb801000000	                              mov eax, 1	      1917	deflate.c	FUNCTION_21	IF_9
0x4001062	            0x85c9	                           test ecx, ecx	      1915	deflate.c	FUNCTION_21	IF_9
0x4001064	            0x7447	                            je 0x40010ad	      1915	deflate.c	FUNCTION_21	IF_9
0x4001066	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1916	deflate.c	FUNCTION_21	IF_9
0x400106d	            0x31f6	                            xor esi, esi	      1916	deflate.c	FUNCTION_21	IF_9
0x400106f	          0x4829c2	                            sub rdx, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4001072	          0x4885c0	                           test rax, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4001075	            0x7809	                            js 0x4001080	      1916	deflate.c	FUNCTION_21	IF_9
0x4001077	            0x89c0	                            mov eax, eax	      1916	deflate.c	FUNCTION_21	IF_9
0x4001079	        0x48034360	             add rax, qword [rbx + 0x60]	      1916	deflate.c	FUNCTION_21	IF_9
0x400107d	          0x4889c6	                            mov rsi, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4001080	            0x31c9	                            xor ecx, ecx	      1916	deflate.c	FUNCTION_21	IF_9
0x4001082	          0x4889df	                            mov rdi, rbx	      1916	deflate.c	FUNCTION_21	IF_9
0x4001085	      0xe800000000	                          call 0x400108a	      1916	deflate.c	FUNCTION_21	IF_9
0x400108a	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4001090	          0x488b3b	                    mov rdi, qword [rbx]	      1916	deflate.c	FUNCTION_21	IF_9
0x4001093	    0x488983980000	             mov qword [rbx + 0x98], rax	      1916	deflate.c	FUNCTION_21	IF_9
0x400109a	      0xe801f6ffff	                  call sym.flush_pending	      1916	deflate.c	FUNCTION_21	IF_9
0x400109f	          0x488b03	                    mov rax, qword [rbx]	      1916	deflate.c	FUNCTION_21	IF_9
0x40010a2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1840	deflate.c	FUNCTION_21	FOR_1
0x40010a5	            0x85c0	                           test eax, eax	      1840	deflate.c	FUNCTION_21	FOR_1
0x40010a7	           0xf95c0	                                setne al	      1840	deflate.c	FUNCTION_21	FOR_1
0x40010aa	           0xfb6c0	                           movzx eax, al	      1840	deflate.c	FUNCTION_21	FOR_1
0x40010ad	        0x4883c418	                           add rsp, 0x18	      1918	deflate.c	FUNCTION_21	IF_9
0x40010b1	              0x5b	                                 pop rbx	      1918	deflate.c	FUNCTION_21	IF_9
0x40010b2	              0x5d	                                 pop rbp	      1918	deflate.c	FUNCTION_21	IF_9
0x40010b3	            0x415c	                                 pop r12	      1918	deflate.c	FUNCTION_21	IF_9
0x40010b5	            0x415d	                                 pop r13	      1918	deflate.c	FUNCTION_21	IF_9
0x40010b7	            0x415e	                                 pop r14	      1918	deflate.c	FUNCTION_21	IF_9
0x40010b9	            0x415f	                                 pop r15	      1918	deflate.c	FUNCTION_21	IF_9
0x40010bb	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
0x40010bc	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010c3	            0x31f6	                            xor esi, esi	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010c5	          0x4829c2	                            sub rdx, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010c8	          0x4885c0	                           test rax, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010cb	            0x7809	                            js 0x40010d6	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010cd	            0x89c0	                            mov eax, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010cf	        0x48034360	             add rax, qword [rbx + 0x60]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010d3	          0x4889c6	                            mov rsi, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010d6	          0x4889df	                            mov rdi, rbx	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010d9	      0xb901000000	                              mov ecx, 1	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010de	      0xe800000000	                          call 0x40010e3	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010e3	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010e9	          0x488b3b	                    mov rdi, qword [rbx]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010ec	    0x488983980000	             mov qword [rbx + 0x98], rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010f3	      0xe8a8f5ffff	                  call sym.flush_pending	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010f8	          0x488b03	                    mov rax, qword [rbx]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010fb	        0x83782001	               cmp dword [rax + 0x20], 1	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x40010ff	            0x19c0	                            sbb eax, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4001101	        0x4883c418	                           add rsp, 0x18	      1918	deflate.c	FUNCTION_21	IF_9
0x4001105	              0x5b	                                 pop rbx	      1918	deflate.c	FUNCTION_21	IF_9
0x4001106	          0x83c003	                              add eax, 3	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4001109	              0x5d	                                 pop rbp	      1918	deflate.c	FUNCTION_21	IF_9
0x400110a	            0x415c	                                 pop r12	      1918	deflate.c	FUNCTION_21	IF_9
0x400110c	            0x415d	                                 pop r13	      1918	deflate.c	FUNCTION_21	IF_9
0x400110e	            0x415e	                                 pop r14	      1918	deflate.c	FUNCTION_21	IF_9
0x4001110	            0x415f	                                 pop r15	      1918	deflate.c	FUNCTION_21	IF_9
0x4001112	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
deflateStateCheck	DO,0:IF,2:CALL,0:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	35
0x40000c0	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x40000c3	            0x742b	                            je 0x40000f0	       357	deflate.c	
0x40000c5	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x40000ca	            0x7424	                            je 0x40000f0	       357	deflate.c	
0x40000cc	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x40000d1	            0x741d	                            je 0x40000f0	       358	deflate.c	
0x40000d3	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       360	deflate.c	FUNCTION_2
0x40000d7	      0xb801000000	                              mov eax, 1	       359	deflate.c	FUNCTION_2
0x40000dc	          0x4885d2	                           test rdx, rdx	       361	deflate.c	FUNCTION_2	IF_1
0x40000df	            0x7405	                            je 0x40000e6	       361	deflate.c	FUNCTION_2	IF_1
0x40000e1	          0x483b3a	                    cmp rdi, qword [rdx]	       361	deflate.c	FUNCTION_2	IF_1
0x40000e4	            0x741a	                            je 0x4000100	       361	deflate.c	FUNCTION_2	IF_1
0x40000e6	            0xf3c3	                                     ret	       373	deflate.c	FUNCTION_2	IF_2
0x40000e8	     0xf1f84000000	                   nop dword [rax + rax]	       373	deflate.c	FUNCTION_2	IF_2
0x40000f0	      0xb801000000	                              mov eax, 1	       359	deflate.c	FUNCTION_2
0x40000f5	              0xc3	                                     ret	       359	deflate.c	FUNCTION_2
0x40000f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       359	deflate.c	FUNCTION_2
0x4000100	          0x8b7208	                mov esi, dword [rdx + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x4000103	      0xba01000000	                              mov edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4000108	          0x8d4ed6	                   lea ecx, [rsi - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x400010b	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x400010e	            0x7717	                            ja 0x4000127	       361	deflate.c	FUNCTION_2	IF_1
0x4000110	    0x48ba01800088	          movabs rdx, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x400011a	          0x48d3ea	                             shr rdx, cl	       361	deflate.c	FUNCTION_2	IF_1
0x400011d	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4000120	        0x4883f201	                              xor rdx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4000124	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4000127	          0x83fe71	                           cmp esi, 0x71	       359	deflate.c	FUNCTION_2
0x400012a	           0xf95c1	                                setne cl	       359	deflate.c	FUNCTION_2
0x400012d	    0x81fe9a020000	                          cmp esi, 0x29a	       359	deflate.c	FUNCTION_2
0x4000133	           0xf95c0	                                setne al	       359	deflate.c	FUNCTION_2
0x4000136	            0x21c8	                            and eax, ecx	       359	deflate.c	FUNCTION_2
0x4000138	            0x21c2	                            and edx, eax	       359	deflate.c	FUNCTION_2
0x400013a	           0xfb6c2	                           movzx eax, dl	       359	deflate.c	FUNCTION_2
0x400013d	              0xc3	                                     ret	       359	deflate.c	FUNCTION_2
longest_match	DO,1:IF,2:CALL,5:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	138
0x4000140	            0x4157	                                push r15	      1239	deflate.c	
0x4000142	            0x4156	                                push r14	      1239	deflate.c	
0x4000144	          0x4531d2	                          xor r10d, r10d	      1239	deflate.c	
0x4000147	            0x4155	                                push r13	      1239	deflate.c	
0x4000149	            0x4154	                                push r12	      1239	deflate.c	
0x400014b	              0x55	                                push rbp	      1239	deflate.c	
0x400014c	              0x53	                                push rbx	      1239	deflate.c	
0x400014d	          0x8b5f50	            mov ebx, dword [rdi + 0x50] 	      1246	deflate.c	FUNCTION_17
0x4000150	    0x448b9fac0000	           mov r11d, dword [rdi + 0xac] 	      1241	deflate.c	
0x4000157	        0x4c8b4f60	              mov r9, qword [rdi + 0x60]	      1241	deflate.c	
0x400015b	    0x448b87b80000	            mov r8d, dword [rdi + 0xb8] 	      1244	deflate.c	FUNCTION_17
0x4000162	    0x8b8fbc000000	            mov ecx, dword [rdi + 0xbc] 	      1240	deflate.c	
0x4000168	    0x448bbfd00000	           mov r15d, dword [rdi + 0xd0] 	      1245	deflate.c	FUNCTION_17
0x400016f	    0x8dabfafeffff	                  lea ebp, [rbx - 0x106]	      1247	deflate.c	FUNCTION_17
0x4000175	        0x4f8d2419	                     lea r12, [r9 + r11]	      1241	deflate.c	
0x4000179	          0x4489c0	                            mov eax, r8d	      1244	deflate.c	FUNCTION_17
0x400017c	          0x4139eb	                           cmp r11d, ebp	      1247	deflate.c	FUNCTION_17
0x400017f	            0x760a	                           jbe 0x400018b	      1247	deflate.c	FUNCTION_17
0x4000181	    0x458d93060100	                 lea r10d, [r11 + 0x106]	      1247	deflate.c	FUNCTION_17
0x4000188	          0x4129da	                           sub r10d, ebx	      1247	deflate.c	FUNCTION_17
0x400018b	    0x4b8d94190201	            lea rdx, [r9 + r11 + 0x102] 	      1262	deflate.c	FUNCTION_17
0x4000193	    0x448bb7b40000	           mov r14d, dword [rdi + 0xb4] 	      1279	deflate.c	FUNCTION_17	IF_1
0x400019a	        0x488b6f70	            mov rbp, qword [rdi + 0x70] 	      1251	deflate.c	FUNCTION_17	CALL_2
0x400019e	          0x8b5f58	            mov ebx, dword [rdi + 0x58] 	      1252	deflate.c	FUNCTION_17
0x40001a1	      0x48895424f0	             mov qword [rsp - 0x10], rdx	      1262	deflate.c	FUNCTION_17
0x40001a6	          0x4963d0	                         movsxd rdx, r8d	      1263	deflate.c	FUNCTION_17
0x40001a9	    0x450fb66c14ff	        movzx r13d, byte [r12 + rdx - 1]	      1263	deflate.c	FUNCTION_17
0x40001af	      0x450fb61c14	            movzx r11d, byte [r12 + rdx]	      1264	deflate.c	FUNCTION_17
0x40001b4	            0x89ca	                            mov edx, ecx	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001b6	          0xc1ea02	                              shr edx, 2	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001b9	    0x443b87cc0000	            cmp r8d, dword [rdi + 0xcc] 	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001c0	           0xf43ca	                         cmovae ecx, edx	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001c3	          0x4539fe	                          cmp r14d, r15d	      1279	deflate.c	FUNCTION_17	IF_1
0x40001c6	        0x450f42fe	                        cmovb r15d, r14d	      1279	deflate.c	FUNCTION_17	IF_1
0x40001ca	            0xeb1d	                           jmp 0x40001e9	      1279	deflate.c	FUNCTION_17	IF_1
0x40001cc	         0xf1f4000	                         nop dword [rax]	      1279	deflate.c	FUNCTION_17	IF_1
0x40001d0	            0x21de	                            and esi, ebx	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x40001d2	       0xfb7747500	           movzx esi, word [rbp + rsi*2]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x40001d7	          0x4139f2	                           cmp r10d, esi	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40001da	     0xf832b010000	                           jae 0x400030b	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40001e0	          0x83e901	                              sub ecx, 1	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40001e3	     0xf8422010000	                            je 0x400030b	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x40001e9	            0x89f2	                            mov edx, esi	      1285	deflate.c	FUNCTION_17	CALL_4
0x40001eb	          0x4c63c0	                          movsxd r8, eax	      1330	deflate.c	FUNCTION_17	DO_1
0x40001ee	          0x4c01ca	                             add rdx, r9	      1285	deflate.c	FUNCTION_17	CALL_4
0x40001f1	        0x463a1c02	               cmp r11b, byte [rdx + r8]	      1330	deflate.c	FUNCTION_17	DO_1
0x40001f5	            0x75d9	                           jne 0x40001d0	      1330	deflate.c	FUNCTION_17	DO_1
0x40001f7	      0x463a6c02ff	           cmp r13b, byte [rdx + r8 - 1]	      1330	deflate.c	FUNCTION_17	DO_1
0x40001fc	            0x75d2	                           jne 0x40001d0	      1330	deflate.c	FUNCTION_17	DO_1
0x40001fe	      0x450fb60424	                   movzx r8d, byte [r12]	      1331	deflate.c	FUNCTION_17	DO_1
0x4000203	          0x443802	                     cmp byte [rdx], r8b	      1331	deflate.c	FUNCTION_17	DO_1
0x4000206	            0x75c8	                           jne 0x40001d0	      1331	deflate.c	FUNCTION_17	DO_1
0x4000208	    0x450fb6442401	               movzx r8d, byte [r12 + 1]	      1332	deflate.c	FUNCTION_17	DO_1
0x400020e	        0x44384201	                 cmp byte [rdx + 1], r8b	      1332	deflate.c	FUNCTION_17	DO_1
0x4000212	            0x75bc	                           jne 0x40001d0	      1332	deflate.c	FUNCTION_17	DO_1
0x4000214	        0x4983c402	                              add r12, 2	      1341	deflate.c	FUNCTION_17	DO_1
0x4000218	        0x4883c202	                              add rdx, 2	      1341	deflate.c	FUNCTION_17	DO_1
0x400021c	        0x894424fc	                mov dword [rsp - 4], eax	      1341	deflate.c	FUNCTION_17	DO_1
0x4000220	      0x4c8b4424f0	              mov r8, qword [rsp - 0x10]	      1341	deflate.c	FUNCTION_17	DO_1
0x4000225	      0xe97e000000	                           jmp 0x40002a8	      1341	deflate.c	FUNCTION_17	DO_1
0x400022a	    0x660f1f440000	                    nop word [rax + rax]	      1341	deflate.c	FUNCTION_17	DO_1
0x4000230	         0xfb64202	               movzx eax, byte [rdx + 2]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000234	      0x4138442402	                  cmp byte [r12 + 2], al	      1348	deflate.c	FUNCTION_17	DO_1
0x4000239	     0xf8516010000	                           jne 0x4000355	      1348	deflate.c	FUNCTION_17	DO_1
0x400023f	         0xfb64203	               movzx eax, byte [rdx + 3]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000243	      0x4138442403	                  cmp byte [r12 + 3], al	      1348	deflate.c	FUNCTION_17	DO_1
0x4000248	     0xf85fa000000	                           jne 0x4000348	      1348	deflate.c	FUNCTION_17	DO_1
0x400024e	         0xfb64204	               movzx eax, byte [rdx + 4]	      1349	deflate.c	FUNCTION_17	DO_1
0x4000252	      0x4138442404	                  cmp byte [r12 + 4], al	      1349	deflate.c	FUNCTION_17	DO_1
0x4000257	     0xf85de000000	                           jne 0x400033b	      1349	deflate.c	FUNCTION_17	DO_1
0x400025d	         0xfb64205	               movzx eax, byte [rdx + 5]	      1349	deflate.c	FUNCTION_17	DO_1
0x4000261	      0x4138442405	                  cmp byte [r12 + 5], al	      1349	deflate.c	FUNCTION_17	DO_1
0x4000266	     0xf85c5000000	                           jne 0x4000331	      1349	deflate.c	FUNCTION_17	DO_1
0x400026c	         0xfb64206	               movzx eax, byte [rdx + 6]	      1350	deflate.c	FUNCTION_17	DO_1
0x4000270	      0x4138442406	                  cmp byte [r12 + 6], al	      1350	deflate.c	FUNCTION_17	DO_1
0x4000275	     0xf85ac000000	                           jne 0x4000327	      1350	deflate.c	FUNCTION_17	DO_1
0x400027b	         0xfb64207	               movzx eax, byte [rdx + 7]	      1350	deflate.c	FUNCTION_17	DO_1
0x400027f	      0x4138442407	                  cmp byte [r12 + 7], al	      1350	deflate.c	FUNCTION_17	DO_1
0x4000284	     0xf8593000000	                           jne 0x400031d	      1350	deflate.c	FUNCTION_17	DO_1
0x400028a	        0x4883c208	                              add rdx, 8	      1350	deflate.c	FUNCTION_17	DO_1
0x400028e	        0x4983c408	                              add r12, 8	      1350	deflate.c	FUNCTION_17	DO_1
0x4000292	           0xfb602	                   movzx eax, byte [rdx]	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000295	        0x41380424	                      cmp byte [r12], al	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000299	     0xf85c3000000	                           jne 0x4000362	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x400029f	          0x4d39e0	                             cmp r8, r12	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002a2	     0xf86ba000000	                           jbe 0x4000362	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002a8	         0xfb64201	               movzx eax, byte [rdx + 1]	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002ac	      0x4138442401	                  cmp byte [r12 + 1], al	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002b1	     0xf8479ffffff	                            je 0x4000230	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002b7	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002bb	        0x4983c401	                              add r12, 1	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002bf	      0x4c8b4424f0	              mov r8, qword [rsp - 0x10]	      1356	deflate.c	FUNCTION_17	DO_1
0x40002c4	          0x4c89c2	                             mov rdx, r8	      1356	deflate.c	FUNCTION_17	DO_1
0x40002c7	          0x4c29e2	                            sub rdx, r12	      1356	deflate.c	FUNCTION_17	DO_1
0x40002ca	    0x41bc02010000	                         mov r12d, 0x102	      1356	deflate.c	FUNCTION_17	DO_1
0x40002d0	          0x4129d4	                           sub r12d, edx	      1356	deflate.c	FUNCTION_17	DO_1
0x40002d3	          0x4489e2	                           mov edx, r12d	      1356	deflate.c	FUNCTION_17	DO_1
0x40002d6	    0x4d8da0fefeff	                   lea r12, [r8 - 0x102]	      1357	deflate.c	FUNCTION_17	DO_1
0x40002dd	            0x39d0	                            cmp eax, edx	      1361	deflate.c	FUNCTION_17	DO_1
0x40002df	     0xf8debfeffff	                           jge 0x40001d0	      1361	deflate.c	FUNCTION_17	DO_1
0x40002e5	          0x4139d7	                           cmp r15d, edx	      1364	deflate.c	FUNCTION_17	DO_1
0x40002e8	    0x89b7b0000000	             mov dword [rdi + 0xb0], esi	      1362	deflate.c	FUNCTION_17	DO_1
0x40002ee	            0x7e19	                           jle 0x4000309	      1364	deflate.c	FUNCTION_17	DO_1
0x40002f0	          0x4863c2	                         movsxd rax, edx	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x40002f3	    0x450fb66c04ff	        movzx r13d, byte [r12 + rax - 1]	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x40002f9	    0x450fb69c00fe	     movzx r11d, byte [r8 + rax - 0x102]	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000302	            0x89d0	                            mov eax, edx	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000304	      0xe9c7feffff	                           jmp 0x40001d0	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000309	            0x89d0	                            mov eax, edx	      1356	deflate.c	FUNCTION_17	DO_1
0x400030b	          0x4439f0	                           cmp eax, r14d	      1356	deflate.c	FUNCTION_17	DO_1
0x400030e	              0x5b	                                 pop rbx	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400030f	        0x410f47c6	                         cmova eax, r14d	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000313	              0x5d	                                 pop rbp	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000314	            0x415c	                                 pop r12	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000316	            0x415d	                                 pop r13	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000318	            0x415e	                                 pop r14	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400031a	            0x415f	                                 pop r15	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400031c	              0xc3	                                     ret	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400031d	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000321	        0x4983c407	                              add r12, 7	      1350	deflate.c	FUNCTION_17	DO_1
0x4000325	            0xeb98	                           jmp 0x40002bf	      1350	deflate.c	FUNCTION_17	DO_1
0x4000327	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1350	deflate.c	FUNCTION_17	DO_1
0x400032b	        0x4983c406	                              add r12, 6	      1350	deflate.c	FUNCTION_17	DO_1
0x400032f	            0xeb8e	                           jmp 0x40002bf	      1350	deflate.c	FUNCTION_17	DO_1
0x4000331	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1350	deflate.c	FUNCTION_17	DO_1
0x4000335	        0x4983c405	                              add r12, 5	      1349	deflate.c	FUNCTION_17	DO_1
0x4000339	            0xeb84	                           jmp 0x40002bf	      1349	deflate.c	FUNCTION_17	DO_1
0x400033b	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1349	deflate.c	FUNCTION_17	DO_1
0x400033f	        0x4983c404	                              add r12, 4	      1349	deflate.c	FUNCTION_17	DO_1
0x4000343	      0xe977ffffff	                           jmp 0x40002bf	      1349	deflate.c	FUNCTION_17	DO_1
0x4000348	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1349	deflate.c	FUNCTION_17	DO_1
0x400034c	        0x4983c403	                              add r12, 3	      1348	deflate.c	FUNCTION_17	DO_1
0x4000350	      0xe96affffff	                           jmp 0x40002bf	      1348	deflate.c	FUNCTION_17	DO_1
0x4000355	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000359	        0x4983c402	                              add r12, 2	      1348	deflate.c	FUNCTION_17	DO_1
0x400035d	      0xe95dffffff	                           jmp 0x40002bf	      1348	deflate.c	FUNCTION_17	DO_1
0x4000362	        0x8b4424fc	                mov eax, dword [rsp - 4]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000366	      0xe954ffffff	                           jmp 0x40002bf	      1348	deflate.c	FUNCTION_17	DO_1
deflateSetHeader	DO,0:IF,1:CALL,1:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	12
0x4001a60	          0x4989f1	                             mov r9, rsi	       520	deflate.c	
0x4001a63	      0xe858e6ffff	              call sym.deflateStateCheck	       521	deflate.c	
0x4001a68	            0x85c0	                           test eax, eax	       521	deflate.c	
0x4001a6a	            0x7514	                           jne 0x4001a80	       521	deflate.c	
0x4001a6c	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       521	deflate.c	
0x4001a70	        0x837a3002	               cmp dword [rdx + 0x30], 2	       521	deflate.c	
0x4001a74	            0x750a	                           jne 0x4001a80	       521	deflate.c	
0x4001a76	        0x4c894a38	              mov qword [rdx + 0x38], r9	       523	deflate.c	
0x4001a7a	              0xc3	                                     ret	       524	deflate.c	FUNCTION_6
0x4001a7b	       0xf1f440000	                   nop dword [rax + rax]	       524	deflate.c	FUNCTION_6
0x4001a80	      0xb8feffffff	                     mov eax, 0xfffffffe	       522	deflate.c	
0x4001a85	              0xc3	                                     ret	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
deflateResetKeep	DO,0:IF,2:CALL,4:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0	54
0x40018c0	            0x4154	                                push r12	       469	deflate.c	
0x40018c2	              0x55	                                push rbp	       469	deflate.c	
0x40018c3	          0x4889fd	                            mov rbp, rdi	       469	deflate.c	
0x40018c6	              0x53	                                push rbx	       469	deflate.c	
0x40018c7	      0xe8f4e7ffff	              call sym.deflateStateCheck	       472	deflate.c	
0x40018cc	            0x85c0	                           test eax, eax	       472	deflate.c	
0x40018ce	     0xf85a4000000	                           jne 0x4001978	       472	deflate.c	
0x40018d4	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       480	deflate.c	FUNCTION_4
0x40018d8	          0x4189c4	                           mov r12d, eax	       480	deflate.c	FUNCTION_4
0x40018db	    0x48c747280000	               mov qword [rdi + 0x28], 0	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x40018e3	    0x48c747100000	               mov qword [rdi + 0x10], 0	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x40018eb	    0x48c747300000	               mov qword [rdi + 0x30], 0	       477	deflate.c	FUNCTION_4	IF_1
0x40018f3	    0xc74758020000	               mov dword [rdi + 0x58], 2	       478	deflate.c	FUNCTION_4	IF_1
0x40018fa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       482	deflate.c	FUNCTION_4
0x40018fe	    0x48c743280000	               mov qword [rbx + 0x28], 0	       481	deflate.c	FUNCTION_4
0x4001906	        0x48894320	             mov qword [rbx + 0x20], rax	       482	deflate.c	FUNCTION_4
0x400190a	          0x8b4330	            mov eax, dword [rbx + 0x30] 	       484	deflate.c	FUNCTION_4
0x400190d	            0x85c0	                           test eax, eax	       484	deflate.c	FUNCTION_4
0x400190f	            0x783f	                            js 0x4001950	       484	deflate.c	FUNCTION_4
0x4001911	          0x83f802	                              cmp eax, 2	       489	deflate.c	FUNCTION_4	IF_2
0x4001914	            0x7449	                            je 0x400195f	       489	deflate.c	FUNCTION_4	IF_2
0x4001916	          0x83f801	                              cmp eax, 1	       491	deflate.c	FUNCTION_4
0x4001919	            0x19d2	                            sbb edx, edx	       491	deflate.c	FUNCTION_4
0x400191b	          0x83e247	                           and edx, 0x47	       491	deflate.c	FUNCTION_4
0x400191e	          0x83c22a	                           add edx, 0x2a	       491	deflate.c	FUNCTION_4
0x4001921	          0x895308	                mov dword [rbx + 8], edx	       487	deflate.c	FUNCTION_4
0x4001924	            0x31f6	                            xor esi, esi	       494	deflate.c	FUNCTION_4
0x4001926	            0x31d2	                            xor edx, edx	       494	deflate.c	FUNCTION_4
0x4001928	            0x31ff	                            xor edi, edi	       494	deflate.c	FUNCTION_4
0x400192a	      0xe800000000	                          call 0x400192f	       494	deflate.c	FUNCTION_4
0x400192f	        0x48894560	            mov qword [rbp + 0x60], rax 	       492	deflate.c	FUNCTION_4
0x4001933	          0x4889df	                            mov rdi, rbx	       499	deflate.c	FUNCTION_4
0x4001936	    0xc7434c000000	               mov dword [rbx + 0x4c], 0	       497	deflate.c	FUNCTION_4
0x400193d	      0xe800000000	                          call 0x4001942	       499	deflate.c	FUNCTION_4
0x4001942	          0x4489e0	                           mov eax, r12d	       502	deflate.c	FUNCTION_4
0x4001945	              0x5b	                                 pop rbx	       502	deflate.c	FUNCTION_4
0x4001946	              0x5d	                                 pop rbp	       502	deflate.c	FUNCTION_4
0x4001947	            0x415c	                                 pop r12	       502	deflate.c	FUNCTION_4
0x4001949	              0xc3	                                     ret	       502	deflate.c	FUNCTION_4
0x400194a	    0x660f1f440000	                    nop word [rax + rax]	       502	deflate.c	FUNCTION_4
0x4001950	            0xf7d8	                                 neg eax	       485	deflate.c	FUNCTION_4
0x4001952	      0xba2a000000	                           mov edx, 0x2a	       491	deflate.c	FUNCTION_4
0x4001957	          0x83f802	                              cmp eax, 2	       489	deflate.c	FUNCTION_4	IF_2
0x400195a	          0x894330	             mov dword [rbx + 0x30], eax	       485	deflate.c	FUNCTION_4
0x400195d	            0x75c2	                           jne 0x4001921	       489	deflate.c	FUNCTION_4	IF_2
0x400195f	    0xc74308390000	               mov dword [rbx + 8], 0x39	       487	deflate.c	FUNCTION_4
0x4001966	            0x31d2	                            xor edx, edx	       494	deflate.c	FUNCTION_4
0x4001968	            0x31f6	                            xor esi, esi	       494	deflate.c	FUNCTION_4
0x400196a	            0x31ff	                            xor edi, edi	       494	deflate.c	FUNCTION_4
0x400196c	      0xe800000000	                          call 0x4001971	       494	deflate.c	FUNCTION_4
0x4001971	            0xebbc	                           jmp 0x400192f	       494	deflate.c	FUNCTION_4
0x4001973	       0xf1f440000	                   nop dword [rax + rax]	       494	deflate.c	FUNCTION_4
0x4001978	    0x41bcfeffffff	                    mov r12d, 0xfffffffe	       473	deflate.c	FUNCTION_4
0x400197e	            0xebc2	                           jmp 0x4001942	       473	deflate.c	FUNCTION_4
deflateBound	DO,2:IF,7:CALL,1:ELSE,0:functions,0:SWITCH,1:WHILE,0:FOR,0	84
0x4001bc0	        0x4c8d4e07	                       lea r9, [rsi + 7]	       661	deflate.c	FUNCTION_10
0x4001bc4	        0x488d463f	                   lea rax, [rsi + 0x3f]	       661	deflate.c	FUNCTION_10
0x4001bc8	          0x4989f2	                            mov r10, rsi	       655	deflate.c	
0x4001bcb	          0x4c89c9	                             mov rcx, r9	       661	deflate.c	FUNCTION_10
0x4001bce	        0x48c1e806	                              shr rax, 6	       661	deflate.c	FUNCTION_10
0x4001bd2	        0x48c1e903	                              shr rcx, 3	       661	deflate.c	FUNCTION_10
0x4001bd6	          0x4801c8	                            add rax, rcx	       661	deflate.c	FUNCTION_10
0x4001bd9	        0x4c8d0430	                     lea r8, [rax + rsi]	       661	deflate.c	FUNCTION_10
0x4001bdd	      0xe8dee4ffff	              call sym.deflateStateCheck	       664	deflate.c	FUNCTION_10
0x4001be2	            0x85c0	                           test eax, eax	       664	deflate.c	FUNCTION_10
0x4001be4	            0x752a	                           jne 0x4001c10	       664	deflate.c	FUNCTION_10
0x4001be6	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       668	deflate.c	FUNCTION_10	IF_1	CALL_1
0x4001bea	          0x8b5030	            mov edx, dword [rax + 0x30] 	       669	deflate.c	FUNCTION_10	IF_1
0x4001bed	          0x83fa01	                              cmp edx, 1	       669	deflate.c	FUNCTION_10	IF_1
0x4001bf0	            0x7456	                            je 0x4001c48	       669	deflate.c	FUNCTION_10	IF_1
0x4001bf2	          0x83fa02	                              cmp edx, 2	       669	deflate.c	FUNCTION_10	IF_1
0x4001bf5	            0x7469	                            je 0x4001c60	       669	deflate.c	FUNCTION_10	IF_1
0x4001bf7	          0x83fa01	                              cmp edx, 1	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001bfa	          0x4819d2	                            sbb rdx, rdx	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001bfd	          0x48f7d2	                                 not rdx	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c00	          0x83e206	                              and edx, 6	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c03	        0x8378540f	            cmp dword [rax + 0x54], 0xf 	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001c07	            0x740f	                            je 0x4001c18	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001c09	      0x4a8d440205	                 lea rax, [rdx + r8 + 5]	       704	deflate.c	FUNCTION_10	SWITCH_1
0x4001c0e	              0xc3	                                     ret	       704	deflate.c	FUNCTION_10	SWITCH_1
0x4001c0f	              0x90	                                     nop	       704	deflate.c	FUNCTION_10	SWITCH_1
0x4001c10	        0x498d400b	                     lea rax, [r8 + 0xb]	       665	deflate.c	FUNCTION_10
0x4001c14	              0xc3	                                     ret	       665	deflate.c	FUNCTION_10
0x4001c15	           0xf1f00	                         nop dword [rax]	       665	deflate.c	FUNCTION_10
0x4001c18	    0x83b888000000	            cmp dword [rax + 0x88], 0xf 	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001c1f	            0x75e8	                           jne 0x4001c09	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001c21	          0x4c89d0	                            mov rax, r10	       707	deflate.c	FUNCTION_10	IF_7
0x4001c24	          0x4c89d6	                            mov rsi, r10	       707	deflate.c	FUNCTION_10	IF_7
0x4001c27	        0x48c1e80c	                            shr rax, 0xc	       707	deflate.c	FUNCTION_10	IF_7
0x4001c2b	        0x48c1ee19	                           shr rsi, 0x19	       707	deflate.c	FUNCTION_10	IF_7
0x4001c2f	          0x4901c1	                             add r9, rax	       707	deflate.c	FUNCTION_10	IF_7
0x4001c32	          0x4c89d0	                            mov rax, r10	       707	deflate.c	FUNCTION_10	IF_7
0x4001c35	        0x48c1e80e	                            shr rax, 0xe	       707	deflate.c	FUNCTION_10	IF_7
0x4001c39	          0x4901c1	                             add r9, rax	       707	deflate.c	FUNCTION_10	IF_7
0x4001c3c	        0x498d0431	                     lea rax, [r9 + rsi]	       707	deflate.c	FUNCTION_10	IF_7
0x4001c40	          0x4801d0	                            add rax, rdx	       707	deflate.c	FUNCTION_10	IF_7
0x4001c43	              0xc3	                                     ret	       709	deflate.c	FUNCTION_10
0x4001c44	         0xf1f4000	                         nop dword [rax]	       709	deflate.c	FUNCTION_10
0x4001c48	    0x83b8ac000000	               cmp dword [rax + 0xac], 1	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001c4f	          0x4819d2	                            sbb rdx, rdx	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001c52	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001c56	        0x4883c20a	                            add rdx, 0xa	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001c5a	            0xeba7	                           jmp 0x4001c03	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001c5c	         0xf1f4000	                         nop dword [rax]	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001c60	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4001c64	          0x4885f6	                           test rsi, rsi	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4001c67	            0x7467	                            je 0x4001cd0	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4001c69	      0x48837e1800	               cmp qword [rsi + 0x18], 0	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4001c6e	            0x7470	                            je 0x4001ce0	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4001c70	          0x8b5620	            mov edx, dword [rsi + 0x20] 	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001c73	          0x83c202	                              add edx, 2	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001c76	        0x4883c212	                           add rdx, 0x12	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001c7a	        0x488b4e28	            mov rcx, qword [rsi + 0x28] 	       683	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c7e	          0x4885c9	                           test rcx, rcx	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c81	            0x7418	                            je 0x4001c9b	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c83	          0x4829d1	                            sub rcx, rdx	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c90	        0x4883c201	                              add rdx, 1	       686	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_3
0x4001c94	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c99	            0x75f5	                           jne 0x4001c90	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001c9b	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	       688	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4
0x4001c9f	          0x4885c9	                           test rcx, rcx	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001ca2	            0x7417	                            je 0x4001cbb	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001ca4	          0x4829d1	                            sub rcx, rdx	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001ca7	    0x660f1f840000	                    nop word [rax + rax]	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001cb0	        0x4883c201	                              add rdx, 1	       691	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001cb4	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001cb9	            0x75f5	                           jne 0x4001cb0	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001cbb	          0x8b7644	            mov esi, dword [rsi + 0x44] 	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001cbe	        0x488d4a02	                      lea rcx, [rdx + 2]	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001cc2	            0x85f6	                           test esi, esi	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001cc4	        0x480f45d1	                         cmovne rdx, rcx	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001cc8	      0xe936ffffff	                           jmp 0x4001c03	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001ccd	           0xf1f00	                         nop dword [rax]	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001cd0	      0xba12000000	                           mov edx, 0x12	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4001cd5	      0xe929ffffff	                           jmp 0x4001c03	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4001cda	    0x660f1f440000	                    nop word [rax + rax]	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4001ce0	      0xba12000000	                           mov edx, 0x12	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4001ce5	            0xeb93	                           jmp 0x4001c7a	       678	deflate.c	FUNCTION_10	SWITCH_1
