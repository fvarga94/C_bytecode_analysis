rl_funmap_names	DO,0:functions,0:ELSE,0:SWITCH,0:IF,1:FOR,1:CALL,3:WHILE,0	52
0x4000170	            0x4154	                                push r12	       242	funmap.c	FUNCTION_2
0x4000172	              0x55	                                push rbp	       242	funmap.c	FUNCTION_2
0x4000173	              0x53	                                push rbx	       242	funmap.c	FUNCTION_2
0x4000174	        0x4883ec10	                           sub rsp, 0x10	       242	funmap.c	FUNCTION_2
0x4000178	    0x8b0500000000	            mov eax, dword [0x0400017e] 	       227	funmap.c	FUNCTION_1	IF_1
0x400017e	            0x85c0	                           test eax, eax	       227	funmap.c	FUNCTION_1	IF_1
0x4000180	     0xf84a2000000	                            je 0x4000228	       227	funmap.c	FUNCTION_1	IF_1
0x4000186	    0x488b15000000	            mov rdx, qword [0x0400018d] 	       249	funmap.c	FUNCTION_2	FOR_1
0x400018d	        0x48833a00	                      cmp qword [rdx], 0	       249	funmap.c	FUNCTION_2	FOR_1
0x4000191	            0x7462	                            je 0x40001f5	       249	funmap.c	FUNCTION_2	FOR_1
0x4000193	      0xbd01000000	                              mov ebp, 1	       249	funmap.c	FUNCTION_2	FOR_1
0x4000198	            0x31db	                            xor ebx, ebx	       249	funmap.c	FUNCTION_2	FOR_1
0x400019a	          0x4531e4	                          xor r12d, r12d	       249	funmap.c	FUNCTION_2	FOR_1
0x400019d	            0x31c0	                            xor eax, eax	       249	funmap.c	FUNCTION_2	FOR_1
0x400019f	            0xeb33	                           jmp 0x40001d4	       249	funmap.c	FUNCTION_2	FOR_1
0x40001a1	     0xf1f80000000	                         nop dword [rax]	       249	funmap.c	FUNCTION_2	FOR_1
0x40001a8	        0x488b141a	              mov rdx, qword [rdx + rbx]	       257	funmap.c	FUNCTION_2	FOR_1
0x40001ac	        0x488d4d01	                      lea rcx, [rbp + 1]	       257	funmap.c	FUNCTION_2	FOR_1
0x40001b0	          0x488b12	                    mov rdx, qword [rdx]	       257	funmap.c	FUNCTION_2	FOR_1
0x40001b3	        0x48891418	              mov qword [rax + rbx], rdx	       257	funmap.c	FUNCTION_2	FOR_1
0x40001b7	    0x48c704e80000	              mov qword [rax + rbp*8], 0	       258	funmap.c	FUNCTION_2	FOR_1
0x40001bf	        0x4883c308	                              add rbx, 8	       249	funmap.c	FUNCTION_2	FOR_1
0x40001c3	    0x488b15000000	            mov rdx, qword [0x040001ca] 	       249	funmap.c	FUNCTION_2	FOR_1
0x40001ca	      0x48833c1a00	                cmp qword [rdx + rbx], 0	       249	funmap.c	FUNCTION_2	FOR_1
0x40001cf	            0x7428	                            je 0x40001f9	       249	funmap.c	FUNCTION_2	FOR_1
0x40001d1	          0x4889cd	                            mov rbp, rcx	       249	funmap.c	FUNCTION_2	FOR_1
0x40001d4	          0x4139ec	                           cmp r12d, ebp	       251	funmap.c	FUNCTION_2	FOR_1	IF_1
0x40001d7	            0x7fcf	                            jg 0x40001a8	       251	funmap.c	FUNCTION_2	FOR_1	IF_1
0x40001d9	        0x4183c414	                          add r12d, 0x14	       253	funmap.c	FUNCTION_2	FOR_1	IF_1
0x40001dd	          0x4889c7	                            mov rdi, rax	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x40001e0	          0x4963f4	                        movsxd rsi, r12d	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x40001e3	        0x48c1e603	                              shl rsi, 3	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x40001e7	      0xe800000000	                          call 0x40001ec	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x40001ec	    0x488b15000000	            mov rdx, qword [0x040001f3] 	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x40001f3	            0xebb3	                           jmp 0x40001a8	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x40001f5	            0x31ed	                            xor ebp, ebp	       249	funmap.c	FUNCTION_2	FOR_1
0x40001f7	            0x31c0	                            xor eax, eax	       249	funmap.c	FUNCTION_2	FOR_1
0x40001f9	          0x4889ee	                            mov rsi, rbp	       261	funmap.c	FUNCTION_2	CALL_3
0x40001fc	          0x4889c7	                            mov rdi, rax	       261	funmap.c	FUNCTION_2	CALL_3
0x40001ff	      0xb900000000	                              mov ecx, 0	       261	funmap.c	FUNCTION_2	CALL_3
0x4000204	      0xba08000000	                              mov edx, 8	       261	funmap.c	FUNCTION_2	CALL_3
0x4000209	      0x4889442408	                mov qword [rsp + 8], rax	       261	funmap.c	FUNCTION_2	CALL_3
0x400020e	      0xe800000000	                          call 0x4000213	       261	funmap.c	FUNCTION_2	CALL_3
0x4000213	      0x488b442408	                mov rax, qword [rsp + 8]	       263	funmap.c	FUNCTION_2
0x4000218	        0x4883c410	                           add rsp, 0x10	       263	funmap.c	FUNCTION_2
0x400021c	              0x5b	                                 pop rbx	       263	funmap.c	FUNCTION_2
0x400021d	              0x5d	                                 pop rbp	       263	funmap.c	FUNCTION_2
0x400021e	            0x415c	                                 pop r12	       263	funmap.c	FUNCTION_2
0x4000220	              0xc3	                                     ret	       263	funmap.c	FUNCTION_2
0x4000221	     0xf1f80000000	                         nop dword [rax]	       263	funmap.c	FUNCTION_2
0x4000228	      0xe8c3feffff	    call sym.rl_initialize_funmap.part.0	       263	funmap.c	FUNCTION_2
0x400022d	      0xe954ffffff	                           jmp 0x4000186	       263	funmap.c	FUNCTION_2
