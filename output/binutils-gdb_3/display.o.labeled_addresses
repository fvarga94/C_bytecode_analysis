rl_reset_line_state	ELSE,0:CALL,1:SWITCH,0:IF,0:functions,0:FOR,0:WHILE,0:DO,0	23
0x4001190	    0x488b05000000	            mov rax, qword [0x04001197] 	      1808	display.c	FUNCTION_3	IF_1
0x4001197	          0x488b10	                    mov rdx, qword [rax]	      1808	display.c	FUNCTION_3	IF_1
0x400119a	          0x4885d2	                           test rdx, rdx	      1808	display.c	FUNCTION_3	IF_1
0x400119d	            0x7403	                            je 0x40011a2	      1808	display.c	FUNCTION_3	IF_1
0x400119f	          0xc60200	                       mov byte [rdx], 0	      1809	display.c	FUNCTION_3	IF_1
0x40011a2	        0x488b4008	                mov rax, qword [rax + 8]	      1813	display.c	FUNCTION_3	IF_2
0x40011a6	    0xc70500000000	               mov dword [0x040011b0], 0	      1811	display.c	FUNCTION_3
0x40011b0	    0xc70500000000	               mov dword [0x040011ba], 0	      1811	display.c	FUNCTION_3
0x40011ba	    0xc70500000000	               mov dword [0x040011c4], 0	      1812	display.c	FUNCTION_3
0x40011c4	    0xc70500000000	               mov dword [0x040011ce], 0	      1812	display.c	FUNCTION_3
0x40011ce	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x40011d1	            0x740d	                            je 0x40011e0	      1813	display.c	FUNCTION_3	IF_2
0x40011d3	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x40011da	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x40011e0	    0x488b05000000	            mov rax, qword [0x040011e7] 	      2229	display.c	FUNCTION_10
0x40011e7	      0xba00000000	                              mov edx, 0	      2229	display.c	FUNCTION_10
0x40011ec	    0xc70500000000	               mov dword [0x040011f6], 0	      1815	display.c	FUNCTION_3
0x40011f6	    0xc70500000000	               mov dword [0x04001200], 1	      2230	display.c	FUNCTION_10
0x4001200	          0x4885c0	                           test rax, rax	      2229	display.c	FUNCTION_10
0x4001203	        0x480f44c2	                          cmove rax, rdx	      2229	display.c	FUNCTION_10
0x4001207	    0x488905000000	            mov qword [0x0400120e], rax 	      2229	display.c	FUNCTION_10
0x400120e	            0x31c0	                            xor eax, eax	      2232	display.c	FUNCTION_10
0x4001210	              0xc3	                                     ret	      2232	display.c	FUNCTION_10
_rl_clean_up_for_exit	ELSE,0:CALL,3:SWITCH,0:IF,1:functions,0:FOR,0:WHILE,0:DO,0	15
0x4004970	    0x8b0500000000	            mov eax, dword [0x04004976] 	      2567	display.c	FUNCTION_22	IF_1
0x4004976	            0x85c0	                           test eax, eax	      2567	display.c	FUNCTION_22	IF_1
0x4004978	            0x7506	                           jne 0x4004980	      2567	display.c	FUNCTION_22	IF_1
0x400497a	            0xf3c3	                                     ret	      2567	display.c	FUNCTION_22	IF_1
0x400497c	         0xf1f4000	                         nop dword [rax]	      2567	display.c	FUNCTION_22	IF_1
0x4004980	        0x4883ec08	                              sub rsp, 8	      2566	display.c	FUNCTION_22
0x4004984	    0x8b3d00000000	            mov edi, dword [0x0400498a] 	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x400498a	      0xe800000000	                          call 0x400498f	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x400498f	    0x488b3d000000	            mov rdi, qword [0x04004996] 	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x4004996	    0xc70500000000	               mov dword [0x040049a0], 0	      2570	display.c	FUNCTION_22	IF_1
0x40049a0	      0xe800000000	                          call 0x40049a5	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x40049a5	            0x31f6	                            xor esi, esi	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x40049a7	      0xbf01000000	                              mov edi, 1	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x40049ac	        0x4883c408	                              add rsp, 8	      2574	display.c	FUNCTION_22
0x40049b0	      0xe900000000	                           jmp 0x40049b5	      2572	display.c	FUNCTION_22	IF_1	CALL_3
_rl_move_vert	ELSE,1:CALL,7:SWITCH,0:IF,3:functions,0:FOR,2:WHILE,0:DO,0	50
0x4000f10	    0x8b0500000000	            mov eax, dword [0x04000f16] 	      2047	display.c	FUNCTION_6	IF_1
0x4000f16	            0x39f8	                            cmp eax, edi	      2047	display.c	FUNCTION_6	IF_1
0x4000f18	            0x7461	                            je 0x4000f7b	      2047	display.c	FUNCTION_6	IF_1
0x4000f1a	    0x3b3d00000000	            cmp edi, dword [0x04000f20] 	      2047	display.c	FUNCTION_6	IF_1
0x4000f20	            0x7f59	                            jg 0x4000f7b	      2047	display.c	FUNCTION_6	IF_1
0x4000f22	            0x4154	                                push r12	      2044	display.c	FUNCTION_6
0x4000f24	              0x55	                                push rbp	      2044	display.c	FUNCTION_6
0x4000f25	            0x89fd	                            mov ebp, edi	      2050	display.c	FUNCTION_6	IF_2
0x4000f27	            0x29c5	                            sub ebp, eax	      2050	display.c	FUNCTION_6	IF_2
0x4000f29	              0x53	                                push rbx	      2044	display.c	FUNCTION_6
0x4000f2a	          0x4189fc	                           mov r12d, edi	      2044	display.c	FUNCTION_6
0x4000f2d	            0x85ed	                           test ebp, ebp	      2050	display.c	FUNCTION_6	IF_2
0x4000f2f	            0x7e4f	                           jle 0x4000f80	      2050	display.c	FUNCTION_6	IF_2
0x4000f31	            0x31db	                            xor ebx, ebx	      2050	display.c	FUNCTION_6	IF_2
0x4000f33	       0xf1f440000	                   nop dword [rax + rax]	      2050	display.c	FUNCTION_6	IF_2
0x4000f38	    0x488b35000000	            mov rsi, qword [0x04000f3f] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4000f3f	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4000f44	          0x83c301	                              add ebx, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4000f47	      0xe800000000	                          call 0x4000f4c	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4000f4c	            0x39dd	                            cmp ebp, ebx	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4000f4e	            0x75e8	                           jne 0x4000f38	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4000f50	    0x488b3d000000	            mov rdi, qword [0x04000f57] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000f57	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000f5c	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000f61	      0xe800000000	                          call 0x4000f66	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4000f66	    0xc70500000000	               mov dword [0x04000f70], 0	      2059	display.c	FUNCTION_6	IF_2
0x4000f70	              0x5b	                                 pop rbx	      2078	display.c	FUNCTION_6
0x4000f71	    0x448925000000	           mov dword [0x04000f78], r12d 	      2077	display.c	FUNCTION_6
0x4000f78	              0x5d	                                 pop rbp	      2078	display.c	FUNCTION_6
0x4000f79	            0x415c	                                 pop r12	      2078	display.c	FUNCTION_6
0x4000f7b	            0xf3c3	                                     ret	      2078	display.c	FUNCTION_6
0x4000f7d	           0xf1f00	                         nop dword [rax]	      2078	display.c	FUNCTION_6
0x4000f80	    0x488b3d000000	            mov rdi, qword [0x04000f87] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000f87	          0x4885ff	                           test rdi, rdi	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000f8a	            0x74e4	                            je 0x4000f70	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000f8c	          0x803f00	                       cmp byte [rdi], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000f8f	            0x74df	                            je 0x4000f70	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4000f91	            0xf7dd	                                 neg ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000f93	            0x74db	                            je 0x4000f70	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000f95	            0x31db	                            xor ebx, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000f97	            0xeb0e	                           jmp 0x4000fa7	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000f99	     0xf1f80000000	                         nop dword [rax]	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fa0	    0x488b3d000000	            mov rdi, qword [0x04000fa7] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fa7	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fac	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fb1	          0x83c301	                              add ebx, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fb4	      0xe800000000	                          call 0x4000fb9	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fb9	            0x39dd	                            cmp ebp, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fbb	            0x75e3	                           jne 0x4000fa0	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4000fbd	            0xebb1	                           jmp 0x4000f70	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
rl_forced_update_display	ELSE,0:CALL,1:SWITCH,0:IF,1:functions,0:FOR,0:WHILE,1:DO,0	31
0x4000b40	        0x4883ec08	                              sub rsp, 8	      1881	display.c	FUNCTION_5
0x4000b44	    0x488b15000000	            mov rdx, qword [0x04000b4b] 	      1884	display.c	FUNCTION_5	IF_1
0x4000b4b	          0x488b02	                    mov rax, qword [rdx]	      1884	display.c	FUNCTION_5	IF_1
0x4000b4e	          0x4885c0	                           test rax, rax	      1884	display.c	FUNCTION_5	IF_1
0x4000b51	            0x7425	                            je 0x4000b78	      1884	display.c	FUNCTION_5	IF_1
0x4000b53	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b56	            0x741d	                            je 0x4000b75	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b58	     0xf1f84000000	                   nop dword [rax + rax]	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b60	        0x4883c001	                              add rax, 1	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b64	        0xc640ff00	                   mov byte [rax - 1], 0	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b68	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b6b	            0x75f3	                           jne 0x4000b60	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4000b6d	          0x488b02	                    mov rax, qword [rdx]	      1808	display.c	FUNCTION_3	IF_1
0x4000b70	          0x4885c0	                           test rax, rax	      1808	display.c	FUNCTION_3	IF_1
0x4000b73	            0x7403	                            je 0x4000b78	      1808	display.c	FUNCTION_3	IF_1
0x4000b75	          0xc60000	                       mov byte [rax], 0	      1809	display.c	FUNCTION_3	IF_1
0x4000b78	        0x488b4208	                mov rax, qword [rdx + 8]	      1813	display.c	FUNCTION_3	IF_2
0x4000b7c	    0xc70500000000	               mov dword [0x04000b86], 0	      1811	display.c	FUNCTION_3
0x4000b86	    0xc70500000000	               mov dword [0x04000b90], 0	      1811	display.c	FUNCTION_3
0x4000b90	    0xc70500000000	               mov dword [0x04000b9a], 0	      1812	display.c	FUNCTION_3
0x4000b9a	    0xc70500000000	               mov dword [0x04000ba4], 0	      1812	display.c	FUNCTION_3
0x4000ba4	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x4000ba7	            0x740d	                            je 0x4000bb6	      1813	display.c	FUNCTION_3	IF_2
0x4000ba9	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x4000bb0	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x4000bb6	    0xc70500000000	               mov dword [0x04000bc0], 0	      1815	display.c	FUNCTION_3
0x4000bc0	    0x830500000000	               add dword [0x04000bc7], 1	      1891	display.c	FUNCTION_5
0x4000bc7	    0xff1500000000	                 call qword [0x04000bcd]	      1892	display.c	FUNCTION_5
0x4000bcd	            0x31c0	                            xor eax, eax	      1894	display.c	FUNCTION_5
0x4000bcf	        0x4883c408	                              add rsp, 8	      1894	display.c	FUNCTION_5
0x4000bd3	              0xc3	                                     ret	      1894	display.c	FUNCTION_5
rl_redisplay	ELSE,29:CALL,54:SWITCH,0:IF,72:functions,0:FOR,6:WHILE,5:DO,0	1515
0x4002cf0	            0x4157	                                push r15	       499	display.c	FUNCTION_2
0x4002cf2	            0x4156	                                push r14	       499	display.c	FUNCTION_2
0x4002cf4	            0x4155	                                push r13	       499	display.c	FUNCTION_2
0x4002cf6	            0x4154	                                push r12	       499	display.c	FUNCTION_2
0x4002cf8	              0x55	                                push rbp	       499	display.c	FUNCTION_2
0x4002cf9	              0x53	                                push rbx	       499	display.c	FUNCTION_2
0x4002cfa	        0x4883ec68	                           sub rsp, 0x68	       499	display.c	FUNCTION_2
0x4002cfe	    0x448b25000000	           mov r12d, dword [0x04002d05] 	       513	display.c	FUNCTION_2	IF_1
0x4002d05	    0x64488b042528	                mov rax, qword fs:[0x28]	       499	display.c	FUNCTION_2
0x4002d0e	      0x4889442458	             mov qword [rsp + 0x58], rax	       499	display.c	FUNCTION_2
0x4002d13	            0x31c0	                            xor eax, eax	       499	display.c	FUNCTION_2
0x4002d15	          0x4585e4	                         test r12d, r12d	       513	display.c	FUNCTION_2	IF_1
0x4002d18	            0x7526	                           jne 0x4002d40	       513	display.c	FUNCTION_2	IF_1
0x4002d1a	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1254	display.c	FUNCTION_2
0x4002d1f	    0x644833042528	                xor rax, qword fs:[0x28]	      1254	display.c	FUNCTION_2
0x4002d28	     0xf8565190000	                           jne 0x4004693	      1254	display.c	FUNCTION_2
0x4002d2e	        0x4883c468	                           add rsp, 0x68	      1254	display.c	FUNCTION_2
0x4002d32	              0x5b	                                 pop rbx	      1254	display.c	FUNCTION_2
0x4002d33	              0x5d	                                 pop rbp	      1254	display.c	FUNCTION_2
0x4002d34	            0x415c	                                 pop r12	      1254	display.c	FUNCTION_2
0x4002d36	            0x415d	                                 pop r13	      1254	display.c	FUNCTION_2
0x4002d38	            0x415e	                                 pop r14	      1254	display.c	FUNCTION_2
0x4002d3a	            0x415f	                                 pop r15	      1254	display.c	FUNCTION_2
0x4002d3c	              0xc3	                                     ret	      1254	display.c	FUNCTION_2
0x4002d3d	           0xf1f00	                         nop dword [rax]	      1254	display.c	FUNCTION_2
0x4002d40	      0xe800000000	                          call 0x4002d45	       518	display.c	FUNCTION_2	CALL_1
0x4002d45	    0x810d00000000	         or dword [0x04002d4f], 0x800000	       519	display.c	FUNCTION_2	CALL_2
0x4002d4f	    0x48833d000000	               cmp qword [0x04002d57], 0	       521	display.c	FUNCTION_2	IF_2
0x4002d57	     0xf8430160000	                            je 0x400438d	       521	display.c	FUNCTION_2	IF_2
0x4002d5d	    0x8b2d00000000	            mov ebp, dword [0x04002d63] 	       524	display.c	FUNCTION_2	IF_3
0x4002d63	            0x85ed	                           test ebp, ebp	       524	display.c	FUNCTION_2	IF_3
0x4002d65	     0xf84fb100000	                            je 0x4003e66	       524	display.c	FUNCTION_2	IF_3
0x4002d6b	    0x8b0500000000	            mov eax, dword [0x04002d71] 	       533	display.c	FUNCTION_2
0x4002d71	    0x2b0500000000	             sub eax, dword [0x04002d77]	       533	display.c	FUNCTION_2
0x4002d77	    0x8b1d00000000	            mov ebx, dword [0x04002d7d] 	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4002d7d	    0xc70500000000	     mov dword [0x04002d87], 0xffffffff 	       531	display.c	FUNCTION_2
0x4002d87	    0xc70500000000	               mov dword [0x04002d91], 0	       540	display.c	FUNCTION_2
0x4002d91	    0x890500000000	            mov dword [0x04002d97], eax 	       533	display.c	FUNCTION_2
0x4002d97	    0x488b05000000	            mov rax, qword [0x04002d9e] 	       535	display.c	FUNCTION_2
0x4002d9e	            0x85db	                           test ebx, ebx	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4002da0	          0x488b00	                    mov rax, qword [rax]	       535	display.c	FUNCTION_2
0x4002da3	      0x4889442408	                mov qword [rsp + 8], rax	       535	display.c	FUNCTION_2
0x4002da8	     0xf856c100000	                           jne 0x4003e1a	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4002dae	      0x488b542408	                mov rdx, qword [rsp + 8]	       535	display.c	FUNCTION_2
0x4002db3	          0x4531e4	                          xor r12d, r12d	       535	display.c	FUNCTION_2
0x4002db6	            0x31ed	                            xor ebp, ebp	       536	display.c	FUNCTION_2
0x4002db8	    0x488b05000000	            mov rax, qword [0x04002dbf] 	       551	display.c	FUNCTION_2	IF_5
0x4002dbf	           0xfb632	                   movzx esi, byte [rdx]	       551	display.c	FUNCTION_2	IF_5
0x4002dc2	          0x488b00	                    mov rax, qword [rax]	       551	display.c	FUNCTION_2	IF_5
0x4002dc5	          0x403830	                     cmp byte [rax], sil	       551	display.c	FUNCTION_2	IF_5
0x4002dc8	            0x740a	                            je 0x4002dd4	       551	display.c	FUNCTION_2	IF_5
0x4002dca	    0xc70500000000	               mov dword [0x04002dd4], 0	       552	display.c	FUNCTION_2	IF_5
0x4002dd4	    0x4c8b2d000000	            mov r13, qword [0x04002ddb] 	       558	display.c	FUNCTION_2	IF_6
0x4002ddb	    0x4c3b2d000000	            cmp r13, qword [0x04002de2] 	       558	display.c	FUNCTION_2	IF_6
0x4002de2	            0x740e	                            je 0x4002df2	       558	display.c	FUNCTION_2	IF_6
0x4002de4	    0x48833d000000	               cmp qword [0x04002dec], 0	       558	display.c	FUNCTION_2	IF_6
0x4002dec	     0xf84d3150000	                            je 0x40043c5	       558	display.c	FUNCTION_2	IF_6
0x4002df2	    0x488b1d000000	            mov rbx, qword [0x04002df9] 	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002df9	          0x4885db	                           test rbx, rbx	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002dfc	            0x7410	                            je 0x4002e0e	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002dfe	    0x448b1d000000	           mov r11d, dword [0x04002e05] 	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002e05	          0x4585db	                         test r11d, r11d	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002e08	     0xf85dc0e0000	                           jne 0x4003cea	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4002e0e	    0x8b1d00000000	            mov ebx, dword [0x04002e14] 	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002e14	          0x4863c5	                         movsxd rax, ebp	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002e17	        0x48890424	                    mov qword [rsp], rax	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002e1b	            0x85db	                           test ebx, ebx	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002e1d	            0x7e34	                           jle 0x4002e53	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4002e1f	        0x8d441d00	                    lea eax, [rbp + rbx]	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4002e23	          0x8d5002	                      lea edx, [rax + 2]	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4002e26	    0x3b1500000000	            cmp edx, dword [0x04002e2c] 	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002e2c	     0xf8d25110000	                           jge 0x4003f57	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002e32	            0x89c5	                            mov ebp, eax	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4002e34	      0x488b442408	                mov rax, qword [rsp + 8]	       126	string3.h	FUNCTION_33	CALL_3
0x4002e39	    0x488b35000000	            mov rsi, qword [0x04002e40] 	       126	string3.h	FUNCTION_33	CALL_3
0x4002e40	          0x4863d3	                         movsxd rdx, ebx	       126	string3.h	FUNCTION_33	CALL_3
0x4002e43	        0x4a8d3c20	                    lea rdi, [rax + r12]	       126	string3.h	FUNCTION_33	CALL_3
0x4002e47	          0x4c63e5	                         movsxd r12, ebp	       126	string3.h	FUNCTION_33	CALL_3
0x4002e4a	      0xe800000000	                          call 0x4002e4f	       126	string3.h	FUNCTION_33	CALL_3
0x4002e4f	        0x4c892424	                    mov qword [rsp], r12	       126	string3.h	FUNCTION_33	CALL_3
0x4002e53	      0x488b442408	                mov rax, qword [rsp + 8]	       575	display.c	FUNCTION_2	IF_6
0x4002e58	      0x42c6042000	                 mov byte [rax + r12], 0	       575	display.c	FUNCTION_2	IF_6
0x4002e5d	    0x2b1d00000000	             sub ebx, dword [0x04002e63]	       576	display.c	FUNCTION_2	IF_6
0x4002e63	    0x891d00000000	            mov dword [0x04002e69], ebx 	       576	display.c	FUNCTION_2	IF_6
0x4002e69	    0x488b05000000	            mov rax, qword [0x04002e70] 	       660	display.c	FUNCTION_2
0x4002e70	    0x8b1d00000000	            mov ebx, dword [0x04002e76] 	       661	display.c	FUNCTION_2
0x4002e76	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_28	CALL_6
0x4002e78	          0x4531ed	                          xor r13d, r13d	       678	display.c	FUNCTION_2	WHILE_1
0x4002e7b	          0x4531e4	                          xor r12d, r12d	       665	display.c	FUNCTION_2
0x4002e7e	    0x41be01000000	                             mov r14d, 1	       678	display.c	FUNCTION_2	WHILE_1
0x4002e84	        0x488b5008	                mov rdx, qword [rax + 8]	       660	display.c	FUNCTION_2
0x4002e88	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        90	string3.h	FUNCTION_28	CALL_6
0x4002e8c	    0xc70200000000	                      mov dword [rdx], 0	       660	display.c	FUNCTION_2
0x4002e92	        0x48635020	         movsxd rdx, dword [rax + 0x20] 	        90	string3.h	FUNCTION_28	CALL_6
0x4002e96	     0x31d00000000	             add ebx, dword [0x04002e9c]	       661	display.c	FUNCTION_2
0x4002e9c	        0x48c1e202	                              shl rdx, 2	        90	string3.h	FUNCTION_28	CALL_6
0x4002ea0	      0xe800000000	                          call 0x4002ea5	        90	string3.h	FUNCTION_28	CALL_6
0x4002ea5	    0x8b0d00000000	            mov ecx, dword [0x04002eab] 	       674	display.c	FUNCTION_2
0x4002eab	            0x89d8	                            mov eax, ebx	       674	display.c	FUNCTION_2
0x4002ead	        0x896c2410	             mov dword [rsp + 0x10], ebp	       674	display.c	FUNCTION_2
0x4002eb1	              0x99	                                     cdq	       674	display.c	FUNCTION_2
0x4002eb2	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	       674	display.c	FUNCTION_2
0x4002eb7	            0xf7f9	                                idiv ecx	       674	display.c	FUNCTION_2
0x4002eb9	            0x39cb	                            cmp ebx, ecx	       678	display.c	FUNCTION_2	WHILE_1
0x4002ebb	        0x89442418	             mov dword [rsp + 0x18], eax	       674	display.c	FUNCTION_2
0x4002ebf	     0xf8c23010000	                            jl 0x4002fe8	       678	display.c	FUNCTION_2	WHILE_1
0x4002ec5	           0xf1f00	                         nop dword [rax]	       678	display.c	FUNCTION_2	WHILE_1
0x4002ec8	      0xe800000000	                          call 0x4002ecd	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ecd	        0x4883f801	                              cmp rax, 1	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ed1	     0xf86e9030000	                           jbe 0x40032c0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ed7	    0x448b0d000000	            mov r9d, dword [0x04002ede] 	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ede	          0x4585c9	                           test r9d, r9d	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ee1	     0xf85d9030000	                           jne 0x40032c0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ee7	    0x448b05000000	            mov r8d, dword [0x04002eee] 	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002eee	          0x4585c0	                           test r8d, r8d	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ef1	     0xf8ec9030000	                           jle 0x40032c0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002ef7	    0x448b3d000000	           mov r15d, dword [0x04002efe] 	       692	display.c	FUNCTION_2	WHILE_1	IF_14
0x4002efe	          0x4489e5	                           mov ebp, r12d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f01	          0x4539fc	                          cmp r12d, r15d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f04	            0x7c1c	                            jl 0x4002f22	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f06	      0xe94e150000	                           jmp 0x4004459	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f0b	       0xf1f440000	                   nop dword [rax + rax]	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f10	     0xf84ea030000	                            je 0x4003300	       701	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4002f16	          0x83c501	                              add ebp, 1	       703	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f19	          0x4139ef	                           cmp r15d, ebp	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f1c	     0xf84de030000	                            je 0x4003300	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f22	    0x488b3d000000	            mov rdi, qword [0x04002f29] 	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f29	      0xb901000000	                              mov ecx, 1	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f2e	            0x89ea	                            mov edx, ebp	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f30	          0x4489e6	                           mov esi, r12d	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f33	      0xe818d3ffff	                  call sym._rl_col_width	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4002f38	    0x3b0500000000	            cmp eax, dword [0x04002f3e] 	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4002f3e	            0x7ed0	                           jle 0x4002f10	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4002f40	    0x488b3d000000	            mov rdi, qword [0x04002f47] 	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002f47	            0x89ee	                            mov esi, ebp	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002f49	            0x31d2	                            xor edx, edx	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002f4b	          0x4589e7	                          mov r15d, r12d	       699	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4002f4e	      0xe800000000	                          call 0x4002f53	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002f53	            0x89c5	                            mov ebp, eax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002f55	          0x4189c4	                           mov r12d, eax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4002f58	    0x48833d000000	               cmp qword [0x04002f60], 0	       716	display.c	FUNCTION_2	WHILE_1
0x4002f60	     0xf8472030000	                            je 0x40032d8	       716	display.c	FUNCTION_2	WHILE_1
0x4002f66	          0x4585ed	                         test r13d, r13d	       716	display.c	FUNCTION_2	WHILE_1
0x4002f69	     0xf8481030000	                            je 0x40032f0	       716	display.c	FUNCTION_2	WHILE_1
0x4002f6f	            0x31c0	                            xor eax, eax	       716	display.c	FUNCTION_2	WHILE_1
0x4002f71	    0x488b15000000	            mov rdx, qword [0x04002f78] 	       718	display.c	FUNCTION_2	WHILE_1
0x4002f78	      0x448d440500	                    lea r8d, [rbp + rax]	       718	display.c	FUNCTION_2	WHILE_1
0x4002f7d	          0x4963ce	                        movsxd rcx, r14d	       718	display.c	FUNCTION_2	WHILE_1
0x4002f80	        0x488b5208	                mov rdx, qword [rdx + 8]	       718	display.c	FUNCTION_2	WHILE_1
0x4002f84	        0x4489048a	            mov dword [rdx + rcx*4], r8d	       718	display.c	FUNCTION_2	WHILE_1
0x4002f88	      0xe800000000	                          call 0x4002f8d	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002f8d	        0x4883f801	                              cmp rax, 1	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002f91	     0xf8619030000	                           jbe 0x40032b0	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002f97	    0x8b3d00000000	            mov edi, dword [0x04002f9d] 	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002f9d	            0x85ff	                           test edi, edi	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002f9f	     0xf850b030000	                           jne 0x40032b0	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fa5	    0x8b3500000000	            mov esi, dword [0x04002fab] 	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fab	            0x85f6	                           test esi, esi	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fad	     0xf8efd020000	                           jle 0x40032b0	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fb3	    0x488b3d000000	            mov rdi, qword [0x04002fba] 	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fba	      0xb901000000	                              mov ecx, 1	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fbf	          0x4489e2	                           mov edx, r12d	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fc2	          0x4489fe	                           mov esi, r15d	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fc5	      0xe886d2ffff	                  call sym._rl_col_width	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fca	    0x8b0d00000000	            mov ecx, dword [0x04002fd0] 	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fd0	            0x29c3	                            sub ebx, eax	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fd2	    0x660f1f440000	                    nop word [rax + rax]	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fd8	        0x4183c501	                             add r13d, 1	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fdc	        0x4183c601	                             add r14d, 1	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4002fe0	            0x39cb	                            cmp ebx, ecx	       678	display.c	FUNCTION_2	WHILE_1
0x4002fe2	     0xf8de0feffff	                           jge 0x4002ec8	       678	display.c	FUNCTION_2	WHILE_1
0x4002fe8	        0x8b6c2410	            mov ebp, dword [rsp + 0x10] 	       678	display.c	FUNCTION_2	WHILE_1
0x4002fec	    0x44892d000000	           mov dword [0x04002ff3], r13d 	       727	display.c	FUNCTION_2	ELSE_5
0x4002ff3	          0x4589ef	                          mov r15d, r13d	       727	display.c	FUNCTION_2	ELSE_5
0x4002ff6	      0xe800000000	                          call 0x4002ffb	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4002ffb	        0x4883f801	                              cmp rax, 1	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4002fff	    0x48c744241001	               mov qword [rsp + 0x10], 1	       744	display.c	FUNCTION_2	ELSE_6
0x4003008	            0x760e	                           jbe 0x4003018	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x400300a	    0x8b0d00000000	            mov ecx, dword [0x04003010] 	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003010	            0x85c9	                           test ecx, ecx	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003012	     0xf84e90c0000	                            je 0x4003d01	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003018	    0xc74424200000	               mov dword [rsp + 0x20], 0	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003020	    0xc74424340000	               mov dword [rsp + 0x34], 0	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003028	          0x4531f6	                          xor r14d, r14d	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400302b	    0x443b35000000	           cmp r14d, dword [0x04003032] 	       745	display.c	FUNCTION_2	WHILE_3
0x4003032	     0xf8d12010000	                           jge 0x400314a	       745	display.c	FUNCTION_2	WHILE_3
0x4003038	          0x4963c6	                        movsxd rax, r14d	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x400303b	          0x4889c7	                            mov rdi, rax	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x400303e	      0x4889442418	             mov qword [rsp + 0x18], rax	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4003043	    0x488b05000000	            mov rax, qword [0x0400304a] 	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x400304a	      0x440fb62c38	            movzx r13d, byte [rax + rdi]	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x400304f	      0xe800000000	                          call 0x4003054	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003054	        0x4883f801	                              cmp rax, 1	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003058	          0x4589ec	                          mov r12d, r13d	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x400305b	            0x7644	                           jbe 0x40030a1	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x400305d	    0x8b1500000000	            mov edx, dword [0x04003063] 	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003063	            0x85d2	                           test edx, edx	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003065	            0x753a	                           jne 0x40030a1	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003067	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x400306c	        0x4883c002	                              add rax, 2	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4003070	        0x4883f801	                              cmp rax, 1	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4003074	     0xf8676090000	                           jbe 0x40039f0	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x400307a	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4003080	     0xf84c4000000	                            je 0x400314a	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4003086	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x400308a	            0x31c0	                            xor eax, eax	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x400308c	      0xe800000000	                          call 0x4003091	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4003091	            0x89c7	                            mov edi, eax	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4003093	            0x85c0	                           test eax, eax	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4003095	      0xb801000000	                              mov eax, 1	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x400309a	           0xf49c7	                         cmovns eax, edi	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x400309d	        0x89442430	             mov dword [rsp + 0x30], eax	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x40030a1	    0x8b3500000000	            mov esi, dword [0x040030a7] 	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x40030a7	          0x8d5508	                      lea edx, [rbp + 8]	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x40030aa	            0x39f2	                            cmp edx, esi	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x40030ac	     0xf8d96030000	                           jge 0x4003448	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x40030b2	    0x443b35000000	           cmp r14d, dword [0x040030b9] 	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x40030b9	     0xf84f7030000	                            je 0x40034b6	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x40030bf	        0x418d4580	                   lea eax, [r13 - 0x80]	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x40030c3	          0x83f87f	                           cmp eax, 0x7f	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x40030c6	     0xf8744020000	                            ja 0x4003310	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x40030cc	    0x8b0500000000	            mov eax, dword [0x040030d2] 	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x40030d2	            0x85c0	                           test eax, eax	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x40030d4	     0xf8536020000	                           jne 0x4003310	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x40030da	        0x488b3c24	                    mov rdi, qword [rsp]	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030de	      0x48037c2408	                add rdi, qword [rsp + 8]	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030e3	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030ea	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030ec	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030ef	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030f4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030f9	      0xe800000000	                          call 0x40030fe	        33	stdio2.h	FUNCTION_37	CALL_1
0x40030fe	    0x8b1500000000	            mov edx, dword [0x04003104] 	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003104	          0x8d4304	                      lea eax, [rbx + 4]	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003107	            0x39d0	                            cmp eax, edx	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003109	     0xf8dd9090000	                           jge 0x4003ae8	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400310f	          0x83c504	                              add ebp, 4	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003112	            0x89c3	                            mov ebx, eax	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003114	          0x4863c5	                         movsxd rax, ebp	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003117	        0x48890424	                    mov qword [rsp], rax	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x400311b	       0xf1f440000	                   nop dword [rax + rax]	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003120	      0xe800000000	                          call 0x4003125	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003125	        0x4883f801	                              cmp rax, 1	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003129	            0x760e	                           jbe 0x4003139	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x400312b	    0x8b0500000000	            mov eax, dword [0x04003131] 	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003131	            0x85c0	                           test eax, eax	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003133	     0xf8497030000	                            je 0x40034d0	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003139	        0x4183c601	                             add r14d, 1	       905	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_17
0x400313d	    0x443b35000000	           cmp r14d, dword [0x04003144] 	       745	display.c	FUNCTION_2	WHILE_3
0x4003144	     0xf8ceefeffff	                            jl 0x4003038	       745	display.c	FUNCTION_2	WHILE_3
0x400314a	      0x488b442408	                mov rax, qword [rsp + 8]	       909	display.c	FUNCTION_2	ELSE_17
0x400314f	        0x488b3424	                    mov rsi, qword [rsp]	       909	display.c	FUNCTION_2	ELSE_17
0x4003153	        0xc6043000	                 mov byte [rax + rsi], 0	       909	display.c	FUNCTION_2	ELSE_17
0x4003157	    0x8b0500000000	            mov eax, dword [0x0400315d] 	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x400315d	            0x85c0	                           test eax, eax	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x400315f	     0xf88e20d0000	                            js 0x4003f47	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003165	    0x4c8b35000000	            mov r14, qword [0x0400316c] 	       917	display.c	FUNCTION_2
0x400316c	        0x418b4610	            mov eax, dword [r14 + 0x10] 	       917	display.c	FUNCTION_2
0x4003170	          0x8d50fe	                      lea edx, [rax - 2]	       917	display.c	FUNCTION_2
0x4003173	          0x4139d7	                           cmp r15d, edx	       917	display.c	FUNCTION_2
0x4003176	     0xf8d7a0d0000	                           jge 0x4003ef6	       917	display.c	FUNCTION_2
0x400317c	        0x498b4e08	                mov rcx, qword [r14 + 8]	       918	display.c	FUNCTION_2
0x4003180	          0x4963c7	                        movsxd rax, r15d	       918	display.c	FUNCTION_2
0x4003183	        0x896c8104	        mov dword [rcx + rax*4 + 4], ebp	       918	display.c	FUNCTION_2
0x4003187	    0x8b0500000000	            mov eax, dword [0x0400318d] 	       933	display.c	FUNCTION_2	IF_37
0x400318d	            0x85c0	                           test eax, eax	       933	display.c	FUNCTION_2	IF_37
0x400318f	     0xf85b3070000	                           jne 0x4003948	       933	display.c	FUNCTION_2	IF_37
0x4003195	    0x488b05000000	            mov rax, qword [0x0400319c] 	       933	display.c	FUNCTION_2	IF_37
0x400319c	          0x4885c0	                           test rax, rax	       933	display.c	FUNCTION_2	IF_37
0x400319f	     0xf84a3070000	                            je 0x4003948	       933	display.c	FUNCTION_2	IF_37
0x40031a5	          0x803800	                       cmp byte [rax], 0	       933	display.c	FUNCTION_2	IF_37
0x40031a8	     0xf849a070000	                            je 0x4003948	       933	display.c	FUNCTION_2	IF_37
0x40031ae	    0x448b2d000000	           mov r13d, dword [0x040031b5] 	       937	display.c	FUNCTION_2	IF_37	IF_38
0x40031b5	          0x4585ed	                         test r13d, r13d	       937	display.c	FUNCTION_2	IF_37	IF_38
0x40031b8	     0xf85620e0000	                           jne 0x4004020	       937	display.c	FUNCTION_2	IF_37	IF_38
0x40031be	    0x3b2d00000000	            cmp ebp, dword [0x040031c4] 	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x40031c4	    0xc70500000000	               mov dword [0x040031ce], 0	       939	display.c	FUNCTION_2	IF_37	IF_38
0x40031ce	     0xf8d3c130000	                           jge 0x4004510	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x40031d4	            0x31c0	                            xor eax, eax	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40031d6	            0x31db	                            xor ebx, ebx	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40031d8	      0xe98d000000	                           jmp 0x400326a	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40031dd	           0xf1f00	                         nop dword [rax]	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40031e0	    0x4c8b0d000000	              mov r9, qword [0x040031e7]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40031e7	          0x4889d6	                            mov rsi, rdx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40031ea	          0x490336	                    add rsi, qword [r14]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40031ed	        0x498b4908	                 mov rcx, qword [r9 + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40031f1	        0x48633c01	           movsxd rdi, dword [rcx + rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x40031f5	        0x8b4c0104	         mov ecx, dword [rcx + rax + 4] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40031f9	            0x29f9	                            sub ecx, edi	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40031fb	          0x490339	                     add rdi, qword [r9]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40031fe	          0x4589f9	                           mov r9d, r15d	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003201	            0x89da	                            mov edx, ebx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003203	      0xe838e5ffff	                    call sym.update_line	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003208	            0x85db	                           test ebx, ebx	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x400320a	     0xf8495140000	                            je 0x40046a5	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4003210	    0x3b1d00000000	            cmp ebx, dword [0x04003216] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003216	     0xf84840e0000	                            je 0x40040a0	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400321c	          0x4489f8	                           mov eax, r15d	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400321f	             0x9d8	                             or eax, ebx	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003221	     0xf85690e0000	                           jne 0x4004090	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003227	    0x3b2d00000000	            cmp ebp, dword [0x0400322d] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400322d	     0xf84ed0e0000	                            je 0x4004120	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003233	          0x4585ff	                         test r15d, r15d	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003236	     0xf845c140000	                            je 0x4004698	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400323c	    0x488b05000000	            mov rax, qword [0x04003243] 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003243	        0x488b4008	                mov rax, qword [rax + 8]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003247	          0x8b4004	                mov eax, dword [rax + 4]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400324a	    0x890500000000	            mov dword [0x04003250], eax 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003250	          0x83c301	                              add ebx, 1	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003253	          0x4139df	                           cmp r15d, ebx	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003256	     0xf8c2b0f0000	                            jl 0x4004187	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400325c	    0x4c8b35000000	            mov r14, qword [0x04003263] 	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003263	          0x4c89e0	                            mov rax, r12	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003266	        0x498b4e08	                mov rcx, qword [r14 + 8]	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400326a	        0x48631401	           movsxd rdx, dword [rcx + rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400326e	      0x448b440104	         mov r8d, dword [rcx + rax + 4] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003273	        0x4c8d6004	                      lea r12, [rax + 4]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003277	    0x448b2d000000	           mov r13d, dword [0x0400327e] 	       977	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x400327e	    0xc70500000000	               mov dword [0x04003288], 0	       978	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003288	          0x4129d0	                            sub r8d, edx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400328b	    0x3b1d00000000	            cmp ebx, dword [0x04003291] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003291	     0xf8e49ffffff	                           jle 0x40031e0	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003297	          0x4889d6	                            mov rsi, rdx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400329a	            0x31c9	                            xor ecx, ecx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400329c	          0x490336	                    add rsi, qword [r14]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x400329f	      0xbf00000000	                              mov edi, 0	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40032a4	      0xe955ffffff	                           jmp 0x40031fe	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40032a9	     0xf1f80000000	                         nop dword [rax]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x40032b0	    0x8b0d00000000	            mov ecx, dword [0x040032b6] 	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x40032b6	            0x29cb	                            sub ebx, ecx	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x40032b8	      0xe91bfdffff	                           jmp 0x4002fd8	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x40032bd	           0xf1f00	                         nop dword [rax]	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x40032c0	    0x8b2d00000000	            mov ebp, dword [0x040032c6] 	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x40032c6	        0x410fafee	                          imul ebp, r14d	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x40032ca	    0x48833d000000	               cmp qword [0x040032d2], 0	       716	display.c	FUNCTION_2	WHILE_1
0x40032d2	     0xf858efcffff	                           jne 0x4002f66	       716	display.c	FUNCTION_2	WHILE_1
0x40032d8	          0x4585ed	                         test r13d, r13d	       715	display.c	FUNCTION_2	WHILE_1
0x40032db	            0x7407	                            je 0x40032e4	       715	display.c	FUNCTION_2	WHILE_1
0x40032dd	      0x443b6c2418	           cmp r13d, dword [rsp + 0x18] 	       715	display.c	FUNCTION_2	WHILE_1
0x40032e2	            0x740c	                            je 0x40032f0	       715	display.c	FUNCTION_2	WHILE_1
0x40032e4	    0x8b0500000000	            mov eax, dword [0x040032ea] 	       715	display.c	FUNCTION_2	WHILE_1
0x40032ea	      0xe982fcffff	                           jmp 0x4002f71	       715	display.c	FUNCTION_2	WHILE_1
0x40032ef	              0x90	                                     nop	       715	display.c	FUNCTION_2	WHILE_1
0x40032f0	    0x8b0500000000	            mov eax, dword [0x040032f6] 	       715	display.c	FUNCTION_2	WHILE_1
0x40032f6	      0xe976fcffff	                           jmp 0x4002f71	       715	display.c	FUNCTION_2	WHILE_1
0x40032fb	       0xf1f440000	                   nop dword [rax + rax]	       715	display.c	FUNCTION_2	WHILE_1
0x4003300	          0x4589e7	                          mov r15d, r12d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003303	          0x4189ec	                           mov r12d, ebp	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003306	      0xe94dfcffff	                           jmp 0x4002f58	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400330b	       0xf1f440000	                   nop dword [rax + rax]	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003310	        0x4180fc09	                             cmp r12b, 9	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003314	     0xf84ee010000	                            je 0x4003508	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400331a	        0x4180fc0a	                           cmp r12b, 0xa	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400331e	     0xf847c040000	                            je 0x40037a0	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003324	        0x4183fd1f	                          cmp r13d, 0x1f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003328	     0xf8e52020000	                           jle 0x4003580	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x400332e	        0x4183fd7f	                          cmp r13d, 0x7f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003332	     0xf8551020000	                           jne 0x4003589	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003338	      0x488b442408	                mov rax, qword [rsp + 8]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400333d	        0x488b3c24	                    mov rdi, qword [rsp]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003341	        0x448d6d01	                     lea r13d, [rbp + 1]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003345	        0xc604385e	              mov byte [rax + rdi], 0x5e	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003349	          0x8d4301	                      lea eax, [rbx + 1]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400334c	          0x83c302	                              add ebx, 2	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400334f	    0x3b0500000000	            cmp eax, dword [0x04003355] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003355	            0x7c44	                            jl 0x400339b	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003357	    0x488b1d000000	            mov rbx, qword [0x0400335e] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400335e	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003361	          0x8d50fe	                      lea edx, [rax - 2]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003364	          0x4139d7	                           cmp r15d, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003367	     0xf8dd3060000	                           jge 0x4003a40	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400336d	        0x488b4308	                mov rax, qword [rbx + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003371	        0x4183c701	                             add r15d, 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003375	          0x4963d7	                        movsxd rdx, r15d	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003378	        0x44892c90	           mov dword [rax + rdx*4], r13d	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400337c	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400337f	          0x8d48ff	                      lea ecx, [rax - 1]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003382	          0x4139cf	                           cmp r15d, ecx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003385	     0xf8d85060000	                           jge 0x4003a10	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400338b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400338f	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003393	      0xbb01000000	                              mov ebx, 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003398	          0x893490	            mov dword [rax + rdx*4], esi	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400339b	          0x83c502	                              add ebp, 2	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x400339e	          0x4d63ed	                        movsxd r13, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033a1	      0x4c036c2408	                add r13, qword [rsp + 8]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033a6	        0x4180fc1f	                          cmp r12b, 0x1f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033aa	      0xb83f000000	                           mov eax, 0x3f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033af	            0x772f	                            ja 0x40033e0	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033b1	          0x4584e4	                         test r12b, r12b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033b4	            0x782a	                            js 0x40033e0	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033b6	      0xe800000000	                          call 0x40033bb	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033bb	          0x488b08	                    mov rcx, qword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033be	        0x4183cc40	                           or r12d, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033c2	        0x410fb6d4	                         movzx edx, r12b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033c6	          0x4489e0	                           mov eax, r12d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033c9	        0x48891424	                    mov qword [rsp], rdx	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033cd	      0xf644510102	         test byte [rcx + rdx*2 + 1], 2 	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033d2	     0xf85f8060000	                           jne 0x4003ad0	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033d8	     0xf1f84000000	                   nop dword [rax + rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033e0	        0x41884500	                      mov byte [r13], al	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40033e4	    0x391d00000000	            cmp dword [0x040033ea], ebx 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40033ea	          0x4863c5	                         movsxd rax, ebp	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40033ed	        0x48890424	                    mov qword [rsp], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40033f1	     0xf8f29fdffff	                            jg 0x4003120	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40033f7	    0x488b1d000000	            mov rbx, qword [0x040033fe] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40033fe	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003401	          0x8d50fe	                      lea edx, [rax - 2]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003404	          0x4139d7	                           cmp r15d, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003407	     0xf8d93060000	                           jge 0x4003aa0	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400340d	        0x488b4308	                mov rax, qword [rbx + 8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003411	        0x4183c701	                             add r15d, 1	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003415	          0x4d63e7	                        movsxd r12, r15d	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003418	        0x42892ca0	            mov dword [rax + r12*4], ebp	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400341c	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400341f	          0x8d50ff	                      lea edx, [rax - 1]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003422	          0x4139d7	                           cmp r15d, edx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003425	     0xf8d45060000	                           jge 0x4003a70	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400342b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400342f	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003433	            0x31db	                            xor ebx, ebx	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003435	        0x428934a0	            mov dword [rax + r12*4], esi	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003439	          0x4863c5	                         movsxd rax, ebp	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400343c	        0x48890424	                    mov qword [rsp], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003440	      0xe9dbfcffff	                           jmp 0x4003120	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003445	           0xf1f00	                         nop dword [rax]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003448	    0x488b0d000000	            mov rcx, qword [0x0400344f] 	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x400344f	             0x1f6	                            add esi, esi	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003451	        0x89542428	             mov dword [rsp + 0x28], edx	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003455	    0x893500000000	            mov dword [0x0400345b], esi 	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x400345b	          0x4863f6	                         movsxd rsi, esi	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x400345e	          0x488b39	                    mov rdi, qword [rcx]	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003461	      0x48894c2408	                mov qword [rsp + 8], rcx	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003466	      0xe800000000	                          call 0x400346b	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x400346b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003470	    0x486335000000	         movsxd rsi, dword [0x04003477] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003477	          0x488901	                    mov qword [rcx], rax	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x400347a	    0x488b0d000000	            mov rcx, qword [0x04003481] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003481	          0x488b39	                    mov rdi, qword [rcx]	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003484	      0x48894c2408	                mov qword [rsp + 8], rcx	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003489	      0xe800000000	                          call 0x400348e	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x400348e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003493	    0x443b35000000	           cmp r14d, dword [0x0400349a] 	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x400349a	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x400349e	          0x488901	                    mov qword [rcx], rax	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x40034a1	    0x488b05000000	            mov rax, qword [0x040034a8] 	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x40034a8	          0x488b00	                    mov rax, qword [rax]	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x40034ab	      0x4889442408	                mov qword [rsp + 8], rax	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x40034b0	     0xf8509fcffff	                           jne 0x40030bf	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x40034b6	    0x892d00000000	            mov dword [0x040034bc], ebp 	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x40034bc	      0x44897c2434	            mov dword [rsp + 0x34], r15d	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x40034c1	      0xe9f9fbffff	                           jmp 0x40030bf	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x40034c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x40034d0	      0x4403742410	            add r14d, dword [rsp + 0x10]	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x40034d5	    0x8b1500000000	            mov edx, dword [0x040034db] 	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034db	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034e0	      0x488d7c244c	                   lea rdi, [rsp + 0x4c]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034e5	          0x4963f6	                        movsxd rsi, r14d	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034e8	    0x480335000000	             add rsi, qword [0x040034ef]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034ef	          0x4429f2	                           sub edx, r14d	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034f2	          0x4863d2	                         movsxd rdx, edx	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034f5	      0xe800000000	                          call 0x40034fa	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034fa	      0x4889442410	             mov qword [rsp + 0x10], rax	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x40034ff	      0xe927fbffff	                           jmp 0x400302b	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4003504	         0xf1f4000	                         nop dword [rax]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4003508	            0x89d9	                            mov ecx, ebx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400350a	          0xc1f91f	                           sar ecx, 0x1f	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400350d	          0xc1e91d	                           shr ecx, 0x1d	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003510	          0x8d040b	                    lea eax, [rbx + rcx]	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003513	          0x83e007	                              and eax, 7	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003516	            0x29c8	                            sub eax, ecx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003518	            0x29c2	                            sub edx, eax	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400351a	    0x8b0500000000	            mov eax, dword [0x04003520] 	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003520	          0x4189d4	                           mov r12d, edx	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003523	          0x4129ec	                           sub r12d, ebp	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003526	        0x428d3423	                    lea esi, [rbx + r12]	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400352a	            0x39c6	                            cmp esi, eax	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400352c	     0xf8d4e030000	                           jge 0x4003880	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003532	            0x39d5	                            cmp ebp, edx	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003534	            0x89f3	                            mov ebx, esi	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003536	     0xf8de4fbffff	                           jge 0x4003120	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400353c	        0x488b1c24	                    mov rbx, qword [rsp]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003540	            0xf7d5	                                 not ebp	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003542	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003547	        0x8d4c1500	                    lea ecx, [rbp + rdx]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400354b	      0x488d4c1901	                lea rcx, [rcx + rbx + 1]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003550	          0x4889f8	                            mov rax, rdi	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003553	          0x4801d8	                            add rax, rbx	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003556	          0x4801f9	                            add rcx, rdi	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003559	     0xf1f80000000	                         nop dword [rax]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003560	          0xc60020	                    mov byte [rax], 0x20	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003563	        0x4883c001	                              add rax, 1	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003567	          0x4839c8	                            cmp rax, rcx	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400356a	            0x75f4	                           jne 0x4003560	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400356c	          0x4863c2	                         movsxd rax, edx	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400356f	            0x89f3	                            mov ebx, esi	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003571	          0x4889c5	                            mov rbp, rax	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003574	        0x48890424	                    mov qword [rsp], rax	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003578	      0xe9a3fbffff	                           jmp 0x4003120	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400357d	           0xf1f00	                         nop dword [rax]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003580	          0x4584e4	                         test r12b, r12b	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003583	     0xf89affdffff	                           jns 0x4003338	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003589	      0xe800000000	                          call 0x400358e	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x400358e	        0x4883f801	                              cmp rax, 1	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4003592	     0xf8678020000	                           jbe 0x4003810	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x4003598	    0x8b0500000000	            mov eax, dword [0x0400359e] 	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x400359e	            0x85c0	                           test eax, eax	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40035a0	     0xf856a020000	                           jne 0x4003810	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40035a6	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x40035aa	    0x8b0500000000	            mov eax, dword [0x040035b0] 	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x40035b0	    0xc74424200000	               mov dword [rsp + 0x20], 0	       866	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40035b8	          0x8d143b	                    lea edx, [rbx + rdi]	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x40035bb	            0x39c2	                            cmp edx, eax	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x40035bd	     0xf8ef0000000	                           jle 0x40036b3	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x40035c3	            0x39c3	                            cmp ebx, eax	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035c5	     0xf8de8000000	                           jge 0x40036b3	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035cb	        0x448d4d01	                      lea r9d, [rbp + 1]	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035cf	        0x488b0c24	                    mov rcx, qword [rsp]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035d3	      0x448974243c	            mov dword [rsp + 0x3c], r14d	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035d8	          0x4531e4	                          xor r12d, r12d	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035db	        0x448d4301	                      lea r8d, [rbx + 1]	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035df	      0x48034c2408	                add rcx, qword [rsp + 8]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035e4	          0x4589ce	                           mov r14d, r9d	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035e7	            0xeb41	                           jmp 0x400362a	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035e9	     0xf1f80000000	                         nop dword [rax]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035f0	        0x488b4308	                mov rax, qword [rbx + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035f4	        0x4183c701	                             add r15d, 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035f8	          0x4d63d7	                        movsxd r10, r15d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035fb	        0x42891490	            mov dword [rax + r10*4], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40035ff	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003602	          0x8d70ff	                      lea esi, [rax - 1]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003605	          0x4139f7	                           cmp r15d, esi	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003608	     0xf8d2a070000	                           jge 0x4003d38	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400360e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003612	            0x31db	                            xor ebx, ebx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003614	        0x42892c90	            mov dword [rax + r10*4], ebp	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003618	    0x8b0500000000	            mov eax, dword [0x0400361e] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400361e	          0x4501c5	                           add r13d, r8d	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003621	        0x4983c401	                              add r12, 1	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003625	          0x4139c5	                           cmp r13d, eax	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003628	            0x7d76	                           jge 0x40036a0	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400362a	      0x42c6042120	              mov byte [rcx + r12], 0x20	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400362f	    0x8b0500000000	            mov eax, dword [0x04003635] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003635	          0x83c301	                              add ebx, 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003638	          0x4589e5	                          mov r13d, r12d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400363b	        0x438d1426	                    lea edx, [r14 + r12]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400363f	      0x418d6c2401	                      lea ebp, [r12 + 1]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003644	            0x39c3	                            cmp ebx, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003646	            0x7cd6	                            jl 0x400361e	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003648	    0x488b1d000000	            mov rbx, qword [0x0400364f] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400364f	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003652	          0x8d70fe	                      lea esi, [rax - 2]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003655	          0x4139f7	                           cmp r15d, esi	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003658	            0x7c96	                            jl 0x40035f0	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400365a	             0x1c0	                            add eax, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400365c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003660	        0x89542428	             mov dword [rsp + 0x28], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003664	          0x894310	             mov dword [rbx + 0x10], eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003667	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003669	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400366e	    0x488d34850000	                        lea rsi, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003676	        0x44890424	                    mov dword [rsp], r8d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400367a	      0xe800000000	                          call 0x400367f	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400367f	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003683	        0x48894308	                mov qword [rbx + 8], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003687	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400368c	    0x488b1d000000	            mov rbx, qword [0x04003693] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003693	        0x448b0424	                    mov r8d, dword [rsp]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003697	      0xe954ffffff	                           jmp 0x40035f0	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400369c	         0xf1f4000	                         nop dword [rax]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40036a0	      0x448b74243c	           mov r14d, dword [rsp + 0x3c] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40036a5	          0x4863c2	                         movsxd rax, edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40036a8	        0x896c2420	             mov dword [rsp + 0x20], ebp	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40036ac	        0x48890424	                    mov qword [rsp], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40036b0	          0x4889c5	                            mov rbp, rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40036b3	    0x443b35000000	           cmp r14d, dword [0x040036ba] 	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x40036ba	     0xf8438070000	                            je 0x4003df8	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x40036c0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036c5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036ca	          0x4801c6	                            add rsi, rax	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036cd	          0x4839f0	                            cmp rax, rsi	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036d0	            0x7332	                           jae 0x4003704	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036d2	        0x488b0c24	                    mov rcx, qword [rsp]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036d6	          0x4829c1	                            sub rcx, rax	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036d9	      0x48034c2408	                add rcx, qword [rsp + 8]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036de	            0x6690	                                     nop	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036e0	    0x488b15000000	            mov rdx, qword [0x040036e7] 	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036e7	         0xfb61402	             movzx edx, byte [rdx + rax]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036eb	          0x881401	                mov byte [rcx + rax], dl	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036ee	        0x4883c001	                              add rax, 1	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036f2	          0x4839f0	                            cmp rax, rsi	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036f5	            0x75e9	                           jne 0x40036e0	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036f7	        0x2b6c2418	             sub ebp, dword [rsp + 0x18]	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036fb	             0x1c5	                            add ebp, eax	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x40036fd	          0x4863c5	                         movsxd rax, ebp	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003700	        0x48890424	                    mov qword [rsp], rax	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4003704	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003708	            0x85c0	                           test eax, eax	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400370a	     0xf8410faffff	                            je 0x4003120	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003710	      0x4489742428	            mov dword [rsp + 0x28], r14d	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003715	          0x4531e4	                          xor r12d, r12d	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003718	          0x4189ee	                           mov r14d, ebp	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400371b	          0x4189c5	                           mov r13d, eax	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400371e	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003722	            0xeb38	                           jmp 0x400375c	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003724	         0xf1f4000	                         nop dword [rax]	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003728	        0x488b4308	                mov rax, qword [rbx + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400372c	        0x4183c701	                             add r15d, 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003730	          0x4963cf	                        movsxd rcx, r15d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003733	        0x44893488	           mov dword [rax + rcx*4], r14d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003737	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400373a	          0x8d70ff	                      lea esi, [rax - 1]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400373d	          0x4139f7	                           cmp r15d, esi	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003740	     0xf8dba010000	                           jge 0x4003900	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003746	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400374a	            0x31db	                            xor ebx, ebx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400374c	          0x892c88	            mov dword [rax + rcx*4], ebp	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400374f	        0x4183c401	                             add r12d, 1	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003753	          0x4539e5	                          cmp r13d, r12d	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003756	     0xf84dc010000	                            je 0x4003938	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400375c	          0x83c301	                              add ebx, 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400375f	    0x3b1d00000000	            cmp ebx, dword [0x04003765] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003765	            0x7ce8	                            jl 0x400374f	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003767	    0x488b1d000000	            mov rbx, qword [0x0400376e] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400376e	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003771	          0x8d48fe	                      lea ecx, [rax - 2]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003774	          0x4439f9	                           cmp ecx, r15d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003777	            0x7faf	                            jg 0x4003728	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003779	             0x1c0	                            add eax, eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400377b	        0x488b7b08	                mov rdi, qword [rbx + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400377f	          0x894310	             mov dword [rbx + 0x10], eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003782	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003784	    0x488d34850000	                        lea rsi, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400378c	      0xe800000000	                          call 0x4003791	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003791	        0x48894308	                mov qword [rbx + 8], rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003795	    0x488b1d000000	            mov rbx, qword [0x0400379c] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400379c	            0xeb8a	                           jmp 0x4003728	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400379e	            0x6690	                                     nop	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40037a0	    0x8b0500000000	            mov eax, dword [0x040037a6] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037a6	            0x85c0	                           test eax, eax	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037a8	     0xf858afbffff	                           jne 0x4003338	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037ae	    0x488b05000000	            mov rax, qword [0x040037b5] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037b5	          0x4885c0	                           test rax, rax	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037b8	     0xf847afbffff	                            je 0x4003338	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037be	          0x803800	                       cmp byte [rax], 0	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037c1	     0xf8471fbffff	                            je 0x4003338	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037c7	      0x488b442408	                mov rax, qword [rsp + 8]	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037cc	        0x488b3c24	                    mov rdi, qword [rsp]	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037d0	          0x83c501	                              add ebp, 1	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037d3	    0x488b1d000000	            mov rbx, qword [0x040037da] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037da	        0xc6043800	                 mov byte [rax + rdi], 0	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037de	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037e1	          0x8d50fe	                      lea edx, [rax - 2]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037e4	          0x4139d7	                           cmp r15d, edx	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037e7	     0xf8db00b0000	                           jge 0x400439d	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037ed	        0x488b4308	                mov rax, qword [rbx + 8]	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037f1	        0x4183c701	                             add r15d, 1	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037f5	            0x31db	                            xor ebx, ebx	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037f7	          0x4963d7	                        movsxd rdx, r15d	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037fa	          0x892c90	            mov dword [rax + rdx*4], ebp	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40037fd	          0x4863c5	                         movsxd rax, ebp	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003800	        0x48890424	                    mov qword [rsp], rax	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003804	      0xe917f9ffff	                           jmp 0x4003120	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003809	     0xf1f80000000	                         nop dword [rax]	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003810	      0x488b442408	                mov rax, qword [rsp + 8]	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003815	        0x488b3424	                    mov rsi, qword [rsp]	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003819	          0x83c501	                              add ebp, 1	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400381c	          0x83c301	                              add ebx, 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400381f	        0x44882430	              mov byte [rax + rsi], r12b	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003823	    0x3b1d00000000	            cmp ebx, dword [0x04003829] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003829	     0xf8cb1010000	                            jl 0x40039e0	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400382f	    0x488b1d000000	            mov rbx, qword [0x04003836] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003836	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003839	          0x8d50fe	                      lea edx, [rax - 2]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400383c	          0x4139d7	                           cmp r15d, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400383f	     0xf8dda060000	                           jge 0x4003f1f	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003845	        0x488b4308	                mov rax, qword [rbx + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003849	        0x4183c701	                             add r15d, 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400384d	          0x4d63e7	                        movsxd r12, r15d	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003850	        0x42892ca0	            mov dword [rax + r12*4], ebp	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003854	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003857	          0x8d50ff	                      lea edx, [rax - 1]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400385a	          0x4139d7	                           cmp r15d, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400385d	     0xf8d6b060000	                           jge 0x4003ece	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003863	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003867	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400386b	            0x31db	                            xor ebx, ebx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400386d	        0x42893ca0	            mov dword [rax + r12*4], edi	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003871	          0x4863c5	                         movsxd rax, ebp	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003874	        0x48890424	                    mov qword [rsp], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003878	      0xe9a3f8ffff	                           jmp 0x4003120	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400387d	           0xf1f00	                         nop dword [rax]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003880	    0x4c8b2d000000	            mov r13, qword [0x04003887] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003887	            0x29d8	                            sub eax, ebx	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003889	            0x89c3	                            mov ebx, eax	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400388b	        0x418b4510	            mov eax, dword [r13 + 0x10] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400388f	          0x8d48fe	                      lea ecx, [rax - 2]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003892	          0x4139cf	                           cmp r15d, ecx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003895	     0xf8d05050000	                           jge 0x4003da0	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400389b	        0x498b4508	                mov rax, qword [r13 + 8]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400389f	        0x4183c701	                             add r15d, 1	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40038a3	        0x8d741d00	                    lea esi, [rbp + rbx]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40038a7	          0x4129dc	                           sub r12d, ebx	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40038aa	          0x4963cf	                        movsxd rcx, r15d	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40038ad	            0x39d5	                            cmp ebp, edx	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038af	          0x4489e3	                           mov ebx, r12d	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40038b2	          0x893488	            mov dword [rax + rcx*4], esi	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40038b5	     0xf8d65f8ffff	                           jge 0x4003120	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038bb	        0x488b3c24	                    mov rdi, qword [rsp]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038bf	            0xf7d5	                                 not ebp	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038c1	      0x488b742408	                mov rsi, qword [rsp + 8]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038c6	        0x8d4c1500	                    lea ecx, [rbp + rdx]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038ca	      0x488d4c3901	                lea rcx, [rcx + rdi + 1]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038cf	          0x4889f0	                            mov rax, rsi	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038d2	          0x4801f8	                            add rax, rdi	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038d5	          0x4801f1	                            add rcx, rsi	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038d8	     0xf1f84000000	                   nop dword [rax + rax]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038e0	          0xc60020	                    mov byte [rax], 0x20	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038e3	        0x4883c001	                              add rax, 1	       835	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038e7	          0x4839c8	                            cmp rax, rcx	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038ea	            0x75f4	                           jne 0x40038e0	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038ec	          0x4863c2	                         movsxd rax, edx	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038ef	          0x4889c5	                            mov rbp, rax	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038f2	        0x48890424	                    mov qword [rsp], rax	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038f6	      0xe925f8ffff	                           jmp 0x4003120	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40038fb	       0xf1f440000	                   nop dword [rax + rax]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4003900	             0x1c0	                            add eax, eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003902	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003906	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400390b	          0x894320	             mov dword [rbx + 0x20], eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400390e	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003910	    0x488d34850000	                        lea rsi, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003918	      0xe800000000	                          call 0x400391d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400391d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003922	        0x48894318	             mov qword [rbx + 0x18], rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003926	    0x488b1d000000	            mov rbx, qword [0x0400392d] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400392d	      0xe914feffff	                           jmp 0x4003746	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003932	    0x660f1f440000	                    nop word [rax + rax]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003938	          0x4489f5	                           mov ebp, r14d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400393b	      0x448b742428	           mov r14d, dword [rsp + 0x28] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003940	      0xe9dbf7ffff	                           jmp 0x4003120	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003945	           0xf1f00	                         nop dword [rax]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4003948	    0x448b1d000000	           mov r11d, dword [0x0400394f] 	      1150	display.c	FUNCTION_2	ELSE_25
0x400394f	    0x48633d000000	         movsxd rdi, dword [0x04003956] 	      1154	display.c	FUNCTION_2	ELSE_25
0x4003956	      0xba56555555	                     mov edx, 0x55555556	      1155	display.c	FUNCTION_2	ELSE_25
0x400395b	    0x8b0d00000000	            mov ecx, dword [0x04003961] 	      1155	display.c	FUNCTION_2	ELSE_25
0x4003961	    0x448b05000000	            mov r8d, dword [0x04003968] 	      1150	display.c	FUNCTION_2	ELSE_25
0x4003968	    0x448b0d000000	            mov r9d, dword [0x0400396f] 	      1151	display.c	FUNCTION_2	ELSE_25
0x400396f	    0xc70500000000	               mov dword [0x04003979], 0	      1144	display.c	FUNCTION_2	ELSE_25
0x4003979	          0x4489db	                           mov ebx, r11d	      1150	display.c	FUNCTION_2	ELSE_25
0x400397c	          0x4589da	                          mov r10d, r11d	      1150	display.c	FUNCTION_2	ELSE_25
0x400397f	          0x4429c3	                            sub ebx, r8d	      1150	display.c	FUNCTION_2	ELSE_25
0x4003982	          0x4129fa	                           sub r10d, edi	      1150	display.c	FUNCTION_2	ELSE_25
0x4003985	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003987	          0x4501c1	                            add r9d, r8d	      1151	display.c	FUNCTION_2	ELSE_25
0x400398a	            0x85ff	                           test edi, edi	      1151	display.c	FUNCTION_2	ELSE_25
0x400398c	        0x440f44d3	                         cmove r10d, ebx	      1151	display.c	FUNCTION_2	ELSE_25
0x4003990	            0xf7ea	                                imul edx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003992	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003994	          0xc1f81f	                           sar eax, 0x1f	      1155	display.c	FUNCTION_2	ELSE_25
0x4003997	            0x89d6	                            mov esi, edx	      1155	display.c	FUNCTION_2	ELSE_25
0x4003999	            0x29c6	                            sub esi, eax	      1155	display.c	FUNCTION_2	ELSE_25
0x400399b	          0x8d41ff	                      lea eax, [rcx - 1]	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x400399e	          0x4439d0	                           cmp eax, r10d	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x40039a1	     0xf8f81010000	                            jg 0x4003b28	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x40039a7	          0x8d1436	                    lea edx, [rsi + rsi]	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x40039aa	          0x4489db	                           mov ebx, r11d	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x40039ad	            0x29d3	                            sub ebx, edx	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x40039af	     0xf885b040000	                            js 0x4003e10	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x40039b5	          0x4585c0	                           test r8d, r8d	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039b8	     0xf8480010000	                            je 0x4003b3e	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039be	            0x85db	                           test ebx, ebx	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039c0	     0xf8e78010000	                           jle 0x4003b3e	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039c6	          0x4139d9	                            cmp r9d, ebx	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039c9	     0xf8e6f010000	                           jle 0x4003b3e	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039cf	          0x4489cb	                            mov ebx, r9d	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039d2	      0xe970010000	                           jmp 0x4003b47	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039d7	    0x660f1f840000	                    nop word [rax + rax]	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039e0	          0x4863c5	                         movsxd rax, ebp	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039e3	        0x48890424	                    mov qword [rsp], rax	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039e7	      0xe934f7ffff	                           jmp 0x4003120	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039ec	         0xf1f4000	                         nop dword [rax]	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x40039f0	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_28	CALL_6
0x40039f9	    0xc74424300100	               mov dword [rsp + 0x30], 1	       761	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4003a01	    0x48c744241001	               mov qword [rsp + 0x10], 1	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4003a0a	      0xe992f6ffff	                           jmp 0x40030a1	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4003a0f	              0x90	                                     nop	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4003a10	             0x1c0	                            add eax, eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a12	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a16	        0x48891424	                    mov qword [rsp], rdx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a1a	          0x894320	             mov dword [rbx + 0x20], eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a1d	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a1f	    0x488d34850000	                        lea rsi, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a27	      0xe800000000	                          call 0x4003a2c	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a2c	        0x488b1424	                    mov rdx, qword [rsp]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a30	        0x48894318	             mov qword [rbx + 0x18], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a34	    0x488b1d000000	            mov rbx, qword [0x04003a3b] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a3b	      0xe94bf9ffff	                           jmp 0x400338b	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a40	             0x1c0	                            add eax, eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a42	        0x488b7b08	                mov rdi, qword [rbx + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a46	          0x894310	             mov dword [rbx + 0x10], eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a49	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a4b	    0x488d34850000	                        lea rsi, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a53	      0xe800000000	                          call 0x4003a58	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a58	        0x48894308	                mov qword [rbx + 8], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a5c	    0x488b1d000000	            mov rbx, qword [0x04003a63] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a63	      0xe905f9ffff	                           jmp 0x400336d	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a68	     0xf1f84000000	                   nop dword [rax + rax]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a70	             0x1c0	                            add eax, eax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a72	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a76	          0x894320	             mov dword [rbx + 0x20], eax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a79	            0x4898	                                    cdqe	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a7b	    0x488d34850000	                        lea rsi, [rax*4]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a83	      0xe800000000	                          call 0x4003a88	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a88	        0x48894318	             mov qword [rbx + 0x18], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a8c	    0x488b1d000000	            mov rbx, qword [0x04003a93] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a93	      0xe993f9ffff	                           jmp 0x400342b	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003a98	     0xf1f84000000	                   nop dword [rax + rax]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003aa0	             0x1c0	                            add eax, eax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003aa2	        0x488b7b08	                mov rdi, qword [rbx + 8]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003aa6	          0x894310	             mov dword [rbx + 0x10], eax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003aa9	            0x4898	                                    cdqe	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003aab	    0x488d34850000	                        lea rsi, [rax*4]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ab3	      0xe800000000	                          call 0x4003ab8	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ab8	        0x48894308	                mov qword [rbx + 8], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003abc	    0x488b1d000000	            mov rbx, qword [0x04003ac3] 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ac3	      0xe945f9ffff	                           jmp 0x400340d	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ac8	     0xf1f84000000	                   nop dword [rax + rax]	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ad0	      0xe800000000	                          call 0x4003ad5	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003ad5	        0x488b1424	                    mov rdx, qword [rsp]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003ad9	          0x488b00	                    mov rax, qword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003adc	         0xfb60490	           movzx eax, byte [rax + rdx*4]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003ae0	      0xe9fbf8ffff	                           jmp 0x40033e0	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003ae5	           0xf1f00	                         nop dword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003ae8	    0x4c8b25000000	            mov r12, qword [0x04003aef] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003aef	            0x29da	                            sub edx, ebx	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003af1	            0x89d3	                            mov ebx, edx	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003af3	      0x418b442410	            mov eax, dword [r12 + 0x10] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003af8	          0x8d50fe	                      lea edx, [rax - 2]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003afb	          0x4139d7	                           cmp r15d, edx	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003afe	     0xf8db2040000	                           jge 0x4003fb6	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b04	      0x498b442408	                mov rax, qword [r12 + 8]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b09	        0x4183c701	                             add r15d, 1	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b0d	        0x8d4c1d00	                    lea ecx, [rbp + rbx]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b11	          0x4963d7	                        movsxd rdx, r15d	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b14	          0x890c90	            mov dword [rax + rdx*4], ecx	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b17	      0xb804000000	                              mov eax, 4	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b1c	            0x29d8	                            sub eax, ebx	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b1e	      0xe9ecf5ffff	                           jmp 0x400310f	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b23	       0xf1f440000	                   nop dword [rax + rax]	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003b28	          0x8d41fe	                      lea eax, [rcx - 2]	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003b2b	            0x39c3	                            cmp ebx, eax	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003b2d	     0xf8cdd020000	                            jl 0x4003e10	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4003b33	          0x4585d2	                         test r10d, r10d	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003b36	            0x89fb	                            mov ebx, edi	      1154	display.c	FUNCTION_2	ELSE_25
0x4003b38	     0xf8e27050000	                           jle 0x4004065	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4003b3e	          0x83fb00	                              cmp ebx, 0	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003b41	     0xf8e370b0000	                           jle 0x400467e	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003b47	      0x488b742408	                mov rsi, qword [rsp + 8]	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003b4c	          0x4863c3	                         movsxd rax, ebx	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003b4f	        0xc604063c	              mov byte [rsi + rax], 0x3c	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003b53	    0x8b0d00000000	            mov ecx, dword [0x04003b59] 	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4003b59	            0x31c0	                            xor eax, eax	      1195	display.c	FUNCTION_2	ELSE_25
0x4003b5b	             0x1d8	                            add eax, ebx	      1195	display.c	FUNCTION_2	ELSE_25
0x4003b5d	             0x1c8	                            add eax, ecx	      1195	display.c	FUNCTION_2	ELSE_25
0x4003b5f	            0x39c5	                            cmp ebp, eax	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003b61	            0x7e0c	                           jle 0x4003b6f	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003b63	      0x488b742408	                mov rsi, qword [rsp + 8]	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003b68	            0x4898	                                    cdqe	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003b6a	      0xc64406ff3e	         mov byte [rsi + rax - 1], 0x3e 	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4003b6f	    0x448b1d000000	           mov r11d, dword [0x04003b76] 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b76	          0x4585db	                         test r11d, r11d	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b79	            0x7414	                            je 0x4003b8f	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b7b	    0x448b15000000	           mov r10d, dword [0x04003b82] 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b82	          0x4585d2	                         test r10d, r10d	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b85	            0x7508	                           jne 0x4003b8f	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b87	            0x39fb	                            cmp ebx, edi	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b89	     0xf84ef000000	                            je 0x4003c7e	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b8f	    0x488b15000000	            mov rdx, qword [0x04003b96] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003b96	            0x85db	                           test ebx, ebx	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b98	      0xb800000000	                              mov eax, 0	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003b9d	          0x4c63eb	                         movsxd r13, ebx	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003ba0	        0x440f45c0	                         cmovne r8d, eax	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003ba4	    0x8b0d00000000	            mov ecx, dword [0x04003baa] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003baa	    0x8b0500000000	            mov eax, dword [0x04003bb0] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bb0	          0x4c89ee	                            mov rsi, r13	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bb3	          0x490336	                    add rsi, qword [r14]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bb6	          0x48033a	                    add rdi, qword [rdx]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bb9	          0x4531c9	                            xor r9d, r9d	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bbc	            0x31d2	                            xor edx, edx	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bbe	    0xc70500000000	               mov dword [0x04003bc8], 0	      1201	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003bc8	    0x448b25000000	           mov r12d, dword [0x04003bcf] 	      1202	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003bcf	             0x1c1	                            add ecx, eax	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bd1	          0x4101c0	                            add r8d, eax	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003bd4	    0xc70500000000	               mov dword [0x04003bde], 0	      1203	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003bde	      0xe85ddbffff	                    call sym.update_line	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4003be3	      0xe800000000	                          call 0x4003be8	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003be8	        0x4883f801	                              cmp rax, 1	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003bec	            0x761c	                           jbe 0x4003c0a	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003bee	    0x448b0d000000	            mov r9d, dword [0x04003bf5] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003bf5	          0x4585c9	                           test r9d, r9d	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003bf8	            0x7510	                           jne 0x4003c0a	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003bfa	    0x448b05000000	            mov r8d, dword [0x04003c01] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003c01	          0x4585c0	                           test r8d, r8d	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003c04	     0xf84d8030000	                            je 0x4003fe2	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003c0a	    0x8b1500000000	            mov edx, dword [0x04003c10] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003c10	            0x85db	                           test ebx, ebx	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c12	     0xf85c0010000	                           jne 0x4003dd8	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c18	    0x8b3500000000	            mov esi, dword [0x04003c1e] 	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c1e	    0x393500000000	            cmp dword [0x04003c24], esi 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003c24	            0x89f1	                            mov ecx, esi	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c26	     0xf8d54050000	                           jge 0x4004180	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003c2c	            0x39d5	                            cmp ebp, edx	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003c2e	     0xf854c050000	                           jne 0x4004180	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003c34	            0x29f2	                            sub edx, esi	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c36	    0x391500000000	            cmp dword [0x04003c3c], edx 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003c3c	            0x89e8	                            mov eax, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c3e	     0xf8ffd030000	                            jg 0x4004041	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003c44	            0x89f1	                            mov ecx, esi	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003c46	    0x8b1500000000	            mov edx, dword [0x04003c4c] 	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003c4c	            0x29c8	                            sub eax, ecx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c4e	    0x890500000000	            mov dword [0x04003c54], eax 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c54	            0x39d0	                            cmp eax, edx	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003c56	            0x7e06	                           jle 0x4003c5e	      1226	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003c58	    0x891500000000	            mov dword [0x04003c5e], edx 	      1227	display.c	FUNCTION_2	ELSE_25	IF_68	IF_71
0x4003c5e	    0x488b05000000	            mov rax, qword [0x04003c65] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003c65	    0x8b3d00000000	            mov edi, dword [0x04003c6b] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003c6b	          0x4c89ee	                            mov rsi, r13	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003c6e	          0x480330	                    add rsi, qword [rax]	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003c71	            0x29df	                            sub edi, ebx	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003c73	      0xe800000000	                          call 0x4003c78	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4003c78	    0x891d00000000	            mov dword [0x04003c7e], ebx 	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003c7e	    0x488b3d000000	            mov rdi, qword [0x04003c85] 	      1233	display.c	FUNCTION_2	CALL_52
0x4003c85	      0xe800000000	                          call 0x4003c8a	      1233	display.c	FUNCTION_2	CALL_52
0x4003c8a	    0x8b3d00000000	            mov edi, dword [0x04003c90] 	      1246	display.c	FUNCTION_2	IF_72
0x4003c90	    0x488b05000000	            mov rax, qword [0x04003c97] 	      1237	display.c	FUNCTION_2
0x4003c97	    0x488b15000000	            mov rdx, qword [0x04003c9e] 	      1239	display.c	FUNCTION_2
0x4003c9e	    0xc70500000000	               mov dword [0x04003ca8], 0	      1242	display.c	FUNCTION_2
0x4003ca8	            0x85ff	                           test edi, edi	      1246	display.c	FUNCTION_2	IF_72
0x4003caa	    0x488905000000	            mov qword [0x04003cb1], rax 	      1240	display.c	FUNCTION_2
0x4003cb1	    0x488915000000	            mov qword [0x04003cb8], rdx 	      1239	display.c	FUNCTION_2
0x4003cb8	     0xf84ca000000	                            je 0x4003d88	      1246	display.c	FUNCTION_2	IF_72
0x4003cbe	    0x8b3500000000	            mov esi, dword [0x04003cc4] 	      1246	display.c	FUNCTION_2	IF_72
0x4003cc4	            0x85f6	                           test esi, esi	      1246	display.c	FUNCTION_2	IF_72
0x4003cc6	     0xf84bc000000	                            je 0x4003d88	      1246	display.c	FUNCTION_2	IF_72
0x4003ccc	    0xc70500000000	               mov dword [0x04003cd6], 0	      1247	display.c	FUNCTION_2	IF_72
0x4003cd6	    0x812500000000	      and dword [0x04003ce0], 0xff7fffff	      1252	display.c	FUNCTION_2	CALL_53
0x4003ce0	      0xe800000000	                          call 0x4003ce5	      1253	display.c	FUNCTION_2	CALL_54
0x4003ce5	      0xe930f0ffff	                           jmp 0x4002d1a	      1253	display.c	FUNCTION_2	CALL_54
0x4003cea	          0x4889df	                            mov rdi, rbx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4003ced	      0xe800000000	                          call 0x4003cf2	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4003cf2	          0x4889df	                            mov rdi, rbx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4003cf5	            0x89c6	                            mov esi, eax	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4003cf7	      0xe800000000	                          call 0x4003cfc	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4003cfc	      0xe90df1ffff	                           jmp 0x4002e0e	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4003d01	    0x486315000000	         movsxd rdx, dword [0x04003d08] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d08	    0x488b35000000	            mov rsi, qword [0x04003d0f] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d0f	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d14	      0x488d7c244c	                   lea rdi, [rsp + 0x4c]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d19	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_28	CALL_6
0x4003d22	      0xe800000000	                          call 0x4003d27	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d27	      0x4889442410	             mov qword [rsp + 0x10], rax	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d2c	      0xe9e7f2ffff	                           jmp 0x4003018	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d31	     0xf1f80000000	                         nop dword [rax]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4003d38	             0x1c0	                            add eax, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d3a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d3e	        0x89542438	             mov dword [rsp + 0x38], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d42	          0x894320	             mov dword [rbx + 0x20], eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d45	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d47	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d4c	    0x488d34850000	                        lea rsi, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d54	      0x4489442420	             mov dword [rsp + 0x20], r8d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d59	        0x4c891424	                    mov qword [rsp], r10	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d5d	      0xe800000000	                          call 0x4003d62	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d62	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d66	        0x48894318	             mov qword [rbx + 0x18], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d6a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d6f	    0x488b1d000000	            mov rbx, qword [0x04003d76] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d76	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d7b	        0x4c8b1424	                    mov r10, qword [rsp]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d7f	      0xe98af8ffff	                           jmp 0x400360e	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d84	         0xf1f4000	                         nop dword [rax]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4003d88	    0x8b0500000000	            mov eax, dword [0x04003d8e] 	      1249	display.c	FUNCTION_2	ELSE_29
0x4003d8e	    0x890500000000	            mov dword [0x04003d94], eax 	      1249	display.c	FUNCTION_2	ELSE_29
0x4003d94	      0xe93dffffff	                           jmp 0x4003cd6	      1249	display.c	FUNCTION_2	ELSE_29
0x4003d99	     0xf1f80000000	                         nop dword [rax]	      1249	display.c	FUNCTION_2	ELSE_29
0x4003da0	             0x1c0	                            add eax, eax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003da2	        0x498b7d08	                mov rdi, qword [r13 + 8]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003da6	        0x89542418	             mov dword [rsp + 0x18], edx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003daa	        0x41894510	             mov dword [r13 + 0x10], eax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003dae	            0x4898	                                    cdqe	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003db0	    0x488d34850000	                        lea rsi, [rax*4]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003db8	      0xe800000000	                          call 0x4003dbd	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003dbd	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003dc1	        0x49894508	                mov qword [r13 + 8], rax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003dc5	    0x4c8b2d000000	            mov r13, qword [0x04003dcc] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003dcc	      0xe9cafaffff	                           jmp 0x400389b	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003dd1	     0xf1f80000000	                         nop dword [rax]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4003dd8	    0x8b0d00000000	            mov ecx, dword [0x04003dde] 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003dde	            0x85c9	                           test ecx, ecx	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003de0	            0x7908	                           jns 0x4003dea	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003de2	            0x39d5	                            cmp ebp, edx	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003de4	     0xf844b020000	                            je 0x4004035	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4003dea	            0x89e8	                            mov eax, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003dec	            0x31c9	                            xor ecx, ecx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003dee	            0x29d8	                            sub eax, ebx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003df0	      0xe951feffff	                           jmp 0x4003c46	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003df5	           0xf1f00	                         nop dword [rax]	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4003df8	    0x892d00000000	            mov dword [0x04003dfe], ebp 	       878	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4003dfe	      0x44897c2434	            mov dword [rsp + 0x34], r15d	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4003e03	      0xe9b8f8ffff	                           jmp 0x40036c0	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4003e08	     0xf1f84000000	                   nop dword [rax + rax]	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4003e10	          0x4489c0	                            mov eax, r8d	      1150	display.c	FUNCTION_2	ELSE_25
0x4003e13	            0x31db	                            xor ebx, ebx	      1150	display.c	FUNCTION_2	ELSE_25
0x4003e15	      0xe941fdffff	                           jmp 0x4003b5b	      1150	display.c	FUNCTION_2	ELSE_25
0x4003e1a	      0xe800000000	                          call 0x4003e1f	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4003e1f	          0x4885c0	                           test rax, rax	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4003e22	     0xf8439060000	                            je 0x4004461	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4003e28	    0x48833d000000	               cmp qword [0x04003e30], 0	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4003e30	     0xf842b060000	                            je 0x4004461	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4003e36	      0x488b442408	                mov rax, qword [rsp + 8]	       543	display.c	FUNCTION_2	IF_4
0x4003e3b	    0xc70500000000	               mov dword [0x04003e45], 1	       545	display.c	FUNCTION_2	IF_4
0x4003e45	    0x41bc01000000	                             mov r12d, 1	       545	display.c	FUNCTION_2	IF_4
0x4003e4b	      0xbd01000000	                              mov ebp, 1	       543	display.c	FUNCTION_2	IF_4
0x4003e50	          0xc6002a	                    mov byte [rax], 0x2a	       543	display.c	FUNCTION_2	IF_4
0x4003e53	        0xc6400100	                   mov byte [rax + 1], 0	       544	display.c	FUNCTION_2	IF_4
0x4003e57	    0x488b05000000	            mov rax, qword [0x04003e5e] 	       544	display.c	FUNCTION_2	IF_4
0x4003e5e	          0x488b10	                    mov rdx, qword [rax]	       544	display.c	FUNCTION_2	IF_4
0x4003e61	      0xe952efffff	                           jmp 0x4002db8	       544	display.c	FUNCTION_2	IF_4
0x4003e66	            0x31c0	                            xor eax, eax	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4003e68	            0x31ff	                            xor edi, edi	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4003e6a	      0xe8d1c1ffff	           call sym.init_line_structures	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4003e6f	    0x488b05000000	            mov rax, qword [0x04003e76] 	      1808	display.c	FUNCTION_3	IF_1
0x4003e76	          0x488b10	                    mov rdx, qword [rax]	      1808	display.c	FUNCTION_3	IF_1
0x4003e79	          0x4885d2	                           test rdx, rdx	      1808	display.c	FUNCTION_3	IF_1
0x4003e7c	            0x7403	                            je 0x4003e81	      1808	display.c	FUNCTION_3	IF_1
0x4003e7e	          0xc60200	                       mov byte [rdx], 0	      1809	display.c	FUNCTION_3	IF_1
0x4003e81	        0x488b4008	                mov rax, qword [rax + 8]	      1813	display.c	FUNCTION_3	IF_2
0x4003e85	    0xc70500000000	               mov dword [0x04003e8f], 0	      1811	display.c	FUNCTION_3
0x4003e8f	    0xc70500000000	               mov dword [0x04003e99], 0	      1811	display.c	FUNCTION_3
0x4003e99	    0xc70500000000	               mov dword [0x04003ea3], 0	      1812	display.c	FUNCTION_3
0x4003ea3	    0xc70500000000	               mov dword [0x04003ead], 0	      1812	display.c	FUNCTION_3
0x4003ead	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x4003eb0	            0x740d	                            je 0x4003ebf	      1813	display.c	FUNCTION_3	IF_2
0x4003eb2	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x4003eb9	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x4003ebf	    0xc70500000000	               mov dword [0x04003ec9], 0	      1815	display.c	FUNCTION_3
0x4003ec9	      0xe99deeffff	                           jmp 0x4002d6b	      1815	display.c	FUNCTION_3
0x4003ece	             0x1c0	                            add eax, eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ed0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ed4	          0x894320	             mov dword [rbx + 0x20], eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ed7	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ed9	    0x488d34850000	                        lea rsi, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ee1	      0xe800000000	                          call 0x4003ee6	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ee6	        0x48894318	             mov qword [rbx + 0x18], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003eea	    0x488b1d000000	            mov rbx, qword [0x04003ef1] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ef1	      0xe96df9ffff	                           jmp 0x4003863	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003ef6	             0x1c0	                            add eax, eax	       917	display.c	FUNCTION_2
0x4003ef8	        0x498b7e08	                mov rdi, qword [r14 + 8]	       917	display.c	FUNCTION_2
0x4003efc	        0x41894610	             mov dword [r14 + 0x10], eax	       917	display.c	FUNCTION_2
0x4003f00	            0x4898	                                    cdqe	       917	display.c	FUNCTION_2
0x4003f02	    0x488d34850000	                        lea rsi, [rax*4]	       917	display.c	FUNCTION_2
0x4003f0a	      0xe800000000	                          call 0x4003f0f	       917	display.c	FUNCTION_2
0x4003f0f	        0x49894608	                mov qword [r14 + 8], rax	       917	display.c	FUNCTION_2
0x4003f13	    0x4c8b35000000	            mov r14, qword [0x04003f1a] 	       917	display.c	FUNCTION_2
0x4003f1a	      0xe95df2ffff	                           jmp 0x400317c	       917	display.c	FUNCTION_2
0x4003f1f	             0x1c0	                            add eax, eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f21	        0x488b7b08	                mov rdi, qword [rbx + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f25	          0x894310	             mov dword [rbx + 0x10], eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f28	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f2a	    0x488d34850000	                        lea rsi, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f32	      0xe800000000	                          call 0x4003f37	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f37	        0x48894308	                mov qword [rbx + 8], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f3b	    0x488b1d000000	            mov rbx, qword [0x04003f42] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f42	      0xe9fef8ffff	                           jmp 0x4003845	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f47	    0x892d00000000	            mov dword [0x04003f4d], ebp 	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003f4d	      0x44897c2434	            mov dword [rsp + 0x34], r15d	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003f52	      0xe90ef2ffff	                           jmp 0x4003165	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003f57	            0x89d1	                            mov ecx, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f59	    0x488b1d000000	            mov rbx, qword [0x04003f60] 	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4003f60	       0x502040000	                          add eax, 0x402	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f65	          0xc1f91f	                           sar ecx, 0x1f	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f68	          0xc1e916	                           shr ecx, 0x16	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f6b	             0x1ca	                            add edx, ecx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f6d	          0x488b3b	                    mov rdi, qword [rbx]	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4003f70	    0x81e2ff030000	                          and edx, 0x3ff	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f76	            0x29ca	                            sub edx, ecx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f78	            0x29d0	                            sub eax, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f7a	          0x4863f0	                         movsxd rsi, eax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4003f7d	    0x890500000000	            mov dword [0x04003f83], eax 	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003f83	      0xe800000000	                          call 0x4003f88	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4003f88	          0x488903	                    mov qword [rbx], rax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4003f8b	    0x488b1d000000	            mov rbx, qword [0x04003f92] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003f92	    0x486335000000	         movsxd rsi, dword [0x04003f99] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003f99	          0x488b3b	                    mov rdi, qword [rbx]	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003f9c	      0xe800000000	                          call 0x4003fa1	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003fa1	          0x488903	                    mov qword [rbx], rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003fa4	    0x8b1d00000000	            mov ebx, dword [0x04003faa] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003faa	      0x4889442408	                mov qword [rsp + 8], rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003faf	             0x1dd	                            add ebp, ebx	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003fb1	      0xe97eeeffff	                           jmp 0x4002e34	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4003fb6	             0x1c0	                            add eax, eax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fb8	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fbd	      0x4189442410	             mov dword [r12 + 0x10], eax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fc2	            0x4898	                                    cdqe	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fc4	    0x488d34850000	                        lea rsi, [rax*4]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fcc	      0xe800000000	                          call 0x4003fd1	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fd1	      0x4989442408	                mov qword [r12 + 8], rax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fd6	    0x4c8b25000000	            mov r12, qword [0x04003fdd] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fdd	      0xe922fbffff	                           jmp 0x4003b04	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003fe2	    0x8b0500000000	            mov eax, dword [0x04003fe8] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003fe8	          0x4489e2	                           mov edx, r12d	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003feb	          0x4139c4	                           cmp r12d, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003fee	     0xf841cfcffff	                            je 0x4003c10	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003ff4	    0x3b0500000000	            cmp eax, dword [0x04003ffa] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003ffa	            0x89c2	                            mov edx, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4003ffc	     0xf8e0efcffff	                           jle 0x4003c10	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004002	    0x443b25000000	           cmp r12d, dword [0x04004009] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004009	     0xf8d01fcffff	                           jge 0x4003c10	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400400f	    0x2b1500000000	             sub edx, dword [0x04004015]	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004015	    0x891500000000	            mov dword [0x0400401b], edx 	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400401b	      0xe9f0fbffff	                           jmp 0x4003c10	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004020	    0x448b25000000	           mov r12d, dword [0x04004027] 	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4004027	          0x4585e4	                         test r12d, r12d	       937	display.c	FUNCTION_2	IF_37	IF_38
0x400402a	     0xf844efcffff	                            je 0x4003c7e	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4004030	      0xe989f1ffff	                           jmp 0x40031be	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4004035	    0x391500000000	            cmp dword [0x0400403b], edx 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x400403b	     0xf8ea9fdffff	                           jle 0x4003dea	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004041	    0x8b3d00000000	            mov edi, dword [0x04004047] 	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_50
0x4004047	            0x29d7	                            sub edi, edx	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_50
0x4004049	      0xe800000000	                          call 0x400404e	      1223	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70	CALL_50
0x400404e	            0x89e8	                            mov eax, ebp	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004050	            0x29d8	                            sub eax, ebx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004052	            0x85db	                           test ebx, ebx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004054	     0xf8532060000	                           jne 0x400468c	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x400405a	    0x8b3500000000	            mov esi, dword [0x04004060] 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004060	      0xe9dffbffff	                           jmp 0x4003c44	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004065	        0x418d43ff	                      lea eax, [r11 - 1]	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004069	              0x99	                                     cdq	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x400406a	            0xf7fe	                                idiv esi	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x400406c	           0xfafc6	                           imul eax, esi	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x400406f	          0x4585c0	                           test r8d, r8d	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004072	            0x89c3	                            mov ebx, eax	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004074	     0xf84c4faffff	                            je 0x4003b3e	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x400407a	            0x85c0	                           test eax, eax	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x400407c	     0xf8ebcfaffff	                           jle 0x4003b3e	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004082	          0x4139c1	                            cmp r9d, eax	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004085	        0x410f4fd9	                          cmovg ebx, r9d	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004089	      0xe9b0faffff	                           jmp 0x4003b3e	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x400408e	            0x6690	                                     nop	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004090	            0x85db	                           test ebx, ebx	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4004092	     0xf85b8f1ffff	                           jne 0x4003250	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4004098	      0xe996f1ffff	                           jmp 0x4003233	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400409d	           0xf1f00	                         nop dword [rax]	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40040a0	    0x8b0500000000	            mov eax, dword [0x040040a6] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040a6	    0x390500000000	            cmp dword [0x040040ac], eax 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040ac	     0xf8e6af1ffff	                           jle 0x400321c	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040b2	      0xe800000000	                          call 0x40040b7	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040b7	        0x4883f801	                              cmp rax, 1	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040bb	     0xf865bf1ffff	                           jbe 0x400321c	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040c1	    0x448b1d000000	           mov r11d, dword [0x040040c8] 	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040c8	          0x4585db	                         test r11d, r11d	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040cb	     0xf854bf1ffff	                           jne 0x400321c	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040d1	    0x448b15000000	           mov r10d, dword [0x040040d8] 	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040d8	          0x4585d2	                         test r10d, r10d	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040db	     0xf853bf1ffff	                           jne 0x400321c	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040e1	    0x8b1500000000	            mov edx, dword [0x040040e7] 	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040e7	          0x4139d5	                           cmp r13d, edx	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040ea	     0xf842cf1ffff	                            je 0x400321c	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040f0	    0x8b0500000000	            mov eax, dword [0x040040f6] 	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040f6	    0x2b0500000000	             sub eax, dword [0x040040fc]	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x40040fc	    0x8b0d00000000	            mov ecx, dword [0x04004102] 	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004102	            0x29c8	                            sub eax, ecx	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004104	            0x39c2	                            cmp edx, eax	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004106	     0xf8e10f1ffff	                           jle 0x400321c	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400410c	          0x8d040a	                    lea eax, [rdx + rcx]	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400410f	    0x2b0500000000	             sub eax, dword [0x04004115]	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004115	    0x890500000000	            mov dword [0x0400411b], eax 	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x400411b	      0xe9fcf0ffff	                           jmp 0x400321c	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004120	    0x448b2d000000	           mov r13d, dword [0x04004127] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004127	    0x443b2d000000	           cmp r13d, dword [0x0400412e] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400412e	     0xf8efff0ffff	                           jle 0x4003233	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004134	    0x3b2d00000000	            cmp ebp, dword [0x0400413a] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400413a	     0xf8df3f0ffff	                           jge 0x4003233	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004140	      0xe800000000	                          call 0x4004145	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004145	        0x4883f801	                              cmp rax, 1	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004149	     0xf86a8040000	                           jbe 0x40045f7	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x400414f	    0x448b0d000000	            mov r9d, dword [0x04004156] 	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004156	          0x4585c9	                           test r9d, r9d	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004159	     0xf8598040000	                           jne 0x40045f7	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x400415f	    0x8b3d00000000	            mov edi, dword [0x04004165] 	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004165	    0x2b3d00000000	             sub edi, dword [0x0400416b]	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x400416b	            0x85ff	                           test edi, edi	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x400416d	     0xf84c0f0ffff	                            je 0x4003233	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x4004173	      0xe800000000	                          call 0x4004178	      1019	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	CALL_36
0x4004178	      0xe9b6f0ffff	                           jmp 0x4003233	      1019	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	CALL_36
0x400417d	           0xf1f00	                         nop dword [rax]	      1019	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	CALL_36
0x4004180	            0x89e8	                            mov eax, ebp	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004182	      0xe9bffaffff	                           jmp 0x4003c46	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004187	    0x8b0500000000	            mov eax, dword [0x0400418d] 	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x400418d	          0x4139c7	                           cmp r15d, eax	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x4004190	            0x7d5f	                           jge 0x40041f1	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x4004192	            0x39c3	                            cmp ebx, eax	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4004194	            0x7f5b	                            jg 0x40041f1	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4004196	          0x4c63e3	                         movsxd r12, ebx	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x4004199	        0x49c1e402	                              shl r12, 2	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400419d	            0xeb15	                           jmp 0x40041b4	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x400419f	              0x90	                                     nop	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041a0	      0xe800000000	                          call 0x40041a5	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40041a5	          0x83c301	                              add ebx, 1	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041a8	        0x4983c404	                              add r12, 4	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041ac	    0x391d00000000	            cmp dword [0x040041b2], ebx 	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041b2	            0x7c3d	                            jl 0x40041f1	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041b4	    0x488b05000000	            mov rax, qword [0x040041bb] 	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041bb	            0x89df	                            mov edi, ebx	      1048	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_37
0x40041bd	        0x488b5008	                mov rdx, qword [rax + 8]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041c1	        0x4a632c22	           movsxd rbp, dword [rdx + r12]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041c5	          0x480328	                    add rbp, qword [rax]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40041c8	      0xe800000000	                          call 0x40041cd	      1048	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_37
0x40041cd	            0x31ff	                            xor edi, edi	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x40041cf	          0x4889ee	                            mov rsi, rbp	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x40041d2	      0xe800000000	                          call 0x40041d7	      1049	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_38
0x40041d7	    0x391d00000000	            cmp dword [0x040041dd], ebx 	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40041dd	    0x8b3d00000000	            mov edi, dword [0x040041e3] 	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40041e3	            0x75bb	                           jne 0x40041a0	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40041e5	          0x4889ef	                            mov rdi, rbp	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40041e8	      0xe800000000	                          call 0x40041ed	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40041ed	            0x89c7	                            mov edi, eax	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40041ef	            0xebaf	                           jmp 0x40041a0	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40041f1	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x40041f5	    0x3b0500000000	            cmp eax, dword [0x040041fb] 	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x40041fb	    0x44893d000000	           mov dword [0x04004202], r15d 	      1054	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4004202	     0xf8445020000	                            je 0x400444d	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x4004208	        0x8b7c2434	            mov edi, dword [rsp + 0x34] 	      1061	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	CALL_41
0x400420c	      0xe800000000	                          call 0x4004211	      1061	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	CALL_41
0x4004211	      0xe800000000	                          call 0x4004216	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004216	        0x4883f801	                              cmp rax, 1	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400421a	            0x7410	                            je 0x400422c	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400421c	    0x448b05000000	            mov r8d, dword [0x04004223] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004223	          0x4585c0	                           test r8d, r8d	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004226	     0xf8421020000	                            je 0x400444d	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400422c	        0x8b7c2434	            mov edi, dword [rsp + 0x34] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004230	    0x448b25000000	           mov r12d, dword [0x04004237] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004237	            0x85ff	                           test edi, edi	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004239	     0xf85fc020000	                           jne 0x400453b	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400423f	          0x4585e4	                         test r12d, r12d	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004242	     0xf84f3020000	                            je 0x400453b	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4004248	    0x440125000000	            add dword [0x0400424f], r12d	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400424f	        0x8b742434	            mov esi, dword [rsp + 0x34] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004253	            0x85f6	                           test esi, esi	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004255	           0xf94c0	                                 sete al	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004258	          0x4585e4	                         test r12d, r12d	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400425b	           0xf9fc2	                                 setg dl	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400425e	            0x89d3	                            mov ebx, edx	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004260	            0x20c3	                              and bl, al	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004262	     0xf84c1000000	                            je 0x4004329	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004268	    0x8b0d00000000	            mov ecx, dword [0x0400426e] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400426e	            0x85c9	                           test ecx, ecx	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004270	     0xf8eff010000	                           jle 0x4004475	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004276	    0x8b2d00000000	            mov ebp, dword [0x0400427c] 	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x400427c	      0xe800000000	                          call 0x4004281	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004281	        0x4883f801	                              cmp rax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004285	            0x7610	                           jbe 0x4004297	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004287	    0x8b1500000000	            mov edx, dword [0x0400428d] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400428d	    0x8b0500000000	            mov eax, dword [0x04004293] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004293	            0x85d2	                           test edx, edx	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004295	            0x7409	                            je 0x40042a0	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004297	    0x8b0500000000	            mov eax, dword [0x0400429d] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400429d	          0x83c001	                              add eax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40042a0	    0x3b0500000000	            cmp eax, dword [0x040042a6] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40042a6	     0xf8ec9010000	                           jle 0x4004475	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40042ac	    0x48833d000000	               cmp qword [0x040042b4], 0	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40042b4	     0xf84bb010000	                            je 0x4004475	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40042ba	    0x488b3d000000	            mov rdi, qword [0x040042c1] 	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x40042c1	          0x4885ff	                           test rdi, rdi	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x40042c4	            0x740f	                            je 0x40042d5	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x40042c6	      0xba00000000	                              mov edx, 0	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x40042cb	      0xbe01000000	                              mov esi, 1	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x40042d0	      0xe800000000	                          call 0x40042d5	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x40042d5	    0x448b3d000000	           mov r15d, dword [0x040042dc] 	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x40042dc	          0x4585ff	                         test r15d, r15d	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x40042df	     0xf8552030000	                           jne 0x4004637	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x40042e5	    0x488b3d000000	            mov rdi, qword [0x040042ec] 	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x40042ec	          0x4101ec	                           add r12d, ebp	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40042ef	          0x4489e6	                           mov esi, r12d	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x40042f2	      0xe800000000	                          call 0x40042f7	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x40042f7	      0xe800000000	                          call 0x40042fc	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x40042fc	        0x4883f801	                              cmp rax, 1	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004300	            0x7610	                           jbe 0x4004312	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004302	    0x448b35000000	           mov r14d, dword [0x04004309] 	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004309	          0x4585f6	                         test r14d, r14d	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400430c	     0xf8439030000	                            je 0x400464b	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004312	    0x440325000000	            add r12d, dword [0x04004319]	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x4004319	            0x89d8	                            mov eax, ebx	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x400431b	    0x448925000000	           mov dword [0x04004322], r12d 	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x4004322	    0x448b25000000	           mov r12d, dword [0x04004329] 	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x4004329	    0x488b15000000	            mov rdx, qword [0x04004330] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4004330	      0x48634c2434	         movsxd rcx, dword [rsp + 0x34] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4004335	    0x8b2d00000000	            mov ebp, dword [0x0400433b] 	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400433b	        0x488b5208	                mov rdx, qword [rdx + 8]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400433f	          0x8b1c8a	            mov ebx, dword [rdx + rcx*4]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4004342	            0x29dd	                            sub ebp, ebx	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4004344	          0x4585e4	                         test r12d, r12d	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4004347	            0x7408	                            je 0x4004351	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4004349	            0x84c0	                             test al, al	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x400434b	     0xf853f010000	                           jne 0x4004490	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4004351	      0xe800000000	                          call 0x4004356	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004356	        0x4883f801	                              cmp rax, 1	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x400435a	            0x760c	                           jbe 0x4004368	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x400435c	    0x448b25000000	           mov r12d, dword [0x04004363] 	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004363	          0x4585e4	                         test r12d, r12d	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004366	            0x740c	                            je 0x4004374	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004368	    0x392d00000000	            cmp dword [0x0400436e], ebp 	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x400436e	     0xf840af9ffff	                            je 0x4003c7e	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004374	    0x488b05000000	            mov rax, qword [0x0400437b] 	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x400437b	          0x4863f3	                         movsxd rsi, ebx	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x400437e	            0x89ef	                            mov edi, ebp	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004380	          0x480330	                    add rsi, qword [rax]	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004383	      0xe800000000	                          call 0x4004388	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004388	      0xe9f1f8ffff	                           jmp 0x4003c7e	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x400438d	    0x48c705000000	               mov qword [0x04004398], 0	       522	display.c	FUNCTION_2	IF_2
0x4004398	      0xe9c0e9ffff	                           jmp 0x4002d5d	       522	display.c	FUNCTION_2	IF_2
0x400439d	             0x1c0	                            add eax, eax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400439f	        0x488b7b08	                mov rdi, qword [rbx + 8]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043a3	          0x894310	             mov dword [rbx + 0x10], eax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043a6	            0x4898	                                    cdqe	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043a8	    0x488d34850000	                        lea rsi, [rax*4]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043b0	      0xe800000000	                          call 0x40043b5	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043b5	        0x48894308	                mov qword [rbx + 8], rax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043b9	    0x488b1d000000	            mov rbx, qword [0x040043c0] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043c0	      0xe928f4ffff	                           jmp 0x40037ed	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40043c5	      0xbe0a000000	                            mov esi, 0xa	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x40043ca	          0x4c89ef	                            mov rdi, r13	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x40043cd	      0xe800000000	                          call 0x40043d2	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x40043d2	          0x4885c0	                           test rax, rax	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x40043d5	     0xf8430020000	                            je 0x400460b	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x40043db	    0x448b15000000	           mov r10d, dword [0x040043e2] 	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x40043e2	        0x488d5801	                      lea rbx, [rax + 1]	       586	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x40043e6	          0x4585d2	                         test r10d, r10d	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x40043e9	     0xf85b1010000	                           jne 0x40045a0	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x40043ef	          0x4889df	                            mov rdi, rbx	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x40043f2	      0xe800000000	                          call 0x40043f7	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x40043f7	             0x1c5	                            add ebp, eax	       599	display.c	FUNCTION_2	ELSE_1
0x40043f9	          0x4989c5	                            mov r13, rax	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x40043fc	    0x890500000000	            mov dword [0x04004402], eax 	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4004402	          0x8d4502	                      lea eax, [rbp + 2]	       599	display.c	FUNCTION_2	ELSE_1
0x4004405	    0x3b0500000000	            cmp eax, dword [0x0400440b] 	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x400440b	     0xf8d38010000	                           jge 0x4004549	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x4004411	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       126	string3.h	FUNCTION_33	CALL_3
0x4004416	          0x4963d5	                        movsxd rdx, r13d	       126	string3.h	FUNCTION_33	CALL_3
0x4004419	          0x4889de	                            mov rsi, rbx	       126	string3.h	FUNCTION_33	CALL_3
0x400441c	        0x4b8d3c27	                    lea rdi, [r15 + r12]	       126	string3.h	FUNCTION_33	CALL_3
0x4004420	      0xe800000000	                          call 0x4004425	       126	string3.h	FUNCTION_33	CALL_3
0x4004425	          0x4863c5	                         movsxd rax, ebp	       608	display.c	FUNCTION_2	ELSE_1
0x4004428	    0xc70500000000	               mov dword [0x04004432], 0	       609	display.c	FUNCTION_2	ELSE_1
0x4004432	          0x4889c7	                            mov rdi, rax	       608	display.c	FUNCTION_2	ELSE_1
0x4004435	        0x48890424	                    mov qword [rsp], rax	       608	display.c	FUNCTION_2	ELSE_1
0x4004439	      0x41c6043f00	                 mov byte [r15 + rdi], 0	       608	display.c	FUNCTION_2	ELSE_1
0x400443e	    0xc70500000000	               mov dword [0x04004448], 0	       609	display.c	FUNCTION_2	ELSE_1
0x4004448	      0xe91ceaffff	                           jmp 0x4002e69	       609	display.c	FUNCTION_2	ELSE_1
0x400444d	    0x448b25000000	           mov r12d, dword [0x04004454] 	       609	display.c	FUNCTION_2	ELSE_1
0x4004454	      0xe9f6fdffff	                           jmp 0x400424f	       609	display.c	FUNCTION_2	ELSE_1
0x4004459	          0x4589e7	                          mov r15d, r12d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400445c	      0xe9f7eaffff	                           jmp 0x4002f58	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4004461	    0x488b05000000	            mov rax, qword [0x04004468] 	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4004468	          0x4531e4	                          xor r12d, r12d	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x400446b	            0x31ed	                            xor ebp, ebp	       536	display.c	FUNCTION_2
0x400446d	          0x488b10	                    mov rdx, qword [rax]	       536	display.c	FUNCTION_2
0x4004470	      0xe943e9ffff	                           jmp 0x4002db8	       536	display.c	FUNCTION_2
0x4004475	    0x488b15000000	            mov rdx, qword [0x0400447c] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400447c	      0x4863442434	         movsxd rax, dword [rsp + 0x34] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4004481	    0x8b2d00000000	            mov ebp, dword [0x04004487] 	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4004487	        0x488b5208	                mov rdx, qword [rdx + 8]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400448b	          0x8b1c82	            mov ebx, dword [rdx + rax*4]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400448e	            0x29dd	                            sub ebp, ebx	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4004490	    0x392d00000000	            cmp dword [0x04004496], ebp 	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4004496	     0xf8eb5feffff	                           jle 0x4004351	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x400449c	      0xe800000000	                          call 0x40044a1	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044a1	        0x4883f801	                              cmp rax, 1	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044a5	          0x4189ec	                           mov r12d, ebp	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044a8	            0x7630	                           jbe 0x40044da	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044aa	    0x448b2d000000	           mov r13d, dword [0x040044b1] 	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044b1	          0x4585ed	                         test r13d, r13d	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044b4	            0x7524	                           jne 0x40044da	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044b6	    0x488b05000000	            mov rax, qword [0x040044bd] 	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044bd	          0x4863fb	                         movsxd rdi, ebx	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044c0	      0xb901000000	                              mov ecx, 1	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044c5	            0x89ea	                            mov edx, ebp	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044c7	            0x31f6	                            xor esi, esi	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044c9	          0x480338	                    add rdi, qword [rax]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044cc	      0xe87fbdffff	                  call sym._rl_col_width	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044d1	    0x2b0500000000	             sub eax, dword [0x040044d7]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044d7	          0x4189c4	                           mov r12d, eax	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x40044da	          0x4585e4	                         test r12d, r12d	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x40044dd	     0xf886efeffff	                            js 0x4004351	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x40044e3	    0x8b0500000000	            mov eax, dword [0x040044e9] 	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x40044e9	          0x4139c4	                           cmp r12d, eax	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x40044ec	     0xf8d5ffeffff	                           jge 0x4004351	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x40044f2	          0x4429e0	                           sub eax, r12d	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x40044f5	            0x89c7	                            mov edi, eax	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x40044f7	      0xe800000000	                          call 0x40044fc	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x40044fc	    0x448925000000	           mov dword [0x04004503], r12d 	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4004503	      0xe949feffff	                           jmp 0x4004351	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4004508	     0xf1f84000000	                   nop dword [rax + rax]	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4004510	      0xe800000000	                          call 0x4004515	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4004515	        0x4883f801	                              cmp rax, 1	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4004519	            0x760e	                           jbe 0x4004529	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x400451b	    0x8b1d00000000	            mov ebx, dword [0x04004521] 	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4004521	            0x85db	                           test ebx, ebx	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4004523	     0xf84ea000000	                            je 0x4004613	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x4004529	    0x8b0500000000	            mov eax, dword [0x0400452f] 	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x400452f	        0x498b4e08	                mov rcx, qword [r14 + 8]	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x4004533	          0x8d68ff	                      lea ebp, [rax - 1]	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x4004536	      0xe999ecffff	                           jmp 0x40031d4	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x400453b	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400453f	            0x85c0	                           test eax, eax	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004541	           0xf94c0	                                 sete al	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004544	      0xe9e0fdffff	                           jmp 0x4004329	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004549	            0x89c1	                            mov ecx, eax	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x400454b	    0x4c8b35000000	            mov r14, qword [0x04004552] 	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4004552	    0x8d9502040000	                  lea edx, [rbp + 0x402]	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4004558	          0xc1f91f	                           sar ecx, 0x1f	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x400455b	          0xc1e916	                           shr ecx, 0x16	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x400455e	             0x1c8	                            add eax, ecx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4004560	          0x498b3e	                    mov rdi, qword [r14]	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x4004563	      0x25ff030000	                          and eax, 0x3ff	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4004568	            0x29c8	                            sub eax, ecx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x400456a	            0x29c2	                            sub edx, eax	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x400456c	          0x4863f2	                         movsxd rsi, edx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x400456f	    0x893500000000	            mov dword [0x04004575], esi 	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x4004575	      0xe800000000	                          call 0x400457a	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x400457a	          0x498906	                    mov qword [r14], rax	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x400457d	    0x4c8b35000000	            mov r14, qword [0x04004584] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4004584	    0x486335000000	         movsxd rsi, dword [0x0400458b] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x400458b	          0x498b3e	                    mov rdi, qword [r14]	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x400458e	      0xe800000000	                          call 0x4004593	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4004593	      0x4889442408	                mov qword [rsp + 8], rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4004598	          0x498906	                    mov qword [r14], rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x400459b	      0xe971feffff	                           jmp 0x4004411	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x40045a0	          0x4989de	                            mov r14, rbx	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x40045a3	          0x4c89ef	                            mov rdi, r13	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x40045a6	        0x48890424	                    mov qword [rsp], rax	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x40045aa	          0x4d29ee	                            sub r14, r13	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x40045ad	          0x4489f6	                           mov esi, r14d	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x40045b0	      0xe800000000	                          call 0x40045b5	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x40045b5	        0x4183fe01	                             cmp r14d, 1	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x40045b9	            0x7e0e	                           jle 0x40045c9	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x40045bb	        0x488b0424	                    mov rax, qword [rsp]	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x40045bf	        0x8078ff0d	                 cmp byte [rax - 1], 0xd	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x40045c3	     0xf8426feffff	                            je 0x40043ef	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x40045c9	    0x488b3d000000	            mov rdi, qword [0x040045d0] 	      2481	display.c	FUNCTION_20	IF_1
0x40045d0	          0x4885ff	                           test rdi, rdi	      2481	display.c	FUNCTION_20	IF_1
0x40045d3	     0xf8416feffff	                            je 0x40043ef	      2481	display.c	FUNCTION_20	IF_1
0x40045d9	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40045de	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40045e3	      0xe800000000	                          call 0x40045e8	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40045e8	    0xc70500000000	               mov dword [0x040045f2], 0	      2488	display.c	FUNCTION_20	IF_1
0x40045f2	      0xe9f8fdffff	                           jmp 0x40043ef	      2488	display.c	FUNCTION_20	IF_1
0x40045f7	    0x8b3d00000000	            mov edi, dword [0x040045fd] 	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x40045fd	          0x4401ef	                           add edi, r13d	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4004600	    0x2b3d00000000	             sub edi, dword [0x04004606]	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4004606	      0xe960fbffff	                           jmp 0x400416b	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400460b	          0x4c89eb	                            mov rbx, r13	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400460e	      0xe9dcfdffff	                           jmp 0x40043ef	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4004613	    0x8b3500000000	            mov esi, dword [0x04004619] 	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x4004619	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x400461e	            0x31d2	                            xor edx, edx	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x4004620	      0xe800000000	                          call 0x4004625	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x4004625	    0x4c8b35000000	            mov r14, qword [0x0400462c] 	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x400462c	            0x89c5	                            mov ebp, eax	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x400462e	        0x498b4e08	                mov rcx, qword [r14 + 8]	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x4004632	      0xe99debffff	                           jmp 0x40031d4	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x4004637	      0xbe01000000	                              mov esi, 1	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x400463c	      0xbf00000000	                              mov edi, 0	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4004641	      0xe800000000	                          call 0x4004646	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4004646	      0xe99afcffff	                           jmp 0x40042e5	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x400464b	    0x488b3d000000	            mov rdi, qword [0x04004652] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004652	          0x4489e2	                           mov edx, r12d	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004655	      0xb901000000	                              mov ecx, 1	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400465a	            0x31f6	                            xor esi, esi	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400465c	      0xe8efbbffff	                  call sym._rl_col_width	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004661	    0x448b25000000	           mov r12d, dword [0x04004668] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004668	          0x4429e0	                           sub eax, r12d	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400466b	     0x30500000000	             add eax, dword [0x04004671]	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004671	    0x890500000000	            mov dword [0x04004677], eax 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004677	            0x89d8	                            mov eax, ebx	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4004679	      0xe9abfcffff	                           jmp 0x4004329	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400467e	          0x4489c0	                            mov eax, r8d	      1150	display.c	FUNCTION_2	ELSE_25
0x4004681	     0xf84d4f4ffff	                            je 0x4003b5b	      1195	display.c	FUNCTION_2	ELSE_25
0x4004687	      0xe9cdf4ffff	                           jmp 0x4003b59	      1195	display.c	FUNCTION_2	ELSE_25
0x400468c	            0x31c9	                            xor ecx, ecx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x400468e	      0xe9b3f5ffff	                           jmp 0x4003c46	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004693	      0xe800000000	                          call 0x4004698	      1254	display.c	FUNCTION_2
0x4004698	            0x89e8	                            mov eax, ebp	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400469a	    0x2b0500000000	             sub eax, dword [0x040046a0]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40046a0	      0xe9a5ebffff	                           jmp 0x400324a	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x40046a5	      0xe800000000	                          call 0x40046aa	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046aa	        0x4883f801	                              cmp rax, 1	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046ae	     0xf865cebffff	                           jbe 0x4003210	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046b4	    0x833d00000000	               cmp dword [0x040046bb], 0	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046bb	     0xf854febffff	                           jne 0x4003210	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046c1	    0x833d00000000	               cmp dword [0x040046c8], 0	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046c8	     0xf8542ebffff	                           jne 0x4003210	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046ce	    0x8b0500000000	            mov eax, dword [0x040046d4] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046d4	          0x4139c5	                           cmp r13d, eax	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046d7	     0xf8433ebffff	                            je 0x4003210	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046dd	    0x3b0500000000	            cmp eax, dword [0x040046e3] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046e3	     0xf8e27ebffff	                           jle 0x4003210	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046e9	    0x443b2d000000	           cmp r13d, dword [0x040046f0] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046f0	     0xf8d1aebffff	                           jge 0x4003210	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046f6	    0x2b0500000000	             sub eax, dword [0x040046fc]	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40046fc	          0x4585ff	                         test r15d, r15d	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x40046ff	    0x890500000000	            mov dword [0x04004705], eax 	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4004705	     0xf8531ebffff	                           jne 0x400323c	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400470b	      0xe917ebffff	                           jmp 0x4003227	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
init_line_structures	ELSE,1:CALL,8:SWITCH,0:IF,5:functions,0:FOR,1:WHILE,0:DO,0	103
0x4000040	              0x55	                                push rbp	       450	display.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	       450	display.c	FUNCTION_1
0x4000042	            0x89fd	                            mov ebp, edi	       450	display.c	FUNCTION_1
0x4000044	        0x4883ec08	                              sub rsp, 8	       450	display.c	FUNCTION_1
0x4000048	    0x488b05000000	            mov rax, qword [0x0400004f] 	       453	display.c	FUNCTION_1	IF_1
0x400004f	        0x48833800	                      cmp qword [rax], 0	       453	display.c	FUNCTION_1	IF_1
0x4000053	    0x8b0500000000	            mov eax, dword [0x04000059] 	       455	display.c	FUNCTION_1	IF_1	IF_2
0x4000059	     0xf84c9000000	                            je 0x4000128	       453	display.c	FUNCTION_1	IF_1
0x400005f	            0x39c7	                            cmp edi, eax	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000061	            0x7f6d	                            jg 0x40000d0	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000063	            0x39c5	                            cmp ebp, eax	       469	display.c	FUNCTION_1	FOR_1
0x4000065	    0x488b1d000000	            mov rbx, qword [0x0400006c] 	       469	display.c	FUNCTION_1	FOR_1
0x400006c	            0x7d3c	                           jge 0x40000aa	       469	display.c	FUNCTION_1	FOR_1
0x400006e	          0x4863d5	                         movsxd rdx, ebp	       469	display.c	FUNCTION_1	FOR_1
0x4000071	            0xf7d5	                                 not ebp	       469	display.c	FUNCTION_1	FOR_1
0x4000073	    0x4c8b05000000	              mov r8, qword [0x0400007a]	       469	display.c	FUNCTION_1	FOR_1
0x400007a	        0x8d740500	                    lea esi, [rbp + rax]	       469	display.c	FUNCTION_1	FOR_1
0x400007e	        0x488d4201	                      lea rax, [rdx + 1]	       469	display.c	FUNCTION_1	FOR_1
0x4000082	          0x4801c6	                            add rsi, rax	       469	display.c	FUNCTION_1	FOR_1
0x4000085	            0xeb0d	                           jmp 0x4000094	       469	display.c	FUNCTION_1	FOR_1
0x4000087	    0x660f1f840000	                    nop word [rax + rax]	       469	display.c	FUNCTION_1	FOR_1
0x4000090	        0x4883c001	                              add rax, 1	       469	display.c	FUNCTION_1	FOR_1
0x4000094	          0x488b0b	                    mov rcx, qword [rbx]	       471	display.c	FUNCTION_1	FOR_1
0x4000097	          0x4839f0	                            cmp rax, rsi	       469	display.c	FUNCTION_1	FOR_1
0x400009a	        0xc6041100	                 mov byte [rcx + rdx], 0	       471	display.c	FUNCTION_1	FOR_1
0x400009e	          0x498b08	                     mov rcx, qword [r8]	       472	display.c	FUNCTION_1	FOR_1
0x40000a1	        0xc6041101	                 mov byte [rcx + rdx], 1	       472	display.c	FUNCTION_1	FOR_1
0x40000a5	          0x4889c2	                            mov rdx, rax	       472	display.c	FUNCTION_1	FOR_1
0x40000a8	            0x75e6	                           jne 0x4000090	       469	display.c	FUNCTION_1	FOR_1
0x40000aa	      0x48837b0800	                  cmp qword [rbx + 8], 0	       475	display.c	FUNCTION_1	IF_5
0x40000af	     0xf84b2000000	                            je 0x4000167	       475	display.c	FUNCTION_1	IF_5
0x40000b5	    0xc70500000000	               mov dword [0x040000bf], 1	       493	display.c	FUNCTION_1
0x40000bf	        0x4883c408	                              add rsp, 8	       494	display.c	FUNCTION_1
0x40000c3	              0x5b	                                 pop rbx	       494	display.c	FUNCTION_1
0x40000c4	              0x5d	                                 pop rbp	       494	display.c	FUNCTION_1
0x40000c5	              0xc3	                                     ret	       494	display.c	FUNCTION_1
0x40000c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       494	display.c	FUNCTION_1
0x40000d0	             0x1c0	                            add eax, eax	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000d2	            0x39c7	                            cmp edi, eax	       463	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x40000d4	            0x7f42	                            jg 0x4000118	       463	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x40000d6	    0x890500000000	            mov dword [0x040000dc], eax 	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000dc	    0x488b1d000000	            mov rbx, qword [0x040000e3] 	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000e3	          0x4863f0	                         movsxd rsi, eax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000e6	          0x488b3b	                    mov rdi, qword [rbx]	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000e9	      0xe800000000	                          call 0x40000ee	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000ee	          0x488903	                    mov qword [rbx], rax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000f1	    0x488b1d000000	            mov rbx, qword [0x040000f8] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000f8	    0x486335000000	         movsxd rsi, dword [0x040000ff] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000ff	          0x488b3b	                    mov rdi, qword [rbx]	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000102	      0xe800000000	                          call 0x4000107	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000107	          0x488903	                    mov qword [rbx], rax	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x400010a	    0x8b0500000000	            mov eax, dword [0x04000110] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000110	      0xe94effffff	                           jmp 0x4000063	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000115	           0xf1f00	                         nop dword [rax]	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000118	    0x893d00000000	            mov dword [0x0400011e], edi 	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x400011e	            0x89f8	                            mov eax, edi	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000120	            0xebba	                           jmp 0x40000dc	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000122	    0x660f1f440000	                    nop word [rax + rax]	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000128	            0x39f8	                            cmp eax, edi	       455	display.c	FUNCTION_1	IF_1	IF_2
0x400012a	            0x7d08	                           jge 0x4000134	       455	display.c	FUNCTION_1	IF_1	IF_2
0x400012c	    0x893d00000000	            mov dword [0x04000132], edi 	       456	display.c	FUNCTION_1	IF_1	IF_2
0x4000132	            0x89f8	                            mov eax, edi	       456	display.c	FUNCTION_1	IF_1	IF_2
0x4000134	    0x488b1d000000	            mov rbx, qword [0x0400013b] 	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400013b	          0x4863f8	                         movsxd rdi, eax	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400013e	      0xe800000000	                          call 0x4000143	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x4000143	    0x48633d000000	         movsxd rdi, dword [0x0400014a] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x400014a	          0x488903	                    mov qword [rbx], rax	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400014d	    0x488b1d000000	            mov rbx, qword [0x04000154] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000154	      0xe800000000	                          call 0x4000159	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000159	          0x488903	                    mov qword [rbx], rax	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x400015c	    0x8b0500000000	            mov eax, dword [0x04000162] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000162	      0xe9fcfeffff	                           jmp 0x4000063	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000167	    0x488b05000000	            mov rax, qword [0x0400016e] 	       478	display.c	FUNCTION_1	IF_5
0x400016e	    0xc74310000100	          mov dword [rbx + 0x10], 0x100 	       478	display.c	FUNCTION_1	IF_5
0x4000175	    0xc74010000100	          mov dword [rax + 0x10], 0x100 	       478	display.c	FUNCTION_1	IF_5
0x400017c	        0x48634310	         movsxd rax, dword [rbx + 0x10] 	       481	display.c	FUNCTION_1	IF_5
0x4000180	    0x488d3c850000	                        lea rdi, [rax*4]	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000188	          0x894320	             mov dword [rbx + 0x20], eax	       481	display.c	FUNCTION_1	IF_5
0x400018b	      0xe800000000	                          call 0x4000190	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000190	        0x48894318	             mov qword [rbx + 0x18], rax	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000194	    0x488b1d000000	            mov rbx, qword [0x0400019b] 	       484	display.c	FUNCTION_1	IF_5
0x400019b	        0x48634310	         movsxd rax, dword [rbx + 0x10] 	       484	display.c	FUNCTION_1	IF_5
0x400019f	    0x488d3c850000	                        lea rdi, [rax*4]	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x40001a7	          0x894320	             mov dword [rbx + 0x20], eax	       484	display.c	FUNCTION_1	IF_5
0x40001aa	      0xe800000000	                          call 0x40001af	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x40001af	        0x48894318	             mov qword [rbx + 0x18], rax	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x40001b3	    0x488b1d000000	            mov rbx, qword [0x040001ba] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001ba	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001be	        0x48c1e702	                              shl rdi, 2	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001c2	      0xe800000000	                          call 0x40001c7	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001c7	        0x48894308	                mov qword [rbx + 8], rax	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001cb	    0x488b1d000000	            mov rbx, qword [0x040001d2] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001d2	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001d6	        0x48c1e702	                              shl rdi, 2	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001da	      0xe800000000	                          call 0x40001df	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001df	    0x488b15000000	            mov rdx, qword [0x040001e6] 	       490	display.c	FUNCTION_1	IF_5
0x40001e6	        0x48894308	                mov qword [rbx + 8], rax	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001ea	    0x488b05000000	            mov rax, qword [0x040001f1] 	       490	display.c	FUNCTION_1	IF_5
0x40001f1	        0x488b5208	                mov rdx, qword [rdx + 8]	       490	display.c	FUNCTION_1	IF_5
0x40001f5	        0x488b4008	                mov rax, qword [rax + 8]	       490	display.c	FUNCTION_1	IF_5
0x40001f9	    0xc70200000000	                      mov dword [rdx], 0	       490	display.c	FUNCTION_1	IF_5
0x40001ff	    0xc70000000000	                      mov dword [rax], 0	       490	display.c	FUNCTION_1	IF_5
0x4000205	      0xe9abfeffff	                           jmp 0x40000b5	       490	display.c	FUNCTION_1	IF_5
rl_save_prompt	ELSE,0:CALL,0:SWITCH,0:IF,0:functions,0:FOR,0:WHILE,0:DO,0	25
0x4001220	    0x488b05000000	            mov rax, qword [0x04001227] 	      2237	display.c	FUNCTION_11
0x4001227	    0x48c705000000	               mov qword [0x04001232], 0	      2246	display.c	FUNCTION_11
0x4001232	    0x488905000000	            mov qword [0x04001239], rax 	      2237	display.c	FUNCTION_11
0x4001239	    0x488b05000000	            mov rax, qword [0x04001240] 	      2238	display.c	FUNCTION_11
0x4001240	    0x48c705000000	               mov qword [0x0400124b], 0	      2246	display.c	FUNCTION_11
0x400124b	    0x488905000000	            mov qword [0x04001252], rax 	      2238	display.c	FUNCTION_11
0x4001252	    0x8b0500000000	            mov eax, dword [0x04001258] 	      2239	display.c	FUNCTION_11
0x4001258	    0xc70500000000	               mov dword [0x04001262], 0	      2248	display.c	FUNCTION_11
0x4001262	    0x890500000000	            mov dword [0x04001268], eax 	      2239	display.c	FUNCTION_11
0x4001268	    0x8b0500000000	            mov eax, dword [0x0400126e] 	      2240	display.c	FUNCTION_11
0x400126e	    0xc70500000000	               mov dword [0x04001278], 0	      2247	display.c	FUNCTION_11
0x4001278	    0x890500000000	            mov dword [0x0400127e], eax 	      2240	display.c	FUNCTION_11
0x400127e	    0x8b0500000000	            mov eax, dword [0x04001284] 	      2241	display.c	FUNCTION_11
0x4001284	    0xc70500000000	               mov dword [0x0400128e], 0	      2248	display.c	FUNCTION_11
0x400128e	    0x890500000000	            mov dword [0x04001294], eax 	      2241	display.c	FUNCTION_11
0x4001294	    0x8b0500000000	            mov eax, dword [0x0400129a] 	      2242	display.c	FUNCTION_11
0x400129a	    0xc70500000000	               mov dword [0x040012a4], 0	      2248	display.c	FUNCTION_11
0x40012a4	    0x890500000000	            mov dword [0x040012aa], eax 	      2242	display.c	FUNCTION_11
0x40012aa	    0x8b0500000000	            mov eax, dword [0x040012b0] 	      2243	display.c	FUNCTION_11
0x40012b0	    0xc70500000000	               mov dword [0x040012ba], 0	      2249	display.c	FUNCTION_11
0x40012ba	    0x890500000000	            mov dword [0x040012c0], eax 	      2243	display.c	FUNCTION_11
0x40012c0	    0x8b0500000000	            mov eax, dword [0x040012c6] 	      2244	display.c	FUNCTION_11
0x40012c6	    0xc70500000000	               mov dword [0x040012d0], 0	      2249	display.c	FUNCTION_11
0x40012d0	    0x890500000000	            mov dword [0x040012d6], eax 	      2244	display.c	FUNCTION_11
0x40012d6	              0xc3	                                     ret	      2249	display.c	FUNCTION_11
_rl_current_display_line	ELSE,2:CALL,0:SWITCH,0:IF,2:functions,0:FOR,0:WHILE,0:DO,0	18
0x4004a30	    0x488b05000000	            mov rax, qword [0x04004a37] 	      2594	display.c	FUNCTION_24	IF_1
0x4004a37	    0x483905000000	            cmp qword [0x04004a3e], rax 	      2594	display.c	FUNCTION_24	IF_1
0x4004a3e	    0x8b0500000000	            mov eax, dword [0x04004a44] 	      2595	display.c	FUNCTION_24	IF_1
0x4004a44	            0x7422	                            je 0x4004a68	      2594	display.c	FUNCTION_24	IF_1
0x4004a46	    0x2b0500000000	             sub eax, dword [0x04004a4c]	      2597	display.c	FUNCTION_24	ELSE_1
0x4004a4c	            0x85c0	                           test eax, eax	      2599	display.c	FUNCTION_24	IF_2
0x4004a4e	            0x7e10	                           jle 0x4004a60	      2599	display.c	FUNCTION_24	IF_2
0x4004a50	              0x99	                                     cdq	      2600	display.c	FUNCTION_24	IF_2
0x4004a51	    0xf73d00000000	                 idiv dword [0x04004a57]	      2600	display.c	FUNCTION_24	IF_2
0x4004a57	          0x83c001	                              add eax, 1	      2600	display.c	FUNCTION_24	IF_2
0x4004a5a	              0xc3	                                     ret	      2600	display.c	FUNCTION_24	IF_2
0x4004a5b	       0xf1f440000	                   nop dword [rax + rax]	      2600	display.c	FUNCTION_24	IF_2
0x4004a60	            0x31c0	                            xor eax, eax	      2602	display.c	FUNCTION_24	ELSE_2
0x4004a62	              0xc3	                                     ret	      2605	display.c	FUNCTION_24
0x4004a63	       0xf1f440000	                   nop dword [rax + rax]	      2605	display.c	FUNCTION_24
0x4004a68	    0x2b0500000000	             sub eax, dword [0x04004a6e]	      2595	display.c	FUNCTION_24	IF_1
0x4004a6e	    0x2b0500000000	             sub eax, dword [0x04004a74]	      2595	display.c	FUNCTION_24	IF_1
0x4004a74	            0xebd6	                           jmp 0x4004a4c	      2595	display.c	FUNCTION_24	IF_1
rl_message	ELSE,0:CALL,9:SWITCH,0:IF,1:functions,0:FOR,0:WHILE,0:DO,0	64
0x40012e0	    0x4881ecd80000	                           sub rsp, 0xd8	      2147	display.c	FUNCTION_8
0x40012e7	            0x84c0	                             test al, al	      2147	display.c	FUNCTION_8
0x40012e9	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2147	display.c	FUNCTION_8
0x40012ee	      0x4889542430	             mov qword [rsp + 0x30], rdx	      2147	display.c	FUNCTION_8
0x40012f3	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      2147	display.c	FUNCTION_8
0x40012f8	      0x4c89442440	              mov qword [rsp + 0x40], r8	      2147	display.c	FUNCTION_8
0x40012fd	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      2147	display.c	FUNCTION_8
0x4001302	            0x7437	                            je 0x400133b	      2147	display.c	FUNCTION_8
0x4001304	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      2147	display.c	FUNCTION_8
0x4001309	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      2147	display.c	FUNCTION_8
0x400130e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      2147	display.c	FUNCTION_8
0x4001313	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      2147	display.c	FUNCTION_8
0x400131b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      2147	display.c	FUNCTION_8
0x4001323	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      2147	display.c	FUNCTION_8
0x400132b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      2147	display.c	FUNCTION_8
0x4001333	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      2147	display.c	FUNCTION_8
0x400133b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2147	display.c	FUNCTION_8
0x4001344	      0x4889442418	             mov qword [rsp + 0x18], rax	      2147	display.c	FUNCTION_8
0x4001349	            0x31c0	                            xor eax, eax	      2147	display.c	FUNCTION_8
0x400134b	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      2154	display.c	FUNCTION_8	CALL_1
0x4001353	          0x4989f8	                             mov r8, rdi	        77	stdio2.h	FUNCTION_40	CALL_2
0x4001356	          0x4989e1	                             mov r9, rsp	        77	stdio2.h	FUNCTION_40	CALL_2
0x4001359	      0xb980000000	                           mov ecx, 0x80	        77	stdio2.h	FUNCTION_40	CALL_2
0x400135e	      0xba01000000	                              mov edx, 1	        77	stdio2.h	FUNCTION_40	CALL_2
0x4001363	      0xbe7f000000	                           mov esi, 0x7f	        77	stdio2.h	FUNCTION_40	CALL_2
0x4001368	      0x4889442408	                mov qword [rsp + 8], rax	      2154	display.c	FUNCTION_8	CALL_1
0x400136d	      0x488d442420	                   lea rax, [rsp + 0x20]	      2154	display.c	FUNCTION_8	CALL_1
0x4001372	      0xbf00000000	                              mov edi, 0	        77	stdio2.h	FUNCTION_40	CALL_2
0x4001377	    0xc70424080000	                      mov dword [rsp], 8	      2154	display.c	FUNCTION_8	CALL_1
0x400137e	    0xc74424043000	               mov dword [rsp + 4], 0x30	      2154	display.c	FUNCTION_8	CALL_1
0x4001386	      0x4889442410	             mov qword [rsp + 0x10], rax	      2154	display.c	FUNCTION_8	CALL_1
0x400138b	      0xe800000000	                          call 0x4001390	        77	stdio2.h	FUNCTION_40	CALL_2
0x4001390	    0x48833d000000	               cmp qword [0x04001398], 0	      2168	display.c	FUNCTION_8	IF_1
0x4001398	            0x747e	                            je 0x4001418	      2168	display.c	FUNCTION_8	IF_1
0x400139a	            0x31c0	                            xor eax, eax	      2174	display.c	FUNCTION_8	CALL_8
0x400139c	    0x41b800000000	                              mov r8d, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40013a2	      0xb900000000	                              mov ecx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40013a7	      0xba00000000	                              mov edx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40013ac	      0xbe00000000	                              mov esi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40013b1	      0xbf00000000	                              mov edi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40013b6	    0x48c705000000	               mov qword [0x040013c1], 0	      2173	display.c	FUNCTION_8
0x40013c1	      0xe8caf0ffff	                  call sym.expand_prompt	      2174	display.c	FUNCTION_8	CALL_8
0x40013c6	          0x4885c0	                           test rax, rax	      2179	display.c	FUNCTION_8	CALL_9
0x40013c9	    0x488905000000	            mov qword [0x040013d0], rax 	      2174	display.c	FUNCTION_8	CALL_8
0x40013d0	    0x48c705000000	               mov qword [0x040013db], 0	      2178	display.c	FUNCTION_8
0x40013db	            0x7433	                            je 0x4001410	      2179	display.c	FUNCTION_8	CALL_9
0x40013dd	          0x4889c7	                            mov rdi, rax	      2179	display.c	FUNCTION_8	CALL_9
0x40013e0	      0xe800000000	                          call 0x40013e5	      2179	display.c	FUNCTION_8	CALL_9
0x40013e5	    0x890500000000	            mov dword [0x040013eb], eax 	      2179	display.c	FUNCTION_8	CALL_9
0x40013eb	    0xff1500000000	                 call qword [0x040013f1]	      2180	display.c	FUNCTION_8
0x40013f1	            0x31c0	                            xor eax, eax	      2183	display.c	FUNCTION_8
0x40013f3	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2183	display.c	FUNCTION_8
0x40013f8	    0x644833142528	                xor rdx, qword fs:[0x28]	      2183	display.c	FUNCTION_8
0x4001401	            0x7529	                           jne 0x400142c	      2183	display.c	FUNCTION_8
0x4001403	    0x4881c4d80000	                           add rsp, 0xd8	      2183	display.c	FUNCTION_8
0x400140a	              0xc3	                                     ret	      2183	display.c	FUNCTION_8
0x400140b	       0xf1f440000	                   nop dword [rax + rax]	      2183	display.c	FUNCTION_8
0x4001410	            0x31c0	                            xor eax, eax	      2179	display.c	FUNCTION_8	CALL_9
0x4001412	            0xebd1	                           jmp 0x40013e5	      2179	display.c	FUNCTION_8	CALL_9
0x4001414	         0xf1f4000	                         nop dword [rax]	      2179	display.c	FUNCTION_8	CALL_9
0x4001418	      0xe800000000	                          call 0x400141d	      2170	display.c	FUNCTION_8	IF_1	CALL_7
0x400141d	    0xc70500000000	               mov dword [0x04001427], 1	      2171	display.c	FUNCTION_8	IF_1
0x4001427	      0xe96effffff	                           jmp 0x400139a	      2171	display.c	FUNCTION_8	IF_1
0x400142c	      0xe800000000	                          call 0x4001431	      2183	display.c	FUNCTION_8
_rl_make_prompt_for_search	ELSE,1:CALL,8:SWITCH,0:IF,3:functions,0:FOR,0:WHILE,0:DO,0	72
0x4001570	            0x4154	                                push r12	      2277	display.c	FUNCTION_13
0x4001572	              0x55	                                push rbp	      2277	display.c	FUNCTION_13
0x4001573	          0x4189fc	                           mov r12d, edi	      2277	display.c	FUNCTION_13
0x4001576	              0x53	                                push rbx	      2277	display.c	FUNCTION_13
0x4001577	      0xe800000000	                          call 0x400157c	      2281	display.c	FUNCTION_13	CALL_1
0x400157c	    0x488b1d000000	            mov rbx, qword [0x04001583] 	      2286	display.c	FUNCTION_13	CALL_2
0x4001583	          0x4885db	                           test rbx, rbx	      2286	display.c	FUNCTION_13	CALL_2
0x4001586	     0xf84b4000000	                            je 0x4001640	      2286	display.c	FUNCTION_13	CALL_2
0x400158c	      0xbe0a000000	                            mov esi, 0xa	      2286	display.c	FUNCTION_13	CALL_2
0x4001591	          0x4889df	                            mov rdi, rbx	      2286	display.c	FUNCTION_13	CALL_2
0x4001594	      0xe800000000	                          call 0x4001599	      2286	display.c	FUNCTION_13	CALL_2
0x4001599	          0x4885c0	                           test rax, rax	      2287	display.c	FUNCTION_13	IF_1
0x400159c	            0x7462	                            je 0x4001600	      2287	display.c	FUNCTION_13	IF_1
0x400159e	        0x488d6801	                      lea rbp, [rax + 1]	      2298	display.c	FUNCTION_13	ELSE_1
0x40015a2	          0x4889ef	                            mov rdi, rbp	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x40015a5	      0xe800000000	                          call 0x40015aa	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x40015aa	          0x8d7802	                      lea edi, [rax + 2]	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x40015ad	          0x4889c3	                            mov rbx, rax	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x40015b0	          0x4863ff	                         movsxd rdi, edi	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x40015b3	      0xe800000000	                          call 0x40015b8	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x40015b8	            0x85db	                           test ebx, ebx	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x40015ba	          0x4889c2	                            mov rdx, rax	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x40015bd	            0x7529	                           jne 0x40015e8	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x40015bf	          0x4863db	                         movsxd rbx, ebx	      2303	display.c	FUNCTION_13	ELSE_1
0x40015c2	        0x4488241a	              mov byte [rdx + rbx], r12b	      2303	display.c	FUNCTION_13	ELSE_1
0x40015c6	      0xc6441a0100	             mov byte [rdx + rbx + 1], 0	      2304	display.c	FUNCTION_13	ELSE_1
0x40015cb	    0x8b0500000000	            mov eax, dword [0x040015d1] 	      2308	display.c	FUNCTION_13
0x40015d1	              0x5b	                                 pop rbx	      2310	display.c	FUNCTION_13
0x40015d2	              0x5d	                                 pop rbp	      2310	display.c	FUNCTION_13
0x40015d3	          0x83c001	                              add eax, 1	      2308	display.c	FUNCTION_13
0x40015d6	    0x890500000000	            mov dword [0x040015dc], eax 	      2308	display.c	FUNCTION_13
0x40015dc	          0x4889d0	                            mov rax, rdx	      2310	display.c	FUNCTION_13
0x40015df	            0x415c	                                 pop r12	      2310	display.c	FUNCTION_13
0x40015e1	              0xc3	                                     ret	      2310	display.c	FUNCTION_13
0x40015e2	    0x660f1f440000	                    nop word [rax + rax]	      2310	display.c	FUNCTION_13
0x40015e8	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_31	CALL_3
0x40015eb	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_31	CALL_3
0x40015ee	      0xe800000000	                          call 0x40015f3	       110	string3.h	FUNCTION_31	CALL_3
0x40015f3	          0x4889c2	                            mov rdx, rax	       110	string3.h	FUNCTION_31	CALL_3
0x40015f6	            0xebc7	                           jmp 0x40015bf	       110	string3.h	FUNCTION_31	CALL_3
0x40015f8	     0xf1f84000000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_31	CALL_3
0x4001600	          0x803b00	                       cmp byte [rbx], 0	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001603	            0x743b	                            je 0x4001640	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001605	          0x4889df	                            mov rdi, rbx	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001608	      0xe800000000	                          call 0x400160d	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x400160d	          0x8d7802	                      lea edi, [rax + 2]	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001610	          0x4889c3	                            mov rbx, rax	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001613	          0x4863ff	                         movsxd rdi, edi	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001616	      0xe800000000	                          call 0x400161b	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x400161b	            0x85db	                           test ebx, ebx	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x400161d	          0x4889c2	                            mov rdx, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001620	            0x7446	                            je 0x4001668	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x4001622	    0x488b35000000	            mov rsi, qword [0x04001629] 	       110	string3.h	FUNCTION_31	CALL_3
0x4001629	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_31	CALL_3
0x400162c	      0xe800000000	                          call 0x4001631	       110	string3.h	FUNCTION_31	CALL_3
0x4001631	          0x4889c2	                            mov rdx, rax	       110	string3.h	FUNCTION_31	CALL_3
0x4001634	          0x4863c3	                         movsxd rax, ebx	       110	string3.h	FUNCTION_31	CALL_3
0x4001637	        0x488d4801	                      lea rcx, [rax + 1]	       110	string3.h	FUNCTION_31	CALL_3
0x400163b	            0xeb17	                           jmp 0x4001654	       110	string3.h	FUNCTION_31	CALL_3
0x400163d	           0xf1f00	                         nop dword [rax]	       110	string3.h	FUNCTION_31	CALL_3
0x4001640	      0xbf02000000	                              mov edi, 2	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001645	      0xe800000000	                          call 0x400164a	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x400164a	      0xb901000000	                              mov ecx, 1	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x400164f	          0x4889c2	                            mov rdx, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001652	            0x31c0	                            xor eax, eax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001654	        0x44882402	              mov byte [rdx + rax], r12b	      2293	display.c	FUNCTION_13	IF_1
0x4001658	        0xc6040a00	                 mov byte [rdx + rcx], 0	      2294	display.c	FUNCTION_13	IF_1
0x400165c	      0xe96affffff	                           jmp 0x40015cb	      2294	display.c	FUNCTION_13	IF_1
0x4001661	     0xf1f80000000	                         nop dword [rax]	      2294	display.c	FUNCTION_13	IF_1
0x4001668	      0xb901000000	                              mov ecx, 1	      2294	display.c	FUNCTION_13	IF_1
0x400166d	            0x31c0	                            xor eax, eax	      2294	display.c	FUNCTION_13	IF_1
0x400166f	            0xebe3	                           jmp 0x4001654	      2294	display.c	FUNCTION_13	IF_1
rl_on_new_line_with_prompt	ELSE,1:CALL,7:SWITCH,0:IF,3:functions,0:FOR,0:WHILE,1:DO,0	95
0x40009b0	    0x488b3d000000	            mov rdi, qword [0x040009b7] 	      1831	display.c	FUNCTION_4	CALL_1
0x40009b7	            0x4154	                                push r12	      1825	display.c	FUNCTION_4
0x40009b9	              0x55	                                push rbp	      1825	display.c	FUNCTION_4
0x40009ba	              0x53	                                push rbx	      1825	display.c	FUNCTION_4
0x40009bb	      0xe800000000	                          call 0x40009c0	      1831	display.c	FUNCTION_4	CALL_1
0x40009c0	          0x8d7801	                      lea edi, [rax + 1]	      1832	display.c	FUNCTION_4	CALL_2
0x40009c3	            0x31c0	                            xor eax, eax	      1832	display.c	FUNCTION_4	CALL_2
0x40009c5	      0xe876f6ffff	           call sym.init_line_structures	      1832	display.c	FUNCTION_4	CALL_2
0x40009ca	    0x488b1d000000	            mov rbx, qword [0x040009d1] 	      1836	display.c	FUNCTION_4
0x40009d1	    0x488b05000000	            mov rax, qword [0x040009d8] 	       110	string3.h	FUNCTION_31	CALL_3
0x40009d8	          0x4885db	                           test rbx, rbx	      1836	display.c	FUNCTION_4
0x40009db	    0x480f441d0000	           cmove rbx, qword [0x040009e3]	      1836	display.c	FUNCTION_4
0x40009e3	          0x488b38	                    mov rdi, qword [rax]	       110	string3.h	FUNCTION_31	CALL_3
0x40009e6	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_31	CALL_3
0x40009e9	      0xe800000000	                          call 0x40009ee	       110	string3.h	FUNCTION_31	CALL_3
0x40009ee	    0x488b05000000	            mov rax, qword [0x040009f5] 	       110	string3.h	FUNCTION_31	CALL_3
0x40009f5	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_31	CALL_3
0x40009f8	          0x488b38	                    mov rdi, qword [rax]	       110	string3.h	FUNCTION_31	CALL_3
0x40009fb	      0xe800000000	                          call 0x4000a00	       110	string3.h	FUNCTION_31	CALL_3
0x4000a00	    0x488b2d000000	            mov rbp, qword [0x04000a07] 	      1841	display.c	FUNCTION_4	CALL_5
0x4000a07	      0xbe0a000000	                            mov esi, 0xa	      1841	display.c	FUNCTION_4	CALL_5
0x4000a0c	          0x4889ef	                            mov rdi, rbp	      1841	display.c	FUNCTION_4	CALL_5
0x4000a0f	      0xe800000000	                          call 0x4000a14	      1841	display.c	FUNCTION_4	CALL_5
0x4000a14	          0x4885c0	                           test rax, rax	      1841	display.c	FUNCTION_4	CALL_5
0x4000a17	          0x4889c3	                            mov rbx, rax	      1841	display.c	FUNCTION_4	CALL_5
0x4000a1a	        0x480f44dd	                          cmove rbx, rbp	      1841	display.c	FUNCTION_4	CALL_5
0x4000a1e	          0x4889df	                            mov rdi, rbx	      1845	display.c	FUNCTION_4	CALL_6
0x4000a21	      0xe800000000	                          call 0x4000a26	      1845	display.c	FUNCTION_4	CALL_6
0x4000a26	          0x4989c4	                            mov r12, rax	      1845	display.c	FUNCTION_4	CALL_6
0x4000a29	            0x89c5	                            mov ebp, eax	      1845	display.c	FUNCTION_4	CALL_6
0x4000a2b	      0xe800000000	                          call 0x4000a30	      1846	display.c	FUNCTION_4	IF_2
0x4000a30	        0x4883f801	                              cmp rax, 1	      1846	display.c	FUNCTION_4	IF_2
0x4000a34	            0x760e	                           jbe 0x4000a44	      1846	display.c	FUNCTION_4	IF_2
0x4000a36	    0x8b1500000000	            mov edx, dword [0x04000a3c] 	      1846	display.c	FUNCTION_4	IF_2
0x4000a3c	            0x85d2	                           test edx, edx	      1846	display.c	FUNCTION_4	IF_2
0x4000a3e	     0xf84bc000000	                            je 0x4000b00	      1846	display.c	FUNCTION_4	IF_2
0x4000a44	    0x448925000000	           mov dword [0x04000a4b], r12d 	      1849	display.c	FUNCTION_4	ELSE_1
0x4000a4b	    0x8b0500000000	            mov eax, dword [0x04000a51] 	      1854	display.c	FUNCTION_4
0x4000a51	            0x31db	                            xor ebx, ebx	      1854	display.c	FUNCTION_4
0x4000a53	            0x85c0	                           test eax, eax	      1854	display.c	FUNCTION_4
0x4000a55	            0x89e8	                            mov eax, ebp	      1855	display.c	FUNCTION_4
0x4000a57	           0xf94c3	                                 sete bl	      1854	display.c	FUNCTION_4
0x4000a5a	     0x31d00000000	             add ebx, dword [0x04000a60]	      1854	display.c	FUNCTION_4
0x4000a60	              0x99	                                     cdq	      1855	display.c	FUNCTION_4
0x4000a61	            0xf7fb	                                idiv ebx	      1855	display.c	FUNCTION_4
0x4000a63	        0x4183fc00	                             cmp r12d, 0	      1859	display.c	FUNCTION_4	IF_3
0x4000a67	    0x890500000000	            mov dword [0x04000a6d], eax 	      1855	display.c	FUNCTION_4
0x4000a6d	            0x7e71	                           jle 0x4000ae0	      1859	display.c	FUNCTION_4	IF_3
0x4000a6f	            0x85d2	                           test edx, edx	      1859	display.c	FUNCTION_4	IF_3
0x4000a71	     0xf84a9000000	                            je 0x4000b20	      1859	display.c	FUNCTION_4	IF_3
0x4000a77	    0xc70500000000	               mov dword [0x04000a81], 0	      1861	display.c	FUNCTION_4
0x4000a81	    0x488b05000000	            mov rax, qword [0x04000a88] 	      1861	display.c	FUNCTION_4
0x4000a88	            0x31d2	                            xor edx, edx	      1861	display.c	FUNCTION_4
0x4000a8a	        0x488b7008	                mov rsi, qword [rax + 8]	      1861	display.c	FUNCTION_4
0x4000a8e	            0x31c0	                            xor eax, eax	      1861	display.c	FUNCTION_4
0x4000a90	          0x4889f1	                            mov rcx, rsi	      1861	display.c	FUNCTION_4
0x4000a93	       0xf1f440000	                   nop dword [rax + rax]	      1861	display.c	FUNCTION_4
0x4000a98	    0x891500000000	            mov dword [0x04000a9e], edx 	      1866	display.c	FUNCTION_4	WHILE_1
0x4000a9e	            0x8901	                    mov dword [rcx], eax	      1867	display.c	FUNCTION_4	WHILE_1
0x4000aa0	             0x1d8	                            add eax, ebx	      1868	display.c	FUNCTION_4	WHILE_1
0x4000aa2	          0x83c201	                              add edx, 1	      1867	display.c	FUNCTION_4	WHILE_1
0x4000aa5	        0x4883c104	                              add rcx, 4	      1867	display.c	FUNCTION_4	WHILE_1
0x4000aa9	            0x39c5	                            cmp ebp, eax	      1864	display.c	FUNCTION_4	WHILE_1
0x4000aab	            0x7deb	                           jge 0x4000a98	      1864	display.c	FUNCTION_4	WHILE_1
0x4000aad	          0x4863d2	                         movsxd rdx, edx	      1864	display.c	FUNCTION_4	WHILE_1
0x4000ab0	        0x48c1e202	                              shl rdx, 2	      1864	display.c	FUNCTION_4	WHILE_1
0x4000ab4	    0x488b05000000	            mov rax, qword [0x04000abb] 	      1873	display.c	FUNCTION_4
0x4000abb	        0x44892416	             mov dword [rsi + rdx], r12d	      1870	display.c	FUNCTION_4
0x4000abf	    0xc70500000000	               mov dword [0x04000ac9], 0	      1871	display.c	FUNCTION_4
0x4000ac9	              0x5b	                                 pop rbx	      1876	display.c	FUNCTION_4
0x4000aca	    0x488905000000	            mov qword [0x04000ad1], rax 	      1873	display.c	FUNCTION_4
0x4000ad1	            0x31c0	                            xor eax, eax	      1876	display.c	FUNCTION_4
0x4000ad3	              0x5d	                                 pop rbp	      1876	display.c	FUNCTION_4
0x4000ad4	            0x415c	                                 pop r12	      1876	display.c	FUNCTION_4
0x4000ad6	              0xc3	                                     ret	      1876	display.c	FUNCTION_4
0x4000ad7	    0x660f1f840000	                    nop word [rax + rax]	      1876	display.c	FUNCTION_4
0x4000ae0	    0xc70500000000	               mov dword [0x04000aea], 0	      1861	display.c	FUNCTION_4
0x4000aea	            0x7495	                            je 0x4000a81	      1864	display.c	FUNCTION_4	WHILE_1
0x4000aec	    0x488b05000000	            mov rax, qword [0x04000af3] 	      1864	display.c	FUNCTION_4	WHILE_1
0x4000af3	            0x31d2	                            xor edx, edx	      1864	display.c	FUNCTION_4	WHILE_1
0x4000af5	        0x488b7008	                mov rsi, qword [rax + 8]	      1864	display.c	FUNCTION_4	WHILE_1
0x4000af9	            0xebb9	                           jmp 0x4000ab4	      1864	display.c	FUNCTION_4	WHILE_1
0x4000afb	       0xf1f440000	                   nop dword [rax + rax]	      1864	display.c	FUNCTION_4	WHILE_1
0x4000b00	      0xb901000000	                              mov ecx, 1	      1847	display.c	FUNCTION_4	IF_2
0x4000b05	          0x4489e2	                           mov edx, r12d	      1847	display.c	FUNCTION_4	IF_2
0x4000b08	            0x31f6	                            xor esi, esi	      1847	display.c	FUNCTION_4	IF_2
0x4000b0a	          0x4889df	                            mov rdi, rbx	      1847	display.c	FUNCTION_4	IF_2
0x4000b0d	      0xe83ef7ffff	                  call sym._rl_col_width	      1847	display.c	FUNCTION_4	IF_2
0x4000b12	    0x890500000000	            mov dword [0x04000b18], eax 	      1847	display.c	FUNCTION_4	IF_2
0x4000b18	      0xe92effffff	                           jmp 0x4000a4b	      1847	display.c	FUNCTION_4	IF_2
0x4000b1d	           0xf1f00	                         nop dword [rax]	      1847	display.c	FUNCTION_4	IF_2
0x4000b20	      0xbe01000000	                              mov esi, 1	      1860	display.c	FUNCTION_4	CALL_7
0x4000b25	      0xbf00000000	                              mov edi, 0	      1860	display.c	FUNCTION_4	CALL_7
0x4000b2a	      0xe800000000	                          call 0x4000b2f	      1860	display.c	FUNCTION_4	CALL_7
0x4000b2f	      0xe943ffffff	                           jmp 0x4000a77	      1860	display.c	FUNCTION_4	CALL_7
_rl_erase_at_end_of_line	ELSE,0:CALL,3:SWITCH,0:IF,0:functions,0:FOR,2:WHILE,0:DO,0	36
0x4001680	              0x55	                                push rbp	      2316	display.c	FUNCTION_14
0x4001681	              0x53	                                push rbx	      2316	display.c	FUNCTION_14
0x4001682	            0x89fd	                            mov ebp, edi	      2316	display.c	FUNCTION_14
0x4001684	        0x4883ec08	                              sub rsp, 8	      2316	display.c	FUNCTION_14
0x4001688	      0xe800000000	                          call 0x400168d	      2319	display.c	FUNCTION_14	CALL_1
0x400168d	            0x85ed	                           test ebp, ebp	      2320	display.c	FUNCTION_14	FOR_1
0x400168f	            0x7e5c	                           jle 0x40016ed	      2320	display.c	FUNCTION_14	FOR_1
0x4001691	            0x31db	                            xor ebx, ebx	      2320	display.c	FUNCTION_14	FOR_1
0x4001693	       0xf1f440000	                   nop dword [rax + rax]	      2320	display.c	FUNCTION_14	FOR_1
0x4001698	    0x488b35000000	            mov rsi, qword [0x0400169f] 	      2321	display.c	FUNCTION_14	CALL_2
0x400169f	      0xbf20000000	                           mov edi, 0x20	      2321	display.c	FUNCTION_14	CALL_2
0x40016a4	          0x83c301	                              add ebx, 1	      2320	display.c	FUNCTION_14	FOR_1
0x40016a7	      0xe800000000	                          call 0x40016ac	      2321	display.c	FUNCTION_14	CALL_2
0x40016ac	            0x39dd	                            cmp ebp, ebx	      2320	display.c	FUNCTION_14	FOR_1
0x40016ae	            0x75e8	                           jne 0x4001698	      2320	display.c	FUNCTION_14	FOR_1
0x40016b0	            0x89ef	                            mov edi, ebp	      2322	display.c	FUNCTION_14	CALL_3
0x40016b2	      0xe800000000	                          call 0x40016b7	      2322	display.c	FUNCTION_14	CALL_3
0x40016b7	    0x488b35000000	            mov rsi, qword [0x040016be] 	      2322	display.c	FUNCTION_14	CALL_3
0x40016be	            0x31d2	                            xor edx, edx	      2322	display.c	FUNCTION_14	CALL_3
0x40016c0	    0x8b0500000000	            mov eax, dword [0x040016c6] 	      2324	display.c	FUNCTION_14	FOR_2
0x40016c6	          0x488b0e	                    mov rcx, qword [rsi]	      2324	display.c	FUNCTION_14	FOR_2
0x40016c9	          0x83c201	                              add edx, 1	      2323	display.c	FUNCTION_14	FOR_2
0x40016cc	          0x83e801	                              sub eax, 1	      2324	display.c	FUNCTION_14	FOR_2
0x40016cf	            0x39d5	                            cmp ebp, edx	      2323	display.c	FUNCTION_14	FOR_2
0x40016d1	    0x890500000000	            mov dword [0x040016d7], eax 	      2324	display.c	FUNCTION_14	FOR_2
0x40016d7	            0x4898	                                    cdqe	      2324	display.c	FUNCTION_14	FOR_2
0x40016d9	        0xc6040100	                 mov byte [rcx + rax], 0	      2324	display.c	FUNCTION_14	FOR_2
0x40016dd	            0x75e1	                           jne 0x40016c0	      2323	display.c	FUNCTION_14	FOR_2
0x40016df	    0x830500000000	               add dword [0x040016e6], 1	      2325	display.c	FUNCTION_14
0x40016e6	        0x4883c408	                              add rsp, 8	      2326	display.c	FUNCTION_14
0x40016ea	              0x5b	                                 pop rbx	      2326	display.c	FUNCTION_14
0x40016eb	              0x5d	                                 pop rbp	      2326	display.c	FUNCTION_14
0x40016ec	              0xc3	                                     ret	      2326	display.c	FUNCTION_14
0x40016ed	            0x89ef	                            mov edi, ebp	      2322	display.c	FUNCTION_14	CALL_3
0x40016ef	      0xe800000000	                          call 0x40016f4	      2322	display.c	FUNCTION_14	CALL_3
0x40016f4	            0xebe9	                           jmp 0x40016df	      2322	display.c	FUNCTION_14	CALL_3
_rl_redisplay_after_sigwinch	ELSE,3:CALL,13:SWITCH,0:IF,4:functions,0:FOR,0:WHILE,0:DO,0	64
0x4004820	    0x48833d000000	               cmp qword [0x04004828], 0	      2528	display.c	FUNCTION_21	IF_1
0x4004828	              0x53	                                push rbx	      2521	display.c	FUNCTION_21
0x4004829	     0xf84f1000000	                            je 0x4004920	      2528	display.c	FUNCTION_21	IF_1
0x400482f	    0x8b3d00000000	            mov edi, dword [0x04004835] 	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x4004835	      0xe800000000	                          call 0x400483a	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x400483a	    0x488b3d000000	            mov rdi, qword [0x04004841] 	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4004841	      0xba00000000	                              mov edx, 0	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4004846	      0xbe01000000	                              mov esi, 1	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x400484b	      0xe800000000	                          call 0x4004850	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4004850	    0x488b3d000000	            mov rdi, qword [0x04004857] 	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4004857	    0xc70500000000	               mov dword [0x04004861], 0	      2537	display.c	FUNCTION_21	IF_1
0x4004861	          0x4885ff	                           test rdi, rdi	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4004864	     0xf84c6000000	                            je 0x4004930	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x400486a	      0xba00000000	                              mov edx, 0	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x400486f	      0xbe01000000	                              mov esi, 1	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4004874	      0xe800000000	                          call 0x4004879	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4004879	    0x8b0500000000	            mov eax, dword [0x0400487f] 	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x400487f	            0x85c0	                           test eax, eax	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4004881	            0x7e07	                           jle 0x400488a	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4004883	            0x31ff	                            xor edi, edi	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x4004885	      0xe800000000	                          call 0x400488a	      2551	display.c	FUNCTION_21	IF_1	CALL_9
0x400488a	    0x488b1d000000	            mov rbx, qword [0x04004891] 	      2557	display.c	FUNCTION_21	CALL_11
0x4004891	      0xbe0a000000	                            mov esi, 0xa	      2557	display.c	FUNCTION_21	CALL_11
0x4004896	          0x4889df	                            mov rdi, rbx	      2557	display.c	FUNCTION_21	CALL_11
0x4004899	      0xe800000000	                          call 0x400489e	      2557	display.c	FUNCTION_21	CALL_11
0x400489e	          0x4885c0	                           test rax, rax	      2558	display.c	FUNCTION_21	IF_4
0x40048a1	            0x746d	                            je 0x4004910	      2558	display.c	FUNCTION_21	IF_4
0x40048a3	        0x488d7801	                      lea rdi, [rax + 1]	      2559	display.c	FUNCTION_21	CALL_12
0x40048a7	      0xe800000000	                          call 0x40048ac	      2502	display.c	CALL_112
0x40048ac	            0x31c0	                            xor eax, eax	      2505	display.c	CALL_113
0x40048ae	    0x41b800000000	                              mov r8d, 0	      2505	display.c	CALL_113
0x40048b4	      0xb900000000	                              mov ecx, 0	      2505	display.c	CALL_113
0x40048b9	      0xba00000000	                              mov edx, 0	      2505	display.c	CALL_113
0x40048be	      0xbe00000000	                              mov esi, 0	      2505	display.c	CALL_113
0x40048c3	    0x48893d000000	            mov qword [0x040048ca], rdi 	      2504	display.c	
0x40048ca	      0xe8c1bbffff	                  call sym.expand_prompt	      2505	display.c	CALL_113
0x40048cf	          0x4885c0	                           test rax, rax	      2510	display.c	CALL_114
0x40048d2	    0x488905000000	            mov qword [0x040048d9], rax 	      2505	display.c	CALL_113
0x40048d9	    0x48c705000000	               mov qword [0x040048e4], 0	      2509	display.c	
0x40048e4	            0x747a	                            je 0x4004960	      2510	display.c	CALL_114
0x40048e6	          0x4889c7	                            mov rdi, rax	      2510	display.c	CALL_114
0x40048e9	      0xe800000000	                          call 0x40048ee	      2510	display.c	CALL_114
0x40048ee	    0x890500000000	            mov dword [0x040048f4], eax 	      2510	display.c	CALL_114
0x40048f4	      0xe800000000	                          call 0x40048f9	      2512	display.c	CALL_115
0x40048f9	    0x48891d000000	            mov qword [0x04004900], rbx 	      2514	display.c	
0x4004900	              0x5b	                                 pop rbx	      2562	display.c	FUNCTION_21
0x4004901	      0xe93acbffff	               jmp sym.rl_restore_prompt	      2515	display.c	CALL_116
0x4004906	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2515	display.c	CALL_116
0x4004910	              0x5b	                                 pop rbx	      2562	display.c	FUNCTION_21
0x4004911	      0xe92ac2ffff	        jmp sym.rl_forced_update_display	      2561	display.c	FUNCTION_21	CALL_13
0x4004916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2561	display.c	FUNCTION_21	CALL_13
0x4004920	      0xe800000000	                          call 0x4004925	      2554	display.c	FUNCTION_21	CALL_10
0x4004925	      0xe960ffffff	                           jmp 0x400488a	      2554	display.c	FUNCTION_21	CALL_10
0x400492a	    0x660f1f440000	                    nop word [rax + rax]	      2554	display.c	FUNCTION_21	CALL_10
0x4004930	    0x8b3d00000000	            mov edi, dword [0x04004936] 	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x4004936	      0xe8d5b8ffff	                   call sym.space_to_eol	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x400493b	    0x488b3d000000	            mov rdi, qword [0x04004942] 	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004942	      0xba00000000	                              mov edx, 0	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004947	      0xbe01000000	                              mov esi, 1	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400494c	      0xe800000000	                          call 0x4004951	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004951	      0xe923ffffff	                           jmp 0x4004879	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004956	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004960	            0x31c0	                            xor eax, eax	      2510	display.c	CALL_114
0x4004962	            0xeb8a	                           jmp 0x40048ee	      2510	display.c	CALL_114
rl_show_char	ELSE,0:CALL,8:SWITCH,0:IF,3:functions,0:FOR,0:WHILE,0:DO,0	84
0x4000fc0	          0x8d4780	                   lea eax, [rdi - 0x80]	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000fc3	            0x4154	                                push r12	      2085	display.c	FUNCTION_7
0x4000fc5	              0x55	                                push rbp	      2085	display.c	FUNCTION_7
0x4000fc6	              0x53	                                push rbx	      2085	display.c	FUNCTION_7
0x4000fc7	            0x89fb	                            mov ebx, edi	      2085	display.c	FUNCTION_7
0x4000fc9	          0x83f87f	                           cmp eax, 0x7f	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000fcc	            0x7732	                            ja 0x4001000	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000fce	    0x8b0500000000	            mov eax, dword [0x04000fd4] 	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000fd4	      0xbd01000000	                              mov ebp, 1	      2086	display.c	FUNCTION_7
0x4000fd9	            0x85c0	                           test eax, eax	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000fdb	            0x7443	                            je 0x4001020	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4000fdd	    0x488b35000000	            mov rsi, qword [0x04000fe4] 	      2105	display.c	FUNCTION_7	CALL_7
0x4000fe4	            0x89df	                            mov edi, ebx	      2105	display.c	FUNCTION_7	CALL_7
0x4000fe6	      0xe800000000	                          call 0x4000feb	      2105	display.c	FUNCTION_7	CALL_7
0x4000feb	    0x488b3d000000	            mov rdi, qword [0x04000ff2] 	      2106	display.c	FUNCTION_7	CALL_8
0x4000ff2	      0xe800000000	                          call 0x4000ff7	      2106	display.c	FUNCTION_7	CALL_8
0x4000ff7	            0x89e8	                            mov eax, ebp	      2108	display.c	FUNCTION_7
0x4000ff9	              0x5b	                                 pop rbx	      2108	display.c	FUNCTION_7
0x4000ffa	              0x5d	                                 pop rbp	      2108	display.c	FUNCTION_7
0x4000ffb	            0x415c	                                 pop r12	      2108	display.c	FUNCTION_7
0x4000ffd	              0xc3	                                     ret	      2108	display.c	FUNCTION_7
0x4000ffe	            0x6690	                                     nop	      2108	display.c	FUNCTION_7
0x4001000	          0x83ff1f	                           cmp edi, 0x1f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001003	     0xf8faf000000	                            jg 0x40010b8	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001009	        0x40f6c780	                          test dil, 0x80	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400100d	     0xf84dd000000	                            je 0x40010f0	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001013	      0xbd01000000	                              mov ebp, 1	      2086	display.c	FUNCTION_7
0x4001018	            0xebc3	                           jmp 0x4000fdd	      2086	display.c	FUNCTION_7
0x400101a	    0x660f1f440000	                    nop word [rax + rax]	      2086	display.c	FUNCTION_7
0x4001020	    0x488b0d000000	            mov rcx, qword [0x04001027] 	        97	stdio2.h	CALL_141
0x4001027	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_141
0x400102c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_141
0x4001031	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_141
0x4001036	          0x80e37f	                            and bl, 0x7f	      2091	display.c	FUNCTION_7	IF_1	CALL_2
0x4001039	      0xbd03000000	                              mov ebp, 3	      2090	display.c	FUNCTION_7	IF_1
0x400103e	      0xe800000000	                          call 0x4001043	        97	stdio2.h	CALL_141
0x4001043	          0x83fb1f	                           cmp ebx, 0x1f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001046	            0x7f75	                            jg 0x40010bd	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001048	          0x83fb09	                              cmp ebx, 9	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400104b	      0xbd03000000	                              mov ebp, 3	      2090	display.c	FUNCTION_7	IF_1
0x4001050	            0x748b	                            je 0x4000fdd	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001052	    0x488b0d000000	            mov rcx, qword [0x04001059] 	        97	stdio2.h	CALL_141
0x4001059	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_141
0x400105e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_141
0x4001063	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_141
0x4001068	      0xbd05000000	                              mov ebp, 5	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x400106d	      0xe800000000	                          call 0x4001072	        97	stdio2.h	CALL_141
0x4001072	          0x4189dc	                           mov r12d, ebx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001075	          0x83cb40	                            or ebx, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001078	        0x4183cc40	                           or r12d, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x400107c	        0x410fb6c4	                         movzx eax, r12b	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001080	            0x39d8	                            cmp eax, ebx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001082	     0xf8555ffffff	                           jne 0x4000fdd	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001088	      0xe800000000	                          call 0x400108d	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x400108d	          0x488b00	                    mov rax, qword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001090	        0x450fb6e4	                        movzx r12d, r12b	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001094	    0x42f644600102	         test byte [rax + r12*2 + 1], 2 	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x400109a	     0xf843dffffff	                            je 0x4000fdd	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40010a0	      0xe800000000	                          call 0x40010a5	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40010a5	          0x488b00	                    mov rax, qword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40010a8	        0x428b1ca0	            mov ebx, dword [rax + r12*4]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40010ac	      0xe92cffffff	                           jmp 0x4000fdd	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40010b1	     0xf1f80000000	                         nop dword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40010b8	      0xbd01000000	                              mov ebp, 1	      2086	display.c	FUNCTION_7
0x40010bd	          0x83fb7f	                           cmp ebx, 0x7f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x40010c0	     0xf8517ffffff	                           jne 0x4000fdd	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x40010c6	    0x488b0d000000	            mov rcx, qword [0x040010cd] 	        97	stdio2.h	CALL_141
0x40010cd	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_141
0x40010d2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_141
0x40010d7	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_141
0x40010dc	          0x83c502	                              add ebp, 2	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x40010df	      0xbb3f000000	                           mov ebx, 0x3f	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40010e4	      0xe800000000	                          call 0x40010e9	        97	stdio2.h	CALL_141
0x40010e9	      0xe9effeffff	                           jmp 0x4000fdd	        97	stdio2.h	CALL_141
0x40010ee	            0x6690	                                     nop	        97	stdio2.h	CALL_141
0x40010f0	          0x83ff09	                              cmp edi, 9	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x40010f3	     0xf841affffff	                            je 0x4001013	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x40010f9	    0x488b0d000000	            mov rcx, qword [0x04001100] 	        97	stdio2.h	CALL_141
0x4001100	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_141
0x4001105	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_141
0x400110a	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_141
0x400110f	      0xbd03000000	                              mov ebp, 3	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x4001114	      0xe800000000	                          call 0x4001119	        97	stdio2.h	CALL_141
0x4001119	      0xe954ffffff	                           jmp 0x4001072	        97	stdio2.h	CALL_141
_rl_erase_entire_line	ELSE,0:CALL,4:SWITCH,0:IF,0:functions,0:FOR,0:WHILE,0:DO,0	20
0x40049c0	        0x4883ec08	                              sub rsp, 8	      2578	display.c	FUNCTION_23
0x40049c4	    0x488b3d000000	            mov rdi, qword [0x040049cb] 	      2481	display.c	FUNCTION_20	IF_1
0x40049cb	          0x4885ff	                           test rdi, rdi	      2481	display.c	FUNCTION_20	IF_1
0x40049ce	            0x7419	                            je 0x40049e9	      2481	display.c	FUNCTION_20	IF_1
0x40049d0	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40049d5	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40049da	      0xe800000000	                          call 0x40049df	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x40049df	    0xc70500000000	               mov dword [0x040049e9], 0	      2488	display.c	FUNCTION_20	IF_1
0x40049e9	            0x31ff	                            xor edi, edi	      2580	display.c	FUNCTION_23	CALL_2
0x40049eb	      0xe800000000	                          call 0x40049f0	      2580	display.c	FUNCTION_23	CALL_2
0x40049f0	    0x488b3d000000	            mov rdi, qword [0x040049f7] 	      2481	display.c	FUNCTION_20	IF_1
0x40049f7	          0x4885ff	                           test rdi, rdi	      2481	display.c	FUNCTION_20	IF_1
0x40049fa	            0x7419	                            je 0x4004a15	      2481	display.c	FUNCTION_20	IF_1
0x40049fc	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4004a01	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4004a06	      0xe800000000	                          call 0x4004a0b	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4004a0b	    0xc70500000000	               mov dword [0x04004a15], 0	      2488	display.c	FUNCTION_20	IF_1
0x4004a15	    0x488b3d000000	            mov rdi, qword [0x04004a1c] 	      2582	display.c	FUNCTION_23	CALL_4
0x4004a1c	        0x4883c408	                              add rsp, 8	      2583	display.c	FUNCTION_23
0x4004a20	      0xe900000000	                           jmp 0x4004a25	      2582	display.c	FUNCTION_23	CALL_4
rl_restore_prompt	ELSE,0:CALL,2:SWITCH,0:IF,0:functions,0:FOR,0:WHILE,0:DO,0	35
0x4001440	        0x4883ec08	                              sub rsp, 8	      2254	display.c	FUNCTION_12
0x4001444	    0x488b3d000000	            mov rdi, qword [0x0400144b] 	      2255	display.c	FUNCTION_12	CALL_1
0x400144b	          0x4885ff	                           test rdi, rdi	      2255	display.c	FUNCTION_12	CALL_1
0x400144e	            0x7405	                            je 0x4001455	      2255	display.c	FUNCTION_12	CALL_1
0x4001450	      0xe800000000	                          call 0x4001455	      2255	display.c	FUNCTION_12	CALL_1
0x4001455	    0x488b3d000000	            mov rdi, qword [0x0400145c] 	      2256	display.c	FUNCTION_12	CALL_2
0x400145c	          0x4885ff	                           test rdi, rdi	      2256	display.c	FUNCTION_12	CALL_2
0x400145f	            0x7405	                            je 0x4001466	      2256	display.c	FUNCTION_12	CALL_2
0x4001461	      0xe800000000	                          call 0x4001466	      2256	display.c	FUNCTION_12	CALL_2
0x4001466	    0x488b05000000	            mov rax, qword [0x0400146d] 	      2258	display.c	FUNCTION_12
0x400146d	    0x48c705000000	               mov qword [0x04001478], 0	      2268	display.c	FUNCTION_12
0x4001478	    0x488905000000	            mov qword [0x0400147f], rax 	      2258	display.c	FUNCTION_12
0x400147f	    0x488b05000000	            mov rax, qword [0x04001486] 	      2259	display.c	FUNCTION_12
0x4001486	    0x48c705000000	               mov qword [0x04001491], 0	      2268	display.c	FUNCTION_12
0x4001491	    0x488905000000	            mov qword [0x04001498], rax 	      2259	display.c	FUNCTION_12
0x4001498	    0x8b0500000000	            mov eax, dword [0x0400149e] 	      2260	display.c	FUNCTION_12
0x400149e	    0xc70500000000	               mov dword [0x040014a8], 0	      2269	display.c	FUNCTION_12
0x40014a8	    0x890500000000	            mov dword [0x040014ae], eax 	      2260	display.c	FUNCTION_12
0x40014ae	    0x8b0500000000	            mov eax, dword [0x040014b4] 	      2261	display.c	FUNCTION_12
0x40014b4	    0xc70500000000	               mov dword [0x040014be], 0	      2270	display.c	FUNCTION_12
0x40014be	    0x890500000000	            mov dword [0x040014c4], eax 	      2261	display.c	FUNCTION_12
0x40014c4	    0x8b0500000000	            mov eax, dword [0x040014ca] 	      2262	display.c	FUNCTION_12
0x40014ca	    0xc70500000000	               mov dword [0x040014d4], 0	      2270	display.c	FUNCTION_12
0x40014d4	    0x890500000000	            mov dword [0x040014da], eax 	      2262	display.c	FUNCTION_12
0x40014da	    0x8b0500000000	            mov eax, dword [0x040014e0] 	      2263	display.c	FUNCTION_12
0x40014e0	    0xc70500000000	               mov dword [0x040014ea], 0	      2270	display.c	FUNCTION_12
0x40014ea	    0x890500000000	            mov dword [0x040014f0], eax 	      2263	display.c	FUNCTION_12
0x40014f0	    0x8b0500000000	            mov eax, dword [0x040014f6] 	      2264	display.c	FUNCTION_12
0x40014f6	    0xc70500000000	               mov dword [0x04001500], 0	      2271	display.c	FUNCTION_12
0x4001500	    0x890500000000	            mov dword [0x04001506], eax 	      2264	display.c	FUNCTION_12
0x4001506	    0x8b0500000000	            mov eax, dword [0x0400150c] 	      2265	display.c	FUNCTION_12
0x400150c	    0xc70500000000	               mov dword [0x04001516], 0	      2271	display.c	FUNCTION_12
0x4001516	    0x890500000000	            mov dword [0x0400151c], eax 	      2265	display.c	FUNCTION_12
0x400151c	        0x4883c408	                              add rsp, 8	      2272	display.c	FUNCTION_12
0x4001520	              0xc3	                                     ret	      2272	display.c	FUNCTION_12
rl_clear_message	ELSE,0:CALL,1:SWITCH,0:IF,1:functions,0:FOR,0:WHILE,0:DO,0	12
0x4001530	        0x4883ec08	                              sub rsp, 8	      2213	display.c	FUNCTION_9
0x4001534	    0x488b05000000	            mov rax, qword [0x0400153b] 	      2214	display.c	FUNCTION_9
0x400153b	    0x488905000000	            mov qword [0x04001542], rax 	      2214	display.c	FUNCTION_9
0x4001542	    0x8b0500000000	            mov eax, dword [0x04001548] 	      2215	display.c	FUNCTION_9	IF_1
0x4001548	            0x85c0	                           test eax, eax	      2215	display.c	FUNCTION_9	IF_1
0x400154a	            0x740f	                            je 0x400155b	      2215	display.c	FUNCTION_9	IF_1
0x400154c	      0xe800000000	                          call 0x4001551	      2217	display.c	FUNCTION_9	IF_1	CALL_1
0x4001551	    0xc70500000000	               mov dword [0x0400155b], 0	      2218	display.c	FUNCTION_9	IF_1
0x400155b	    0xff1500000000	                 call qword [0x04001561]	      2220	display.c	FUNCTION_9
0x4001561	            0x31c0	                            xor eax, eax	      2222	display.c	FUNCTION_9
0x4001563	        0x4883c408	                              add rsp, 8	      2222	display.c	FUNCTION_9
0x4001567	              0xc3	                                     ret	      2222	display.c	FUNCTION_9
space_to_eol	ELSE,0:CALL,1:SWITCH,0:IF,0:functions,0:FOR,1:WHILE,0:DO,0	19
0x4000210	              0x55	                                push rbp	      2348	display.c	FUNCTION_16
0x4000211	              0x53	                                push rbx	      2348	display.c	FUNCTION_16
0x4000212	            0x31db	                            xor ebx, ebx	      2348	display.c	FUNCTION_16
0x4000214	            0x89fd	                            mov ebp, edi	      2348	display.c	FUNCTION_16
0x4000216	        0x4883ec08	                              sub rsp, 8	      2348	display.c	FUNCTION_16
0x400021a	            0x85ff	                           test edi, edi	      2351	display.c	FUNCTION_16	FOR_1
0x400021c	            0x7e1a	                           jle 0x4000238	      2351	display.c	FUNCTION_16	FOR_1
0x400021e	            0x6690	                                     nop	      2351	display.c	FUNCTION_16	FOR_1
0x4000220	    0x488b35000000	            mov rsi, qword [0x04000227] 	      2352	display.c	FUNCTION_16	CALL_1
0x4000227	      0xbf20000000	                           mov edi, 0x20	      2352	display.c	FUNCTION_16	CALL_1
0x400022c	          0x83c301	                              add ebx, 1	      2351	display.c	FUNCTION_16	FOR_1
0x400022f	      0xe800000000	                          call 0x4000234	      2352	display.c	FUNCTION_16	CALL_1
0x4000234	            0x39dd	                            cmp ebp, ebx	      2351	display.c	FUNCTION_16	FOR_1
0x4000236	            0x75e8	                           jne 0x4000220	      2351	display.c	FUNCTION_16	FOR_1
0x4000238	     0x12d00000000	             add dword [0x0400023e], ebp	      2354	display.c	FUNCTION_16
0x400023e	        0x4883c408	                              add rsp, 8	      2355	display.c	FUNCTION_16
0x4000242	              0x5b	                                 pop rbx	      2355	display.c	FUNCTION_16
0x4000243	              0x5d	                                 pop rbp	      2355	display.c	FUNCTION_16
0x4000244	              0xc3	                                     ret	      2355	display.c	FUNCTION_16
_rl_clear_screen	ELSE,1:CALL,4:SWITCH,0:IF,1:functions,0:FOR,0:WHILE,0:DO,0	8
0x4004710	    0x488b3d000000	            mov rdi, qword [0x04004717] 	      2364	display.c	FUNCTION_17	IF_1
0x4004717	          0x4885ff	                           test rdi, rdi	      2364	display.c	FUNCTION_17	IF_1
0x400471a	            0x7414	                            je 0x4004730	      2364	display.c	FUNCTION_17	IF_1
0x400471c	      0xba00000000	                              mov edx, 0	      2365	display.c	FUNCTION_17	CALL_3
0x4004721	      0xbe01000000	                              mov esi, 1	      2365	display.c	FUNCTION_17	CALL_3
0x4004726	      0xe900000000	                           jmp 0x400472b	      2365	display.c	FUNCTION_17	CALL_3
0x400472b	       0xf1f440000	                   nop dword [rax + rax]	      2365	display.c	FUNCTION_17	CALL_3
0x4004730	      0xe900000000	                           jmp 0x4004735	      2367	display.c	FUNCTION_17	CALL_4
_rl_update_final	ELSE,0:CALL,6:SWITCH,0:IF,2:functions,0:FOR,0:WHILE,0:DO,0	51
0x4004740	    0x8b3d00000000	            mov edi, dword [0x04004746] 	      2453	display.c	FUNCTION_19	IF_1
0x4004746	              0x53	                                push rbx	      2447	display.c	FUNCTION_19
0x4004747	            0x85ff	                           test edi, edi	      2453	display.c	FUNCTION_19	IF_1
0x4004749	            0x740a	                            je 0x4004755	      2453	display.c	FUNCTION_19	IF_1
0x400474b	    0x8b1500000000	            mov edx, dword [0x04004751] 	      2453	display.c	FUNCTION_19	IF_1
0x4004751	            0x85d2	                           test edx, edx	      2453	display.c	FUNCTION_19	IF_1
0x4004753	            0x742b	                            je 0x4004780	      2453	display.c	FUNCTION_19	IF_1
0x4004755	      0xe800000000	                          call 0x400475a	      2459	display.c	FUNCTION_19	CALL_1
0x400475a	    0xc70500000000	               mov dword [0x04004764], 0	      2471	display.c	FUNCTION_19
0x4004764	      0xe800000000	                          call 0x4004769	      2472	display.c	FUNCTION_19	CALL_5
0x4004769	    0x488b3d000000	            mov rdi, qword [0x04004770] 	      2473	display.c	FUNCTION_19	CALL_6
0x4004770	      0xe800000000	                          call 0x4004775	      2473	display.c	FUNCTION_19	CALL_6
0x4004775	    0x830500000000	               add dword [0x0400477c], 1	      2474	display.c	FUNCTION_19
0x400477c	              0x5b	                                 pop rbx	      2475	display.c	FUNCTION_19
0x400477d	              0xc3	                                     ret	      2475	display.c	FUNCTION_19
0x400477e	            0x6690	                                     nop	      2475	display.c	FUNCTION_19
0x4004780	    0x488b15000000	            mov rdx, qword [0x04004787] 	      2454	display.c	FUNCTION_19	IF_1
0x4004787	          0x4863c7	                         movsxd rax, edi	      2454	display.c	FUNCTION_19	IF_1
0x400478a	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2454	display.c	FUNCTION_19	IF_1
0x400478e	          0x488b12	                    mov rdx, qword [rdx]	      2454	display.c	FUNCTION_19	IF_1
0x4004791	        0x48630481	         movsxd rax, dword [rcx + rax*4]	      2454	display.c	FUNCTION_19	IF_1
0x4004795	        0x803c0200	                 cmp byte [rdx + rax], 0	      2453	display.c	FUNCTION_19	IF_1
0x4004799	            0x75ba	                           jne 0x4004755	      2453	display.c	FUNCTION_19	IF_1
0x400479b	          0x83ef01	                              sub edi, 1	      2456	display.c	FUNCTION_19	IF_1
0x400479e	    0x893d00000000	            mov dword [0x040047a4], edi 	      2456	display.c	FUNCTION_19	IF_1
0x40047a4	      0xe800000000	                          call 0x40047a9	      2459	display.c	FUNCTION_19	CALL_1
0x40047a9	    0x8b0500000000	            mov eax, dword [0x040047af] 	      2461	display.c	FUNCTION_19	IF_2
0x40047af	            0x85c0	                           test eax, eax	      2461	display.c	FUNCTION_19	IF_2
0x40047b1	            0x74a7	                            je 0x400475a	      2461	display.c	FUNCTION_19	IF_2
0x40047b3	    0x488b35000000	            mov rsi, qword [0x040047ba] 	      2461	display.c	FUNCTION_19	IF_2
0x40047ba	    0x486305000000	         movsxd rax, dword [0x040047c1] 	      2461	display.c	FUNCTION_19	IF_2
0x40047c1	        0x488b4e08	                mov rcx, qword [rsi + 8]	      2461	display.c	FUNCTION_19	IF_2
0x40047c5	        0x4883c001	                              add rax, 1	      2461	display.c	FUNCTION_19	IF_2
0x40047c9	      0x48635481fc	     movsxd rdx, dword [rcx + rax*4 - 4]	      2461	display.c	FUNCTION_19	IF_2
0x40047ce	          0x8b3c81	            mov edi, dword [rcx + rax*4]	      2461	display.c	FUNCTION_19	IF_2
0x40047d1	            0x29d7	                            sub edi, edx	      2461	display.c	FUNCTION_19	IF_2
0x40047d3	    0x3b3d00000000	            cmp edi, dword [0x040047d9] 	      2461	display.c	FUNCTION_19	IF_2
0x40047d9	     0xf857bffffff	                           jne 0x400475a	      2461	display.c	FUNCTION_19	IF_2
0x40047df	          0x4889d3	                            mov rbx, rdx	      2465	display.c	FUNCTION_19	IF_2
0x40047e2	          0x48031e	                    add rbx, qword [rsi]	      2465	display.c	FUNCTION_19	IF_2
0x40047e5	          0x83ef01	                              sub edi, 1	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x40047e8	    0xc70500000000	     mov dword [0x040047f2], 0xffffffff 	      2466	display.c	FUNCTION_19	IF_2
0x40047f2	          0x4889de	                            mov rsi, rbx	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x40047f5	      0xe800000000	                          call 0x40047fa	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x40047fa	            0x31ff	                            xor edi, edi	      2468	display.c	FUNCTION_19	IF_2	CALL_3
0x40047fc	      0xe800000000	                          call 0x4004801	      2468	display.c	FUNCTION_19	IF_2	CALL_3
0x4004801	    0x486305000000	         movsxd rax, dword [0x04004808] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004808	    0x488b35000000	            mov rsi, qword [0x0400480f] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x400480f	       0xfbe7c03ff	         movsx edi, byte [rbx + rax - 1]	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004814	      0xe800000000	                          call 0x4004819	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4004819	      0xe93cffffff	                           jmp 0x400475a	      2469	display.c	FUNCTION_19	IF_2	CALL_4
