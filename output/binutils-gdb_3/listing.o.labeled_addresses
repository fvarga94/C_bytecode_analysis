listing_source_file	DO,0:functions,0:WHILE,0:CALL,0:FOR,0:SWITCH,0:IF,0:ELSE,0	11
0x4002350	    0x8b0500000000	            mov eax, dword [0x04002356] 	      1594	listing.c	FUNCTION_30	IF_1
0x4002356	            0x85c0	                           test eax, eax	      1594	listing.c	FUNCTION_30	IF_1
0x4002358	            0x7506	                           jne 0x4002360	      1594	listing.c	FUNCTION_30	IF_1
0x400235a	              0xc3	                                     ret	      1596	listing.c	FUNCTION_30
0x400235b	       0xf1f440000	                   nop dword [rax + rax]	      1596	listing.c	FUNCTION_30
0x4002360	              0x53	                                push rbx	      1593	listing.c	FUNCTION_30
0x4002361	    0x488b1d000000	            mov rbx, qword [0x04002368] 	      1595	listing.c	FUNCTION_30	CALL_1
0x4002368	      0xe853e6ffff	                      call sym.file_info	      1595	listing.c	FUNCTION_30	CALL_1
0x400236d	        0x48894328	             mov qword [rbx + 0x28], rax	      1595	listing.c	FUNCTION_30	CALL_1
0x4002371	              0x5b	                                 pop rbx	      1596	listing.c	FUNCTION_30
0x4002372	              0xc3	                                     ret	      1596	listing.c	FUNCTION_30
print_lines	DO,0:functions,0:WHILE,2:CALL,6:FOR,4:SWITCH,0:IF,4:ELSE,1	207
0x4000530	            0x4157	                                push r15	       833	listing.c	FUNCTION_13
0x4000532	            0x4156	                                push r14	       833	listing.c	FUNCTION_13
0x4000534	            0x4155	                                push r13	       833	listing.c	FUNCTION_13
0x4000536	            0x4154	                                push r12	       833	listing.c	FUNCTION_13
0x4000538	              0x55	                                push rbp	       833	listing.c	FUNCTION_13
0x4000539	              0x53	                                push rbx	       833	listing.c	FUNCTION_13
0x400053a	            0x89cd	                            mov ebp, ecx	       833	listing.c	FUNCTION_13
0x400053c	        0x4883ec28	                           sub rsp, 0x28	       833	listing.c	FUNCTION_13
0x4000540	    0x488b05000000	            mov rax, qword [0x04000547] 	       838	listing.c	FUNCTION_13
0x4000547	      0x48897c2408	                mov qword [rsp + 8], rdi	       833	listing.c	FUNCTION_13
0x400054c	        0x89742414	             mov dword [rsp + 0x14], esi	       833	listing.c	FUNCTION_13
0x4000550	      0x4889542418	             mov qword [rsp + 0x18], rdx	       833	listing.c	FUNCTION_13
0x4000555	        0x48890424	                    mov qword [rsp], rax	       838	listing.c	FUNCTION_13
0x4000559	      0xe852fdffff	                   call sym.listing_page	       843	listing.c	FUNCTION_13	CALL_1
0x400055e	    0x8b0500000000	            mov eax, dword [0x04000564] 	       844	listing.c	FUNCTION_13
0x4000564	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       847	listing.c	FUNCTION_13	IF_1
0x4000567	          0x8d1cc0	                  lea ebx, [rax + rax*8]	       844	listing.c	FUNCTION_13
0x400056a	     0xf845a020000	                            je 0x40007ca	       847	listing.c	FUNCTION_13	IF_1
0x4000570	      0xe800000000	                          call 0x4000575	       857	listing.c	FUNCTION_13	IF_2	CALL_3
0x4000575	            0x85c0	                           test eax, eax	       857	listing.c	FUNCTION_13	IF_2	CALL_3
0x4000577	     0xf85ec010000	                           jne 0x4000769	       857	listing.c	FUNCTION_13	IF_2	CALL_3
0x400057d	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x4000581	    0x488b3d000000	            mov rdi, qword [0x04000588] 	        97	stdio2.h	CALL_18
0x4000588	          0x4189e8	                            mov r8d, ebp	        97	stdio2.h	CALL_18
0x400058b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000590	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4000595	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000597	      0xe800000000	                          call 0x400059c	        97	stdio2.h	CALL_18
0x400059c	        0x488b0424	                    mov rax, qword [rsp]	       865	listing.c	FUNCTION_13	WHILE_1
0x40005a0	            0x85db	                           test ebx, ebx	       865	listing.c	FUNCTION_13	WHILE_1
0x40005a2	           0xfb600	                   movzx eax, byte [rax]	       865	listing.c	FUNCTION_13	WHILE_1
0x40005a5	     0xf848a020000	                            je 0x4000835	       865	listing.c	FUNCTION_13	WHILE_1
0x40005ab	            0x84c0	                             test al, al	       865	listing.c	FUNCTION_13	WHILE_1
0x40005ad	     0xf8482020000	                            je 0x4000835	       865	listing.c	FUNCTION_13	WHILE_1
0x40005b3	        0x4c8b3424	                    mov r14, qword [rsp]	        97	stdio2.h	CALL_18
0x40005b7	    0x488b3d000000	            mov rdi, qword [0x040005be] 	        97	stdio2.h	CALL_18
0x40005be	           0xfbec8	                           movsx ecx, al	        97	stdio2.h	CALL_18
0x40005c1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x40005c6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40005cb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40005cd	    0x41bc02000000	                             mov r12d, 2	       870	listing.c	FUNCTION_13	WHILE_1
0x40005d3	      0xbd01000000	                              mov ebp, 1	       871	listing.c	FUNCTION_13	WHILE_1
0x40005d8	          0x4531ed	                          xor r13d, r13d	        97	stdio2.h	CALL_18
0x40005db	      0x450fbe4601	               movsx r8d, byte [r14 + 1]	        97	stdio2.h	CALL_18
0x40005e0	        0x4d8d7e02	                      lea r15, [r14 + 2]	        97	stdio2.h	CALL_18
0x40005e4	      0xe800000000	                          call 0x40005e9	        97	stdio2.h	CALL_18
0x40005e9	            0xeb0c	                           jmp 0x40005f7	        97	stdio2.h	CALL_18
0x40005eb	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_18
0x40005f0	        0x4983c702	                              add r15, 2	        97	stdio2.h	CALL_18
0x40005f4	          0x4589f5	                          mov r13d, r14d	       877	listing.c	FUNCTION_13	WHILE_1	IF_3
0x40005f7	        0x458d7502	                     lea r14d, [r13 + 2]	       880	listing.c	FUNCTION_13	WHILE_1
0x40005fb	        0x410fbe0f	                   movsx ecx, byte [r15]	       865	listing.c	FUNCTION_13	WHILE_1
0x40005ff	          0x4439f3	                           cmp ebx, r14d	       865	listing.c	FUNCTION_13	WHILE_1
0x4000602	            0x7661	                           jbe 0x4000665	       865	listing.c	FUNCTION_13	WHILE_1
0x4000604	            0x84c9	                             test cl, cl	       865	listing.c	FUNCTION_13	WHILE_1
0x4000606	            0x745d	                            je 0x4000665	       865	listing.c	FUNCTION_13	WHILE_1
0x4000608	      0x450fbe4701	               movsx r8d, byte [r15 + 1]	        97	stdio2.h	CALL_18
0x400060d	    0x488b3d000000	            mov rdi, qword [0x04000614] 	        97	stdio2.h	CALL_18
0x4000614	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000616	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x400061b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4000620	          0x83c501	                              add ebp, 1	       871	listing.c	FUNCTION_13	WHILE_1
0x4000623	        0x4183c402	                             add r12d, 2	       870	listing.c	FUNCTION_13	WHILE_1
0x4000627	      0xe800000000	                          call 0x400062c	        97	stdio2.h	CALL_18
0x400062c	          0x83fd04	                              cmp ebp, 4	       873	listing.c	FUNCTION_13	WHILE_1	IF_3
0x400062f	            0x75bf	                           jne 0x40005f0	       873	listing.c	FUNCTION_13	WHILE_1	IF_3
0x4000631	    0x488b35000000	            mov rsi, qword [0x04000638] 	        97	stdio2.h	CALL_18
0x4000638	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x400063d	        0x458d7503	                     lea r14d, [r13 + 3]	       876	listing.c	FUNCTION_13	WHILE_1	IF_3
0x4000641	            0x31ed	                            xor ebp, ebp	       877	listing.c	FUNCTION_13	WHILE_1	IF_3
0x4000643	      0xe800000000	                          call 0x4000648	        97	stdio2.h	CALL_18
0x4000648	            0xeba6	                           jmp 0x40005f0	        97	stdio2.h	CALL_18
0x400064a	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_18
0x4000650	    0x488b35000000	            mov rsi, qword [0x04000657] 	        97	stdio2.h	CALL_18
0x4000657	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x400065c	        0x4183c601	                             add r14d, 1	       883	listing.c	FUNCTION_13	FOR_2
0x4000660	      0xe800000000	                          call 0x4000665	        97	stdio2.h	CALL_18
0x4000665	          0x4439f3	                           cmp ebx, r14d	       883	listing.c	FUNCTION_13	FOR_2
0x4000668	            0x77e6	                            ja 0x4000650	       883	listing.c	FUNCTION_13	FOR_2
0x400066a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       886	listing.c	FUNCTION_13	CALL_4
0x400066f	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       886	listing.c	FUNCTION_13	CALL_4
0x4000674	      0xba00000000	                              mov edx, 0	       886	listing.c	FUNCTION_13	CALL_4
0x4000679	      0xbe00000000	                              mov esi, 0	       886	listing.c	FUNCTION_13	CALL_4
0x400067e	          0x4885c0	                           test rax, rax	       886	listing.c	FUNCTION_13	CALL_4
0x4000681	          0x4889df	                            mov rdi, rbx	       886	listing.c	FUNCTION_13	CALL_4
0x4000684	        0x480f45d0	                         cmovne rdx, rax	       886	listing.c	FUNCTION_13	CALL_4
0x4000688	            0x31c0	                            xor eax, eax	       886	listing.c	FUNCTION_13	CALL_4
0x400068a	      0xe8c1fdffff	                      call sym.emit_line	       886	listing.c	FUNCTION_13	CALL_4
0x400068f	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	       888	listing.c	FUNCTION_13	FOR_3
0x4000693	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	       888	listing.c	FUNCTION_13	FOR_3
0x4000698	          0x4885db	                           test rbx, rbx	       888	listing.c	FUNCTION_13	FOR_3
0x400069b	            0x741e	                            je 0x40006bb	       888	listing.c	FUNCTION_13	FOR_3
0x400069d	           0xf1f00	                         nop dword [rax]	       888	listing.c	FUNCTION_13	FOR_3
0x40006a0	          0x488b13	                    mov rdx, qword [rbx]	       889	listing.c	FUNCTION_13	CALL_5
0x40006a3	            0x31c0	                            xor eax, eax	       889	listing.c	FUNCTION_13	CALL_5
0x40006a5	      0xbe00000000	                              mov esi, 0	       889	listing.c	FUNCTION_13	CALL_5
0x40006aa	          0x4c89ef	                            mov rdi, r13	       889	listing.c	FUNCTION_13	CALL_5
0x40006ad	      0xe89efdffff	                      call sym.emit_line	       889	listing.c	FUNCTION_13	CALL_5
0x40006b2	        0x488b5b08	                mov rbx, qword [rbx + 8]	       888	listing.c	FUNCTION_13	FOR_3
0x40006b6	          0x4885db	                           test rbx, rbx	       888	listing.c	FUNCTION_13	FOR_3
0x40006b9	            0x75e5	                           jne 0x40006a0	       888	listing.c	FUNCTION_13	FOR_3
0x40006bb	    0x8b0500000000	            mov eax, dword [0x040006c1] 	       891	listing.c	FUNCTION_13	FOR_4
0x40006c1	            0x85c0	                           test eax, eax	       891	listing.c	FUNCTION_13	FOR_4
0x40006c3	     0xf84f2000000	                            je 0x40007bb	       891	listing.c	FUNCTION_13	FOR_4
0x40006c9	        0x488b0424	                    mov rax, qword [rsp]	       893	listing.c	FUNCTION_13	FOR_4
0x40006cd	          0x4963dc	                        movsxd rbx, r12d	       893	listing.c	FUNCTION_13	FOR_4
0x40006d0	        0x803c1800	                 cmp byte [rax + rbx], 0	       893	listing.c	FUNCTION_13	FOR_4
0x40006d4	     0xf84e1000000	                            je 0x40007bb	       893	listing.c	FUNCTION_13	FOR_4
0x40006da	          0x4531f6	                          xor r14d, r14d	       893	listing.c	FUNCTION_13	FOR_4
0x40006dd	           0xf1f00	                         nop dword [rax]	       893	listing.c	FUNCTION_13	FOR_4
0x40006e0	    0x8b0500000000	            mov eax, dword [0x040006e6] 	       896	listing.c	FUNCTION_13	FOR_4
0x40006e6	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x40006ea	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x40006ef	    0x488b3d000000	            mov rdi, qword [0x040006f6] 	        97	stdio2.h	CALL_18
0x40006f6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40006fb	          0x4531ff	                          xor r15d, r15d	       897	listing.c	FUNCTION_13	FOR_4
0x40006fe	      0x448d6cc0ff	             lea r13d, [rax + rax*8 - 1]	       896	listing.c	FUNCTION_13	FOR_4
0x4000703	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000705	      0xe800000000	                          call 0x400070a	        97	stdio2.h	CALL_18
0x400070a	        0x48031c24	                    add rbx, qword [rsp]	        97	stdio2.h	CALL_18
0x400070e	            0xeb07	                           jmp 0x4000717	        97	stdio2.h	CALL_18
0x4000710	        0x4883c302	                              add rbx, 2	        97	stdio2.h	CALL_18
0x4000714	          0x4189c7	                           mov r15d, eax	       915	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000717	          0x4539ef	                          cmp r15d, r13d	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x400071a	           0xfbe0b	                   movsx ecx, byte [rbx]	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x400071d	            0x7371	                           jae 0x4000790	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x400071f	            0x84c9	                             test cl, cl	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000721	            0x746d	                            je 0x4000790	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000723	      0x440fbe4301	               movsx r8d, byte [rbx + 1]	        97	stdio2.h	CALL_18
0x4000728	    0x488b3d000000	            mov rdi, qword [0x0400072f] 	        97	stdio2.h	CALL_18
0x400072f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000731	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000736	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x400073b	          0x83c501	                              add ebp, 1	       909	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x400073e	        0x4183c402	                             add r12d, 2	       907	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000742	      0xe800000000	                          call 0x4000747	        97	stdio2.h	CALL_18
0x4000747	          0x83fd04	                              cmp ebp, 4	       911	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x400074a	        0x418d4702	                      lea eax, [r15 + 2]	       908	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x400074e	            0x75c0	                           jne 0x4000710	       911	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000750	    0x488b35000000	            mov rsi, qword [0x04000757] 	        97	stdio2.h	CALL_18
0x4000757	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x400075c	            0x31ed	                            xor ebp, ebp	       915	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x400075e	      0xe800000000	                          call 0x4000763	        97	stdio2.h	CALL_18
0x4000763	        0x418d4703	                      lea eax, [r15 + 3]	       914	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000767	            0xeba7	                           jmp 0x4000710	       914	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000769	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x400076d	    0x488b3d000000	            mov rdi, qword [0x04000774] 	        97	stdio2.h	CALL_18
0x4000774	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000779	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x400077e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000780	      0xe800000000	                          call 0x4000785	        97	stdio2.h	CALL_18
0x4000785	      0xe912feffff	                           jmp 0x400059c	        97	stdio2.h	CALL_18
0x400078a	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_18
0x4000790	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x4000795	            0x31c0	                            xor eax, eax	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x4000797	      0xbe00000000	                              mov esi, 0	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x400079c	        0x4183c601	                             add r14d, 1	       894	listing.c	FUNCTION_13	FOR_4
0x40007a0	      0xe8abfcffff	                      call sym.emit_line	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x40007a5	    0x443935000000	           cmp dword [0x040007ac], r14d 	       891	listing.c	FUNCTION_13	FOR_4
0x40007ac	            0x760d	                           jbe 0x40007bb	       891	listing.c	FUNCTION_13	FOR_4
0x40007ae	          0x803b00	                       cmp byte [rbx], 0	       893	listing.c	FUNCTION_13	FOR_4
0x40007b1	            0x7408	                            je 0x40007bb	       893	listing.c	FUNCTION_13	FOR_4
0x40007b3	          0x4963dc	                        movsxd rbx, r12d	       893	listing.c	FUNCTION_13	FOR_4
0x40007b6	      0xe925ffffff	                           jmp 0x40006e0	       893	listing.c	FUNCTION_13	FOR_4
0x40007bb	        0x4883c428	                           add rsp, 0x28	       921	listing.c	FUNCTION_13
0x40007bf	              0x5b	                                 pop rbx	       921	listing.c	FUNCTION_13
0x40007c0	              0x5d	                                 pop rbp	       921	listing.c	FUNCTION_13
0x40007c1	            0x415c	                                 pop r12	       921	listing.c	FUNCTION_13
0x40007c3	            0x415d	                                 pop r13	       921	listing.c	FUNCTION_13
0x40007c5	            0x415e	                                 pop r14	       921	listing.c	FUNCTION_13
0x40007c7	            0x415f	                                 pop r15	       921	listing.c	FUNCTION_13
0x40007c9	              0xc3	                                     ret	       921	listing.c	FUNCTION_13
0x40007ca	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x40007ce	    0x488b3d000000	            mov rdi, qword [0x040007d5] 	        97	stdio2.h	CALL_18
0x40007d5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40007d7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x40007dc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40007e1	            0x31ed	                            xor ebp, ebp	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x40007e3	      0xe800000000	                          call 0x40007e8	        97	stdio2.h	CALL_18
0x40007e8	            0x85db	                           test ebx, ebx	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x40007ea	            0x741c	                            je 0x4000808	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x40007ec	         0xf1f4000	                         nop dword [rax]	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x40007f0	    0x488b35000000	            mov rsi, qword [0x040007f7] 	        97	stdio2.h	CALL_18
0x40007f7	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x40007fc	          0x83c501	                              add ebp, 1	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x40007ff	      0xe800000000	                          call 0x4000804	        97	stdio2.h	CALL_18
0x4000804	            0x39eb	                            cmp ebx, ebp	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000806	            0x75e8	                           jne 0x40007f0	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000808	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x400080d	      0xba00000000	                              mov edx, 0	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000812	      0xbe00000000	                              mov esi, 0	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000817	          0x4885c0	                           test rax, rax	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x400081a	        0x480f45d0	                         cmovne rdx, rax	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x400081e	        0x4883c428	                           add rsp, 0x28	       921	listing.c	FUNCTION_13
0x4000822	            0x31ff	                            xor edi, edi	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000824	              0x5b	                                 pop rbx	       921	listing.c	FUNCTION_13
0x4000825	              0x5d	                                 pop rbp	       921	listing.c	FUNCTION_13
0x4000826	            0x415c	                                 pop r12	       921	listing.c	FUNCTION_13
0x4000828	            0x415d	                                 pop r13	       921	listing.c	FUNCTION_13
0x400082a	            0x415e	                                 pop r14	       921	listing.c	FUNCTION_13
0x400082c	            0x415f	                                 pop r15	       921	listing.c	FUNCTION_13
0x400082e	            0x31c0	                            xor eax, eax	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000830	      0xe91bfcffff	                       jmp sym.emit_line	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000835	          0x4531e4	                          xor r12d, r12d	       865	listing.c	FUNCTION_13	WHILE_1
0x4000838	            0x31ed	                            xor ebp, ebp	       865	listing.c	FUNCTION_13	WHILE_1
0x400083a	          0x4531f6	                          xor r14d, r14d	       865	listing.c	FUNCTION_13	WHILE_1
0x400083d	      0xe923feffff	                           jmp 0x4000665	       865	listing.c	FUNCTION_13	WHILE_1
listing_title	DO,0:functions,0:WHILE,0:CALL,1:FOR,0:SWITCH,0:IF,0:ELSE,0	99
0x40021a0	            0x4155	                                push r13	      1532	listing.c	FUNCTION_28
0x40021a2	            0x4154	                                push r12	      1532	listing.c	FUNCTION_28
0x40021a4	          0x4189fd	                           mov r13d, edi	      1532	listing.c	FUNCTION_28
0x40021a7	              0x55	                                push rbp	      1532	listing.c	FUNCTION_28
0x40021a8	              0x53	                                push rbx	      1532	listing.c	FUNCTION_28
0x40021a9	        0x4883ec08	                              sub rsp, 8	      1532	listing.c	FUNCTION_28
0x40021ad	    0x4c8b25000000	            mov r12, qword [0x040021b4] 	      1538	listing.c	FUNCTION_28	CALL_1
0x40021b4	      0x410fb60424	                   movzx eax, byte [r12]	      1538	listing.c	FUNCTION_28	CALL_1
0x40021b9	            0x3c20	                            cmp al, 0x20	      1538	listing.c	FUNCTION_28	CALL_1
0x40021bb	     0xf84df000000	                            je 0x40022a0	      1538	listing.c	FUNCTION_28	CALL_1
0x40021c1	            0x31ed	                            xor ebp, ebp	      1540	listing.c	FUNCTION_28	IF_1
0x40021c3	            0x3c22	                            cmp al, 0x22	      1539	listing.c	FUNCTION_28	IF_1
0x40021c5	     0xf84ad000000	                            je 0x4002278	      1539	listing.c	FUNCTION_28	IF_1
0x40021cb	            0x84c0	                             test al, al	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021cd	          0x4c89e2	                            mov rdx, r12	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021d0	            0x7525	                           jne 0x40021f7	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021d2	            0xeb64	                           jmp 0x4002238	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021d4	         0xf1f4000	                         nop dword [rax]	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021d8	            0x3c22	                            cmp al, 0x22	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40021da	           0xf94c1	                                 sete cl	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40021dd	            0x84c9	                             test cl, cl	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40021df	            0x752b	                           jne 0x400220c	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40021e1	            0x3c0a	                             cmp al, 0xa	      1567	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5
0x40021e3	            0x7463	                            je 0x4002248	      1567	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5
0x40021e5	        0x4883c201	                              add rdx, 1	      1575	listing.c	FUNCTION_28	WHILE_1	ELSE_3
0x40021e9	    0x488915000000	            mov qword [0x040021f0], rdx 	      1575	listing.c	FUNCTION_28	WHILE_1	ELSE_3
0x40021f0	           0xfb602	                   movzx eax, byte [rdx]	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021f3	            0x84c0	                             test al, al	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021f5	            0x7441	                            je 0x4002238	      1549	listing.c	FUNCTION_28	WHILE_1
0x40021f7	            0x85ed	                           test ebp, ebp	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40021f9	            0x75dd	                           jne 0x40021d8	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40021fb	           0xfb6c8	                           movzx ecx, al	      1553	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40021fe	    0x80b900000000	                       cmp byte [rcx], 0	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x4002205	           0xf95c1	                                setne cl	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x4002208	            0x84c9	                             test cl, cl	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x400220a	            0x74d5	                            je 0x40021e1	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x400220c	    0x8b0500000000	            mov eax, dword [0x04002212] 	      1555	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4002212	            0x85c0	                           test eax, eax	      1555	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4002214	     0xf85a0000000	                           jne 0x40022ba	      1555	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x400221a	            0x85ed	                           test ebp, ebp	      1562	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_4
0x400221c	            0x7408	                            je 0x4002226	      1562	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_4
0x400221e	    0x488305000000	               add qword [0x04002226], 1	      1563	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_4
0x4002226	        0x4883c408	                              add rsp, 8	      1578	listing.c	FUNCTION_28
0x400222a	              0x5b	                                 pop rbx	      1578	listing.c	FUNCTION_28
0x400222b	              0x5d	                                 pop rbp	      1578	listing.c	FUNCTION_28
0x400222c	            0x415c	                                 pop r12	      1578	listing.c	FUNCTION_28
0x400222e	            0x415d	                                 pop r13	      1578	listing.c	FUNCTION_28
0x4002230	      0xe900000000	                           jmp 0x4002235	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002235	           0xf1f00	                         nop dword [rax]	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002238	        0x4883c408	                              add rsp, 8	      1578	listing.c	FUNCTION_28
0x400223c	              0x5b	                                 pop rbx	      1578	listing.c	FUNCTION_28
0x400223d	              0x5d	                                 pop rbp	      1578	listing.c	FUNCTION_28
0x400223e	            0x415c	                                 pop r12	      1578	listing.c	FUNCTION_28
0x4002240	            0x415d	                                 pop r13	      1578	listing.c	FUNCTION_28
0x4002242	              0xc3	                                     ret	      1578	listing.c	FUNCTION_28
0x4002243	       0xf1f440000	                   nop dword [rax + rax]	      1578	listing.c	FUNCTION_28
0x4002248	      0xba05000000	                              mov edx, 5	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x400224d	      0xbe00000000	                              mov esi, 0	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x4002252	            0x31ff	                            xor edi, edi	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x4002254	      0xe800000000	                          call 0x4002259	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x4002259	          0x4889c7	                            mov rdi, rax	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x400225c	            0x31c0	                            xor eax, eax	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x400225e	      0xe800000000	                          call 0x4002263	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x4002263	        0x4883c408	                              add rsp, 8	      1578	listing.c	FUNCTION_28
0x4002267	              0x5b	                                 pop rbx	      1578	listing.c	FUNCTION_28
0x4002268	              0x5d	                                 pop rbp	      1578	listing.c	FUNCTION_28
0x4002269	            0x415c	                                 pop r12	      1578	listing.c	FUNCTION_28
0x400226b	            0x415d	                                 pop r13	      1578	listing.c	FUNCTION_28
0x400226d	      0xe900000000	                           jmp 0x4002272	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002272	    0x660f1f440000	                    nop word [rax + rax]	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002278	      0x498d542401	                      lea rdx, [r12 + 1]	      1544	listing.c	FUNCTION_28	ELSE_1
0x400227d	      0xbd01000000	                              mov ebp, 1	      1543	listing.c	FUNCTION_28	ELSE_1
0x4002282	    0x488915000000	            mov qword [0x04002289], rdx 	      1544	listing.c	FUNCTION_28	ELSE_1
0x4002289	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1544	listing.c	FUNCTION_28	ELSE_1
0x400228f	          0x4989d4	                            mov r12, rdx	      1544	listing.c	FUNCTION_28	ELSE_1
0x4002292	      0xe934ffffff	                           jmp 0x40021cb	      1544	listing.c	FUNCTION_28	ELSE_1
0x4002297	    0x660f1f840000	                    nop word [rax + rax]	      1544	listing.c	FUNCTION_28	ELSE_1
0x40022a0	      0x498d542401	                      lea rdx, [r12 + 1]	      1538	listing.c	FUNCTION_28	CALL_1
0x40022a5	    0x488915000000	            mov qword [0x040022ac], rdx 	      1538	listing.c	FUNCTION_28	CALL_1
0x40022ac	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1538	listing.c	FUNCTION_28	CALL_1
0x40022b2	          0x4989d4	                            mov r12, rdx	      1538	listing.c	FUNCTION_28	CALL_1
0x40022b5	      0xe907ffffff	                           jmp 0x40021c1	      1538	listing.c	FUNCTION_28	CALL_1
0x40022ba	            0x89d3	                            mov ebx, edx	      1558	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3	CALL_2
0x40022bc	          0x4429e3	                           sub ebx, r12d	      1558	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3	CALL_2
0x40022bf	        0x488d7b01	                      lea rdi, [rbx + 1]	       525	as.h	FUNCTION_57	CALL_1
0x40022c3	      0xe800000000	                          call 0x40022c8	       525	as.h	FUNCTION_57	CALL_1
0x40022c8	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_58	CALL_3
0x40022cb	        0xc6041800	                 mov byte [rax + rbx], 0	       526	as.h	FUNCTION_57
0x40022cf	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_58	CALL_3
0x40022d2	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_58	CALL_3
0x40022d5	      0xe800000000	                          call 0x40022da	        53	string3.h	FUNCTION_58	CALL_3
0x40022da	        0x4183fd01	                             cmp r13d, 1	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40022de	    0x488b0d000000	            mov rcx, qword [0x040022e5] 	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40022e5	            0x19d2	                            sbb edx, edx	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40022e7	            0xf7d2	                                 not edx	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40022e9	          0x83c202	                              add edx, 2	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40022ec	        0x48894150	             mov qword [rcx + 0x50], rax	      1560	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40022f0	          0x895148	             mov dword [rcx + 0x48], edx	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40022f3	      0xe922ffffff	                           jmp 0x400221a	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
listing_newline	DO,0:functions,0:WHILE,0:CALL,0:FOR,0:SWITCH,0:IF,0:ELSE,0	198
0x4000c70	            0x4154	                                push r12	       296	listing.c	FUNCTION_6
0x4000c72	              0x55	                                push rbp	       296	listing.c	FUNCTION_6
0x4000c73	              0x53	                                push rbx	       296	listing.c	FUNCTION_6
0x4000c74	        0x4883ec10	                           sub rsp, 0x10	       296	listing.c	FUNCTION_6
0x4000c78	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	listing.c	FUNCTION_6
0x4000c81	      0x4889442408	                mov qword [rsp + 8], rax	       296	listing.c	FUNCTION_6
0x4000c86	            0x31c0	                            xor eax, eax	       296	listing.c	FUNCTION_6
0x4000c88	    0x8b0500000000	            mov eax, dword [0x04000c8e] 	       303	listing.c	FUNCTION_6	IF_1
0x4000c8e	            0x85c0	                           test eax, eax	       303	listing.c	FUNCTION_6	IF_1
0x4000c90	     0xf845a010000	                            je 0x4000df0	       303	listing.c	FUNCTION_6	IF_1
0x4000c96	    0x488b15000000	            mov rdx, qword [0x04000c9d] 	       306	listing.c	FUNCTION_6	IF_2
0x4000c9d	    0x4881fa000000	                              cmp rdx, 0	       306	listing.c	FUNCTION_6	IF_2
0x4000ca4	     0xf8446010000	                            je 0x4000df0	       306	listing.c	FUNCTION_6	IF_2
0x4000caa	            0xa810	                           test al, 0x10	       314	listing.c	FUNCTION_6	IF_3
0x4000cac	          0x4889fd	                            mov rbp, rdi	       314	listing.c	FUNCTION_6	IF_3
0x4000caf	            0x7437	                            je 0x4000ce8	       314	listing.c	FUNCTION_6	IF_3
0x4000cb1	    0x4c8b05000000	              mov r8, qword [0x04000cb8]	       315	listing.c	FUNCTION_6	IF_3
0x4000cb8	          0x4d85c0	                             test r8, r8	       315	listing.c	FUNCTION_6	IF_3
0x4000cbb	            0x742b	                            je 0x4000ce8	       315	listing.c	FUNCTION_6	IF_3
0x4000cbd	        0x418b4858	              mov ecx, dword [r8 + 0x58]	       316	listing.c	FUNCTION_6	IF_3
0x4000cc1	            0x85c9	                           test ecx, ecx	       316	listing.c	FUNCTION_6	IF_3
0x4000cc3	            0x7523	                           jne 0x4000ce8	       316	listing.c	FUNCTION_6	IF_3
0x4000cc5	          0x488b12	                    mov rdx, qword [rdx]	       320	listing.c	FUNCTION_6	IF_3
0x4000cc8	      0xbf00000000	                              mov edi, 0	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000ccd	      0xb906000000	                              mov ecx, 6	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000cd2	          0x4889d6	                            mov rsi, rdx	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000cd5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000cd7	     0xf8543020000	                           jne 0x4000f20	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000cdd	    0x41c740580100	                mov dword [r8 + 0x58], 1	       323	listing.c	FUNCTION_6	IF_3	IF_4
0x4000ce5	           0xf1f00	                         nop dword [rax]	       323	listing.c	FUNCTION_6	IF_3	IF_4
0x4000ce8	            0xa808	                              test al, 8	       329	listing.c	FUNCTION_6	IF_5
0x4000cea	      0x488d7c2404	                      lea rdi, [rsp + 4]	       330	listing.c	FUNCTION_6	CALL_3
0x4000cef	     0xf841b010000	                            je 0x4000e10	       329	listing.c	FUNCTION_6	IF_5
0x4000cf5	      0xe800000000	                          call 0x4000cfa	       330	listing.c	FUNCTION_6	CALL_3
0x4000cfa	          0x4885ed	                           test rbp, rbp	       334	listing.c	FUNCTION_6	IF_6
0x4000cfd	          0x4989c4	                            mov r12, rax	       330	listing.c	FUNCTION_6	CALL_3
0x4000d00	     0xf841b010000	                            je 0x4000e21	       334	listing.c	FUNCTION_6	IF_6
0x4000d06	      0xbf60000000	                           mov edi, 0x60	       399	listing.c	FUNCTION_6	ELSE_5	CALL_11
0x4000d0b	      0xe800000000	                          call 0x4000d10	       399	listing.c	FUNCTION_6	ELSE_5	CALL_11
0x4000d10	          0x4889c3	                            mov rbx, rax	       399	listing.c	FUNCTION_6	ELSE_5	CALL_11
0x4000d13	        0x48896818	             mov qword [rax + 0x18], rbp	       400	listing.c	FUNCTION_6	ELSE_5
0x4000d17	        0x8b442404	                mov eax, dword [rsp + 4]	       403	listing.c	FUNCTION_6
0x4000d1b	    0x488b3d000000	            mov rdi, qword [0x04000d22] 	       290	listing.c	FUNCTION_5	CALL_1
0x4000d22	    0x4c8925000000	            mov qword [0x04000d29], r12 	       404	listing.c	FUNCTION_6
0x4000d29	    0x890500000000	            mov dword [0x04000d2f], eax 	       403	listing.c	FUNCTION_6
0x4000d2f	      0xe800000000	                          call 0x4000d34	       290	listing.c	FUNCTION_5	CALL_1
0x4000d34	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4000d36	      0xe800000000	                          call 0x4000d3b	       291	listing.c	FUNCTION_5	CALL_2
0x4000d3b	    0x488b05000000	            mov rax, qword [0x04000d42] 	       408	listing.c	FUNCTION_6	IF_13
0x4000d42	          0x4885c0	                           test rax, rax	       408	listing.c	FUNCTION_6	IF_13
0x4000d45	     0xf84c5010000	                            je 0x4000f10	       408	listing.c	FUNCTION_6	IF_13
0x4000d4b	        0x48895820	             mov qword [rax + 0x20], rbx	       409	listing.c	FUNCTION_6	IF_13
0x4000d4f	    0x488b05000000	            mov rax, qword [0x04000d56] 	       415	listing.c	FUNCTION_6
0x4000d56	          0x4c89e7	                            mov rdi, r12	       417	listing.c	FUNCTION_6	CALL_13
0x4000d59	    0x48891d000000	            mov qword [0x04000d60], rbx 	       413	listing.c	FUNCTION_6
0x4000d60	          0x488903	                    mov qword [rbx], rax	       415	listing.c	FUNCTION_6
0x4000d63	        0x8b442404	                mov eax, dword [rsp + 4]	       416	listing.c	FUNCTION_6
0x4000d67	          0x894308	                mov dword [rbx + 8], eax	       416	listing.c	FUNCTION_6
0x4000d6a	      0xe851fcffff	                      call sym.file_info	       417	listing.c	FUNCTION_6	CALL_13
0x4000d6f	    0x488b3d000000	            mov rdi, qword [0x04000d76] 	       290	listing.c	FUNCTION_5	CALL_1
0x4000d76	        0x48894310	             mov qword [rbx + 0x10], rax	       417	listing.c	FUNCTION_6	CALL_13
0x4000d7a	    0x48c743200000	               mov qword [rbx + 0x20], 0	       418	listing.c	FUNCTION_6
0x4000d82	    0x48c743380000	               mov qword [rbx + 0x38], 0	       419	listing.c	FUNCTION_6
0x4000d8a	    0x48c743400000	               mov qword [rbx + 0x40], 0	       420	listing.c	FUNCTION_6
0x4000d92	    0xc74348000000	               mov dword [rbx + 0x48], 0	       421	listing.c	FUNCTION_6
0x4000d99	    0x48c743280000	               mov qword [rbx + 0x28], 0	       422	listing.c	FUNCTION_6
0x4000da1	    0xc74330000000	               mov dword [rbx + 0x30], 0	       423	listing.c	FUNCTION_6
0x4000da8	    0xc74358000000	               mov dword [rbx + 0x58], 0	       424	listing.c	FUNCTION_6
0x4000daf	      0xe800000000	                          call 0x4000db4	       290	listing.c	FUNCTION_5	CALL_1
0x4000db4	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4000db6	      0xe800000000	                          call 0x4000dbb	       291	listing.c	FUNCTION_5	CALL_2
0x4000dbb	    0xf60500000000	           test byte [0x04000dc2], 0x10 	       431	listing.c	FUNCTION_6	IF_14
0x4000dc2	            0x742c	                            je 0x4000df0	       431	listing.c	FUNCTION_6	IF_14
0x4000dc4	    0x488b05000000	            mov rax, qword [0x04000dcb] 	       435	listing.c	FUNCTION_6	IF_14
0x4000dcb	      0xbf00000000	                              mov edi, 0	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000dd0	      0xb906000000	                              mov ecx, 6	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000dd5	          0x488b00	                    mov rax, qword [rax]	       435	listing.c	FUNCTION_6	IF_14
0x4000dd8	          0x4889c6	                            mov rsi, rax	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000ddb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000ddd	     0xf850d010000	                           jne 0x4000ef0	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000de3	    0xc74358010000	               mov dword [rbx + 0x58], 1	       438	listing.c	FUNCTION_6	IF_14	IF_15
0x4000dea	    0x660f1f440000	                    nop word [rax + rax]	       438	listing.c	FUNCTION_6	IF_14	IF_15
0x4000df0	      0x488b442408	                mov rax, qword [rsp + 8]	       441	listing.c	FUNCTION_6
0x4000df5	    0x644833042528	                xor rax, qword fs:[0x28]	       441	listing.c	FUNCTION_6
0x4000dfe	     0xf85ab010000	                           jne 0x4000faf	       441	listing.c	FUNCTION_6
0x4000e04	        0x4883c410	                           add rsp, 0x10	       441	listing.c	FUNCTION_6
0x4000e08	              0x5b	                                 pop rbx	       441	listing.c	FUNCTION_6
0x4000e09	              0x5d	                                 pop rbp	       441	listing.c	FUNCTION_6
0x4000e0a	            0x415c	                                 pop r12	       441	listing.c	FUNCTION_6
0x4000e0c	              0xc3	                                     ret	       441	listing.c	FUNCTION_6
0x4000e0d	           0xf1f00	                         nop dword [rax]	       441	listing.c	FUNCTION_6
0x4000e10	      0xe800000000	                          call 0x4000e15	       332	listing.c	FUNCTION_6	CALL_4
0x4000e15	          0x4885ed	                           test rbp, rbp	       334	listing.c	FUNCTION_6	IF_6
0x4000e18	          0x4989c4	                            mov r12, rax	       332	listing.c	FUNCTION_6	CALL_4
0x4000e1b	     0xf85e5feffff	                           jne 0x4000d06	       334	listing.c	FUNCTION_6	IF_6
0x4000e21	    0x8b0500000000	            mov eax, dword [0x04000e27] 	       336	listing.c	FUNCTION_6	IF_6	IF_7
0x4000e27	        0x39442404	                cmp dword [rsp + 4], eax	       336	listing.c	FUNCTION_6	IF_6	IF_7
0x4000e2b	            0x751d	                           jne 0x4000e4a	       336	listing.c	FUNCTION_6	IF_6	IF_7
0x4000e2d	          0x4d85e4	                           test r12, r12	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e30	    0x488b35000000	            mov rsi, qword [0x04000e37] 	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e37	            0x74b7	                            je 0x4000df0	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e39	          0x4885f6	                           test rsi, rsi	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e3c	            0x74b2	                            je 0x4000df0	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e3e	          0x4c89e7	                            mov rdi, r12	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e41	      0xe800000000	                          call 0x4000e46	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e46	            0x85c0	                           test eax, eax	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e48	            0x74a6	                            je 0x4000df0	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e4a	      0xbf60000000	                           mov edi, 0x60	       340	listing.c	FUNCTION_6	IF_6	CALL_6
0x4000e4f	      0xe800000000	                          call 0x4000e54	       340	listing.c	FUNCTION_6	IF_6	CALL_6
0x4000e54	            0x31ff	                            xor edi, edi	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e56	      0xba05000000	                              mov edx, 5	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e5b	      0xbe00000000	                              mov esi, 0	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e60	          0x4889c3	                            mov rbx, rax	       340	listing.c	FUNCTION_6	IF_6	CALL_6
0x4000e63	      0xe800000000	                          call 0x4000e68	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e68	          0x4c89e7	                            mov rdi, r12	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e6b	          0x4889c6	                            mov rsi, rax	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e6e	      0xe800000000	                          call 0x4000e73	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e73	            0x85c0	                           test eax, eax	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e75	     0xf85c5000000	                           jne 0x4000f40	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e7b	    0x4c8b05000000	              mov r8, qword [0x04000e82]	       354	listing.c	FUNCTION_6	IF_6	IF_8
0x4000e82	          0x4d85c0	                             test r8, r8	       354	listing.c	FUNCTION_6	IF_6	IF_8
0x4000e85	     0xf84b5000000	                            je 0x4000f40	       354	listing.c	FUNCTION_6	IF_6	IF_8
0x4000e8b	        0x410fb600	                    movzx eax, byte [r8]	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e8f	            0x31f6	                            xor esi, esi	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e91	            0x31c9	                            xor ecx, ecx	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e93	          0x4c89c2	                             mov rdx, r8	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e96	      0xbf01000000	                              mov edi, 1	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e9b	      0xbd01000000	                              mov ebp, 1	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ea0	            0x84c0	                             test al, al	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ea2	            0x752d	                           jne 0x4000ed1	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ea4	      0xe9c0000000	                           jmp 0x4000f69	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ea9	     0xf1f80000000	                         nop dword [rax]	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000eb0	            0x3c5c	                            cmp al, 0x5c	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000eb2	     0xf8498000000	                            je 0x4000f50	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000eb8	            0x89cf	                            mov edi, ecx	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000eba	          0x83f701	                              xor edi, 1	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000ebd	            0x3c22	                            cmp al, 0x22	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000ebf	           0xf44cf	                          cmove ecx, edi	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000ec2	        0x4883c201	                              add rdx, 1	       364	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ec6	           0xfb602	                   movzx eax, byte [rdx]	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ec9	            0x84c0	                             test al, al	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ecb	     0xf848f000000	                            je 0x4000f60	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ed1	            0x85c9	                           test ecx, ecx	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ed3	            0x750c	                           jne 0x4000ee1	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ed5	           0xfb6f8	                           movzx edi, al	       363	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ed8	    0x80bf00000000	                       cmp byte [rdi], 1	       363	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000edf	            0x747f	                            je 0x4000f60	       363	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ee1	            0x85f6	                           test esi, esi	       366	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ee3	            0x74cb	                            je 0x4000eb0	       366	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ee5	            0x31f6	                            xor esi, esi	       367	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ee7	            0xebd9	                           jmp 0x4000ec2	       367	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ee9	     0xf1f80000000	                         nop dword [rax]	       367	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ef0	      0xbf00000000	                              mov edi, 0	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000ef5	      0xb905000000	                              mov ecx, 5	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000efa	          0x4889c6	                            mov rsi, rax	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000efd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000eff	     0xf84defeffff	                            je 0x4000de3	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000f05	      0xe9e6feffff	                           jmp 0x4000df0	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000f0a	    0x660f1f440000	                    nop word [rax + rax]	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000f10	    0x48891d000000	            mov qword [0x04000f17], rbx 	       411	listing.c	FUNCTION_6	ELSE_6
0x4000f17	      0xe933feffff	                           jmp 0x4000d4f	       411	listing.c	FUNCTION_6	ELSE_6
0x4000f1c	         0xf1f4000	                         nop dword [rax]	       411	listing.c	FUNCTION_6	ELSE_6
0x4000f20	      0xbf00000000	                              mov edi, 0	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f25	      0xb905000000	                              mov ecx, 5	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f2a	          0x4889d6	                            mov rsi, rdx	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f2d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f2f	     0xf85b3fdffff	                           jne 0x4000ce8	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f35	      0xe9a3fdffff	                           jmp 0x4000cdd	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f3a	    0x660f1f440000	                    nop word [rax + rax]	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f40	    0x48c743180000	               mov qword [rbx + 0x18], 0	       395	listing.c	FUNCTION_6	IF_6	ELSE_4
0x4000f48	      0xe9cafdffff	                           jmp 0x4000d17	       395	listing.c	FUNCTION_6	IF_6	ELSE_4
0x4000f4d	           0xf1f00	                         nop dword [rax]	       395	listing.c	FUNCTION_6	IF_6	ELSE_4
0x4000f50	      0xbe01000000	                              mov esi, 1	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f55	      0xe968ffffff	                           jmp 0x4000ec2	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f5a	    0x660f1f440000	                    nop word [rax + rax]	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f60	          0x4c29c2	                             sub rdx, r8	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f63	          0x8d6a01	                      lea ebp, [rdx + 1]	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f66	          0x4863fd	                         movsxd rdi, ebp	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f69	      0xe800000000	                          call 0x4000f6e	       376	listing.c	FUNCTION_6	IF_6	IF_8	CALL_9
0x4000f6e	    0x488b15000000	            mov rdx, qword [0x04000f75] 	       378	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f75	        0x448d45ff	                      lea r8d, [rbp - 1]	       378	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f79	          0x4889c7	                            mov rdi, rax	       379	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f7c	          0x4901d0	                             add r8, rdx	       379	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f7f	              0x90	                                     nop	       379	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f80	          0x4c39c2	                             cmp rdx, r8	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000f83	            0x741e	                            je 0x4000fa3	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000f85	        0x4883c201	                              add rdx, 1	       383	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000f89	         0xfb672ff	               movzx esi, byte [rdx - 1]	       383	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000f8d	    0xf68436000000	                test byte [rsi + rsi], 2	       386	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12	CALL_10
0x4000f95	            0x75e9	                           jne 0x4000f80	       386	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12	CALL_10
0x4000f97	          0x408837	                     mov byte [rdi], sil	       387	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12
0x4000f9a	        0x4883c701	                              add rdi, 1	       387	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12
0x4000f9e	          0x4c39c2	                             cmp rdx, r8	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fa1	            0x75e2	                           jne 0x4000f85	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fa3	          0xc60700	                       mov byte [rdi], 0	       390	listing.c	FUNCTION_6	IF_6	IF_8
0x4000fa6	        0x48894318	             mov qword [rbx + 0x18], rax	       392	listing.c	FUNCTION_6	IF_6	IF_8
0x4000faa	      0xe968fdffff	                           jmp 0x4000d17	       355	listing.c	FUNCTION_6	IF_6	IF_8
0x4000faf	      0xe800000000	                          call 0x4000fb4	       441	listing.c	FUNCTION_6
listing_file	DO,0:functions,0:WHILE,0:CALL,0:FOR,0:SWITCH,0:IF,0:ELSE,0	2
0x4002060	    0x48893d000000	            mov qword [0x04002067], rdi 	      1453	listing.c	FUNCTION_23
0x4002067	              0xc3	                                     ret	      1453	listing.c	FUNCTION_23
listing_eject	DO,0:functions,0:WHILE,0:CALL,1:FOR,0:SWITCH,0:IF,0:ELSE,0	6
0x4002070	    0x8b0500000000	            mov eax, dword [0x04002076] 	      1459	listing.c	FUNCTION_24	IF_1
0x4002076	            0x85c0	                           test eax, eax	      1459	listing.c	FUNCTION_24	IF_1
0x4002078	            0x740e	                            je 0x4002088	      1459	listing.c	FUNCTION_24	IF_1
0x400207a	    0x488b05000000	            mov rax, qword [0x04002081] 	      1460	listing.c	FUNCTION_24	IF_1
0x4002081	    0xc74048060000	               mov dword [rax + 0x48], 6	      1460	listing.c	FUNCTION_24	IF_1
0x4002088	            0xf3c3	                                     ret	      1460	listing.c	FUNCTION_24	IF_1
listing_psize	DO,0:functions,0:WHILE,0:CALL,1:FOR,0:SWITCH,0:IF,0:ELSE,0	26
0x4002120	        0x4883ec08	                              sub rsp, 8	      1499	listing.c	FUNCTION_26
0x4002124	            0x85ff	                           test edi, edi	      1500	listing.c	FUNCTION_26	IF_1
0x4002126	            0x7529	                           jne 0x4002151	      1500	listing.c	FUNCTION_26	IF_1
0x4002128	      0xe800000000	                          call 0x400212d	      1502	listing.c	FUNCTION_26	IF_1	CALL_1
0x400212d	      0x3de8030000	                          cmp eax, 0x3e8	      1504	listing.c	FUNCTION_26	IF_1	IF_2
0x4002132	            0x7734	                            ja 0x4002168	      1504	listing.c	FUNCTION_26	IF_1	IF_2
0x4002134	    0x890500000000	            mov dword [0x0400213a], eax 	      1502	listing.c	FUNCTION_26	IF_1	CALL_1
0x400213a	    0x488b05000000	            mov rax, qword [0x04002141] 	      1510	listing.c	FUNCTION_26	IF_1	IF_3
0x4002141	          0x80382c	                    cmp byte [rax], 0x2c	      1510	listing.c	FUNCTION_26	IF_1	IF_3
0x4002144	            0x7516	                           jne 0x400215c	      1510	listing.c	FUNCTION_26	IF_1	IF_3
0x4002146	        0x4883c001	                              add rax, 1	      1516	listing.c	FUNCTION_26	IF_1
0x400214a	    0x488905000000	            mov qword [0x04002151], rax 	      1516	listing.c	FUNCTION_26	IF_1
0x4002151	      0xe800000000	                          call 0x4002156	      1519	listing.c	FUNCTION_26	CALL_5
0x4002156	    0x890500000000	            mov dword [0x0400215c], eax 	      1519	listing.c	FUNCTION_26	CALL_5
0x400215c	        0x4883c408	                              add rsp, 8	      1522	listing.c	FUNCTION_26
0x4002160	      0xe900000000	                           jmp 0x4002165	      1521	listing.c	FUNCTION_26	CALL_6
0x4002165	           0xf1f00	                         nop dword [rax]	      1521	listing.c	FUNCTION_26	CALL_6
0x4002168	            0x31ff	                            xor edi, edi	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x400216a	      0xba05000000	                              mov edx, 5	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x400216f	      0xbe00000000	                              mov esi, 0	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002174	    0xc70500000000	               mov dword [0x0400217e], 0	      1506	listing.c	FUNCTION_26	IF_1	IF_2
0x400217e	      0xe800000000	                          call 0x4002183	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002183	          0x4889c7	                            mov rdi, rax	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002186	            0x31c0	                            xor eax, eax	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002188	      0xe800000000	                          call 0x400218d	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x400218d	            0xebab	                           jmp 0x400213a	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
listing_nopage	DO,0:functions,0:WHILE,0:CALL,1:FOR,0:SWITCH,0:IF,0:ELSE,0	2
0x4002190	    0xc70500000000	               mov dword [0x0400219a], 0	      1527	listing.c	FUNCTION_27
0x400219a	              0xc3	                                     ret	      1527	listing.c	FUNCTION_27
listing_list	DO,0:functions,0:WHILE,0:CALL,1:FOR,0:SWITCH,0:IF,0:ELSE,0	38
0x4002090	    0x8b0500000000	            mov eax, dword [0x04002096] 	      1471	listing.c	FUNCTION_25	IF_1
0x4002096	            0x85c0	                           test eax, eax	      1471	listing.c	FUNCTION_25	IF_1
0x4002098	            0x7426	                            je 0x40020c0	      1471	listing.c	FUNCTION_25	IF_1
0x400209a	          0x83ff01	                              cmp edi, 1	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x400209d	            0x7429	                            je 0x40020c8	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x400209f	          0x83ff02	                              cmp edi, 2	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020a2	            0x746c	                            je 0x4002110	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020a4	            0x85ff	                           test edi, edi	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020a6	            0x7448	                            je 0x40020f0	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020a8	        0x4883ec08	                              sub rsp, 8	      1470	listing.c	FUNCTION_25
0x40020ac	      0xba00000000	                              mov edx, 0	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020b1	      0xbed4050000	                          mov esi, 0x5d4	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020b6	      0xbf00000000	                              mov edi, 0	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020bb	      0xe800000000	                          call 0x40020c0	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020c0	            0xf3c3	                                     ret	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020c2	    0x660f1f440000	                    nop word [rax + rax]	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40020c8	    0x488b15000000	            mov rdx, qword [0x040020cf] 	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020cf	          0x8b4248	            mov eax, dword [rdx + 0x48] 	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020d2	          0x83e803	                              sub eax, 3	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020d5	          0x83e0fd	                     and eax, 0xfffffffd	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020d8	          0x83f801	                              cmp eax, 1	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020db	            0x19c0	                            sbb eax, eax	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020dd	            0xf7d0	                                 not eax	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020df	          0x83e004	                              and eax, 4	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020e2	          0x894248	             mov dword [rdx + 0x48], eax	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020e5	              0xc3	                                     ret	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40020f0	    0x488b15000000	            mov rdx, qword [0x040020f7] 	      1476	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40020f7	            0x31c0	                            xor eax, eax	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40020f9	        0x837a4804	               cmp dword [rdx + 0x48], 4	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40020fd	           0xf95c0	                                setne al	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x4002100	          0x8d0440	                  lea eax, [rax + rax*2]	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x4002103	          0x894248	             mov dword [rdx + 0x48], eax	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x4002106	              0xc3	                                     ret	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x4002107	    0x660f1f840000	                    nop word [rax + rax]	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x4002110	    0x488b05000000	            mov rax, qword [0x04002117] 	      1489	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002117	    0xc74048050000	               mov dword [rax + 0x48], 5	      1489	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x400211e	              0xc3	                                     ret	      1490	listing.c	FUNCTION_25	IF_1	SWITCH_1
listing_error	DO,0:functions,0:WHILE,0:CALL,2:FOR,0:SWITCH,0:IF,0:ELSE,0	10
0x4000c40	              0x53	                                push rbx	       258	listing.c	FUNCTION_3
0x4000c41	      0xbe00000000	                              mov esi, 0	       259	listing.c	FUNCTION_3	CALL_2
0x4000c46	          0x4889fb	                            mov rbx, rdi	       258	listing.c	FUNCTION_3
0x4000c49	      0xba05000000	                              mov edx, 5	       259	listing.c	FUNCTION_3	CALL_2
0x4000c4e	            0x31ff	                            xor edi, edi	       259	listing.c	FUNCTION_3	CALL_2
0x4000c50	      0xe800000000	                          call 0x4000c55	       259	listing.c	FUNCTION_3	CALL_2
0x4000c55	          0x4889de	                            mov rsi, rbx	       259	listing.c	FUNCTION_3	CALL_2
0x4000c58	          0x4889c7	                            mov rdi, rax	       259	listing.c	FUNCTION_3	CALL_2
0x4000c5b	              0x5b	                                 pop rbx	       260	listing.c	FUNCTION_3
0x4000c5c	      0xe9dff3ffff	                 jmp sym.listing_message	       259	listing.c	FUNCTION_3	CALL_2
listing_source_line	DO,0:functions,0:WHILE,0:CALL,0:FOR,0:SWITCH,0:IF,0:ELSE,0	18
0x4002300	    0x8b0500000000	            mov eax, dword [0x04002306] 	      1583	listing.c	FUNCTION_29	IF_1
0x4002306	            0x85c0	                           test eax, eax	      1583	listing.c	FUNCTION_29	IF_1
0x4002308	            0x7506	                           jne 0x4002310	      1583	listing.c	FUNCTION_29	IF_1
0x400230a	            0xf3c3	                                     ret	      1583	listing.c	FUNCTION_29	IF_1
0x400230c	         0xf1f4000	                         nop dword [rax]	      1583	listing.c	FUNCTION_29	IF_1
0x4002310	              0x53	                                push rbx	      1582	listing.c	FUNCTION_29
0x4002311	            0x89fb	                            mov ebx, edi	      1582	listing.c	FUNCTION_29
0x4002313	    0x488b3d000000	            mov rdi, qword [0x0400231a] 	       290	listing.c	FUNCTION_5	CALL_1
0x400231a	      0xe800000000	                          call 0x400231f	       290	listing.c	FUNCTION_5	CALL_1
0x400231f	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4002321	      0xe800000000	                          call 0x4002326	       291	listing.c	FUNCTION_5	CALL_2
0x4002326	    0x488b05000000	            mov rax, qword [0x0400232d] 	      1586	listing.c	FUNCTION_29	IF_1
0x400232d	    0x488b3d000000	            mov rdi, qword [0x04002334] 	       290	listing.c	FUNCTION_5	CALL_1
0x4002334	          0x895830	             mov dword [rax + 0x30], ebx	      1586	listing.c	FUNCTION_29	IF_1
0x4002337	      0xe800000000	                          call 0x400233c	       290	listing.c	FUNCTION_5	CALL_1
0x400233c	              0x5b	                                 pop rbx	      1589	listing.c	FUNCTION_29
0x400233d	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x400233f	      0xe900000000	                           jmp 0x4002344	       291	listing.c	FUNCTION_5	CALL_2
listing_warning	DO,0:functions,0:WHILE,0:CALL,2:FOR,0:SWITCH,0:IF,0:ELSE,0	10
0x4000c10	              0x53	                                push rbx	       252	listing.c	ELSE_1	FUNCTION_2
0x4000c11	      0xbe00000000	                              mov esi, 0	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000c16	          0x4889fb	                            mov rbx, rdi	       252	listing.c	ELSE_1	FUNCTION_2
0x4000c19	      0xba05000000	                              mov edx, 5	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000c1e	            0x31ff	                            xor edi, edi	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000c20	      0xe800000000	                          call 0x4000c25	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000c25	          0x4889de	                            mov rsi, rbx	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000c28	          0x4889c7	                            mov rdi, rax	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000c2b	              0x5b	                                 pop rbx	       254	listing.c	ELSE_1	FUNCTION_2
0x4000c2c	      0xe90ff4ffff	                 jmp sym.listing_message	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
listing_print	DO,0:functions,0:WHILE,0:CALL,12:FOR,0:SWITCH,0:IF,9:ELSE,2	959
0x4001070	            0x4157	                                push r15	      1404	listing.c	FUNCTION_22
0x4001072	            0x4156	                                push r14	      1404	listing.c	FUNCTION_22
0x4001074	            0x4155	                                push r13	      1404	listing.c	FUNCTION_22
0x4001076	            0x4154	                                push r12	      1404	listing.c	FUNCTION_22
0x4001078	              0x55	                                push rbp	      1404	listing.c	FUNCTION_22
0x4001079	              0x53	                                push rbx	      1404	listing.c	FUNCTION_22
0x400107a	          0x4889f3	                            mov rbx, rsi	      1404	listing.c	FUNCTION_22
0x400107d	    0x4881ecb80000	                           sub rsp, 0xb8	      1404	listing.c	FUNCTION_22
0x4001084	    0x48c705000000	               mov qword [0x0400108f], 0	      1407	listing.c	FUNCTION_22
0x400108f	    0x48c705000000	               mov qword [0x0400109a], 0	      1408	listing.c	FUNCTION_22
0x400109a	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1404	listing.c	FUNCTION_22
0x40010a3	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	      1404	listing.c	FUNCTION_22
0x40010ab	            0x31c9	                            xor ecx, ecx	      1404	listing.c	FUNCTION_22
0x40010ad	          0x4885ff	                           test rdi, rdi	      1410	listing.c	FUNCTION_22	IF_1
0x40010b0	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1404	listing.c	FUNCTION_22
0x40010b5	     0xf84cd000000	                            je 0x4001188	      1410	listing.c	FUNCTION_22	IF_1
0x40010bb	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1417	listing.c	FUNCTION_22	ELSE_1	CALL_1
0x40010c0	      0xbe00000000	                              mov esi, 0	      1417	listing.c	FUNCTION_22	ELSE_1	CALL_1
0x40010c5	      0xe800000000	                          call 0x40010ca	      1417	listing.c	FUNCTION_22	ELSE_1	CALL_1
0x40010ca	          0x4885c0	                           test rax, rax	      1418	listing.c	FUNCTION_22	ELSE_1	IF_2
0x40010cd	    0x488905000000	            mov qword [0x040010d4], rax 	      1417	listing.c	FUNCTION_22	ELSE_1	CALL_1
0x40010d4	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1419	listing.c	FUNCTION_22	ELSE_1	IF_2
0x40010dc	            0x7472	                            je 0x4001150	      1418	listing.c	FUNCTION_22	ELSE_1	IF_2
0x40010de	    0x8b0500000000	            mov eax, dword [0x040010e4] 	      1428	listing.c	FUNCTION_22	IF_3
0x40010e4	            0xa804	                              test al, 4	      1428	listing.c	FUNCTION_22	IF_3
0x40010e6	            0x740a	                            je 0x40010f2	      1428	listing.c	FUNCTION_22	IF_3
0x40010e8	    0xc70500000000	               mov dword [0x040010f2], 0	      1429	listing.c	FUNCTION_22	IF_3
0x40010f2	            0xa880	                           test al, 0x80	      1431	listing.c	FUNCTION_22	IF_4
0x40010f4	     0xf85d6030000	                           jne 0x40014d0	      1431	listing.c	FUNCTION_22	IF_4
0x40010fa	            0xa801	                              test al, 1	      1434	listing.c	FUNCTION_22	IF_5
0x40010fc	     0xf85a6000000	                           jne 0x40011a8	      1434	listing.c	FUNCTION_22	IF_5
0x4001102	            0xa802	                              test al, 2	      1437	listing.c	FUNCTION_22	IF_6
0x4001104	     0xf850e060000	                           jne 0x4001718	      1437	listing.c	FUNCTION_22	IF_6
0x400110a	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1440	listing.c	FUNCTION_22	IF_7
0x400110e	            0x85c9	                           test ecx, ecx	      1440	listing.c	FUNCTION_22	IF_7
0x4001110	     0xf845a080000	                            je 0x4001970	      1440	listing.c	FUNCTION_22	IF_7
0x4001116	    0x488b3d000000	            mov rdi, qword [0x0400111d] 	      1446	listing.c	FUNCTION_22	IF_9
0x400111d	          0x4885ff	                           test rdi, rdi	      1446	listing.c	FUNCTION_22	IF_9
0x4001120	            0x7405	                            je 0x4001127	      1446	listing.c	FUNCTION_22	IF_9
0x4001122	      0xe800000000	                          call 0x4001127	      1447	listing.c	FUNCTION_22	CALL_12
0x4001127	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      1448	listing.c	FUNCTION_22
0x400112f	    0x644833042528	                xor rax, qword fs:[0x28]	      1448	listing.c	FUNCTION_22
0x4001138	     0xf85b70e0000	                           jne 0x4001ff5	      1448	listing.c	FUNCTION_22
0x400113e	    0x4881c4b80000	                           add rsp, 0xb8	      1448	listing.c	FUNCTION_22
0x4001145	              0x5b	                                 pop rbx	      1448	listing.c	FUNCTION_22
0x4001146	              0x5d	                                 pop rbp	      1448	listing.c	FUNCTION_22
0x4001147	            0x415c	                                 pop r12	      1448	listing.c	FUNCTION_22
0x4001149	            0x415d	                                 pop r13	      1448	listing.c	FUNCTION_22
0x400114b	            0x415e	                                 pop r14	      1448	listing.c	FUNCTION_22
0x400114d	            0x415f	                                 pop r15	      1448	listing.c	FUNCTION_22
0x400114f	              0xc3	                                     ret	      1448	listing.c	FUNCTION_22
0x4001150	      0xe800000000	                          call 0x4001155	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001155	            0x8b38	                    mov edi, dword [rax]	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001157	      0xe800000000	                          call 0x400115c	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400115c	      0xba05000000	                              mov edx, 5	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001161	      0xbe00000000	                              mov esi, 0	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001166	            0x31ff	                            xor edi, edi	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001168	          0x4889c5	                            mov rbp, rax	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400116b	      0xe800000000	                          call 0x4001170	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001170	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001175	          0x4889c7	                            mov rdi, rax	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001178	          0x4889ea	                            mov rdx, rbp	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400117b	            0x31c0	                            xor eax, eax	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400117d	      0xe800000000	                          call 0x4001182	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001182	    0x660f1f440000	                    nop word [rax + rax]	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001188	    0x488b05000000	            mov rax, qword [0x0400118f] 	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x400118f	    0xc74424140100	               mov dword [rsp + 0x14], 1	      1424	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x4001197	    0x488905000000	            mov qword [0x0400119e], rax 	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x400119e	      0xe93bffffff	                           jmp 0x40010de	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x40011a3	       0xf1f440000	                   nop dword [rax + rax]	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x40011a8	    0x48633d000000	         movsxd rdi, dword [0x040011af] 	      1206	listing.c	FUNCTION_17	CALL_1
0x40011af	      0xe800000000	                          call 0x40011b4	      1206	listing.c	FUNCTION_17	CALL_1
0x40011b4	      0x4889442408	                mov qword [rsp + 8], rax	      1206	listing.c	FUNCTION_17	CALL_1
0x40011b9	    0x8b0500000000	            mov eax, dword [0x040011bf] 	      1207	listing.c	FUNCTION_17	CALL_2
0x40011bf	    0x8b1500000000	            mov edx, dword [0x040011c5] 	      1207	listing.c	FUNCTION_17	CALL_2
0x40011c5	          0x8d04c0	                  lea eax, [rax + rax*8]	      1207	listing.c	FUNCTION_17	CALL_2
0x40011c8	     0xfaf05000000	            imul eax, dword [0x040011cf]	      1207	listing.c	FUNCTION_17	CALL_2
0x40011cf	          0x8d14d2	                  lea edx, [rdx + rdx*8]	      1207	listing.c	FUNCTION_17	CALL_2
0x40011d2	        0x8d7c1014	            lea edi, [rax + rdx + 0x14] 	      1207	listing.c	FUNCTION_17	CALL_2
0x40011d6	          0x4863ff	                         movsxd rdi, edi	      1207	listing.c	FUNCTION_17	CALL_2
0x40011d9	      0xe800000000	                          call 0x40011de	      1207	listing.c	FUNCTION_17	CALL_2
0x40011de	    0x488b15000000	            mov rdx, qword [0x040011e5] 	      1209	listing.c	FUNCTION_17
0x40011e5	    0x488905000000	            mov qword [0x040011ec], rax 	      1207	listing.c	FUNCTION_17	CALL_2
0x40011ec	    0xc70500000000	               mov dword [0x040011f6], 1	      1208	listing.c	FUNCTION_17
0x40011f6	        0x488b5a20	            mov rbx, qword [rdx + 0x20] 	      1209	listing.c	FUNCTION_17
0x40011fa	          0x4885db	                           test rbx, rbx	      1211	listing.c	FUNCTION_17	WHILE_1
0x40011fd	     0xf84770c0000	                            je 0x4001e7a	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001203	          0x4531f6	                          xor r14d, r14d	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001206	    0x41bf01000000	                             mov r15d, 1	      1211	listing.c	FUNCTION_17	WHILE_1
0x400120c	         0xf1f4000	                         nop dword [rax]	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001210	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001213	    0x8b2d00000000	            mov ebp, dword [0x04001219] 	      1215	listing.c	FUNCTION_17	WHILE_1
0x4001219	    0x392d00000000	            cmp dword [0x0400121f], ebp 	      1215	listing.c	FUNCTION_17	WHILE_1
0x400121f	        0x448b6308	               mov r12d, dword [rbx + 8]	      1218	listing.c	FUNCTION_17	WHILE_1
0x4001223	     0xf4e2d000000	          cmovle ebp, dword [0x0400122a]	      1215	listing.c	FUNCTION_17	WHILE_1
0x400122a	          0x83f806	                              cmp eax, 6	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400122d	     0xf878d070000	                            ja 0x40019c0	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001233	            0x89c2	                            mov edx, eax	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001235	    0xff24d5000000	                       jmp qword [rdx*8]	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400123c	         0xf1f4000	                         nop dword [rax]	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001240	        0x4183ec01	                             sub r12d, 1	      1223	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001244	          0x4585ff	                         test r15d, r15d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x4001247	     0xf8e830b0000	                           jle 0x4001dd0	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400124d	        0x4183c401	                             add r12d, 1	      1257	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001251	        0x4183c701	                             add r15d, 1	      1258	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001255	          0x4585ff	                         test r15d, r15d	      1261	listing.c	FUNCTION_17	WHILE_1	IF_4
0x4001258	     0xf8ea1000000	                           jle 0x40012ff	      1261	listing.c	FUNCTION_17	WHILE_1	IF_4
0x400125e	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x4001262	          0x4d85ed	                           test r13, r13	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x4001265	            0x7527	                           jne 0x400128e	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x4001267	          0x4d85f6	                           test r14, r14	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x400126a	            0x7438	                            je 0x40012a4	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x400126c	          0x4d89f5	                            mov r13, r14	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x400126f	            0xeb1d	                           jmp 0x400128e	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x4001271	     0xf1f80000000	                         nop dword [rax]	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x4001278	        0x4183ef01	                             sub r15d, 1	      1226	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400127c	          0x4585ff	                         test r15d, r15d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400127f	     0xf8ea8010000	                           jle 0x400142d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x4001285	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x4001289	          0x4d85ed	                           test r13, r13	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x400128c	            0x74d9	                            je 0x4001267	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x400128e	        0x448b4330	            mov r8d, dword [rbx + 0x30] 	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x4001292	          0x4585c0	                           test r8d, r8d	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x4001295	            0x740d	                            je 0x40012a4	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x4001297	    0xf60500000000	               test byte [0x0400129e], 8	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x400129e	     0xf85ec070000	                           jne 0x4001a90	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x40012a4	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1271	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x40012a8	          0x4885ff	                           test rdi, rdi	      1271	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x40012ab	     0xf84b9000000	                            je 0x400136a	      1271	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x40012b1	    0xf60500000000	           test byte [0x040012b8], 0x10 	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40012b8	     0xf84d2010000	                            je 0x4001490	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40012be	        0x448b5358	           mov r10d, dword [rbx + 0x58] 	      1130	listing.c	FUNCTION_16	IF_1
0x40012c2	          0x4585d2	                         test r10d, r10d	      1130	listing.c	FUNCTION_16	IF_1
0x40012c5	     0xf84b5010000	                            je 0x4001480	      1130	listing.c	FUNCTION_16	IF_1
0x40012cb	    0xc70500000000	               mov dword [0x040012d5], 1	      1133	listing.c	FUNCTION_16	IF_1
0x40012d5	      0xe800000000	                          call 0x40012da	      1279	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	CALL_8
0x40012da	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1280	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x40012e2	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1302	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x40012e5	          0x83f806	                              cmp eax, 6	      1302	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x40012e8	     0xf8412040000	                            je 0x4001700	      1302	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x40012ee	        0x4183ff01	                             cmp r15d, 1	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x40012f2	          0x4d89ee	                            mov r14, r13	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x40012f5	            0x7508	                           jne 0x40012ff	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x40012f7	          0x83f805	                              cmp eax, 5	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x40012fa	            0x7503	                           jne 0x40012ff	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x40012fc	          0x4531ff	                          xor r15d, r15d	      1307	listing.c	FUNCTION_17	WHILE_1	IF_12
0x40012ff	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1309	listing.c	FUNCTION_17	WHILE_1
0x4001303	          0x4885db	                           test rbx, rbx	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001306	     0xf8504ffffff	                           jne 0x4001210	      1211	listing.c	FUNCTION_17	WHILE_1
0x400130c	    0x488b1d000000	            mov rbx, qword [0x04001313] 	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001313	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1312	listing.c	FUNCTION_17	CALL_13
0x4001318	      0xe800000000	                          call 0x400131d	      1312	listing.c	FUNCTION_17	CALL_13
0x400131d	          0x4889df	                            mov rdi, rbx	      1313	listing.c	FUNCTION_17	CALL_14
0x4001320	      0xe800000000	                          call 0x4001325	      1313	listing.c	FUNCTION_17	CALL_14
0x4001325	    0x48c705000000	               mov qword [0x04001330], 0	      1314	listing.c	FUNCTION_17
0x4001330	    0x8b0500000000	            mov eax, dword [0x04001336] 	      1314	listing.c	FUNCTION_17
0x4001336	      0xe9c7fdffff	                           jmp 0x4001102	      1314	listing.c	FUNCTION_17
0x400133b	       0xf1f440000	                   nop dword [rax + rax]	      1314	listing.c	FUNCTION_17
0x4001340	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1314	listing.c	FUNCTION_17
0x4001344	          0x4c89f6	                            mov rsi, r14	      1314	listing.c	FUNCTION_17
0x4001347	        0x894c2420	             mov dword [rsp + 0x20], ecx	      1314	listing.c	FUNCTION_17
0x400134b	      0xe800f5ffff	 call sym.debugging_pseudo.isra.1.part.2	      1314	listing.c	FUNCTION_17
0x4001350	            0x85c0	                           test eax, eax	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x4001352	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x4001356	            0x7512	                           jne 0x400136a	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x4001358	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x400135c	          0x4c89f2	                            mov rdx, r14	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x400135f	          0x4889df	                            mov rdi, rbx	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x4001362	          0x8b7018	            mov esi, dword [rax + 0x18] 	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x4001365	      0xe8c6f1ffff	                    call sym.print_lines	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x400136a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400136e	        0x44396718	           cmp dword [rdi + 0x18], r12d 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x4001372	     0xf836affffff	                           jae 0x40012e2	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x4001378	        0x448b471c	            mov r8d, dword [rdi + 0x1c] 	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400137c	          0x4585c0	                           test r8d, r8d	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400137f	     0xf855dffffff	                           jne 0x40012e2	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x4001385	      0x488b742408	                mov rsi, qword [rsp + 8]	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400138a	            0x89ea	                            mov edx, ebp	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400138c	      0xe8cff6ffff	             call sym.buffer_line.part.4	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x4001391	          0x4989c6	                            mov r14, rax	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x4001394	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1291	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x4001398	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1292	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x400139d	        0x44396018	           cmp dword [rax + 0x18], r12d 	      1291	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x40013a1	     0xf8319010000	                           jae 0x40014c0	      1291	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x40013a7	    0xf60500000000	           test byte [0x040013ae], 0x10 	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x40013ae	            0x74a8	                            je 0x4001358	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x40013b0	        0x448b4b58	            mov r9d, dword [rbx + 0x58] 	      1130	listing.c	FUNCTION_16	IF_1
0x40013b4	          0x4585c9	                           test r9d, r9d	      1130	listing.c	FUNCTION_16	IF_1
0x40013b7	            0x7487	                            je 0x4001340	      1130	listing.c	FUNCTION_16	IF_1
0x40013b9	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013bd	    0xc70500000000	               mov dword [0x040013c7], 1	      1133	listing.c	FUNCTION_16	IF_1
0x40013c7	        0x44396718	           cmp dword [rdi + 0x18], r12d 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013cb	            0x72ab	                            jb 0x4001378	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013cd	      0xe910ffffff	                           jmp 0x40012e2	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013d2	    0x660f1f440000	                    nop word [rax + rax]	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013d8	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40013dc	    0x488915000000	            mov qword [0x040013e3], rdx 	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40013e3	      0xe994feffff	                           jmp 0x400127c	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40013e8	     0xf1f84000000	                   nop dword [rax + rax]	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40013f0	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      1240	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40013f4	    0x488915000000	            mov qword [0x040013fb], rdx 	      1240	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40013fb	      0xe97cfeffff	                           jmp 0x400127c	      1240	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001400	          0x4585ff	                         test r15d, r15d	      1229	listing.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001403	     0xf8573feffff	                           jne 0x400127c	      1229	listing.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001409	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400140d	        0x4183ec01	                             sub r12d, 1	      1230	listing.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001411	        0x443b6718	           cmp r12d, dword [rdi + 0x18] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001415	     0xf8632feffff	                           jbe 0x400124d	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400141b	          0x8b571c	            mov edx, dword [rdi + 0x1c] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400141e	            0x85d2	                           test edx, edx	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001420	            0x741c	                            je 0x400143e	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001422	            0xeb43	                           jmp 0x4001467	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001424	         0xf1f4000	                         nop dword [rax]	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001428	          0x4585ff	                         test r15d, r15d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400142b	            0x7f31	                            jg 0x400145e	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400142d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001431	        0x443b6718	           cmp r12d, dword [rdi + 0x18] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001435	            0x7627	                           jbe 0x400145e	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001437	          0x8b571c	            mov edx, dword [rdi + 0x1c] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400143a	            0x85d2	                           test edx, edx	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400143c	            0x7520	                           jne 0x400145e	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400143e	      0x488b742408	                mov rsi, qword [rsp + 8]	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001443	            0x89ea	                            mov edx, ebp	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001445	      0xe816f6ffff	             call sym.buffer_line.part.4	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400144a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400144e	        0x44396718	           cmp dword [rdi + 0x18], r12d 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001452	            0x7307	                           jae 0x400145b	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001454	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001457	            0x85c0	                           test eax, eax	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001459	            0x74e3	                            je 0x400143e	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400145b	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400145e	          0x83f804	                              cmp eax, 4	      1253	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001461	     0xf84e6fdffff	                            je 0x400124d	      1253	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001467	          0x83f805	                              cmp eax, 5	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x400146a	     0xf85e5fdffff	                           jne 0x4001255	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001470	          0x4585ff	                         test r15d, r15d	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001473	     0xf84d4fdffff	                            je 0x400124d	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001479	      0xe9d7fdffff	                           jmp 0x4001255	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x400147e	            0x6690	                                     nop	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001480	          0x4889fe	                            mov rsi, rdi	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001483	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001487	      0xe8c4f3ffff	 call sym.debugging_pseudo.isra.1.part.2	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x400148c	            0x85c0	                           test eax, eax	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x400148e	            0x7524	                           jne 0x40014b4	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x4001490	          0x4889df	                            mov rdi, rbx	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x4001493	      0xe808ecffff	                       call sym.calc_hex	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x4001498	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1276	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x400149c	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1277	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	CALL_7
0x40014a0	          0x8b7118	            mov esi, dword [rcx + 0x18] 	      1276	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40014a3	            0x85f6	                           test esi, esi	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014a5	            0x7503	                           jne 0x40014aa	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014a7	          0x8b7308	                mov esi, dword [rbx + 8]	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014aa	            0x89c1	                            mov ecx, eax	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014ac	          0x4889df	                            mov rdi, rbx	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014af	      0xe87cf0ffff	                    call sym.print_lines	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014b4	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014b8	      0xe918feffff	                           jmp 0x40012d5	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014bd	           0xf1f00	                         nop dword [rax]	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014c0	          0x4889df	                            mov rdi, rbx	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014c3	      0xe8d8ebffff	                       call sym.calc_hex	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014c8	            0x89c1	                            mov ecx, eax	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014ca	      0xe9d8feffff	                           jmp 0x40013a7	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014cf	              0x90	                                     nop	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014d0	            0x31ff	                            xor edi, edi	      1390	listing.c	FUNCTION_21	CALL_1
0x40014d2	    0xc70500000000	               mov dword [0x040014dc], 1	      1389	listing.c	FUNCTION_21
0x40014dc	      0xe8cfedffff	                   call sym.listing_page	      1390	listing.c	FUNCTION_21	CALL_1
0x40014e1	            0x31ff	                            xor edi, edi	      1393	listing.c	FUNCTION_21	CALL_2
0x40014e3	      0xba05000000	                              mov edx, 5	      1393	listing.c	FUNCTION_21	CALL_2
0x40014e8	      0xbe00000000	                              mov esi, 0	      1393	listing.c	FUNCTION_21	CALL_2
0x40014ed	      0xe800000000	                          call 0x40014f2	      1393	listing.c	FUNCTION_21	CALL_2
0x40014f2	    0x488b3d000000	            mov rdi, qword [0x040014f9] 	        97	stdio2.h	CALL_18
0x40014f9	    0x41b900000000	                              mov r9d, 0	        97	stdio2.h	CALL_18
0x40014ff	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_18
0x4001505	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_18
0x400150a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x400150d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001512	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001514	      0xe800000000	                          call 0x4001519	        97	stdio2.h	CALL_18
0x4001519	      0xba05000000	                              mov edx, 5	      1354	listing.c	FUNCTION_20	CALL_1
0x400151e	      0xbe00000000	                              mov esi, 0	      1354	listing.c	FUNCTION_20	CALL_1
0x4001523	            0x31ff	                            xor edi, edi	      1354	listing.c	FUNCTION_20	CALL_1
0x4001525	      0xe800000000	                          call 0x400152a	      1354	listing.c	FUNCTION_20	CALL_1
0x400152a	          0x4889c7	                            mov rdi, rax	      1355	listing.c	FUNCTION_20	CALL_2
0x400152d	          0x4889c5	                            mov rbp, rax	      1354	listing.c	FUNCTION_20	CALL_1
0x4001530	      0xe800000000	                          call 0x4001535	      1355	listing.c	FUNCTION_20	CALL_2
0x4001535	    0x488b35000000	            mov rsi, qword [0x0400153c] 	      1358	listing.c	FUNCTION_20	CALL_3
0x400153c	          0x4889ef	                            mov rdi, rbp	      1358	listing.c	FUNCTION_20	CALL_3
0x400153f	          0x4189c4	                           mov r12d, eax	      1355	listing.c	FUNCTION_20	CALL_2
0x4001542	        0x488d6b08	                      lea rbp, [rbx + 8]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001546	      0xe800000000	                          call 0x400154b	      1358	listing.c	FUNCTION_20	CALL_3
0x400154b	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1359	listing.c	FUNCTION_20	FOR_1
0x400154f	          0x4885db	                           test rbx, rbx	      1359	listing.c	FUNCTION_20	FOR_1
0x4001552	            0x751d	                           jne 0x4001571	      1359	listing.c	FUNCTION_20	FOR_1
0x4001554	      0xe9af000000	                           jmp 0x4001608	      1359	listing.c	FUNCTION_20	FOR_1
0x4001559	     0xf1f80000000	                         nop dword [rax]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001560	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001564	        0x4883c508	                              add rbp, 8	      1359	listing.c	FUNCTION_20	FOR_1
0x4001568	          0x4885db	                           test rbx, rbx	      1359	listing.c	FUNCTION_20	FOR_1
0x400156b	     0xf8497000000	                            je 0x4001608	      1359	listing.c	FUNCTION_20	FOR_1
0x4001571	          0x803b2d	                    cmp byte [rbx], 0x2d	      1360	listing.c	FUNCTION_20	FOR_1	IF_1
0x4001574	            0x75ea	                           jne 0x4001560	      1360	listing.c	FUNCTION_20	FOR_1	IF_1
0x4001576	         0xfb64301	               movzx eax, byte [rbx + 1]	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x400157a	          0x83f86f	                           cmp eax, 0x6f	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x400157d	            0x7461	                            je 0x40015e0	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x400157f	          0x83f876	                           cmp eax, 0x76	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x4001582	            0x7454	                            je 0x40015d8	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x4001584	          0x4889df	                            mov rdi, rbx	      1335	listing.c	FUNCTION_19	CALL_1
0x4001587	      0xe800000000	                          call 0x400158c	      1335	listing.c	FUNCTION_19	CALL_1
0x400158c	          0x4101c4	                           add r12d, eax	      1337	listing.c	FUNCTION_19	IF_1
0x400158f	    0x443b25000000	           cmp r12d, dword [0x04001596] 	      1337	listing.c	FUNCTION_19	IF_1
0x4001596	          0x4989c5	                            mov r13, rax	      1335	listing.c	FUNCTION_19	CALL_1
0x4001599	      0xba05000000	                              mov edx, 5	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x400159e	     0xf8c6c080000	                            jl 0x4001e10	      1337	listing.c	FUNCTION_19	IF_1
0x40015a4	      0xbe00000000	                              mov esi, 0	      1344	listing.c	FUNCTION_19	ELSE_1	CALL_3
0x40015a9	            0x31ff	                            xor edi, edi	      1344	listing.c	FUNCTION_19	ELSE_1	CALL_3
0x40015ab	          0x4589ec	                          mov r12d, r13d	      1345	listing.c	FUNCTION_19	ELSE_1
0x40015ae	      0xe800000000	                          call 0x40015b3	      1344	listing.c	FUNCTION_19	ELSE_1	CALL_3
0x40015b3	    0x488b3d000000	            mov rdi, qword [0x040015ba] 	        97	stdio2.h	CALL_18
0x40015ba	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x40015bd	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x40015c0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40015c5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40015c7	      0xe800000000	                          call 0x40015cc	        97	stdio2.h	CALL_18
0x40015cc	        0x488b5d08	                mov rbx, qword [rbp + 8]	        97	stdio2.h	CALL_18
0x40015d0	            0xeb92	                           jmp 0x4001564	        97	stdio2.h	CALL_18
0x40015d2	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_18
0x40015d8	        0x807b0200	                   cmp byte [rbx + 2], 0	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x40015dc	            0x7482	                            je 0x4001560	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x40015de	            0xeba4	                           jmp 0x4001584	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x40015e0	        0x807b0200	                   cmp byte [rbx + 2], 0	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x40015e4	            0x759e	                           jne 0x4001584	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x40015e6	      0x48837d0800	                  cmp qword [rbp + 8], 0	      1365	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x40015eb	            0x741b	                            je 0x4001608	      1365	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x40015ed	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1365	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x40015f1	        0x4883c508	                              add rbp, 8	      1366	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x40015f5	        0x4883c508	                              add rbp, 8	      1359	listing.c	FUNCTION_20	FOR_1
0x40015f9	          0x4885db	                           test rbx, rbx	      1359	listing.c	FUNCTION_20	FOR_1
0x40015fc	     0xf856fffffff	                           jne 0x4001571	      1359	listing.c	FUNCTION_20	FOR_1
0x4001602	    0x660f1f440000	                    nop word [rax + rax]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001608	    0x488b1d000000	            mov rbx, qword [0x0400160f] 	      1396	listing.c	FUNCTION_21	CALL_4
0x400160f	      0xba05000000	                              mov edx, 5	      1396	listing.c	FUNCTION_21	CALL_4
0x4001614	      0xbe00000000	                              mov esi, 0	      1396	listing.c	FUNCTION_21	CALL_4
0x4001619	            0x31ff	                            xor edi, edi	      1396	listing.c	FUNCTION_21	CALL_4
0x400161b	      0xe800000000	                          call 0x4001620	      1396	listing.c	FUNCTION_21	CALL_4
0x4001620	    0x488b3d000000	            mov rdi, qword [0x04001627] 	        97	stdio2.h	CALL_18
0x4001627	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x400162a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x400162d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001632	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001634	      0xe800000000	                          call 0x4001639	        97	stdio2.h	CALL_18
0x4001639	    0x488b1d000000	            mov rbx, qword [0x04001640] 	      1397	listing.c	FUNCTION_21	CALL_5
0x4001640	      0xba05000000	                              mov edx, 5	      1397	listing.c	FUNCTION_21	CALL_5
0x4001645	      0xbe00000000	                              mov esi, 0	      1397	listing.c	FUNCTION_21	CALL_5
0x400164a	            0x31ff	                            xor edi, edi	      1397	listing.c	FUNCTION_21	CALL_5
0x400164c	      0xe800000000	                          call 0x4001651	      1397	listing.c	FUNCTION_21	CALL_5
0x4001651	    0x488b3d000000	            mov rdi, qword [0x04001658] 	        97	stdio2.h	CALL_18
0x4001658	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x400165b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x400165e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001663	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001665	      0xe800000000	                          call 0x400166a	        97	stdio2.h	CALL_18
0x400166a	      0xba05000000	                              mov edx, 5	      1398	listing.c	FUNCTION_21	CALL_6
0x400166f	      0xbe00000000	                              mov esi, 0	      1398	listing.c	FUNCTION_21	CALL_6
0x4001674	            0x31ff	                            xor edi, edi	      1398	listing.c	FUNCTION_21	CALL_6
0x4001676	      0xe800000000	                          call 0x400167b	      1398	listing.c	FUNCTION_21	CALL_6
0x400167b	    0x488b3d000000	            mov rdi, qword [0x04001682] 	        97	stdio2.h	CALL_18
0x4001682	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x4001685	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_18
0x400168a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x400168f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001691	      0xe800000000	                          call 0x4001696	        97	stdio2.h	CALL_18
0x4001696	            0x31ff	                            xor edi, edi	      1322	listing.c	FUNCTION_18	CALL_1
0x4001698	      0xe800000000	                          call 0x400169d	      1322	listing.c	FUNCTION_18	CALL_1
0x400169d	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1327	listing.c	FUNCTION_18	CALL_2
0x40016a2	      0x4889442468	             mov qword [rsp + 0x68], rax	      1322	listing.c	FUNCTION_18	CALL_1
0x40016a7	      0xe800000000	                          call 0x40016ac	      1327	listing.c	FUNCTION_18	CALL_2
0x40016ac	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1328	listing.c	FUNCTION_18	CALL_3
0x40016b4	          0x4889c1	                            mov rcx, rax	      1328	listing.c	FUNCTION_18	CALL_3
0x40016b7	      0xba00000000	                              mov edx, 0	      1328	listing.c	FUNCTION_18	CALL_3
0x40016bc	      0xbe1e000000	                           mov esi, 0x1e	      1328	listing.c	FUNCTION_18	CALL_3
0x40016c1	      0xe800000000	                          call 0x40016c6	      1328	listing.c	FUNCTION_18	CALL_3
0x40016c6	      0xba05000000	                              mov edx, 5	      1329	listing.c	FUNCTION_18	CALL_4
0x40016cb	      0xbe00000000	                              mov esi, 0	      1329	listing.c	FUNCTION_18	CALL_4
0x40016d0	            0x31ff	                            xor edi, edi	      1329	listing.c	FUNCTION_18	CALL_4
0x40016d2	      0xe800000000	                          call 0x40016d7	      1329	listing.c	FUNCTION_18	CALL_4
0x40016d7	    0x488b3d000000	            mov rdi, qword [0x040016de] 	        97	stdio2.h	CALL_18
0x40016de	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	        97	stdio2.h	CALL_18
0x40016e6	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x40016e9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40016ee	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40016f0	      0xe800000000	                          call 0x40016f5	        97	stdio2.h	CALL_18
0x40016f5	    0x8b0500000000	            mov eax, dword [0x040016fb] 	        97	stdio2.h	CALL_18
0x40016fb	      0xe9faf9ffff	                           jmp 0x40010fa	        97	stdio2.h	CALL_18
0x4001700	    0xc70500000000	               mov dword [0x0400170a], 1	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x400170a	          0x4d89ee	                            mov r14, r13	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x400170d	      0xe9edfbffff	                           jmp 0x40012ff	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x4001712	    0x660f1f440000	                    nop word [rax + rax]	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x4001718	            0x31ff	                            xor edi, edi	       931	listing.c	FUNCTION_14	CALL_1
0x400171a	    0xc70500000000	               mov dword [0x04001724], 1	       930	listing.c	FUNCTION_14
0x4001724	            0x31ed	                            xor ebp, ebp	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001726	      0xe885ebffff	                   call sym.listing_page	       931	listing.c	FUNCTION_14	CALL_1
0x400172b	    0x488b1d000000	            mov rbx, qword [0x04001732] 	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001732	          0x4885db	                           test rbx, rbx	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001735	            0x754b	                           jne 0x4001782	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001737	      0xe9e4020000	                           jmp 0x4001a20	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x400173c	         0xf1f4000	                         nop dword [rax]	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001740	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001743	      0xe800000000	                          call 0x4001748	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001748	    0x483b05000000	            cmp rax, qword [0x0400174f] 	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x400174f	            0x7451	                            je 0x40017a2	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001751	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001754	      0xe800000000	                          call 0x4001759	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001759	    0x483b05000000	            cmp rax, qword [0x04001760] 	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001760	            0x7440	                            je 0x40017a2	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001762	          0x4889df	                            mov rdi, rbx	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x4001765	      0xe800000000	                          call 0x400176a	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x400176a	            0x85c0	                           test eax, eax	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x400176c	     0xf84ee000000	                            je 0x4001860	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x4001772	          0x4889df	                            mov rdi, rbx	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001775	      0xe800000000	                          call 0x400177a	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x400177a	          0x4885c0	                           test rax, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x400177d	          0x4889c3	                            mov rbx, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001780	            0x7440	                            je 0x40017c2	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001782	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001785	      0xe800000000	                          call 0x400178a	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x400178a	    0x483d00000000	                              cmp rax, 0	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001790	            0x7410	                            je 0x40017a2	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001792	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001795	      0xe800000000	                          call 0x400179a	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x400179a	    0x483d00000000	                              cmp rax, 0	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017a0	            0x759e	                           jne 0x4001740	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017a2	          0x4889df	                            mov rdi, rbx	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017a5	      0xe800000000	                          call 0x40017aa	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017aa	    0x483d00000000	                              cmp rax, 0	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017b0	            0x74b0	                            je 0x4001762	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017b2	          0x4889df	                            mov rdi, rbx	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017b5	      0xe800000000	                          call 0x40017ba	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017ba	          0x4885c0	                           test rax, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017bd	          0x4889c3	                            mov rbx, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017c0	            0x75c0	                           jne 0x4001782	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017c2	            0x85ed	                           test ebp, ebp	       992	listing.c	FUNCTION_14	IF_9
0x40017c4	     0xf8456020000	                            je 0x4001a20	       992	listing.c	FUNCTION_14	IF_9
0x40017ca	            0x31ff	                            xor edi, edi	       997	listing.c	FUNCTION_14	CALL_18
0x40017cc	            0x31c0	                            xor eax, eax	       997	listing.c	FUNCTION_14	CALL_18
0x40017ce	      0xbe00000000	                              mov esi, 0	       997	listing.c	FUNCTION_14	CALL_18
0x40017d3	      0xe878ecffff	                      call sym.emit_line	       997	listing.c	FUNCTION_14	CALL_18
0x40017d8	    0x488b1d000000	            mov rbx, qword [0x040017df] 	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017df	            0x31ed	                            xor ebp, ebp	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017e1	          0x4885db	                           test rbx, rbx	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017e4	            0x751e	                           jne 0x4001804	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017e6	      0xe9f5010000	                           jmp 0x40019e0	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017eb	       0xf1f440000	                   nop dword [rax + rax]	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017f0	          0x4889df	                            mov rdi, rbx	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017f3	      0xe800000000	                          call 0x40017f8	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017f8	          0x4885c0	                           test rax, rax	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017fb	          0x4889c3	                            mov rbx, rax	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x40017fe	     0xf84d4010000	                            je 0x40019d8	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001804	          0x4889df	                            mov rdi, rbx	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001807	      0xe800000000	                          call 0x400180c	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400180c	          0x4885c0	                           test rax, rax	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400180f	            0x74df	                            je 0x40017f0	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001811	          0x4889df	                            mov rdi, rbx	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001814	      0xe800000000	                          call 0x4001819	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001819	          0x803800	                       cmp byte [rax], 0	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400181c	            0x74d2	                            je 0x40017f0	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400181e	          0x4889df	                            mov rdi, rbx	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x4001821	      0xe800000000	                          call 0x4001826	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x4001826	    0x483d00000000	                              cmp rax, 0	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x400182c	            0x75c2	                           jne 0x40017f0	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x400182e	            0x85ed	                           test ebp, ebp	      1007	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12
0x4001830	     0xf84ad050000	                            je 0x4001de3	      1007	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12
0x4001836	          0x4889df	                            mov rdi, rbx	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001839	      0xbd01000000	                              mov ebp, 1	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400183e	      0xe800000000	                          call 0x4001843	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001843	      0xbe00000000	                              mov esi, 0	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001848	          0x4889c2	                            mov rdx, rax	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400184b	            0x31ff	                            xor edi, edi	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400184d	            0x31c0	                            xor eax, eax	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400184f	      0xe8fcebffff	                      call sym.emit_line	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001854	            0xeb9a	                           jmp 0x40017f0	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001856	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001860	          0x4889df	                            mov rdi, rbx	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x4001863	      0xe800000000	                          call 0x4001868	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x4001868	          0x4885c0	                           test rax, rax	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x400186b	     0xf8401ffffff	                            je 0x4001772	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x4001871	          0x4889df	                            mov rdi, rbx	       945	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_7
0x4001874	      0xe800000000	                          call 0x4001879	       945	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_7
0x4001879	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        33	stdio2.h	FUNCTION_40	CALL_1
0x400187e	          0x4989c4	                            mov r12, rax	       945	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_7
0x4001881	    0x41b810000000	                           mov r8d, 0x10	        33	stdio2.h	FUNCTION_40	CALL_1
0x4001887	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_40	CALL_1
0x400188c	      0xba08000000	                              mov edx, 8	        33	stdio2.h	FUNCTION_40	CALL_1
0x4001891	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x4001896	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x4001898	      0xe800000000	                          call 0x400189d	        33	stdio2.h	FUNCTION_40	CALL_1
0x400189d	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018a2	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018aa	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018ac	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018af	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018b4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018b9	      0xe800000000	                          call 0x40018be	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018be	            0x85ed	                           test ebp, ebp	       964	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x40018c0	     0xf8432010000	                            je 0x40019f8	       964	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x40018c6	          0x4889df	                            mov rdi, rbx	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018c9	      0xe800000000	                          call 0x40018ce	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018ce	          0x4885c0	                           test rax, rax	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018d1	     0xf8479010000	                            je 0x4001a50	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018d7	          0x4889df	                            mov rdi, rbx	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018da	      0xe800000000	                          call 0x40018df	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018df	      0x4883785000	               cmp qword [rax + 0x50], 0	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018e4	     0xf8466010000	                            je 0x4001a50	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x40018ea	          0x4889df	                            mov rdi, rbx	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x40018ed	      0xe800000000	                          call 0x40018f2	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x40018f2	          0x4889df	                            mov rdi, rbx	       976	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_13
0x40018f5	          0x4989c5	                            mov r13, rax	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x40018f8	      0xe800000000	                          call 0x40018fd	       976	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_13
0x40018fd	          0x4889df	                            mov rdi, rbx	       975	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_12
0x4001900	          0x4c8b20	                    mov r12, qword [rax]	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001903	      0xe800000000	                          call 0x4001908	       975	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_12
0x4001908	        0x488b4050	            mov rax, qword [rax + 0x50] 	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x400190c	          0x4889df	                            mov rdi, rbx	       974	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_11
0x400190f	          0x8b6808	                mov ebp, dword [rax + 8]	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001912	      0xe800000000	                          call 0x4001917	       974	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_11
0x4001917	        0x488b4050	            mov rax, qword [rax + 0x50] 	       974	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_11
0x400191b	    0x488b3d000000	            mov rdi, qword [0x04001922] 	        97	stdio2.h	CALL_18
0x4001922	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001927	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_18
0x400192a	          0x4189e8	                            mov r8d, ebp	        97	stdio2.h	CALL_18
0x400192d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4001932	        0x488b4010	            mov rax, qword [rax + 0x10] 	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001936	        0x488b4808	                mov rcx, qword [rax + 8]	        97	stdio2.h	CALL_18
0x400193a	            0x4155	                                push r13	        97	stdio2.h	CALL_18
0x400193c	    0x488d84248800	                   lea rax, [rsp + 0x88]	        97	stdio2.h	CALL_18
0x4001944	              0x50	                                push rax	        97	stdio2.h	CALL_18
0x4001945	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001947	      0xe800000000	                          call 0x400194c	        97	stdio2.h	CALL_18
0x400194c	              0x5e	                                 pop rsi	        97	stdio2.h	CALL_18
0x400194d	              0x5f	                                 pop rdi	        97	stdio2.h	CALL_18
0x400194e	            0x31ff	                            xor edi, edi	       987	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_17
0x4001950	    0x830500000000	               add dword [0x04001957], 1	       986	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3
0x4001957	      0xbd01000000	                              mov ebp, 1	       986	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3
0x400195c	      0xe84fe9ffff	                   call sym.listing_page	       987	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_17
0x4001961	      0xe90cfeffff	                           jmp 0x4001772	       987	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_17
0x4001966	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       987	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_17
0x4001970	    0x488b3d000000	            mov rdi, qword [0x04001977] 	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x4001977	      0xe800000000	                          call 0x400197c	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x400197c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x400197f	     0xf8591f7ffff	                           jne 0x4001116	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x4001985	      0xe800000000	                          call 0x400198a	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x400198a	            0x8b38	                    mov edi, dword [rax]	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x400198c	      0xe800000000	                          call 0x4001991	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001991	            0x31ff	                            xor edi, edi	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001993	      0xba05000000	                              mov edx, 5	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001998	      0xbe00000000	                              mov esi, 0	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x400199d	          0x4889c3	                            mov rbx, rax	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019a0	      0xe800000000	                          call 0x40019a5	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019a5	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019aa	          0x4889c7	                            mov rdi, rax	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019ad	          0x4889da	                            mov rdx, rbx	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019b0	            0x31c0	                            xor eax, eax	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019b2	      0xe800000000	                          call 0x40019b7	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019b7	      0xe95af7ffff	                           jmp 0x4001116	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019bc	         0xf1f4000	                         nop dword [rax]	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019c0	      0xba00000000	                              mov edx, 0	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40019c5	      0xbedb040000	                          mov esi, 0x4db	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40019ca	      0xbf00000000	                              mov edi, 0	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40019cf	      0xe800000000	                          call 0x40019d4	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40019d4	         0xf1f4000	                         nop dword [rax]	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40019d8	            0x85ed	                           test ebp, ebp	      1019	listing.c	FUNCTION_14	IF_13
0x40019da	     0xf852af7ffff	                           jne 0x400110a	      1019	listing.c	FUNCTION_14	IF_13
0x40019e0	      0xbe00000000	                              mov esi, 0	      1020	listing.c	FUNCTION_14	CALL_27
0x40019e5	            0x31ff	                            xor edi, edi	      1020	listing.c	FUNCTION_14	CALL_27
0x40019e7	            0x31c0	                            xor eax, eax	      1020	listing.c	FUNCTION_14	CALL_27
0x40019e9	      0xe862eaffff	                      call sym.emit_line	      1020	listing.c	FUNCTION_14	CALL_27
0x40019ee	      0xe917f7ffff	                           jmp 0x400110a	      1020	listing.c	FUNCTION_14	CALL_27
0x40019f3	       0xf1f440000	                   nop dword [rax + rax]	      1020	listing.c	FUNCTION_14	CALL_27
0x40019f8	    0x488b0d000000	            mov rcx, qword [0x040019ff] 	        97	stdio2.h	CALL_18
0x40019ff	      0xba10000000	                           mov edx, 0x10	        97	stdio2.h	CALL_18
0x4001a04	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001a09	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_18
0x4001a0e	      0xe800000000	                          call 0x4001a13	        97	stdio2.h	CALL_18
0x4001a13	    0x830500000000	               add dword [0x04001a1a], 1	       967	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001a1a	      0xe9a7feffff	                           jmp 0x40018c6	       967	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001a1f	              0x90	                                     nop	       967	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001a20	    0x488b0d000000	            mov rcx, qword [0x04001a27] 	        97	stdio2.h	CALL_18
0x4001a27	      0xba13000000	                           mov edx, 0x13	        97	stdio2.h	CALL_18
0x4001a2c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001a31	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_18
0x4001a36	      0xe800000000	                          call 0x4001a3b	        97	stdio2.h	CALL_18
0x4001a3b	    0x830500000000	               add dword [0x04001a42], 1	       995	listing.c	FUNCTION_14	IF_9
0x4001a42	      0xe983fdffff	                           jmp 0x40017ca	       995	listing.c	FUNCTION_14	IF_9
0x4001a47	    0x660f1f840000	                    nop word [rax + rax]	       995	listing.c	FUNCTION_14	IF_9
0x4001a50	          0x4889df	                            mov rdi, rbx	       981	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4
0x4001a53	      0xe800000000	                          call 0x4001a58	       981	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4
0x4001a58	          0x4889df	                            mov rdi, rbx	       982	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4	CALL_15
0x4001a5b	          0x4889c5	                            mov rbp, rax	       981	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4
0x4001a5e	      0xe800000000	                          call 0x4001a63	       982	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4	CALL_15
0x4001a63	    0x488b3d000000	            mov rdi, qword [0x04001a6a] 	        97	stdio2.h	CALL_18
0x4001a6a	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_18
0x4001a6d	    0x4c8d84248000	                    lea r8, [rsp + 0x80]	        97	stdio2.h	CALL_18
0x4001a75	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_18
0x4001a78	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4001a7d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001a82	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001a84	      0xe800000000	                          call 0x4001a89	        97	stdio2.h	CALL_18
0x4001a89	      0xe9c0feffff	                           jmp 0x400194e	        97	stdio2.h	CALL_18
0x4001a8e	            0x6690	                                     nop	        97	stdio2.h	CALL_18
0x4001a90	        0x418b5518	            mov edx, dword [r13 + 0x18] 	      1040	listing.c	FUNCTION_15	IF_1
0x4001a94	          0x4439c2	                            cmp edx, r8d	      1040	listing.c	FUNCTION_15	IF_1
0x4001a97	     0xf864b020000	                           jbe 0x4001ce8	      1040	listing.c	FUNCTION_15	IF_1
0x4001a9d	      0xba00000000	                              mov edx, 0	      1040	listing.c	FUNCTION_15	IF_1
0x4001aa2	            0x31c0	                            xor eax, eax	      1040	listing.c	FUNCTION_15	IF_1
0x4001aa4	          0x4c392a	                    cmp qword [rdx], r13	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001aa7	     0xf848d030000	                            je 0x4001e3a	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001aad	          0x83c001	                              add eax, 1	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001ab0	        0x4883c270	                           add rdx, 0x70	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001ab4	          0x83f803	                              cmp eax, 3	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001ab7	            0x75eb	                           jne 0x4001aa4	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001ab9	    0x486305000000	         movsxd rax, dword [0x04001ac0] 	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001ac0	      0xb900000000	                              mov ecx, 0	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001ac5	          0x8d5001	                      lea edx, [rax + 1]	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001ac8	          0x83fa03	                              cmp edx, 3	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001acb	           0xf44d1	                          cmove edx, ecx	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001ace	    0x891500000000	            mov dword [0x04001ad4], edx 	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001ad4	          0x4889c2	                            mov rdx, rax	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001ad7	        0x48c1e007	                              shl rax, 7	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001adb	        0x48c1e204	                              shl rdx, 4	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001adf	          0x4829d0	                            sub rax, rdx	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001ae2	          0x83fd01	                              cmp ebp, 1	       571	listing.c	FUNCTION_9	IF_1
0x4001ae5	    0x488d88000000	                          lea rcx, [rax]	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001aec	      0x4889442428	             mov qword [rsp + 0x28], rax	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001af1	    0x4c89a8000000	                    mov qword [rax], r13	      1077	listing.c	FUNCTION_15	IF_1	IF_3
0x4001af8	    0x448980000000	                    mov dword [rax], r8d	      1078	listing.c	FUNCTION_15	IF_1	IF_3
0x4001aff	    0xc68000000000	                       mov byte [rax], 0	      1079	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b06	    0x4c8db0000000	                          lea r14, [rax]	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001b0d	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b12	     0xf866a030000	                           jbe 0x4001e82	       571	listing.c	FUNCTION_9	IF_1
0x4001b18	        0x453b4518	            cmp r8d, dword [r13 + 0x18] 	       571	listing.c	FUNCTION_9	IF_1
0x4001b1c	     0xf8360030000	                           jae 0x4001e82	       571	listing.c	FUNCTION_9	IF_1
0x4001b22	    0x488b15000000	            mov rdx, qword [0x04001b29] 	       575	listing.c	FUNCTION_9	IF_2
0x4001b29	          0x4c39ea	                            cmp rdx, r13	       575	listing.c	FUNCTION_9	IF_2
0x4001b2c	            0x750c	                           jne 0x4001b3a	       575	listing.c	FUNCTION_9	IF_2
0x4001b2e	          0x4885d2	                           test rdx, rdx	       575	listing.c	FUNCTION_9	IF_2
0x4001b31	    0x488b3d000000	            mov rdi, qword [0x04001b38] 	       575	listing.c	FUNCTION_9	IF_2
0x4001b38	            0x7574	                           jne 0x4001bae	       575	listing.c	FUNCTION_9	IF_2
0x4001b3a	    0x488b3d000000	            mov rdi, qword [0x04001b41] 	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001b41	      0x4889542438	             mov qword [rsp + 0x38], rdx	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001b46	          0x4885ff	                           test rdi, rdi	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001b49	            0x7424	                            je 0x4001b6f	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001b4b	      0x4489442430	             mov dword [rsp + 0x30], r8d	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001b50	      0xe800000000	                          call 0x4001b55	       579	listing.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x4001b55	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       579	listing.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x4001b5a	    0x488b3d000000	            mov rdi, qword [0x04001b61] 	       580	listing.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4001b61	        0x48894210	             mov qword [rdx + 0x10], rax	       579	listing.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x4001b65	      0xe800000000	                          call 0x4001b6a	       580	listing.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4001b6a	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       580	listing.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4001b6f	        0x498b7d08	                mov rdi, qword [r13 + 8]	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001b73	      0xbe00000000	                              mov esi, 0	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001b78	      0x4489442430	             mov dword [rsp + 0x30], r8d	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001b7d	    0x4c892d000000	            mov qword [0x04001b84], r13 	       585	listing.c	FUNCTION_9	IF_2
0x4001b84	      0xe800000000	                          call 0x4001b89	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001b89	          0x4885c0	                           test rax, rax	       587	listing.c	FUNCTION_9	IF_2	IF_4
0x4001b8c	          0x4889c7	                            mov rdi, rax	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001b8f	    0x488905000000	            mov qword [0x04001b96], rax 	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001b96	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       587	listing.c	FUNCTION_9	IF_2	IF_4
0x4001b9b	     0xf8459040000	                            je 0x4001ffa	       587	listing.c	FUNCTION_9	IF_2	IF_4
0x4001ba1	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001ba5	          0x4885f6	                           test rsi, rsi	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001ba8	     0xf85ba030000	                           jne 0x4001f68	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001bae	      0x4489442430	             mov dword [rsp + 0x30], r8d	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001bb3	      0xe800000000	                          call 0x4001bb8	       599	listing.c	FUNCTION_9	CALL_5
0x4001bb8	        0x4883f802	                              cmp rax, 2	       600	listing.c	FUNCTION_9	IF_6
0x4001bbc	      0x4889442440	             mov qword [rsp + 0x40], rax	       599	listing.c	FUNCTION_9	CALL_5
0x4001bc1	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       600	listing.c	FUNCTION_9	IF_6
0x4001bc6	     0xf8e80030000	                           jle 0x4001f4c	       600	listing.c	FUNCTION_9	IF_6
0x4001bcc	          0x8d45ff	                      lea eax, [rbp - 1]	       605	listing.c	FUNCTION_9
0x4001bcf	        0x458b5d18	           mov r11d, dword [r13 + 0x18] 	       602	listing.c	FUNCTION_9
0x4001bd3	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	       612	listing.c	FUNCTION_9
0x4001bd8	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       612	listing.c	FUNCTION_9
0x4001bdd	        0x896c244c	             mov dword [rsp + 0x4c], ebp	       612	listing.c	FUNCTION_9
0x4001be1	          0x4889c1	                            mov rcx, rax	       606	listing.c	FUNCTION_9
0x4001be4	        0x89442448	             mov dword [rsp + 0x48], eax	       605	listing.c	FUNCTION_9
0x4001be8	          0x4c01f0	                            add rax, r14	       606	listing.c	FUNCTION_9
0x4001beb	      0x4889442430	             mov qword [rsp + 0x30], rax	       606	listing.c	FUNCTION_9
0x4001bf0	          0xc60000	                       mov byte [rax], 0	       606	listing.c	FUNCTION_9
0x4001bf3	        0x4183c301	                             add r11d, 1	       612	listing.c	FUNCTION_9
0x4001bf7	            0x31c0	                            xor eax, eax	       568	listing.c	FUNCTION_9
0x4001bf9	      0x4489642458	            mov dword [rsp + 0x58], r12d	       568	listing.c	FUNCTION_9
0x4001bfe	      0x4c896c2450	             mov qword [rsp + 0x50], r13	       568	listing.c	FUNCTION_9
0x4001c03	      0x44897c245c	            mov dword [rsp + 0x5c], r15d	       568	listing.c	FUNCTION_9
0x4001c08	            0x89c5	                            mov ebp, eax	       568	listing.c	FUNCTION_9
0x4001c0a	          0x4589c5	                           mov r13d, r8d	       568	listing.c	FUNCTION_9
0x4001c0d	          0x4d89cf	                             mov r15, r9	       568	listing.c	FUNCTION_9
0x4001c10	          0x4589dc	                          mov r12d, r11d	       568	listing.c	FUNCTION_9
0x4001c13	          0x4889cb	                            mov rbx, rcx	       568	listing.c	FUNCTION_9
0x4001c16	          0x83f501	                              xor ebp, 1	       568	listing.c	FUNCTION_9
0x4001c19	          0x83e501	                              and ebp, 1	       568	listing.c	FUNCTION_9
0x4001c1c	          0x4d85ff	                           test r15, r15	       614	listing.c	FUNCTION_9	WHILE_1
0x4001c1f	     0xf8e68020000	                           jle 0x4001e8d	       614	listing.c	FUNCTION_9	WHILE_1
0x4001c25	          0x4084ed	                           test bpl, bpl	       614	listing.c	FUNCTION_9	WHILE_1
0x4001c28	     0xf845f020000	                            je 0x4001e8d	       614	listing.c	FUNCTION_9	WHILE_1
0x4001c2e	          0x4c89f8	                            mov rax, r15	       619	listing.c	FUNCTION_9	WHILE_1
0x4001c31	    0x488b3d000000	            mov rdi, qword [0x04001c38] 	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001c38	          0x4829d8	                            sub rax, rbx	       619	listing.c	FUNCTION_9	WHILE_1
0x4001c3b	          0x4c39fb	                            cmp rbx, r15	       619	listing.c	FUNCTION_9	WHILE_1
0x4001c3e	    0x41bf00000000	                             mov r15d, 0	       619	listing.c	FUNCTION_9	WHILE_1
0x4001c44	        0x4c0f4ef8	                         cmovle r15, rax	       619	listing.c	FUNCTION_9	WHILE_1
0x4001c48	            0x31d2	                            xor edx, edx	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001c4a	          0x4c89fe	                            mov rsi, r15	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001c4d	      0xe800000000	                          call 0x4001c52	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001c52	    0x488b0d000000	            mov rcx, qword [0x04001c59] 	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001c59	          0x4889da	                            mov rdx, rbx	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001c5c	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001c61	          0x4c89f7	                            mov rdi, r14	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001c64	      0xe800000000	                          call 0x4001c69	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001c69	          0x4839c3	                            cmp rbx, rax	       623	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_7
0x4001c6c	     0xf8513030000	                           jne 0x4001f85	       623	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_7
0x4001c72	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c77	          0x4939ce	                            cmp r14, rcx	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c7a	          0x4889c8	                            mov rax, rcx	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c7d	            0x7612	                           jbe 0x4001c91	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c7f	            0xeb9b	                           jmp 0x4001c1c	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c81	     0xf1f80000000	                         nop dword [rax]	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c88	        0x4883e801	                              sub rax, 1	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c8c	          0x4939c6	                            cmp r14, rax	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c8f	            0x778b	                            ja 0x4001c1c	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001c91	          0x80380a	                     cmp byte [rax], 0xa	       631	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8
0x4001c94	            0x75f2	                           jne 0x4001c88	       631	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8
0x4001c96	        0x4183ec01	                             sub r12d, 1	       633	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8
0x4001c9a	          0x4539e5	                          cmp r13d, r12d	       635	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001c9d	            0x75e9	                           jne 0x4001c88	       635	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001c9f	          0x4889c5	                            mov rbp, rax	       645	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001ca2	        0x488d5001	                      lea rdx, [rax + 1]	       648	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x4001ca6	          0x4c29f5	                            sub rbp, r14	       645	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001ca9	          0x4c01fd	                            add rbp, r15	       645	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001cac	      0x4839542430	            cmp qword [rsp + 0x30], rdx 	       648	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x4001cb1	     0xf8450030000	                            je 0x4002007	       648	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x4001cb7	        0x8078010d	                 cmp byte [rax + 1], 0xd	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001cbb	           0xf94c0	                                 sete al	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001cbe	           0xfb6c0	                           movzx eax, al	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001cc1	      0x4c8d7c0501	                lea r15, [rbp + rax + 1]	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001cc6	    0x488b3d000000	            mov rdi, qword [0x04001ccd] 	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001ccd	            0x31d2	                            xor edx, edx	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001ccf	          0x4c89fe	                            mov rsi, r15	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001cd2	      0xbd01000000	                              mov ebp, 1	       638	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001cd7	          0x4589ec	                          mov r12d, r13d	       638	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001cda	      0xe800000000	                          call 0x4001cdf	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001cdf	      0xe932ffffff	                           jmp 0x4001c16	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001ce4	         0xf1f4000	                         nop dword [rax]	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001ce8	        0x418b451c	            mov eax, dword [r13 + 0x1c] 	      1088	listing.c	FUNCTION_15	IF_5
0x4001cec	            0x85c0	                           test eax, eax	      1088	listing.c	FUNCTION_15	IF_5
0x4001cee	     0xf85b0f5ffff	                           jne 0x40012a4	      1088	listing.c	FUNCTION_15	IF_5
0x4001cf4	          0x4439c2	                            cmp edx, r8d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001cf7	     0xf83a7f5ffff	                           jae 0x40012a4	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001cfd	          0x4531d2	                          xor r10d, r10d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d00	      0x4489642420	            mov dword [rsp + 0x20], r12d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d05	      0x44897c2428	            mov dword [rsp + 0x28], r15d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d0a	          0x4589d4	                          mov r12d, r10d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d0d	            0xeb51	                           jmp 0x4001d60	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d0f	              0x90	                                     nop	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d10	          0x4585e4	                         test r12d, r12d	      1105	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d13	            0x751a	                           jne 0x4001d2f	      1105	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d15	    0x8b0d00000000	            mov ecx, dword [0x04001d1b] 	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d1b	      0xbe00000000	                              mov esi, 0	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d20	          0x83c101	                              add ecx, 1	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d23	          0x83f903	                              cmp ecx, 3	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d26	           0xf44ce	                          cmove ecx, esi	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d29	    0x890d00000000	            mov dword [0x04001d2f], ecx 	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001d2f	        0x488b4808	                mov rcx, qword [rax + 8]	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001d33	      0xbe00000000	                              mov esi, 0	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001d38	            0x31c0	                            xor eax, eax	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001d3a	          0x4889df	                            mov rdi, rbx	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001d3d	        0x4183c401	                             add r12d, 1	      1114	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d41	      0xe80ae7ffff	                      call sym.emit_line	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001d46	        0x418b5518	            mov edx, dword [r13 + 0x18] 	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d4a	          0x3b5330	            cmp edx, dword [rbx + 0x30] 	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d4d	     0xf83ad000000	                           jae 0x4001e00	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d53	        0x458b5d1c	           mov r11d, dword [r13 + 0x1c] 	      1093	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d57	          0x4585db	                         test r11d, r11d	      1093	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d5a	     0xf85a0000000	                           jne 0x4001e00	      1093	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d60	    0x4c6335000000	         movsxd r14, dword [0x04001d67] 	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d67	          0x83c201	                              add edx, 1	      1099	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d6a	    0x41b800000000	                              mov r8d, 0	       485	listing.c	FUNCTION_8	IF_1
0x4001d70	          0x4c89f0	                            mov rax, r14	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d73	        0x49c1e607	                              shl r14, 7	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d77	        0x48c1e004	                              shl rax, 4	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d7b	          0x4929c6	                            sub r14, rax	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d7e	          0x4c89e8	                            mov rax, r13	       484	listing.c	FUNCTION_8	IF_1
0x4001d81	    0x41c686000000	                       mov byte [r14], 0	      1100	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d89	        0x458b7d1c	           mov r15d, dword [r13 + 0x1c] 	       484	listing.c	FUNCTION_8	IF_1
0x4001d8d	    0x4d89ae000000	                    mov qword [r14], r13	      1098	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d94	    0x418996000000	                    mov dword [r14], edx	      1099	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d9b	          0x4585ff	                         test r15d, r15d	       484	listing.c	FUNCTION_8	IF_1
0x4001d9e	     0xf856cffffff	                           jne 0x4001d10	       484	listing.c	FUNCTION_8	IF_1
0x4001da4	    0x498db6000000	                          lea rsi, [r14]	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001dab	            0x89ea	                            mov edx, ebp	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001dad	          0x4c89ef	                            mov rdi, r13	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001db0	      0xe8abecffff	             call sym.buffer_line.part.4	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001db5	    0x418b96000000	                    mov edx, dword [r14]	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001dbc	          0x4989c0	                             mov r8, rax	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001dbf	    0x498b86000000	                    mov rax, qword [r14]	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001dc6	      0xe945ffffff	                           jmp 0x4001d10	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001dcb	       0xf1f440000	                   nop dword [rax + rax]	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001dd0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001dd4	        0x443b6718	           cmp r12d, dword [rdi + 0x18] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001dd8	     0xf8759f6ffff	                            ja 0x4001437	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001dde	      0xe96af4ffff	                           jmp 0x400124d	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001de3	      0xbe00000000	                              mov esi, 0	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001de8	            0x31ff	                            xor edi, edi	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001dea	            0x31c0	                            xor eax, eax	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001dec	      0xe85fe6ffff	                      call sym.emit_line	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001df1	      0xe940faffff	                           jmp 0x4001836	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001df6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e00	      0x448b642420	           mov r12d, dword [rsp + 0x20] 	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e05	      0x448b7c2428	           mov r15d, dword [rsp + 0x28] 	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e0a	      0xe995f4ffff	                           jmp 0x40012a4	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e0f	              0x90	                                     nop	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e10	            0x31ff	                            xor edi, edi	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x4001e12	      0xbe00000000	                              mov esi, 0	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x4001e17	      0xe800000000	                          call 0x4001e1c	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x4001e1c	    0x488b3d000000	            mov rdi, qword [0x04001e23] 	        97	stdio2.h	CALL_18
0x4001e23	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x4001e26	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x4001e29	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001e2e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001e30	      0xe800000000	                          call 0x4001e35	        97	stdio2.h	CALL_18
0x4001e35	      0xe926f7ffff	                           jmp 0x4001560	        97	stdio2.h	CALL_18
0x4001e3a	        0x443b4208	                cmp r8d, dword [rdx + 8]	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e3e	     0xf8569fcffff	                           jne 0x4001aad	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e44	            0x4898	                                    cdqe	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e46	        0x486bc070	                     imul rax, rax, 0x70	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e4a	    0x488d90000000	                          lea rdx, [rax]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e51	    0x4c8d80000000	                           lea r8, [rax]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e58	    0x488b80000000	                    mov rax, qword [rax]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e5f	          0x8b5208	                mov edx, dword [rdx + 8]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e62	        0x488b4808	                mov rcx, qword [rax + 8]	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001e66	      0xbe00000000	                              mov esi, 0	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001e6b	          0x4889df	                            mov rdi, rbx	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001e6e	            0x31c0	                            xor eax, eax	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001e70	      0xe8dbe5ffff	                      call sym.emit_line	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001e75	      0xe92af4ffff	                           jmp 0x40012a4	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001e7a	          0x4889c3	                            mov rbx, rax	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001e7d	      0xe991f4ffff	                           jmp 0x4001313	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001e82	          0x4489c2	                            mov edx, r8d	       571	listing.c	FUNCTION_9	IF_1
0x4001e85	          0x4c89e8	                            mov rax, r13	       571	listing.c	FUNCTION_9	IF_1
0x4001e88	          0x4d89f0	                             mov r8, r14	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001e8b	            0xebd5	                           jmp 0x4001e62	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001e8d	    0x488b3d000000	            mov rdi, qword [0x04001e94] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001e94	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001e99	        0x8b6c244c	            mov ebp, dword [rsp + 0x4c] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001e9d	      0x448b642458	           mov r12d, dword [rsp + 0x58] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001ea2	      0x4c8b6c2450	            mov r13, qword [rsp + 0x50] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001ea7	      0x448b7c245c	           mov r15d, dword [rsp + 0x5c] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001eac	      0xe800000000	                          call 0x4001eb1	       666	listing.c	FUNCTION_9	CALL_12
0x4001eb1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       668	listing.c	FUNCTION_9	WHILE_2
0x4001eb4	      0x4c89742430	             mov qword [rsp + 0x30], r14	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001eb9	            0x745a	                            je 0x4001f15	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ebb	          0x83f80a	                            cmp eax, 0xa	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ebe	            0x7455	                            je 0x4001f15	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ec0	          0x83f80d	                            cmp eax, 0xd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ec3	     0xf8404010000	                            je 0x4001fcd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ec9	            0x31d2	                            xor edx, edx	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ecb	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ed0	            0x89d3	                            mov ebx, edx	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ed2	            0xeb12	                           jmp 0x4001ee6	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ed4	         0xf1f4000	                         nop dword [rax]	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ed8	          0x83f80a	                            cmp eax, 0xa	       668	listing.c	FUNCTION_9	WHILE_2
0x4001edb	            0x7433	                            je 0x4001f10	       668	listing.c	FUNCTION_9	WHILE_2
0x4001edd	          0x83f80d	                            cmp eax, 0xd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ee0	     0xf84e2000000	                            je 0x4001fc8	       668	listing.c	FUNCTION_9	WHILE_2
0x4001ee6	        0x395c2448	            cmp dword [rsp + 0x48], ebx 	       670	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001eea	            0x7610	                           jbe 0x4001efc	       670	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001eec	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001ef1	            0x8801	                      mov byte [rcx], al	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001ef3	        0x488d4101	                      lea rax, [rcx + 1]	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001ef7	      0x4889442430	             mov qword [rsp + 0x30], rax	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001efc	    0x488b3d000000	            mov rdi, qword [0x04001f03] 	       674	listing.c	FUNCTION_9	WHILE_2	CALL_13
0x4001f03	          0x83c301	                              add ebx, 1	       672	listing.c	FUNCTION_9	WHILE_2
0x4001f06	      0xe800000000	                          call 0x4001f0b	       674	listing.c	FUNCTION_9	WHILE_2	CALL_13
0x4001f0b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f0e	            0x75c8	                           jne 0x4001ed8	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f10	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f15	          0x83f80d	                            cmp eax, 0xd	       679	listing.c	FUNCTION_9	IF_13
0x4001f18	           0xf94c1	                                 sete cl	       679	listing.c	FUNCTION_9	IF_13
0x4001f1b	          0x83f80a	                            cmp eax, 0xa	       679	listing.c	FUNCTION_9	IF_13
0x4001f1e	           0xf94c2	                                 sete dl	       679	listing.c	FUNCTION_9	IF_13
0x4001f21	            0x84c9	                             test cl, cl	       679	listing.c	FUNCTION_9	IF_13
0x4001f23	     0xf85fe000000	                           jne 0x4002027	       679	listing.c	FUNCTION_9	IF_13
0x4001f29	            0x84d2	                             test dl, dl	       679	listing.c	FUNCTION_9	IF_13
0x4001f2b	     0xf85f6000000	                           jne 0x4002027	       679	listing.c	FUNCTION_9	IF_13
0x4001f31	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       689	listing.c	FUNCTION_9
0x4001f36	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       692	listing.c	FUNCTION_9	CALL_16
0x4001f3b	            0x31d2	                            xor edx, edx	       692	listing.c	FUNCTION_9	CALL_16
0x4001f3d	    0x488b3d000000	            mov rdi, qword [0x04001f44] 	       692	listing.c	FUNCTION_9	CALL_16
0x4001f44	          0xc60000	                       mov byte [rax], 0	       689	listing.c	FUNCTION_9
0x4001f47	      0xe800000000	                          call 0x4001f4c	       692	listing.c	FUNCTION_9	CALL_16
0x4001f4c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       692	listing.c	FUNCTION_9	CALL_16
0x4001f51	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       692	listing.c	FUNCTION_9	CALL_16
0x4001f56	          0x4d89f0	                             mov r8, r14	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001f59	    0x488b80000000	                    mov rax, qword [rax]	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001f60	          0x8b5108	                mov edx, dword [rcx + 8]	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001f63	      0xe9fafeffff	                           jmp 0x4001e62	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001f68	            0x31d2	                            xor edx, edx	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4001f6a	      0x4489442430	             mov dword [rsp + 0x30], r8d	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4001f6f	      0xe800000000	                          call 0x4001f74	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4001f74	    0x488b3d000000	            mov rdi, qword [0x04001f7b] 	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4001f7b	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4001f80	      0xe929fcffff	                           jmp 0x4001bae	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4001f85	      0x4c8b6c2450	            mov r13, qword [rsp + 0x50] 	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4001f8a	            0x31ff	                            xor edi, edi	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001f8c	      0xba05000000	                              mov edx, 5	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001f91	      0xbe00000000	                              mov esi, 0	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001f96	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001f9b	        0x8b6c244c	            mov ebp, dword [rsp + 0x4c] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001f9f	      0x448b642458	           mov r12d, dword [rsp + 0x58] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fa4	      0x448b7c245c	           mov r15d, dword [rsp + 0x5c] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fa9	        0x498b4508	                mov rax, qword [r13 + 8]	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fad	      0x4889442430	             mov qword [rsp + 0x30], rax	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fb2	      0xe800000000	                          call 0x4001fb7	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fb7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fbc	          0x4889c7	                            mov rdi, rax	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fbf	            0x31c0	                            xor eax, eax	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fc1	      0xe800000000	                          call 0x4001fc6	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fc6	            0xeb84	                           jmp 0x4001f4c	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fc8	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4001fcd	    0x488b3d000000	            mov rdi, qword [0x04001fd4] 	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x4001fd4	      0xe800000000	                          call 0x4001fd9	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x4001fd9	          0x83f80a	                            cmp eax, 0xa	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4001fdc	     0xf844fffffff	                            je 0x4001f31	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4001fe2	    0x488b35000000	            mov rsi, qword [0x04001fe9] 	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x4001fe9	            0x89c7	                            mov edi, eax	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x4001feb	      0xe800000000	                          call 0x4001ff0	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x4001ff0	      0xe93cffffff	                           jmp 0x4001f31	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x4001ff5	      0xe800000000	                          call 0x4001ffa	      1448	listing.c	FUNCTION_22
0x4001ffa	    0x41c7451c0100	               mov dword [r13 + 0x1c], 1	       589	listing.c	FUNCTION_9	IF_2	IF_4
0x4002002	      0xe945ffffff	                           jmp 0x4001f4c	       589	listing.c	FUNCTION_9	IF_2	IF_4
0x4002007	    0x488b3d000000	            mov rdi, qword [0x0400200e] 	       651	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11	CALL_10
0x400200e	        0x4c8d7d01	                      lea r15, [rbp + 1]	       650	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x4002012	        0x4883c502	                              add rbp, 2	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x4002016	      0xe800000000	                          call 0x400201b	       651	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11	CALL_10
0x400201b	          0x83f80d	                            cmp eax, 0xd	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x400201e	        0x4c0f44fd	                          cmove r15, rbp	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x4002022	      0xe99ffcffff	                           jmp 0x4001cc6	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x4002027	    0x488b3d000000	            mov rdi, qword [0x0400202e] 	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x400202e	        0x88542448	               mov byte [rsp + 0x48], dl	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x4002032	        0x884c2438	               mov byte [rsp + 0x38], cl	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x4002036	      0xe800000000	                          call 0x400203b	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x400203b	          0x83f80a	                            cmp eax, 0xa	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x400203e	       0xfb6542448	           movzx edx, byte [rsp + 0x48] 	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4002043	            0x7409	                            je 0x400204e	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4002045	       0xfb64c2438	           movzx ecx, byte [rsp + 0x38] 	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x400204a	            0x84c9	                             test cl, cl	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x400204c	            0x7594	                           jne 0x4001fe2	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x400204e	          0x83f80d	                            cmp eax, 0xd	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x4002051	     0xf84dafeffff	                            je 0x4001f31	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x4002057	            0x84d2	                             test dl, dl	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x4002059	            0x7587	                           jne 0x4001fe2	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x400205b	      0xe9d1feffff	                           jmp 0x4001f31	       684	listing.c	FUNCTION_9	IF_13	IF_14
listing_message	DO,0:functions,0:WHILE,0:CALL,2:FOR,0:SWITCH,0:IF,2:ELSE,1	22
0x4000040	    0x48833d000000	               cmp qword [0x04000048], 0	       235	listing.c	FUNCTION_1	IF_1
0x4000048	            0x743b	                            je 0x4000085	       235	listing.c	FUNCTION_1	IF_1
0x400004a	              0x53	                                push rbx	       234	listing.c	FUNCTION_1
0x400004b	            0x31d2	                            xor edx, edx	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x400004d	            0x31c0	                            xor eax, eax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x400004f	      0xe800000000	                          call 0x4000054	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000054	      0xbf10000000	                           mov edi, 0x10	       238	listing.c	FUNCTION_1	IF_1	CALL_2
0x4000059	          0x4889c3	                            mov rbx, rax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x400005c	      0xe800000000	                          call 0x4000061	       238	listing.c	FUNCTION_1	IF_1	CALL_2
0x4000061	    0x488b15000000	            mov rdx, qword [0x04000068] 	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000068	          0x488918	                    mov qword [rax], rbx	       239	listing.c	FUNCTION_1	IF_1
0x400006b	    0x48c740080000	                  mov qword [rax + 8], 0	       240	listing.c	FUNCTION_1	IF_1
0x4000073	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000077	          0x4885c9	                           test rcx, rcx	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x400007a	            0x7414	                            je 0x4000090	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x400007c	        0x48894108	                mov qword [rcx + 8], rax	       243	listing.c	FUNCTION_1	IF_1	IF_2
0x4000080	        0x48894240	             mov qword [rdx + 0x40], rax	       246	listing.c	FUNCTION_1	IF_1	ELSE_1
0x4000084	              0x5b	                                 pop rbx	       248	listing.c	FUNCTION_1	ELSE_1
0x4000085	            0xf3c3	                                     ret	       248	listing.c	FUNCTION_1	ELSE_1
0x4000087	    0x660f1f840000	                    nop word [rax + rax]	       248	listing.c	FUNCTION_1	ELSE_1
0x4000090	        0x48894238	             mov qword [rdx + 0x38], rax	       245	listing.c	FUNCTION_1	IF_1	ELSE_1
0x4000094	            0xebea	                           jmp 0x4000080	       245	listing.c	FUNCTION_1	IF_1	ELSE_1
emit_line	DO,0:functions,0:WHILE,0:CALL,4:FOR,0:SWITCH,0:IF,0:ELSE,0	41
0x4000450	              0x53	                                push rbx	       750	listing.c	FUNCTION_11
0x4000451	          0x4889fb	                            mov rbx, rdi	       750	listing.c	FUNCTION_11
0x4000454	    0x4881ecd00000	                           sub rsp, 0xd0	       750	listing.c	FUNCTION_11
0x400045b	            0x84c0	                             test al, al	       750	listing.c	FUNCTION_11
0x400045d	      0x4889542430	             mov qword [rsp + 0x30], rdx	       750	listing.c	FUNCTION_11
0x4000462	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       750	listing.c	FUNCTION_11
0x4000467	      0x4c89442440	              mov qword [rsp + 0x40], r8	       750	listing.c	FUNCTION_11
0x400046c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       750	listing.c	FUNCTION_11
0x4000471	            0x7437	                            je 0x40004aa	       750	listing.c	FUNCTION_11
0x4000473	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       750	listing.c	FUNCTION_11
0x4000478	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       750	listing.c	FUNCTION_11
0x400047d	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       750	listing.c	FUNCTION_11
0x4000482	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       750	listing.c	FUNCTION_11
0x400048a	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       750	listing.c	FUNCTION_11
0x4000492	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       750	listing.c	FUNCTION_11
0x400049a	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       750	listing.c	FUNCTION_11
0x40004a2	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       750	listing.c	FUNCTION_11
0x40004aa	    0x64488b042528	                mov rax, qword fs:[0x28]	       750	listing.c	FUNCTION_11
0x40004b3	      0x4889442418	             mov qword [rsp + 0x18], rax	       750	listing.c	FUNCTION_11
0x40004b8	            0x31c0	                            xor eax, eax	       750	listing.c	FUNCTION_11
0x40004ba	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       753	listing.c	FUNCTION_11	CALL_1
0x40004c2	          0x4889f2	                            mov rdx, rsi	       127	stdio2.h	FUNCTION_45	CALL_1
0x40004c5	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_45	CALL_1
0x40004c8	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_45	CALL_1
0x40004cd	    0x488b3d000000	            mov rdi, qword [0x040004d4] 	       127	stdio2.h	FUNCTION_45	CALL_1
0x40004d4	      0x4889442408	                mov qword [rsp + 8], rax	       753	listing.c	FUNCTION_11	CALL_1
0x40004d9	      0x488d442420	                   lea rax, [rsp + 0x20]	       753	listing.c	FUNCTION_11	CALL_1
0x40004de	    0xc70424100000	                   mov dword [rsp], 0x10	       753	listing.c	FUNCTION_11	CALL_1
0x40004e5	    0xc74424043000	               mov dword [rsp + 4], 0x30	       753	listing.c	FUNCTION_11	CALL_1
0x40004ed	      0x4889442410	             mov qword [rsp + 0x10], rax	       753	listing.c	FUNCTION_11	CALL_1
0x40004f2	      0xe800000000	                          call 0x40004f7	       127	stdio2.h	FUNCTION_45	CALL_1
0x40004f7	          0x4889df	                            mov rdi, rbx	       757	listing.c	FUNCTION_11	CALL_3
0x40004fa	    0x830500000000	               add dword [0x04000501], 1	       756	listing.c	FUNCTION_11
0x4000501	      0xe8aafdffff	                   call sym.listing_page	       757	listing.c	FUNCTION_11	CALL_3
0x4000506	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       760	listing.c	FUNCTION_11
0x400050b	    0x644833042528	                xor rax, qword fs:[0x28]	       760	listing.c	FUNCTION_11
0x4000514	            0x7509	                           jne 0x400051f	       760	listing.c	FUNCTION_11
0x4000516	    0x4881c4d00000	                           add rsp, 0xd0	       760	listing.c	FUNCTION_11
0x400051d	              0x5b	                                 pop rbx	       760	listing.c	FUNCTION_11
0x400051e	              0xc3	                                     ret	       760	listing.c	FUNCTION_11
0x400051f	      0xe800000000	                          call 0x4000524	       760	listing.c	FUNCTION_11
calc_hex	DO,0:functions,0:WHILE,4:CALL,0:FOR,0:SWITCH,0:IF,4:ELSE,0	133
0x40000a0	            0x4157	                                push r15	       764	listing.c	FUNCTION_12
0x40000a2	            0x4156	                                push r14	       764	listing.c	FUNCTION_12
0x40000a4	            0x4155	                                push r13	       764	listing.c	FUNCTION_12
0x40000a6	            0x4154	                                push r12	       764	listing.c	FUNCTION_12
0x40000a8	              0x55	                                push rbp	       764	listing.c	FUNCTION_12
0x40000a9	              0x53	                                push rbx	       764	listing.c	FUNCTION_12
0x40000aa	        0x4883ec18	                           sub rsp, 0x18	       764	listing.c	FUNCTION_12
0x40000ae	          0x488b2f	                    mov rbp, qword [rdi]	       773	listing.c	FUNCTION_12
0x40000b1	          0x4885ed	                           test rbp, rbp	       774	listing.c	FUNCTION_12	WHILE_1
0x40000b4	            0x7517	                           jne 0x40000cd	       774	listing.c	FUNCTION_12	WHILE_1
0x40000b6	      0xe9c1010000	                           jmp 0x400027c	       774	listing.c	FUNCTION_12	WHILE_1
0x40000bb	       0xf1f440000	                   nop dword [rax + rax]	       774	listing.c	FUNCTION_12	WHILE_1
0x40000c0	        0x488b6d38	            mov rbp, qword [rbp + 0x38] 	       775	listing.c	FUNCTION_12	WHILE_1
0x40000c4	          0x4885ed	                           test rbp, rbp	       774	listing.c	FUNCTION_12	WHILE_1
0x40000c7	     0xf84af010000	                            je 0x400027c	       774	listing.c	FUNCTION_12	WHILE_1
0x40000cd	        0x483b7d50	            cmp rdi, qword [rbp + 0x50] 	       774	listing.c	FUNCTION_12	WHILE_1
0x40000d1	            0x75ed	                           jne 0x40000c0	       774	listing.c	FUNCTION_12	WHILE_1
0x40000d3	      0x48897c2408	                mov qword [rsp + 8], rdi	       774	listing.c	FUNCTION_12	WHILE_1
0x40000d8	    0x41bdffffffff	                    mov r13d, 0xffffffff	       774	listing.c	FUNCTION_12	WHILE_1
0x40000de	          0x4531e4	                          xor r12d, r12d	       774	listing.c	FUNCTION_12	WHILE_1
0x40000e1	     0xf1f80000000	                         nop dword [rax]	       774	listing.c	FUNCTION_12	WHILE_1
0x40000e8	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000ed	     0xf8e97000000	                           jle 0x400018a	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000f3	    0x8b0500000000	            mov eax, dword [0x040000f9] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000f9	    0x8b1500000000	            mov edx, dword [0x040000ff] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000ff	          0x4d63fc	                        movsxd r15, r12d	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000102	      0xbb01000000	                              mov ebx, 1	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000107	          0x8d04c0	                  lea eax, [rax + rax*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400010a	          0x8d14d2	                  lea edx, [rdx + rdx*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400010d	     0xfaf05000000	            imul eax, dword [0x04000114]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000114	        0x8d441010	            lea eax, [rax + rdx + 0x10] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000118	          0x4139c4	                           cmp r12d, eax	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400011b	            0x7e61	                           jle 0x400017e	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400011d	            0xeb6b	                           jmp 0x400018a	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400011f	              0x90	                                     nop	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000120	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000123	    0x440fb6441d7b	     movzx r8d, byte [rbp + rbx + 0x7b] 	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000129	    0x48033d000000	             add rdi, qword [0x04000130]	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000130	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000135	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000137	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_40	CALL_1
0x400013e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000143	          0x4189de	                           mov r14d, ebx	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000146	      0xe800000000	                          call 0x400014b	        33	stdio2.h	FUNCTION_40	CALL_1
0x400014b	        0x483b5d10	            cmp rbx, qword [rbp + 0x10] 	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400014f	        0x418d0c5c	                  lea ecx, [r12 + rbx*2]	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000153	            0x7d3b	                           jge 0x4000190	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000155	    0x8b0500000000	            mov eax, dword [0x0400015b] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400015b	    0x8b1500000000	            mov edx, dword [0x04000161] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000161	        0x4983c702	                              add r15, 2	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000165	        0x4883c301	                              add rbx, 1	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000169	          0x8d04c0	                  lea eax, [rax + rax*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400016c	          0x8d14d2	                  lea edx, [rdx + rdx*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400016f	     0xfaf05000000	            imul eax, dword [0x04000176]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000176	        0x8d441010	            lea eax, [rax + rdx + 0x10] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400017a	            0x39c8	                            cmp eax, ecx	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400017c	            0x7c12	                            jl 0x4000190	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400017e	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       789	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x4000182	            0x759c	                           jne 0x4000120	       789	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x4000184	        0x448b6d00	                   mov r13d, dword [rbp]	       790	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x4000188	            0xeb96	                           jmp 0x4000120	       790	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x400018a	          0x4489e1	                           mov ecx, r12d	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400018d	          0x4531f6	                          xor r14d, r14d	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000190	        0x837d5c01	               cmp dword [rbp + 0x5c], 1	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x4000194	          0x4189cc	                           mov r12d, ecx	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x4000197	            0x7427	                            je 0x40001c0	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x4000199	        0x488b6d38	            mov rbp, qword [rbp + 0x38] 	       824	listing.c	FUNCTION_12	WHILE_2
0x400019d	          0x4885ed	                           test rbp, rbp	       782	listing.c	FUNCTION_12	WHILE_2
0x40001a0	            0x740f	                            je 0x40001b1	       782	listing.c	FUNCTION_12	WHILE_2
0x40001a2	      0x488b442408	                mov rax, qword [rsp + 8]	       782	listing.c	FUNCTION_12	WHILE_2
0x40001a7	        0x483b4550	            cmp rax, qword [rbp + 0x50] 	       782	listing.c	FUNCTION_12	WHILE_2
0x40001ab	     0xf8437ffffff	                            je 0x40000e8	       782	listing.c	FUNCTION_12	WHILE_2
0x40001b1	          0x4d63e4	                        movsxd r12, r12d	       782	listing.c	FUNCTION_12	WHILE_2
0x40001b4	      0xe9cc000000	                           jmp 0x4000285	       782	listing.c	FUNCTION_12	WHILE_2
0x40001b9	     0xf1f80000000	                         nop dword [rax]	       782	listing.c	FUNCTION_12	WHILE_2
0x40001c0	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       782	listing.c	FUNCTION_12	WHILE_2
0x40001c4	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       782	listing.c	FUNCTION_12	WHILE_2
0x40001c8	          0x4c63d1	                         movsxd r10, ecx	       782	listing.c	FUNCTION_12	WHILE_2
0x40001cb	          0x4489f3	                           mov ebx, r14d	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x40001ce	          0x4589f7	                          mov r15d, r14d	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x40001d1	            0xeb5c	                           jmp 0x400022f	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x40001d3	       0xf1f440000	                   nop dword [rax + rax]	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x40001d8	            0x89d8	                            mov eax, ebx	       813	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001da	          0x4c89d7	                            mov rdi, r10	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001dd	    0x48033d000000	             add rdi, qword [0x040001e4]	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001e4	    0x440fb644057c	     movzx r8d, byte [rbp + rax + 0x7c] 	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001ea	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001ef	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001f6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001fb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001fd	        0x4c891424	                    mov qword [rsp], r10	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000201	        0x4183c402	                             add r12d, 2	       814	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000205	        0x4183c701	                             add r15d, 1	       817	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000209	      0xe800000000	                          call 0x400020e	        33	stdio2.h	FUNCTION_40	CALL_1
0x400020e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x4000212	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x4000216	          0x8d7301	                      lea esi, [rbx + 1]	       816	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000219	        0x4c8b1424	                    mov r10, qword [rsp]	       816	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x400021d	          0x4889f3	                            mov rbx, rsi	       816	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000220	        0x488d0c02	                    lea rcx, [rdx + rax]	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x4000224	          0x4839ce	                            cmp rsi, rcx	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x4000227	        0x410f4dde	                        cmovge ebx, r14d	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x400022b	        0x4983c202	                              add r10, 2	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x400022f	      0x480faf4520	            imul rax, qword [rbp + 0x20]	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000234	          0x4489f9	                           mov ecx, r15d	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000237	          0x4801d0	                            add rax, rdx	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x400023a	          0x4839c1	                            cmp rcx, rax	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x400023d	     0xf8d56ffffff	                           jge 0x4000199	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000243	    0x8b0500000000	            mov eax, dword [0x04000249] 	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000249	    0x8b1500000000	            mov edx, dword [0x0400024f] 	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x400024f	          0x8d04c0	                  lea eax, [rax + rax*8]	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000252	          0x8d14d2	                  lea edx, [rdx + rdx*8]	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000255	     0xfaf05000000	            imul eax, dword [0x0400025c]	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x400025c	        0x8d441010	            lea eax, [rax + rdx + 0x10] 	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000260	          0x4139c4	                           cmp r12d, eax	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000263	     0xf8f30ffffff	                            jg 0x4000199	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000269	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       808	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x400026d	     0xf8565ffffff	                           jne 0x40001d8	       808	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x4000273	        0x448b6d00	                   mov r13d, dword [rbp]	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x4000277	      0xe95cffffff	                           jmp 0x40001d8	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x400027c	          0x4531e4	                          xor r12d, r12d	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x400027f	    0x41bdffffffff	                    mov r13d, 0xffffffff	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x4000285	    0x488b05000000	            mov rax, qword [0x0400028c] 	       826	listing.c	FUNCTION_12
0x400028c	      0x42c6042000	                 mov byte [rax + r12], 0	       826	listing.c	FUNCTION_12
0x4000291	        0x4883c418	                           add rsp, 0x18	       828	listing.c	FUNCTION_12
0x4000295	          0x4489e8	                           mov eax, r13d	       828	listing.c	FUNCTION_12
0x4000298	              0x5b	                                 pop rbx	       828	listing.c	FUNCTION_12
0x4000299	              0x5d	                                 pop rbp	       828	listing.c	FUNCTION_12
0x400029a	            0x415c	                                 pop r12	       828	listing.c	FUNCTION_12
0x400029c	            0x415d	                                 pop r13	       828	listing.c	FUNCTION_12
0x400029e	            0x415e	                                 pop r14	       828	listing.c	FUNCTION_12
0x40002a0	            0x415f	                                 pop r15	       828	listing.c	FUNCTION_12
0x40002a2	              0xc3	                                     ret	       828	listing.c	FUNCTION_12
listing_prev_line	DO,0:functions,0:WHILE,0:CALL,2:FOR,2:SWITCH,0:IF,2:ELSE,0	41
0x4000fc0	    0x488b05000000	            mov rax, qword [0x04000fc7] 	       455	listing.c	FUNCTION_7	IF_1
0x4000fc7	          0x4885c0	                           test rax, rax	       455	listing.c	FUNCTION_7	IF_1
0x4000fca	     0xf8490000000	                            je 0x4001060	       455	listing.c	FUNCTION_7	IF_1
0x4000fd0	    0x483b05000000	            cmp rax, qword [0x04000fd7] 	       456	listing.c	FUNCTION_7	IF_1
0x4000fd7	     0xf8483000000	                            je 0x4001060	       456	listing.c	FUNCTION_7	IF_1
0x4000fdd	        0x4883ec08	                              sub rsp, 8	       451	listing.c	FUNCTION_7
0x4000fe1	    0x488b3d000000	            mov rdi, qword [0x04000fe8] 	       290	listing.c	FUNCTION_5	CALL_1
0x4000fe8	      0xe800000000	                          call 0x4000fed	       290	listing.c	FUNCTION_5	CALL_1
0x4000fed	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4000fef	      0xe800000000	                          call 0x4000ff4	       291	listing.c	FUNCTION_5	CALL_2
0x4000ff4	    0x488b0d000000	            mov rcx, qword [0x04000ffb] 	       461	listing.c	FUNCTION_7	FOR_1
0x4000ffb	    0x488b05000000	            mov rax, qword [0x04001002] 	       461	listing.c	FUNCTION_7	FOR_1
0x4001002	            0xeb07	                           jmp 0x400100b	       461	listing.c	FUNCTION_7	FOR_1
0x4001004	         0xf1f4000	                         nop dword [rax]	       461	listing.c	FUNCTION_7	FOR_1
0x4001008	          0x4889d1	                            mov rcx, rdx	       461	listing.c	FUNCTION_7	FOR_1
0x400100b	        0x488b5120	            mov rdx, qword [rcx + 0x20] 	       461	listing.c	FUNCTION_7	FOR_1
0x400100f	          0x4839d0	                            cmp rax, rdx	       461	listing.c	FUNCTION_7	FOR_1
0x4001012	            0x75f4	                           jne 0x4001008	       461	listing.c	FUNCTION_7	FOR_1
0x4001014	    0x488b05000000	            mov rax, qword [0x0400101b] 	       464	listing.c	FUNCTION_7	FOR_2
0x400101b	          0x488b00	                    mov rax, qword [rax]	       464	listing.c	FUNCTION_7	FOR_2
0x400101e	          0x4885c0	                           test rax, rax	       464	listing.c	FUNCTION_7	FOR_2
0x4001021	            0x750e	                           jne 0x4001031	       464	listing.c	FUNCTION_7	FOR_2
0x4001023	            0xeb1f	                           jmp 0x4001044	       464	listing.c	FUNCTION_7	FOR_2
0x4001025	           0xf1f00	                         nop dword [rax]	       464	listing.c	FUNCTION_7	FOR_2
0x4001028	        0x488b4038	            mov rax, qword [rax + 0x38] 	       464	listing.c	FUNCTION_7	FOR_2
0x400102c	          0x4885c0	                           test rax, rax	       464	listing.c	FUNCTION_7	FOR_2
0x400102f	            0x7413	                            je 0x4001044	       464	listing.c	FUNCTION_7	FOR_2
0x4001031	        0x483b5050	            cmp rdx, qword [rax + 0x50] 	       465	listing.c	FUNCTION_7	FOR_2	IF_2
0x4001035	            0x75f1	                           jne 0x4001028	       465	listing.c	FUNCTION_7	FOR_2	IF_2
0x4001037	        0x48894850	             mov qword [rax + 0x50], rcx	       466	listing.c	FUNCTION_7	FOR_2	IF_2
0x400103b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       464	listing.c	FUNCTION_7	FOR_2
0x400103f	          0x4885c0	                           test rax, rax	       464	listing.c	FUNCTION_7	FOR_2
0x4001042	            0x75ed	                           jne 0x4001031	       464	listing.c	FUNCTION_7	FOR_2
0x4001044	    0x488b3d000000	            mov rdi, qword [0x0400104b] 	       468	listing.c	FUNCTION_7
0x400104b	          0x48893a	                    mov qword [rdx], rdi	       468	listing.c	FUNCTION_7
0x400104e	      0xe800000000	                          call 0x4001053	       290	listing.c	FUNCTION_5	CALL_1
0x4001053	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4001055	        0x4883c408	                              add rsp, 8	       470	listing.c	FUNCTION_7
0x4001059	      0xe900000000	                           jmp 0x400105e	       291	listing.c	FUNCTION_5	CALL_2
0x400105e	            0x6690	                                     nop	       291	listing.c	FUNCTION_5	CALL_2
0x4001060	            0xf3c3	                                     ret	       291	listing.c	FUNCTION_5	CALL_2
