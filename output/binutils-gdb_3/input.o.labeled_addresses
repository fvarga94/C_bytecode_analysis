_rl_input_queued	WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,3	11
0x40002c0	            0x85ff	                           test edi, edi	       302	input.c	FUNCTION_8	IF_1
0x40002c2	              0x53	                                push rbx	       355	input.c	FUNCTION_10
0x40002c3	    0x8b1d00000000	            mov ebx, dword [0x040002c9] 	       301	input.c	FUNCTION_8
0x40002c9	            0x7806	                            js 0x40002d1	       302	input.c	FUNCTION_8	IF_1
0x40002cb	    0x893d00000000	            mov dword [0x040002d1], edi 	       303	input.c	FUNCTION_8	IF_1
0x40002d1	      0xe800000000	                          call 0x40002d6	       359	input.c	FUNCTION_10	CALL_2
0x40002d6	            0x85db	                           test ebx, ebx	       302	input.c	FUNCTION_8	IF_1
0x40002d8	            0x7806	                            js 0x40002e0	       302	input.c	FUNCTION_8	IF_1
0x40002da	    0x891d00000000	            mov dword [0x040002e0], ebx 	       303	input.c	FUNCTION_8	IF_1
0x40002e0	              0x5b	                                 pop rbx	       362	input.c	FUNCTION_10
0x40002e1	              0xc3	                                     ret	       362	input.c	FUNCTION_10
_rl_insert_typein	WHILE,1:functions,0:DO,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,5	50
0x40002f0	              0x55	                                push rbp	       367	input.c	FUNCTION_11
0x40002f1	              0x53	                                push rbx	       367	input.c	FUNCTION_11
0x40002f2	            0x89fd	                            mov ebp, edi	       367	input.c	FUNCTION_11
0x40002f4	      0xbf00020000	                          mov edi, 0x200	       372	input.c	FUNCTION_11	CALL_1
0x40002f9	        0x4883ec08	                              sub rsp, 8	       367	input.c	FUNCTION_11
0x40002fd	      0xe800000000	                          call 0x4000302	       372	input.c	FUNCTION_11	CALL_1
0x4000302	    0x486315000000	         movsxd rdx, dword [0x04000309] 	       156	input.c	FUNCTION_4	IF_1
0x4000309	    0x8b3500000000	            mov esi, dword [0x0400030f] 	       156	input.c	FUNCTION_4	IF_1
0x400030f	          0x4531c9	                            xor r9d, r9d	       163	input.c	FUNCTION_4	IF_2	IF_3
0x4000312	          0x4889c3	                            mov rbx, rax	       372	input.c	FUNCTION_11	CALL_1
0x4000315	          0x408828	                     mov byte [rax], bpl	       373	input.c	FUNCTION_11
0x4000318	        0x488d4801	                      lea rcx, [rax + 1]	       373	input.c	FUNCTION_11
0x400031c	    0x41b801000000	                              mov r8d, 1	       156	input.c	FUNCTION_4	IF_1
0x4000322	            0x39d6	                            cmp esi, edx	       156	input.c	FUNCTION_4	IF_1
0x4000324	     0xf8486000000	                            je 0x40003b0	       156	input.c	FUNCTION_4	IF_1
0x400032a	    0x660f1f440000	                    nop word [rax + rax]	       156	input.c	FUNCTION_4	IF_1
0x4000330	          0x8d4201	                      lea eax, [rdx + 1]	       159	input.c	FUNCTION_4
0x4000333	     0xfb6ba000000	                   movzx edi, byte [rdx]	       159	input.c	FUNCTION_4
0x400033a	      0x3dff010000	                          cmp eax, 0x1ff	       163	input.c	FUNCTION_4	IF_2	IF_3
0x400033f	        0x410f4fc1	                          cmovg eax, r9d	       163	input.c	FUNCTION_4	IF_2	IF_3
0x4000343	          0x4863d0	                         movsxd rdx, eax	       163	input.c	FUNCTION_4	IF_2	IF_3
0x4000346	        0x400fb6c7	                          movzx eax, dil	       376	input.c	FUNCTION_11	WHILE_1
0x400034a	        0x48c1e004	                              shl rax, 4	       376	input.c	FUNCTION_11	WHILE_1
0x400034e	    0x480305000000	             add rax, qword [0x04000355]	       376	input.c	FUNCTION_11	WHILE_1
0x4000355	          0x803800	                       cmp byte [rax], 0	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x4000358	            0x7546	                           jne 0x40003a0	       375	input.c	FUNCTION_11	WHILE_1	CALL_2
0x400035a	    0x488178080000	                  cmp qword [rax + 8], 0	       376	input.c	FUNCTION_11	WHILE_1
0x4000362	            0x753c	                           jne 0x40003a0	       376	input.c	FUNCTION_11	WHILE_1
0x4000364	          0x408839	                     mov byte [rcx], dil	       378	input.c	FUNCTION_11	WHILE_1
0x4000367	        0x4183c001	                              add r8d, 1	       378	input.c	FUNCTION_11	WHILE_1
0x400036b	        0x4883c101	                              add rcx, 1	       378	input.c	FUNCTION_11	WHILE_1
0x400036f	            0x39f2	                            cmp edx, esi	       156	input.c	FUNCTION_4	IF_1
0x4000371	            0x75bd	                           jne 0x4000330	       156	input.c	FUNCTION_4	IF_1
0x4000373	    0x891500000000	            mov dword [0x04000379], edx 	       156	input.c	FUNCTION_4	IF_1
0x4000379	          0x4d63c0	                          movsxd r8, r8d	       156	input.c	FUNCTION_4	IF_1
0x400037c	          0x4889df	                            mov rdi, rbx	       384	input.c	FUNCTION_11	CALL_4
0x400037f	      0x42c6040300	                  mov byte [rbx + r8], 0	       383	input.c	FUNCTION_11
0x4000384	      0xe800000000	                          call 0x4000389	       384	input.c	FUNCTION_11	CALL_4
0x4000389	        0x4883c408	                              add rsp, 8	       386	input.c	FUNCTION_11
0x400038d	          0x4889df	                            mov rdi, rbx	       385	input.c	FUNCTION_11	CALL_5
0x4000390	              0x5b	                                 pop rbx	       386	input.c	FUNCTION_11
0x4000391	              0x5d	                                 pop rbp	       386	input.c	FUNCTION_11
0x4000392	      0xe900000000	                           jmp 0x4000397	       385	input.c	FUNCTION_11	CALL_5
0x4000397	    0x660f1f840000	                    nop word [rax + rax]	       385	input.c	FUNCTION_11	CALL_5
0x40003a0	    0x891500000000	            mov dword [0x040003a6], edx 	       385	input.c	FUNCTION_11	CALL_5
0x40003a6	      0xe800000000	                          call 0x40003ab	       381	input.c	FUNCTION_11	CALL_3
0x40003ab	          0x4d63c0	                          movsxd r8, r8d	       381	input.c	FUNCTION_11	CALL_3
0x40003ae	            0xebcc	                           jmp 0x400037c	       381	input.c	FUNCTION_11	CALL_3
0x40003b0	    0x41b801000000	                              mov r8d, 1	       156	input.c	FUNCTION_4	IF_1
0x40003b6	            0xebc4	                           jmp 0x400037c	       156	input.c	FUNCTION_4	IF_1
_rl_input_available	WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,8	61
0x40001d0	            0x4156	                                push r14	       315	input.c	FUNCTION_9
0x40001d2	            0x4155	                                push r13	       315	input.c	FUNCTION_9
0x40001d4	            0x4154	                                push r12	       315	input.c	FUNCTION_9
0x40001d6	              0x55	                                push rbp	       315	input.c	FUNCTION_9
0x40001d7	              0x53	                                push rbx	       315	input.c	FUNCTION_9
0x40001d8	    0x4881ec200100	                          sub rsp, 0x120	       315	input.c	FUNCTION_9
0x40001df	    0x488b3d000000	            mov rdi, qword [0x040001e6] 	       325	input.c	FUNCTION_9	CALL_1
0x40001e6	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       328	input.c	FUNCTION_9	CALL_2
0x40001eb	    0x64488b042528	                mov rax, qword fs:[0x28]	       315	input.c	FUNCTION_9
0x40001f4	    0x488984241801	            mov qword [rsp + 0x118], rax	       315	input.c	FUNCTION_9
0x40001fc	            0x31c0	                            xor eax, eax	       315	input.c	FUNCTION_9
0x40001fe	      0xe800000000	                          call 0x4000203	       325	input.c	FUNCTION_9	CALL_1
0x4000203	      0xba10000000	                           mov edx, 0x10	       328	input.c	FUNCTION_9	CALL_2
0x4000208	          0x4c63f0	                         movsxd r14, eax	       325	input.c	FUNCTION_9	CALL_1
0x400020b	          0x4c89e7	                            mov rdi, r12	       328	input.c	FUNCTION_9	CALL_2
0x400020e	            0x31c0	                            xor eax, eax	       328	input.c	FUNCTION_9	CALL_2
0x4000210	          0x4889d1	                            mov rcx, rdx	       328	input.c	FUNCTION_9	CALL_2
0x4000213	              0xfc	                                     cld	       328	input.c	FUNCTION_9	CALL_2
0x4000214	          0xf348ab	              rep stosq qword [rdi], rax	       328	input.c	FUNCTION_9	CALL_2
0x4000217	    0x4c8dac249000	                   lea r13, [rsp + 0x90]	       329	input.c	FUNCTION_9	CALL_3
0x400021f	          0x4889d1	                            mov rcx, rdx	       329	input.c	FUNCTION_9	CALL_3
0x4000222	          0x4c89ef	                            mov rdi, r13	       329	input.c	FUNCTION_9	CALL_3
0x4000225	              0xfc	                                     cld	       329	input.c	FUNCTION_9	CALL_3
0x4000226	          0xf348ab	              rep stosq qword [rdi], rax	       329	input.c	FUNCTION_9	CALL_3
0x4000229	          0x4c89f7	                            mov rdi, r14	       330	input.c	FUNCTION_9	CALL_4
0x400022c	      0xbd01000000	                              mov ebp, 1	       330	input.c	FUNCTION_9	CALL_4
0x4000231	      0xe800000000	                          call 0x4000236	       330	input.c	FUNCTION_9	CALL_4
0x4000236	          0x4489f2	                           mov edx, r14d	       330	input.c	FUNCTION_9	CALL_4
0x4000239	          0x4c89f7	                            mov rdi, r14	       331	input.c	FUNCTION_9	CALL_5
0x400023c	          0xc1fa1f	                           sar edx, 0x1f	       330	input.c	FUNCTION_9	CALL_4
0x400023f	          0xc1ea1a	                           shr edx, 0x1a	       330	input.c	FUNCTION_9	CALL_4
0x4000242	        0x418d0c16	                    lea ecx, [r14 + rdx]	       330	input.c	FUNCTION_9	CALL_4
0x4000246	          0x83e13f	                           and ecx, 0x3f	       330	input.c	FUNCTION_9	CALL_4
0x4000249	            0x29d1	                            sub ecx, edx	       330	input.c	FUNCTION_9	CALL_4
0x400024b	          0x48d3e5	                             shl rbp, cl	       330	input.c	FUNCTION_9	CALL_4
0x400024e	      0x48096cc410	      or qword [rsp + rax*8 + 0x10], rbp	       330	input.c	FUNCTION_9	CALL_4
0x4000253	      0xe800000000	                          call 0x4000258	       331	input.c	FUNCTION_9	CALL_5
0x4000258	    0x4809acc49000	      or qword [rsp + rax*8 + 0x90], rbp	       331	input.c	FUNCTION_9	CALL_5
0x4000260	    0x486305000000	         movsxd rax, dword [0x04000267] 	       333	input.c	FUNCTION_9
0x4000267	        0x418d7e01	                      lea edi, [r14 + 1]	       334	input.c	FUNCTION_9	CALL_6
0x400026b	            0x31d2	                            xor edx, edx	       334	input.c	FUNCTION_9	CALL_6
0x400026d	          0x4c89e6	                            mov rsi, r12	       334	input.c	FUNCTION_9	CALL_6
0x4000270	          0x4989e0	                             mov r8, rsp	       334	input.c	FUNCTION_9	CALL_6
0x4000273	          0x4c89e9	                            mov rcx, r13	       334	input.c	FUNCTION_9	CALL_6
0x4000276	    0x48c704240000	                      mov qword [rsp], 0	       332	input.c	FUNCTION_9
0x400027e	      0x4889442408	                mov qword [rsp + 8], rax	       333	input.c	FUNCTION_9
0x4000283	      0xe800000000	                          call 0x4000288	       334	input.c	FUNCTION_9	CALL_6
0x4000288	            0x85c0	                           test eax, eax	       334	input.c	FUNCTION_9	CALL_6
0x400028a	           0xf9fc0	                                 setg al	       334	input.c	FUNCTION_9	CALL_6
0x400028d	    0x488bb4241801	           mov rsi, qword [rsp + 0x118] 	       350	input.c	FUNCTION_9
0x4000295	    0x644833342528	                xor rsi, qword fs:[0x28]	       350	input.c	FUNCTION_9
0x400029e	            0x7513	                           jne 0x40002b3	       350	input.c	FUNCTION_9
0x40002a0	    0x4881c4200100	                          add rsp, 0x120	       350	input.c	FUNCTION_9
0x40002a7	           0xfb6c0	                           movzx eax, al	       350	input.c	FUNCTION_9
0x40002aa	              0x5b	                                 pop rbx	       350	input.c	FUNCTION_9
0x40002ab	              0x5d	                                 pop rbp	       350	input.c	FUNCTION_9
0x40002ac	            0x415c	                                 pop r12	       350	input.c	FUNCTION_9
0x40002ae	            0x415d	                                 pop r13	       350	input.c	FUNCTION_9
0x40002b0	            0x415e	                                 pop r14	       350	input.c	FUNCTION_9
0x40002b2	              0xc3	                                     ret	       350	input.c	FUNCTION_9
0x40002b3	      0xe800000000	                          call 0x40002b8	       350	input.c	FUNCTION_9
_rl_pushed_input_available	WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,0	5
0x4000180	    0x8b0500000000	            mov eax, dword [0x04000186] 	       191	input.c	FUNCTION_6
0x4000186	    0x390500000000	            cmp dword [0x0400018c], eax 	       191	input.c	FUNCTION_6
0x400018c	           0xf95c0	                                setne al	       191	input.c	FUNCTION_6
0x400018f	           0xfb6c0	                           movzx eax, al	       191	input.c	FUNCTION_6
0x4000192	              0xc3	                                     ret	       192	input.c	FUNCTION_6
rl_stuff_char	WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:IF,4:FOR,0:CALL,2	27
0x40003c0	    0x486315000000	         movsxd rdx, dword [0x040003c7] 	       143	input.c	FUNCTION_3	IF_1
0x40003c7	    0x8b0500000000	            mov eax, dword [0x040003cd] 	       143	input.c	FUNCTION_3	IF_1
0x40003cd	            0x39d0	                            cmp eax, edx	       143	input.c	FUNCTION_3	IF_1
0x40003cf	            0x7e3f	                           jle 0x4000410	       143	input.c	FUNCTION_3	IF_1
0x40003d1	            0x29d0	                            sub eax, edx	       144	input.c	FUNCTION_3	IF_1
0x40003d3	          0x83e801	                              sub eax, 1	       144	input.c	FUNCTION_3	IF_1
0x40003d6	            0x85c0	                           test eax, eax	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x40003d8	            0x742c	                            je 0x4000406	       394	input.c	FUNCTION_12	IF_1	CALL_1
0x40003da	          0x83ffff	             cmp edi, 0xffffffffffffffff	       397	input.c	FUNCTION_12	IF_2
0x40003dd	            0x7441	                            je 0x4000420	       397	input.c	FUNCTION_12	IF_2
0x40003df	          0x8d4a01	                      lea ecx, [rdx + 1]	       403	input.c	FUNCTION_12
0x40003e2	    0x4088ba000000	                     mov byte [rdx], dil	       403	input.c	FUNCTION_12
0x40003e9	      0xb801000000	                              mov eax, 1	       411	input.c	FUNCTION_12
0x40003ee	    0x81f9ff010000	                          cmp ecx, 0x1ff	       407	input.c	FUNCTION_12	IF_3	IF_4
0x40003f4	    0x890d00000000	            mov dword [0x040003fa], ecx 	       403	input.c	FUNCTION_12
0x40003fa	            0x7e0a	                           jle 0x4000406	       407	input.c	FUNCTION_12	IF_3	IF_4
0x40003fc	    0xc70500000000	               mov dword [0x04000406], 0	       409	input.c	FUNCTION_12	IF_3	IF_4
0x4000406	            0xf3c3	                                     ret	       412	input.c	FUNCTION_12
0x4000408	     0xf1f84000000	                   nop dword [rax + rax]	       412	input.c	FUNCTION_12
0x4000410	            0x29d0	                            sub eax, edx	       146	input.c	FUNCTION_3	ELSE_1
0x4000412	       0x5ff010000	                          add eax, 0x1ff	       146	input.c	FUNCTION_3	ELSE_1
0x4000417	            0xebbd	                           jmp 0x40003d6	       146	input.c	FUNCTION_3	ELSE_1
0x4000419	     0xf1f80000000	                         nop dword [rax]	       146	input.c	FUNCTION_3	ELSE_1
0x4000420	    0x893d00000000	            mov dword [0x04000426], edi 	       400	input.c	FUNCTION_12	IF_2
0x4000426	    0x810d00000000	          or dword [0x04000430], 0x20000	       401	input.c	FUNCTION_12	IF_2	CALL_2
0x4000430	      0xbf0a000000	                            mov edi, 0xa	       401	input.c	FUNCTION_12	IF_2	CALL_2
0x4000435	            0xeba8	                           jmp 0x40003df	       401	input.c	FUNCTION_12	IF_2	CALL_2
_rl_unget_char	WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,1	27
0x4000110	    0x8b1500000000	            mov edx, dword [0x04000116] 	       143	input.c	FUNCTION_3	IF_1
0x4000116	    0x8b0500000000	            mov eax, dword [0x0400011c] 	       143	input.c	FUNCTION_3	IF_1
0x400011c	            0x39c2	                            cmp edx, eax	       143	input.c	FUNCTION_3	IF_1
0x400011e	            0x7e30	                           jle 0x4000150	       143	input.c	FUNCTION_3	IF_1
0x4000120	            0x89d1	                            mov ecx, edx	       144	input.c	FUNCTION_3	IF_1
0x4000122	            0x29c1	                            sub ecx, eax	       144	input.c	FUNCTION_3	IF_1
0x4000124	            0x89c8	                            mov eax, ecx	       144	input.c	FUNCTION_3	IF_1
0x4000126	          0x83e801	                              sub eax, 1	       144	input.c	FUNCTION_3	IF_1
0x4000129	            0x85c0	                           test eax, eax	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x400012b	            0x741a	                            je 0x4000147	       177	input.c	FUNCTION_5	IF_1	CALL_1
0x400012d	          0x83ea01	                              sub edx, 1	       180	input.c	FUNCTION_5	IF_1	IF_2
0x4000130	            0x782e	                            js 0x4000160	       180	input.c	FUNCTION_5	IF_1	IF_2
0x4000132	    0x891500000000	            mov dword [0x04000138], edx 	       179	input.c	FUNCTION_5	IF_1
0x4000138	          0x4863d2	                         movsxd rdx, edx	       182	input.c	FUNCTION_5	IF_1
0x400013b	      0xb801000000	                              mov eax, 1	       183	input.c	FUNCTION_5	IF_1
0x4000140	    0x4088ba000000	                     mov byte [rdx], dil	       182	input.c	FUNCTION_5	IF_1
0x4000147	            0xf3c3	                                     ret	       186	input.c	FUNCTION_5
0x4000149	     0xf1f80000000	                         nop dword [rax]	       186	input.c	FUNCTION_5
0x4000150	            0x89d6	                            mov esi, edx	       146	input.c	FUNCTION_3	ELSE_1
0x4000152	            0x29c6	                            sub esi, eax	       146	input.c	FUNCTION_3	ELSE_1
0x4000154	            0x89f0	                            mov eax, esi	       146	input.c	FUNCTION_3	ELSE_1
0x4000156	       0x5ff010000	                          add eax, 0x1ff	       146	input.c	FUNCTION_3	ELSE_1
0x400015b	            0xebcc	                           jmp 0x4000129	       146	input.c	FUNCTION_3	ELSE_1
0x400015d	           0xf1f00	                         nop dword [rax]	       146	input.c	FUNCTION_3	ELSE_1
0x4000160	    0xc70500000000	          mov dword [0x0400016a], 0x1ff 	       181	input.c	FUNCTION_5	IF_1	IF_2
0x400016a	      0xbaff010000	                          mov edx, 0x1ff	       181	input.c	FUNCTION_5	IF_1	IF_2
0x400016f	            0xebc7	                           jmp 0x4000138	       181	input.c	FUNCTION_5	IF_1	IF_2
rl_execute_next	WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,1	4
0x40006d0	    0x893d00000000	            mov dword [0x040006d6], edi 	       419	input.c	FUNCTION_13
0x40006d6	    0x810d00000000	          or dword [0x040006e0], 0x20000	       420	input.c	FUNCTION_13	CALL_1
0x40006e0	            0x31c0	                            xor eax, eax	       422	input.c	FUNCTION_13
0x40006e2	              0xc3	                                     ret	       422	input.c	FUNCTION_13
