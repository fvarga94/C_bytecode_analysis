stab_volatile_type	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	6
0x4002080	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002084	          0x4531c0	                            xor r8d, r8d	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002087	            0x31c9	                            xor ecx, ecx	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002089	      0xbe42000000	                           mov esi, 0x42	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x400208e	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4002091	      0xe97afdffff	                jmp sym.stab_modify_type	      1252	wrstabs.c	FUNCTION_26	CALL_1
stab_start_class_type	IF,5:FOR,0:WHILE,0:DO,0:functions,0:CALL,7:ELSE,2:SWITCH,0	86
0x4001cc0	            0x4155	                                push r13	      1444	wrstabs.c	FUNCTION_31
0x4001cc2	            0x4154	                                push r12	      1444	wrstabs.c	FUNCTION_31
0x4001cc4	              0x55	                                push rbp	      1444	wrstabs.c	FUNCTION_31
0x4001cc5	              0x53	                                push rbx	      1444	wrstabs.c	FUNCTION_31
0x4001cc6	          0x4489cd	                            mov ebp, r9d	      1444	wrstabs.c	FUNCTION_31
0x4001cc9	          0x4889fb	                            mov rbx, rdi	      1444	wrstabs.c	FUNCTION_31
0x4001ccc	        0x4883ec28	                           sub rsp, 0x28	      1444	wrstabs.c	FUNCTION_31
0x4001cd0	          0x4585c9	                           test r9d, r9d	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001cd3	            0x740c	                            je 0x4001ce1	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001cd5	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001cd9	            0x85ff	                           test edi, edi	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001cdb	     0xf848f000000	                            je 0x4001d70	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001ce1	          0x4531ed	                          xor r13d, r13d	      1452	wrstabs.c	FUNCTION_31	IF_1
0x4001ce4	          0x4531e4	                          xor r12d, r12d	      1451	wrstabs.c	FUNCTION_31	IF_1
0x4001ce7	          0x4889df	                            mov rdi, rbx	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001cea	      0xe881feffff	         call sym.stab_start_struct_type	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001cef	            0x85c0	                           test eax, eax	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001cf1	            0x746c	                            je 0x4001d5f	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001cf3	            0x85ed	                           test ebp, ebp	      1463	wrstabs.c	FUNCTION_31	IF_3
0x4001cf5	            0x7453	                            je 0x4001d4a	      1463	wrstabs.c	FUNCTION_31	IF_3
0x4001cf7	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1467	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4001cfb	            0x85c0	                           test eax, eax	      1467	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4001cfd	     0xf84ad000000	                            je 0x4001db0	      1467	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4001d03	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001d07	      0x4883781000	               cmp qword [rax + 0x10], 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001d0c	     0xf8edd000000	                           jle 0x4001def	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001d12	      0xbf14000000	                           mov edi, 0x14	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x4001d17	      0xe800000000	                          call 0x4001d1c	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x4001d1c	          0x4889c5	                            mov rbp, rax	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x4001d1f	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4001d23	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d28	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d2f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d34	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d37	        0x4c8b4010	              mov r8, qword [rax + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d3b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d3d	      0xe800000000	                          call 0x4001d42	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d42	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1480	wrstabs.c	FUNCTION_31	IF_3
0x4001d46	        0x48896838	             mov qword [rax + 0x38], rbp	      1480	wrstabs.c	FUNCTION_31	IF_3
0x4001d4a	          0x4585e4	                         test r12d, r12d	      1483	wrstabs.c	FUNCTION_31	IF_5
0x4001d4d	      0xb801000000	                              mov eax, 1	      1486	wrstabs.c	FUNCTION_31
0x4001d52	            0x740b	                            je 0x4001d5f	      1483	wrstabs.c	FUNCTION_31	IF_5
0x4001d54	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      1484	wrstabs.c	FUNCTION_31	IF_5
0x4001d58	    0xc7421c010000	               mov dword [rdx + 0x1c], 1	      1484	wrstabs.c	FUNCTION_31	IF_5
0x4001d5f	        0x4883c428	                           add rsp, 0x28	      1487	wrstabs.c	FUNCTION_31
0x4001d63	              0x5b	                                 pop rbx	      1487	wrstabs.c	FUNCTION_31
0x4001d64	              0x5d	                                 pop rbp	      1487	wrstabs.c	FUNCTION_31
0x4001d65	            0x415c	                                 pop r12	      1487	wrstabs.c	FUNCTION_31
0x4001d67	            0x415d	                                 pop r13	      1487	wrstabs.c	FUNCTION_31
0x4001d69	              0xc3	                                     ret	      1487	wrstabs.c	FUNCTION_31
0x4001d6a	    0x660f1f440000	                    nop word [rax + rax]	      1487	wrstabs.c	FUNCTION_31
0x4001d70	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001d74	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001d78	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001d7d	        0x894c2418	             mov dword [rsp + 0x18], ecx	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001d81	        0x89542414	             mov dword [rsp + 0x14], edx	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001d85	      0x4889742408	                mov qword [rsp + 8], rsi	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001d8a	        0x448b601c	           mov r12d, dword [rax + 0x1c] 	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001d8e	      0xe82debffff	           call sym.stab_pop_type.isra.1	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001d93	      0x488b742408	                mov rsi, qword [rsp + 8]	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001d98	          0x4989c5	                            mov r13, rax	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001d9b	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001d9f	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001da3	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001da8	      0xe93affffff	                           jmp 0x4001ce7	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001dad	           0xf1f00	                         nop dword [rax]	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001db0	          0x4c89ef	                            mov rdi, r13	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001db3	      0xe800000000	                          call 0x4001db8	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001db8	        0x488d7803	                      lea rdi, [rax + 3]	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001dbc	      0xe800000000	                          call 0x4001dc1	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001dc1	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001dc4	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001dc7	          0x4889c5	                            mov rbp, rax	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001dca	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001dcf	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001dd6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ddb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ddd	      0xe800000000	                          call 0x4001de2	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001de2	          0x4c89ef	                            mov rdi, r13	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x4001de5	      0xe800000000	                          call 0x4001dea	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x4001dea	      0xe953ffffff	                           jmp 0x4001d42	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x4001def	      0xb900000000	                              mov ecx, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001df4	      0xbabd050000	                          mov edx, 0x5bd	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001df9	      0xbe00000000	                              mov esi, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001dfe	      0xbf00000000	                              mov edi, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001e03	      0xe800000000	                          call 0x4001e08	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
stab_function_parameter	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,8:ELSE,0:SWITCH,1	79
0x4001140	            0x4157	                                push r15	      2112	wrstabs.c	FUNCTION_49
0x4001142	            0x4156	                                push r14	      2112	wrstabs.c	FUNCTION_49
0x4001144	          0x4989ce	                            mov r14, rcx	      2112	wrstabs.c	FUNCTION_49
0x4001147	            0x4155	                                push r13	      2112	wrstabs.c	FUNCTION_49
0x4001149	            0x4154	                                push r12	      2112	wrstabs.c	FUNCTION_49
0x400114b	          0x4989fc	                            mov r12, rdi	      2112	wrstabs.c	FUNCTION_49
0x400114e	              0x55	                                push rbp	      2112	wrstabs.c	FUNCTION_49
0x400114f	              0x53	                                push rbx	      2112	wrstabs.c	FUNCTION_49
0x4001150	            0x89d5	                            mov ebp, edx	      2112	wrstabs.c	FUNCTION_49
0x4001152	        0x4883c760	                           add rdi, 0x60	      2112	wrstabs.c	FUNCTION_49
0x4001156	          0x4989f5	                            mov r13, rsi	      2112	wrstabs.c	FUNCTION_49
0x4001159	        0x4883ec18	                           sub rsp, 0x18	      2112	wrstabs.c	FUNCTION_49
0x400115d	      0xe85ef7ffff	           call sym.stab_pop_type.isra.1	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x4001162	          0x83fd02	                              cmp ebp, 2	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001165	          0x4889c3	                            mov rbx, rax	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x4001168	     0xf84ea000000	                            je 0x4001258	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400116e	     0xf86c4000000	                           jbe 0x4001238	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001174	          0x83fd03	                              cmp ebp, 3	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001177	     0xf84a3000000	                            je 0x4001220	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400117d	          0x83fd04	                              cmp ebp, 4	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001180	    0x41b961000000	                           mov r9d, 0x61	      2143	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001186	    0x41bf40000000	                          mov r15d, 0x40	      2141	wrstabs.c	FUNCTION_49	SWITCH_1
0x400118c	     0xf85bb000000	                           jne 0x400124d	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001192	          0x4c89ef	                            mov rdi, r13	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4001195	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400119a	      0xe800000000	                          call 0x400119f	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400119f	          0x4889df	                            mov rdi, rbx	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x40011a2	          0x4889c5	                            mov rbp, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x40011a5	      0xe800000000	                          call 0x40011aa	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x40011aa	      0x488d7c0503	                lea rdi, [rbp + rax + 3]	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x40011af	      0xe800000000	                          call 0x40011b4	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x40011b4	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011b8	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011bb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011c0	              0x53	                                push rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011c1	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011c6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011cd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011d2	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011d5	          0x4889c5	                            mov rbp, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x40011d8	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011da	      0xe800000000	                          call 0x40011df	        33	stdio2.h	FUNCTION_54	CALL_1
0x40011df	          0x4889df	                            mov rdi, rbx	      2148	wrstabs.c	FUNCTION_49	CALL_6
0x40011e2	      0xe800000000	                          call 0x40011e7	      2148	wrstabs.c	FUNCTION_49	CALL_6
0x40011e7	            0x31d2	                            xor edx, edx	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011e9	          0x4c89f1	                            mov rcx, r14	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011ec	          0x4989e8	                             mov r8, rbp	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011ef	          0x4489fe	                           mov esi, r15d	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011f2	          0x4c89e7	                            mov rdi, r12	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011f5	      0xe8b6f0ffff	              call sym.stab_write_symbol	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011fa	            0x85c0	                           test eax, eax	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011fc	              0x5a	                                 pop rdx	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011fd	              0x59	                                 pop rcx	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40011fe	            0x740d	                            je 0x400120d	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x4001200	          0x4889ef	                            mov rdi, rbp	      2153	wrstabs.c	FUNCTION_49	CALL_8
0x4001203	      0xe800000000	                          call 0x4001208	      2153	wrstabs.c	FUNCTION_49	CALL_8
0x4001208	      0xb801000000	                              mov eax, 1	      2155	wrstabs.c	FUNCTION_49
0x400120d	        0x4883c418	                           add rsp, 0x18	      2156	wrstabs.c	FUNCTION_49
0x4001211	              0x5b	                                 pop rbx	      2156	wrstabs.c	FUNCTION_49
0x4001212	              0x5d	                                 pop rbp	      2156	wrstabs.c	FUNCTION_49
0x4001213	            0x415c	                                 pop r12	      2156	wrstabs.c	FUNCTION_49
0x4001215	            0x415d	                                 pop r13	      2156	wrstabs.c	FUNCTION_49
0x4001217	            0x415e	                                 pop r14	      2156	wrstabs.c	FUNCTION_49
0x4001219	            0x415f	                                 pop r15	      2156	wrstabs.c	FUNCTION_49
0x400121b	              0xc3	                                     ret	      2156	wrstabs.c	FUNCTION_49
0x400121c	         0xf1f4000	                         nop dword [rax]	      2156	wrstabs.c	FUNCTION_49
0x4001220	    0x41b976000000	                           mov r9d, 0x76	      2138	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001226	    0x41bfa0000000	                          mov r15d, 0xa0	      2136	wrstabs.c	FUNCTION_49	SWITCH_1
0x400122c	      0xe961ffffff	                           jmp 0x4001192	      2138	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001231	     0xf1f80000000	                         nop dword [rax]	      2138	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001238	          0x83fd01	                              cmp ebp, 1	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400123b	    0x41b970000000	                           mov r9d, 0x70	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001241	    0x41bfa0000000	                          mov r15d, 0xa0	      2126	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001247	     0xf8445ffffff	                            je 0x4001192	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400124d	      0xe800000000	                          call 0x4001252	      2123	wrstabs.c	FUNCTION_49	SWITCH_1	CALL_2
0x4001252	    0x660f1f440000	                    nop word [rax + rax]	      2123	wrstabs.c	FUNCTION_49	SWITCH_1	CALL_2
0x4001258	    0x41b950000000	                           mov r9d, 0x50	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400125e	    0x41bf40000000	                          mov r15d, 0x40	      2131	wrstabs.c	FUNCTION_49	SWITCH_1
0x4001264	      0xe929ffffff	                           jmp 0x4001192	      2131	wrstabs.c	FUNCTION_49	SWITCH_1
stab_end_class_type	IF,6:FOR,2:WHILE,0:DO,0:functions,0:CALL,20:ELSE,0:SWITCH,0	133
0x4000660	            0x4156	                                push r14	      1777	wrstabs.c	FUNCTION_39
0x4000662	            0x4155	                                push r13	      1777	wrstabs.c	FUNCTION_39
0x4000664	            0x4154	                                push r12	      1777	wrstabs.c	FUNCTION_39
0x4000666	              0x55	                                push rbp	      1777	wrstabs.c	FUNCTION_39
0x4000667	              0x53	                                push rbx	      1777	wrstabs.c	FUNCTION_39
0x4000668	        0x4c8b7760	            mov r14, qword [rdi + 0x60] 	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400066c	          0x4d85f6	                           test r14, r14	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400066f	     0xf84de010000	                            je 0x4000853	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4000675	        0x498b5e20	            mov rbx, qword [r14 + 0x20] 	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4000679	          0x4885db	                           test rbx, rbx	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400067c	     0xf84d1010000	                            je 0x4000853	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4000682	          0x4989fc	                            mov r12, rdi	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4000685	        0x498b7e08	                mov rdi, qword [r14 + 8]	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4000689	      0xe800000000	                          call 0x400068e	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x400068e	          0x4889df	                            mov rdi, rbx	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4000691	          0x4889c5	                            mov rbp, rax	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4000694	      0xe800000000	                          call 0x4000699	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4000699	        0x4d8b6e28	            mov r13, qword [r14 + 0x28] 	      1790	wrstabs.c	FUNCTION_39	IF_1
0x400069d	          0x4801e8	                            add rax, rbp	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x40006a0	          0x4d85ed	                           test r13, r13	      1790	wrstabs.c	FUNCTION_39	IF_1
0x40006a3	     0xf849f010000	                            je 0x4000848	      1790	wrstabs.c	FUNCTION_39	IF_1
0x40006a9	        0x498b7d00	                    mov rdi, qword [r13]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006ad	            0x31db	                            xor ebx, ebx	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006af	        0x488d681e	                   lea rbp, [rax + 0x1e]	      1792	wrstabs.c	FUNCTION_39	IF_1
0x40006b3	          0x4885ff	                           test rdi, rdi	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006b6	            0x7420	                            je 0x40006d8	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006b8	     0xf1f84000000	                   nop dword [rax + rax]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006c0	      0xe800000000	                          call 0x40006c5	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x40006c5	          0x4801c5	                            add rbp, rax	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x40006c8	          0x8d4301	                      lea eax, [rbx + 1]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006cb	      0x498b7cc500	            mov rdi, qword [r13 + rax*8]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006d0	          0x4889c3	                            mov rbx, rax	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006d3	          0x4885ff	                           test rdi, rdi	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006d6	            0x75e8	                           jne 0x40006c0	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x40006d8	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      1796	wrstabs.c	FUNCTION_39	IF_2
0x40006dc	          0x4885ff	                           test rdi, rdi	      1796	wrstabs.c	FUNCTION_39	IF_2
0x40006df	            0x7408	                            je 0x40006e9	      1796	wrstabs.c	FUNCTION_39	IF_2
0x40006e1	      0xe800000000	                          call 0x40006e6	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x40006e6	          0x4801c5	                            add rbp, rax	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x40006e9	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      1798	wrstabs.c	FUNCTION_39	IF_3
0x40006ed	          0x4885ff	                           test rdi, rdi	      1798	wrstabs.c	FUNCTION_39	IF_3
0x40006f0	            0x7408	                            je 0x40006fa	      1798	wrstabs.c	FUNCTION_39	IF_3
0x40006f2	      0xe800000000	                          call 0x40006f7	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x40006f7	          0x4801c5	                            add rbp, rax	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x40006fa	          0x4889ef	                            mov rdi, rbp	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x40006fd	      0xe800000000	                          call 0x4000702	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x4000702	      0x498b6c2460	            mov rbp, qword [r12 + 0x60] 	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x4000707	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_77	CALL_3
0x400070a	          0x4989c5	                            mov r13, rax	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x400070d	        0x488b7508	                mov rsi, qword [rbp + 8]	       110	string3.h	FUNCTION_77	CALL_3
0x4000711	      0xe800000000	                          call 0x4000716	       110	string3.h	FUNCTION_77	CALL_3
0x4000716	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1807	wrstabs.c	FUNCTION_39	IF_4
0x400071b	     0xf847e000000	                            je 0x400079f	      1807	wrstabs.c	FUNCTION_39	IF_4
0x4000721	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000724	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000727	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400072c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400072e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000733	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x400073a	      0xe800000000	                          call 0x400073f	        33	stdio2.h	FUNCTION_54	CALL_1
0x400073f	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000744	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000748	          0x488b37	                    mov rsi, qword [rdi]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400074b	          0x4885f6	                           test rsi, rsi	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400074e	            0x743d	                            je 0x400078d	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000750	          0x4531f6	                          xor r14d, r14d	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000753	            0x31ed	                            xor ebp, ebp	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000755	           0xf1f00	                         nop dword [rax]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000758	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x400075b	      0xe800000000	                          call 0x4000760	       148	string3.h	FUNCTION_81	CALL_3
0x4000760	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4000764	        0x4a8b3c30	              mov rdi, qword [rax + r14]	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4000768	      0xe800000000	                          call 0x400076d	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x400076d	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000772	          0x8d4501	                      lea eax, [rbp + 1]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000775	          0x4889c5	                            mov rbp, rax	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000778	    0x4c8d34c50000	                        lea r14, [rax*8]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000780	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000784	        0x488b34c7	            mov rsi, qword [rdi + rax*8]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4000788	          0x4885f6	                           test rsi, rsi	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400078b	            0x75cb	                           jne 0x4000758	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x400078d	      0xe800000000	                          call 0x4000792	      1815	wrstabs.c	FUNCTION_39	IF_4	CALL_12
0x4000792	      0x498b6c2460	            mov rbp, qword [r12 + 0x60] 	      1816	wrstabs.c	FUNCTION_39	IF_4
0x4000797	    0x48c745280000	               mov qword [rbp + 0x28], 0	      1816	wrstabs.c	FUNCTION_39	IF_4
0x400079f	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	       148	string3.h	FUNCTION_81	CALL_3
0x40007a3	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x40007a6	      0xe800000000	                          call 0x40007ab	       148	string3.h	FUNCTION_81	CALL_3
0x40007ab	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1820	wrstabs.c	FUNCTION_39	CALL_14
0x40007af	      0xe800000000	                          call 0x40007b4	      1820	wrstabs.c	FUNCTION_39	CALL_14
0x40007b4	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1821	wrstabs.c	FUNCTION_39
0x40007b9	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40007bd	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1821	wrstabs.c	FUNCTION_39
0x40007c5	          0x4885f6	                           test rsi, rsi	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40007c8	            0x741e	                            je 0x40007e8	      1823	wrstabs.c	FUNCTION_39	IF_5
0x40007ca	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x40007cd	      0xe800000000	                          call 0x40007d2	       148	string3.h	FUNCTION_81	CALL_3
0x40007d2	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40007d6	      0xe800000000	                          call 0x40007db	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x40007db	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1827	wrstabs.c	FUNCTION_39	IF_5
0x40007e0	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1827	wrstabs.c	FUNCTION_39	IF_5
0x40007e8	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x40007eb	      0xe800000000	                          call 0x40007f0	       148	string3.h	FUNCTION_81	CALL_3
0x40007f0	      0xba3b000000	                           mov edx, 0x3b	       148	string3.h	FUNCTION_81	CALL_3
0x40007f5	    0x664189540500	                mov word [r13 + rax], dx	       148	string3.h	FUNCTION_81	CALL_3
0x40007fb	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1832	wrstabs.c	FUNCTION_39	IF_6
0x40007ff	          0x4885f6	                           test rsi, rsi	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4000802	            0x7420	                            je 0x4000824	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4000804	      0x498d7c0501	                lea rdi, [r13 + rax + 1]	       148	string3.h	FUNCTION_81	CALL_3
0x4000809	      0xe800000000	                          call 0x400080e	       148	string3.h	FUNCTION_81	CALL_3
0x400080e	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4000812	      0xe800000000	                          call 0x4000817	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4000817	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1836	wrstabs.c	FUNCTION_39	IF_6
0x400081c	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1836	wrstabs.c	FUNCTION_39	IF_6
0x4000824	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1841	wrstabs.c	FUNCTION_39	CALL_20
0x4000828	      0xe800000000	                          call 0x400082d	      1841	wrstabs.c	FUNCTION_39	CALL_20
0x400082d	      0x498b442460	            mov rax, qword [r12 + 0x60] 	      1842	wrstabs.c	FUNCTION_39
0x4000832	        0x4c896808	                mov qword [rax + 8], r13	      1842	wrstabs.c	FUNCTION_39
0x4000836	      0xb801000000	                              mov eax, 1	      1845	wrstabs.c	FUNCTION_39
0x400083b	              0x5b	                                 pop rbx	      1845	wrstabs.c	FUNCTION_39
0x400083c	              0x5d	                                 pop rbp	      1845	wrstabs.c	FUNCTION_39
0x400083d	            0x415c	                                 pop r12	      1845	wrstabs.c	FUNCTION_39
0x400083f	            0x415d	                                 pop r13	      1845	wrstabs.c	FUNCTION_39
0x4000841	            0x415e	                                 pop r14	      1845	wrstabs.c	FUNCTION_39
0x4000843	              0xc3	                                     ret	      1845	wrstabs.c	FUNCTION_39
0x4000844	         0xf1f4000	                         nop dword [rax]	      1845	wrstabs.c	FUNCTION_39
0x4000848	        0x488d680a	                    lea rbp, [rax + 0xa]	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x400084c	            0x31db	                            xor ebx, ebx	      1780	wrstabs.c	FUNCTION_39
0x400084e	      0xe985feffff	                           jmp 0x40006d8	      1780	wrstabs.c	FUNCTION_39
0x4000853	      0xb900000000	                              mov ecx, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4000858	      0xbaf7060000	                          mov edx, 0x6f7	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x400085d	      0xbe00000000	                              mov esi, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4000862	      0xbf00000000	                              mov edi, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4000867	      0xe800000000	                          call 0x400086c	      1783	wrstabs.c	FUNCTION_39	CALL_1
stab_class_static_member	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,9:ELSE,0:SWITCH,1	86
0x4000900	            0x4157	                                push r15	      1494	wrstabs.c	FUNCTION_32
0x4000902	            0x4156	                                push r14	      1494	wrstabs.c	FUNCTION_32
0x4000904	          0x4989ff	                            mov r15, rdi	      1494	wrstabs.c	FUNCTION_32
0x4000907	            0x4155	                                push r13	      1494	wrstabs.c	FUNCTION_32
0x4000909	            0x4154	                                push r12	      1494	wrstabs.c	FUNCTION_32
0x400090b	        0x4883c760	                           add rdi, 0x60	      1494	wrstabs.c	FUNCTION_32
0x400090f	              0x55	                                push rbp	      1494	wrstabs.c	FUNCTION_32
0x4000910	              0x53	                                push rbx	      1494	wrstabs.c	FUNCTION_32
0x4000911	          0x4889f5	                            mov rbp, rsi	      1494	wrstabs.c	FUNCTION_32
0x4000914	          0x4989d5	                            mov r13, rdx	      1494	wrstabs.c	FUNCTION_32
0x4000917	          0x4189ce	                           mov r14d, ecx	      1494	wrstabs.c	FUNCTION_32
0x400091a	        0x4883ec28	                           sub rsp, 0x28	      1494	wrstabs.c	FUNCTION_32
0x400091e	          0x488b07	                    mov rax, qword [rdi]	      1500	wrstabs.c	FUNCTION_32
0x4000921	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1500	wrstabs.c	FUNCTION_32
0x4000924	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1500	wrstabs.c	FUNCTION_32
0x4000928	      0xe893ffffff	           call sym.stab_pop_type.isra.1	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x400092d	          0x4989c4	                            mov r12, rax	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x4000930	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4000934	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4000938	          0x4885ff	                           test rdi, rdi	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x400093b	     0xf84e6000000	                            je 0x4000a27	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4000941	      0xe800000000	                          call 0x4000946	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000946	          0x4889ef	                            mov rdi, rbp	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x4000949	      0x4889442410	             mov qword [rsp + 0x10], rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x400094e	      0xe800000000	                          call 0x4000953	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x4000953	          0x4c89e7	                            mov rdi, r12	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x4000956	          0x4889c3	                            mov rbx, rax	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x4000959	      0xe800000000	                          call 0x400095e	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x400095e	          0x4c89ef	                            mov rdi, r13	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x4000961	      0x4889442408	                mov qword [rsp + 8], rax	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x4000966	      0xe800000000	                          call 0x400096b	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x400096b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000970	      0x488d7c190a	              lea rdi, [rcx + rbx + 0xa]	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000975	      0x48037c2408	                add rdi, qword [rsp + 8]	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x400097a	          0x4801c7	                            add rdi, rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x400097d	      0xe800000000	                          call 0x4000982	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000982	        0x4183fe01	                             cmp r14d, 1	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000986	          0x4889c3	                            mov rbx, rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000989	     0xf8491000000	                            je 0x4000a20	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x400098f	            0x7217	                            jb 0x40009a8	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000991	        0x4183fe02	                             cmp r14d, 2	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000995	      0xba00000000	                              mov edx, 0	      1523	wrstabs.c	FUNCTION_32	SWITCH_1
0x400099a	            0x7411	                            je 0x40009ad	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x400099c	      0xe800000000	                          call 0x40009a1	      1516	wrstabs.c	FUNCTION_32	SWITCH_1	CALL_8
0x40009a1	     0xf1f80000000	                         nop dword [rax]	      1516	wrstabs.c	FUNCTION_32	SWITCH_1	CALL_8
0x40009a8	      0xba00000000	                              mov edx, 0	      1519	wrstabs.c	FUNCTION_32	SWITCH_1
0x40009ad	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1531	wrstabs.c	FUNCTION_32
0x40009b1	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009b5	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009b8	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009ba	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009bc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009c1	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009c2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009c7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009ce	        0x4c8b4020	              mov r8, qword [rax + 0x20]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009d2	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009d5	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009d7	      0xe800000000	                          call 0x40009dc	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009dc	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x40009e0	        0x4883c420	                           add rsp, 0x20	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x40009e4	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x40009e8	      0xe800000000	                          call 0x40009ed	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x40009ed	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      1537	wrstabs.c	FUNCTION_32	IF_1
0x40009f1	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1535	wrstabs.c	FUNCTION_32
0x40009f5	            0x85d2	                           test edx, edx	      1537	wrstabs.c	FUNCTION_32	IF_1
0x40009f7	        0x48895820	             mov qword [rax + 0x20], rbx	      1535	wrstabs.c	FUNCTION_32
0x40009fb	            0x7407	                            je 0x4000a04	      1537	wrstabs.c	FUNCTION_32	IF_1
0x40009fd	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1538	wrstabs.c	FUNCTION_32	IF_1
0x4000a04	        0x4883c428	                           add rsp, 0x28	      1541	wrstabs.c	FUNCTION_32
0x4000a08	      0xb801000000	                              mov eax, 1	      1541	wrstabs.c	FUNCTION_32
0x4000a0d	              0x5b	                                 pop rbx	      1541	wrstabs.c	FUNCTION_32
0x4000a0e	              0x5d	                                 pop rbp	      1541	wrstabs.c	FUNCTION_32
0x4000a0f	            0x415c	                                 pop r12	      1541	wrstabs.c	FUNCTION_32
0x4000a11	            0x415d	                                 pop r13	      1541	wrstabs.c	FUNCTION_32
0x4000a13	            0x415e	                                 pop r14	      1541	wrstabs.c	FUNCTION_32
0x4000a15	            0x415f	                                 pop r15	      1541	wrstabs.c	FUNCTION_32
0x4000a17	              0xc3	                                     ret	      1541	wrstabs.c	FUNCTION_32
0x4000a18	     0xf1f84000000	                   nop dword [rax + rax]	      1541	wrstabs.c	FUNCTION_32
0x4000a20	      0xba00000000	                              mov edx, 0	      1527	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000a25	            0xeb86	                           jmp 0x40009ad	      1528	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000a27	      0xb900000000	                              mov ecx, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4000a2c	      0xbae2050000	                          mov edx, 0x5e2	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4000a31	      0xbe00000000	                              mov esi, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4000a36	      0xbf00000000	                              mov edi, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x4000a3b	      0xe800000000	              call sym.stab_struct_field	      1506	wrstabs.c	FUNCTION_32	CALL_2
stab_method_type	IF,10:FOR,3:WHILE,0:DO,0:functions,0:CALL,23:ELSE,3:SWITCH,0	263
0x4002df0	            0x4157	                                push r15	      1140	wrstabs.c	FUNCTION_24
0x4002df2	            0x4156	                                push r14	      1140	wrstabs.c	FUNCTION_24
0x4002df4	          0x4989fe	                            mov r14, rdi	      1140	wrstabs.c	FUNCTION_24
0x4002df7	            0x4155	                                push r13	      1140	wrstabs.c	FUNCTION_24
0x4002df9	            0x4154	                                push r12	      1140	wrstabs.c	FUNCTION_24
0x4002dfb	              0x55	                                push rbp	      1140	wrstabs.c	FUNCTION_24
0x4002dfc	              0x53	                                push rbx	      1140	wrstabs.c	FUNCTION_24
0x4002dfd	            0x89d3	                            mov ebx, edx	      1140	wrstabs.c	FUNCTION_24
0x4002dff	        0x4883ec28	                           sub rsp, 0x28	      1140	wrstabs.c	FUNCTION_24
0x4002e03	            0x85f6	                           test esi, esi	      1154	wrstabs.c	FUNCTION_24	IF_1
0x4002e05	        0x894c2410	             mov dword [rsp + 0x10], ecx	      1140	wrstabs.c	FUNCTION_24
0x4002e09	            0x750d	                           jne 0x4002e18	      1154	wrstabs.c	FUNCTION_24	IF_1
0x4002e0b	      0xe850ffffff	                call sym.stab_empty_type	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4002e10	            0x85c0	                           test eax, eax	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4002e12	     0xf847b010000	                            je 0x4002f93	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4002e18	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1160	wrstabs.c	FUNCTION_24
0x4002e1c	        0x4d8d6e60	                   lea r13, [r14 + 0x60]	      1160	wrstabs.c	FUNCTION_24
0x4002e20	          0x4c89ef	                            mov rdi, r13	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4002e23	        0x448b601c	           mov r12d, dword [rax + 0x1c] 	      1160	wrstabs.c	FUNCTION_24
0x4002e27	      0xe894daffff	           call sym.stab_pop_type.isra.1	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4002e2c	            0x85db	                           test ebx, ebx	      1166	wrstabs.c	FUNCTION_24	IF_3
0x4002e2e	        0x48890424	                    mov qword [rsp], rax	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4002e32	            0x7814	                            js 0x4002e48	      1166	wrstabs.c	FUNCTION_24	IF_3
0x4002e34	     0xf856e010000	                           jne 0x4002fa8	      1171	wrstabs.c	FUNCTION_24	ELSE_1	IF_4
0x4002e3a	      0x448b5c2410	           mov r11d, dword [rsp + 0x10] 	      1173	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4002e3f	          0x4585db	                         test r11d, r11d	      1173	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4002e42	     0xf84e0010000	                            je 0x4003028	      1173	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4002e48	          0x4585e4	                         test r12d, r12d	      1203	wrstabs.c	FUNCTION_24
0x4002e4b	     0xf854b020000	                           jne 0x400309c	      1203	wrstabs.c	FUNCTION_24
0x4002e51	            0x31ed	                            xor ebp, ebp	      1203	wrstabs.c	FUNCTION_24
0x4002e53	            0x31db	                            xor ebx, ebx	      1203	wrstabs.c	FUNCTION_24
0x4002e55	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1203	wrstabs.c	FUNCTION_24
0x4002e59	          0x8b781c	            mov edi, dword [rax + 0x1c] 	      1203	wrstabs.c	FUNCTION_24
0x4002e5c	            0x31c0	                            xor eax, eax	      1203	wrstabs.c	FUNCTION_24
0x4002e5e	            0x85ff	                           test edi, edi	      1203	wrstabs.c	FUNCTION_24
0x4002e60	          0x4c89ef	                            mov rdi, r13	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4002e63	           0xf95c0	                                setne al	      1203	wrstabs.c	FUNCTION_24
0x4002e66	        0x89442408	                mov dword [rsp + 8], eax	      1203	wrstabs.c	FUNCTION_24
0x4002e6a	      0xe851daffff	           call sym.stab_pop_type.isra.1	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4002e6f	        0x488b3c24	                    mov rdi, qword [rsp]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4002e73	          0x4989c7	                            mov r15, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4002e76	      0xe800000000	                          call 0x4002e7b	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4002e7b	          0x4c89ff	                            mov rdi, r15	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4002e7e	          0x4989c4	                            mov r12, rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4002e81	      0xe800000000	                          call 0x4002e86	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4002e86	            0x85db	                           test ebx, ebx	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4002e88	      0x4d8d64040a	              lea r12, [r12 + rax + 0xa]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4002e8d	     0xf8437020000	                            je 0x40030ca	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4002e93	          0x4531f6	                          xor r14d, r14d	      1203	wrstabs.c	FUNCTION_24
0x4002e96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1203	wrstabs.c	FUNCTION_24
0x4002ea0	      0x4a8b7cf500	            mov rdi, qword [rbp + r14*8]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4002ea5	        0x4983c601	                              add r14, 1	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4002ea9	      0xe800000000	                          call 0x4002eae	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4002eae	          0x4901c4	                            add r12, rax	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4002eb1	          0x4439f3	                           cmp ebx, r14d	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4002eb4	            0x7fea	                            jg 0x4002ea0	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4002eb6	          0x4c89e7	                            mov rdi, r12	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4002eb9	      0xe800000000	                          call 0x4002ebe	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4002ebe	        0x4c8b3424	                    mov r14, qword [rsp]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ec2	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ec5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002eca	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ed1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ed6	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ed9	          0x4989c4	                            mov r12, rax	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4002edc	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ede	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ee1	      0xe800000000	                          call 0x4002ee6	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ee6	          0x4c89f7	                            mov rdi, r14	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x4002ee9	          0x4531f6	                          xor r14d, r14d	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4002eec	      0xe800000000	                          call 0x4002ef1	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x4002ef1	          0x4c89ff	                            mov rdi, r15	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4002ef4	      0xe800000000	                          call 0x4002ef9	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4002ef9	     0xf1f80000000	                         nop dword [rax]	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4002f00	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x4002f03	      0xe800000000	                          call 0x4002f08	       148	string3.h	FUNCTION_81	CALL_3
0x4002f08	      0x4e8b7cf500	            mov r15, qword [rbp + r14*8]	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4002f0d	      0xbe2c000000	                           mov esi, 0x2c	       148	string3.h	FUNCTION_81	CALL_3
0x4002f12	      0x498d7c0401	                lea rdi, [r12 + rax + 1]	       148	string3.h	FUNCTION_81	CALL_3
0x4002f17	      0x6641893404	                mov word [r12 + rax], si	       148	string3.h	FUNCTION_81	CALL_3
0x4002f1c	        0x4983c601	                              add r14, 1	       148	string3.h	FUNCTION_81	CALL_3
0x4002f20	          0x4c89fe	                            mov rsi, r15	       148	string3.h	FUNCTION_81	CALL_3
0x4002f23	      0xe800000000	                          call 0x4002f28	       148	string3.h	FUNCTION_81	CALL_3
0x4002f28	          0x4c89ff	                            mov rdi, r15	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4002f2b	      0xe800000000	                          call 0x4002f30	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4002f30	          0x4439f3	                           cmp ebx, r14d	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x4002f33	            0x7fcb	                            jg 0x4002f00	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x4002f35	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x4002f38	      0xe800000000	                          call 0x4002f3d	       148	string3.h	FUNCTION_81	CALL_3
0x4002f3d	      0xba3b000000	                           mov edx, 0x3b	       148	string3.h	FUNCTION_81	CALL_3
0x4002f42	      0x6641891404	                mov word [r12 + rax], dx	       148	string3.h	FUNCTION_81	CALL_3
0x4002f47	          0x4889ef	                            mov rdi, rbp	      1224	wrstabs.c	FUNCTION_24	CALL_21
0x4002f4a	      0xe800000000	                          call 0x4002f4f	      1224	wrstabs.c	FUNCTION_24	CALL_21
0x4002f4f	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f53	          0x4531c0	                            xor r8d, r8d	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f56	            0x31d2	                            xor edx, edx	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f58	          0x4c89e6	                            mov rsi, r12	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f5b	          0x4c89ef	                            mov rdi, r13	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f5e	      0xe89de9ffff	        call sym.stab_push_string.isra.5	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f63	            0x85c0	                           test eax, eax	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f65	            0x742c	                            je 0x4002f93	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4002f67	          0x4c89e7	                            mov rdi, r12	      1229	wrstabs.c	FUNCTION_24	CALL_23
0x4002f6a	      0xe800000000	                          call 0x4002f6f	      1229	wrstabs.c	FUNCTION_24	CALL_23
0x4002f6f	        0x4883c428	                           add rsp, 0x28	      1232	wrstabs.c	FUNCTION_24
0x4002f73	      0xb801000000	                              mov eax, 1	      1231	wrstabs.c	FUNCTION_24
0x4002f78	              0x5b	                                 pop rbx	      1232	wrstabs.c	FUNCTION_24
0x4002f79	              0x5d	                                 pop rbp	      1232	wrstabs.c	FUNCTION_24
0x4002f7a	            0x415c	                                 pop r12	      1232	wrstabs.c	FUNCTION_24
0x4002f7c	            0x415d	                                 pop r13	      1232	wrstabs.c	FUNCTION_24
0x4002f7e	            0x415e	                                 pop r14	      1232	wrstabs.c	FUNCTION_24
0x4002f80	            0x415f	                                 pop r15	      1232	wrstabs.c	FUNCTION_24
0x4002f82	              0xc3	                                     ret	      1232	wrstabs.c	FUNCTION_24
0x4002f83	          0x4c89f7	                            mov rdi, r14	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4002f86	      0xe8d5fdffff	                call sym.stab_empty_type	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4002f8b	            0x85c0	                           test eax, eax	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4002f8d	     0xf850a020000	                           jne 0x400319d	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4002f93	        0x4883c428	                           add rsp, 0x28	      1232	wrstabs.c	FUNCTION_24
0x4002f97	            0x31c0	                            xor eax, eax	      1157	wrstabs.c	FUNCTION_24	IF_1	IF_2
0x4002f99	              0x5b	                                 pop rbx	      1232	wrstabs.c	FUNCTION_24
0x4002f9a	              0x5d	                                 pop rbp	      1232	wrstabs.c	FUNCTION_24
0x4002f9b	            0x415c	                                 pop r12	      1232	wrstabs.c	FUNCTION_24
0x4002f9d	            0x415d	                                 pop r13	      1232	wrstabs.c	FUNCTION_24
0x4002f9f	            0x415e	                                 pop r14	      1232	wrstabs.c	FUNCTION_24
0x4002fa1	            0x415f	                                 pop r15	      1232	wrstabs.c	FUNCTION_24
0x4002fa3	              0xc3	                                     ret	      1232	wrstabs.c	FUNCTION_24
0x4002fa4	         0xf1f4000	                         nop dword [rax]	      1232	wrstabs.c	FUNCTION_24
0x4002fa8	          0x8d4301	                      lea eax, [rbx + 1]	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fab	        0x89442414	             mov dword [rsp + 0x14], eax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002faf	            0x4898	                                    cdqe	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fb1	        0x48c1e003	                              shl rax, 3	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fb5	          0x4889c7	                            mov rdi, rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fb8	          0x4989c7	                            mov r15, rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fbb	      0x4889442418	             mov qword [rsp + 0x18], rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fc0	      0xe800000000	                          call 0x4002fc5	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fc5	          0x4889c5	                            mov rbp, rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fc8	          0x8d43ff	                      lea eax, [rbx - 1]	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fcb	      0x4e8d7c3df0	             lea r15, [rbp + r15 - 0x10]	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fd0	          0x4863c8	                         movsxd rcx, eax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fd3	            0x89c0	                            mov eax, eax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fd5	          0x4829c1	                            sub rcx, rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fd8	      0x488d44cdf8	              lea rax, [rbp + rcx*8 - 8]	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fdd	      0x4889442408	                mov qword [rsp + 8], rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fe2	            0xeb31	                           jmp 0x4003015	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fe4	         0xf1f4000	                         nop dword [rax]	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x4002fe8	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4002fec	          0x4531e4	                          xor r12d, r12d	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4002fef	        0x448b501c	           mov r10d, dword [rax + 0x1c] 	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4002ff3	          0x4585d2	                         test r10d, r10d	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4002ff6	        0x410f95c4	                              setne r12b	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4002ffa	          0x4c89ef	                            mov rdi, r13	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4002ffd	        0x4983ef08	                              sub r15, 8	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4003001	      0xe8bad8ffff	           call sym.stab_pop_type.isra.1	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4003006	        0x49894708	                mov qword [r15 + 8], rax	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x400300a	      0x4c3b7c2408	                cmp r15, qword [rsp + 8]	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x400300f	     0xf841b010000	                            je 0x4003130	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4003015	          0x4585e4	                         test r12d, r12d	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4003018	            0x74ce	                            je 0x4002fe8	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x400301a	    0x41bc01000000	                             mov r12d, 1	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4003020	            0xebd8	                           jmp 0x4002ffa	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4003022	    0x660f1f440000	                    nop word [rax + rax]	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4003028	      0xbf08000000	                              mov edi, 8	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x400302d	      0xe800000000	                          call 0x4003032	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x4003032	          0x4c89f7	                            mov rdi, r14	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4003035	          0x4889c5	                            mov rbp, rax	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x4003038	      0xe823fdffff	                call sym.stab_empty_type	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x400303d	            0x85c0	                           test eax, eax	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x400303f	     0xf844effffff	                            je 0x4002f93	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4003045	          0x4585e4	                         test r12d, r12d	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4003048	     0xf842a010000	                            je 0x4003178	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x400304e	          0x4c89ef	                            mov rdi, r13	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4003051	      0xe86ad8ffff	           call sym.stab_pop_type.isra.1	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4003056	        0x48894500	                    mov qword [rbp], rax	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x400305a	          0x4c89ef	                            mov rdi, r13	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x400305d	      0xe85ed8ffff	           call sym.stab_pop_type.isra.1	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4003062	        0x488b3c24	                    mov rdi, qword [rsp]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003066	          0x4989c7	                            mov r15, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4003069	      0xe800000000	                          call 0x400306e	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x400306e	          0x4c89ff	                            mov rdi, r15	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003071	          0x4889c3	                            mov rbx, rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003074	      0xe800000000	                          call 0x4003079	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003079	        0x488b7d00	                    mov rdi, qword [rbp]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x400307d	      0x4c8d64030a	              lea r12, [rbx + rax + 0xa]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003082	      0xbb01000000	                              mov ebx, 1	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4003087	      0xe800000000	                          call 0x400308c	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x400308c	    0xc74424080100	                  mov dword [rsp + 8], 1	      1203	wrstabs.c	FUNCTION_24
0x4003094	          0x4901c4	                            add r12, rax	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x4003097	      0xe91afeffff	                           jmp 0x4002eb6	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x400309c	          0x4c89ef	                            mov rdi, r13	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x400309f	            0x31ed	                            xor ebp, ebp	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40030a1	      0xe81ad8ffff	           call sym.stab_pop_type.isra.1	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x40030a6	        0x488b3c24	                    mov rdi, qword [rsp]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40030aa	          0x4989c7	                            mov r15, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x40030ad	      0xe800000000	                          call 0x40030b2	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40030b2	          0x4c89ff	                            mov rdi, r15	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40030b5	          0x4889c3	                            mov rbx, rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40030b8	      0xe800000000	                          call 0x40030bd	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40030bd	      0x4c8d64030a	              lea r12, [rbx + rax + 0xa]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40030c2	    0xc74424080100	                  mov dword [rsp + 8], 1	      1203	wrstabs.c	FUNCTION_24
0x40030ca	          0x4c89e7	                            mov rdi, r12	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x40030cd	      0xe800000000	                          call 0x40030d2	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x40030d2	        0x488b1c24	                    mov rbx, qword [rsp]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030d6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030db	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030de	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030e5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030ea	          0x4989c4	                            mov r12, rax	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x40030ed	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030f0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030f2	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030f5	      0xe800000000	                          call 0x40030fa	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030fa	          0x4889df	                            mov rdi, rbx	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x40030fd	      0xe800000000	                          call 0x4003102	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x4003102	          0x4c89ff	                            mov rdi, r15	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4003105	      0xe800000000	                          call 0x400310a	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x400310a	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x400310d	      0xe800000000	                          call 0x4003112	       148	string3.h	FUNCTION_81	CALL_3
0x4003112	      0xb93b000000	                           mov ecx, 0x3b	       148	string3.h	FUNCTION_81	CALL_3
0x4003117	          0x4885ed	                           test rbp, rbp	      1223	wrstabs.c	FUNCTION_24	IF_9
0x400311a	      0x6641890c04	                mov word [r12 + rax], cx	       148	string3.h	FUNCTION_81	CALL_3
0x400311f	     0xf842afeffff	                            je 0x4002f4f	      1223	wrstabs.c	FUNCTION_24	IF_9
0x4003125	      0xe91dfeffff	                           jmp 0x4002f47	      1223	wrstabs.c	FUNCTION_24	IF_9
0x400312a	    0x660f1f440000	                    nop word [rax + rax]	      1223	wrstabs.c	FUNCTION_24	IF_9
0x4003130	      0x448b4c2410	            mov r9d, dword [rsp + 0x10] 	      1193	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4003135	          0x4585c9	                           test r9d, r9d	      1193	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4003138	     0xf8445feffff	                            je 0x4002f83	      1193	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x400313e	          0x4585e4	                         test r12d, r12d	      1203	wrstabs.c	FUNCTION_24
0x4003141	     0xf840efdffff	                            je 0x4002e55	      1203	wrstabs.c	FUNCTION_24
0x4003147	          0x4c89ef	                            mov rdi, r13	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x400314a	      0xe871d7ffff	           call sym.stab_pop_type.isra.1	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x400314f	        0x488b3c24	                    mov rdi, qword [rsp]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003153	          0x4989c7	                            mov r15, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4003156	      0xe800000000	                          call 0x400315b	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x400315b	          0x4c89ff	                            mov rdi, r15	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x400315e	          0x4989c4	                            mov r12, rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003161	      0xe800000000	                          call 0x4003166	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003166	    0xc74424080100	                  mov dword [rsp + 8], 1	      1203	wrstabs.c	FUNCTION_24
0x400316e	      0x4d8d64040a	              lea r12, [r12 + rax + 0xa]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003173	      0xe91bfdffff	                           jmp 0x4002e93	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x4003178	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x400317c	          0x4c89ef	                            mov rdi, r13	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x400317f	          0x8b581c	            mov ebx, dword [rax + 0x1c] 	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4003182	      0xe839d7ffff	           call sym.stab_pop_type.isra.1	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4003187	        0x48894500	                    mov qword [rbp], rax	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x400318b	            0x85db	                           test ebx, ebx	      1203	wrstabs.c	FUNCTION_24
0x400318d	     0xf85c7feffff	                           jne 0x400305a	      1203	wrstabs.c	FUNCTION_24
0x4003193	      0xbb01000000	                              mov ebx, 1	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x4003198	      0xe9b8fcffff	                           jmp 0x4002e55	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x400319d	          0x4585e4	                         test r12d, r12d	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031a0	            0x7530	                           jne 0x40031d2	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031a2	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031a6	          0x4531e4	                          xor r12d, r12d	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031a9	        0x448b401c	            mov r8d, dword [rax + 0x1c] 	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031ad	          0x4585c0	                           test r8d, r8d	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031b0	        0x410f95c4	                              setne r12b	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031b4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x40031b9	          0x4c89ef	                            mov rdi, r13	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x40031bc	      0x488d5c05f8	                lea rbx, [rbp + rax - 8]	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x40031c1	      0xe8fad6ffff	           call sym.stab_pop_type.isra.1	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x40031c6	          0x488903	                    mov qword [rbx], rax	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x40031c9	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	      1199	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031cd	      0xe96cffffff	                           jmp 0x400313e	      1199	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031d2	    0x41bc01000000	                             mov r12d, 1	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x40031d8	            0xebda	                           jmp 0x40031b4	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
stab_struct_field	IF,3:FOR,0:WHILE,0:DO,0:functions,0:CALL,11:ELSE,0:SWITCH,1	111
0x4000a40	            0x4157	                                push r15	      1350	wrstabs.c	FUNCTION_29
0x4000a42	            0x4156	                                push r14	      1350	wrstabs.c	FUNCTION_29
0x4000a44	          0x4989fe	                            mov r14, rdi	      1350	wrstabs.c	FUNCTION_29
0x4000a47	            0x4155	                                push r13	      1350	wrstabs.c	FUNCTION_29
0x4000a49	            0x4154	                                push r12	      1350	wrstabs.c	FUNCTION_29
0x4000a4b	        0x4883c760	                           add rdi, 0x60	      1350	wrstabs.c	FUNCTION_29
0x4000a4f	              0x55	                                push rbp	      1350	wrstabs.c	FUNCTION_29
0x4000a50	              0x53	                                push rbx	      1350	wrstabs.c	FUNCTION_29
0x4000a51	          0x4889f5	                            mov rbp, rsi	      1350	wrstabs.c	FUNCTION_29
0x4000a54	          0x4889cb	                            mov rbx, rcx	      1350	wrstabs.c	FUNCTION_29
0x4000a57	          0x4589c5	                           mov r13d, r8d	      1350	wrstabs.c	FUNCTION_29
0x4000a5a	        0x4883ec28	                           sub rsp, 0x28	      1350	wrstabs.c	FUNCTION_29
0x4000a5e	          0x488b07	                    mov rax, qword [rdi]	      1357	wrstabs.c	FUNCTION_29
0x4000a61	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1350	wrstabs.c	FUNCTION_29
0x4000a66	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      1357	wrstabs.c	FUNCTION_29
0x4000a69	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1358	wrstabs.c	FUNCTION_29
0x4000a6c	        0x89542418	             mov dword [rsp + 0x18], edx	      1357	wrstabs.c	FUNCTION_29
0x4000a70	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1358	wrstabs.c	FUNCTION_29
0x4000a74	      0xe847feffff	           call sym.stab_pop_type.isra.1	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x4000a79	          0x4989c4	                            mov r12, rax	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x4000a7c	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000a80	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000a84	          0x4885ff	                           test rdi, rdi	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000a87	     0xf8443010000	                            je 0x4000bd0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000a8d	      0xe800000000	                          call 0x4000a92	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000a92	          0x4889ef	                            mov rdi, rbp	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4000a95	      0x4889442408	                mov qword [rsp + 8], rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000a9a	      0xe800000000	                          call 0x4000a9f	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4000a9f	          0x4c89e7	                            mov rdi, r12	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4000aa2	          0x4989c7	                            mov r15, rax	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4000aa5	      0xe800000000	                          call 0x4000aaa	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4000aaa	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000aaf	      0x4a8d7c3932	            lea rdi, [rcx + r15 + 0x32] 	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000ab4	          0x4801c7	                            add rdi, rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000ab7	      0xe800000000	                          call 0x4000abc	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000abc	        0x4183fd01	                             cmp r13d, 1	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000ac0	          0x4989c3	                            mov r11, rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000ac3	     0xf84bf000000	                            je 0x4000b88	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000ac9	     0xf82a1000000	                            jb 0x4000b70	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000acf	        0x4183fd02	                             cmp r13d, 2	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000ad3	     0xf85a7000000	                           jne 0x4000b80	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000ad9	    0x41bd00000000	                             mov r13d, 0	      1380	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000adf	          0x4885db	                           test rbx, rbx	      1388	wrstabs.c	FUNCTION_29	IF_1
0x4000ae2	            0x750f	                           jne 0x4000af3	      1388	wrstabs.c	FUNCTION_29	IF_1
0x4000ae4	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	      1390	wrstabs.c	FUNCTION_29	IF_1
0x4000ae8	          0xc1e303	                              shl ebx, 3	      1390	wrstabs.c	FUNCTION_29	IF_1
0x4000aeb	            0x85db	                           test ebx, ebx	      1391	wrstabs.c	FUNCTION_29	IF_1	IF_2
0x4000aed	     0xf84a5000000	                            je 0x4000b98	      1391	wrstabs.c	FUNCTION_29	IF_1	IF_2
0x4000af3	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1396	wrstabs.c	FUNCTION_29
0x4000af7	              0x53	                                push rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000af8	          0x4c89df	                            mov rdi, r11	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000afb	        0xff742418	                 push qword [rsp + 0x18]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000aff	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b01	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b08	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b0a	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b0d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b12	        0x4c8b4020	              mov r8, qword [rax + 0x20]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b16	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b1b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b1d	      0x4c895c2428	             mov qword [rsp + 0x28], r11	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b22	      0xe800000000	                          call 0x4000b27	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b27	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x4000b2b	        0x4883c420	                           add rsp, 0x20	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x4000b2f	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x4000b33	      0xe800000000	                          call 0x4000b38	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x4000b38	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      1402	wrstabs.c	FUNCTION_29	IF_3
0x4000b3c	        0x498b4660	            mov rax, qword [r14 + 0x60] 	      1400	wrstabs.c	FUNCTION_29
0x4000b40	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      1400	wrstabs.c	FUNCTION_29
0x4000b45	            0x85d2	                           test edx, edx	      1402	wrstabs.c	FUNCTION_29	IF_3
0x4000b47	        0x4c895820	             mov qword [rax + 0x20], r11	      1400	wrstabs.c	FUNCTION_29
0x4000b4b	            0x7407	                            je 0x4000b54	      1402	wrstabs.c	FUNCTION_29	IF_3
0x4000b4d	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1403	wrstabs.c	FUNCTION_29	IF_3
0x4000b54	        0x4883c428	                           add rsp, 0x28	      1406	wrstabs.c	FUNCTION_29
0x4000b58	      0xb801000000	                              mov eax, 1	      1406	wrstabs.c	FUNCTION_29
0x4000b5d	              0x5b	                                 pop rbx	      1406	wrstabs.c	FUNCTION_29
0x4000b5e	              0x5d	                                 pop rbp	      1406	wrstabs.c	FUNCTION_29
0x4000b5f	            0x415c	                                 pop r12	      1406	wrstabs.c	FUNCTION_29
0x4000b61	            0x415d	                                 pop r13	      1406	wrstabs.c	FUNCTION_29
0x4000b63	            0x415e	                                 pop r14	      1406	wrstabs.c	FUNCTION_29
0x4000b65	            0x415f	                                 pop r15	      1406	wrstabs.c	FUNCTION_29
0x4000b67	              0xc3	                                     ret	      1406	wrstabs.c	FUNCTION_29
0x4000b68	     0xf1f84000000	                   nop dword [rax + rax]	      1406	wrstabs.c	FUNCTION_29
0x4000b70	    0x41bd00000000	                             mov r13d, 0	      1376	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000b76	      0xe964ffffff	                           jmp 0x4000adf	      1376	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000b7b	       0xf1f440000	                   nop dword [rax + rax]	      1376	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000b80	      0xe800000000	                          call 0x4000b85	      1373	wrstabs.c	FUNCTION_29	SWITCH_1	CALL_7
0x4000b85	           0xf1f00	                         nop dword [rax]	      1373	wrstabs.c	FUNCTION_29	SWITCH_1	CALL_7
0x4000b88	    0x41bd00000000	                             mov r13d, 0	      1384	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000b8e	      0xe94cffffff	                           jmp 0x4000adf	      1385	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000b93	       0xf1f440000	                   nop dword [rax + rax]	      1385	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000b98	          0x498b06	                    mov rax, qword [r14]	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x4000b9b	      0xba05000000	                              mov edx, 5	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000ba0	      0xbe00000000	                              mov esi, 0	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000ba5	            0x31ff	                            xor edi, edi	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000ba7	      0x4c895c2408	                mov qword [rsp + 8], r11	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bac	          0x488b18	                    mov rbx, qword [rax]	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x4000baf	      0xe800000000	                          call 0x4000bb4	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bb4	          0x4889ea	                            mov rdx, rbp	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bb7	          0x4889c7	                            mov rdi, rax	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bba	            0x31c0	                            xor eax, eax	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bbc	          0x4889de	                            mov rsi, rbx	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bbf	            0x31db	                            xor ebx, ebx	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bc1	      0xe800000000	                          call 0x4000bc6	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bc6	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bcb	      0xe923ffffff	                           jmp 0x4000af3	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x4000bd0	      0xb900000000	                              mov ecx, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000bd5	      0xba54050000	                          mov edx, 0x554	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000bda	      0xbe00000000	                              mov esi, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000bdf	      0xbf00000000	                              mov edi, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000be4	      0xe800000000	                          call 0x4000be9	      1364	wrstabs.c	FUNCTION_29	CALL_2
stab_start_struct_type	IF,3:FOR,0:WHILE,0:DO,0:functions,0:CALL,4:ELSE,1:SWITCH,0	92
0x4001b70	            0x4156	                                push r14	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b72	            0x4155	                                push r13	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b74	          0x4189ce	                           mov r14d, ecx	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b77	            0x4154	                                push r12	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b79	              0x55	                                push rbp	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b7a	              0x53	                                push rbx	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b7b	          0x4889fb	                            mov rbx, rdi	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b7e	        0x4883ec40	                           sub rsp, 0x40	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b82	    0x64488b042528	                mov rax, qword fs:[0x28]	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b8b	      0x4889442438	             mov qword [rsp + 0x38], rax	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b90	            0x31c0	                            xor eax, eax	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b92	            0x85d2	                           test edx, edx	      1316	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b94	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b99	     0xf85d9000000	                           jne 0x4001c78	      1316	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b9f	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      1316	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001ba4	      0xc644241000	                mov byte [rsp + 0x10], 0	      1319	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001ba9	          0x4531ed	                          xor r13d, r13d	      1320	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001bac	          0x4531e4	                          xor r12d, r12d	      1318	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001baf	        0x4183fe01	                             cmp r14d, 1	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bb3	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bb8	          0x4889ef	                            mov rdi, rbp	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bbb	          0x4519c0	                            sbb r8d, r8d	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bbe	        0x4183e002	                              and r8d, 2	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bc2	        0x4183c073	                           add r8d, 0x73	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bc6	            0x8b17	                    mov edx, dword [rdi]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bc8	        0x4883c704	                              add rdi, 4	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bcc	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bd2	            0xf7d2	                                 not edx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bd4	            0x21d0	                            and eax, edx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bd6	      0x2580808080	                     and eax, 0x80808080	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bdb	            0x74e9	                            je 0x4001bc6	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bdd	            0x89c2	                            mov edx, eax	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bdf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001be4	          0xc1ea10	                           shr edx, 0x10	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001be7	      0xa980800000	                        test eax, 0x8080	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bec	           0xf44c2	                          cmove eax, edx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bef	        0x488d5702	                      lea rdx, [rdi + 2]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bf3	            0x89c1	                            mov ecx, eax	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bf5	        0x480f44fa	                          cmove rdi, rdx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bf9	              0xc1	                              add cl, al	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001bfb	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c02	        0x4883df03	                              sbb rdi, 3	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c06	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c0b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c0d	      0xe800000000	                          call 0x4001c12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c12	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c17	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c1b	          0x4489e9	                           mov ecx, r13d	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c1e	          0x4c89e2	                            mov rdx, r12	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c21	          0x4889ee	                            mov rsi, rbp	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c24	      0xe8d7fcffff	        call sym.stab_push_string.isra.5	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c29	            0x85c0	                           test eax, eax	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c2b	            0x7523	                           jne 0x4001c50	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001c2d	            0x31c0	                            xor eax, eax	      1327	wrstabs.c	FUNCTION_28	IF_2
0x4001c2f	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c34	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c3d	            0x7579	                           jne 0x4001cb8	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c3f	        0x4883c440	                           add rsp, 0x40	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c43	              0x5b	                                 pop rbx	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c44	              0x5d	                                 pop rbp	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c45	            0x415c	                                 pop r12	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c47	            0x415d	                                 pop r13	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c49	            0x415e	                                 pop r14	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c4b	              0xc3	                                     ret	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c4c	         0xf1f4000	                         nop dword [rax]	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c50	        0x488b6b60	            mov rbp, qword [rbx + 0x60] 	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001c54	      0xbf01000000	                              mov edi, 1	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001c59	      0xe800000000	                          call 0x4001c5e	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001c5e	        0x48894520	            mov qword [rbp + 0x20], rax 	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001c62	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c66	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c6a	          0xc60000	                       mov byte [rax], 0	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c6d	      0xb801000000	                              mov eax, 1	      1342	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c72	            0xebbb	                           jmp 0x4001c2f	      1342	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c74	         0xf1f4000	                         nop dword [rax]	      1342	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c78	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001c7d	            0x31c9	                            xor ecx, ecx	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001c7f	      0xe80ce5ffff	          call sym.stab_get_struct_index	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001c84	          0x4885c0	                           test rax, rax	      1326	wrstabs.c	FUNCTION_28	IF_2
0x4001c87	          0x4989c4	                            mov r12, rax	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001c8a	            0x78a1	                            js 0x4001c2d	      1326	wrstabs.c	FUNCTION_28	IF_2
0x4001c8c	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c91	          0x4989c0	                             mov r8, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c94	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c99	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001c9e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ca3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ca5	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ca8	    0x41bd01000000	                             mov r13d, 1	      1329	wrstabs.c	FUNCTION_28
0x4001cae	      0xe800000000	                          call 0x4001cb3	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cb3	      0xe9f7feffff	                           jmp 0x4001baf	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cb8	      0xe800000000	                          call 0x4001cbd	      1343	wrstabs.c	FUNCTION_28	ELSE_1
stab_pointer_type	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	5
0x40021e0	    0x488d8f780100	                  lea rcx, [rdi + 0x178]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40021e7	    0x4c8d87800100	                   lea r8, [rdi + 0x180]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40021ee	      0xba04000000	                              mov edx, 4	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40021f3	      0xbe2a000000	                           mov esi, 0x2a	       933	wrstabs.c	FUNCTION_17	CALL_1
0x40021f8	      0xe913fcffff	                jmp sym.stab_modify_type	       933	wrstabs.c	FUNCTION_17	CALL_1
stab_class_baseclass	IF,2:FOR,0:WHILE,1:DO,0:functions,0:CALL,7:ELSE,1:SWITCH,1	100
0x4000fc0	            0x4157	                                push r15	      1548	wrstabs.c	FUNCTION_33
0x4000fc2	            0x4156	                                push r14	      1548	wrstabs.c	FUNCTION_33
0x4000fc4	          0x4989f7	                            mov r15, rsi	      1548	wrstabs.c	FUNCTION_33
0x4000fc7	            0x4155	                                push r13	      1548	wrstabs.c	FUNCTION_33
0x4000fc9	            0x4154	                                push r12	      1548	wrstabs.c	FUNCTION_33
0x4000fcb	          0x4989fc	                            mov r12, rdi	      1548	wrstabs.c	FUNCTION_33
0x4000fce	              0x55	                                push rbp	      1548	wrstabs.c	FUNCTION_33
0x4000fcf	              0x53	                                push rbx	      1548	wrstabs.c	FUNCTION_33
0x4000fd0	        0x4883c760	                           add rdi, 0x60	      1548	wrstabs.c	FUNCTION_33
0x4000fd4	          0x4189d6	                           mov r14d, edx	      1548	wrstabs.c	FUNCTION_33
0x4000fd7	        0x4883ec18	                           sub rsp, 0x18	      1548	wrstabs.c	FUNCTION_33
0x4000fdb	          0x488b07	                    mov rax, qword [rdi]	      1556	wrstabs.c	FUNCTION_33
0x4000fde	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1548	wrstabs.c	FUNCTION_33
0x4000fe2	          0x8b681c	            mov ebp, dword [rax + 0x1c] 	      1556	wrstabs.c	FUNCTION_33
0x4000fe5	      0xe8d6f8ffff	           call sym.stab_pop_type.isra.1	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x4000fea	          0x4889c7	                            mov rdi, rax	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000fed	          0x4889c3	                            mov rbx, rax	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x4000ff0	      0xe800000000	                          call 0x4000ff5	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000ff5	        0x488d7819	                   lea rdi, [rax + 0x19]	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000ff9	      0xe800000000	                          call 0x4000ffe	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000ffe	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001002	        0x4183fe01	                             cmp r14d, 1	      1562	wrstabs.c	FUNCTION_33
0x4001006	          0x4989c5	                            mov r13, rax	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4001009	            0x19c0	                            sbb eax, eax	      1562	wrstabs.c	FUNCTION_33
0x400100b	          0x83c031	                           add eax, 0x31	      1562	wrstabs.c	FUNCTION_33
0x400100e	          0x83f901	                              cmp ecx, 1	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001011	        0x41884500	                      mov byte [r13], al	      1562	wrstabs.c	FUNCTION_33
0x4001015	     0xf84ed000000	                            je 0x4001108	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x400101b	     0xf82d7000000	                            jb 0x40010f8	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001021	          0x83f902	                              cmp ecx, 2	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001024	     0xf85c6000000	                           jne 0x40010f0	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x400102a	      0x41c6450130	                mov byte [r13 + 1], 0x30	      1569	wrstabs.c	FUNCTION_33	SWITCH_1
0x400102f	        0x498d7d02	                      lea rdi, [r13 + 2]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001033	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001036	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001039	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400103e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001045	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400104a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400104c	      0xe800000000	                          call 0x4001051	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001051	          0x4889df	                            mov rdi, rbx	      1582	wrstabs.c	FUNCTION_33	CALL_5
0x4001054	      0xe800000000	                          call 0x4001059	      1582	wrstabs.c	FUNCTION_33	CALL_5
0x4001059	      0x498b442460	            mov rax, qword [r12 + 0x60] 	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x400105e	          0x4885c0	                           test rax, rax	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x4001061	     0xf84c0000000	                            je 0x4001127	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x4001067	      0x4883782000	               cmp qword [rax + 0x20], 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x400106c	     0xf84b5000000	                            je 0x4001127	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x4001072	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      1588	wrstabs.c	FUNCTION_33	IF_1
0x4001076	          0x4885ff	                           test rdi, rdi	      1588	wrstabs.c	FUNCTION_33	IF_1
0x4001079	     0xf8499000000	                            je 0x4001118	      1588	wrstabs.c	FUNCTION_33	IF_1
0x400107f	        0x48833f00	                      cmp qword [rdi], 0	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001083	     0xf848f000000	                            je 0x4001118	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001089	            0x31c9	                            xor ecx, ecx	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x400108b	            0xeb05	                           jmp 0x4001092	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x400108d	           0xf1f00	                         nop dword [rax]	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001090	            0x89d1	                            mov ecx, edx	      1594	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001092	          0x8d4101	                      lea eax, [rcx + 1]	      1594	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001095	      0x48833cc700	              cmp qword [rdi + rax*8], 0	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x400109a	          0x4889c2	                            mov rdx, rax	      1594	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x400109d	    0x488d1cc50000	                        lea rbx, [rax*8]	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40010a5	            0x75e9	                           jne 0x4001090	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40010a7	          0x8d7103	                      lea esi, [rcx + 3]	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40010aa	        0x448d7102	                     lea r14d, [rcx + 2]	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40010ae	        0x48c1e603	                              shl rsi, 3	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40010b2	        0x49c1e603	                              shl r14, 3	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40010b6	      0xe800000000	                          call 0x40010bb	      1597	wrstabs.c	FUNCTION_33	CALL_7
0x40010bb	        0x4c892c18	              mov qword [rax + rbx], r13	      1599	wrstabs.c	FUNCTION_33
0x40010bf	    0x4ac704300000	                mov qword [rax + r14], 0	      1600	wrstabs.c	FUNCTION_33
0x40010c7	            0x85ed	                           test ebp, ebp	      1604	wrstabs.c	FUNCTION_33	IF_2
0x40010c9	      0x498b542460	            mov rdx, qword [r12 + 0x60] 	      1602	wrstabs.c	FUNCTION_33
0x40010ce	        0x48894228	             mov qword [rdx + 0x28], rax	      1602	wrstabs.c	FUNCTION_33
0x40010d2	            0x7407	                            je 0x40010db	      1604	wrstabs.c	FUNCTION_33	IF_2
0x40010d4	    0xc7421c010000	               mov dword [rdx + 0x1c], 1	      1605	wrstabs.c	FUNCTION_33	IF_2
0x40010db	        0x4883c418	                           add rsp, 0x18	      1608	wrstabs.c	FUNCTION_33
0x40010df	      0xb801000000	                              mov eax, 1	      1608	wrstabs.c	FUNCTION_33
0x40010e4	              0x5b	                                 pop rbx	      1608	wrstabs.c	FUNCTION_33
0x40010e5	              0x5d	                                 pop rbp	      1608	wrstabs.c	FUNCTION_33
0x40010e6	            0x415c	                                 pop r12	      1608	wrstabs.c	FUNCTION_33
0x40010e8	            0x415d	                                 pop r13	      1608	wrstabs.c	FUNCTION_33
0x40010ea	            0x415e	                                 pop r14	      1608	wrstabs.c	FUNCTION_33
0x40010ec	            0x415f	                                 pop r15	      1608	wrstabs.c	FUNCTION_33
0x40010ee	              0xc3	                                     ret	      1608	wrstabs.c	FUNCTION_33
0x40010ef	              0x90	                                     nop	      1608	wrstabs.c	FUNCTION_33
0x40010f0	      0xe800000000	                          call 0x40010f5	      1566	wrstabs.c	FUNCTION_33	SWITCH_1	CALL_4
0x40010f5	           0xf1f00	                         nop dword [rax]	      1566	wrstabs.c	FUNCTION_33	SWITCH_1	CALL_4
0x40010f8	      0x41c6450132	                mov byte [r13 + 1], 0x32	      1577	wrstabs.c	FUNCTION_33	SWITCH_1
0x40010fd	      0xe92dffffff	                           jmp 0x400102f	      1578	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001102	    0x660f1f440000	                    nop word [rax + rax]	      1578	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001108	      0x41c6450131	                mov byte [r13 + 1], 0x31	      1573	wrstabs.c	FUNCTION_33	SWITCH_1
0x400110d	      0xe91dffffff	                           jmp 0x400102f	      1574	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001112	    0x660f1f440000	                    nop word [rax + rax]	      1574	wrstabs.c	FUNCTION_33	SWITCH_1
0x4001118	    0x41be08000000	                             mov r14d, 8	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x400111e	            0x31db	                            xor ebx, ebx	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001120	      0xbe10000000	                           mov esi, 0x10	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001125	            0xeb8f	                           jmp 0x40010b6	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4001127	      0xb900000000	                              mov ecx, 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x400112c	      0xba32060000	                          mov edx, 0x632	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x4001131	      0xbe00000000	                              mov esi, 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x4001136	      0xbf00000000	                              mov edi, 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x400113b	      0xe800000000	        call sym.stab_function_parameter	      1586	wrstabs.c	FUNCTION_33	CALL_6
stab_offset_type	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,9:ELSE,0:SWITCH,0	60
0x4002200	            0x4156	                                push r14	      1111	wrstabs.c	FUNCTION_23
0x4002202	            0x4155	                                push r13	      1111	wrstabs.c	FUNCTION_23
0x4002204	    0x41be01000000	                             mov r14d, 1	      1111	wrstabs.c	FUNCTION_23
0x400220a	            0x4154	                                push r12	      1111	wrstabs.c	FUNCTION_23
0x400220c	              0x55	                                push rbp	      1111	wrstabs.c	FUNCTION_23
0x400220d	          0x4989fc	                            mov r12, rdi	      1111	wrstabs.c	FUNCTION_23
0x4002210	              0x53	                                push rbx	      1111	wrstabs.c	FUNCTION_23
0x4002211	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1116	wrstabs.c	FUNCTION_23
0x4002215	        0x488d5f60	                   lea rbx, [rdi + 0x60]	      1116	wrstabs.c	FUNCTION_23
0x4002219	          0x4889df	                            mov rdi, rbx	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x400221c	        0x448b681c	           mov r13d, dword [rax + 0x1c] 	      1116	wrstabs.c	FUNCTION_23
0x4002220	      0xe89be6ffff	           call sym.stab_pop_type.isra.1	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4002225	          0x4889c5	                            mov rbp, rax	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4002228	          0x4585ed	                         test r13d, r13d	      1119	wrstabs.c	FUNCTION_23
0x400222b	            0x7511	                           jne 0x400223e	      1119	wrstabs.c	FUNCTION_23
0x400222d	      0x498b442460	            mov rax, qword [r12 + 0x60] 	      1119	wrstabs.c	FUNCTION_23
0x4002232	          0x4531f6	                          xor r14d, r14d	      1119	wrstabs.c	FUNCTION_23
0x4002235	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1119	wrstabs.c	FUNCTION_23
0x4002238	            0x85c0	                           test eax, eax	      1119	wrstabs.c	FUNCTION_23
0x400223a	        0x410f95c6	                              setne r14b	      1119	wrstabs.c	FUNCTION_23
0x400223e	          0x4889df	                            mov rdi, rbx	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4002241	      0xe87ae6ffff	           call sym.stab_pop_type.isra.1	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4002246	          0x4889ef	                            mov rdi, rbp	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4002249	          0x4989c4	                            mov r12, rax	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x400224c	      0xe800000000	                          call 0x4002251	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4002251	          0x4c89e7	                            mov rdi, r12	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4002254	          0x4989c5	                            mov r13, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4002257	      0xe800000000	                          call 0x400225c	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x400225c	      0x498d7c0503	                lea rdi, [r13 + rax + 3]	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4002261	      0xe800000000	                          call 0x4002266	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4002266	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002269	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x400226c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002271	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002278	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400227d	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002280	          0x4989c5	                            mov r13, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4002283	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002285	      0xe800000000	                          call 0x400228a	        33	stdio2.h	FUNCTION_54	CALL_1
0x400228a	          0x4c89e7	                            mov rdi, r12	      1124	wrstabs.c	FUNCTION_23	CALL_6
0x400228d	      0xe800000000	                          call 0x4002292	      1124	wrstabs.c	FUNCTION_23	CALL_6
0x4002292	          0x4889ef	                            mov rdi, rbp	      1125	wrstabs.c	FUNCTION_23	CALL_7
0x4002295	      0xe800000000	                          call 0x400229a	      1125	wrstabs.c	FUNCTION_23	CALL_7
0x400229a	          0x4531c0	                            xor r8d, r8d	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x400229d	            0x31d2	                            xor edx, edx	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x400229f	          0x4489f1	                           mov ecx, r14d	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x40022a2	          0x4c89ee	                            mov rsi, r13	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x40022a5	          0x4889df	                            mov rdi, rbx	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x40022a8	      0xe853f6ffff	        call sym.stab_push_string.isra.5	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x40022ad	            0x85c0	                           test eax, eax	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x40022af	            0x740d	                            je 0x40022be	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x40022b1	          0x4c89ef	                            mov rdi, r13	      1130	wrstabs.c	FUNCTION_23	CALL_9
0x40022b4	      0xe800000000	                          call 0x40022b9	      1130	wrstabs.c	FUNCTION_23	CALL_9
0x40022b9	      0xb801000000	                              mov eax, 1	      1132	wrstabs.c	FUNCTION_23
0x40022be	              0x5b	                                 pop rbx	      1133	wrstabs.c	FUNCTION_23
0x40022bf	              0x5d	                                 pop rbp	      1133	wrstabs.c	FUNCTION_23
0x40022c0	            0x415c	                                 pop r12	      1133	wrstabs.c	FUNCTION_23
0x40022c2	            0x415d	                                 pop r13	      1133	wrstabs.c	FUNCTION_23
0x40022c4	            0x415e	                                 pop r14	      1133	wrstabs.c	FUNCTION_23
0x40022c6	              0xc3	                                     ret	      1133	wrstabs.c	FUNCTION_23
string_hash_newfunc	IF,3:FOR,0:WHILE,0:DO,0:functions,0:CALL,2:ELSE,0:SWITCH,0	29
0x4000120	              0x53	                                push rbx	       303	wrstabs.c	FUNCTION_1
0x4000121	          0x4889f3	                            mov rbx, rsi	       303	wrstabs.c	FUNCTION_1
0x4000124	        0x4883ec10	                           sub rsp, 0x10	       303	wrstabs.c	FUNCTION_1
0x4000128	          0x4885ff	                           test rdi, rdi	       308	wrstabs.c	FUNCTION_1	IF_1
0x400012b	            0x743b	                            je 0x4000168	       308	wrstabs.c	FUNCTION_1	IF_1
0x400012d	          0x4889de	                            mov rsi, rbx	       315	wrstabs.c	FUNCTION_1
0x4000130	      0xe800000000	                          call 0x4000135	       315	wrstabs.c	FUNCTION_1
0x4000135	          0x4885c0	                           test rax, rax	       318	wrstabs.c	FUNCTION_1	IF_3
0x4000138	            0x7426	                            je 0x4000160	       318	wrstabs.c	FUNCTION_1	IF_3
0x400013a	    0x48c740180000	               mov qword [rax + 0x18], 0	       321	wrstabs.c	FUNCTION_1	IF_3
0x4000142	    0x48c74020ffff	mov qword [rax + 0x20], 0xffffffffffffffff	       322	wrstabs.c	FUNCTION_1	IF_3
0x400014a	    0xc74028000000	               mov dword [rax + 0x28], 0	       323	wrstabs.c	FUNCTION_1	IF_3
0x4000151	        0x4883c410	                           add rsp, 0x10	       327	wrstabs.c	FUNCTION_1
0x4000155	              0x5b	                                 pop rbx	       327	wrstabs.c	FUNCTION_1
0x4000156	              0xc3	                                     ret	       327	wrstabs.c	FUNCTION_1
0x4000157	    0x660f1f840000	                    nop word [rax + rax]	       327	wrstabs.c	FUNCTION_1
0x4000160	            0x31c0	                            xor eax, eax	       327	wrstabs.c	FUNCTION_1
0x4000162	            0xebed	                           jmp 0x4000151	       327	wrstabs.c	FUNCTION_1
0x4000164	         0xf1f4000	                         nop dword [rax]	       327	wrstabs.c	FUNCTION_1
0x4000168	          0x4889df	                            mov rdi, rbx	       309	wrstabs.c	FUNCTION_1	IF_1
0x400016b	      0xbe30000000	                           mov esi, 0x30	       309	wrstabs.c	FUNCTION_1	IF_1
0x4000170	      0x4889542408	                mov qword [rsp + 8], rdx	       309	wrstabs.c	FUNCTION_1	IF_1
0x4000175	      0xe800000000	                          call 0x400017a	       309	wrstabs.c	FUNCTION_1	IF_1
0x400017a	          0x4889c7	                            mov rdi, rax	       309	wrstabs.c	FUNCTION_1	IF_1
0x400017d	            0x31c0	                            xor eax, eax	       312	wrstabs.c	FUNCTION_1	IF_2
0x400017f	      0x488b542408	                mov rdx, qword [rsp + 8]	       311	wrstabs.c	FUNCTION_1	IF_2
0x4000184	          0x4885ff	                           test rdi, rdi	       311	wrstabs.c	FUNCTION_1	IF_2
0x4000187	            0x74c8	                            je 0x4000151	       311	wrstabs.c	FUNCTION_1	IF_2
0x4000189	            0xeba2	                           jmp 0x400012d	       311	wrstabs.c	FUNCTION_1	IF_2
stab_complex_type	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	38
0x4002880	            0x4154	                                push r12	       731	wrstabs.c	FUNCTION_13
0x4002882	              0x55	                                push rbp	       731	wrstabs.c	FUNCTION_13
0x4002883	          0x4189f4	                           mov r12d, esi	       731	wrstabs.c	FUNCTION_13
0x4002886	              0x53	                                push rbx	       731	wrstabs.c	FUNCTION_13
0x4002887	          0x4889fb	                            mov rbx, rdi	       731	wrstabs.c	FUNCTION_13
0x400288a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400288f	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002894	        0x4883ec48	                           sub rsp, 0x48	       731	wrstabs.c	FUNCTION_13
0x4002898	        0x488b6f68	            mov rbp, qword [rdi + 0x68] 	       736	wrstabs.c	FUNCTION_13
0x400289c	    0x64488b042528	                mov rax, qword fs:[0x28]	       731	wrstabs.c	FUNCTION_13
0x40028a5	      0x4889442440	             mov qword [rsp + 0x40], rax	       731	wrstabs.c	FUNCTION_13
0x40028aa	            0x31c0	                            xor eax, eax	       731	wrstabs.c	FUNCTION_13
0x40028ac	        0x488d4501	                      lea rax, [rbp + 1]	       737	wrstabs.c	FUNCTION_13
0x40028b0	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028b3	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028b6	        0x48894768	             mov qword [rdi + 0x68], rax	       737	wrstabs.c	FUNCTION_13
0x40028ba	              0x56	                                push rsi	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028bd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028c2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028c7	      0xe800000000	                          call 0x40028cc	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028cc	      0x488d742410	                   lea rsi, [rsp + 0x10]	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028d1	        0x488d7b60	                   lea rdi, [rbx + 0x60]	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028d5	        0x478d0424	                    lea r8d, [r12 + r12]	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028d9	      0xb901000000	                              mov ecx, 1	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028de	          0x4889ea	                            mov rdx, rbp	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028e1	      0xe81af0ffff	        call sym.stab_push_string.isra.5	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028e6	              0x5a	                                 pop rdx	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028e7	              0x59	                                 pop rcx	       741	wrstabs.c	FUNCTION_13	CALL_1
0x40028e8	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       742	wrstabs.c	FUNCTION_13
0x40028ed	    0x644833142528	                xor rdx, qword fs:[0x28]	       742	wrstabs.c	FUNCTION_13
0x40028f6	            0x7509	                           jne 0x4002901	       742	wrstabs.c	FUNCTION_13
0x40028f8	        0x4883c440	                           add rsp, 0x40	       742	wrstabs.c	FUNCTION_13
0x40028fc	              0x5b	                                 pop rbx	       742	wrstabs.c	FUNCTION_13
0x40028fd	              0x5d	                                 pop rbp	       742	wrstabs.c	FUNCTION_13
0x40028fe	            0x415c	                                 pop r12	       742	wrstabs.c	FUNCTION_13
0x4002900	              0xc3	                                     ret	       742	wrstabs.c	FUNCTION_13
0x4002901	      0xe800000000	                          call 0x4002906	       742	wrstabs.c	FUNCTION_13
stab_array_type	IF,3:FOR,0:WHILE,0:DO,0:functions,0:CALL,10:ELSE,2:SWITCH,0	102
0x40023c0	            0x4157	                                push r15	      1017	wrstabs.c	FUNCTION_21
0x40023c2	            0x4156	                                push r14	      1017	wrstabs.c	FUNCTION_21
0x40023c4	          0x4189cf	                           mov r15d, ecx	      1017	wrstabs.c	FUNCTION_21
0x40023c7	            0x4155	                                push r13	      1017	wrstabs.c	FUNCTION_21
0x40023c9	            0x4154	                                push r12	      1017	wrstabs.c	FUNCTION_21
0x40023cb	        0x4c8d6760	                   lea r12, [rdi + 0x60]	      1017	wrstabs.c	FUNCTION_21
0x40023cf	              0x55	                                push rbp	      1017	wrstabs.c	FUNCTION_21
0x40023d0	              0x53	                                push rbx	      1017	wrstabs.c	FUNCTION_21
0x40023d1	          0x4889fd	                            mov rbp, rdi	      1017	wrstabs.c	FUNCTION_21
0x40023d4	        0x4883ec28	                           sub rsp, 0x28	      1017	wrstabs.c	FUNCTION_21
0x40023d8	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1025	wrstabs.c	FUNCTION_21
0x40023dc	          0x4c89e7	                            mov rdi, r12	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x40023df	      0x4889742408	                mov qword [rsp + 8], rsi	      1017	wrstabs.c	FUNCTION_21
0x40023e4	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1017	wrstabs.c	FUNCTION_21
0x40023e9	          0x8b581c	            mov ebx, dword [rax + 0x1c] 	      1025	wrstabs.c	FUNCTION_21
0x40023ec	      0xe8cfe4ffff	           call sym.stab_pop_type.isra.1	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x40023f1	          0x4989c6	                            mov r14, rax	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x40023f4	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x40023f8	            0x85db	                           test ebx, ebx	      1028	wrstabs.c	FUNCTION_21
0x40023fa	     0xf84e0000000	                            je 0x40024e0	      1028	wrstabs.c	FUNCTION_21
0x4002400	    0xc74424180100	               mov dword [rsp + 0x18], 1	      1028	wrstabs.c	FUNCTION_21
0x4002408	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1029	wrstabs.c	FUNCTION_21
0x400240b	          0x4c89e7	                            mov rdi, r12	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x400240e	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1029	wrstabs.c	FUNCTION_21
0x4002412	      0xe8a9e4ffff	           call sym.stab_pop_type.isra.1	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x4002417	          0x4c89f7	                            mov rdi, r14	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400241a	          0x4989c5	                            mov r13, rax	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x400241d	      0xe800000000	                          call 0x4002422	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4002422	          0x4c89ef	                            mov rdi, r13	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4002425	          0x4889c3	                            mov rbx, rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4002428	      0xe800000000	                          call 0x400242d	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400242d	      0x488d7c0364	            lea rdi, [rbx + rax + 0x64] 	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4002432	      0xe800000000	                          call 0x4002437	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4002437	          0x4585ff	                         test r15d, r15d	      1034	wrstabs.c	FUNCTION_21	IF_1
0x400243a	          0x4889c3	                            mov rbx, rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x400243d	     0xf85b5000000	                           jne 0x40024f8	      1034	wrstabs.c	FUNCTION_21	IF_1
0x4002443	          0xc60000	                       mov byte [rax], 0	      1037	wrstabs.c	FUNCTION_21	IF_1
0x4002446	          0x4531ff	                          xor r15d, r15d	      1036	wrstabs.c	FUNCTION_21	IF_1
0x4002449	          0x4889df	                            mov rdi, rbx	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x400244c	      0xe800000000	                          call 0x4002451	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4002451	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002453	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002458	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400245c	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x400245f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002466	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400246b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002470	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002472	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002473	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002478	      0xe800000000	                          call 0x400247d	        33	stdio2.h	FUNCTION_54	CALL_1
0x400247d	          0x4c89f7	                            mov rdi, r14	      1051	wrstabs.c	FUNCTION_21	CALL_7
0x4002480	      0xe800000000	                          call 0x4002485	      1051	wrstabs.c	FUNCTION_21	CALL_7
0x4002485	          0x4c89ef	                            mov rdi, r13	      1052	wrstabs.c	FUNCTION_21	CALL_8
0x4002488	      0xe800000000	                          call 0x400248d	      1052	wrstabs.c	FUNCTION_21	CALL_8
0x400248d	              0x58	                                 pop rax	      1054	wrstabs.c	FUNCTION_21	IF_2
0x400248e	              0x5a	                                 pop rdx	      1054	wrstabs.c	FUNCTION_21	IF_2
0x400248f	      0x488b542408	                mov rdx, qword [rsp + 8]	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4002494	          0x4531c0	                            xor r8d, r8d	      1055	wrstabs.c	FUNCTION_21	IF_2
0x4002497	          0x4839ea	                            cmp rdx, rbp	      1054	wrstabs.c	FUNCTION_21	IF_2
0x400249a	            0x7f0d	                            jg 0x40024a9	      1054	wrstabs.c	FUNCTION_21	IF_2
0x400249c	          0x4829d5	                            sub rbp, rdx	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x400249f	        0x4c8d4501	                       lea r8, [rbp + 1]	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x40024a3	    0x440faf44241c	            imul r8d, dword [rsp + 0x1c]	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x40024a9	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x40024ad	          0x4c89fa	                            mov rdx, r15	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x40024b0	          0x4889de	                            mov rsi, rbx	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x40024b3	          0x4c89e7	                            mov rdi, r12	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x40024b6	      0xe845f4ffff	        call sym.stab_push_string.isra.5	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x40024bb	            0x85c0	                           test eax, eax	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x40024bd	            0x740d	                            je 0x40024cc	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x40024bf	          0x4889df	                            mov rdi, rbx	      1061	wrstabs.c	FUNCTION_21	CALL_10
0x40024c2	      0xe800000000	                          call 0x40024c7	      1061	wrstabs.c	FUNCTION_21	CALL_10
0x40024c7	      0xb801000000	                              mov eax, 1	      1063	wrstabs.c	FUNCTION_21
0x40024cc	        0x4883c428	                           add rsp, 0x28	      1064	wrstabs.c	FUNCTION_21
0x40024d0	              0x5b	                                 pop rbx	      1064	wrstabs.c	FUNCTION_21
0x40024d1	              0x5d	                                 pop rbp	      1064	wrstabs.c	FUNCTION_21
0x40024d2	            0x415c	                                 pop r12	      1064	wrstabs.c	FUNCTION_21
0x40024d4	            0x415d	                                 pop r13	      1064	wrstabs.c	FUNCTION_21
0x40024d6	            0x415e	                                 pop r14	      1064	wrstabs.c	FUNCTION_21
0x40024d8	            0x415f	                                 pop r15	      1064	wrstabs.c	FUNCTION_21
0x40024da	              0xc3	                                     ret	      1064	wrstabs.c	FUNCTION_21
0x40024db	       0xf1f440000	                   nop dword [rax + rax]	      1064	wrstabs.c	FUNCTION_21
0x40024e0	          0x8b701c	            mov esi, dword [rax + 0x1c] 	      1028	wrstabs.c	FUNCTION_21
0x40024e3	            0x31c9	                            xor ecx, ecx	      1028	wrstabs.c	FUNCTION_21
0x40024e5	            0x85f6	                           test esi, esi	      1028	wrstabs.c	FUNCTION_21
0x40024e7	           0xf95c1	                                setne cl	      1028	wrstabs.c	FUNCTION_21
0x40024ea	        0x894c2418	             mov dword [rsp + 0x18], ecx	      1028	wrstabs.c	FUNCTION_21
0x40024ee	      0xe915ffffff	                           jmp 0x4002408	      1028	wrstabs.c	FUNCTION_21
0x40024f3	       0xf1f440000	                   nop dword [rax + rax]	      1028	wrstabs.c	FUNCTION_21
0x40024f8	        0x4c8b7d68	            mov r15, qword [rbp + 0x68] 	      1043	wrstabs.c	FUNCTION_21	ELSE_1
0x40024fc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002501	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002508	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400250d	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002510	        0x498d4701	                      lea rax, [r15 + 1]	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x4002514	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002517	        0x48894568	            mov qword [rbp + 0x68], rax 	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x400251b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400251d	      0xe800000000	                          call 0x4002522	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002522	    0xc74424180100	               mov dword [rsp + 0x18], 1	      1045	wrstabs.c	FUNCTION_21	ELSE_1
0x400252a	      0xe91affffff	                           jmp 0x4002449	      1045	wrstabs.c	FUNCTION_21	ELSE_1
stab_end_struct_type	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,9:ELSE,0:SWITCH,0	65
0x4001a80	            0x4157	                                push r15	      1412	wrstabs.c	FUNCTION_30
0x4001a82	            0x4156	                                push r14	      1412	wrstabs.c	FUNCTION_30
0x4001a84	            0x4155	                                push r13	      1412	wrstabs.c	FUNCTION_30
0x4001a86	            0x4154	                                push r12	      1412	wrstabs.c	FUNCTION_30
0x4001a88	              0x55	                                push rbp	      1412	wrstabs.c	FUNCTION_30
0x4001a89	              0x53	                                push rbx	      1412	wrstabs.c	FUNCTION_30
0x4001a8a	        0x4883ec18	                           sub rsp, 0x18	      1412	wrstabs.c	FUNCTION_30
0x4001a8e	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001a92	          0x4885c0	                           test rax, rax	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001a95	     0xf84b4000000	                            je 0x4001b4f	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001a9b	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001a9f	          0x4885db	                           test rbx, rbx	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001aa2	     0xf84a7000000	                            je 0x4001b4f	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001aa8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1422	wrstabs.c	FUNCTION_30
0x4001aac	        0x4c8d6760	                   lea r12, [rdi + 0x60]	      1422	wrstabs.c	FUNCTION_30
0x4001ab0	        0x448b681c	           mov r13d, dword [rax + 0x1c] 	      1421	wrstabs.c	FUNCTION_30
0x4001ab4	        0x448b7018	           mov r14d, dword [rax + 0x18] 	      1423	wrstabs.c	FUNCTION_30
0x4001ab8	          0x4c89e7	                            mov rdi, r12	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x4001abb	      0x4889542408	                mov qword [rsp + 8], rdx	      1422	wrstabs.c	FUNCTION_30
0x4001ac0	      0xe8fbedffff	           call sym.stab_pop_type.isra.1	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x4001ac5	          0x4889c7	                            mov rdi, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001ac8	          0x4989c7	                            mov r15, rax	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x4001acb	      0xe800000000	                          call 0x4001ad0	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001ad0	          0x4889df	                            mov rdi, rbx	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001ad3	          0x4889c5	                            mov rbp, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001ad6	      0xe800000000	                          call 0x4001adb	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001adb	      0x488d7c0502	                lea rdi, [rbp + rax + 2]	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001ae0	      0xe800000000	                          call 0x4001ae5	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001ae5	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ae8	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001aeb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001af0	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001af7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001afc	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001aff	          0x4889c5	                            mov rbp, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4001b02	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b04	      0xe800000000	                          call 0x4001b09	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b09	          0x4c89ff	                            mov rdi, r15	      1429	wrstabs.c	FUNCTION_30	CALL_6
0x4001b0c	      0xe800000000	                          call 0x4001b11	      1429	wrstabs.c	FUNCTION_30	CALL_6
0x4001b11	          0x4889df	                            mov rdi, rbx	      1430	wrstabs.c	FUNCTION_30	CALL_7
0x4001b14	      0xe800000000	                          call 0x4001b19	      1430	wrstabs.c	FUNCTION_30	CALL_7
0x4001b19	      0x488b542408	                mov rdx, qword [rsp + 8]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b1e	          0x4589f0	                           mov r8d, r14d	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b21	          0x4489e9	                           mov ecx, r13d	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b24	          0x4889ee	                            mov rsi, rbp	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b27	          0x4c89e7	                            mov rdi, r12	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b2a	      0xe8d1fdffff	        call sym.stab_push_string.isra.5	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b2f	            0x85c0	                           test eax, eax	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b31	            0x740d	                            je 0x4001b40	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4001b33	          0x4889ef	                            mov rdi, rbp	      1435	wrstabs.c	FUNCTION_30	CALL_9
0x4001b36	      0xe800000000	                          call 0x4001b3b	      1435	wrstabs.c	FUNCTION_30	CALL_9
0x4001b3b	      0xb801000000	                              mov eax, 1	      1437	wrstabs.c	FUNCTION_30
0x4001b40	        0x4883c418	                           add rsp, 0x18	      1438	wrstabs.c	FUNCTION_30
0x4001b44	              0x5b	                                 pop rbx	      1438	wrstabs.c	FUNCTION_30
0x4001b45	              0x5d	                                 pop rbp	      1438	wrstabs.c	FUNCTION_30
0x4001b46	            0x415c	                                 pop r12	      1438	wrstabs.c	FUNCTION_30
0x4001b48	            0x415d	                                 pop r13	      1438	wrstabs.c	FUNCTION_30
0x4001b4a	            0x415e	                                 pop r14	      1438	wrstabs.c	FUNCTION_30
0x4001b4c	            0x415f	                                 pop r15	      1438	wrstabs.c	FUNCTION_30
0x4001b4e	              0xc3	                                     ret	      1438	wrstabs.c	FUNCTION_30
0x4001b4f	      0xb900000000	                              mov ecx, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001b54	      0xba8b050000	                          mov edx, 0x58b	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001b59	      0xbe00000000	                              mov esi, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001b5e	      0xbf00000000	                              mov edi, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4001b63	      0xe800000000	                          call 0x4001b68	      1419	wrstabs.c	FUNCTION_30	CALL_1
stab_class_method_var	IF,8:FOR,0:WHILE,0:DO,0:functions,0:CALL,13:ELSE,5:SWITCH,1	217
0x4000bf0	            0x4157	                                push r15	      1648	wrstabs.c	FUNCTION_35
0x4000bf2	            0x4156	                                push r14	      1648	wrstabs.c	FUNCTION_35
0x4000bf4	        0x4c8d7760	                   lea r14, [rdi + 0x60]	      1648	wrstabs.c	FUNCTION_35
0x4000bf8	            0x4155	                                push r13	      1648	wrstabs.c	FUNCTION_35
0x4000bfa	            0x4154	                                push r12	      1648	wrstabs.c	FUNCTION_35
0x4000bfc	          0x4189d5	                           mov r13d, edx	      1648	wrstabs.c	FUNCTION_35
0x4000bff	              0x55	                                push rbp	      1648	wrstabs.c	FUNCTION_35
0x4000c00	              0x53	                                push rbx	      1648	wrstabs.c	FUNCTION_35
0x4000c01	          0x4889fb	                            mov rbx, rdi	      1648	wrstabs.c	FUNCTION_35
0x4000c04	          0x4531ff	                          xor r15d, r15d	      1648	wrstabs.c	FUNCTION_35
0x4000c07	        0x4883ec38	                           sub rsp, 0x38	      1648	wrstabs.c	FUNCTION_35
0x4000c0b	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1654	wrstabs.c	FUNCTION_35
0x4000c0f	          0x4c89f7	                            mov rdi, r14	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4000c12	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1648	wrstabs.c	FUNCTION_35
0x4000c17	      0x4889742408	                mov qword [rsp + 8], rsi	      1648	wrstabs.c	FUNCTION_35
0x4000c1c	        0x894c2410	             mov dword [rsp + 0x10], ecx	      1648	wrstabs.c	FUNCTION_35
0x4000c20	      0x4489442418	             mov dword [rsp + 0x18], r8d	      1648	wrstabs.c	FUNCTION_35
0x4000c25	        0x448b601c	           mov r12d, dword [rax + 0x1c] 	      1654	wrstabs.c	FUNCTION_35
0x4000c29	      0xe892fcffff	           call sym.stab_pop_type.isra.1	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4000c2e	      0x448b4c2478	            mov r9d, dword [rsp + 0x78] 	      1657	wrstabs.c	FUNCTION_35	IF_1
0x4000c33	          0x4889c5	                            mov rbp, rax	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4000c36	          0x4585c9	                           test r9d, r9d	      1657	wrstabs.c	FUNCTION_35	IF_1
0x4000c39	            0x7426	                            je 0x4000c61	      1657	wrstabs.c	FUNCTION_35	IF_1
0x4000c3b	          0x4585e4	                         test r12d, r12d	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000c3e	     0xf85bc010000	                           jne 0x4000e00	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000c44	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000c48	          0x4531e4	                          xor r12d, r12d	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000c4b	        0x448b401c	            mov r8d, dword [rax + 0x1c] 	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000c4f	          0x4585c0	                           test r8d, r8d	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000c52	        0x410f95c4	                              setne r12b	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000c56	          0x4c89f7	                            mov rdi, r14	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x4000c59	      0xe862fcffff	           call sym.stab_pop_type.isra.1	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x4000c5e	          0x4989c7	                            mov r15, rax	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x4000c61	        0x4c8b7360	            mov r14, qword [rbx + 0x60] 	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000c65	          0x4d85f6	                           test r14, r14	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000c68	     0xf84ea020000	                            je 0x4000f58	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000c6e	        0x4d8b4630	              mov r8, qword [r14 + 0x30]	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000c72	          0x4d85c0	                             test r8, r8	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000c75	     0xf84dd020000	                            je 0x4000f58	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000c7b	        0x4183fd01	                             cmp r13d, 1	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000c7f	     0xf840b020000	                            je 0x4000e90	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000c85	     0xf8285010000	                            jb 0x4000e10	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000c8b	        0x4183fd02	                             cmp r13d, 2	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000c8f	     0xf85f3010000	                           jne 0x4000e88	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000c95	    0xc744242c3000	           mov dword [rsp + 0x2c], 0x30 	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000c9d	      0x837c242001	               cmp dword [rsp + 0x20], 1	      1685	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4000ca2	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      1683	wrstabs.c	FUNCTION_35	IF_2
0x4000ca6	          0x4519ed	                          sbb r13d, r13d	      1685	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4000ca9	        0x4183e5fe	                    and r13d, 0xfffffffe	      1685	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4000cad	            0x85ff	                           test edi, edi	      1683	wrstabs.c	FUNCTION_35	IF_2
0x4000caf	     0xf846b010000	                            je 0x4000e20	      1683	wrstabs.c	FUNCTION_35	IF_2
0x4000cb5	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000cb9	        0x4183c544	                          add r13d, 0x44	      1685	wrstabs.c	FUNCTION_35	IF_2	IF_3
0x4000cbd	            0x85f6	                           test esi, esi	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000cbf	     0xf856b010000	                           jne 0x4000e30	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000cc5	        0x8b4c2478	            mov ecx, dword [rsp + 0x78] 	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4000cc9	            0x85c9	                           test ecx, ecx	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4000ccb	     0xf84cf010000	                            je 0x4000ea0	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4000cd1	          0x4c89c7	                             mov rdi, r8	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000cd4	      0x4c89442420	              mov qword [rsp + 0x20], r8	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000cd9	      0xe800000000	                          call 0x4000cde	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000cde	          0x4889ef	                            mov rdi, rbp	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000ce1	      0x4889442410	             mov qword [rsp + 0x10], rax	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000ce6	      0xe800000000	                          call 0x4000ceb	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000ceb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000cf0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000cf5	      0xe800000000	                          call 0x4000cfa	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000cfa	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000cff	      0x4803742410	             add rsi, qword [rsp + 0x10]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000d04	    0x41b92a000000	                           mov r9d, 0x2a	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000d0a	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000d0f	          0x4801c6	                            add rsi, rax	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000d12	          0x4c89ff	                            mov rdi, r15	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000d15	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000d1a	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000d1f	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000d24	      0xe800000000	                          call 0x4000d29	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000d29	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000d2e	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000d33	      0x488d740628	            lea rsi, [rsi + rax + 0x28] 	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000d38	          0x4c89c7	                             mov rdi, r8	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000d3b	      0xe800000000	                          call 0x4000d40	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000d40	        0x49894630	             mov qword [r14 + 0x30], rax	      1705	wrstabs.c	FUNCTION_35
0x4000d44	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000d48	        0x4c8b7030	            mov r14, qword [rax + 0x30] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000d4c	          0x4c89f7	                            mov rdi, r14	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000d4f	      0xe800000000	                          call 0x4000d54	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000d54	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d58	        0x498d3c06	                    lea rdi, [r14 + rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d5c	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d5f	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d64	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d69	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d70	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d75	            0x4151	                                 push r9	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d77	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d79	        0x8b442444	            mov eax, dword [rsp + 0x44] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d7d	              0x50	                                push rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d7e	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d83	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d85	      0xe800000000	                          call 0x4000d8a	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d8a	        0x4883c420	                           add rsp, 0x20	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000d8e	          0x4889ef	                            mov rdi, rbp	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000d91	      0xe800000000	                          call 0x4000d96	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000d96	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      1717	wrstabs.c	FUNCTION_35	IF_7
0x4000d9a	            0x85c0	                           test eax, eax	      1717	wrstabs.c	FUNCTION_35	IF_7
0x4000d9c	            0x743d	                            je 0x4000ddb	      1717	wrstabs.c	FUNCTION_35	IF_7
0x4000d9e	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000da2	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000da6	          0x4889ef	                            mov rdi, rbp	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000da9	      0xe800000000	                          call 0x4000dae	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000dae	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000db3	      0x488d7c0500	                    lea rdi, [rbp + rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000db8	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000dbb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000dc0	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000dc7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000dcc	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000dce	      0xe800000000	                          call 0x4000dd3	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000dd3	          0x4c89ff	                            mov rdi, r15	      1721	wrstabs.c	FUNCTION_35	IF_7	CALL_13
0x4000dd6	      0xe800000000	                          call 0x4000ddb	      1721	wrstabs.c	FUNCTION_35	IF_7	CALL_13
0x4000ddb	          0x4585e4	                         test r12d, r12d	      1724	wrstabs.c	FUNCTION_35	IF_8
0x4000dde	            0x740b	                            je 0x4000deb	      1724	wrstabs.c	FUNCTION_35	IF_8
0x4000de0	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1725	wrstabs.c	FUNCTION_35	IF_8
0x4000de4	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1725	wrstabs.c	FUNCTION_35	IF_8
0x4000deb	        0x4883c438	                           add rsp, 0x38	      1728	wrstabs.c	FUNCTION_35
0x4000def	      0xb801000000	                              mov eax, 1	      1728	wrstabs.c	FUNCTION_35
0x4000df4	              0x5b	                                 pop rbx	      1728	wrstabs.c	FUNCTION_35
0x4000df5	              0x5d	                                 pop rbp	      1728	wrstabs.c	FUNCTION_35
0x4000df6	            0x415c	                                 pop r12	      1728	wrstabs.c	FUNCTION_35
0x4000df8	            0x415d	                                 pop r13	      1728	wrstabs.c	FUNCTION_35
0x4000dfa	            0x415e	                                 pop r14	      1728	wrstabs.c	FUNCTION_35
0x4000dfc	            0x415f	                                 pop r15	      1728	wrstabs.c	FUNCTION_35
0x4000dfe	              0xc3	                                     ret	      1728	wrstabs.c	FUNCTION_35
0x4000dff	              0x90	                                     nop	      1728	wrstabs.c	FUNCTION_35
0x4000e00	    0x41bc01000000	                             mov r12d, 1	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000e06	      0xe94bfeffff	                           jmp 0x4000c56	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000e0b	       0xf1f440000	                   nop dword [rax + rax]	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000e10	    0xc744242c3200	           mov dword [rsp + 0x2c], 0x32 	      1680	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000e18	      0xe980feffff	                           jmp 0x4000c9d	      1680	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000e1d	           0xf1f00	                         nop dword [rax]	      1680	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000e20	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000e24	        0x4183c543	                          add r13d, 0x43	      1692	wrstabs.c	FUNCTION_35	ELSE_2	IF_4
0x4000e28	            0x85f6	                           test esi, esi	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000e2a	     0xf8495feffff	                            je 0x4000cc5	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000e30	          0x4c89c7	                             mov rdi, r8	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000e33	      0x4c89442420	              mov qword [rsp + 0x20], r8	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000e38	      0xe800000000	                          call 0x4000e3d	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000e3d	          0x4889ef	                            mov rdi, rbp	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000e40	      0x4889442410	             mov qword [rsp + 0x10], rax	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000e45	      0xe800000000	                          call 0x4000e4a	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000e4a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000e4f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000e54	      0xe800000000	                          call 0x4000e59	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000e59	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000e5e	      0x4803742418	             add rsi, qword [rsp + 0x18]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000e63	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000e67	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000e6c	          0x4801c6	                            add rsi, rax	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000e6f	            0x85d2	                           test edx, edx	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000e71	     0xf84d9000000	                            je 0x4000f50	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000e77	    0x41b93f000000	                           mov r9d, 0x3f	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000e7d	      0xe990feffff	                           jmp 0x4000d12	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000e82	    0x660f1f440000	                    nop word [rax + rax]	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000e88	      0xe800000000	                          call 0x4000e8d	      1668	wrstabs.c	FUNCTION_35	SWITCH_1	CALL_4
0x4000e8d	           0xf1f00	                         nop dword [rax]	      1668	wrstabs.c	FUNCTION_35	SWITCH_1	CALL_4
0x4000e90	    0xc744242c3100	           mov dword [rsp + 0x2c], 0x31 	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000e98	      0xe900feffff	                           jmp 0x4000c9d	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000e9d	           0xf1f00	                         nop dword [rax]	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x4000ea0	          0x4c89c7	                             mov rdi, r8	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000ea3	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000ea8	      0xe800000000	                          call 0x4000ead	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000ead	          0x4889ef	                            mov rdi, rbp	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000eb0	      0x4889442410	             mov qword [rsp + 0x10], rax	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000eb5	      0xe800000000	                          call 0x4000eba	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000eba	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000ebf	          0x4989c7	                            mov r15, rax	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000ec2	      0xe800000000	                          call 0x4000ec7	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000ec7	      0x4c037c2410	             add r15, qword [rsp + 0x10]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000ecc	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000ed1	        0x498d3407	                    lea rsi, [r15 + rax]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000ed5	    0x41bf2e000000	                          mov r15d, 0x2e	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000edb	        0x4883c628	                           add rsi, 0x28	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000edf	          0x4c89c7	                             mov rdi, r8	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000ee2	      0xe800000000	                          call 0x4000ee7	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000ee7	        0x49894630	             mov qword [r14 + 0x30], rax	      1705	wrstabs.c	FUNCTION_35
0x4000eeb	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000eef	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000ef3	          0x4889cf	                            mov rdi, rcx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000ef6	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000efb	      0xe800000000	                          call 0x4000f00	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000f00	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f05	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f09	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f0c	            0x4157	                                push r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f0e	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f10	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f17	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f1c	        0x488d3c01	                    lea rdi, [rcx + rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f20	        0x8b442444	            mov eax, dword [rsp + 0x44] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f24	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f29	              0x50	                                push rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f2a	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f2f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f31	      0xe800000000	                          call 0x4000f36	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f36	        0x4883c420	                           add rsp, 0x20	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000f3a	          0x4889ef	                            mov rdi, rbp	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000f3d	      0xe800000000	                          call 0x4000f42	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000f42	      0xe994feffff	                           jmp 0x4000ddb	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000f47	    0x660f1f840000	                    nop word [rax + rax]	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000f50	    0x41bf3f000000	                          mov r15d, 0x3f	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000f56	            0xeb83	                           jmp 0x4000edb	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000f58	      0xb900000000	                              mov ecx, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000f5d	      0xba7f060000	                          mov edx, 0x67f	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000f62	      0xbe00000000	                              mov esi, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000f67	      0xbf00000000	                              mov edi, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x4000f6c	      0xe800000000	                          call 0x4000f71	      1663	wrstabs.c	FUNCTION_35	CALL_3
stab_push_defined_type	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	31
0x4001990	            0x4154	                                push r12	       423	wrstabs.c	FUNCTION_4
0x4001992	              0x55	                                push rbp	       423	wrstabs.c	FUNCTION_4
0x4001993	          0x4989f0	                             mov r8, rsi	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001996	              0x53	                                push rbx	       423	wrstabs.c	FUNCTION_4
0x4001997	          0x4889f5	                            mov rbp, rsi	       423	wrstabs.c	FUNCTION_4
0x400199a	          0x4889fb	                            mov rbx, rdi	       423	wrstabs.c	FUNCTION_4
0x400199d	          0x4189d4	                           mov r12d, edx	       423	wrstabs.c	FUNCTION_4
0x40019a0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40019a5	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_54	CALL_1
0x40019aa	        0x4883ec20	                           sub rsp, 0x20	       423	wrstabs.c	FUNCTION_4
0x40019ae	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40019b3	    0x64488b042528	                mov rax, qword fs:[0x28]	       423	wrstabs.c	FUNCTION_4
0x40019bc	      0x4889442418	             mov qword [rsp + 0x18], rax	       423	wrstabs.c	FUNCTION_4
0x40019c1	            0x31c0	                            xor eax, eax	       423	wrstabs.c	FUNCTION_4
0x40019c3	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40019c6	      0xe800000000	                          call 0x40019cb	        33	stdio2.h	FUNCTION_54	CALL_1
0x40019cb	        0x488d7b60	                   lea rdi, [rbx + 0x60]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40019cf	            0x31c9	                            xor ecx, ecx	       427	wrstabs.c	FUNCTION_4	CALL_1
0x40019d1	          0x4589e0	                           mov r8d, r12d	       427	wrstabs.c	FUNCTION_4	CALL_1
0x40019d4	          0x4889ea	                            mov rdx, rbp	       427	wrstabs.c	FUNCTION_4	CALL_1
0x40019d7	          0x4889e6	                            mov rsi, rsp	       427	wrstabs.c	FUNCTION_4	CALL_1
0x40019da	      0xe821ffffff	        call sym.stab_push_string.isra.5	       427	wrstabs.c	FUNCTION_4	CALL_1
0x40019df	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       428	wrstabs.c	FUNCTION_4
0x40019e4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       428	wrstabs.c	FUNCTION_4
0x40019ed	            0x7509	                           jne 0x40019f8	       428	wrstabs.c	FUNCTION_4
0x40019ef	        0x4883c420	                           add rsp, 0x20	       428	wrstabs.c	FUNCTION_4
0x40019f3	              0x5b	                                 pop rbx	       428	wrstabs.c	FUNCTION_4
0x40019f4	              0x5d	                                 pop rbp	       428	wrstabs.c	FUNCTION_4
0x40019f5	            0x415c	                                 pop r12	       428	wrstabs.c	FUNCTION_4
0x40019f7	              0xc3	                                     ret	       428	wrstabs.c	FUNCTION_4
0x40019f8	      0xe800000000	                          call 0x40019fd	       428	wrstabs.c	FUNCTION_4
stab_class_start_method	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,7:ELSE,1:SWITCH,0	55
0x4000050	            0x4155	                                push r13	      1614	wrstabs.c	FUNCTION_34
0x4000052	            0x4154	                                push r12	      1614	wrstabs.c	FUNCTION_34
0x4000054	              0x55	                                push rbp	      1614	wrstabs.c	FUNCTION_34
0x4000055	              0x53	                                push rbx	      1614	wrstabs.c	FUNCTION_34
0x4000056	        0x4883ec08	                              sub rsp, 8	      1614	wrstabs.c	FUNCTION_34
0x400005a	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x400005e	          0x4885c0	                           test rax, rax	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000061	     0xf849a000000	                            je 0x4000101	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000067	      0x4883782000	               cmp qword [rax + 0x20], 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x400006c	     0xf848f000000	                            je 0x4000101	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000072	        0x488b5830	            mov rbx, qword [rax + 0x30] 	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4000076	          0x4889fd	                            mov rbp, rdi	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4000079	          0x4989f4	                            mov r12, rsi	      1620	wrstabs.c	FUNCTION_34	IF_1
0x400007c	          0x4885db	                           test rbx, rbx	      1620	wrstabs.c	FUNCTION_34	IF_1
0x400007f	            0x7467	                            je 0x40000e8	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4000081	          0x4889df	                            mov rdi, rbx	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4000084	      0xe800000000	                          call 0x4000089	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4000089	          0x4c89e7	                            mov rdi, r12	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x400008c	          0x4989c5	                            mov r13, rax	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x400008f	      0xe800000000	                          call 0x4000094	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x4000094	      0x498d740504	                lea rsi, [r13 + rax + 4]	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x4000099	          0x4889df	                            mov rdi, rbx	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x400009c	      0xe800000000	                          call 0x40000a1	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x40000a1	          0x4889c3	                            mov rbx, rax	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x40000a4	          0x4889df	                            mov rdi, rbx	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40000a7	      0xe800000000	                          call 0x40000ac	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40000ac	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40000b0	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40000b3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40000b8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40000bf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40000c4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40000c6	      0xe800000000	                          call 0x40000cb	        33	stdio2.h	FUNCTION_54	CALL_1
0x40000cb	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1635	wrstabs.c	FUNCTION_34
0x40000cf	        0x48895830	             mov qword [rax + 0x30], rbx	      1635	wrstabs.c	FUNCTION_34
0x40000d3	        0x4883c408	                              add rsp, 8	      1638	wrstabs.c	FUNCTION_34
0x40000d7	      0xb801000000	                              mov eax, 1	      1638	wrstabs.c	FUNCTION_34
0x40000dc	              0x5b	                                 pop rbx	      1638	wrstabs.c	FUNCTION_34
0x40000dd	              0x5d	                                 pop rbp	      1638	wrstabs.c	FUNCTION_34
0x40000de	            0x415c	                                 pop r12	      1638	wrstabs.c	FUNCTION_34
0x40000e0	            0x415d	                                 pop r13	      1638	wrstabs.c	FUNCTION_34
0x40000e2	              0xc3	                                     ret	      1638	wrstabs.c	FUNCTION_34
0x40000e3	       0xf1f440000	                   nop dword [rax + rax]	      1638	wrstabs.c	FUNCTION_34
0x40000e8	          0x4889f7	                            mov rdi, rsi	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x40000eb	      0xe800000000	                          call 0x40000f0	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x40000f0	        0x488d7803	                      lea rdi, [rax + 3]	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x40000f4	      0xe800000000	                          call 0x40000f9	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x40000f9	          0x4889c3	                            mov rbx, rax	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x40000fc	          0xc60000	                       mov byte [rax], 0	      1623	wrstabs.c	FUNCTION_34	IF_1
0x40000ff	            0xeba3	                           jmp 0x40000a4	      1623	wrstabs.c	FUNCTION_34	IF_1
0x4000101	      0xb900000000	                              mov ecx, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000106	      0xba52060000	                          mov edx, 0x652	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x400010b	      0xbe00000000	                              mov esi, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000110	      0xbf00000000	                              mov edi, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000115	      0xe800000000	                          call 0x400011a	      1618	wrstabs.c	FUNCTION_34	CALL_1
stab_modify_type	IF,7:FOR,0:WHILE,1:DO,0:functions,0:CALL,18:ELSE,2:SWITCH,0	174
0x4001e10	            0x4157	                                push r15	       848	wrstabs.c	FUNCTION_16
0x4001e12	            0x4156	                                push r14	       848	wrstabs.c	FUNCTION_16
0x4001e14	            0x4155	                                push r13	       848	wrstabs.c	FUNCTION_16
0x4001e16	            0x4154	                                push r12	       848	wrstabs.c	FUNCTION_16
0x4001e18	              0x55	                                push rbp	       848	wrstabs.c	FUNCTION_16
0x4001e19	              0x53	                                push rbx	       848	wrstabs.c	FUNCTION_16
0x4001e1a	        0x4883ec18	                           sub rsp, 0x18	       848	wrstabs.c	FUNCTION_16
0x4001e1e	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001e22	        0x89742404	                mov dword [rsp + 4], esi	       848	wrstabs.c	FUNCTION_16
0x4001e26	          0x4885c0	                           test rax, rax	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001e29	     0xf842f020000	                            je 0x400205e	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001e2f	        0x488b6810	            mov rbp, qword [rax + 0x10] 	       854	wrstabs.c	FUNCTION_16
0x4001e33	          0x4989fc	                            mov r12, rdi	       854	wrstabs.c	FUNCTION_16
0x4001e36	          0x4189d6	                           mov r14d, edx	       854	wrstabs.c	FUNCTION_16
0x4001e39	          0x4885ed	                           test rbp, rbp	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001e3c	     0xf8e36010000	                           jle 0x4001f78	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001e42	          0x4885c9	                           test rcx, rcx	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001e45	          0x4989cd	                            mov r13, rcx	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001e48	     0xf842a010000	                            je 0x4001f78	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001e4e	          0x498b18	                     mov rbx, qword [r8]	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e51	          0x4d89c7	                             mov r15, r8	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e54	          0x4839eb	                            cmp rbx, rbp	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e57	     0xf86c3000000	                           jbe 0x4001f20	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e5d	        0x498b4500	                    mov rax, qword [r13]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001e61	        0x488b1ce8	            mov rbx, qword [rax + rbp*8]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001e65	          0x4885db	                           test rbx, rbx	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001e68	            0x7410	                            je 0x4001e7a	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001e6a	      0x498b442460	            mov rax, qword [r12 + 0x60] 	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001e6f	          0x8b701c	            mov esi, dword [rax + 0x1c] 	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001e72	            0x85f6	                           test esi, esi	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001e74	     0xf849e010000	                            je 0x4002018	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001e7a	      0x4d8b7c2468	            mov r15, qword [r12 + 0x68] 	       905	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001e7f	      0x4d8d5c2460	                   lea r11, [r12 + 0x60]	       905	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001e84	          0x4c89df	                            mov rdi, r11	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_13
0x4001e87	      0x4c895c2408	                mov qword [rsp + 8], r11	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_13
0x4001e8c	        0x498d4701	                      lea rax, [r15 + 1]	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001e90	      0x4989442468	             mov qword [r12 + 0x68], rax	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001e95	      0xe826eaffff	           call sym.stab_pop_type.isra.1	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_13
0x4001e9a	          0x4889c7	                            mov rdi, rax	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001e9d	          0x4889c3	                            mov rbx, rax	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_13
0x4001ea0	      0xe800000000	                          call 0x4001ea5	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001ea5	        0x488d7814	                   lea rdi, [rax + 0x14]	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001ea9	      0xe800000000	                          call 0x4001eae	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001eae	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001eb2	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001eb5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001eba	              0x53	                                push rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ebb	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ec0	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ec7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ecc	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ecf	          0x4989c4	                            mov r12, rax	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001ed2	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ed4	      0xe800000000	                          call 0x4001ed9	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ed9	          0x4889df	                            mov rdi, rbx	       911	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x4001edc	      0xe800000000	                          call 0x4001ee1	       911	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x4001ee1	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001ee6	        0x498b4500	                    mov rax, qword [r13]	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001eea	      0xb901000000	                              mov ecx, 1	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001eef	          0x4c89fa	                            mov rdx, r15	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001ef2	          0x4589f0	                           mov r8d, r14d	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001ef5	          0x4c89e6	                            mov rsi, r12	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001ef8	        0x4c893ce8	            mov qword [rax + rbp*8], r15	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001efc	          0x4c89df	                            mov rdi, r11	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001eff	      0xe8fcf9ffff	        call sym.stab_push_string.isra.5	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f04	            0x85c0	                           test eax, eax	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f06	              0x5a	                                 pop rdx	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f07	              0x59	                                 pop rcx	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f08	     0xf85ea000000	                           jne 0x4001ff8	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f0e	            0x31c0	                            xor eax, eax	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x4001f10	        0x4883c418	                           add rsp, 0x18	       923	wrstabs.c	FUNCTION_16
0x4001f14	              0x5b	                                 pop rbx	       923	wrstabs.c	FUNCTION_16
0x4001f15	              0x5d	                                 pop rbp	       923	wrstabs.c	FUNCTION_16
0x4001f16	            0x415c	                                 pop r12	       923	wrstabs.c	FUNCTION_16
0x4001f18	            0x415d	                                 pop r13	       923	wrstabs.c	FUNCTION_16
0x4001f1a	            0x415e	                                 pop r14	       923	wrstabs.c	FUNCTION_16
0x4001f1c	            0x415f	                                 pop r15	       923	wrstabs.c	FUNCTION_16
0x4001f1e	              0xc3	                                     ret	       923	wrstabs.c	FUNCTION_16
0x4001f1f	              0x90	                                     nop	       923	wrstabs.c	FUNCTION_16
0x4001f20	          0x4885db	                           test rbx, rbx	       880	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001f23	            0x7513	                           jne 0x4001f38	       880	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001f25	        0x4883fd09	                              cmp rbp, 9	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001f29	     0xf8620010000	                           jbe 0x400204f	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001f2f	      0xbb0a000000	                            mov ebx, 0xa	       881	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001f34	         0xf1f4000	                         nop dword [rax]	       881	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001f38	          0x4801db	                            add rbx, rbx	       883	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001f3b	          0x4839dd	                            cmp rbp, rbx	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001f3e	            0x73f8	                           jae 0x4001f38	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001f40	    0x488d34dd0000	                        lea rsi, [rbx*8]	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001f48	        0x498b7d00	                    mov rdi, qword [r13]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_8
0x4001f4c	      0xe800000000	                          call 0x4001f51	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_8
0x4001f51	          0x498b0f	                    mov rcx, qword [r15]	       886	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001f54	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_74	CALL_6
0x4001f57	        0x49894500	                    mov qword [r13], rax	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_8
0x4001f5b	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_74	CALL_6
0x4001f5d	          0x4829ca	                            sub rdx, rcx	        90	string3.h	FUNCTION_74	CALL_6
0x4001f60	        0x488d3cc8	                  lea rdi, [rax + rcx*8]	        90	string3.h	FUNCTION_74	CALL_6
0x4001f64	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_74	CALL_6
0x4001f68	      0xe800000000	                          call 0x4001f6d	        90	string3.h	FUNCTION_74	CALL_6
0x4001f6d	          0x49891f	                    mov qword [r15], rbx	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001f70	      0xe9e8feffff	                           jmp 0x4001e5d	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001f75	           0xf1f00	                         nop dword [rax]	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001f78	        0x4983c460	                           add r12, 0x60	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001f7c	          0x8b681c	            mov ebp, dword [rax + 0x1c] 	       864	wrstabs.c	FUNCTION_16	IF_1
0x4001f7f	          0x4c89e7	                            mov rdi, r12	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x4001f82	      0xe839e9ffff	           call sym.stab_pop_type.isra.1	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x4001f87	          0x4889c7	                            mov rdi, rax	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001f8a	          0x4889c3	                            mov rbx, rax	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x4001f8d	      0xe800000000	                          call 0x4001f92	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001f92	        0x488d7802	                      lea rdi, [rax + 2]	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001f96	      0xe800000000	                          call 0x4001f9b	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001f9b	      0x448b442404	                mov r8d, dword [rsp + 4]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001fa0	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001fa3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001fa8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001faf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001fb4	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001fb7	          0x4989c5	                            mov r13, rax	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001fba	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001fbc	      0xe800000000	                          call 0x4001fc1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001fc1	          0x4889df	                            mov rdi, rbx	       868	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001fc4	      0xe800000000	                          call 0x4001fc9	       868	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001fc9	            0x31d2	                            xor edx, edx	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fcb	          0x4589f0	                           mov r8d, r14d	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fce	            0x89e9	                            mov ecx, ebp	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fd0	          0x4c89ee	                            mov rsi, r13	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fd3	          0x4c89e7	                            mov rdi, r12	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fd6	      0xe825f9ffff	        call sym.stab_push_string.isra.5	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fdb	            0x85c0	                           test eax, eax	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fdd	     0xf842bffffff	                            je 0x4001f0e	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001fe3	          0x4c89ef	                            mov rdi, r13	       871	wrstabs.c	FUNCTION_16	IF_1	CALL_7
0x4001fe6	      0xe800000000	                          call 0x4001feb	       871	wrstabs.c	FUNCTION_16	IF_1	CALL_7
0x4001feb	      0xb801000000	                              mov eax, 1	       922	wrstabs.c	FUNCTION_16
0x4001ff0	      0xe91bffffff	                           jmp 0x4001f10	       922	wrstabs.c	FUNCTION_16
0x4001ff5	           0xf1f00	                         nop dword [rax]	       922	wrstabs.c	FUNCTION_16
0x4001ff8	          0x4c89e7	                            mov rdi, r12	       918	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_18
0x4001ffb	      0xe800000000	                          call 0x4002000	       918	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_18
0x4002000	        0x4883c418	                           add rsp, 0x18	       923	wrstabs.c	FUNCTION_16
0x4002004	      0xb801000000	                              mov eax, 1	       922	wrstabs.c	FUNCTION_16
0x4002009	              0x5b	                                 pop rbx	       923	wrstabs.c	FUNCTION_16
0x400200a	              0x5d	                                 pop rbp	       923	wrstabs.c	FUNCTION_16
0x400200b	            0x415c	                                 pop r12	       923	wrstabs.c	FUNCTION_16
0x400200d	            0x415d	                                 pop r13	       923	wrstabs.c	FUNCTION_16
0x400200f	            0x415e	                                 pop r14	       923	wrstabs.c	FUNCTION_16
0x4002011	            0x415f	                                 pop r15	       923	wrstabs.c	FUNCTION_16
0x4002013	              0xc3	                                     ret	       923	wrstabs.c	FUNCTION_16
0x4002014	         0xf1f4000	                         nop dword [rax]	       923	wrstabs.c	FUNCTION_16
0x4002018	      0x498d7c2460	                   lea rdi, [r12 + 0x60]	       923	wrstabs.c	FUNCTION_16
0x400201d	      0xe89ee8ffff	           call sym.stab_pop_type.isra.1	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_11
0x4002022	          0x4889c7	                            mov rdi, rax	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_11
0x4002025	      0xe800000000	                          call 0x400202a	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_11
0x400202a	          0x4489f2	                           mov edx, r14d	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x400202d	          0x4889de	                            mov rsi, rbx	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x4002030	          0x4c89e7	                            mov rdi, r12	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x4002033	      0xe858f9ffff	         call sym.stab_push_defined_type	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x4002038	            0x85c0	                           test eax, eax	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x400203a	           0xf95c0	                                setne al	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x400203d	        0x4883c418	                           add rsp, 0x18	       923	wrstabs.c	FUNCTION_16
0x4002041	              0x5b	                                 pop rbx	       923	wrstabs.c	FUNCTION_16
0x4002042	           0xfb6c0	                           movzx eax, al	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x4002045	              0x5d	                                 pop rbp	       923	wrstabs.c	FUNCTION_16
0x4002046	            0x415c	                                 pop r12	       923	wrstabs.c	FUNCTION_16
0x4002048	            0x415d	                                 pop r13	       923	wrstabs.c	FUNCTION_16
0x400204a	            0x415e	                                 pop r14	       923	wrstabs.c	FUNCTION_16
0x400204c	            0x415f	                                 pop r15	       923	wrstabs.c	FUNCTION_16
0x400204e	              0xc3	                                     ret	       923	wrstabs.c	FUNCTION_16
0x400204f	      0xbe50000000	                           mov esi, 0x50	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4002054	      0xbb0a000000	                            mov ebx, 0xa	       881	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4002059	      0xe9eafeffff	                           jmp 0x4001f48	       881	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x400205e	      0xb900000000	                              mov ecx, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4002063	      0xba55030000	                          mov edx, 0x355	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4002068	      0xbe00000000	                              mov esi, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x400206d	      0xbf00000000	                              mov edi, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4002072	      0xe800000000	                          call 0x4002077	       853	wrstabs.c	FUNCTION_16	CALL_1
stab_start_block	IF,5:FOR,0:WHILE,0:DO,0:functions,0:CALL,3:ELSE,0:SWITCH,0	53
0x4000460	              0x55	                                push rbp	      2162	wrstabs.c	FUNCTION_50
0x4000461	              0x53	                                push rbx	      2162	wrstabs.c	FUNCTION_50
0x4000462	          0x4889f5	                            mov rbp, rsi	      2162	wrstabs.c	FUNCTION_50
0x4000465	          0x4889fb	                            mov rbx, rdi	      2162	wrstabs.c	FUNCTION_50
0x4000468	        0x4883ec08	                              sub rsp, 8	      2162	wrstabs.c	FUNCTION_50
0x400046c	    0x488b87e00100	           mov rax, qword [rdi + 0x1e0] 	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4000473	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4000477	            0x7421	                            je 0x400049a	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4000479	        0x488b5708	                mov rdx, qword [rdi + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x400047d	      0x488d740208	                lea rsi, [rdx + rax + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4000482	          0x488b07	                    mov rax, qword [rdi]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4000485	          0x4889ef	                            mov rdi, rbp	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4000488	        0x488b4008	                mov rax, qword [rax + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x400048c	          0xff5048	                 call qword [rax + 0x48]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x400048f	    0x48c783e00100	mov qword [rbx + 0x1e0], 0xffffffffffffffff	      2171	wrstabs.c	FUNCTION_50	IF_1
0x400049a	    0x488b83e80100	           mov rax, qword [rbx + 0x1e8] 	      2174	wrstabs.c	FUNCTION_50	IF_2
0x40004a1	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2174	wrstabs.c	FUNCTION_50	IF_2
0x40004a5	            0x7421	                            je 0x40004c8	      2174	wrstabs.c	FUNCTION_50	IF_2
0x40004a7	        0x488b5308	                mov rdx, qword [rbx + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x40004ab	          0x4889ef	                            mov rdi, rbp	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x40004ae	      0x488d740208	                lea rsi, [rdx + rax + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x40004b3	          0x488b03	                    mov rax, qword [rbx]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x40004b6	        0x488b4008	                mov rax, qword [rax + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x40004ba	          0xff5048	                 call qword [rax + 0x48]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x40004bd	    0x48c783e80100	mov qword [rbx + 0x1e8], 0xffffffffffffffff	      2177	wrstabs.c	FUNCTION_50	IF_2
0x40004c8	    0x8b83f8010000	           mov eax, dword [rbx + 0x1f8] 	      2180	wrstabs.c	FUNCTION_50
0x40004ce	          0x83c001	                              add eax, 1	      2180	wrstabs.c	FUNCTION_50
0x40004d1	          0x83f801	                              cmp eax, 1	      2186	wrstabs.c	FUNCTION_50	IF_3
0x40004d4	    0x8983f8010000	            mov dword [rbx + 0x1f8], eax	      2180	wrstabs.c	FUNCTION_50
0x40004da	            0x7444	                            je 0x4000520	      2186	wrstabs.c	FUNCTION_50	IF_3
0x40004dc	    0x488b8b080200	           mov rcx, qword [rbx + 0x208] 	      2197	wrstabs.c	FUNCTION_50	IF_4
0x40004e3	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      2197	wrstabs.c	FUNCTION_50	IF_4
0x40004e7	            0x7416	                            je 0x40004ff	      2197	wrstabs.c	FUNCTION_50	IF_4
0x40004e9	          0x4531c0	                            xor r8d, r8d	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40004ec	            0x31d2	                            xor edx, edx	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40004ee	      0xbec0000000	                           mov esi, 0xc0	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40004f3	          0x4889df	                            mov rdi, rbx	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40004f6	      0xe8b5fdffff	              call sym.stab_write_symbol	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40004fb	            0x85c0	                           test eax, eax	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40004fd	            0x7413	                            je 0x4000512	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40004ff	    0x482bab000200	            sub rbp, qword [rbx + 0x200]	      2206	wrstabs.c	FUNCTION_50
0x4000506	      0xb801000000	                              mov eax, 1	      2208	wrstabs.c	FUNCTION_50
0x400050b	    0x4889ab080200	            mov qword [rbx + 0x208], rbp	      2206	wrstabs.c	FUNCTION_50
0x4000512	        0x4883c408	                              add rsp, 8	      2209	wrstabs.c	FUNCTION_50
0x4000516	              0x5b	                                 pop rbx	      2209	wrstabs.c	FUNCTION_50
0x4000517	              0x5d	                                 pop rbp	      2209	wrstabs.c	FUNCTION_50
0x4000518	              0xc3	                                     ret	      2209	wrstabs.c	FUNCTION_50
0x4000519	     0xf1f80000000	                         nop dword [rax]	      2209	wrstabs.c	FUNCTION_50
0x4000520	    0x4889ab000200	            mov qword [rbx + 0x200], rbp	      2188	wrstabs.c	FUNCTION_50	IF_3
0x4000527	        0x4883c408	                              add rsp, 8	      2209	wrstabs.c	FUNCTION_50
0x400052b	              0x5b	                                 pop rbx	      2209	wrstabs.c	FUNCTION_50
0x400052c	              0x5d	                                 pop rbp	      2209	wrstabs.c	FUNCTION_50
0x400052d	              0xc3	                                     ret	      2209	wrstabs.c	FUNCTION_50
stab_start_source	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	6
0x4000630	          0x4989f0	                             mov r8, rsi	       562	wrstabs.c	FUNCTION_8
0x4000633	    0x4889b7100200	            mov qword [rdi + 0x210], rsi	       569	wrstabs.c	FUNCTION_8
0x400063a	            0x31c9	                            xor ecx, ecx	       571	wrstabs.c	FUNCTION_8	CALL_1
0x400063c	            0x31d2	                            xor edx, edx	       571	wrstabs.c	FUNCTION_8	CALL_1
0x400063e	      0xbe84000000	                           mov esi, 0x84	       571	wrstabs.c	FUNCTION_8	CALL_1
0x4000643	      0xe968fcffff	               jmp sym.stab_write_symbol	       571	wrstabs.c	FUNCTION_8	CALL_1
stab_class_method_variant	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	10
0x4000fa0	        0x4883ec08	                              sub rsp, 8	      1737	wrstabs.c	FUNCTION_36
0x4000fa4	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000fa8	              0x50	                                push rax	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000fa9	            0x4151	                                 push r9	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000fab	          0x4589c1	                            mov r9d, r8d	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000fae	          0x4189c8	                            mov r8d, ecx	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000fb1	            0x31c9	                            xor ecx, ecx	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000fb3	      0xe838fcffff	          call sym.stab_class_method_var	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000fb8	        0x4883c418	                           add rsp, 0x18	      1742	wrstabs.c	FUNCTION_36
0x4000fbc	              0xc3	                                     ret	      1742	wrstabs.c	FUNCTION_36
stab_start_function	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,7:ELSE,0:SWITCH,0	63
0x4001270	            0x4156	                                push r14	      2084	wrstabs.c	FUNCTION_48
0x4001272	            0x4155	                                push r13	      2084	wrstabs.c	FUNCTION_48
0x4001274	            0x4154	                                push r12	      2084	wrstabs.c	FUNCTION_48
0x4001276	              0x55	                                push rbp	      2084	wrstabs.c	FUNCTION_48
0x4001277	              0x53	                                push rbx	      2084	wrstabs.c	FUNCTION_48
0x4001278	    0x448b87f80100	           mov r8d, dword [rdi + 0x1f8] 	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x400127f	          0x4585c0	                           test r8d, r8d	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4001282	     0xf85af000000	                           jne 0x4001337	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4001288	    0x4883bfe80100	cmp qword [rdi + 0x1e8], 0xffffffffffffffff	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4001290	          0x4889fb	                            mov rbx, rdi	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4001293	     0xf859e000000	                           jne 0x4001337	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4001299	        0x488d7f60	                   lea rdi, [rdi + 0x60]	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x400129d	          0x4989f4	                            mov r12, rsi	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x40012a0	          0x4189d6	                           mov r14d, edx	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x40012a3	      0xe818f6ffff	           call sym.stab_pop_type.isra.1	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x40012a8	          0x4c89e7	                            mov rdi, r12	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012ab	          0x4989c5	                            mov r13, rax	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x40012ae	      0xe800000000	                          call 0x40012b3	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012b3	          0x4c89ef	                            mov rdi, r13	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012b6	          0x4889c5	                            mov rbp, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012b9	      0xe800000000	                          call 0x40012be	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012be	      0x488d7c0503	                lea rdi, [rbp + rax + 3]	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012c3	      0xe800000000	                          call 0x40012c8	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012c8	        0x4183fe01	                             cmp r14d, 1	      2093	wrstabs.c	FUNCTION_48
0x40012cc	          0x4889c5	                            mov rbp, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x40012cf	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012d2	            0x19c0	                            sbb eax, eax	      2093	wrstabs.c	FUNCTION_48
0x40012d4	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012d8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012dd	          0x83e020	                           and eax, 0x20	      2093	wrstabs.c	FUNCTION_48
0x40012e0	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012e2	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012e9	        0x448d4846	                   lea r9d, [rax + 0x46]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012ed	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012f2	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012f5	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012f7	      0xe800000000	                          call 0x40012fc	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012fc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2098	wrstabs.c	FUNCTION_48
0x4001300	            0x31c9	                            xor ecx, ecx	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x4001302	            0x31d2	                            xor edx, edx	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x4001304	          0x4989e8	                             mov r8, rbp	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x4001307	      0xbe24000000	                           mov esi, 0x24	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x400130c	          0x4889df	                            mov rdi, rbx	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x400130f	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      2098	wrstabs.c	FUNCTION_48
0x4001316	      0xe895efffff	              call sym.stab_write_symbol	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x400131b	            0x85c0	                           test eax, eax	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x400131d	              0x5a	                                 pop rdx	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x400131e	              0x59	                                 pop rcx	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x400131f	            0x740d	                            je 0x400132e	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x4001321	          0x4889ef	                            mov rdi, rbp	      2103	wrstabs.c	FUNCTION_48	CALL_7
0x4001324	      0xe800000000	                          call 0x4001329	      2103	wrstabs.c	FUNCTION_48	CALL_7
0x4001329	      0xb801000000	                              mov eax, 1	      2105	wrstabs.c	FUNCTION_48
0x400132e	              0x5b	                                 pop rbx	      2106	wrstabs.c	FUNCTION_48
0x400132f	              0x5d	                                 pop rbp	      2106	wrstabs.c	FUNCTION_48
0x4001330	            0x415c	                                 pop r12	      2106	wrstabs.c	FUNCTION_48
0x4001332	            0x415d	                                 pop r13	      2106	wrstabs.c	FUNCTION_48
0x4001334	            0x415e	                                 pop r14	      2106	wrstabs.c	FUNCTION_48
0x4001336	              0xc3	                                     ret	      2106	wrstabs.c	FUNCTION_48
0x4001337	      0xb900000000	                              mov ecx, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x400133c	      0xba28080000	                          mov edx, 0x828	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4001341	      0xbe00000000	                              mov esi, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4001346	      0xbf00000000	                              mov edi, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x400134b	      0xe800000000	                  call sym.stab_variable	      2088	wrstabs.c	FUNCTION_48	CALL_1
stab_range_type	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,6:ELSE,0:SWITCH,0	55
0x4002530	            0x4157	                                push r15	       990	wrstabs.c	FUNCTION_20
0x4002532	            0x4156	                                push r14	       990	wrstabs.c	FUNCTION_20
0x4002534	          0x4989f7	                            mov r15, rsi	       990	wrstabs.c	FUNCTION_20
0x4002537	            0x4155	                                push r13	       990	wrstabs.c	FUNCTION_20
0x4002539	            0x4154	                                push r12	       990	wrstabs.c	FUNCTION_20
0x400253b	              0x55	                                push rbp	       990	wrstabs.c	FUNCTION_20
0x400253c	              0x53	                                push rbx	       990	wrstabs.c	FUNCTION_20
0x400253d	        0x488d5f60	                   lea rbx, [rdi + 0x60]	       990	wrstabs.c	FUNCTION_20
0x4002541	        0x4883ec18	                           sub rsp, 0x18	       990	wrstabs.c	FUNCTION_20
0x4002545	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       996	wrstabs.c	FUNCTION_20
0x4002549	          0x4889df	                            mov rdi, rbx	       999	wrstabs.c	FUNCTION_20	CALL_1
0x400254c	      0x4889542408	                mov qword [rsp + 8], rdx	       990	wrstabs.c	FUNCTION_20
0x4002551	        0x448b601c	           mov r12d, dword [rax + 0x1c] 	       996	wrstabs.c	FUNCTION_20
0x4002555	        0x448b6818	           mov r13d, dword [rax + 0x18] 	       997	wrstabs.c	FUNCTION_20
0x4002559	      0xe862e3ffff	           call sym.stab_pop_type.isra.1	       999	wrstabs.c	FUNCTION_20	CALL_1
0x400255e	          0x4889c7	                            mov rdi, rax	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4002561	          0x4889c5	                            mov rbp, rax	       999	wrstabs.c	FUNCTION_20	CALL_1
0x4002564	      0xe800000000	                          call 0x4002569	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4002569	        0x488d7864	                   lea rdi, [rax + 0x64]	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x400256d	      0xe800000000	                          call 0x4002572	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4002572	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002576	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002579	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400257c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002581	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002586	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400258b	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400258e	          0x4989c6	                            mov r14, rax	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4002591	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002593	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002594	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x400259b	      0xe800000000	                          call 0x40025a0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40025a0	          0x4889ef	                            mov rdi, rbp	      1002	wrstabs.c	FUNCTION_20	CALL_4
0x40025a3	      0xe800000000	                          call 0x40025a8	      1002	wrstabs.c	FUNCTION_20	CALL_4
0x40025a8	            0x31d2	                            xor edx, edx	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025aa	          0x4489e1	                           mov ecx, r12d	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025ad	          0x4589e8	                           mov r8d, r13d	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025b0	          0x4c89f6	                            mov rsi, r14	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025b3	          0x4889df	                            mov rdi, rbx	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025b6	      0xe845f3ffff	        call sym.stab_push_string.isra.5	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025bb	            0x85c0	                           test eax, eax	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025bd	              0x5a	                                 pop rdx	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025be	              0x59	                                 pop rcx	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025bf	            0x740d	                            je 0x40025ce	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x40025c1	          0x4c89f7	                            mov rdi, r14	      1007	wrstabs.c	FUNCTION_20	CALL_6
0x40025c4	      0xe800000000	                          call 0x40025c9	      1007	wrstabs.c	FUNCTION_20	CALL_6
0x40025c9	      0xb801000000	                              mov eax, 1	      1009	wrstabs.c	FUNCTION_20
0x40025ce	        0x4883c418	                           add rsp, 0x18	      1010	wrstabs.c	FUNCTION_20
0x40025d2	              0x5b	                                 pop rbx	      1010	wrstabs.c	FUNCTION_20
0x40025d3	              0x5d	                                 pop rbp	      1010	wrstabs.c	FUNCTION_20
0x40025d4	            0x415c	                                 pop r12	      1010	wrstabs.c	FUNCTION_20
0x40025d6	            0x415d	                                 pop r13	      1010	wrstabs.c	FUNCTION_20
0x40025d8	            0x415e	                                 pop r14	      1010	wrstabs.c	FUNCTION_20
0x40025da	            0x415f	                                 pop r15	      1010	wrstabs.c	FUNCTION_20
0x40025dc	              0xc3	                                     ret	      1010	wrstabs.c	FUNCTION_20
stab_int_constant	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,4:ELSE,0:SWITCH,0	38
0x40005b0	            0x4155	                                push r13	      1954	wrstabs.c	FUNCTION_44
0x40005b2	            0x4154	                                push r12	      1954	wrstabs.c	FUNCTION_44
0x40005b4	          0x4989fc	                            mov r12, rdi	      1954	wrstabs.c	FUNCTION_44
0x40005b7	              0x55	                                push rbp	      1954	wrstabs.c	FUNCTION_44
0x40005b8	              0x53	                                push rbx	      1954	wrstabs.c	FUNCTION_44
0x40005b9	          0x4889f7	                            mov rdi, rsi	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40005bc	          0x4889f5	                            mov rbp, rsi	      1954	wrstabs.c	FUNCTION_44
0x40005bf	          0x4989d5	                            mov r13, rdx	      1954	wrstabs.c	FUNCTION_44
0x40005c2	        0x4883ec08	                              sub rsp, 8	      1954	wrstabs.c	FUNCTION_44
0x40005c6	      0xe800000000	                          call 0x40005cb	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40005cb	        0x488d7814	                   lea rdi, [rax + 0x14]	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40005cf	      0xe800000000	                          call 0x40005d4	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40005d4	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005d7	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005da	          0x4889c3	                            mov rbx, rax	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40005dd	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005e0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005e5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005ec	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005f1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005f3	      0xe800000000	                          call 0x40005f8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40005f8	            0x31c9	                            xor ecx, ecx	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x40005fa	            0x31d2	                            xor edx, edx	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x40005fc	          0x4989d8	                             mov r8, rbx	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x40005ff	      0xbe80000000	                           mov esi, 0x80	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x4000604	          0x4c89e7	                            mov rdi, r12	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x4000607	      0xe8a4fcffff	              call sym.stab_write_symbol	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x400060c	            0x85c0	                           test eax, eax	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x400060e	            0x740d	                            je 0x400061d	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x4000610	          0x4889df	                            mov rdi, rbx	      1964	wrstabs.c	FUNCTION_44	CALL_4
0x4000613	      0xe800000000	                          call 0x4000618	      1964	wrstabs.c	FUNCTION_44	CALL_4
0x4000618	      0xb801000000	                              mov eax, 1	      1966	wrstabs.c	FUNCTION_44
0x400061d	        0x4883c408	                              add rsp, 8	      1967	wrstabs.c	FUNCTION_44
0x4000621	              0x5b	                                 pop rbx	      1967	wrstabs.c	FUNCTION_44
0x4000622	              0x5d	                                 pop rbp	      1967	wrstabs.c	FUNCTION_44
0x4000623	            0x415c	                                 pop r12	      1967	wrstabs.c	FUNCTION_44
0x4000625	            0x415d	                                 pop r13	      1967	wrstabs.c	FUNCTION_44
0x4000627	              0xc3	                                     ret	      1967	wrstabs.c	FUNCTION_44
stab_bool_type	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,1	7
0x4001a60	          0x8d46ff	                      lea eax, [rsi - 1]	       749	wrstabs.c	FUNCTION_14
0x4001a63	            0x89f2	                            mov edx, esi	       749	wrstabs.c	FUNCTION_14
0x4001a65	    0x48c7c6f0ffff	             mov rsi, 0xfffffffffffffff0	       749	wrstabs.c	FUNCTION_14
0x4001a6c	          0x83f807	                              cmp eax, 7	       749	wrstabs.c	FUNCTION_14
0x4001a6f	            0x7708	                            ja 0x4001a79	       749	wrstabs.c	FUNCTION_14
0x4001a71	    0x488b34c50000	                  mov rsi, qword [rax*8]	       749	wrstabs.c	FUNCTION_14
0x4001a79	      0xe912ffffff	          jmp sym.stab_push_defined_type	       773	wrstabs.c	FUNCTION_14	CALL_1
stab_get_struct_index	IF,4:FOR,0:WHILE,1:DO,0:functions,0:CALL,2:ELSE,1:SWITCH,0	77
0x4000190	            0x4156	                                push r14	      1263	wrstabs.c	FUNCTION_27
0x4000192	            0x4155	                                push r13	      1263	wrstabs.c	FUNCTION_27
0x4000194	          0x4989f6	                            mov r14, rsi	      1263	wrstabs.c	FUNCTION_27
0x4000197	            0x4154	                                push r12	      1263	wrstabs.c	FUNCTION_27
0x4000199	              0x55	                                push rbp	      1263	wrstabs.c	FUNCTION_27
0x400019a	            0x89d5	                            mov ebp, edx	      1264	wrstabs.c	FUNCTION_27	IF_1
0x400019c	              0x53	                                push rbx	      1263	wrstabs.c	FUNCTION_27
0x400019d	          0x4989fc	                            mov r12, rdi	      1263	wrstabs.c	FUNCTION_27
0x40001a0	          0x4189cd	                           mov r13d, ecx	      1263	wrstabs.c	FUNCTION_27
0x40001a3	        0x4883ec10	                           sub rsp, 0x10	      1263	wrstabs.c	FUNCTION_27
0x40001a7	    0x488b9fb00100	           mov rbx, qword [rdi + 0x1b0] 	      1264	wrstabs.c	FUNCTION_27	IF_1
0x40001ae	          0x4839dd	                            cmp rbp, rbx	      1264	wrstabs.c	FUNCTION_27	IF_1
0x40001b1	            0x7279	                            jb 0x400022c	      1264	wrstabs.c	FUNCTION_27	IF_1
0x40001b3	          0x4885db	                           test rbx, rbx	      1269	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x40001b6	            0x7518	                           jne 0x40001d0	      1269	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x40001b8	        0x4883fd09	                              cmp rbp, 9	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40001bc	     0xf86db000000	                           jbe 0x400029d	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40001c2	      0xbb0a000000	                            mov ebx, 0xa	      1270	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x40001c7	    0x660f1f840000	                    nop word [rax + rax]	      1270	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x40001d0	          0x4801db	                            add rbx, rbx	      1272	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40001d3	          0x4839dd	                            cmp rbp, rbx	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40001d6	            0x73f8	                           jae 0x40001d0	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40001d8	        0x488d345b	                  lea rsi, [rbx + rbx*2]	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40001dc	        0x48c1e603	                              shl rsi, 3	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40001e0	    0x498bbc24a801	           mov rdi, qword [r12 + 0x1a8] 	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40001e8	      0x4c89442408	                 mov qword [rsp + 8], r8	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40001ed	      0xe800000000	                          call 0x40001f2	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40001f2	    0x498b8c24b001	           mov rcx, qword [r12 + 0x1b0] 	      1279	wrstabs.c	FUNCTION_27	IF_1
0x40001fa	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_74	CALL_6
0x40001fd	    0x49898424a801	            mov qword [r12 + 0x1a8], rax	      1273	wrstabs.c	FUNCTION_27	IF_1
0x4000205	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_74	CALL_6
0x4000207	          0x4829ca	                            sub rdx, rcx	        90	string3.h	FUNCTION_74	CALL_6
0x400020a	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	        90	string3.h	FUNCTION_74	CALL_6
0x400020e	        0x488d1452	                  lea rdx, [rdx + rdx*2]	        90	string3.h	FUNCTION_74	CALL_6
0x4000212	        0x488d3cc8	                  lea rdi, [rax + rcx*8]	        90	string3.h	FUNCTION_74	CALL_6
0x4000216	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_74	CALL_6
0x400021a	      0xe800000000	                          call 0x400021f	        90	string3.h	FUNCTION_74	CALL_6
0x400021f	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1281	wrstabs.c	FUNCTION_27	IF_1
0x4000224	    0x49899c24b001	            mov qword [r12 + 0x1b0], rbx	      1281	wrstabs.c	FUNCTION_27	IF_1
0x400022c	    0x498b8424a801	           mov rax, qword [r12 + 0x1a8] 	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4000234	      0x488d546d00	                  lea rdx, [rbp + rbp*2]	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4000239	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1284	wrstabs.c	FUNCTION_27	IF_3
0x400023d	        0x48833800	                      cmp qword [rax], 0	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4000241	            0x7519	                           jne 0x400025c	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4000243	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4000248	          0x488910	                    mov qword [rax], rdx	      1286	wrstabs.c	FUNCTION_27	IF_3
0x400024b	        0x4883c201	                              add rdx, 1	      1287	wrstabs.c	FUNCTION_27	IF_3
0x400024f	      0x4989542468	             mov qword [r12 + 0x68], rdx	      1287	wrstabs.c	FUNCTION_27	IF_3
0x4000254	        0x4c897008	                mov qword [rax + 8], r14	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4000258	        0x44896810	            mov dword [rax + 0x10], r13d	      1289	wrstabs.c	FUNCTION_27	IF_3
0x400025c	          0x4585ed	                         test r13d, r13d	      1292	wrstabs.c	FUNCTION_27	IF_4
0x400025f	            0x741f	                            je 0x4000280	      1292	wrstabs.c	FUNCTION_27	IF_4
0x4000261	          0x8b5014	            mov edx, dword [rax + 0x14] 	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4000264	          0x488b00	                    mov rax, qword [rax]	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4000267	          0x418910	                     mov dword [r8], edx	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x400026a	        0x4883c410	                           add rsp, 0x10	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x400026e	              0x5b	                                 pop rbx	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x400026f	              0x5d	                                 pop rbp	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000270	            0x415c	                                 pop r12	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000272	            0x415d	                                 pop r13	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000274	            0x415e	                                 pop r14	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000276	              0xc3	                                     ret	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000277	    0x660f1f840000	                    nop word [rax + rax]	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000280	          0x418b10	                     mov edx, dword [r8]	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4000283	    0xc74010000000	               mov dword [rax + 0x10], 0	      1295	wrstabs.c	FUNCTION_27	IF_4
0x400028a	          0x895014	             mov dword [rax + 0x14], edx	      1296	wrstabs.c	FUNCTION_27	IF_4
0x400028d	          0x488b00	                    mov rax, qword [rax]	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4000290	        0x4883c410	                           add rsp, 0x10	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000294	              0x5b	                                 pop rbx	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000295	              0x5d	                                 pop rbp	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000296	            0x415c	                                 pop r12	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4000298	            0x415d	                                 pop r13	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x400029a	            0x415e	                                 pop r14	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x400029c	              0xc3	                                     ret	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x400029d	      0xbef0000000	                           mov esi, 0xf0	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40002a2	      0xbb0a000000	                            mov ebx, 0xa	      1270	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x40002a7	      0xe934ffffff	                           jmp 0x40001e0	      1270	wrstabs.c	FUNCTION_27	IF_1	IF_2
stab_tag	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,7:ELSE,0:SWITCH,0	45
0x4001590	            0x4155	                                push r13	      1931	wrstabs.c	FUNCTION_43
0x4001592	            0x4154	                                push r12	      1931	wrstabs.c	FUNCTION_43
0x4001594	          0x4989f5	                            mov r13, rsi	      1931	wrstabs.c	FUNCTION_43
0x4001597	              0x55	                                push rbp	      1931	wrstabs.c	FUNCTION_43
0x4001598	              0x53	                                push rbx	      1931	wrstabs.c	FUNCTION_43
0x4001599	          0x4989fc	                            mov r12, rdi	      1931	wrstabs.c	FUNCTION_43
0x400159c	        0x4883c760	                           add rdi, 0x60	      1931	wrstabs.c	FUNCTION_43
0x40015a0	        0x4883ec08	                              sub rsp, 8	      1931	wrstabs.c	FUNCTION_43
0x40015a4	      0xe817f3ffff	           call sym.stab_pop_type.isra.1	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x40015a9	          0x4c89ef	                            mov rdi, r13	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015ac	          0x4889c3	                            mov rbx, rax	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x40015af	      0xe800000000	                          call 0x40015b4	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015b4	          0x4889df	                            mov rdi, rbx	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015b7	          0x4889c5	                            mov rbp, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015ba	      0xe800000000	                          call 0x40015bf	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015bf	      0x488d7c0503	                lea rdi, [rbp + rax + 3]	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015c4	      0xe800000000	                          call 0x40015c9	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015c9	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015cc	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015cf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015d4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015db	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015e0	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015e3	          0x4889c5	                            mov rbp, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40015e6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015e8	      0xe800000000	                          call 0x40015ed	        33	stdio2.h	FUNCTION_54	CALL_1
0x40015ed	          0x4889df	                            mov rdi, rbx	      1940	wrstabs.c	FUNCTION_43	CALL_5
0x40015f0	      0xe800000000	                          call 0x40015f5	      1940	wrstabs.c	FUNCTION_43	CALL_5
0x40015f5	            0x31c9	                            xor ecx, ecx	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40015f7	            0x31d2	                            xor edx, edx	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40015f9	          0x4989e8	                             mov r8, rbp	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40015fc	      0xbe80000000	                           mov esi, 0x80	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x4001601	          0x4c89e7	                            mov rdi, r12	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x4001604	      0xe8a7ecffff	              call sym.stab_write_symbol	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x4001609	            0x85c0	                           test eax, eax	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x400160b	            0x740d	                            je 0x400161a	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x400160d	          0x4889ef	                            mov rdi, rbp	      1945	wrstabs.c	FUNCTION_43	CALL_7
0x4001610	      0xe800000000	                          call 0x4001615	      1945	wrstabs.c	FUNCTION_43	CALL_7
0x4001615	      0xb801000000	                              mov eax, 1	      1947	wrstabs.c	FUNCTION_43
0x400161a	        0x4883c408	                              add rsp, 8	      1948	wrstabs.c	FUNCTION_43
0x400161e	              0x5b	                                 pop rbx	      1948	wrstabs.c	FUNCTION_43
0x400161f	              0x5d	                                 pop rbp	      1948	wrstabs.c	FUNCTION_43
0x4001620	            0x415c	                                 pop r12	      1948	wrstabs.c	FUNCTION_43
0x4001622	            0x415d	                                 pop r13	      1948	wrstabs.c	FUNCTION_43
0x4001624	              0xc3	                                     ret	      1948	wrstabs.c	FUNCTION_43
stab_typdef	IF,3:FOR,0:WHILE,0:DO,0:functions,0:CALL,11:ELSE,1:SWITCH,0	104
0x4001630	            0x4157	                                push r15	      1882	wrstabs.c	FUNCTION_42
0x4001632	            0x4156	                                push r14	      1882	wrstabs.c	FUNCTION_42
0x4001634	            0x4155	                                push r13	      1882	wrstabs.c	FUNCTION_42
0x4001636	            0x4154	                                push r12	      1882	wrstabs.c	FUNCTION_42
0x4001638	          0x4989f4	                            mov r12, rsi	      1882	wrstabs.c	FUNCTION_42
0x400163b	              0x55	                                push rbp	      1882	wrstabs.c	FUNCTION_42
0x400163c	              0x53	                                push rbx	      1882	wrstabs.c	FUNCTION_42
0x400163d	          0x4889fb	                            mov rbx, rdi	      1882	wrstabs.c	FUNCTION_42
0x4001640	        0x4883c760	                           add rdi, 0x60	      1882	wrstabs.c	FUNCTION_42
0x4001644	        0x4883ec08	                              sub rsp, 8	      1882	wrstabs.c	FUNCTION_42
0x4001648	          0x488b07	                    mov rax, qword [rdi]	      1889	wrstabs.c	FUNCTION_42
0x400164b	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      1889	wrstabs.c	FUNCTION_42
0x400164f	        0x448b7018	           mov r14d, dword [rax + 0x18] 	      1890	wrstabs.c	FUNCTION_42
0x4001653	      0xe868f2ffff	           call sym.stab_pop_type.isra.1	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x4001658	          0x4c89e7	                            mov rdi, r12	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x400165b	          0x4889c5	                            mov rbp, rax	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x400165e	      0xe800000000	                          call 0x4001663	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4001663	          0x4889ef	                            mov rdi, rbp	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4001666	          0x4989c7	                            mov r15, rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4001669	      0xe800000000	                          call 0x400166e	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x400166e	      0x498d7c0714	            lea rdi, [r15 + rax + 0x14] 	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4001673	      0xe800000000	                          call 0x4001678	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4001678	          0x4d85ed	                           test r13, r13	      1895	wrstabs.c	FUNCTION_42	IF_1
0x400167b	          0x4989c7	                            mov r15, rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x400167e	     0xf8e9c000000	                           jle 0x4001720	      1895	wrstabs.c	FUNCTION_42	IF_1
0x4001684	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001687	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400168a	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x400168d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001692	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001699	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400169e	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40016a0	      0xe800000000	                          call 0x40016a5	        33	stdio2.h	FUNCTION_54	CALL_1
0x40016a5	          0x4889ef	                            mov rdi, rbp	      1904	wrstabs.c	FUNCTION_42	CALL_5
0x40016a8	      0xe800000000	                          call 0x40016ad	      1904	wrstabs.c	FUNCTION_42	CALL_5
0x40016ad	            0x31c9	                            xor ecx, ecx	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016af	            0x31d2	                            xor edx, edx	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016b1	          0x4d89f8	                             mov r8, r15	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016b4	      0xbe80000000	                           mov esi, 0x80	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016b9	          0x4889df	                            mov rdi, rbx	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016bc	      0xe8efebffff	              call sym.stab_write_symbol	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016c1	            0x85c0	                           test eax, eax	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016c3	            0x7513	                           jne 0x40016d8	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x40016c5	        0x4883c408	                              add rsp, 8	      1925	wrstabs.c	FUNCTION_42
0x40016c9	              0x5b	                                 pop rbx	      1925	wrstabs.c	FUNCTION_42
0x40016ca	              0x5d	                                 pop rbp	      1925	wrstabs.c	FUNCTION_42
0x40016cb	            0x415c	                                 pop r12	      1925	wrstabs.c	FUNCTION_42
0x40016cd	            0x415d	                                 pop r13	      1925	wrstabs.c	FUNCTION_42
0x40016cf	            0x415e	                                 pop r14	      1925	wrstabs.c	FUNCTION_42
0x40016d1	            0x415f	                                 pop r15	      1925	wrstabs.c	FUNCTION_42
0x40016d3	              0xc3	                                     ret	      1925	wrstabs.c	FUNCTION_42
0x40016d4	         0xf1f4000	                         nop dword [rax]	      1925	wrstabs.c	FUNCTION_42
0x40016d8	          0x4c89ff	                            mov rdi, r15	      1909	wrstabs.c	FUNCTION_42	CALL_7
0x40016db	      0xe800000000	                          call 0x40016e0	      1909	wrstabs.c	FUNCTION_42	CALL_7
0x40016e0	    0x488dbbb80100	                  lea rdi, [rbx + 0x1b8]	      1911	wrstabs.c	FUNCTION_42
0x40016e7	            0x31c9	                            xor ecx, ecx	      1911	wrstabs.c	FUNCTION_42
0x40016e9	      0xba01000000	                              mov edx, 1	      1911	wrstabs.c	FUNCTION_42
0x40016ee	          0x4c89e6	                            mov rsi, r12	      1911	wrstabs.c	FUNCTION_42
0x40016f1	      0xe800000000	                          call 0x40016f6	      1911	wrstabs.c	FUNCTION_42
0x40016f6	          0x4885c0	                           test rax, rax	      1912	wrstabs.c	FUNCTION_42	IF_3
0x40016f9	            0x7465	                            je 0x4001760	      1912	wrstabs.c	FUNCTION_42	IF_3
0x40016fb	        0x4c896820	             mov qword [rax + 0x20], r13	      1921	wrstabs.c	FUNCTION_42
0x40016ff	        0x44897028	            mov dword [rax + 0x28], r14d	      1922	wrstabs.c	FUNCTION_42
0x4001703	        0x4883c408	                              add rsp, 8	      1925	wrstabs.c	FUNCTION_42
0x4001707	              0x5b	                                 pop rbx	      1925	wrstabs.c	FUNCTION_42
0x4001708	      0xb801000000	                              mov eax, 1	      1924	wrstabs.c	FUNCTION_42
0x400170d	              0x5d	                                 pop rbp	      1925	wrstabs.c	FUNCTION_42
0x400170e	            0x415c	                                 pop r12	      1925	wrstabs.c	FUNCTION_42
0x4001710	            0x415d	                                 pop r13	      1925	wrstabs.c	FUNCTION_42
0x4001712	            0x415e	                                 pop r14	      1925	wrstabs.c	FUNCTION_42
0x4001714	            0x415f	                                 pop r15	      1925	wrstabs.c	FUNCTION_42
0x4001716	              0xc3	                                     ret	      1925	wrstabs.c	FUNCTION_42
0x4001717	    0x660f1f840000	                    nop word [rax + rax]	      1925	wrstabs.c	FUNCTION_42
0x4001720	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	      1899	wrstabs.c	FUNCTION_42	ELSE_1
0x4001724	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001728	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x400172f	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001732	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001737	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400173c	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x400173f	        0x498d4501	                      lea rax, [r13 + 1]	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x4001743	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001746	        0x48894368	             mov qword [rbx + 0x68], rax	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x400174a	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400174b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400174d	      0xe800000000	                          call 0x4001752	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001752	              0x58	                                 pop rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001753	              0x5a	                                 pop rdx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001754	      0xe94cffffff	                           jmp 0x40016a5	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001759	     0xf1f80000000	                         nop dword [rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001760	      0xe800000000	                          call 0x4001765	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001765	            0x89c7	                            mov edi, eax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001767	      0xe800000000	                          call 0x400176c	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x400176c	      0xba05000000	                              mov edx, 5	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001771	          0x4889c3	                            mov rbx, rax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001774	      0xbe00000000	                              mov esi, 0	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001779	            0x31ff	                            xor edi, edi	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x400177b	      0xe800000000	                          call 0x4001780	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001780	          0x4889de	                            mov rsi, rbx	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001783	          0x4889c7	                            mov rdi, rax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001786	            0x31c0	                            xor eax, eax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4001788	      0xe800000000	                          call 0x400178d	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x400178d	            0x31c0	                            xor eax, eax	      1916	wrstabs.c	FUNCTION_42	IF_3
0x400178f	      0xe931ffffff	                           jmp 0x40016c5	      1916	wrstabs.c	FUNCTION_42	IF_3
stab_int_type	IF,9:FOR,0:WHILE,0:DO,0:functions,0:CALL,12:ELSE,8:SWITCH,0	145
0x4002910	            0x4155	                                push r13	       630	wrstabs.c	FUNCTION_11
0x4002912	            0x4154	                                push r12	       630	wrstabs.c	FUNCTION_11
0x4002914	              0x55	                                push rbp	       630	wrstabs.c	FUNCTION_11
0x4002915	              0x53	                                push rbx	       630	wrstabs.c	FUNCTION_11
0x4002916	            0x89f5	                            mov ebp, esi	       630	wrstabs.c	FUNCTION_11
0x4002918	        0x4883ec78	                           sub rsp, 0x78	       630	wrstabs.c	FUNCTION_11
0x400291c	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	wrstabs.c	FUNCTION_11
0x4002925	      0x4889442468	             mov qword [rsp + 0x68], rax	       630	wrstabs.c	FUNCTION_11
0x400292a	            0x31c0	                            xor eax, eax	       630	wrstabs.c	FUNCTION_11
0x400292c	          0x8d46ff	                      lea eax, [rsi - 1]	       634	wrstabs.c	FUNCTION_11	IF_1
0x400292f	          0x83f807	                              cmp eax, 7	       634	wrstabs.c	FUNCTION_11	IF_1
0x4002932	     0xf8710010000	                            ja 0x4002a48	       634	wrstabs.c	FUNCTION_11	IF_1
0x4002938	            0x85d2	                           test edx, edx	       640	wrstabs.c	FUNCTION_11	IF_2
0x400293a	          0x4889fb	                            mov rbx, rdi	       640	wrstabs.c	FUNCTION_11	IF_2
0x400293d	            0x7441	                            je 0x4002980	       640	wrstabs.c	FUNCTION_11	IF_2
0x400293f	      0x488d44c778	          lea rax, [rdi + rax*8 + 0x78] 	       645	wrstabs.c	FUNCTION_11	IF_3
0x4002944	          0x488b30	                    mov rsi, qword [rax]	       645	wrstabs.c	FUNCTION_11	IF_3
0x4002947	          0x4885f6	                           test rsi, rsi	       645	wrstabs.c	FUNCTION_11	IF_3
0x400294a	     0xf8420010000	                            je 0x4002a70	       645	wrstabs.c	FUNCTION_11	IF_3
0x4002950	            0x89ea	                            mov edx, ebp	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4002952	          0x4889df	                            mov rdi, rbx	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4002955	      0xe836f0ffff	         call sym.stab_push_defined_type	       646	wrstabs.c	FUNCTION_11	CALL_3
0x400295a	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       684	wrstabs.c	FUNCTION_11
0x400295f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       684	wrstabs.c	FUNCTION_11
0x4002968	     0xf85c3010000	                           jne 0x4002b31	       684	wrstabs.c	FUNCTION_11
0x400296e	        0x4883c478	                           add rsp, 0x78	       684	wrstabs.c	FUNCTION_11
0x4002972	              0x5b	                                 pop rbx	       684	wrstabs.c	FUNCTION_11
0x4002973	              0x5d	                                 pop rbp	       684	wrstabs.c	FUNCTION_11
0x4002974	            0x415c	                                 pop r12	       684	wrstabs.c	FUNCTION_11
0x4002976	            0x415d	                                 pop r13	       684	wrstabs.c	FUNCTION_11
0x4002978	              0xc3	                                     ret	       684	wrstabs.c	FUNCTION_11
0x4002979	     0xf1f80000000	                         nop dword [rax]	       684	wrstabs.c	FUNCTION_11
0x4002980	    0x488d84c7b800	          lea rax, [rdi + rax*8 + 0xb8] 	       645	wrstabs.c	FUNCTION_11	IF_3
0x4002988	          0x488b30	                    mov rsi, qword [rax]	       645	wrstabs.c	FUNCTION_11	IF_3
0x400298b	          0x4885f6	                           test rsi, rsi	       645	wrstabs.c	FUNCTION_11	IF_3
0x400298e	            0x75c0	                           jne 0x4002950	       645	wrstabs.c	FUNCTION_11	IF_3
0x4002990	        0x4c8b6768	            mov r12, qword [rdi + 0x68] 	       652	wrstabs.c	FUNCTION_11	ELSE_2
0x4002994	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002999	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400299e	          0x4989e5	                            mov r13, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029a1	      0x498d542401	                      lea rdx, [r12 + 1]	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x40029a6	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029a9	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029ac	        0x48895768	             mov qword [rdi + 0x68], rdx	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x40029b0	          0x4c8920	                    mov qword [rax], r12	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x40029b3	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029b6	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029bd	      0xe800000000	                          call 0x40029c2	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029c2	    0x8d0cedffffff	                    lea ecx, [rbp*8 - 1]	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40029c9	    0x41b801000000	                              mov r8d, 1	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40029cf	          0x4889e7	                            mov rdi, rsp	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029d2	          0x49d3e0	                              shl r8, cl	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40029d5	            0x8b17	                    mov edx, dword [rdi]	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029d7	        0x4883c704	                              add rdi, 4	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029db	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029e1	            0xf7d2	                                 not edx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029e3	            0x21d0	                            and eax, edx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029e5	      0x2580808080	                     and eax, 0x80808080	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029ea	            0x74e9	                            je 0x40029d5	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029ec	            0x89c2	                            mov edx, eax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029ee	        0x4d8d48ff	                        lea r9, [r8 - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029f2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029f7	          0xc1ea10	                           shr edx, 0x10	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029fa	      0xa980800000	                        test eax, 0x8080	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40029ff	           0xf44c2	                          cmove eax, edx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x4002a02	        0x488d5702	                      lea rdx, [rdi + 2]	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x4002a06	            0x89c1	                            mov ecx, eax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x4002a08	        0x480f44fa	                          cmove rdi, rdx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x4002a0c	              0xc1	                              add cl, al	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x4002a0e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a15	        0x4883df03	                              sbb rdi, 3	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x4002a19	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a1e	          0x49f7d8	                                  neg r8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a21	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a23	      0xe800000000	                          call 0x4002a28	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a28	        0x488d7b60	                   lea rdi, [rbx + 0x60]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a2c	          0x4189e8	                            mov r8d, ebp	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4002a2f	      0xb901000000	                              mov ecx, 1	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4002a34	          0x4c89e2	                            mov rdx, r12	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4002a37	          0x4c89ee	                            mov rsi, r13	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4002a3a	      0xe8c1eeffff	        call sym.stab_push_string.isra.5	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4002a3f	      0xe916ffffff	                           jmp 0x400295a	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4002a44	         0xf1f4000	                         nop dword [rax]	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4002a48	      0xba05000000	                              mov edx, 5	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a4d	      0xbe00000000	                              mov esi, 0	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a52	            0x31ff	                            xor edi, edi	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a54	      0xe800000000	                          call 0x4002a59	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a59	            0x89ee	                            mov esi, ebp	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a5b	          0x4889c7	                            mov rdi, rax	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a5e	            0x31c0	                            xor eax, eax	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a60	      0xe800000000	                          call 0x4002a65	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4002a65	            0x31c0	                            xor eax, eax	       637	wrstabs.c	FUNCTION_11	IF_1
0x4002a67	      0xe9eefeffff	                           jmp 0x400295a	       637	wrstabs.c	FUNCTION_11	IF_1
0x4002a6c	         0xf1f4000	                         nop dword [rax]	       637	wrstabs.c	FUNCTION_11	IF_1
0x4002a70	        0x4c8b6768	            mov r12, qword [rdi + 0x68] 	       652	wrstabs.c	FUNCTION_11	ELSE_2
0x4002a74	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a79	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a7e	          0x4989e5	                            mov r13, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a81	      0x498d542401	                      lea rdx, [r12 + 1]	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x4002a86	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a89	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a8c	        0x48895768	             mov qword [rdi + 0x68], rdx	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x4002a90	          0x4c8920	                    mov qword [rax], r12	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4002a93	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a98	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a9b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a9d	      0xe800000000	                          call 0x4002aa2	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aa2	          0x4889e2	                            mov rdx, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aa5	            0x8b0a	                    mov ecx, dword [rdx]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aa7	        0x4883c204	                              add rdx, 4	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aab	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ab1	            0xf7d1	                                 not ecx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ab3	            0x21c8	                            and eax, ecx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ab5	      0x2580808080	                     and eax, 0x80808080	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aba	            0x74e9	                            je 0x4002aa5	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002abc	            0x89c1	                            mov ecx, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002abe	          0xc1e910	                           shr ecx, 0x10	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ac1	      0xa980800000	                        test eax, 0x8080	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ac6	           0xf44c1	                          cmove eax, ecx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ac9	        0x488d4a02	                      lea rcx, [rdx + 2]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002acd	        0x480f44d1	                          cmove rdx, rcx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ad1	            0x89c1	                            mov ecx, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ad3	              0xc1	                              add cl, al	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ad5	      0xb8303b0000	                         mov eax, 0x3b30	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ada	        0x4883da03	                              sbb rdx, 3	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ade	          0x83fd08	                              cmp ebp, 8	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x4002ae1	          0x668902	                      mov word [rdx], ax	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x4002ae4	        0xc6420200	                   mov byte [rdx + 2], 0	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x4002ae8	        0x488d7a02	                      lea rdi, [rdx + 2]	       148	string3.h	FUNCTION_81	CALL_3
0x4002aec	            0x7512	                           jne 0x4002b00	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x4002aee	    0xc742022d313b	          mov dword [rdx + 2], 0x3b312d 	       148	string3.h	FUNCTION_81	CALL_3
0x4002af5	      0xe92effffff	                           jmp 0x4002a28	       148	string3.h	FUNCTION_81	CALL_3
0x4002afa	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_81	CALL_3
0x4002b00	    0x8d0ced000000	                        lea ecx, [rbp*8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b07	    0x41b801000000	                              mov r8d, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b0d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b14	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b19	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b1b	          0x49d3e0	                              shl r8, cl	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b1e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b23	        0x4983e801	                               sub r8, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b27	      0xe800000000	                          call 0x4002b2c	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b2c	      0xe9f7feffff	                           jmp 0x4002a28	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002b31	      0xe800000000	                          call 0x4002b36	       684	wrstabs.c	FUNCTION_11
stab_tag_type	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,2:ELSE,0:SWITCH,0	23
0x4001a00	              0x53	                                push rbx	      1866	wrstabs.c	FUNCTION_41
0x4001a01	          0x4889fb	                            mov rbx, rdi	      1866	wrstabs.c	FUNCTION_41
0x4001a04	        0x4883ec10	                           sub rsp, 0x10	      1866	wrstabs.c	FUNCTION_41
0x4001a08	      0x4c8d442404	                       lea r8, [rsp + 4]	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4001a0d	    0xc74424040000	                  mov dword [rsp + 4], 0	      1869	wrstabs.c	FUNCTION_41
0x4001a15	    0x64488b042528	                mov rax, qword fs:[0x28]	      1866	wrstabs.c	FUNCTION_41
0x4001a1e	      0x4889442408	                mov qword [rsp + 8], rax	      1866	wrstabs.c	FUNCTION_41
0x4001a23	            0x31c0	                            xor eax, eax	      1866	wrstabs.c	FUNCTION_41
0x4001a25	      0xe866e7ffff	          call sym.stab_get_struct_index	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4001a2a	          0x4889c6	                            mov rsi, rax	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4001a2d	            0x31c0	                            xor eax, eax	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4001a2f	          0x4885f6	                           test rsi, rsi	      1872	wrstabs.c	FUNCTION_41	IF_1
0x4001a32	            0x780c	                            js 0x4001a40	      1872	wrstabs.c	FUNCTION_41	IF_1
0x4001a34	        0x8b542404	                mov edx, dword [rsp + 4]	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x4001a38	          0x4889df	                            mov rdi, rbx	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x4001a3b	      0xe850ffffff	         call sym.stab_push_defined_type	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x4001a40	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1876	wrstabs.c	FUNCTION_41
0x4001a45	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1876	wrstabs.c	FUNCTION_41
0x4001a4e	            0x7506	                           jne 0x4001a56	      1876	wrstabs.c	FUNCTION_41
0x4001a50	        0x4883c410	                           add rsp, 0x10	      1876	wrstabs.c	FUNCTION_41
0x4001a54	              0x5b	                                 pop rbx	      1876	wrstabs.c	FUNCTION_41
0x4001a55	              0xc3	                                     ret	      1876	wrstabs.c	FUNCTION_41
0x4001a56	      0xe800000000	                          call 0x4001a5b	      1876	wrstabs.c	FUNCTION_41
write_stabs_in_sections_debugging_info	IF,5:FOR,1:WHILE,0:DO,0:functions,0:CALL,17:ELSE,0:SWITCH,0	139
0x40031e0	            0x4157	                                push r15	       466	wrstabs.c	FUNCTION_6
0x40031e2	            0x4156	                                push r14	       466	wrstabs.c	FUNCTION_6
0x40031e4	          0x4989d7	                            mov r15, rdx	       466	wrstabs.c	FUNCTION_6
0x40031e7	            0x4155	                                push r13	       466	wrstabs.c	FUNCTION_6
0x40031e9	            0x4154	                                push r12	       466	wrstabs.c	FUNCTION_6
0x40031eb	          0x4989ce	                            mov r14, rcx	       466	wrstabs.c	FUNCTION_6
0x40031ee	              0x55	                                push rbp	       466	wrstabs.c	FUNCTION_6
0x40031ef	              0x53	                                push rbx	       466	wrstabs.c	FUNCTION_6
0x40031f0	          0x4889fb	                            mov rbx, rdi	       466	wrstabs.c	FUNCTION_6
0x40031f3	          0x4889f5	                            mov rbp, rsi	       466	wrstabs.c	FUNCTION_6
0x40031f6	          0x4d89c4	                             mov r12, r8	       466	wrstabs.c	FUNCTION_6
0x40031f9	          0x4d89cd	                             mov r13, r9	       466	wrstabs.c	FUNCTION_6
0x40031fc	    0x4881ec280200	                          sub rsp, 0x228	       466	wrstabs.c	FUNCTION_6
0x4003203	        0x48893c24	                    mov qword [rsp], rdi	       471	wrstabs.c	FUNCTION_6
0x4003207	      0xbff4010000	                          mov edi, 0x1f4	       475	wrstabs.c	FUNCTION_6	CALL_1
0x400320c	    0x48c744241000	               mov qword [rsp + 0x10], 0	       473	wrstabs.c	FUNCTION_6
0x4003215	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	wrstabs.c	FUNCTION_6
0x400321e	    0x488984241802	            mov qword [rsp + 0x218], rax	       466	wrstabs.c	FUNCTION_6
0x4003226	            0x31c0	                            xor eax, eax	       466	wrstabs.c	FUNCTION_6
0x4003228	    0x48c7442418f4	          mov qword [rsp + 0x18], 0x1f4 	       474	wrstabs.c	FUNCTION_6
0x4003231	      0xe800000000	                          call 0x4003236	       475	wrstabs.c	FUNCTION_6	CALL_1
0x4003236	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400323b	      0xba30000000	                           mov edx, 0x30	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4003240	      0xbe00000000	                              mov esi, 0	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4003245	      0x4889442408	                mov qword [rsp + 8], rax	       475	wrstabs.c	FUNCTION_6	CALL_1
0x400324a	    0x48c744242000	               mov qword [rsp + 0x20], 0	       477	wrstabs.c	FUNCTION_6
0x4003253	    0x48c744242800	               mov qword [rsp + 0x28], 0	       478	wrstabs.c	FUNCTION_6
0x400325c	    0x48c744243001	               mov qword [rsp + 0x30], 1	       480	wrstabs.c	FUNCTION_6
0x4003265	      0xe800000000	                          call 0x400326a	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400326a	            0x85c0	                           test eax, eax	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400326c	            0x741b	                            je 0x4003289	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400326e	    0x488dbc24b801	                  lea rdi, [rsp + 0x1b8]	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4003276	      0xba30000000	                           mov edx, 0x30	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x400327b	      0xbe00000000	                              mov esi, 0	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4003280	      0xe800000000	                          call 0x4003285	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4003285	            0x85c0	                           test eax, eax	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4003287	            0x7547	                           jne 0x40032d0	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x4003289	      0xe800000000	                          call 0x400328e	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x400328e	            0x89c7	                            mov edi, eax	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x4003290	      0xe800000000	                          call 0x4003295	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x4003295	      0xbf00000000	                              mov edi, 0	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x400329a	          0x4889c6	                            mov rsi, rax	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x400329d	            0x31c0	                            xor eax, eax	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x400329f	      0xe800000000	                          call 0x40032a4	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032a4	            0x31c0	                            xor eax, eax	       489	wrstabs.c	FUNCTION_6	IF_1
0x40032a6	    0x488b8c241802	           mov rcx, qword [rsp + 0x218] 	       539	wrstabs.c	FUNCTION_6
0x40032ae	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       539	wrstabs.c	FUNCTION_6
0x40032b7	     0xf8573010000	                           jne 0x4003430	       539	wrstabs.c	FUNCTION_6
0x40032bd	    0x4881c4280200	                          add rsp, 0x228	       539	wrstabs.c	FUNCTION_6
0x40032c4	              0x5b	                                 pop rbx	       539	wrstabs.c	FUNCTION_6
0x40032c5	              0x5d	                                 pop rbp	       539	wrstabs.c	FUNCTION_6
0x40032c6	            0x415c	                                 pop r12	       539	wrstabs.c	FUNCTION_6
0x40032c8	            0x415d	                                 pop r13	       539	wrstabs.c	FUNCTION_6
0x40032ca	            0x415e	                                 pop r14	       539	wrstabs.c	FUNCTION_6
0x40032cc	            0x415f	                                 pop r15	       539	wrstabs.c	FUNCTION_6
0x40032ce	              0xc3	                                     ret	       539	wrstabs.c	FUNCTION_6
0x40032cf	              0x90	                                     nop	       539	wrstabs.c	FUNCTION_6
0x40032d0	      0x488d542470	                   lea rdx, [rsp + 0x70]	        90	string3.h	FUNCTION_74	CALL_6
0x40032d5	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_74	CALL_6
0x40032d7	      0xb929000000	                           mov ecx, 0x29	        90	string3.h	FUNCTION_74	CALL_6
0x40032dc	          0x4531c0	                            xor r8d, r8d	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x40032df	            0x31f6	                            xor esi, esi	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x40032e1	    0x48c744246000	               mov qword [rsp + 0x60], 0	       492	wrstabs.c	FUNCTION_6
0x40032ea	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_74	CALL_6
0x40032ed	            0x31d2	                            xor edx, edx	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x40032ef	    0x48c744246801	               mov qword [rsp + 0x68], 1	       493	wrstabs.c	FUNCTION_6
0x40032f8	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_74	CALL_6
0x40032fb	          0x4889e7	                            mov rdi, rsp	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x40032fe	    0x48c78424e001	mov qword [rsp + 0x1e0], 0xffffffffffffffff	       495	wrstabs.c	FUNCTION_6
0x400330a	    0x48c78424e801	mov qword [rsp + 0x1e8], 0xffffffffffffffff	       496	wrstabs.c	FUNCTION_6
0x4003316	    0x48c78424f001	              mov qword [rsp + 0x1f0], 0	       497	wrstabs.c	FUNCTION_6
0x4003322	    0xc78424f80100	              mov dword [rsp + 0x1f8], 0	       498	wrstabs.c	FUNCTION_6
0x400332d	    0x48c784240002	              mov qword [rsp + 0x200], 0	       499	wrstabs.c	FUNCTION_6
0x4003339	    0x48c784240802	mov qword [rsp + 0x208], 0xffffffffffffffff	       500	wrstabs.c	FUNCTION_6
0x4003345	      0xe866cfffff	              call sym.stab_write_symbol	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400334a	            0x85c0	                           test eax, eax	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400334c	            0x750a	                           jne 0x4003358	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400334e	            0x31c0	                            xor eax, eax	       504	wrstabs.c	FUNCTION_6	IF_2
0x4003350	      0xe951ffffff	                           jmp 0x40032a6	       504	wrstabs.c	FUNCTION_6	IF_2
0x4003355	           0xf1f00	                         nop dword [rax]	       504	wrstabs.c	FUNCTION_6	IF_2
0x4003358	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       507	wrstabs.c	FUNCTION_6
0x400335d	          0x4c8b03	                     mov r8, qword [rbx]	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003360	            0x31c9	                            xor ecx, ecx	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003362	            0x31d2	                            xor edx, edx	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003364	      0xbe64000000	                           mov esi, 0x64	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003369	          0x4889e7	                            mov rdi, rsp	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400336c	    0x48898424e001	            mov qword [rsp + 0x1e0], rax	       507	wrstabs.c	FUNCTION_6
0x4003374	      0xe837cfffff	              call sym.stab_write_symbol	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003379	            0x85c0	                           test eax, eax	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400337b	            0x74d1	                            je 0x400334e	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400337d	          0x4889e2	                            mov rdx, rsp	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x4003380	      0xbe00000000	                              mov esi, 0	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x4003385	          0x4889ef	                            mov rdi, rbp	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x4003388	      0xe800000000	                          call 0x400338d	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x400338d	            0x85c0	                           test eax, eax	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x400338f	            0x74bd	                            je 0x400334e	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x4003391	    0x4883bc240802	cmp qword [rsp + 0x208], 0xffffffffffffffff	       514	wrstabs.c	FUNCTION_6	CALL_12
0x400339a	     0xf8595000000	                           jne 0x4003435	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033a0	    0x488b8c24f001	           mov rcx, qword [rsp + 0x1f0] 	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033a8	          0x4531c0	                            xor r8d, r8d	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033ab	            0x31d2	                            xor edx, edx	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033ad	      0xbe64000000	                           mov esi, 0x64	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033b2	          0x4889e7	                            mov rdi, rsp	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033b5	      0xe8f6ceffff	              call sym.stab_write_symbol	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033ba	            0x85c0	                           test eax, eax	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033bc	            0x7490	                            je 0x400334e	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033be	      0x488b442408	                mov rax, qword [rsp + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x40033c3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       522	wrstabs.c	FUNCTION_6	CALL_14
0x40033c8	        0x488d7008	                      lea rsi, [rax + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x40033cc	        0x488b4308	                mov rax, qword [rbx + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x40033d0	          0xff5048	                 call qword [rax + 0x48]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x40033d3	      0x488b442408	                mov rax, qword [rsp + 8]	       524	wrstabs.c	FUNCTION_6
0x40033d8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       527	wrstabs.c	FUNCTION_6
0x40033dd	          0x498907	                    mov qword [r15], rax	       524	wrstabs.c	FUNCTION_6
0x40033e0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       525	wrstabs.c	FUNCTION_6
0x40033e5	          0x498906	                    mov qword [r14], rax	       525	wrstabs.c	FUNCTION_6
0x40033e8	        0x49897d00	                    mov qword [r13], rdi	       527	wrstabs.c	FUNCTION_6
0x40033ec	      0xe800000000	                          call 0x40033f1	       528	wrstabs.c	FUNCTION_6	CALL_15
0x40033f1	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       532	wrstabs.c	FUNCTION_6	FOR_1
0x40033f6	        0x49890424	                    mov qword [r12], rax	       528	wrstabs.c	FUNCTION_6	CALL_15
0x40033fa	        0x488d7801	                      lea rdi, [rax + 1]	       531	wrstabs.c	FUNCTION_6
0x40033fe	          0xc60000	                       mov byte [rax], 0	       531	wrstabs.c	FUNCTION_6
0x4003401	          0x4885db	                           test rbx, rbx	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4003404	            0x7420	                            je 0x4003426	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4003406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4003410	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_77	CALL_3
0x4003414	      0xe800000000	                          call 0x4003419	       110	string3.h	FUNCTION_77	CALL_3
0x4003419	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       532	wrstabs.c	FUNCTION_6	FOR_1
0x400341d	        0x488d7801	                      lea rdi, [rax + 1]	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x4003421	          0x4885db	                           test rbx, rbx	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4003424	            0x75ea	                           jne 0x4003410	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4003426	      0xb801000000	                              mov eax, 1	       538	wrstabs.c	FUNCTION_6
0x400342b	      0xe976feffff	                           jmp 0x40032a6	       538	wrstabs.c	FUNCTION_6
0x4003430	      0xe800000000	                          call 0x4003435	       539	wrstabs.c	FUNCTION_6
0x4003435	      0xb900000000	                              mov ecx, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x400343a	      0xba02020000	                          mov edx, 0x202	       514	wrstabs.c	FUNCTION_6	CALL_12
0x400343f	      0xbe00000000	                              mov esi, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x4003444	      0xbf00000000	                              mov edi, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x4003449	      0xe800000000	                      call str.wrstabs.c	       514	wrstabs.c	FUNCTION_6	CALL_12
stab_float_constant	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,4:ELSE,0:SWITCH,0	36
0x4000530	            0x4154	                                push r12	      1973	wrstabs.c	FUNCTION_45
0x4000532	              0x55	                                push rbp	      1973	wrstabs.c	FUNCTION_45
0x4000533	          0x4989fc	                            mov r12, rdi	      1973	wrstabs.c	FUNCTION_45
0x4000536	              0x53	                                push rbx	      1973	wrstabs.c	FUNCTION_45
0x4000537	          0x4889f7	                            mov rdi, rsi	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400053a	          0x4889f5	                            mov rbp, rsi	      1973	wrstabs.c	FUNCTION_45
0x400053d	        0x4883ec10	                           sub rsp, 0x10	      1973	wrstabs.c	FUNCTION_45
0x4000541	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      1973	wrstabs.c	FUNCTION_45
0x4000547	      0xe800000000	                          call 0x400054c	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400054c	        0x488d7814	                   lea rdi, [rax + 0x14]	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4000550	      0xe800000000	                          call 0x4000555	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4000555	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x400055b	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400055e	          0x4889c3	                            mov rbx, rax	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4000561	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000564	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000569	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000570	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000575	      0xb801000000	                              mov eax, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400057a	      0xe800000000	                          call 0x400057f	        33	stdio2.h	FUNCTION_54	CALL_1
0x400057f	            0x31c9	                            xor ecx, ecx	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x4000581	            0x31d2	                            xor edx, edx	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x4000583	          0x4989d8	                             mov r8, rbx	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x4000586	      0xbe80000000	                           mov esi, 0x80	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x400058b	          0x4c89e7	                            mov rdi, r12	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x400058e	      0xe81dfdffff	              call sym.stab_write_symbol	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x4000593	            0x85c0	                           test eax, eax	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x4000595	            0x740d	                            je 0x40005a4	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x4000597	          0x4889df	                            mov rdi, rbx	      1983	wrstabs.c	FUNCTION_45	CALL_4
0x400059a	      0xe800000000	                          call 0x400059f	      1983	wrstabs.c	FUNCTION_45	CALL_4
0x400059f	      0xb801000000	                              mov eax, 1	      1985	wrstabs.c	FUNCTION_45
0x40005a4	        0x4883c410	                           add rsp, 0x10	      1986	wrstabs.c	FUNCTION_45
0x40005a8	              0x5b	                                 pop rbx	      1986	wrstabs.c	FUNCTION_45
0x40005a9	              0x5d	                                 pop rbp	      1986	wrstabs.c	FUNCTION_45
0x40005aa	            0x415c	                                 pop r12	      1986	wrstabs.c	FUNCTION_45
0x40005ac	              0xc3	                                     ret	      1986	wrstabs.c	FUNCTION_45
stab_typed_constant	IF,1:FOR,0:WHILE,0:DO,0:functions,0:CALL,7:ELSE,0:SWITCH,0	50
0x40014f0	            0x4156	                                push r14	      1992	wrstabs.c	FUNCTION_46
0x40014f2	            0x4155	                                push r13	      1992	wrstabs.c	FUNCTION_46
0x40014f4	          0x4989f5	                            mov r13, rsi	      1992	wrstabs.c	FUNCTION_46
0x40014f7	            0x4154	                                push r12	      1992	wrstabs.c	FUNCTION_46
0x40014f9	              0x55	                                push rbp	      1992	wrstabs.c	FUNCTION_46
0x40014fa	          0x4989fc	                            mov r12, rdi	      1992	wrstabs.c	FUNCTION_46
0x40014fd	              0x53	                                push rbx	      1992	wrstabs.c	FUNCTION_46
0x40014fe	        0x4883c760	                           add rdi, 0x60	      1992	wrstabs.c	FUNCTION_46
0x4001502	          0x4989d6	                            mov r14, rdx	      1992	wrstabs.c	FUNCTION_46
0x4001505	      0xe8b6f3ffff	           call sym.stab_pop_type.isra.1	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x400150a	          0x4c89ef	                            mov rdi, r13	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x400150d	          0x4889c3	                            mov rbx, rax	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x4001510	      0xe800000000	                          call 0x4001515	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x4001515	          0x4889df	                            mov rdi, rbx	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x4001518	          0x4889c5	                            mov rbp, rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x400151b	      0xe800000000	                          call 0x4001520	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x4001520	      0x488d7c0514	            lea rdi, [rbp + rax + 0x14] 	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x4001525	      0xe800000000	                          call 0x400152a	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x400152a	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x400152e	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001531	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001534	            0x4156	                                push r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001536	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400153b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001542	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001547	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400154a	          0x4889c5	                            mov rbp, rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x400154d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400154f	      0xe800000000	                          call 0x4001554	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001554	          0x4889df	                            mov rdi, rbx	      2000	wrstabs.c	FUNCTION_46	CALL_5
0x4001557	      0xe800000000	                          call 0x400155c	      2000	wrstabs.c	FUNCTION_46	CALL_5
0x400155c	            0x31c9	                            xor ecx, ecx	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x400155e	            0x31d2	                            xor edx, edx	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001560	          0x4989e8	                             mov r8, rbp	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001563	      0xbe80000000	                           mov esi, 0x80	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001568	          0x4c89e7	                            mov rdi, r12	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x400156b	      0xe840edffff	              call sym.stab_write_symbol	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001570	            0x85c0	                           test eax, eax	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001572	              0x5a	                                 pop rdx	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001573	              0x59	                                 pop rcx	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001574	            0x740d	                            je 0x4001583	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4001576	          0x4889ef	                            mov rdi, rbp	      2005	wrstabs.c	FUNCTION_46	CALL_7
0x4001579	      0xe800000000	                          call 0x400157e	      2005	wrstabs.c	FUNCTION_46	CALL_7
0x400157e	      0xb801000000	                              mov eax, 1	      2007	wrstabs.c	FUNCTION_46
0x4001583	              0x5b	                                 pop rbx	      2008	wrstabs.c	FUNCTION_46
0x4001584	              0x5d	                                 pop rbp	      2008	wrstabs.c	FUNCTION_46
0x4001585	            0x415c	                                 pop r12	      2008	wrstabs.c	FUNCTION_46
0x4001587	            0x415d	                                 pop r13	      2008	wrstabs.c	FUNCTION_46
0x4001589	            0x415e	                                 pop r14	      2008	wrstabs.c	FUNCTION_46
0x400158b	              0xc3	                                     ret	      2008	wrstabs.c	FUNCTION_46
stab_class_static_method_variant	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	9
0x4000f80	        0x4883ec08	                              sub rsp, 8	      1750	wrstabs.c	FUNCTION_37
0x4000f84	          0x4589c1	                            mov r9d, r8d	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4000f87	          0x4189c8	                            mov r8d, ecx	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4000f8a	            0x6a00	                                  push 0	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4000f8c	            0x6a00	                                  push 0	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4000f8e	      0xb901000000	                              mov ecx, 1	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4000f93	      0xe858fcffff	          call sym.stab_class_method_var	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4000f98	        0x4883c418	                           add rsp, 0x18	      1755	wrstabs.c	FUNCTION_37
0x4000f9c	              0xc3	                                     ret	      1755	wrstabs.c	FUNCTION_37
stab_reference_type	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	5
0x40020c0	    0x488d8f980100	                  lea rcx, [rdi + 0x198]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40020c7	    0x4c8d87a00100	                   lea r8, [rdi + 0x1a0]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40020ce	      0xba04000000	                              mov edx, 4	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40020d3	      0xbe26000000	                           mov esi, 0x26	       982	wrstabs.c	FUNCTION_19	CALL_1
0x40020d8	      0xe933fdffff	                jmp sym.stab_modify_type	       982	wrstabs.c	FUNCTION_19	CALL_1
stab_const_type	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,1:ELSE,0:SWITCH,0	6
0x40020a0	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020a4	          0x4531c0	                            xor r8d, r8d	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020a7	            0x31c9	                            xor ecx, ecx	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020a9	      0xbe6b000000	                           mov esi, 0x6b	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020ae	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x40020b1	      0xe95afdffff	                jmp sym.stab_modify_type	      1241	wrstabs.c	FUNCTION_25	CALL_1
stab_set_type	IF,2:FOR,0:WHILE,0:DO,0:functions,0:CALL,7:ELSE,1:SWITCH,0	67
0x40022d0	            0x4157	                                push r15	      1070	wrstabs.c	FUNCTION_22
0x40022d2	            0x4156	                                push r14	      1070	wrstabs.c	FUNCTION_22
0x40022d4	          0x4989ff	                            mov r15, rdi	      1070	wrstabs.c	FUNCTION_22
0x40022d7	            0x4155	                                push r13	      1070	wrstabs.c	FUNCTION_22
0x40022d9	            0x4154	                                push r12	      1070	wrstabs.c	FUNCTION_22
0x40022db	        0x4c8d6760	                   lea r12, [rdi + 0x60]	      1070	wrstabs.c	FUNCTION_22
0x40022df	              0x55	                                push rbp	      1070	wrstabs.c	FUNCTION_22
0x40022e0	              0x53	                                push rbx	      1070	wrstabs.c	FUNCTION_22
0x40022e1	          0x4189f5	                           mov r13d, esi	      1070	wrstabs.c	FUNCTION_22
0x40022e4	        0x4883ec08	                              sub rsp, 8	      1070	wrstabs.c	FUNCTION_22
0x40022e8	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1076	wrstabs.c	FUNCTION_22
0x40022ec	          0x4c89e7	                            mov rdi, r12	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x40022ef	        0x448b701c	           mov r14d, dword [rax + 0x1c] 	      1076	wrstabs.c	FUNCTION_22
0x40022f3	      0xe8c8e5ffff	           call sym.stab_pop_type.isra.1	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x40022f8	          0x4889c7	                            mov rdi, rax	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x40022fb	          0x4889c5	                            mov rbp, rax	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x40022fe	      0xe800000000	                          call 0x4002303	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4002303	        0x488d781e	                   lea rdi, [rax + 0x1e]	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4002307	      0xe800000000	                          call 0x400230c	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x400230c	          0x4585ed	                         test r13d, r13d	      1081	wrstabs.c	FUNCTION_22	IF_1
0x400230f	          0x4889c3	                            mov rbx, rax	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4002312	            0x756c	                           jne 0x4002380	      1081	wrstabs.c	FUNCTION_22	IF_1
0x4002314	          0xc60000	                       mov byte [rax], 0	      1083	wrstabs.c	FUNCTION_22	IF_1
0x4002317	          0x4531ed	                          xor r13d, r13d	      1084	wrstabs.c	FUNCTION_22	IF_1
0x400231a	          0x4889df	                            mov rdi, rbx	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x400231d	      0xe800000000	                          call 0x4002322	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4002322	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002326	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002329	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400232e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002335	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400233a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400233c	      0xe800000000	                          call 0x4002341	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002341	          0x4889ef	                            mov rdi, rbp	      1097	wrstabs.c	FUNCTION_22	CALL_5
0x4002344	      0xe800000000	                          call 0x4002349	      1097	wrstabs.c	FUNCTION_22	CALL_5
0x4002349	          0x4531c0	                            xor r8d, r8d	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x400234c	          0x4489f1	                           mov ecx, r14d	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x400234f	          0x4c89ea	                            mov rdx, r13	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4002352	          0x4889de	                            mov rsi, rbx	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4002355	          0x4c89e7	                            mov rdi, r12	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4002358	      0xe8a3f5ffff	        call sym.stab_push_string.isra.5	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x400235d	            0x85c0	                           test eax, eax	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x400235f	            0x740d	                            je 0x400236e	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4002361	          0x4889df	                            mov rdi, rbx	      1102	wrstabs.c	FUNCTION_22	CALL_7
0x4002364	      0xe800000000	                          call 0x4002369	      1102	wrstabs.c	FUNCTION_22	CALL_7
0x4002369	      0xb801000000	                              mov eax, 1	      1104	wrstabs.c	FUNCTION_22
0x400236e	        0x4883c408	                              add rsp, 8	      1105	wrstabs.c	FUNCTION_22
0x4002372	              0x5b	                                 pop rbx	      1105	wrstabs.c	FUNCTION_22
0x4002373	              0x5d	                                 pop rbp	      1105	wrstabs.c	FUNCTION_22
0x4002374	            0x415c	                                 pop r12	      1105	wrstabs.c	FUNCTION_22
0x4002376	            0x415d	                                 pop r13	      1105	wrstabs.c	FUNCTION_22
0x4002378	            0x415e	                                 pop r14	      1105	wrstabs.c	FUNCTION_22
0x400237a	            0x415f	                                 pop r15	      1105	wrstabs.c	FUNCTION_22
0x400237c	              0xc3	                                     ret	      1105	wrstabs.c	FUNCTION_22
0x400237d	           0xf1f00	                         nop dword [rax]	      1105	wrstabs.c	FUNCTION_22
0x4002380	        0x4d8b6f68	            mov r13, qword [r15 + 0x68] 	      1090	wrstabs.c	FUNCTION_22	ELSE_1
0x4002384	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002389	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002390	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002395	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002398	    0x41be01000000	                             mov r14d, 1	      1092	wrstabs.c	FUNCTION_22	ELSE_1
0x400239e	        0x498d4501	                      lea rax, [r13 + 1]	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x40023a2	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40023a5	        0x49894768	             mov qword [r15 + 0x68], rax	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x40023a9	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40023ab	      0xe800000000	                          call 0x40023b0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40023b0	      0xe965ffffff	                           jmp 0x400231a	        33	stdio2.h	FUNCTION_54	CALL_1
stab_function_type	IF,2:FOR,1:WHILE,0:DO,0:functions,0:CALL,9:ELSE,1:SWITCH,0	78
0x40020e0	            0x4157	                                push r15	       942	wrstabs.c	FUNCTION_18
0x40020e2	            0x4156	                                push r14	       942	wrstabs.c	FUNCTION_18
0x40020e4	        0x4c8d7760	                   lea r14, [rdi + 0x60]	       942	wrstabs.c	FUNCTION_18
0x40020e8	            0x4155	                                push r13	       942	wrstabs.c	FUNCTION_18
0x40020ea	            0x4154	                                push r12	       942	wrstabs.c	FUNCTION_18
0x40020ec	          0x4189f5	                           mov r13d, esi	       942	wrstabs.c	FUNCTION_18
0x40020ef	              0x55	                                push rbp	       942	wrstabs.c	FUNCTION_18
0x40020f0	              0x53	                                push rbx	       942	wrstabs.c	FUNCTION_18
0x40020f1	            0x31db	                            xor ebx, ebx	       942	wrstabs.c	FUNCTION_18
0x40020f3	          0x4989fc	                            mov r12, rdi	       942	wrstabs.c	FUNCTION_18
0x40020f6	        0x4883ec08	                              sub rsp, 8	       942	wrstabs.c	FUNCTION_18
0x40020fa	            0x85f6	                           test esi, esi	       949	wrstabs.c	FUNCTION_18	FOR_1
0x40020fc	            0x7f1f	                            jg 0x400211d	       949	wrstabs.c	FUNCTION_18	FOR_1
0x40020fe	      0xe993000000	                           jmp 0x4002196	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002103	       0xf1f440000	                   nop dword [rax + rax]	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002108	      0xe8b3e7ffff	           call sym.stab_pop_type.isra.1	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x400210d	          0x83c301	                              add ebx, 1	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002110	          0x4889c7	                            mov rdi, rax	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002113	      0xe800000000	                          call 0x4002118	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002118	          0x4139dd	                           cmp r13d, ebx	       949	wrstabs.c	FUNCTION_18	FOR_1
0x400211b	            0x7479	                            je 0x4002196	       949	wrstabs.c	FUNCTION_18	FOR_1
0x400211d	      0x498b442460	            mov rax, qword [r12 + 0x60] 	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x4002122	          0x4c89f7	                            mov rdi, r14	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002125	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x4002128	            0x85c0	                           test eax, eax	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x400212a	            0x74dc	                            je 0x4002108	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x400212c	      0xe88fe7ffff	           call sym.stab_pop_type.isra.1	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x4002131	          0x4889c7	                            mov rdi, rax	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002134	          0x4889c5	                            mov rbp, rax	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x4002137	      0xe800000000	                          call 0x400213c	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x400213c	        0x488d7803	                      lea rdi, [rax + 3]	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002140	      0xe800000000	                          call 0x4002145	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002145	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002148	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400214d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002154	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002159	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400215c	          0x4989c7	                            mov r15, rax	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x400215f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002161	      0xe800000000	                          call 0x4002166	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002166	          0x4889ef	                            mov rdi, rbp	       961	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x4002169	      0xe800000000	                          call 0x400216e	       961	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x400216e	            0x31c9	                            xor ecx, ecx	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002170	            0x31d2	                            xor edx, edx	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002172	          0x4d89f8	                             mov r8, r15	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002175	      0xbe80000000	                           mov esi, 0x80	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x400217a	          0x4c89e7	                            mov rdi, r12	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x400217d	      0xe82ee1ffff	              call sym.stab_write_symbol	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002182	            0x85c0	                           test eax, eax	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002184	            0x7442	                            je 0x40021c8	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002186	          0x4c89ff	                            mov rdi, r15	       966	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002189	          0x83c301	                              add ebx, 1	       949	wrstabs.c	FUNCTION_18	FOR_1
0x400218c	      0xe800000000	                          call 0x4002191	       966	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002191	          0x4139dd	                           cmp r13d, ebx	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002194	            0x7587	                           jne 0x400211d	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002196	        0x4883c408	                              add rsp, 8	       972	wrstabs.c	FUNCTION_18
0x400219a	    0x498d8c248801	                  lea rcx, [r12 + 0x188]	       970	wrstabs.c	FUNCTION_18	CALL_9
0x40021a2	    0x4d8d84249001	                   lea r8, [r12 + 0x190]	       970	wrstabs.c	FUNCTION_18	CALL_9
0x40021aa	              0x5b	                                 pop rbx	       972	wrstabs.c	FUNCTION_18
0x40021ab	          0x4c89e7	                            mov rdi, r12	       970	wrstabs.c	FUNCTION_18	CALL_9
0x40021ae	            0x31d2	                            xor edx, edx	       970	wrstabs.c	FUNCTION_18	CALL_9
0x40021b0	      0xbe66000000	                           mov esi, 0x66	       970	wrstabs.c	FUNCTION_18	CALL_9
0x40021b5	              0x5d	                                 pop rbp	       972	wrstabs.c	FUNCTION_18
0x40021b6	            0x415c	                                 pop r12	       972	wrstabs.c	FUNCTION_18
0x40021b8	            0x415d	                                 pop r13	       972	wrstabs.c	FUNCTION_18
0x40021ba	            0x415e	                                 pop r14	       972	wrstabs.c	FUNCTION_18
0x40021bc	            0x415f	                                 pop r15	       972	wrstabs.c	FUNCTION_18
0x40021be	      0xe94dfcffff	                jmp sym.stab_modify_type	       970	wrstabs.c	FUNCTION_18	CALL_9
0x40021c3	       0xf1f440000	                   nop dword [rax + rax]	       970	wrstabs.c	FUNCTION_18	CALL_9
0x40021c8	        0x4883c408	                              add rsp, 8	       972	wrstabs.c	FUNCTION_18
0x40021cc	            0x31c0	                            xor eax, eax	       972	wrstabs.c	FUNCTION_18
0x40021ce	              0x5b	                                 pop rbx	       972	wrstabs.c	FUNCTION_18
0x40021cf	              0x5d	                                 pop rbp	       972	wrstabs.c	FUNCTION_18
0x40021d0	            0x415c	                                 pop r12	       972	wrstabs.c	FUNCTION_18
0x40021d2	            0x415d	                                 pop r13	       972	wrstabs.c	FUNCTION_18
0x40021d4	            0x415e	                                 pop r14	       972	wrstabs.c	FUNCTION_18
0x40021d6	            0x415f	                                 pop r15	       972	wrstabs.c	FUNCTION_18
0x40021d8	              0xc3	                                     ret	       972	wrstabs.c	FUNCTION_18
stab_variable	IF,2:FOR,0:WHILE,0:DO,0:functions,0:CALL,12:ELSE,0:SWITCH,1	102
0x4001350	            0x4157	                                push r15	      2015	wrstabs.c	FUNCTION_47
0x4001352	            0x4156	                                push r14	      2015	wrstabs.c	FUNCTION_47
0x4001354	          0x4989ce	                            mov r14, rcx	      2015	wrstabs.c	FUNCTION_47
0x4001357	            0x4155	                                push r13	      2015	wrstabs.c	FUNCTION_47
0x4001359	            0x4154	                                push r12	      2015	wrstabs.c	FUNCTION_47
0x400135b	          0x4189d4	                           mov r12d, edx	      2015	wrstabs.c	FUNCTION_47
0x400135e	              0x55	                                push rbp	      2015	wrstabs.c	FUNCTION_47
0x400135f	              0x53	                                push rbx	      2015	wrstabs.c	FUNCTION_47
0x4001360	          0x4889fd	                            mov rbp, rdi	      2015	wrstabs.c	FUNCTION_47
0x4001363	        0x4883c760	                           add rdi, 0x60	      2015	wrstabs.c	FUNCTION_47
0x4001367	          0x4989f5	                            mov r13, rsi	      2015	wrstabs.c	FUNCTION_47
0x400136a	        0x4883ec18	                           sub rsp, 0x18	      2015	wrstabs.c	FUNCTION_47
0x400136e	      0xe84df5ffff	           call sym.stab_pop_type.isra.1	      2021	wrstabs.c	FUNCTION_47	CALL_1
0x4001373	        0x4183fc05	                             cmp r12d, 5	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001377	     0xf876b010000	                            ja 0x40014e8	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x400137d	          0x4889c3	                            mov rbx, rax	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001380	    0x42ff24e50000	                       jmp qword [r12*8]	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001388	     0xf1f84000000	                   nop dword [rax + rax]	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001390	    0x41bf00000000	                             mov r15d, 0	      2030	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001396	    0xc74424042000	               mov dword [rsp + 4], 0x20	      2029	wrstabs.c	FUNCTION_47	SWITCH_1
0x400139e	          0x4c89ef	                            mov rdi, r13	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013a1	      0xe800000000	                          call 0x40013a6	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013a6	          0x4889df	                            mov rdi, rbx	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013a9	          0x4989c4	                            mov r12, rax	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013ac	      0xe800000000	                          call 0x40013b1	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013b1	      0x498d7c0403	                lea rdi, [r12 + rax + 3]	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013b6	      0xe800000000	                          call 0x40013bb	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013bb	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013bf	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013c2	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013c5	              0x53	                                push rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013c6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013cb	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013d2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013d7	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013da	          0x4989c4	                            mov r12, rax	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40013dd	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013df	      0xe800000000	                          call 0x40013e4	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013e4	          0x4889df	                            mov rdi, rbx	      2070	wrstabs.c	FUNCTION_47	CALL_10
0x40013e7	      0xe800000000	                          call 0x40013ec	      2070	wrstabs.c	FUNCTION_47	CALL_10
0x40013ec	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x40013f0	            0x31d2	                            xor edx, edx	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x40013f2	          0x4c89f1	                            mov rcx, r14	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x40013f5	          0x4d89e0	                             mov r8, r12	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x40013f8	          0x4889ef	                            mov rdi, rbp	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x40013fb	      0xe8b0eeffff	              call sym.stab_write_symbol	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4001400	            0x85c0	                           test eax, eax	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4001402	              0x5a	                                 pop rdx	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4001403	              0x59	                                 pop rcx	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4001404	            0x740d	                            je 0x4001413	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4001406	          0x4c89e7	                            mov rdi, r12	      2075	wrstabs.c	FUNCTION_47	CALL_12
0x4001409	      0xe800000000	                          call 0x400140e	      2075	wrstabs.c	FUNCTION_47	CALL_12
0x400140e	      0xb801000000	                              mov eax, 1	      2077	wrstabs.c	FUNCTION_47
0x4001413	        0x4883c418	                           add rsp, 0x18	      2078	wrstabs.c	FUNCTION_47
0x4001417	              0x5b	                                 pop rbx	      2078	wrstabs.c	FUNCTION_47
0x4001418	              0x5d	                                 pop rbp	      2078	wrstabs.c	FUNCTION_47
0x4001419	            0x415c	                                 pop r12	      2078	wrstabs.c	FUNCTION_47
0x400141b	            0x415d	                                 pop r13	      2078	wrstabs.c	FUNCTION_47
0x400141d	            0x415e	                                 pop r14	      2078	wrstabs.c	FUNCTION_47
0x400141f	            0x415f	                                 pop r15	      2078	wrstabs.c	FUNCTION_47
0x4001421	              0xc3	                                     ret	      2078	wrstabs.c	FUNCTION_47
0x4001422	    0x660f1f440000	                    nop word [rax + rax]	      2078	wrstabs.c	FUNCTION_47
0x4001428	    0x41bf00000000	                             mov r15d, 0	      2035	wrstabs.c	FUNCTION_47	SWITCH_1
0x400142e	    0xc74424042600	               mov dword [rsp + 4], 0x26	      2034	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001436	      0xe963ffffff	                           jmp 0x400139e	      2034	wrstabs.c	FUNCTION_47	SWITCH_1
0x400143b	       0xf1f440000	                   nop dword [rax + rax]	      2034	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001440	    0x41bf00000000	                             mov r15d, 0	      2040	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001446	    0xc74424042600	               mov dword [rsp + 4], 0x26	      2039	wrstabs.c	FUNCTION_47	SWITCH_1
0x400144e	      0xe94bffffff	                           jmp 0x400139e	      2041	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001453	       0xf1f440000	                   nop dword [rax + rax]	      2041	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001458	           0xfb600	                   movzx eax, byte [rax]	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x400145b	    0x41bf00000000	                             mov r15d, 0	      2045	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001461	    0xc74424048000	               mov dword [rsp + 4], 0x80	      2044	wrstabs.c	FUNCTION_47	SWITCH_1
0x4001469	    0xf68400000000	                test byte [rax + rax], 4	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4001471	     0xf8527ffffff	                           jne 0x400139e	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4001477	        0x4c8b4568	              mov r8, qword [rbp + 0x68]	      2053	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x400147b	          0x4889df	                            mov rdi, rbx	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x400147e	        0x498d4001	                       lea rax, [r8 + 1]	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4001482	      0x4c89442408	                 mov qword [rsp + 8], r8	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4001487	        0x48894568	            mov qword [rbp + 0x68], rax 	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x400148b	      0xe800000000	                          call 0x4001490	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4001490	        0x488d7814	                   lea rdi, [rax + 0x14]	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4001494	      0xe800000000	                          call 0x4001499	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4001499	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400149e	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40014a1	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40014a4	          0x4989c4	                            mov r12, rax	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x40014a7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40014ac	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40014b3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40014b8	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40014ba	      0xe800000000	                          call 0x40014bf	        33	stdio2.h	FUNCTION_54	CALL_1
0x40014bf	          0x4889df	                            mov rdi, rbx	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x40014c2	          0x4c89e3	                            mov rbx, r12	      2058	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x40014c5	      0xe800000000	                          call 0x40014ca	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x40014ca	      0xe9cffeffff	                           jmp 0x400139e	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x40014cf	              0x90	                                     nop	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x40014d0	    0x41bf00000000	                             mov r15d, 0	      2064	wrstabs.c	FUNCTION_47	SWITCH_1
0x40014d6	    0xc74424044000	               mov dword [rsp + 4], 0x40	      2063	wrstabs.c	FUNCTION_47	SWITCH_1
0x40014de	      0xe9bbfeffff	                           jmp 0x400139e	      2065	wrstabs.c	FUNCTION_47	SWITCH_1
0x40014e3	       0xf1f440000	                   nop dword [rax + rax]	      2065	wrstabs.c	FUNCTION_47	SWITCH_1
0x40014e8	      0xe800000000	                          call 0x40014ed	      2026	wrstabs.c	FUNCTION_47	SWITCH_1	CALL_2
stab_end_function	IF,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,0:ELSE,0:SWITCH,0	2
0x4000040	      0xb801000000	                              mov eax, 1	      2248	wrstabs.c	FUNCTION_52
0x4000045	              0xc3	                                     ret	      2248	wrstabs.c	FUNCTION_52
stab_write_symbol	IF,5:FOR,0:WHILE,0:DO,0:functions,0:CALL,12:ELSE,3:SWITCH,0	110
0x40002b0	            0x4157	                                push r15	       340	wrstabs.c	FUNCTION_2
0x40002b2	            0x4156	                                push r14	       340	wrstabs.c	FUNCTION_2
0x40002b4	          0x4189f6	                           mov r14d, esi	       340	wrstabs.c	FUNCTION_2
0x40002b7	            0x4155	                                push r13	       340	wrstabs.c	FUNCTION_2
0x40002b9	            0x4154	                                push r12	       340	wrstabs.c	FUNCTION_2
0x40002bb	          0x4989cd	                            mov r13, rcx	       340	wrstabs.c	FUNCTION_2
0x40002be	              0x55	                                push rbp	       340	wrstabs.c	FUNCTION_2
0x40002bf	              0x53	                                push rbx	       340	wrstabs.c	FUNCTION_2
0x40002c0	          0x4189d4	                           mov r12d, edx	       340	wrstabs.c	FUNCTION_2
0x40002c3	          0x4889fb	                            mov rbx, rdi	       340	wrstabs.c	FUNCTION_2
0x40002c6	        0x4883ec28	                           sub rsp, 0x28	       340	wrstabs.c	FUNCTION_2
0x40002ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       340	wrstabs.c	FUNCTION_2
0x40002d3	      0x4889442418	             mov qword [rsp + 0x18], rax	       340	wrstabs.c	FUNCTION_2
0x40002d8	            0x31c0	                            xor eax, eax	       340	wrstabs.c	FUNCTION_2
0x40002da	          0x4d85c0	                             test r8, r8	       344	wrstabs.c	FUNCTION_2	IF_1
0x40002dd	     0xf841d010000	                            je 0x4000400	       344	wrstabs.c	FUNCTION_2	IF_1
0x40002e3	        0x488d7f38	                   lea rdi, [rdi + 0x38]	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x40002e7	      0xb901000000	                              mov ecx, 1	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x40002ec	      0xba01000000	                              mov edx, 1	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x40002f1	          0x4c89c6	                             mov rsi, r8	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x40002f4	          0x4d89c7	                             mov r15, r8	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x40002f7	      0xe800000000	                          call 0x40002fc	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x40002fc	          0x4885c0	                           test rax, rax	       351	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x40002ff	     0xf841b010000	                            je 0x4000420	       351	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x4000305	        0x488b6820	            mov rbp, qword [rax + 0x20] 	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000309	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x400030d	     0xf84b5000000	                            je 0x40003c8	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x4000313	          0x488b03	                    mov rax, qword [rbx]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000316	          0x4889e6	                            mov rsi, rsp	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000319	          0x4889ef	                            mov rdi, rbp	       373	wrstabs.c	FUNCTION_2	CALL_6
0x400031c	        0x488b4008	                mov rax, qword [rax + 8]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000320	          0xff5048	                 call qword [rax + 0x48]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4000323	          0x488b03	                    mov rax, qword [rbx]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4000326	      0x488d742406	                      lea rsi, [rsp + 6]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400032b	          0x4963fc	                        movsxd rdi, r12d	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400032e	      0x4488742404	                mov byte [rsp + 4], r14b	       374	wrstabs.c	FUNCTION_2	CALL_7
0x4000333	      0xc644240500	                   mov byte [rsp + 5], 0	       375	wrstabs.c	FUNCTION_2	CALL_8
0x4000338	        0x488b4008	                mov rax, qword [rax + 8]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400033c	          0xff5060	                 call qword [rax + 0x60]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400033f	          0x488b03	                    mov rax, qword [rbx]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000342	      0x488d742408	                      lea rsi, [rsp + 8]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000347	          0x4c89ef	                            mov rdi, r13	       377	wrstabs.c	FUNCTION_2	CALL_10
0x400034a	        0x488b4008	                mov rax, qword [rax + 8]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x400034e	          0xff5048	                 call qword [rax + 0x48]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4000351	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000355	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000359	        0x488d420c	                    lea rax, [rdx + 0xc]	       379	wrstabs.c	FUNCTION_2	IF_5
0x400035d	          0x4839f0	                            cmp rax, rsi	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000360	            0x7746	                            ja 0x40003a8	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000362	        0x488b4308	                mov rax, qword [rbx + 8]	       379	wrstabs.c	FUNCTION_2	IF_5
0x4000366	        0x488b0c24	                    mov rcx, qword [rsp]	        53	string3.h	FUNCTION_71	CALL_3
0x400036a	        0x48890c10	              mov qword [rax + rdx], rcx	        53	string3.h	FUNCTION_71	CALL_3
0x400036e	        0x8b4c2408	                mov ecx, dword [rsp + 8]	        53	string3.h	FUNCTION_71	CALL_3
0x4000372	        0x894c1008	          mov dword [rax + rdx + 8], ecx	        53	string3.h	FUNCTION_71	CALL_3
0x4000376	      0x488343100c	             add qword [rbx + 0x10], 0xc	       388	wrstabs.c	FUNCTION_2
0x400037b	      0xb801000000	                              mov eax, 1	       390	wrstabs.c	FUNCTION_2
0x4000380	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       391	wrstabs.c	FUNCTION_2
0x4000385	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       391	wrstabs.c	FUNCTION_2
0x400038e	     0xf85c0000000	                           jne 0x4000454	       391	wrstabs.c	FUNCTION_2
0x4000394	        0x4883c428	                           add rsp, 0x28	       391	wrstabs.c	FUNCTION_2
0x4000398	              0x5b	                                 pop rbx	       391	wrstabs.c	FUNCTION_2
0x4000399	              0x5d	                                 pop rbp	       391	wrstabs.c	FUNCTION_2
0x400039a	            0x415c	                                 pop r12	       391	wrstabs.c	FUNCTION_2
0x400039c	            0x415d	                                 pop r13	       391	wrstabs.c	FUNCTION_2
0x400039e	            0x415e	                                 pop r14	       391	wrstabs.c	FUNCTION_2
0x40003a0	            0x415f	                                 pop r15	       391	wrstabs.c	FUNCTION_2
0x40003a2	              0xc3	                                     ret	       391	wrstabs.c	FUNCTION_2
0x40003a3	       0xf1f440000	                   nop dword [rax + rax]	       391	wrstabs.c	FUNCTION_2
0x40003a8	        0x488b7b08	                mov rdi, qword [rbx + 8]	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40003ac	          0x4801f6	                            add rsi, rsi	       381	wrstabs.c	FUNCTION_2	IF_5
0x40003af	        0x48897318	             mov qword [rbx + 0x18], rsi	       381	wrstabs.c	FUNCTION_2	IF_5
0x40003b3	      0xe800000000	                          call 0x40003b8	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40003b8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40003bc	        0x48894308	                mov qword [rbx + 8], rax	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40003c0	            0xeba4	                           jmp 0x4000366	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40003c2	    0x660f1f440000	                    nop word [rax + rax]	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x40003c8	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40003cc	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	       361	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40003d0	          0x4885d2	                           test rdx, rdx	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40003d3	        0x48896820	             mov qword [rax + 0x20], rbp	       362	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40003d7	            0x7437	                            je 0x4000410	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40003d9	        0x48894218	             mov qword [rdx + 0x18], rax	       366	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	ELSE_3
0x40003dd	        0x48894328	             mov qword [rbx + 0x28], rax	       367	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40003e1	          0x4c89ff	                            mov rdi, r15	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40003e4	      0xe800000000	                          call 0x40003e9	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40003e9	      0x488d440501	                lea rax, [rbp + rax + 1]	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40003ee	        0x48894330	             mov qword [rbx + 0x30], rax	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40003f2	      0xe91cffffff	                           jmp 0x4000313	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40003f7	    0x660f1f840000	                    nop word [rax + rax]	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x4000400	            0x31ed	                            xor ebp, ebp	       345	wrstabs.c	FUNCTION_2	IF_1
0x4000402	      0xe90cffffff	                           jmp 0x4000313	       345	wrstabs.c	FUNCTION_2	IF_1
0x4000407	    0x660f1f840000	                    nop word [rax + rax]	       345	wrstabs.c	FUNCTION_2	IF_1
0x4000410	        0x48894320	             mov qword [rbx + 0x20], rax	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x4000414	            0xebc7	                           jmp 0x40003dd	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x4000416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x4000420	      0xe800000000	                          call 0x4000425	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000425	            0x89c7	                            mov edi, eax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000427	      0xe800000000	                          call 0x400042c	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400042c	      0xba05000000	                              mov edx, 5	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000431	          0x4889c3	                            mov rbx, rax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000434	      0xbe00000000	                              mov esi, 0	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000439	            0x31ff	                            xor edi, edi	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400043b	      0xe800000000	                          call 0x4000440	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000440	          0x4889de	                            mov rsi, rbx	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000443	          0x4889c7	                            mov rdi, rax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000446	            0x31c0	                            xor eax, eax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4000448	      0xe800000000	                          call 0x400044d	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400044d	            0x31c0	                            xor eax, eax	       355	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x400044f	      0xe92cffffff	                           jmp 0x4000380	       355	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x4000454	      0xe800000000	                          call 0x4000459	       391	wrstabs.c	FUNCTION_2
stab_float_type	IF,3:FOR,0:WHILE,0:DO,0:functions,0:CALL,5:ELSE,1:SWITCH,0	85
0x4002b40	            0x4157	                                push r15	       690	wrstabs.c	FUNCTION_12
0x4002b42	            0x4156	                                push r14	       690	wrstabs.c	FUNCTION_12
0x4002b44	            0x4155	                                push r13	       690	wrstabs.c	FUNCTION_12
0x4002b46	            0x4154	                                push r12	       690	wrstabs.c	FUNCTION_12
0x4002b48	              0x55	                                push rbp	       690	wrstabs.c	FUNCTION_12
0x4002b49	              0x53	                                push rbx	       690	wrstabs.c	FUNCTION_12
0x4002b4a	            0x89f5	                            mov ebp, esi	       690	wrstabs.c	FUNCTION_12
0x4002b4c	          0x4889fb	                            mov rbx, rdi	       690	wrstabs.c	FUNCTION_12
0x4002b4f	        0x4883ec48	                           sub rsp, 0x48	       690	wrstabs.c	FUNCTION_12
0x4002b53	    0x64488b042528	                mov rax, qword fs:[0x28]	       690	wrstabs.c	FUNCTION_12
0x4002b5c	      0x4889442438	             mov qword [rsp + 0x38], rax	       690	wrstabs.c	FUNCTION_12
0x4002b61	            0x31c0	                            xor eax, eax	       690	wrstabs.c	FUNCTION_12
0x4002b63	          0x8d46ff	                      lea eax, [rsi - 1]	       694	wrstabs.c	FUNCTION_12	IF_1
0x4002b66	          0x83f80f	                            cmp eax, 0xf	       693	wrstabs.c	FUNCTION_12	IF_1
0x4002b69	            0x7755	                            ja 0x4002bc0	       693	wrstabs.c	FUNCTION_12	IF_1
0x4002b6b	        0x4c8d24c7	                  lea r12, [rdi + rax*8]	       693	wrstabs.c	FUNCTION_12	IF_1
0x4002b6f	    0x498bb424f800	            mov rsi, qword [r12 + 0xf8] 	       696	wrstabs.c	FUNCTION_12	IF_1
0x4002b77	          0x4885f6	                           test rsi, rsi	       696	wrstabs.c	FUNCTION_12	IF_1
0x4002b7a	     0xf85e8000000	                           jne 0x4002c68	       696	wrstabs.c	FUNCTION_12	IF_1
0x4002b80	            0x31d2	                            xor edx, edx	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002b82	      0xbe04000000	                              mov esi, 4	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002b87	      0xe884fdffff	                  call sym.stab_int_type	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002b8c	            0x85c0	                           test eax, eax	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002b8e	     0xf85ac000000	                           jne 0x4002c40	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002b94	            0x31c0	                            xor eax, eax	       708	wrstabs.c	FUNCTION_12	ELSE_1	IF_2
0x4002b96	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       725	wrstabs.c	FUNCTION_12
0x4002b9b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       725	wrstabs.c	FUNCTION_12
0x4002ba4	     0xf85ca000000	                           jne 0x4002c74	       725	wrstabs.c	FUNCTION_12
0x4002baa	        0x4883c448	                           add rsp, 0x48	       725	wrstabs.c	FUNCTION_12
0x4002bae	              0x5b	                                 pop rbx	       725	wrstabs.c	FUNCTION_12
0x4002baf	              0x5d	                                 pop rbp	       725	wrstabs.c	FUNCTION_12
0x4002bb0	            0x415c	                                 pop r12	       725	wrstabs.c	FUNCTION_12
0x4002bb2	            0x415d	                                 pop r13	       725	wrstabs.c	FUNCTION_12
0x4002bb4	            0x415e	                                 pop r14	       725	wrstabs.c	FUNCTION_12
0x4002bb6	            0x415f	                                 pop r15	       725	wrstabs.c	FUNCTION_12
0x4002bb8	              0xc3	                                     ret	       725	wrstabs.c	FUNCTION_12
0x4002bb9	     0xf1f80000000	                         nop dword [rax]	       725	wrstabs.c	FUNCTION_12
0x4002bc0	            0x31d2	                            xor edx, edx	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002bc2	      0xbe04000000	                              mov esi, 4	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002bc7	      0xe844fdffff	                  call sym.stab_int_type	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002bcc	            0x85c0	                           test eax, eax	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002bce	            0x74c4	                            je 0x4002b94	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002bd0	        0x4c8d7b60	                   lea r15, [rbx + 0x60]	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002bd4	          0x4c89ff	                            mov rdi, r15	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4002bd7	      0xe8e4dcffff	           call sym.stab_pop_type.isra.1	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4002bdc	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	       711	wrstabs.c	FUNCTION_12	ELSE_1
0x4002be0	          0x4989c6	                            mov r14, rax	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4002be3	        0x498d4501	                      lea rax, [r13 + 1]	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4002be7	        0x48894368	             mov qword [rbx + 0x68], rax	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4002beb	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002bef	          0x4d89f1	                             mov r9, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002bf2	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002bf5	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002bf6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002bfb	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c00	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c05	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c07	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c0c	      0xe800000000	                          call 0x4002c11	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c11	          0x4c89f7	                            mov rdi, r14	       721	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4002c14	      0xe800000000	                          call 0x4002c19	       721	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4002c19	      0x488d742410	                   lea rsi, [rsp + 0x10]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c1e	      0xb901000000	                              mov ecx, 1	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c23	          0x4c89ea	                            mov rdx, r13	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c26	          0x4189e8	                            mov r8d, ebp	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c29	          0x4c89ff	                            mov rdi, r15	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c2c	      0xe8cfecffff	        call sym.stab_push_string.isra.5	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c31	              0x5a	                                 pop rdx	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c32	              0x59	                                 pop rcx	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c33	      0xe95effffff	                           jmp 0x4002b96	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c38	     0xf1f84000000	                   nop dword [rax + rax]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c40	        0x4c8d7b60	                   lea r15, [rbx + 0x60]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4002c44	          0x4c89ff	                            mov rdi, r15	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4002c47	      0xe874dcffff	           call sym.stab_pop_type.isra.1	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4002c4c	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	       711	wrstabs.c	FUNCTION_12	ELSE_1
0x4002c50	          0x4989c6	                            mov r14, rax	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x4002c53	        0x498d4501	                      lea rax, [r13 + 1]	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4002c57	        0x48894368	             mov qword [rbx + 0x68], rax	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4002c5b	    0x4d89ac24f800	             mov qword [r12 + 0xf8], r13	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4002c63	            0xeb86	                           jmp 0x4002beb	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4002c65	           0xf1f00	                         nop dword [rax]	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x4002c68	            0x89ea	                            mov edx, ebp	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4002c6a	      0xe821edffff	         call sym.stab_push_defined_type	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4002c6f	      0xe922ffffff	                           jmp 0x4002b96	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4002c74	      0xe800000000	                          call 0x4002c79	       725	wrstabs.c	FUNCTION_12
stab_enum_type	IF,7:FOR,2:WHILE,0:DO,0:functions,0:CALL,15:ELSE,2:SWITCH,0	174
0x40025e0	            0x4157	                                push r15	       781	wrstabs.c	FUNCTION_15
0x40025e2	            0x4156	                                push r14	       781	wrstabs.c	FUNCTION_15
0x40025e4	          0x4989fe	                            mov r14, rdi	       781	wrstabs.c	FUNCTION_15
0x40025e7	            0x4155	                                push r13	       781	wrstabs.c	FUNCTION_15
0x40025e9	            0x4154	                                push r12	       781	wrstabs.c	FUNCTION_15
0x40025eb	          0x4989f5	                            mov r13, rsi	       781	wrstabs.c	FUNCTION_15
0x40025ee	              0x55	                                push rbp	       781	wrstabs.c	FUNCTION_15
0x40025ef	              0x53	                                push rbx	       781	wrstabs.c	FUNCTION_15
0x40025f0	        0x4883ec18	                           sub rsp, 0x18	       781	wrstabs.c	FUNCTION_15
0x40025f4	          0x4885d2	                           test rdx, rdx	       789	wrstabs.c	FUNCTION_15	IF_1
0x40025f7	     0xf845b010000	                            je 0x4002758	       789	wrstabs.c	FUNCTION_15	IF_1
0x40025fd	          0x4885f6	                           test rsi, rsi	       803	wrstabs.c	FUNCTION_15	IF_3
0x4002600	          0x4889d3	                            mov rbx, rdx	       803	wrstabs.c	FUNCTION_15	IF_3
0x4002603	          0x4889cd	                            mov rbp, rcx	       803	wrstabs.c	FUNCTION_15	IF_3
0x4002606	     0xf841c020000	                            je 0x4002828	       803	wrstabs.c	FUNCTION_15	IF_3
0x400260c	          0x4889f7	                            mov rdi, rsi	       804	wrstabs.c	FUNCTION_15	CALL_6
0x400260f	      0xe800000000	                          call 0x4002614	       804	wrstabs.c	FUNCTION_15	CALL_6
0x4002614	          0x488b3b	                    mov rdi, qword [rbx]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002617	        0x4c8d780a	                    lea r15, [rax + 0xa]	       804	wrstabs.c	FUNCTION_15	CALL_6
0x400261b	          0x4885ff	                           test rdi, rdi	       805	wrstabs.c	FUNCTION_15	FOR_1
0x400261e	     0xf8417020000	                            je 0x400283b	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002624	          0x4989dc	                            mov r12, rbx	       802	wrstabs.c	FUNCTION_15
0x4002627	    0x660f1f840000	                    nop word [rax + rax]	       802	wrstabs.c	FUNCTION_15
0x4002630	        0x4983c408	                              add r12, 8	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002634	      0xe800000000	                          call 0x4002639	       806	wrstabs.c	FUNCTION_15	CALL_7
0x4002639	        0x498b3c24	                    mov rdi, qword [r12]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x400263d	      0x4d8d7c0714	            lea r15, [r15 + rax + 0x14] 	       806	wrstabs.c	FUNCTION_15	CALL_7
0x4002642	          0x4885ff	                           test rdi, rdi	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002645	            0x75e9	                           jne 0x4002630	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002647	          0x4c89ff	                            mov rdi, r15	       808	wrstabs.c	FUNCTION_15	CALL_8
0x400264a	      0xe800000000	                          call 0x400264f	       808	wrstabs.c	FUNCTION_15	CALL_8
0x400264f	          0x4d85ed	                           test r13, r13	       810	wrstabs.c	FUNCTION_15	IF_4
0x4002652	          0x4989c4	                            mov r12, rax	       808	wrstabs.c	FUNCTION_15	CALL_8
0x4002655	     0xf8475010000	                            je 0x40027d0	       810	wrstabs.c	FUNCTION_15	IF_4
0x400265b	        0x498b4668	            mov rax, qword [r14 + 0x68] 	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x400265f	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002662	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002667	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x400266e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002673	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002676	          0x4989c1	                             mov r9, rax	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x4002679	      0x4889442408	                mov qword [rsp + 8], rax	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x400267e	        0x4883c001	                              add rax, 1	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x4002682	        0x49894668	             mov qword [r14 + 0x68], rax	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x4002686	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002688	      0xe800000000	                          call 0x400268d	        33	stdio2.h	FUNCTION_54	CALL_1
0x400268d	          0x4c8b3b	                    mov r15, qword [rbx]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4002690	          0x4d85ff	                           test r15, r15	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4002693	     0xf84b2010000	                            je 0x400284b	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4002699	     0xf1f80000000	                         nop dword [rax]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40026a0	          0x4c89e7	                            mov rdi, r12	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40026a3	        0x4883c308	                              add rbx, 8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40026a7	        0x4883c508	                              add rbp, 8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40026ab	      0xe800000000	                          call 0x40026b0	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40026b0	        0x4c8b4df8	                 mov r9, qword [rbp - 8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026b4	        0x498d3c04	                    lea rdi, [r12 + rax]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026b8	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026bd	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026c2	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026c9	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026ce	      0xe800000000	                          call 0x40026d3	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026d3	          0x4c8b3b	                    mov r15, qword [rbx]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40026d6	          0x4d85ff	                           test r15, r15	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40026d9	            0x75c5	                           jne 0x40026a0	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40026db	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x40026de	      0xe800000000	                          call 0x40026e3	       148	string3.h	FUNCTION_81	CALL_3
0x40026e3	      0xb93b000000	                           mov ecx, 0x3b	       148	string3.h	FUNCTION_81	CALL_3
0x40026e8	          0x4d85ed	                           test r13, r13	       823	wrstabs.c	FUNCTION_15	IF_5
0x40026eb	      0x6641890c04	                mov word [r12 + rax], cx	       148	string3.h	FUNCTION_81	CALL_3
0x40026f0	     0xf840a010000	                            je 0x4002800	       823	wrstabs.c	FUNCTION_15	IF_5
0x40026f6	            0x31c9	                            xor ecx, ecx	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x40026f8	            0x31d2	                            xor edx, edx	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x40026fa	          0x4d89e0	                             mov r8, r12	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x40026fd	      0xbe80000000	                           mov esi, 0x80	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4002702	          0x4c89f7	                            mov rdi, r14	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4002705	      0xe8a6dbffff	              call sym.stab_write_symbol	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x400270a	            0x85c0	                           test eax, eax	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x400270c	            0x7512	                           jne 0x4002720	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x400270e	            0x31c0	                            xor eax, eax	       797	wrstabs.c	FUNCTION_15	IF_1	IF_2
0x4002710	        0x4883c418	                           add rsp, 0x18	       840	wrstabs.c	FUNCTION_15
0x4002714	              0x5b	                                 pop rbx	       840	wrstabs.c	FUNCTION_15
0x4002715	              0x5d	                                 pop rbp	       840	wrstabs.c	FUNCTION_15
0x4002716	            0x415c	                                 pop r12	       840	wrstabs.c	FUNCTION_15
0x4002718	            0x415d	                                 pop r13	       840	wrstabs.c	FUNCTION_15
0x400271a	            0x415e	                                 pop r14	       840	wrstabs.c	FUNCTION_15
0x400271c	            0x415f	                                 pop r15	       840	wrstabs.c	FUNCTION_15
0x400271e	              0xc3	                                     ret	       840	wrstabs.c	FUNCTION_15
0x400271f	              0x90	                                     nop	       840	wrstabs.c	FUNCTION_15
0x4002720	      0x488b742408	                mov rsi, qword [rsp + 8]	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x4002725	      0xba04000000	                              mov edx, 4	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x400272a	          0x4c89f7	                            mov rdi, r14	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x400272d	      0xe85ef2ffff	         call sym.stab_push_defined_type	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x4002732	            0x85c0	                           test eax, eax	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x4002734	            0x74d8	                            je 0x400270e	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x4002736	          0x4c89e7	                            mov rdi, r12	       837	wrstabs.c	FUNCTION_15	CALL_15
0x4002739	      0xe800000000	                          call 0x400273e	       837	wrstabs.c	FUNCTION_15	CALL_15
0x400273e	        0x4883c418	                           add rsp, 0x18	       840	wrstabs.c	FUNCTION_15
0x4002742	      0xb801000000	                              mov eax, 1	       839	wrstabs.c	FUNCTION_15
0x4002747	              0x5b	                                 pop rbx	       840	wrstabs.c	FUNCTION_15
0x4002748	              0x5d	                                 pop rbp	       840	wrstabs.c	FUNCTION_15
0x4002749	            0x415c	                                 pop r12	       840	wrstabs.c	FUNCTION_15
0x400274b	            0x415d	                                 pop r13	       840	wrstabs.c	FUNCTION_15
0x400274d	            0x415e	                                 pop r14	       840	wrstabs.c	FUNCTION_15
0x400274f	            0x415f	                                 pop r15	       840	wrstabs.c	FUNCTION_15
0x4002751	              0xc3	                                     ret	       840	wrstabs.c	FUNCTION_15
0x4002752	    0x660f1f440000	                    nop word [rax + rax]	       840	wrstabs.c	FUNCTION_15
0x4002758	          0x4885f6	                           test rsi, rsi	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x400275b	     0xf8401010000	                            je 0x4002862	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002761	          0x4889f7	                            mov rdi, rsi	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002764	      0xe800000000	                          call 0x4002769	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002769	        0x488d780a	                    lea rdi, [rax + 0xa]	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x400276d	      0xe800000000	                          call 0x4002772	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002772	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002775	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002778	          0x4889c3	                            mov rbx, rax	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x400277b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002780	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002787	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400278c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400278e	      0xe800000000	                          call 0x4002793	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002793	        0x498d7e60	                   lea rdi, [r14 + 0x60]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002797	            0x31c9	                            xor ecx, ecx	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002799	            0x31d2	                            xor edx, edx	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x400279b	    0x41b804000000	                              mov r8d, 4	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x40027a1	          0x4889de	                            mov rsi, rbx	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x40027a4	      0xe857f1ffff	        call sym.stab_push_string.isra.5	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x40027a9	            0x85c0	                           test eax, eax	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x40027ab	     0xf845dffffff	                            je 0x400270e	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x40027b1	          0x4889df	                            mov rdi, rbx	       798	wrstabs.c	FUNCTION_15	IF_1	CALL_5
0x40027b4	      0xe800000000	                          call 0x40027b9	       798	wrstabs.c	FUNCTION_15	IF_1	CALL_5
0x40027b9	      0xb801000000	                              mov eax, 1	       799	wrstabs.c	FUNCTION_15	IF_1
0x40027be	      0xe94dffffff	                           jmp 0x4002710	       799	wrstabs.c	FUNCTION_15	IF_1
0x40027c3	      0xbf0a000000	                            mov edi, 0xa	       808	wrstabs.c	FUNCTION_15	CALL_8
0x40027c8	      0xe800000000	                          call 0x40027cd	       808	wrstabs.c	FUNCTION_15	CALL_8
0x40027cd	          0x4989c4	                            mov r12, rax	       808	wrstabs.c	FUNCTION_15	CALL_8
0x40027d0	          0x4c8b3b	                    mov r15, qword [rbx]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40027d3	      0xbe65000000	                           mov esi, 0x65	       110	string3.h	FUNCTION_77	CALL_3
0x40027d8	      0x6641893424	                      mov word [r12], si	       110	string3.h	FUNCTION_77	CALL_3
0x40027dd	          0x4d85ff	                           test r15, r15	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40027e0	            0x740e	                            je 0x40027f0	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40027e2	    0x48c744240800	                  mov qword [rsp + 8], 0	       786	wrstabs.c	FUNCTION_15
0x40027eb	      0xe9b0feffff	                           jmp 0x40026a0	       786	wrstabs.c	FUNCTION_15
0x40027f0	    0x6641c7442401	                mov word [r12 + 1], 0x3b	       148	string3.h	FUNCTION_81	CALL_3
0x40027f8	     0xf1f84000000	                   nop dword [rax + rax]	       148	string3.h	FUNCTION_81	CALL_3
0x4002800	        0x498d7e60	                   lea rdi, [r14 + 0x60]	       148	string3.h	FUNCTION_81	CALL_3
0x4002804	            0x31c9	                            xor ecx, ecx	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4002806	            0x31d2	                            xor edx, edx	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4002808	    0x41b804000000	                              mov r8d, 4	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x400280e	          0x4c89e6	                            mov rsi, r12	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4002811	      0xe8eaf0ffff	        call sym.stab_push_string.isra.5	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4002816	            0x85c0	                           test eax, eax	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4002818	     0xf8518ffffff	                           jne 0x4002736	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x400281e	      0xe9ebfeffff	                           jmp 0x400270e	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4002823	       0xf1f440000	                   nop dword [rax + rax]	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4002828	          0x488b3a	                    mov rdi, qword [rdx]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x400282b	          0x4885ff	                           test rdi, rdi	       805	wrstabs.c	FUNCTION_15	FOR_1
0x400282e	            0x7493	                            je 0x40027c3	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002830	    0x41bf0a000000	                           mov r15d, 0xa	       802	wrstabs.c	FUNCTION_15
0x4002836	      0xe9e9fdffff	                           jmp 0x4002624	       802	wrstabs.c	FUNCTION_15
0x400283b	          0x4c89ff	                            mov rdi, r15	       808	wrstabs.c	FUNCTION_15	CALL_8
0x400283e	      0xe800000000	                          call 0x4002843	       808	wrstabs.c	FUNCTION_15	CALL_8
0x4002843	          0x4989c4	                            mov r12, rax	       808	wrstabs.c	FUNCTION_15	CALL_8
0x4002846	      0xe910feffff	                           jmp 0x400265b	       808	wrstabs.c	FUNCTION_15	CALL_8
0x400284b	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x400284e	      0xe800000000	                          call 0x4002853	       148	string3.h	FUNCTION_81	CALL_3
0x4002853	      0xba3b000000	                           mov edx, 0x3b	       148	string3.h	FUNCTION_81	CALL_3
0x4002858	      0x6641891404	                mov word [r12 + rax], dx	       148	string3.h	FUNCTION_81	CALL_3
0x400285d	      0xe994feffff	                           jmp 0x40026f6	       148	string3.h	FUNCTION_81	CALL_3
0x4002862	      0xb900000000	                              mov ecx, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002867	      0xba17030000	                          mov edx, 0x317	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x400286c	      0xbe00000000	                              mov esi, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002871	      0xbf00000000	                              mov edi, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002876	      0xe800000000	                          call 0x400287b	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
