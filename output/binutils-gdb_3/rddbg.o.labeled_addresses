save_stab	DO,0:SWITCH,0:CALL,2:ELSE,0:IF,1:functions,0:WHILE,0:FOR,0	37
0x4000080	            0x4156	                                push r14	       362	rddbg.c	FUNCTION_4
0x4000082	            0x4155	                                push r13	       362	rddbg.c	FUNCTION_4
0x4000084	          0x4189fe	                           mov r14d, edi	       362	rddbg.c	FUNCTION_4
0x4000087	            0x4154	                                push r12	       362	rddbg.c	FUNCTION_4
0x4000089	              0x55	                                push rbp	       362	rddbg.c	FUNCTION_4
0x400008a	          0x4189f5	                           mov r13d, esi	       362	rddbg.c	FUNCTION_4
0x400008d	              0x53	                                push rbx	       362	rddbg.c	FUNCTION_4
0x400008e	    0x48631d000000	         movsxd rbx, dword [0x04000095] 	       363	rddbg.c	FUNCTION_4	IF_1
0x4000095	          0x4989d4	                            mov r12, rdx	       362	rddbg.c	FUNCTION_4
0x4000098	          0x4889cd	                            mov rbp, rcx	       362	rddbg.c	FUNCTION_4
0x400009b	        0x488d045b	                  lea rax, [rbx + rbx*2]	       363	rddbg.c	FUNCTION_4	IF_1
0x400009f	    0x488b3cc50000	                  mov rdi, qword [rax*8]	       363	rddbg.c	FUNCTION_4	IF_1
0x40000a7	          0x4885ff	                           test rdi, rdi	       363	rddbg.c	FUNCTION_4	IF_1
0x40000aa	            0x7405	                            je 0x40000b1	       363	rddbg.c	FUNCTION_4	IF_1
0x40000ac	      0xe800000000	                          call 0x40000b1	       364	rddbg.c	FUNCTION_4	CALL_1
0x40000b1	        0x488d1c5b	                  lea rbx, [rbx + rbx*2]	       365	rddbg.c	FUNCTION_4
0x40000b5	          0x4889ef	                            mov rdi, rbp	       368	rddbg.c	FUNCTION_4	CALL_2
0x40000b8	        0x48c1e303	                              shl rbx, 3	       365	rddbg.c	FUNCTION_4
0x40000bc	    0x4489b3000000	                   mov dword [rbx], r14d	       365	rddbg.c	FUNCTION_4
0x40000c3	    0x4489ab000000	                   mov dword [rbx], r13d	       366	rddbg.c	FUNCTION_4
0x40000ca	    0x4c89a3000000	                    mov qword [rbx], r12	       367	rddbg.c	FUNCTION_4
0x40000d1	      0xe800000000	                          call 0x40000d6	       368	rddbg.c	FUNCTION_4	CALL_2
0x40000d6	    0x488983000000	                    mov qword [rbx], rax	       368	rddbg.c	FUNCTION_4	CALL_2
0x40000dd	    0x8b0500000000	            mov eax, dword [0x040000e3] 	       369	rddbg.c	FUNCTION_4
0x40000e3	              0x5b	                                 pop rbx	       370	rddbg.c	FUNCTION_4
0x40000e4	              0x5d	                                 pop rbp	       370	rddbg.c	FUNCTION_4
0x40000e5	          0x83c001	                              add eax, 1	       369	rddbg.c	FUNCTION_4
0x40000e8	              0x99	                                     cdq	       369	rddbg.c	FUNCTION_4
0x40000e9	          0xc1ea1c	                           shr edx, 0x1c	       369	rddbg.c	FUNCTION_4
0x40000ec	             0x1d0	                            add eax, edx	       369	rddbg.c	FUNCTION_4
0x40000ee	          0x83e00f	                            and eax, 0xf	       369	rddbg.c	FUNCTION_4
0x40000f1	            0x29d0	                            sub eax, edx	       369	rddbg.c	FUNCTION_4
0x40000f3	            0x415c	                                 pop r12	       370	rddbg.c	FUNCTION_4
0x40000f5	    0x890500000000	            mov dword [0x040000fb], eax 	       369	rddbg.c	FUNCTION_4
0x40000fb	            0x415d	                                 pop r13	       370	rddbg.c	FUNCTION_4
0x40000fd	            0x415e	                                 pop r14	       370	rddbg.c	FUNCTION_4
0x40000ff	              0xc3	                                     ret	       370	rddbg.c	FUNCTION_4
stab_context	DO,1:SWITCH,0:CALL,3:ELSE,2:IF,4:functions,0:WHILE,0:FOR,0	91
0x4000100	            0x4154	                                push r12	       376	rddbg.c	FUNCTION_5
0x4000102	              0x55	                                push rbp	       376	rddbg.c	FUNCTION_5
0x4000103	      0xba05000000	                              mov edx, 5	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000108	              0x53	                                push rbx	       376	rddbg.c	FUNCTION_5
0x4000109	      0xbe00000000	                              mov esi, 0	       379	rddbg.c	FUNCTION_5	CALL_1
0x400010e	            0x31ff	                            xor edi, edi	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000110	      0xe800000000	                          call 0x4000115	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000115	    0x488b3d000000	            mov rdi, qword [0x0400011c] 	        97	stdio2.h	CALL_14
0x400011c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x400011f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000124	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000126	      0xe800000000	                          call 0x400012b	        97	stdio2.h	CALL_14
0x400012b	    0x488b0d000000	            mov rcx, qword [0x04000132] 	        97	stdio2.h	CALL_14
0x4000132	      0xba1e000000	                           mov edx, 0x1e	        97	stdio2.h	CALL_14
0x4000137	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400013c	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x4000141	      0xe800000000	                          call 0x4000146	        97	stdio2.h	CALL_14
0x4000146	    0x8b1d00000000	            mov ebx, dword [0x0400014c] 	       382	rddbg.c	FUNCTION_5
0x400014c	      0xe99a000000	                           jmp 0x40001eb	       382	rddbg.c	FUNCTION_5
0x4000151	     0xf1f80000000	                         nop dword [rax]	       382	rddbg.c	FUNCTION_5
0x4000158	    0x488b3d000000	            mov rdi, qword [0x0400015f] 	        97	stdio2.h	CALL_14
0x400015f	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_14
0x4000162	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000167	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400016c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x400016e	      0xe800000000	                          call 0x4000173	        97	stdio2.h	CALL_14
0x4000173	      0x418b4c2404	                mov ecx, dword [r12 + 4]	        97	stdio2.h	CALL_14
0x4000178	    0x488b3d000000	            mov rdi, qword [0x0400017f] 	        97	stdio2.h	CALL_14
0x400017f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000184	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000189	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x400018b	      0xe800000000	                          call 0x4000190	        97	stdio2.h	CALL_14
0x4000190	      0x498b4c2408	                mov rcx, qword [r12 + 8]	        97	stdio2.h	CALL_14
0x4000195	    0x488b3d000000	            mov rdi, qword [0x0400019c] 	        97	stdio2.h	CALL_14
0x400019c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x400019e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40001a3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40001a8	      0xe800000000	                          call 0x40001ad	        97	stdio2.h	CALL_14
0x40001ad	    0x8b04ed000000	                  mov eax, dword [rbp*8]	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x40001b4	            0x85c0	                           test eax, eax	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x40001b6	     0xf858c000000	                           jne 0x4000248	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x40001bc	    0x488b35000000	            mov rsi, qword [0x040001c3] 	        97	stdio2.h	CALL_14
0x40001c3	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_14
0x40001c8	      0xe800000000	                          call 0x40001cd	        97	stdio2.h	CALL_14
0x40001cd	          0x83c301	                              add ebx, 1	       405	rddbg.c	FUNCTION_5	DO_1
0x40001d0	            0x89d8	                            mov eax, ebx	       405	rddbg.c	FUNCTION_5	DO_1
0x40001d2	          0xc1f81f	                           sar eax, 0x1f	       405	rddbg.c	FUNCTION_5	DO_1
0x40001d5	          0xc1e81c	                           shr eax, 0x1c	       405	rddbg.c	FUNCTION_5	DO_1
0x40001d8	             0x1c3	                            add ebx, eax	       405	rddbg.c	FUNCTION_5	DO_1
0x40001da	          0x83e30f	                            and ebx, 0xf	       405	rddbg.c	FUNCTION_5	DO_1
0x40001dd	            0x29c3	                            sub ebx, eax	       405	rddbg.c	FUNCTION_5	DO_1
0x40001df	    0x3b1d00000000	            cmp ebx, dword [0x040001e5] 	       407	rddbg.c	FUNCTION_5
0x40001e5	     0xf84a5000000	                            je 0x4000290	       407	rddbg.c	FUNCTION_5
0x40001eb	          0x4863c3	                         movsxd rax, ebx	       387	rddbg.c	FUNCTION_5	DO_1
0x40001ee	        0x488d2c40	                  lea rbp, [rax + rax*2]	       387	rddbg.c	FUNCTION_5	DO_1
0x40001f2	    0x4c8d24ed0000	                        lea r12, [rbp*8]	       387	rddbg.c	FUNCTION_5	DO_1
0x40001fa	    0x49837c241000	               cmp qword [r12 + 0x10], 0	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000200	            0x74cb	                            je 0x40001cd	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000202	    0x8b3ced000000	                  mov edi, dword [rbp*8]	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_2
0x4000209	      0xe800000000	                          call 0x400020e	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_2
0x400020e	          0x4885c0	                           test rax, rax	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000211	     0xf8541ffffff	                           jne 0x4000158	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000217	    0x8b0ced000000	                  mov ecx, dword [rbp*8]	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x400021e	            0x85c9	                           test ecx, ecx	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000220	            0x754e	                           jne 0x4000270	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000222	    0x488b0d000000	            mov rcx, qword [0x04000229] 	        97	stdio2.h	CALL_14
0x4000229	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_14
0x400022e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000233	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x4000238	      0xe800000000	                          call 0x400023d	        97	stdio2.h	CALL_14
0x400023d	      0xe931ffffff	                           jmp 0x4000173	        97	stdio2.h	CALL_14
0x4000242	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_14
0x4000248	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	        97	stdio2.h	CALL_14
0x400024d	    0x488b3d000000	            mov rdi, qword [0x04000254] 	        97	stdio2.h	CALL_14
0x4000254	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000259	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400025e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000260	      0xe800000000	                          call 0x4000265	        97	stdio2.h	CALL_14
0x4000265	      0xe952ffffff	                           jmp 0x40001bc	        97	stdio2.h	CALL_14
0x400026a	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_14
0x4000270	    0x488b3d000000	            mov rdi, qword [0x04000277] 	        97	stdio2.h	CALL_14
0x4000277	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x400027c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000281	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000283	      0xe800000000	                          call 0x4000288	        97	stdio2.h	CALL_14
0x4000288	      0xe9e6feffff	                           jmp 0x4000173	        97	stdio2.h	CALL_14
0x400028d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_14
0x4000290	              0x5b	                                 pop rbx	       408	rddbg.c	FUNCTION_5
0x4000291	              0x5d	                                 pop rbp	       408	rddbg.c	FUNCTION_5
0x4000292	            0x415c	                                 pop r12	       408	rddbg.c	FUNCTION_5
0x4000294	              0xc3	                                     ret	       408	rddbg.c	FUNCTION_5
free_saved_stabs	DO,0:SWITCH,0:CALL,1:ELSE,0:IF,1:functions,0:WHILE,0:FOR,1	14
0x4000040	              0x53	                                push rbx	       414	rddbg.c	FUNCTION_6
0x4000041	      0xbb00000000	                              mov ebx, 0	       414	rddbg.c	FUNCTION_6
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       414	rddbg.c	FUNCTION_6
0x4000050	          0x488b3b	                    mov rdi, qword [rbx]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000053	          0x4885ff	                           test rdi, rdi	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000056	            0x740c	                            je 0x4000064	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000058	      0xe800000000	                          call 0x400005d	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400005d	    0x48c703000000	                      mov qword [rbx], 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000064	        0x4883c318	                           add rbx, 0x18	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000068	    0x4881fb000000	                              cmp rbx, 0	       417	rddbg.c	FUNCTION_6	FOR_1
0x400006f	            0x75df	                           jne 0x4000050	       417	rddbg.c	FUNCTION_6	FOR_1
0x4000071	    0xc70500000000	               mov dword [0x0400007b], 0	       426	rddbg.c	FUNCTION_6
0x400007b	              0x5b	                                 pop rbx	       427	rddbg.c	FUNCTION_6
0x400007c	              0xc3	                                     ret	       427	rddbg.c	FUNCTION_6
read_debugging_info	DO,0:SWITCH,0:CALL,9:ELSE,0:IF,8:functions,0:WHILE,0:FOR,0	424
0x40002a0	            0x4157	                                push r15	        47	rddbg.c	FUNCTION_1
0x40002a2	            0x4156	                                push r14	        47	rddbg.c	FUNCTION_1
0x40002a4	          0x4989fe	                            mov r14, rdi	        47	rddbg.c	FUNCTION_1
0x40002a7	            0x4155	                                push r13	        47	rddbg.c	FUNCTION_1
0x40002a9	            0x4154	                                push r12	        47	rddbg.c	FUNCTION_1
0x40002ab	              0x55	                                push rbp	        47	rddbg.c	FUNCTION_1
0x40002ac	              0x53	                                push rbx	        47	rddbg.c	FUNCTION_1
0x40002ad	    0x4881ecb80000	                           sub rsp, 0xb8	        47	rddbg.c	FUNCTION_1
0x40002b4	    0x64488b042528	                mov rax, qword fs:[0x28]	        47	rddbg.c	FUNCTION_1
0x40002bd	    0x48898424a800	             mov qword [rsp + 0xa8], rax	        47	rddbg.c	FUNCTION_1
0x40002c5	            0x31c0	                            xor eax, eax	        47	rddbg.c	FUNCTION_1
0x40002c7	      0x4889742478	             mov qword [rsp + 0x78], rsi	        47	rddbg.c	FUNCTION_1
0x40002cc	      0x4889542470	             mov qword [rsp + 0x70], rdx	        47	rddbg.c	FUNCTION_1
0x40002d1	        0x894c246c	             mov dword [rsp + 0x6c], ecx	        47	rddbg.c	FUNCTION_1
0x40002d5	      0xe800000000	                          call 0x40002da	        51	rddbg.c	FUNCTION_1	CALL_1
0x40002da	          0x4885c0	                           test rax, rax	        52	rddbg.c	FUNCTION_1	IF_1
0x40002dd	      0x4889442450	             mov qword [rsp + 0x50], rax	        51	rddbg.c	FUNCTION_1	CALL_1
0x40002e2	     0xf84a8000000	                            je 0x4000390	        52	rddbg.c	FUNCTION_1	IF_1
0x40002e8	    0x48c744244000	               mov qword [rsp + 0x40], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x40002f1	      0xbd00000000	                              mov ebp, 0	        52	rddbg.c	FUNCTION_1	IF_1
0x40002f6	    0x48c744244800	               mov qword [rsp + 0x48], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x40002ff	    0x48c744245800	               mov qword [rsp + 0x58], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x4000308	          0x4531ed	                          xor r13d, r13d	        52	rddbg.c	FUNCTION_1	IF_1
0x400030b	          0x4d89f7	                            mov r15, r14	        97	stdio2.h	CALL_14
0x400030e	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000313	          0x4c89ff	                            mov rdi, r15	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000316	      0xe800000000	                          call 0x400031b	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x400031b	          0x4889ee	                            mov rsi, rbp	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400031e	          0x4989c4	                            mov r12, rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000321	          0x4c89ff	                            mov rdi, r15	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000324	      0xe800000000	                          call 0x4000329	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000329	          0x4d85e4	                           test r12, r12	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400032c	          0x4989c6	                            mov r14, rax	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400032f	            0x7409	                            je 0x400033a	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000331	          0x4885c0	                           test rax, rax	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000334	     0xf8506010000	                           jne 0x4000440	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400033a	    0x488344244010	            add qword [rsp + 0x40], 0x10	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000340	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000345	    0x483d00000000	                              cmp rax, 0	       111	rddbg.c	FUNCTION_2	FOR_1
0x400034b	            0x7473	                            je 0x40003c0	       111	rddbg.c	FUNCTION_2	FOR_1
0x400034d	          0x488b10	                    mov rdx, qword [rax]	       111	rddbg.c	FUNCTION_2	FOR_1
0x4000350	        0x488b6808	                mov rbp, qword [rax + 8]	       111	rddbg.c	FUNCTION_2	FOR_1
0x4000354	      0x4889542448	             mov qword [rsp + 0x48], rdx	       111	rddbg.c	FUNCTION_2	FOR_1
0x4000359	            0xebb3	                           jmp 0x400030e	       111	rddbg.c	FUNCTION_2	FOR_1
0x400035b	      0xe800000000	                          call 0x4000360	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000360	            0x89c7	                            mov edi, eax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000362	          0x4d89fe	                            mov r14, r15	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000365	      0xe800000000	                          call 0x400036a	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x400036a	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	        97	stdio2.h	CALL_14
0x400036f	          0x4989c1	                             mov r9, rax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000372	          0x498b0e	                    mov rcx, qword [r14]	        97	stdio2.h	CALL_14
0x4000375	    0x488b3d000000	            mov rdi, qword [0x0400037c] 	        97	stdio2.h	CALL_14
0x400037c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000381	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000386	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000388	      0xe800000000	                          call 0x400038d	        97	stdio2.h	CALL_14
0x400038d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_14
0x4000390	            0x31c0	                            xor eax, eax	        82	rddbg.c	FUNCTION_1	IF_7
0x4000392	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	        86	rddbg.c	FUNCTION_1
0x400039a	    0x644833142528	                xor rdx, qword fs:[0x28]	        86	rddbg.c	FUNCTION_1
0x40003a3	     0xf85cb050000	                           jne 0x4000974	        86	rddbg.c	FUNCTION_1
0x40003a9	    0x4881c4b80000	                           add rsp, 0xb8	        86	rddbg.c	FUNCTION_1
0x40003b0	              0x5b	                                 pop rbx	        86	rddbg.c	FUNCTION_1
0x40003b1	              0x5d	                                 pop rbp	        86	rddbg.c	FUNCTION_1
0x40003b2	            0x415c	                                 pop r12	        86	rddbg.c	FUNCTION_1
0x40003b4	            0x415d	                                 pop r13	        86	rddbg.c	FUNCTION_1
0x40003b6	            0x415e	                                 pop r14	        86	rddbg.c	FUNCTION_1
0x40003b8	            0x415f	                                 pop r15	        86	rddbg.c	FUNCTION_1
0x40003ba	              0xc3	                                     ret	        86	rddbg.c	FUNCTION_1
0x40003bb	       0xf1f440000	                   nop dword [rax + rax]	        86	rddbg.c	FUNCTION_1
0x40003c0	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       254	rddbg.c	FUNCTION_2	IF_11
0x40003c5	          0x4d89fe	                            mov r14, r15	       254	rddbg.c	FUNCTION_2	IF_11
0x40003c8	          0x4885c0	                           test rax, rax	       254	rddbg.c	FUNCTION_2	IF_11
0x40003cb	            0x7411	                            je 0x40003de	       254	rddbg.c	FUNCTION_2	IF_11
0x40003cd	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40003d2	          0x4889c6	                            mov rsi, rax	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40003d5	      0xe800000000	                          call 0x40003da	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40003da	            0x85c0	                           test eax, eax	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40003dc	            0x74b2	                            je 0x4000390	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40003de	        0x498b4608	                mov rax, qword [r14 + 8]	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40003e2	        0x83780801	                  cmp dword [rax + 8], 1	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40003e6	     0xf8475030000	                            je 0x4000761	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40003ec	          0x4585ed	                         test r13d, r13d	        68	rddbg.c	FUNCTION_1	IF_5
0x40003ef	            0x753f	                           jne 0x4000430	        68	rddbg.c	FUNCTION_1	IF_5
0x40003f1	        0x498b4608	                mov rax, qword [r14 + 8]	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x40003f5	        0x83780802	                  cmp dword [rax + 8], 2	        70	rddbg.c	FUNCTION_1	IF_5
0x40003f9	     0xf8530030000	                           jne 0x400072f	        70	rddbg.c	FUNCTION_1	IF_5
0x40003ff	      0x488b442470	            mov rax, qword [rsp + 0x70] 	        70	rddbg.c	FUNCTION_1	IF_5
0x4000404	          0x4885c0	                           test rax, rax	        70	rddbg.c	FUNCTION_1	IF_5
0x4000407	     0xf8e22030000	                           jle 0x400072f	        70	rddbg.c	FUNCTION_1	IF_5
0x400040d	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000412	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000417	          0x4889c2	                            mov rdx, rax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400041a	          0x4c89f7	                            mov rdi, r14	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400041d	      0xe800000000	                          call 0x4000422	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000422	            0x85c0	                           test eax, eax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000424	     0xf8466ffffff	                            je 0x4000390	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x400042a	    0x660f1f440000	                    nop word [rax + rax]	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000430	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000435	      0xe958ffffff	                           jmp 0x4000392	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x400043a	    0x660f1f440000	                    nop word [rax + rax]	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000440	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	       124	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_3
0x4000445	          0x4889df	                            mov rdi, rbx	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000448	      0xe800000000	                          call 0x400044d	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x400044d	            0x31c9	                            xor ecx, ecx	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400044f	          0x4989d8	                             mov r8, rbx	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000452	          0x4889c2	                            mov rdx, rax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000455	          0x4c89e6	                            mov rsi, r12	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000458	          0x4c89ff	                            mov rdi, r15	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400045b	      0x4889442460	             mov qword [rsp + 0x60], rax	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000460	      0xe800000000	                          call 0x4000465	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000465	            0x85c0	                           test eax, eax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000467	     0xf84eefeffff	                            je 0x400035b	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400046d	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x4000471	        0x488d7801	                      lea rdi, [rax + 1]	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x4000475	          0x4989c4	                            mov r12, rax	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x4000478	      0x4889442408	                mov qword [rsp + 8], rax	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x400047d	      0xe800000000	                          call 0x4000482	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x4000482	            0x31c9	                            xor ecx, ecx	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x4000484	          0x4d89e0	                             mov r8, r12	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x4000487	          0x4889c2	                            mov rdx, rax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x400048a	          0x4c89f6	                            mov rsi, r14	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x400048d	          0x4c89ff	                            mov rdi, r15	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x4000490	      0x4889442410	             mov qword [rsp + 0x10], rax	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x4000495	      0xe800000000	                          call 0x400049a	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x400049a	            0x85c0	                           test eax, eax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x400049c	     0xf84ae040000	                            je 0x4000950	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40004a2	    0x48837c245800	               cmp qword [rsp + 0x58], 0	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40004a8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40004ad	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40004b2	        0xc6040800	                 mov byte [rax + rcx], 0	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40004b6	     0xf8464040000	                            je 0x4000920	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40004bc	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004c1	    0x48c704240000	                      mov qword [rsp], 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004c9	    0x48c744243000	               mov qword [rsp + 0x30], 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004d2	      0x488d5418f4	              lea rdx, [rax + rbx - 0xc]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004d7	          0x4801c3	                            add rbx, rax	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004da	          0x4989c6	                            mov r14, rax	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004dd	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004e2	          0x4839d0	                            cmp rax, rdx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004e5	      0x4889542438	             mov qword [rsp + 0x38], rdx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004ea	            0x762c	                           jbe 0x4000518	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004ec	      0xe9bf010000	                           jmp 0x40006b0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004f1	     0xf1f80000000	                         nop dword [rax]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40004f8	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x40004fd	          0x4801d0	                            add rax, rdx	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000500	        0x48891424	                    mov qword [rsp], rdx	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000504	      0x4889442430	             mov qword [rsp + 0x30], rax	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000509	        0x4983c60c	                            add r14, 0xc	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400050d	      0x4c3b742438	            cmp r14, qword [rsp + 0x38] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000512	     0xf8798010000	                            ja 0x40006b0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000518	        0x498b4708	                mov rax, qword [r15 + 8]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x400051c	          0x4c89f7	                            mov rdi, r14	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x400051f	          0xff5038	                 call qword [rax + 0x38]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x4000522	          0x4889c5	                            mov rbp, rax	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x4000525	      0x410fb64604	               movzx eax, byte [r14 + 4]	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x400052a	        0x498d7e06	                      lea rdi, [r14 + 6]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x400052e	            0x89c3	                            mov ebx, eax	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x4000530	        0x89442468	             mov dword [rsp + 0x68], eax	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x4000534	        0x498b4708	                mov rax, qword [r15 + 8]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000538	          0xff5050	                 call qword [rax + 0x50]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x400053b	      0x4889442420	             mov qword [rsp + 0x20], rax	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000540	        0x498b4708	                mov rax, qword [r15 + 8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000544	        0x498d7e08	                      lea rdi, [r14 + 8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000548	          0xff5038	                 call qword [rax + 0x38]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x400054b	            0x85db	                           test ebx, ebx	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x400054d	      0x4889442428	             mov qword [rsp + 0x28], rax	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000552	            0x74a4	                            je 0x40004f8	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000554	            0x89e8	                            mov eax, ebp	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000556	        0x48030424	                    add rax, qword [rsp]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x400055a	          0x4531e4	                          xor r12d, r12d	       194	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400055d	      0x4839442408	                cmp qword [rsp + 8], rax	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000562	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x4000567	          0x4d89f5	                            mov r13, r14	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400056a	        0x488d1c01	                    lea rbx, [rcx + rax]	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400056e	            0x7769	                            ja 0x40005d9	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000570	      0xe9cb000000	                           jmp 0x4000640	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000575	           0xf1f00	                         nop dword [rax]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000578	      0x4c8d7403ff	                lea r14, [rbx + rax - 1]	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400057d	        0x41803e5c	                    cmp byte [r14], 0x5c	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000581	            0x7563	                           jne 0x40005e6	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000583	        0x498d6d0c	                    lea rbp, [r13 + 0xc]	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000587	      0x483b6c2418	            cmp rbp, qword [rsp + 0x18] 	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400058c	            0x7358	                           jae 0x40005e6	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400058e	        0x498b4708	                mov rax, qword [r15 + 8]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x4000592	        0x41c60600	                       mov byte [r14], 0	       207	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000596	          0x4889ef	                            mov rdi, rbp	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x4000599	          0xff5038	                 call qword [rax + 0x38]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x400059c	        0x488b0c24	                    mov rcx, qword [rsp]	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005a0	          0x8d3408	                    lea esi, [rax + rcx]	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005a3	      0x4839742408	                cmp qword [rsp + 8], rsi	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005a8	     0xf8622010000	                           jbe 0x40006d0	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40005ae	      0x4803742410	             add rsi, qword [rsp + 0x10]	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005b3	            0x31d2	                            xor edx, edx	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005b5	          0x4889df	                            mov rdi, rbx	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005b8	            0x31c0	                            xor eax, eax	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005ba	      0xe800000000	                          call 0x40005bf	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005bf	          0x4d85e4	                           test r12, r12	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x40005c2	          0x4889c3	                            mov rbx, rax	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40005c5	        0x41c6065c	                    mov byte [r14], 0x5c	       223	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40005c9	            0x7408	                            je 0x40005d3	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x40005cb	          0x4c89e7	                            mov rdi, r12	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_28
0x40005ce	      0xe800000000	                          call 0x40005d3	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_28
0x40005d3	          0x4989dc	                            mov r12, rbx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40005d6	          0x4989ed	                            mov r13, rbp	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40005d9	          0x4889df	                            mov rdi, rbx	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x40005dc	      0xe800000000	                          call 0x40005e1	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x40005e1	          0x4885c0	                           test rax, rax	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x40005e4	            0x7592	                           jne 0x4000578	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x40005e6	          0x4d89ee	                            mov r14, r13	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x40005e9	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x40005ee	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x40005f3	          0x4889d9	                            mov rcx, rbx	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x40005f6	        0x8b6c2468	            mov ebp, dword [rsp + 0x68] 	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x40005fa	          0x4c89ea	                            mov rdx, r13	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x40005fd	          0x4489e6	                           mov esi, r12d	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000600	            0x89ef	                            mov edi, ebp	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000602	      0xe879faffff	                      call sym.save_stab	       230	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	CALL_29
0x4000607	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400060c	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000611	          0x4989d9	                             mov r9, rbx	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000614	          0x4d89e8	                             mov r8, r13	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000617	          0x4489e1	                           mov ecx, r12d	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400061a	            0x89ea	                            mov edx, ebp	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400061c	      0xe800000000	                          call 0x4000621	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000621	            0x85c0	                           test eax, eax	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000623	     0xf85e0feffff	                           jne 0x4000509	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000629	      0xe8d2faffff	                   call sym.stab_context	       321	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_14
0x400062e	      0xe80dfaffff	               call sym.free_saved_stabs	       322	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_15
0x4000633	      0xe958fdffff	                           jmp 0x4000390	       322	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_15
0x4000638	     0xf1f84000000	                   nop dword [rax + rax]	       322	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_15
0x4000640	            0x31ff	                            xor edi, edi	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x4000642	      0xba05000000	                              mov edx, 5	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x4000647	      0xbe00000000	                              mov esi, 0	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x400064c	          0x498b1f	                    mov rbx, qword [r15]	       188	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_22
0x400064f	      0xe800000000	                          call 0x4000654	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x4000654	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_14
0x4000657	      0x482b4c2460	             sub rcx, qword [rsp + 0x60]	        97	stdio2.h	CALL_14
0x400065c	          0x4889c6	                            mov rsi, rax	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x400065f	    0x48b8abaaaaaa	          movabs rax, 0x2aaaaaaaaaaaaaab	        97	stdio2.h	CALL_14
0x4000669	    0x488b3d000000	            mov rdi, qword [0x04000670] 	        97	stdio2.h	CALL_14
0x4000670	        0x4983c60c	                            add r14, 0xc	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000674	          0x48f7e9	                                imul rcx	        97	stdio2.h	CALL_14
0x4000677	        0x8b442468	            mov eax, dword [rsp + 0x68] 	        97	stdio2.h	CALL_14
0x400067b	        0x48c1f93f	                           sar rcx, 0x3f	        97	stdio2.h	CALL_14
0x400067f	              0x50	                                push rax	        97	stdio2.h	CALL_14
0x4000680	              0x55	                                push rbp	        97	stdio2.h	CALL_14
0x4000681	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000683	          0x48d1fa	                              sar rdx, 1	        97	stdio2.h	CALL_14
0x4000686	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	        97	stdio2.h	CALL_14
0x400068b	          0x4989d1	                             mov r9, rdx	        97	stdio2.h	CALL_14
0x400068e	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_14
0x4000691	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000696	          0x4929c9	                             sub r9, rcx	        97	stdio2.h	CALL_14
0x4000699	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_14
0x400069c	      0xe800000000	                          call 0x40006a1	        97	stdio2.h	CALL_14
0x40006a1	              0x5a	                                 pop rdx	        97	stdio2.h	CALL_14
0x40006a2	              0x59	                                 pop rcx	        97	stdio2.h	CALL_14
0x40006a3	      0x4c3b742438	            cmp r14, qword [rsp + 0x38] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40006a8	     0xf866afeffff	                           jbe 0x4000518	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40006ae	            0x6690	                                     nop	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40006b0	      0xe88bf9ffff	               call sym.free_saved_stabs	       245	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_33
0x40006b5	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006ba	    0x41bd01000000	                             mov r13d, 1	       152	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40006c0	      0xe800000000	                          call 0x40006c5	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006c5	      0xe970fcffff	                           jmp 0x400033a	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006ca	    0x660f1f440000	                    nop word [rax + rax]	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006d0	      0xba05000000	                              mov edx, 5	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006d5	      0xbe00000000	                              mov esi, 0	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006da	            0x31ff	                            xor edi, edi	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006dc	          0x4d8b27	                    mov r12, qword [r15]	       212	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_26
0x40006df	          0x4989ee	                            mov r14, rbp	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006e2	      0xe800000000	                          call 0x40006e7	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006e7	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_14
0x40006ea	      0x482b4c2460	             sub rcx, qword [rsp + 0x60]	        97	stdio2.h	CALL_14
0x40006ef	          0x4889c6	                            mov rsi, rax	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006f2	    0x48b8abaaaaaa	          movabs rax, 0x2aaaaaaaaaaaaaab	        97	stdio2.h	CALL_14
0x40006fc	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	        97	stdio2.h	CALL_14
0x4000701	    0x488b3d000000	            mov rdi, qword [0x04000708] 	        97	stdio2.h	CALL_14
0x4000708	          0x48f7e9	                                imul rcx	        97	stdio2.h	CALL_14
0x400070b	        0x48c1f93f	                           sar rcx, 0x3f	        97	stdio2.h	CALL_14
0x400070f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000711	          0x48d1fa	                              sar rdx, 1	        97	stdio2.h	CALL_14
0x4000714	          0x4989d1	                             mov r9, rdx	        97	stdio2.h	CALL_14
0x4000717	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_14
0x400071a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400071f	          0x4929c9	                             sub r9, rcx	        97	stdio2.h	CALL_14
0x4000722	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_14
0x4000725	      0xe800000000	                          call 0x400072a	        97	stdio2.h	CALL_14
0x400072a	      0xe9bafeffff	                           jmp 0x40005e9	        97	stdio2.h	CALL_14
0x400072f	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x4000733	            0x85c0	                           test eax, eax	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x4000735	     0xf8555fcffff	                           jne 0x4000390	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x400073b	          0x498b1e	                    mov rbx, qword [r14]	        81	rddbg.c	FUNCTION_1	IF_7	CALL_9
0x400073e	            0x31ff	                            xor edi, edi	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000740	      0xba05000000	                              mov edx, 5	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000745	      0xbe00000000	                              mov esi, 0	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400074a	      0xe800000000	                          call 0x400074f	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400074f	          0x4889de	                            mov rsi, rbx	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000752	          0x4889c7	                            mov rdi, rax	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000755	            0x31c0	                            xor eax, eax	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000757	      0xe800000000	                          call 0x400075c	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400075c	      0xe92ffcffff	                           jmp 0x4000390	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000761	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       273	rddbg.c	FUNCTION_3
0x4000766	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       273	rddbg.c	FUNCTION_3
0x400076b	        0x488d14d1	                  lea rdx, [rcx + rdx*8]	       273	rddbg.c	FUNCTION_3
0x400076f	          0x4839d1	                            cmp rcx, rdx	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000772	     0xf83f2010000	                           jae 0x400096a	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000778	          0x4889cb	                            mov rbx, rcx	       274	rddbg.c	FUNCTION_3	FOR_1
0x400077b	    0x48c744240800	                  mov qword [rsp + 8], 0	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000784	          0x4489ed	                           mov ebp, r13d	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000787	          0x4989d7	                            mov r15, rdx	       274	rddbg.c	FUNCTION_3	FOR_1
0x400078a	        0x4c893424	                    mov qword [rsp], r14	       274	rddbg.c	FUNCTION_3	FOR_1
0x400078e	            0xeb15	                           jmp 0x40007a5	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000790	        0x4883c308	                              add rbx, 8	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000794	          0x4939df	                            cmp r15, rbx	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000797	     0xf8622010000	                           jbe 0x40008bf	       274	rddbg.c	FUNCTION_3	FOR_1
0x400079d	        0x488b0424	                    mov rax, qword [rsp]	       274	rddbg.c	FUNCTION_3	FOR_1
0x40007a1	        0x488b4008	                mov rax, qword [rax + 8]	       274	rddbg.c	FUNCTION_3	FOR_1
0x40007a5	    0x488d94248000	                   lea rdx, [rsp + 0x80]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x40007ad	          0x488b33	                    mov rsi, qword [rbx]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x40007b0	        0x488b3c24	                    mov rdi, qword [rsp]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x40007b4	    0xff9010020000	                call qword [rax + 0x210]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x40007ba	    0x80bc24880000	            cmp byte [rsp + 0x88], 0x2d 	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40007c2	            0x75cc	                           jne 0x4000790	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40007c4	    0x48837c240800	                  cmp qword [rsp + 8], 0	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x40007ca	     0xf8423010000	                            je 0x40008f3	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x40007d0	    0x4c8bac249000	            mov r13, qword [rsp + 0x90] 	       294	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40007d8	          0x4d85ed	                           test r13, r13	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007db	     0xf84affbffff	                            je 0x4000390	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007e1	      0x41807d0000	                       cmp byte [r13], 0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007e6	     0xf84a4fbffff	                            je 0x4000390	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007ec	          0x4531e4	                          xor r12d, r12d	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007ef	            0xeb0a	                           jmp 0x40007fb	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007f1	     0xf1f80000000	                         nop dword [rax]	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007f8	          0x4d89ec	                            mov r12, r13	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x40007fb	          0x4c89ef	                            mov rdi, r13	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40007fe	      0xe800000000	                          call 0x4000803	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x4000803	    0x41807c05ff5c	         cmp byte [r13 + rax - 1], 0x5c 	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x4000809	            0x7558	                           jne 0x4000863	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x400080b	        0x488d6b08	                      lea rbp, [rbx + 8]	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x400080f	          0x4939ef	                            cmp r15, rbp	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000812	            0x764f	                           jbe 0x4000863	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x4000814	          0x4c89ef	                            mov rdi, r13	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x4000817	      0xe800000000	                          call 0x400081c	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x400081c	          0x4989c6	                            mov r14, rax	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x400081f	          0x4889c7	                            mov rdi, rax	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000822	      0xe800000000	                          call 0x4000827	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000827	    0x41c64406ff00	             mov byte [r14 + rax - 1], 0	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x400082d	        0x488b4308	                mov rax, qword [rbx + 8]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000831	            0x31d2	                            xor edx, edx	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000833	          0x4c89f7	                            mov rdi, r14	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000836	        0x488b7008	                mov rsi, qword [rax + 8]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400083a	            0x31c0	                            xor eax, eax	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400083c	      0xe800000000	                          call 0x4000841	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000841	          0x4c89f7	                            mov rdi, r14	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x4000844	          0x4989c5	                            mov r13, rax	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000847	      0xe800000000	                          call 0x400084c	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x400084c	          0x4d85e4	                           test r12, r12	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x400084f	            0x7408	                            je 0x4000859	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x4000851	          0x4c89e7	                            mov rdi, r12	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x4000854	      0xe800000000	                          call 0x4000859	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x4000859	      0x41807d0000	                       cmp byte [r13], 0	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x400085e	          0x4889eb	                            mov rbx, rbp	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000861	            0x7595	                           jne 0x40007f8	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000863	     0xfbfb4249a00	           movsx esi, word [rsp + 0x9a] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x400086b	     0xfb6bc249800	           movzx edi, byte [rsp + 0x98] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x4000873	          0x4c89e9	                            mov rcx, r13	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x4000876	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x400087e	      0xe8fdf7ffff	                      call sym.save_stab	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x4000883	     0xfbf8c249a00	           movsx ecx, word [rsp + 0x9a] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x400088b	     0xfb694249800	           movzx edx, byte [rsp + 0x98] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000893	          0x4d89e9	                             mov r9, r13	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000896	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x400089e	      0x488b742408	                mov rsi, qword [rsp + 8]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008a3	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008a8	      0xe800000000	                          call 0x40008ad	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008ad	            0x85c0	                           test eax, eax	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008af	     0xf8474fdffff	                            je 0x4000629	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008b5	      0xbd01000000	                              mov ebp, 1	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008ba	      0xe9d1feffff	                           jmp 0x4000790	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008bf	        0x4c8b3424	                    mov r14, qword [rsp]	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008c3	          0x4189ed	                           mov r13d, ebp	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40008c6	      0xe875f7ffff	               call sym.free_saved_stabs	       332	rddbg.c	FUNCTION_3	CALL_16
0x40008cb	      0x488b442408	                mov rax, qword [rsp + 8]	       334	rddbg.c	FUNCTION_3	IF_7
0x40008d0	          0x4885c0	                           test rax, rax	       334	rddbg.c	FUNCTION_3	IF_7
0x40008d3	     0xf8413fbffff	                            je 0x40003ec	       334	rddbg.c	FUNCTION_3	IF_7
0x40008d9	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008de	          0x4889c6	                            mov rsi, rax	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008e1	      0xe800000000	                          call 0x40008e6	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008e6	            0x85c0	                           test eax, eax	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008e8	     0xf85fefaffff	                           jne 0x40003ec	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008ee	      0xe99dfaffff	                           jmp 0x4000390	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x40008f3	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008f8	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008fd	            0x31d2	                            xor edx, edx	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x40008ff	        0x488b3424	                    mov rsi, qword [rsp]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000903	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000908	      0xe800000000	                          call 0x400090d	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x400090d	          0x4885c0	                           test rax, rax	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x4000910	      0x4889442408	                mov qword [rsp + 8], rax	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000915	     0xf85b5feffff	                           jne 0x40007d0	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x400091b	      0xe970faffff	                           jmp 0x4000390	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x4000920	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000925	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x400092a	      0xba01000000	                              mov edx, 1	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x400092f	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000934	          0x4c89fe	                            mov rsi, r15	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000937	      0xe800000000	                          call 0x400093c	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x400093c	          0x4885c0	                           test rax, rax	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x400093f	      0x4889442458	             mov qword [rsp + 0x58], rax	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x4000944	     0xf8572fbffff	                           jne 0x40004bc	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x400094a	      0xe941faffff	                           jmp 0x4000390	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x400094f	              0x90	                                     nop	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x4000950	      0xe800000000	                          call 0x4000955	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000955	            0x89c7	                            mov edi, eax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000957	          0x4d89fe	                            mov r14, r15	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400095a	      0xe800000000	                          call 0x400095f	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400095f	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_14
0x4000962	          0x4989c1	                             mov r9, rax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000965	      0xe908faffff	                           jmp 0x4000372	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400096a	      0xe8d1f6ffff	               call sym.free_saved_stabs	       332	rddbg.c	FUNCTION_3	CALL_16
0x400096f	      0xe978faffff	                           jmp 0x40003ec	       332	rddbg.c	FUNCTION_3	CALL_16
0x4000974	      0xe800000000	                  call section_end..data	        86	rddbg.c	FUNCTION_1
