print_symbol_info_sysv	SWITCH,0:DO,0:WHILE,0:CALL,7:ELSE,9:FOR,0:IF,9:functions,0	236
0x4001a70	            0x4154	                                push r12	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a72	              0x55	                                push rbp	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a73	          0x4889f2	                            mov rdx, rsi	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a76	              0x53	                                push rbx	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a77	          0x488b07	                    mov rax, qword [rdi]	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a7a	          0x4889fb	                            mov rbx, rdi	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a7d	      0xbf00000000	                              mov edi, 0	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a82	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a86	      0xe8c5e5ffff	                  call sym.print_symname	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x4001a8b	          0x488b03	                    mov rax, qword [rbx]	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4001a8e	         0xfbe7808	               movsx edi, byte [rax + 8]	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4001a92	      0xe800000000	                          call 0x4001a97	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4001a97	            0x85c0	                           test eax, eax	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4001a99	            0x746d	                            je 0x4001b08	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4001a9b	    0x833d00000000	           cmp dword [0x04001aa2], 0x20 	      1565	nm.c	FUNCTION_38	ELSE_2
0x4001aa2	     0xf8458020000	                            je 0x4001d00	      1565	nm.c	FUNCTION_38	ELSE_2
0x4001aa8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001aad	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001ab2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001ab4	      0xe800000000	                          call 0x4001ab9	       104	stdio2.h	CALL_28
0x4001ab9	          0x488b03	                    mov rax, qword [rbx]	      1573	nm.c	FUNCTION_38	IF_3
0x4001abc	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001ac1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001ac6	         0xfbe5008	               movsx edx, byte [rax + 8]	       104	stdio2.h	CALL_28
0x4001aca	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001acc	      0xe800000000	                          call 0x4001ad1	       104	stdio2.h	CALL_28
0x4001ad1	          0x488b03	                    mov rax, qword [rbx]	      1575	nm.c	FUNCTION_38	IF_3
0x4001ad4	        0x8078082d	                cmp byte [rax + 8], 0x2d	      1575	nm.c	FUNCTION_38	IF_3
0x4001ad8	     0xf8462020000	                            je 0x4001d40	      1575	nm.c	FUNCTION_38	IF_3
0x4001ade	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4001ae2	          0x4885c0	                           test rax, rax	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4001ae5	            0x7431	                            je 0x4001b18	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4001ae7	         0xfb64848	           movzx ecx, byte [rax + 0x48] 	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4001aeb	          0x83e10f	                            and ecx, 0xf	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4001aee	          0x80f906	                               cmp cl, 6	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001af1	     0xf8781020000	                            ja 0x4001d78	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001af7	           0xfb6c9	                           movzx ecx, cl	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001afa	    0xff24cd000000	                       jmp qword [rcx*8]	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001b01	     0xf1f80000000	                         nop dword [rax]	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001b08	          0x488b03	                    mov rax, qword [rbx]	      1571	nm.c	FUNCTION_38	IF_3
0x4001b0b	          0x488b38	                    mov rdi, qword [rax]	      1571	nm.c	FUNCTION_38	IF_3
0x4001b0e	      0xe88dfcffff	            call sym.print_value.isra.12	      1571	nm.c	FUNCTION_38	IF_3
0x4001b13	            0xeba4	                           jmp 0x4001ab9	      1571	nm.c	FUNCTION_38	IF_3
0x4001b15	           0xf1f00	                         nop dword [rax]	      1571	nm.c	FUNCTION_38	IF_3
0x4001b18	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1588	nm.c	FUNCTION_38	ELSE_3
0x4001b1c	          0x4885c0	                           test rax, rax	      1588	nm.c	FUNCTION_38	ELSE_3
0x4001b1f	     0xf84eb020000	                            je 0x4001e10	      1588	nm.c	FUNCTION_38	ELSE_3
0x4001b25	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      1590	nm.c	FUNCTION_38	ELSE_3	CALL_7
0x4001b29	         0xfb64528	           movzx eax, byte [rbp + 0x28] 	       378	nm.c	FUNCTION_5	SWITCH_1
0x4001b2d	            0x3c67	                            cmp al, 0x67	       378	nm.c	FUNCTION_5	SWITCH_1
0x4001b2f	     0xf845b010000	                            je 0x4001c90	       378	nm.c	FUNCTION_5	SWITCH_1
0x4001b35	            0x3c68	                            cmp al, 0x68	       378	nm.c	FUNCTION_5	SWITCH_1
0x4001b37	     0xf84a3020000	                            je 0x4001de0	       378	nm.c	FUNCTION_5	SWITCH_1
0x4001b3d	            0x3c64	                            cmp al, 0x64	       378	nm.c	FUNCTION_5	SWITCH_1
0x4001b3f	      0xba00000000	                              mov edx, 0	       380	nm.c	FUNCTION_5	SWITCH_1
0x4001b44	     0xf848e000000	                            je 0x4001bd8	       378	nm.c	FUNCTION_5	SWITCH_1
0x4001b4a	         0xfb74526	           movzx eax, word [rbp + 0x26] 	       385	nm.c	FUNCTION_5	IF_1
0x4001b4e	          0x6685c0	                             test ax, ax	       385	nm.c	FUNCTION_5	IF_1
0x4001b51	     0xf84a9020000	                            je 0x4001e00	       385	nm.c	FUNCTION_5	IF_1
0x4001b57	          0x83e030	                           and eax, 0x30	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b5a	          0xc1f804	                              sar eax, 4	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b5d	          0x83f802	                              cmp eax, 2	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b60	     0xf84d4020000	                            je 0x4001e3a	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b66	          0x83f803	                              cmp eax, 3	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b69	     0xf84c1020000	                            je 0x4001e30	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b6f	          0x83f801	                              cmp eax, 1	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b72	     0xf84ae020000	                            je 0x4001e26	       388	nm.c	FUNCTION_5	SWITCH_2
0x4001b78	    0x488b3d000000	            mov rdi, qword [0x04001b7f] 	       395	nm.c	FUNCTION_5	CALL_3
0x4001b7f	      0xe800000000	                          call 0x4001b84	       395	nm.c	FUNCTION_5	CALL_3
0x4001b84	      0x440fb76526	          movzx r12d, word [rbp + 0x26] 	       396	nm.c	FUNCTION_5	IF_2
0x4001b89	         0xfb66d28	           movzx ebp, byte [rbp + 0x28] 	       396	nm.c	FUNCTION_5	IF_2
0x4001b8d	            0x31ff	                            xor edi, edi	       396	nm.c	FUNCTION_5	IF_2
0x4001b8f	      0xba05000000	                              mov edx, 5	       396	nm.c	FUNCTION_5	IF_2
0x4001b94	      0xbe00000000	                              mov esi, 0	       396	nm.c	FUNCTION_5	IF_2
0x4001b99	      0xe800000000	                          call 0x4001b9e	       396	nm.c	FUNCTION_5	IF_2
0x4001b9e	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001ba3	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001ba6	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001bab	            0x31c0	                            xor eax, eax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001bad	          0x4589e0	                           mov r8d, r12d	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001bb0	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001bb2	      0xe800000000	                          call 0x4001bb7	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001bb7	            0x85c0	                           test eax, eax	       397	nm.c	FUNCTION_5	CALL_5
0x4001bb9	     0xf8885020000	                            js 0x4001e44	       397	nm.c	FUNCTION_5	CALL_5
0x4001bbf	    0x488b15000000	            mov rdx, qword [0x04001bc6] 	       399	nm.c	FUNCTION_5
0x4001bc6	            0xeb10	                           jmp 0x4001bd8	       399	nm.c	FUNCTION_5
0x4001bc8	     0xf1f84000000	                   nop dword [rax + rax]	       399	nm.c	FUNCTION_5
0x4001bd0	      0xba00000000	                              mov edx, 0	       352	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001bd5	           0xf1f00	                         nop dword [rax]	       352	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001bd8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001bdd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001be2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001be4	      0xe800000000	                          call 0x4001be9	       104	stdio2.h	CALL_28
0x4001be9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001bed	          0x4885c0	                           test rax, rax	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001bf0	     0xf84aa000000	                            je 0x4001ca0	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001bf6	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001bfa	          0x4885ff	                           test rdi, rdi	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001bfd	     0xf84ad000000	                            je 0x4001cb0	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001c03	      0xe898fbffff	            call sym.print_value.isra.12	      1595	nm.c	FUNCTION_38	ELSE_3	ELSE_6	ELSE_7
0x4001c08	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4001c0c	          0x4885c0	                           test rax, rax	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4001c0f	     0xf84c2000000	                            je 0x4001cd7	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4001c15	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1607	nm.c	
0x4001c19	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001c1e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001c23	              0x5b	                                 pop rbx	      1611	nm.c	FUNCTION_39	CALL_1
0x4001c24	              0x5d	                                 pop rbp	      1611	nm.c	FUNCTION_39	CALL_1
0x4001c25	            0x415c	                                 pop r12	      1611	nm.c	FUNCTION_39	CALL_1
0x4001c27	          0x488b10	                    mov rdx, qword [rax]	       104	stdio2.h	CALL_28
0x4001c2a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001c2c	      0xe900000000	                           jmp 0x4001c31	       104	stdio2.h	CALL_28
0x4001c31	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4001c38	      0xba00000000	                              mov edx, 0	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c3d	            0xeb99	                           jmp 0x4001bd8	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c3f	              0x90	                                     nop	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c40	      0xba00000000	                              mov edx, 0	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c45	            0xeb91	                           jmp 0x4001bd8	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c47	    0x660f1f840000	                    nop word [rax + rax]	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c50	      0xba00000000	                              mov edx, 0	       351	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c55	      0xe97effffff	                           jmp 0x4001bd8	       351	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c5a	    0x660f1f440000	                    nop word [rax + rax]	       351	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c60	      0xba00000000	                              mov edx, 0	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c65	      0xe96effffff	                           jmp 0x4001bd8	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c6a	    0x660f1f440000	                    nop word [rax + rax]	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c70	      0xba00000000	                              mov edx, 0	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c75	      0xe95effffff	                           jmp 0x4001bd8	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c7a	    0x660f1f440000	                    nop word [rax + rax]	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c80	      0xba00000000	                              mov edx, 0	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c85	      0xe94effffff	                           jmp 0x4001bd8	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c8a	    0x660f1f440000	                    nop word [rax + rax]	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4001c90	      0xba00000000	                              mov edx, 0	       381	nm.c	FUNCTION_5	SWITCH_1
0x4001c95	      0xe93effffff	                           jmp 0x4001bd8	       381	nm.c	FUNCTION_5	SWITCH_1
0x4001c9a	    0x660f1f440000	                    nop word [rax + rax]	       381	nm.c	FUNCTION_5	SWITCH_1
0x4001ca0	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001ca4	          0x4885ff	                           test rdi, rdi	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001ca7	     0xf8556ffffff	                           jne 0x4001c03	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001cad	           0xf1f00	                         nop dword [rax]	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4001cb0	    0x833d00000000	           cmp dword [0x04001cb7], 0x20 	      1598	nm.c	FUNCTION_38	ELSE_3
0x4001cb7	            0x7467	                            je 0x4001d20	      1598	nm.c	FUNCTION_38	ELSE_3
0x4001cb9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001cbb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001cc0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001cc5	      0xe800000000	                          call 0x4001cca	       104	stdio2.h	CALL_28
0x4001cca	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4001cce	          0x4885c0	                           test rax, rax	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4001cd1	     0xf853effffff	                           jne 0x4001c15	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4001cd7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1606	nm.c	FUNCTION_38
0x4001cdb	          0x4885c0	                           test rax, rax	      1606	nm.c	FUNCTION_38
0x4001cde	     0xf8531ffffff	                           jne 0x4001c15	      1606	nm.c	FUNCTION_38
0x4001ce4	              0x5b	                                 pop rbx	      1611	nm.c	FUNCTION_39	CALL_1
0x4001ce5	              0x5d	                                 pop rbp	      1611	nm.c	FUNCTION_39	CALL_1
0x4001ce6	            0x415c	                                 pop r12	      1611	nm.c	FUNCTION_39	CALL_1
0x4001ce8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001ced	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001cf2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001cf4	      0xe900000000	                           jmp 0x4001cf9	       104	stdio2.h	CALL_28
0x4001cf9	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4001d00	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001d05	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001d0a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001d0c	      0xe800000000	                          call 0x4001d11	       104	stdio2.h	CALL_28
0x4001d11	      0xe9a3fdffff	                           jmp 0x4001ab9	       104	stdio2.h	CALL_28
0x4001d16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_28
0x4001d20	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001d25	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001d2a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001d2c	      0xe800000000	                          call 0x4001d31	       104	stdio2.h	CALL_28
0x4001d31	      0xe9d2feffff	                           jmp 0x4001c08	       104	stdio2.h	CALL_28
0x4001d36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_28
0x4001d40	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       104	stdio2.h	CALL_28
0x4001d44	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001d49	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001d4e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001d50	      0xe800000000	                          call 0x4001d55	       104	stdio2.h	CALL_28
0x4001d55	          0x488b03	                    mov rax, qword [rbx]	      1579	nm.c	FUNCTION_38	ELSE_3
0x4001d58	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001d5d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001d62	         0xfbf501a	           movsx edx, word [rax + 0x1a] 	       104	stdio2.h	CALL_28
0x4001d66	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001d68	      0xe800000000	                          call 0x4001d6d	       104	stdio2.h	CALL_28
0x4001d6d	      0xe972ffffff	                           jmp 0x4001ce4	       104	stdio2.h	CALL_28
0x4001d72	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_28
0x4001d78	    0x488b3d000000	            mov rdi, qword [0x04001d7f] 	       360	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4001d7f	           0xfb6e9	                           movzx ebp, cl	      1586	nm.c	FUNCTION_38	ELSE_3	ELSE_5
0x4001d82	      0xe800000000	                          call 0x4001d87	       360	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4001d87	          0x8d45f3	                    lea eax, [rbp - 0xd]	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4001d8a	      0xba05000000	                              mov edx, 5	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4001d8f	      0xbe00000000	                              mov esi, 0	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4001d94	          0x83f802	                              cmp eax, 2	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4001d97	            0x7612	                           jbe 0x4001dab	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4001d99	          0x8d45f6	                    lea eax, [rbp - 0xa]	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4001d9c	      0xba05000000	                              mov edx, 5	       364	nm.c	FUNCTION_4	ELSE_2
0x4001da1	      0xbe00000000	                              mov esi, 0	       364	nm.c	FUNCTION_4	ELSE_2
0x4001da6	          0x83f802	                              cmp eax, 2	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4001da9	            0x7745	                            ja 0x4001df0	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4001dab	            0x31ff	                            xor edi, edi	       366	nm.c	FUNCTION_4	IF_3
0x4001dad	      0xe800000000	                          call 0x4001db2	       366	nm.c	FUNCTION_4	IF_3
0x4001db2	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001db4	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001db7	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001dbc	            0x31c0	                            xor eax, eax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001dbe	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001dc3	      0xe800000000	                          call 0x4001dc8	       178	stdio2.h	FUNCTION_48	CALL_1
0x4001dc8	            0x85c0	                           test eax, eax	       367	nm.c	FUNCTION_4	CALL_6
0x4001dca	            0x7878	                            js 0x4001e44	       367	nm.c	FUNCTION_4	CALL_6
0x4001dcc	    0x488b15000000	            mov rdx, qword [0x04001dd3] 	       369	nm.c	FUNCTION_4
0x4001dd3	      0xe900feffff	                           jmp 0x4001bd8	       369	nm.c	FUNCTION_4
0x4001dd8	     0xf1f84000000	                   nop dword [rax + rax]	       369	nm.c	FUNCTION_4
0x4001de0	      0xba00000000	                              mov edx, 0	       382	nm.c	FUNCTION_5	SWITCH_1
0x4001de5	      0xe9eefdffff	                           jmp 0x4001bd8	       382	nm.c	FUNCTION_5	SWITCH_1
0x4001dea	    0x660f1f440000	                    nop word [rax + rax]	       382	nm.c	FUNCTION_5	SWITCH_1
0x4001df0	      0xbe00000000	                              mov esi, 0	       366	nm.c	FUNCTION_4	IF_3
0x4001df5	            0xebb4	                           jmp 0x4001dab	       366	nm.c	FUNCTION_4	IF_3
0x4001df7	    0x660f1f840000	                    nop word [rax + rax]	       366	nm.c	FUNCTION_4	IF_3
0x4001e00	      0xba00000000	                              mov edx, 0	       386	nm.c	FUNCTION_5
0x4001e05	      0xe9cefdffff	                           jmp 0x4001bd8	       386	nm.c	FUNCTION_5
0x4001e0a	    0x660f1f440000	                    nop word [rax + rax]	       386	nm.c	FUNCTION_5
0x4001e10	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001e15	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001e1a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001e1c	      0xe800000000	                          call 0x4001e21	       104	stdio2.h	CALL_28
0x4001e21	      0xe9c3fdffff	                           jmp 0x4001be9	       104	stdio2.h	CALL_28
0x4001e26	      0xba00000000	                              mov edx, 0	       391	nm.c	FUNCTION_5	SWITCH_2
0x4001e2b	      0xe9a8fdffff	                           jmp 0x4001bd8	       391	nm.c	FUNCTION_5	SWITCH_2
0x4001e30	      0xba00000000	                              mov edx, 0	       392	nm.c	FUNCTION_5	SWITCH_2
0x4001e35	      0xe99efdffff	                           jmp 0x4001bd8	       392	nm.c	FUNCTION_5	SWITCH_2
0x4001e3a	      0xba00000000	                              mov edx, 0	       390	nm.c	FUNCTION_5	SWITCH_2
0x4001e3f	      0xe994fdffff	                           jmp 0x4001bd8	       390	nm.c	FUNCTION_5	SWITCH_2
0x4001e44	      0xe800000000	                          call 0x4001e49	       398	nm.c	FUNCTION_5
0x4001e49	            0x8b38	                    mov edi, dword [rax]	       398	nm.c	FUNCTION_5
0x4001e4b	      0xe800000000	                          call 0x4001e50	       398	nm.c	FUNCTION_5
0x4001e50	      0xbf00000000	                              mov edi, 0	       398	nm.c	FUNCTION_5
0x4001e55	          0x4889c6	                            mov rsi, rax	       398	nm.c	FUNCTION_5
0x4001e58	            0x31c0	                            xor eax, eax	       398	nm.c	FUNCTION_5
0x4001e5a	      0xe800000000	                          call 0x4001e5f	       398	nm.c	FUNCTION_5
non_numeric_reverse	SWITCH,0:DO,0:WHILE,0:CALL,1:ELSE,0:FOR,0:IF,0:functions,0	5
0x4000380	        0x4883ec08	                              sub rsp, 8	       582	nm.c	FUNCTION_10	CALL_1
0x4000384	      0xe847feffff	            call sym.non_numeric_forward	       583	nm.c	FUNCTION_10
0x4000389	        0x4883c408	                              add rsp, 8	       584	nm.c	
0x400038d	            0xf7d8	                                 neg eax	       583	nm.c	FUNCTION_10
0x400038f	              0xc3	                                     ret	       584	nm.c	
print_symname	SWITCH,0:DO,0:WHILE,0:CALL,2:ELSE,0:FOR,0:IF,2:functions,0	35
0x4000050	    0x8b0500000000	            mov eax, dword [0x04000056] 	       408	nm.c	FUNCTION_6	IF_1
0x4000056	            0x4154	                                push r12	       407	nm.c	FUNCTION_6	IF_1
0x4000058	              0x55	                                push rbp	       407	nm.c	FUNCTION_6	IF_1
0x4000059	          0x4889fd	                            mov rbp, rdi	       407	nm.c	FUNCTION_6	IF_1
0x400005c	              0x53	                                push rbx	       407	nm.c	FUNCTION_6	IF_1
0x400005d	          0x4889f3	                            mov rbx, rsi	       407	nm.c	FUNCTION_6	IF_1
0x4000060	            0x85c0	                           test eax, eax	       408	nm.c	FUNCTION_6	IF_1
0x4000062	            0x7405	                            je 0x4000069	       408	nm.c	FUNCTION_6	IF_1
0x4000064	          0x803e00	                       cmp byte [rsi], 0	       408	nm.c	FUNCTION_6	IF_1
0x4000067	            0x7517	                           jne 0x4000080	       408	nm.c	FUNCTION_6	IF_1
0x4000069	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x400006c	          0x4889ee	                            mov rsi, rbp	       104	stdio2.h	CALL_28
0x400006f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000074	              0x5b	                                 pop rbx	       421	nm.c	
0x4000075	              0x5d	                                 pop rbp	       421	nm.c	
0x4000076	            0x415c	                                 pop r12	       421	nm.c	
0x4000078	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400007a	      0xe900000000	                           jmp 0x400007f	       104	stdio2.h	CALL_28
0x400007f	              0x90	                                     nop	       104	stdio2.h	CALL_28
0x4000080	          0x4889d7	                            mov rdi, rdx	       104	stdio2.h	CALL_28
0x4000083	      0xba03000000	                              mov edx, 3	       410	nm.c	FUNCTION_6	IF_1
0x4000088	      0xe800000000	                          call 0x400008d	       410	nm.c	FUNCTION_6	IF_1
0x400008d	          0x4885c0	                           test rax, rax	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4000090	          0x4989c4	                            mov r12, rax	       410	nm.c	FUNCTION_6	IF_1
0x4000093	            0x74d4	                            je 0x4000069	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4000095	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_28
0x4000098	          0x4889ee	                            mov rsi, rbp	       104	stdio2.h	CALL_28
0x400009b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40000a0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40000a2	      0xe800000000	                          call 0x40000a7	       104	stdio2.h	CALL_28
0x40000a7	              0x5b	                                 pop rbx	       421	nm.c	
0x40000a8	          0x4c89e7	                            mov rdi, r12	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40000ab	              0x5d	                                 pop rbp	       421	nm.c	
0x40000ac	            0x415c	                                 pop r12	       421	nm.c	
0x40000ae	      0xe900000000	                           jmp 0x40000b3	       415	nm.c	FUNCTION_6	IF_1	IF_2
numeric_reverse	SWITCH,0:DO,0:WHILE,0:CALL,1:ELSE,0:FOR,0:IF,0:functions,0	5
0x4000370	        0x4883ec08	                              sub rsp, 8	       615	nm.c	FUNCTION_12	CALL_1
0x4000374	      0xe817ffffff	                call sym.numeric_forward	       616	nm.c	FUNCTION_12
0x4000379	        0x4883c408	                              add rsp, 8	       617	nm.c	
0x400037d	            0xf7d8	                                 neg eax	       616	nm.c	FUNCTION_12
0x400037f	              0xc3	                                     ret	       617	nm.c	
usage	SWITCH,0:DO,0:WHILE,0:CALL,10:ELSE,0:FOR,3:IF,2:functions,0	70
0x40000c0	            0x4154	                                push r12	       236	nm.c	FUNCTION_1
0x40000c2	    0x4c8b25000000	            mov r12, qword [0x040000c9] 	       237	nm.c	FUNCTION_1	CALL_1
0x40000c9	      0xba05000000	                              mov edx, 5	       237	nm.c	FUNCTION_1	CALL_1
0x40000ce	              0x55	                                push rbp	       236	nm.c	FUNCTION_1
0x40000cf	              0x53	                                push rbx	       236	nm.c	FUNCTION_1
0x40000d0	            0x89f5	                            mov ebp, esi	       236	nm.c	FUNCTION_1
0x40000d2	          0x4889fb	                            mov rbx, rdi	       236	nm.c	FUNCTION_1
0x40000d5	      0xbe00000000	                              mov esi, 0	       237	nm.c	FUNCTION_1	CALL_1
0x40000da	            0x31ff	                            xor edi, edi	       237	nm.c	FUNCTION_1	CALL_1
0x40000dc	      0xe800000000	                          call 0x40000e1	       237	nm.c	FUNCTION_1	CALL_1
0x40000e1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_25
0x40000e4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40000e7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40000ec	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000f1	      0xe800000000	                          call 0x40000f6	        97	stdio2.h	CALL_25
0x40000f6	            0x31ff	                            xor edi, edi	       238	nm.c	FUNCTION_1	CALL_2
0x40000f8	      0xba05000000	                              mov edx, 5	       238	nm.c	FUNCTION_1	CALL_2
0x40000fd	      0xbe00000000	                              mov esi, 0	       238	nm.c	FUNCTION_1	CALL_2
0x4000102	      0xe800000000	                          call 0x4000107	       238	nm.c	FUNCTION_1	CALL_2
0x4000107	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400010c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x400010f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000112	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x4000114	      0xe800000000	                          call 0x4000119	        97	stdio2.h	CALL_25
0x4000119	            0x31ff	                            xor edi, edi	       239	nm.c	FUNCTION_1	CALL_3
0x400011b	      0xba05000000	                              mov edx, 5	       239	nm.c	FUNCTION_1	CALL_3
0x4000120	      0xbe00000000	                              mov esi, 0	       239	nm.c	FUNCTION_1	CALL_3
0x4000125	      0xe800000000	                          call 0x400012a	       239	nm.c	FUNCTION_1	CALL_3
0x400012a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400012f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000132	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000135	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x4000137	      0xe800000000	                          call 0x400013c	        97	stdio2.h	CALL_25
0x400013c	            0x31ff	                            xor edi, edi	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x400013e	      0xba05000000	                              mov edx, 5	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000143	      0xbe00000000	                              mov esi, 0	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000148	      0xe800000000	                          call 0x400014d	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x400014d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000152	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000155	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000158	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400015a	      0xe800000000	                          call 0x400015f	        97	stdio2.h	CALL_25
0x400015f	            0x31ff	                            xor edi, edi	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000161	      0xba05000000	                              mov edx, 5	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000166	      0xbe00000000	                              mov esi, 0	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x400016b	      0xe800000000	                          call 0x4000170	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000170	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000175	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000178	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400017b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400017d	      0xe800000000	                          call 0x4000182	        97	stdio2.h	CALL_25
0x4000182	    0x488b3d000000	            mov rdi, qword [0x04000189] 	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000189	          0x4889de	                            mov rsi, rbx	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x400018c	      0xe800000000	                          call 0x4000191	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000191	            0x85ed	                           test ebp, ebp	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000193	            0x7407	                            je 0x400019c	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000195	            0x89ef	                            mov edi, ebp	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x4000197	      0xe800000000	                          call 0x400019c	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x400019c	            0x31ff	                            xor edi, edi	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x400019e	      0xba05000000	                              mov edx, 5	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x40001a3	      0xbe00000000	                              mov esi, 0	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x40001a8	      0xe800000000	                          call 0x40001ad	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x40001ad	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_25
0x40001b2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40001b5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40001ba	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40001bd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40001bf	      0xe800000000	                          call 0x40001c4	        97	stdio2.h	CALL_25
0x40001c4	            0xebcf	                           jmp 0x4000195	        97	stdio2.h	CALL_25
get_relocs	SWITCH,0:DO,0:WHILE,0:CALL,7:ELSE,1:FOR,0:IF,3:functions,0	47
0x4000600	            0x4155	                                push r13	       828	nm.c	FUNCTION_16
0x4000602	            0x4154	                                push r12	       828	nm.c	FUNCTION_16
0x4000604	              0x55	                                push rbp	       828	nm.c	FUNCTION_16
0x4000605	              0x53	                                push rbx	       828	nm.c	FUNCTION_16
0x4000606	          0x4889d3	                            mov rbx, rdx	       828	nm.c	FUNCTION_16
0x4000609	        0x4883ec08	                              sub rsp, 8	       828	nm.c	FUNCTION_16
0x400060d	        0xf6462004	               test byte [rsi + 0x20], 4	       833	nm.c	FUNCTION_16	IF_1
0x4000611	          0x488b02	                    mov rax, qword [rdx]	       831	nm.c	FUNCTION_16
0x4000614	          0x488930	                    mov qword [rax], rsi	       831	nm.c	FUNCTION_16
0x4000617	            0x7537	                           jne 0x4000650	       833	nm.c	FUNCTION_16	IF_1
0x4000619	        0x488b4208	                mov rax, qword [rdx + 8]	       835	nm.c	FUNCTION_16	IF_1
0x400061d	    0x48c700000000	                      mov qword [rax], 0	       835	nm.c	FUNCTION_16	IF_1
0x4000624	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       836	nm.c	FUNCTION_16	IF_1
0x4000628	    0x48c700000000	                      mov qword [rax], 0	       836	nm.c	FUNCTION_16	IF_1
0x400062f	        0x4883c008	                              add rax, 8	       855	nm.c	FUNCTION_16
0x4000633	        0x48830308	                      add qword [rbx], 8	       853	nm.c	FUNCTION_16
0x4000637	      0x4883430808	                  add qword [rbx + 8], 8	       854	nm.c	FUNCTION_16
0x400063c	        0x48894310	             mov qword [rbx + 0x10], rax	       855	nm.c	FUNCTION_16
0x4000640	        0x4883c408	                              add rsp, 8	       856	nm.c	
0x4000644	              0x5b	                                 pop rbx	       856	nm.c	
0x4000645	              0x5d	                                 pop rbp	       856	nm.c	
0x4000646	            0x415c	                                 pop r12	       856	nm.c	
0x4000648	            0x415d	                                 pop r13	       856	nm.c	
0x400064a	              0xc3	                                     ret	       856	nm.c	
0x400064b	       0xf1f440000	                   nop dword [rax + rax]	       856	nm.c	
0x4000650	          0x4989fc	                            mov r12, rdi	       856	nm.c	
0x4000653	          0x4889f5	                            mov rbp, rsi	       856	nm.c	
0x4000656	      0xe800000000	                          call 0x400065b	       842	nm.c	FUNCTION_16	ELSE_1	IF_2
0x400065b	          0x4885c0	                           test rax, rax	       843	nm.c	FUNCTION_16	ELSE_1	CALL_3
0x400065e	            0x7838	                            js 0x4000698	       843	nm.c	FUNCTION_16	ELSE_1	CALL_3
0x4000660	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4000664	          0x4889c7	                            mov rdi, rax	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4000667	      0xe800000000	                          call 0x400066c	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x400066c	          0x4889ee	                            mov rsi, rbp	       847	nm.c	FUNCTION_16	ELSE_1
0x400066f	          0x4c89e7	                            mov rdi, r12	       847	nm.c	FUNCTION_16	ELSE_1
0x4000672	        0x49894500	                    mov qword [r13], rax	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4000676	        0x488b4308	                mov rax, qword [rbx + 8]	       847	nm.c	FUNCTION_16	ELSE_1
0x400067a	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	       847	nm.c	FUNCTION_16	ELSE_1
0x400067e	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       847	nm.c	FUNCTION_16	ELSE_1
0x4000682	          0x488b10	                    mov rdx, qword [rax]	       847	nm.c	FUNCTION_16	ELSE_1
0x4000685	      0xe800000000	                          call 0x400068a	       847	nm.c	FUNCTION_16	ELSE_1
0x400068a	        0x49894500	                    mov qword [r13], rax	       847	nm.c	FUNCTION_16	ELSE_1
0x400068e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x4000692	        0x48833800	                      cmp qword [rax], 0	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x4000696	            0x7997	                           jns 0x400062f	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x4000698	        0x498b3c24	                    mov rdi, qword [r12]	       850	nm.c	FUNCTION_16	ELSE_1
0x400069c	      0xe800000000	                          call 0x40006a1	       850	nm.c	FUNCTION_16	ELSE_1
non_numeric_forward	SWITCH,0:DO,0:WHILE,0:CALL,8:ELSE,0:FOR,0:IF,5:functions,0	55
0x40001d0	              0x55	                                push rbp	       549	nm.c	FUNCTION_9
0x40001d1	              0x53	                                push rbx	       549	nm.c	FUNCTION_9
0x40001d2	          0x4889fa	                            mov rdx, rdi	       549	nm.c	FUNCTION_9
0x40001d5	          0x4889f5	                            mov rbp, rsi	       549	nm.c	FUNCTION_9
0x40001d8	        0x4883ec08	                              sub rsp, 8	       549	nm.c	FUNCTION_9
0x40001dc	    0x488b3d000000	            mov rdi, qword [0x040001e3] 	       553	nm.c	FUNCTION_9	CALL_2
0x40001e3	    0x488b0d000000	            mov rcx, qword [0x040001ea] 	       553	nm.c	FUNCTION_9	CALL_2
0x40001ea	    0x8b3500000000	            mov esi, dword [0x040001f0] 	       553	nm.c	FUNCTION_9	CALL_2
0x40001f0	        0x488b4708	                mov rax, qword [rdi + 8]	       553	nm.c	FUNCTION_9	CALL_2
0x40001f4	    0xff9060020000	                call qword [rax + 0x260]	       553	nm.c	FUNCTION_9	CALL_2
0x40001fa	    0x488b3d000000	            mov rdi, qword [0x04000201] 	       554	nm.c	FUNCTION_9	IF_1
0x4000201	          0x4889c3	                            mov rbx, rax	       553	nm.c	FUNCTION_9	CALL_2
0x4000204	    0x488b0d000000	            mov rcx, qword [0x0400020b] 	       554	nm.c	FUNCTION_9	IF_1
0x400020b	          0x4889ea	                            mov rdx, rbp	       554	nm.c	FUNCTION_9	IF_1
0x400020e	    0x8b3500000000	            mov esi, dword [0x04000214] 	       554	nm.c	FUNCTION_9	IF_1
0x4000214	        0x488b4708	                mov rax, qword [rdi + 8]	       554	nm.c	FUNCTION_9	IF_1
0x4000218	    0xff9060020000	                call qword [rax + 0x260]	       554	nm.c	FUNCTION_9	IF_1
0x400021e	          0x4885db	                           test rbx, rbx	       555	nm.c	FUNCTION_9	CALL_4
0x4000221	            0x745c	                            je 0x400027f	       555	nm.c	FUNCTION_9	CALL_4
0x4000223	          0x4885c0	                           test rax, rax	       555	nm.c	FUNCTION_9	CALL_4
0x4000226	            0x7457	                            je 0x400027f	       555	nm.c	FUNCTION_9	CALL_4
0x4000228	        0x488b7b08	                mov rdi, qword [rbx + 8]	       558	nm.c	FUNCTION_9	CALL_6
0x400022c	        0x488b7008	                mov rsi, qword [rax + 8]	       559	nm.c	FUNCTION_9
0x4000230	            0x31c0	                            xor eax, eax	       562	nm.c	FUNCTION_9	IF_3
0x4000232	          0x4885ff	                           test rdi, rdi	       562	nm.c	FUNCTION_9	IF_3
0x4000235	           0xf95c0	                                setne al	       562	nm.c	FUNCTION_9	IF_3
0x4000238	          0x4885f6	                           test rsi, rsi	       561	nm.c	FUNCTION_9	IF_2
0x400023b	            0x7428	                            je 0x4000265	       561	nm.c	FUNCTION_9	IF_2
0x400023d	          0x4885ff	                           test rdi, rdi	       563	nm.c	FUNCTION_9	IF_3
0x4000240	            0x741e	                            je 0x4000260	       563	nm.c	FUNCTION_9	IF_3
0x4000242	          0x803e00	                       cmp byte [rsi], 0	       569	nm.c	FUNCTION_9	IF_4
0x4000245	            0x7429	                            je 0x4000270	       569	nm.c	FUNCTION_9	IF_4
0x4000247	          0x803f00	                       cmp byte [rdi], 0	       571	nm.c	FUNCTION_9	IF_5
0x400024a	            0x7414	                            je 0x4000260	       571	nm.c	FUNCTION_9	IF_5
0x400024c	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x4000250	              0x5b	                                 pop rbx	       578	nm.c	
0x4000251	              0x5d	                                 pop rbp	       578	nm.c	
0x4000252	      0xe900000000	                           jmp 0x4000257	       574	nm.c	FUNCTION_9
0x4000257	    0x660f1f840000	                    nop word [rax + rax]	       574	nm.c	FUNCTION_9
0x4000260	      0xb8ffffffff	                     mov eax, 0xffffffff	       564	nm.c	FUNCTION_9
0x4000265	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x4000269	              0x5b	                                 pop rbx	       578	nm.c	
0x400026a	              0x5d	                                 pop rbp	       578	nm.c	
0x400026b	              0xc3	                                     ret	       578	nm.c	
0x400026c	         0xf1f4000	                         nop dword [rax]	       578	nm.c	
0x4000270	            0x31c0	                            xor eax, eax	       570	nm.c	FUNCTION_9	IF_5
0x4000272	          0x803f00	                       cmp byte [rdi], 0	       570	nm.c	FUNCTION_9	IF_5
0x4000275	           0xf95c0	                                setne al	       570	nm.c	FUNCTION_9	IF_5
0x4000278	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x400027c	              0x5b	                                 pop rbx	       578	nm.c	
0x400027d	              0x5d	                                 pop rbp	       578	nm.c	
0x400027e	              0xc3	                                     ret	       578	nm.c	
0x400027f	    0x488b05000000	            mov rax, qword [0x04000286] 	       556	nm.c	FUNCTION_9
0x4000286	          0x488b38	                    mov rdi, qword [rax]	       556	nm.c	FUNCTION_9
0x4000289	      0xe800000000	                          call 0x400028e	       556	nm.c	FUNCTION_9
main	SWITCH,1:DO,0:WHILE,2:CALL,39:ELSE,0:FOR,0:IF,8:functions,0	270
0x4000040	            0xf3c3	                                     ret	      1400	nm.c	IF_2	ELSE_2
0x4000042	         0xf1f4000	                         nop dword [rax]	      1400	nm.c	IF_2	ELSE_2
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1400	nm.c	IF_2	ELSE_2
0x4000050	    0x8b0500000000	            mov eax, dword [0x04000056] 	       408	nm.c	FUNCTION_6	IF_1
0x4000056	            0x4154	                                push r12	       407	nm.c	FUNCTION_6	IF_1
0x4000058	              0x55	                                push rbp	       407	nm.c	FUNCTION_6	IF_1
0x4000059	          0x4889fd	                            mov rbp, rdi	       407	nm.c	FUNCTION_6	IF_1
0x400005c	              0x53	                                push rbx	       407	nm.c	FUNCTION_6	IF_1
0x400005d	          0x4889f3	                            mov rbx, rsi	       407	nm.c	FUNCTION_6	IF_1
0x4000060	            0x85c0	                           test eax, eax	       408	nm.c	FUNCTION_6	IF_1
0x4000062	            0x7405	                            je 0x4000069	       408	nm.c	FUNCTION_6	IF_1
0x4000064	          0x803e00	                       cmp byte [rsi], 0	       408	nm.c	FUNCTION_6	IF_1
0x4000067	            0x7517	                           jne 0x4000080	       408	nm.c	FUNCTION_6	IF_1
0x4000069	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x400006c	          0x4889ee	                            mov rsi, rbp	       104	stdio2.h	CALL_28
0x400006f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000074	              0x5b	                                 pop rbx	       421	nm.c	
0x4000075	              0x5d	                                 pop rbp	       421	nm.c	
0x4000076	            0x415c	                                 pop r12	       421	nm.c	
0x4000078	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400007a	      0xe900000000	                           jmp 0x400007f	       104	stdio2.h	CALL_28
0x400007f	              0x90	                                     nop	       104	stdio2.h	CALL_28
0x4000080	          0x4889d7	                            mov rdi, rdx	       104	stdio2.h	CALL_28
0x4000083	      0xba03000000	                              mov edx, 3	       410	nm.c	FUNCTION_6	IF_1
0x4000088	      0xe800000000	                          call 0x400008d	       410	nm.c	FUNCTION_6	IF_1
0x400008d	          0x4885c0	                           test rax, rax	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4000090	          0x4989c4	                            mov r12, rax	       410	nm.c	FUNCTION_6	IF_1
0x4000093	            0x74d4	                            je 0x4000069	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4000095	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_28
0x4000098	          0x4889ee	                            mov rsi, rbp	       104	stdio2.h	CALL_28
0x400009b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40000a0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40000a2	      0xe800000000	                          call 0x40000a7	       104	stdio2.h	CALL_28
0x40000a7	              0x5b	                                 pop rbx	       421	nm.c	
0x40000a8	          0x4c89e7	                            mov rdi, r12	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40000ab	              0x5d	                                 pop rbp	       421	nm.c	
0x40000ac	            0x415c	                                 pop r12	       421	nm.c	
0x40000ae	      0xe900000000	                           jmp 0x40000b3	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40000b3	           0xf1f00	                         nop dword [rax]	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40000b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40000c0	            0x4154	                                push r12	       236	nm.c	FUNCTION_1
0x40000c2	    0x4c8b25000000	            mov r12, qword [0x040000c9] 	       237	nm.c	FUNCTION_1	CALL_1
0x40000c9	      0xba05000000	                              mov edx, 5	       237	nm.c	FUNCTION_1	CALL_1
0x40000ce	              0x55	                                push rbp	       236	nm.c	FUNCTION_1
0x40000cf	              0x53	                                push rbx	       236	nm.c	FUNCTION_1
0x40000d0	            0x89f5	                            mov ebp, esi	       236	nm.c	FUNCTION_1
0x40000d2	          0x4889fb	                            mov rbx, rdi	       236	nm.c	FUNCTION_1
0x40000d5	      0xbe00000000	                              mov esi, 0	       237	nm.c	FUNCTION_1	CALL_1
0x40000da	            0x31ff	                            xor edi, edi	       237	nm.c	FUNCTION_1	CALL_1
0x40000dc	      0xe800000000	                          call 0x40000e1	       237	nm.c	FUNCTION_1	CALL_1
0x40000e1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_25
0x40000e4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40000e7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40000ec	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000f1	      0xe800000000	                          call 0x40000f6	        97	stdio2.h	CALL_25
0x40000f6	            0x31ff	                            xor edi, edi	       238	nm.c	FUNCTION_1	CALL_2
0x40000f8	      0xba05000000	                              mov edx, 5	       238	nm.c	FUNCTION_1	CALL_2
0x40000fd	      0xbe00000000	                              mov esi, 0	       238	nm.c	FUNCTION_1	CALL_2
0x4000102	      0xe800000000	                          call 0x4000107	       238	nm.c	FUNCTION_1	CALL_2
0x4000107	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400010c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x400010f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000112	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x4000114	      0xe800000000	                          call 0x4000119	        97	stdio2.h	CALL_25
0x4000119	            0x31ff	                            xor edi, edi	       239	nm.c	FUNCTION_1	CALL_3
0x400011b	      0xba05000000	                              mov edx, 5	       239	nm.c	FUNCTION_1	CALL_3
0x4000120	      0xbe00000000	                              mov esi, 0	       239	nm.c	FUNCTION_1	CALL_3
0x4000125	      0xe800000000	                          call 0x400012a	       239	nm.c	FUNCTION_1	CALL_3
0x400012a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400012f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000132	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000135	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x4000137	      0xe800000000	                          call 0x400013c	        97	stdio2.h	CALL_25
0x400013c	            0x31ff	                            xor edi, edi	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x400013e	      0xba05000000	                              mov edx, 5	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000143	      0xbe00000000	                              mov esi, 0	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000148	      0xe800000000	                          call 0x400014d	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x400014d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000152	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000155	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000158	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400015a	      0xe800000000	                          call 0x400015f	        97	stdio2.h	CALL_25
0x400015f	            0x31ff	                            xor edi, edi	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000161	      0xba05000000	                              mov edx, 5	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000166	      0xbe00000000	                              mov esi, 0	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x400016b	      0xe800000000	                          call 0x4000170	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000170	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000175	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000178	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400017b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400017d	      0xe800000000	                          call 0x4000182	        97	stdio2.h	CALL_25
0x4000182	    0x488b3d000000	            mov rdi, qword [0x04000189] 	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000189	          0x4889de	                            mov rsi, rbx	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x400018c	      0xe800000000	                          call 0x4000191	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000191	            0x85ed	                           test ebp, ebp	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000193	            0x7407	                            je 0x400019c	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000195	            0x89ef	                            mov edi, ebp	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x4000197	      0xe800000000	                          call 0x400019c	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x400019c	            0x31ff	                            xor edi, edi	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x400019e	      0xba05000000	                              mov edx, 5	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x40001a3	      0xbe00000000	                              mov esi, 0	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x40001a8	      0xe800000000	                          call 0x40001ad	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x40001ad	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_25
0x40001b2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40001b5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40001ba	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40001bd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40001bf	      0xe800000000	                          call 0x40001c4	        97	stdio2.h	CALL_25
0x40001c4	            0xebcf	                           jmp 0x4000195	        97	stdio2.h	CALL_25
0x40001c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        97	stdio2.h	CALL_25
0x40001d0	              0x55	                                push rbp	       549	nm.c	FUNCTION_9
0x40001d1	              0x53	                                push rbx	       549	nm.c	FUNCTION_9
0x40001d2	          0x4889fa	                            mov rdx, rdi	       549	nm.c	FUNCTION_9
0x40001d5	          0x4889f5	                            mov rbp, rsi	       549	nm.c	FUNCTION_9
0x40001d8	        0x4883ec08	                              sub rsp, 8	       549	nm.c	FUNCTION_9
0x40001dc	    0x488b3d000000	            mov rdi, qword [0x040001e3] 	       553	nm.c	FUNCTION_9	CALL_2
0x40001e3	    0x488b0d000000	            mov rcx, qword [0x040001ea] 	       553	nm.c	FUNCTION_9	CALL_2
0x40001ea	    0x8b3500000000	            mov esi, dword [0x040001f0] 	       553	nm.c	FUNCTION_9	CALL_2
0x40001f0	        0x488b4708	                mov rax, qword [rdi + 8]	       553	nm.c	FUNCTION_9	CALL_2
0x40001f4	    0xff9060020000	                call qword [rax + 0x260]	       553	nm.c	FUNCTION_9	CALL_2
0x40001fa	    0x488b3d000000	            mov rdi, qword [0x04000201] 	       554	nm.c	FUNCTION_9	IF_1
0x4000201	          0x4889c3	                            mov rbx, rax	       553	nm.c	FUNCTION_9	CALL_2
0x4000204	    0x488b0d000000	            mov rcx, qword [0x0400020b] 	       554	nm.c	FUNCTION_9	IF_1
0x400020b	          0x4889ea	                            mov rdx, rbp	       554	nm.c	FUNCTION_9	IF_1
0x400020e	    0x8b3500000000	            mov esi, dword [0x04000214] 	       554	nm.c	FUNCTION_9	IF_1
0x4000214	        0x488b4708	                mov rax, qword [rdi + 8]	       554	nm.c	FUNCTION_9	IF_1
0x4000218	    0xff9060020000	                call qword [rax + 0x260]	       554	nm.c	FUNCTION_9	IF_1
0x400021e	          0x4885db	                           test rbx, rbx	       555	nm.c	FUNCTION_9	CALL_4
0x4000221	            0x745c	                            je 0x400027f	       555	nm.c	FUNCTION_9	CALL_4
0x4000223	          0x4885c0	                           test rax, rax	       555	nm.c	FUNCTION_9	CALL_4
0x4000226	            0x7457	                            je 0x400027f	       555	nm.c	FUNCTION_9	CALL_4
0x4000228	        0x488b7b08	                mov rdi, qword [rbx + 8]	       558	nm.c	FUNCTION_9	CALL_6
0x400022c	        0x488b7008	                mov rsi, qword [rax + 8]	       559	nm.c	FUNCTION_9
0x4000230	            0x31c0	                            xor eax, eax	       562	nm.c	FUNCTION_9	IF_3
0x4000232	          0x4885ff	                           test rdi, rdi	       562	nm.c	FUNCTION_9	IF_3
0x4000235	           0xf95c0	                                setne al	       562	nm.c	FUNCTION_9	IF_3
0x4000238	          0x4885f6	                           test rsi, rsi	       561	nm.c	FUNCTION_9	IF_2
0x400023b	            0x7428	                            je 0x4000265	       561	nm.c	FUNCTION_9	IF_2
0x400023d	          0x4885ff	                           test rdi, rdi	       563	nm.c	FUNCTION_9	IF_3
0x4000240	            0x741e	                            je 0x4000260	       563	nm.c	FUNCTION_9	IF_3
0x4000242	          0x803e00	                       cmp byte [rsi], 0	       569	nm.c	FUNCTION_9	IF_4
0x4000245	            0x7429	                            je 0x4000270	       569	nm.c	FUNCTION_9	IF_4
0x4000247	          0x803f00	                       cmp byte [rdi], 0	       571	nm.c	FUNCTION_9	IF_5
0x400024a	            0x7414	                            je 0x4000260	       571	nm.c	FUNCTION_9	IF_5
0x400024c	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x4000250	              0x5b	                                 pop rbx	       578	nm.c	
0x4000251	              0x5d	                                 pop rbp	       578	nm.c	
0x4000252	      0xe900000000	                           jmp 0x4000257	       574	nm.c	FUNCTION_9
0x4000257	    0x660f1f840000	                    nop word [rax + rax]	       574	nm.c	FUNCTION_9
0x4000260	      0xb8ffffffff	                     mov eax, 0xffffffff	       564	nm.c	FUNCTION_9
0x4000265	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x4000269	              0x5b	                                 pop rbx	       578	nm.c	
0x400026a	              0x5d	                                 pop rbp	       578	nm.c	
0x400026b	              0xc3	                                     ret	       578	nm.c	
0x400026c	         0xf1f4000	                         nop dword [rax]	       578	nm.c	
0x4000270	            0x31c0	                            xor eax, eax	       570	nm.c	FUNCTION_9	IF_5
0x4000272	          0x803f00	                       cmp byte [rdi], 0	       570	nm.c	FUNCTION_9	IF_5
0x4000275	           0xf95c0	                                setne al	       570	nm.c	FUNCTION_9	IF_5
0x4000278	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x400027c	              0x5b	                                 pop rbx	       578	nm.c	
0x400027d	              0x5d	                                 pop rbp	       578	nm.c	
0x400027e	              0xc3	                                     ret	       578	nm.c	
0x400027f	    0x488b05000000	            mov rax, qword [0x04000286] 	       556	nm.c	FUNCTION_9
0x4000286	          0x488b38	                    mov rdi, qword [rax]	       556	nm.c	FUNCTION_9
0x4000289	      0xe800000000	                          call 0x400028e	       556	nm.c	FUNCTION_9
0x400028e	            0x6690	                                     nop	       556	nm.c	FUNCTION_9
0x4000290	            0x4154	                                push r12	       588	nm.c	FUNCTION_11
0x4000292	          0x4989fc	                            mov r12, rdi	       588	nm.c	FUNCTION_11
0x4000295	    0x488b3d000000	            mov rdi, qword [0x0400029c] 	       592	nm.c	FUNCTION_11	CALL_2
0x400029c	              0x55	                                push rbp	       588	nm.c	FUNCTION_11
0x400029d	              0x53	                                push rbx	       588	nm.c	FUNCTION_11
0x400029e	          0x4889f5	                            mov rbp, rsi	       588	nm.c	FUNCTION_11
0x40002a1	    0x488b0d000000	            mov rcx, qword [0x040002a8] 	       592	nm.c	FUNCTION_11	CALL_2
0x40002a8	          0x4c89e2	                            mov rdx, r12	       592	nm.c	FUNCTION_11	CALL_2
0x40002ab	    0x8b3500000000	            mov esi, dword [0x040002b1] 	       592	nm.c	FUNCTION_11	CALL_2
0x40002b1	        0x488b4708	                mov rax, qword [rdi + 8]	       592	nm.c	FUNCTION_11	CALL_2
0x40002b5	    0xff9060020000	                call qword [rax + 0x260]	       592	nm.c	FUNCTION_11	CALL_2
0x40002bb	    0x488b3d000000	            mov rdi, qword [0x040002c2] 	       593	nm.c	FUNCTION_11	IF_1
0x40002c2	          0x4889c3	                            mov rbx, rax	       592	nm.c	FUNCTION_11	CALL_2
0x40002c5	    0x488b0d000000	            mov rcx, qword [0x040002cc] 	       593	nm.c	FUNCTION_11	IF_1
0x40002cc	          0x4889ea	                            mov rdx, rbp	       593	nm.c	FUNCTION_11	IF_1
0x40002cf	    0x8b3500000000	            mov esi, dword [0x040002d5] 	       593	nm.c	FUNCTION_11	IF_1
0x40002d5	        0x488b4708	                mov rax, qword [rdi + 8]	       593	nm.c	FUNCTION_11	IF_1
0x40002d9	    0xff9060020000	                call qword [rax + 0x260]	       593	nm.c	FUNCTION_11	IF_1
0x40002df	          0x4885db	                           test rbx, rbx	       594	nm.c	FUNCTION_11	CALL_4
0x40002e2	            0x7473	                            je 0x4000357	       594	nm.c	FUNCTION_11	CALL_4
0x40002e4	          0x4885c0	                           test rax, rax	       594	nm.c	FUNCTION_11	CALL_4
0x40002e7	            0x746e	                            je 0x4000357	       594	nm.c	FUNCTION_11	CALL_4
0x40002e9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       597	nm.c	FUNCTION_11	CALL_6
0x40002ed	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       598	nm.c	FUNCTION_11
0x40002f1	    0x4881f9000000	                              cmp rcx, 0	       600	nm.c	FUNCTION_11	IF_2
0x40002f8	            0x742e	                            je 0x4000328	       600	nm.c	FUNCTION_11	IF_2
0x40002fa	    0x4881fe000000	                              cmp rsi, 0	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000301	            0x743d	                            je 0x4000340	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000303	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000307	        0x488b4010	            mov rax, qword [rax + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x400030b	        0x48035128	             add rdx, qword [rcx + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x400030f	        0x48034628	             add rax, qword [rsi + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000313	          0x4839c2	                            cmp rdx, rax	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000316	            0x7419	                            je 0x4000331	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000318	            0x19c0	                            sbb eax, eax	       603	nm.c	FUNCTION_11	IF_2
0x400031a	          0x83c801	                               or eax, 1	       603	nm.c	FUNCTION_11	IF_2
0x400031d	              0x5b	                                 pop rbx	       611	nm.c	
0x400031e	              0x5d	                                 pop rbp	       611	nm.c	
0x400031f	            0x415c	                                 pop r12	       611	nm.c	
0x4000321	              0xc3	                                     ret	       611	nm.c	
0x4000322	    0x660f1f440000	                    nop word [rax + rax]	       611	nm.c	
0x4000328	    0x4881fe000000	                              cmp rsi, 0	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x400032f	            0x751f	                           jne 0x4000350	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4000331	              0x5b	                                 pop rbx	       611	nm.c	
0x4000332	          0x4889ee	                            mov rsi, rbp	       610	nm.c	FUNCTION_11
0x4000335	          0x4c89e7	                            mov rdi, r12	       610	nm.c	FUNCTION_11
0x4000338	              0x5d	                                 pop rbp	       611	nm.c	
0x4000339	            0x415c	                                 pop r12	       611	nm.c	
0x400033b	      0xe990feffff	             jmp sym.non_numeric_forward	       610	nm.c	FUNCTION_11
0x4000340	      0xb801000000	                              mov eax, 1	       608	nm.c	FUNCTION_11
0x4000345	            0xebd6	                           jmp 0x400031d	       608	nm.c	FUNCTION_11
0x4000347	    0x660f1f840000	                    nop word [rax + rax]	       608	nm.c	FUNCTION_11
0x4000350	      0xb8ffffffff	                     mov eax, 0xffffffff	       603	nm.c	FUNCTION_11	IF_2
0x4000355	            0xebc6	                           jmp 0x400031d	       603	nm.c	FUNCTION_11	IF_2
0x4000357	    0x488b05000000	            mov rax, qword [0x0400035e] 	       595	nm.c	FUNCTION_11
0x400035e	          0x488b38	                    mov rdi, qword [rax]	       595	nm.c	FUNCTION_11
0x4000361	      0xe800000000	                          call 0x4000366	       595	nm.c	FUNCTION_11
0x4000366	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       595	nm.c	FUNCTION_11
0x4000370	        0x4883ec08	                              sub rsp, 8	       615	nm.c	FUNCTION_12	CALL_1
0x4000374	      0xe817ffffff	                call sym.numeric_forward	       616	nm.c	FUNCTION_12
0x4000379	        0x4883c408	                              add rsp, 8	       617	nm.c	
0x400037d	            0xf7d8	                                 neg eax	       616	nm.c	FUNCTION_12
0x400037f	              0xc3	                                     ret	       617	nm.c	
0x4000380	        0x4883ec08	                              sub rsp, 8	       582	nm.c	FUNCTION_10	CALL_1
0x4000384	      0xe847feffff	            call sym.non_numeric_forward	       583	nm.c	FUNCTION_10
0x4000389	        0x4883c408	                              add rsp, 8	       584	nm.c	
0x400038d	            0xf7d8	                                 neg eax	       583	nm.c	FUNCTION_10
0x400038f	              0xc3	                                     ret	       584	nm.c	
0x4000390	            0x4157	                                push r15	       638	nm.c	FUNCTION_13
0x4000392	            0x4156	                                push r14	       638	nm.c	FUNCTION_13
0x4000394	            0x4155	                                push r13	       638	nm.c	FUNCTION_13
0x4000396	            0x4154	                                push r12	       638	nm.c	FUNCTION_13
0x4000398	              0x55	                                push rbp	       638	nm.c	FUNCTION_13
0x4000399	              0x53	                                push rbx	       638	nm.c	FUNCTION_13
0x400039a	          0x4889fb	                            mov rbx, rdi	       638	nm.c	FUNCTION_13
0x400039d	          0x4889f5	                            mov rbp, rsi	       638	nm.c	FUNCTION_13
0x40003a0	          0x4889da	                            mov rdx, rbx	       645	nm.c	FUNCTION_13	CALL_2
0x40003a3	        0x4883ec28	                           sub rsp, 0x28	       638	nm.c	FUNCTION_13
0x40003a7	    0x488b3d000000	            mov rdi, qword [0x040003ae] 	       645	nm.c	FUNCTION_13	CALL_2
0x40003ae	    0x488b0d000000	            mov rcx, qword [0x040003b5] 	       645	nm.c	FUNCTION_13	CALL_2
0x40003b5	    0x8b3500000000	            mov esi, dword [0x040003bb] 	       645	nm.c	FUNCTION_13	CALL_2
0x40003bb	        0x488b4708	                mov rax, qword [rdi + 8]	       645	nm.c	FUNCTION_13	CALL_2
0x40003bf	    0xff9060020000	                call qword [rax + 0x260]	       645	nm.c	FUNCTION_13	CALL_2
0x40003c5	    0x488b3d000000	            mov rdi, qword [0x040003cc] 	       646	nm.c	FUNCTION_13	IF_1
0x40003cc	          0x4989c7	                            mov r15, rax	       645	nm.c	FUNCTION_13	CALL_2
0x40003cf	    0x488b0d000000	            mov rcx, qword [0x040003d6] 	       646	nm.c	FUNCTION_13	IF_1
0x40003d6	          0x4889ea	                            mov rdx, rbp	       646	nm.c	FUNCTION_13	IF_1
0x40003d9	    0x8b3500000000	            mov esi, dword [0x040003df] 	       646	nm.c	FUNCTION_13	IF_1
0x40003df	        0x488b4708	                mov rax, qword [rdi + 8]	       646	nm.c	FUNCTION_13	IF_1
0x40003e3	    0xff9060020000	                call qword [rax + 0x260]	       646	nm.c	FUNCTION_13	IF_1
0x40003e9	          0x4d85ff	                           test r15, r15	       647	nm.c	FUNCTION_13	CALL_4
0x40003ec	     0xf84ae010000	                            je 0x40005a0	       647	nm.c	FUNCTION_13	CALL_4
0x40003f2	          0x4885c0	                           test rax, rax	       647	nm.c	FUNCTION_13	CALL_4
0x40003f5	          0x4989c6	                            mov r14, rax	       647	nm.c	FUNCTION_13	CALL_4
0x40003f8	     0xf84a2010000	                            je 0x40005a0	       647	nm.c	FUNCTION_13	CALL_4
0x40003fe	        0x498b4f20	            mov rcx, qword [r15 + 0x20] 	       650	nm.c	FUNCTION_13	CALL_6
0x4000402	        0x488b4020	            mov rax, qword [rax + 0x20] 	       651	nm.c	FUNCTION_13
0x4000406	    0x4881f9000000	                              cmp rcx, 0	       653	nm.c	FUNCTION_13	CALL_8
0x400040d	     0xf8488010000	                            je 0x400059b	       653	nm.c	FUNCTION_13	CALL_8
0x4000413	    0x483d00000000	                              cmp rax, 0	       655	nm.c	FUNCTION_13	CALL_10
0x4000419	     0xf847c010000	                            je 0x400059b	       655	nm.c	FUNCTION_13	CALL_10
0x400041f	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000423	              0x48	                                 invalid	       658	nm.c	FUNCTION_13	IF_4
display_file	SWITCH,0:DO,0:WHILE,0:CALL,15:ELSE,2:FOR,0:IF,7:functions,0	186
0x4001ed0	            0x4155	                                push r13	      1298	nm.c	FUNCTION_23
0x4001ed2	            0x4154	                                push r12	      1298	nm.c	FUNCTION_23
0x4001ed4	          0x4989fd	                            mov r13, rdi	      1298	nm.c	FUNCTION_23
0x4001ed7	              0x55	                                push rbp	      1298	nm.c	FUNCTION_23
0x4001ed8	              0x53	                                push rbx	      1298	nm.c	FUNCTION_23
0x4001ed9	        0x4883ec18	                           sub rsp, 0x18	      1298	nm.c	FUNCTION_23
0x4001edd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1298	nm.c	FUNCTION_23
0x4001ee6	      0x4889442408	                mov qword [rsp + 8], rax	      1298	nm.c	FUNCTION_23
0x4001eeb	            0x31c0	                            xor eax, eax	      1298	nm.c	FUNCTION_23
0x4001eed	      0xe800000000	                          call 0x4001ef2	      1303	nm.c	FUNCTION_23	IF_1
0x4001ef2	          0x4885c0	                           test rax, rax	      1303	nm.c	FUNCTION_23	IF_1
0x4001ef5	     0xf8efd010000	                           jle 0x40020f8	      1303	nm.c	FUNCTION_23	IF_1
0x4001efb	    0x488b05000000	            mov rax, qword [0x04001f02] 	      1306	nm.c	FUNCTION_23	IF_2
0x4001f02	      0xbe00000000	                              mov esi, 0	      1306	nm.c	FUNCTION_23	IF_2
0x4001f07	          0x4c89ef	                            mov rdi, r13	      1306	nm.c	FUNCTION_23	IF_2
0x4001f0a	          0x4885c0	                           test rax, rax	      1306	nm.c	FUNCTION_23	IF_2
0x4001f0d	        0x480f45f0	                         cmovne rsi, rax	      1306	nm.c	FUNCTION_23	IF_2
0x4001f11	      0xe800000000	                          call 0x4001f16	      1306	nm.c	FUNCTION_23	IF_2
0x4001f16	          0x4885c0	                           test rax, rax	      1307	nm.c	FUNCTION_23	IF_2
0x4001f19	          0x4889c5	                            mov rbp, rax	      1306	nm.c	FUNCTION_23	IF_2
0x4001f1c	     0xf8489020000	                            je 0x40021ab	      1307	nm.c	FUNCTION_23	IF_2
0x4001f22	    0x8b0500000000	            mov eax, dword [0x04001f28] 	      1314	nm.c	FUNCTION_23	IF_3
0x4001f28	            0x85c0	                           test eax, eax	      1314	nm.c	FUNCTION_23	IF_3
0x4001f2a	            0x7407	                            je 0x4001f33	      1314	nm.c	FUNCTION_23	IF_3
0x4001f2c	    0x814d44000010	         or dword [rbp + 0x44], 0x100000	      1315	nm.c	FUNCTION_23
0x4001f33	      0xbe02000000	                              mov esi, 2	      1317	nm.c	FUNCTION_23	IF_4
0x4001f38	          0x4889ef	                            mov rdi, rbp	      1317	nm.c	FUNCTION_23	IF_4
0x4001f3b	      0xe800000000	                          call 0x4001f40	      1317	nm.c	FUNCTION_23	IF_4
0x4001f40	            0x85c0	                           test eax, eax	      1317	nm.c	FUNCTION_23	IF_4
0x4001f42	     0xf84cc000000	                            je 0x4002014	      1317	nm.c	FUNCTION_23	IF_4
0x4001f48	    0x488b05000000	            mov rax, qword [0x04001f4f] 	      1242	nm.c	ELSE_1	FUNCTION_22
0x4001f4f	        0x488b7d00	                    mov rdi, qword [rbp]	      1242	nm.c	ELSE_1	FUNCTION_22
0x4001f53	          0xff5008	                    call qword [rax + 8]	      1242	nm.c	ELSE_1	FUNCTION_22
0x4001f56	    0x833d00000000	               cmp dword [0x04001f5d], 0	      1244	nm.c	ELSE_1	FUNCTION_22	CALL_3
0x4001f5d	     0xf859c010000	                           jne 0x40020ff	      1244	nm.c	ELSE_1	FUNCTION_22	CALL_3
0x4001f63	          0x4531e4	                          xor r12d, r12d	      1306	nm.c	FUNCTION_23	IF_2
0x4001f66	            0xeb5b	                           jmp 0x4001fc3	      1306	nm.c	FUNCTION_23	IF_2
0x4001f68	     0xf1f84000000	                   nop dword [rax + rax]	      1306	nm.c	FUNCTION_23	IF_2
0x4001f70	          0x4889df	                            mov rdi, rbx	      1262	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_12
0x4001f73	      0xe8e8feffff	                call sym.set_print_width	      1262	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_12
0x4001f78	    0x488b05000000	            mov rax, qword [0x04001f7f] 	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001f7f	          0x488b33	                    mov rsi, qword [rbx]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001f82	        0x488b7d00	                    mov rdi, qword [rbp]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001f86	          0xff5010	                 call qword [rax + 0x10]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001f89	          0x4889ee	                            mov rsi, rbp	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001f8c	          0x4889df	                            mov rdi, rbx	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001f8f	      0xe8acecffff	               call sym.display_rel_file	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001f94	          0x4d85e4	                           test r12, r12	      1277	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001f97	            0x7427	                            je 0x4001fc0	      1277	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001f99	          0x4c89e7	                            mov rdi, r12	      1279	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001f9c	      0xe800000000	                          call 0x4001fa1	      1279	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001fa1	          0x4939dc	                            cmp r12, rbx	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4001fa4	    0x48c705000000	               mov qword [0x04001faf], 0	      1280	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001faf	    0x48c705000000	               mov qword [0x04001fba], 0	      1281	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4001fba	     0xf848a000000	                            je 0x400204a	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4001fc0	          0x4989dc	                            mov r12, rbx	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4001fc3	          0x4c89e6	                            mov rsi, r12	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001fc6	          0x4889ef	                            mov rdi, rbp	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001fc9	      0xe800000000	                          call 0x4001fce	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001fce	          0x4885c0	                           test rax, rax	      1253	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001fd1	          0x4889c3	                            mov rbx, rax	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001fd4	     0xf84bc000000	                            je 0x4002096	      1253	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001fda	          0x4889e2	                            mov rdx, rsp	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fdd	      0xbe01000000	                              mov esi, 1	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fe2	          0x4889c7	                            mov rdi, rax	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fe5	      0xe800000000	                          call 0x4001fea	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fea	            0x85c0	                           test eax, eax	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fec	            0x7582	                           jne 0x4001f70	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fee	          0x488b3b	                    mov rdi, qword [rbx]	      1269	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_17
0x4001ff1	      0xe800000000	                          call 0x4001ff6	      1269	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_17
0x4001ff6	      0xe800000000	                          call 0x4001ffb	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x4001ffb	          0x83f80d	                            cmp eax, 0xd	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x4001ffe	            0x7594	                           jne 0x4001f94	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x4002000	        0x488b3c24	                    mov rdi, qword [rsp]	      1272	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_19
0x4002004	      0xe800000000	                          call 0x4002009	      1272	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_19
0x4002009	        0x488b3c24	                    mov rdi, qword [rsp]	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x400200d	      0xe800000000	                          call 0x4002012	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x4002012	            0xeb80	                           jmp 0x4001f94	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x4002014	          0x4889e2	                            mov rdx, rsp	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002017	      0xbe01000000	                              mov esi, 1	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x400201c	          0x4889ef	                            mov rdi, rbp	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x400201f	      0xe800000000	                          call 0x4002024	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002024	            0x85c0	                           test eax, eax	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002026	     0xf849d000000	                            je 0x40020c9	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x400202c	          0x4889ef	                            mov rdi, rbp	      1323	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_8
0x400202f	      0xe82cfeffff	                call sym.set_print_width	      1323	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_8
0x4002034	    0x488b05000000	            mov rax, qword [0x0400203b] 	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x400203b	          0x4c89ef	                            mov rdi, r13	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x400203e	            0xff10	                        call qword [rax]	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x4002040	            0x31f6	                            xor esi, esi	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002042	          0x4889ef	                            mov rdi, rbp	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002045	      0xe8f6ebffff	               call sym.display_rel_file	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x400204a	      0xbb01000000	                              mov ebx, 1	      1299	nm.c	FUNCTION_23
0x400204f	          0x4889ef	                            mov rdi, rbp	      1338	nm.c	FUNCTION_23	CALL_15
0x4002052	      0xe800000000	                          call 0x4002057	      1338	nm.c	FUNCTION_23	CALL_15
0x4002057	            0x85c0	                           test eax, eax	      1338	nm.c	FUNCTION_23	CALL_15
0x4002059	     0xf8460010000	                            je 0x40021bf	      1338	nm.c	FUNCTION_23	CALL_15
0x400205f	    0x48c705000000	               mov qword [0x0400206a], 0	      1341	nm.c	FUNCTION_23
0x400206a	    0x48c705000000	               mov qword [0x04002075], 0	      1342	nm.c	FUNCTION_23
0x4002075	            0x89d8	                            mov eax, ebx	      1344	nm.c	FUNCTION_23
0x4002077	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1345	nm.c	
0x400207c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1345	nm.c	
0x4002085	     0xf852f010000	                           jne 0x40021ba	      1345	nm.c	
0x400208b	        0x4883c418	                           add rsp, 0x18	      1345	nm.c	
0x400208f	              0x5b	                                 pop rbx	      1345	nm.c	
0x4002090	              0x5d	                                 pop rbp	      1345	nm.c	
0x4002091	            0x415c	                                 pop r12	      1345	nm.c	
0x4002093	            0x415d	                                 pop r13	      1345	nm.c	
0x4002095	              0xc3	                                     ret	      1345	nm.c	
0x4002096	      0xe800000000	                          call 0x400209b	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x400209b	          0x83f809	                              cmp eax, 9	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x400209e	     0xf8523010000	                           jne 0x40021c7	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x40020a4	          0x4d85e4	                           test r12, r12	      1288	nm.c	FUNCTION_22	ELSE_1	IF_8
0x40020a7	            0x74a1	                            je 0x400204a	      1288	nm.c	FUNCTION_22	ELSE_1	IF_8
0x40020a9	          0x4c89e7	                            mov rdi, r12	      1290	nm.c	FUNCTION_22	ELSE_1	IF_8
0x40020ac	      0xe800000000	                          call 0x40020b1	      1290	nm.c	FUNCTION_22	ELSE_1	IF_8
0x40020b1	    0x48c705000000	               mov qword [0x040020bc], 0	      1291	nm.c	FUNCTION_22	ELSE_1	IF_8
0x40020bc	    0x48c705000000	               mov qword [0x040020c7], 0	      1292	nm.c	FUNCTION_22	ELSE_1	IF_8
0x40020c7	            0xeb81	                           jmp 0x400204a	      1292	nm.c	FUNCTION_22	ELSE_1	IF_8
0x40020c9	          0x4c89ef	                            mov rdi, r13	      1329	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_11
0x40020cc	            0x31db	                            xor ebx, ebx	      1335	nm.c	FUNCTION_23	ELSE_2
0x40020ce	      0xe800000000	                          call 0x40020d3	      1329	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_11
0x40020d3	      0xe800000000	                          call 0x40020d8	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020d8	          0x83f80d	                            cmp eax, 0xd	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020db	     0xf856effffff	                           jne 0x400204f	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020e1	        0x488b3c24	                    mov rdi, qword [rsp]	      1332	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_13
0x40020e5	      0xe800000000	                          call 0x40020ea	      1332	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_13
0x40020ea	        0x488b3c24	                    mov rdi, qword [rsp]	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020ee	      0xe800000000	                          call 0x40020f3	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020f3	      0xe957ffffff	                           jmp 0x400204f	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020f8	            0x31c0	                            xor eax, eax	      1304	nm.c	FUNCTION_23
0x40020fa	      0xe978ffffff	                           jmp 0x4002077	      1304	nm.c	FUNCTION_23
0x40020ff	        0x4883ceff	              or rsi, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4002103	          0x4889e2	                            mov rdx, rsp	       430	nm.c	FUNCTION_7	FOR_1
0x4002106	          0x4889ef	                            mov rdi, rbp	       430	nm.c	FUNCTION_7	FOR_1
0x4002109	      0xe800000000	                          call 0x400210e	       430	nm.c	FUNCTION_7	FOR_1
0x400210e	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4002112	          0x4889c3	                            mov rbx, rax	       430	nm.c	FUNCTION_7	FOR_1
0x4002115	     0xf8448feffff	                            je 0x4001f63	       430	nm.c	FUNCTION_7	FOR_1
0x400211b	            0x31ff	                            xor edi, edi	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x400211d	      0xba05000000	                              mov edx, 5	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4002122	      0xbe00000000	                              mov esi, 0	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4002127	      0xe800000000	                          call 0x400212c	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x400212c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002131	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x4002134	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002136	      0xe800000000	                          call 0x400213b	       104	stdio2.h	CALL_28
0x400213b	            0xeb4c	                           jmp 0x4002189	       104	stdio2.h	CALL_28
0x400213d	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4002140	        0x488b0424	                    mov rax, qword [rsp]	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4002144	          0x488b30	                    mov rsi, qword [rax]	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4002147	          0x4885f6	                           test rsi, rsi	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x400214a	            0x7422	                            je 0x400216e	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x400214c	          0x4889ea	                            mov rdx, rbp	       445	nm.c	FUNCTION_7	FOR_1	IF_3	CALL_7
0x400214f	      0xbf00000000	                              mov edi, 0	       445	nm.c	FUNCTION_7	FOR_1	IF_3	CALL_7
0x4002154	      0xe8f7deffff	                  call sym.print_symname	       445	nm.c	FUNCTION_7	FOR_1	IF_3	CALL_7
0x4002159	        0x498b1424	                    mov rdx, qword [r12]	       104	stdio2.h	CALL_28
0x400215d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002162	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002167	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002169	      0xe800000000	                          call 0x400216e	       104	stdio2.h	CALL_28
0x400216e	          0x4889de	                            mov rsi, rbx	       432	nm.c	FUNCTION_7	FOR_1
0x4002171	          0x4889e2	                            mov rdx, rsp	       432	nm.c	FUNCTION_7	FOR_1
0x4002174	          0x4889ef	                            mov rdi, rbp	       432	nm.c	FUNCTION_7	FOR_1
0x4002177	      0xe800000000	                          call 0x400217c	       432	nm.c	FUNCTION_7	FOR_1
0x400217c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4002180	          0x4889c3	                            mov rbx, rax	       432	nm.c	FUNCTION_7	FOR_1
0x4002183	     0xf84dafdffff	                            je 0x4001f63	       430	nm.c	FUNCTION_7	FOR_1
0x4002189	        0x488b4508	                mov rax, qword [rbp + 8]	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x400218d	          0x4889de	                            mov rsi, rbx	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4002190	          0x4889ef	                            mov rdi, rbp	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4002193	    0xff90d8010000	                call qword [rax + 0x1d8]	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4002199	          0x4885c0	                           test rax, rax	       441	nm.c	FUNCTION_7	FOR_1	CALL_5
0x400219c	          0x4989c4	                            mov r12, rax	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x400219f	            0x759f	                           jne 0x4002140	       441	nm.c	FUNCTION_7	FOR_1	CALL_5
0x40021a1	      0xbf00000000	                              mov edi, 0	       442	nm.c	FUNCTION_7	FOR_1	IF_3
0x40021a6	      0xe800000000	                          call 0x40021ab	       442	nm.c	FUNCTION_7	FOR_1	IF_3
0x40021ab	          0x4c89ef	                            mov rdi, r13	      1309	nm.c	FUNCTION_23	IF_2
0x40021ae	      0xe800000000	                          call 0x40021b3	      1309	nm.c	FUNCTION_23	IF_2
0x40021b3	            0x31c0	                            xor eax, eax	      1310	nm.c	FUNCTION_23	IF_2
0x40021b5	      0xe9bdfeffff	                           jmp 0x4002077	      1310	nm.c	FUNCTION_23	IF_2
0x40021ba	      0xe800000000	                          call 0x40021bf	      1345	nm.c	
0x40021bf	          0x4c89ef	                            mov rdi, r13	      1339	nm.c	FUNCTION_23
0x40021c2	      0xe800000000	                          call 0x40021c7	      1339	nm.c	FUNCTION_23
0x40021c7	        0x488b7d00	                    mov rdi, qword [rbp]	      1256	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x40021cb	      0xe800000000	    call sym.print_archive_filename_sysv	      1256	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
size_forward1	SWITCH,0:DO,0:WHILE,0:CALL,19:ELSE,0:FOR,0:IF,9:functions,0	162
0x4000390	            0x4157	                                push r15	       638	nm.c	FUNCTION_13
0x4000392	            0x4156	                                push r14	       638	nm.c	FUNCTION_13
0x4000394	            0x4155	                                push r13	       638	nm.c	FUNCTION_13
0x4000396	            0x4154	                                push r12	       638	nm.c	FUNCTION_13
0x4000398	              0x55	                                push rbp	       638	nm.c	FUNCTION_13
0x4000399	              0x53	                                push rbx	       638	nm.c	FUNCTION_13
0x400039a	          0x4889fb	                            mov rbx, rdi	       638	nm.c	FUNCTION_13
0x400039d	          0x4889f5	                            mov rbp, rsi	       638	nm.c	FUNCTION_13
0x40003a0	          0x4889da	                            mov rdx, rbx	       645	nm.c	FUNCTION_13	CALL_2
0x40003a3	        0x4883ec28	                           sub rsp, 0x28	       638	nm.c	FUNCTION_13
0x40003a7	    0x488b3d000000	            mov rdi, qword [0x040003ae] 	       645	nm.c	FUNCTION_13	CALL_2
0x40003ae	    0x488b0d000000	            mov rcx, qword [0x040003b5] 	       645	nm.c	FUNCTION_13	CALL_2
0x40003b5	    0x8b3500000000	            mov esi, dword [0x040003bb] 	       645	nm.c	FUNCTION_13	CALL_2
0x40003bb	        0x488b4708	                mov rax, qword [rdi + 8]	       645	nm.c	FUNCTION_13	CALL_2
0x40003bf	    0xff9060020000	                call qword [rax + 0x260]	       645	nm.c	FUNCTION_13	CALL_2
0x40003c5	    0x488b3d000000	            mov rdi, qword [0x040003cc] 	       646	nm.c	FUNCTION_13	IF_1
0x40003cc	          0x4989c7	                            mov r15, rax	       645	nm.c	FUNCTION_13	CALL_2
0x40003cf	    0x488b0d000000	            mov rcx, qword [0x040003d6] 	       646	nm.c	FUNCTION_13	IF_1
0x40003d6	          0x4889ea	                            mov rdx, rbp	       646	nm.c	FUNCTION_13	IF_1
0x40003d9	    0x8b3500000000	            mov esi, dword [0x040003df] 	       646	nm.c	FUNCTION_13	IF_1
0x40003df	        0x488b4708	                mov rax, qword [rdi + 8]	       646	nm.c	FUNCTION_13	IF_1
0x40003e3	    0xff9060020000	                call qword [rax + 0x260]	       646	nm.c	FUNCTION_13	IF_1
0x40003e9	          0x4d85ff	                           test r15, r15	       647	nm.c	FUNCTION_13	CALL_4
0x40003ec	     0xf84ae010000	                            je 0x40005a0	       647	nm.c	FUNCTION_13	CALL_4
0x40003f2	          0x4885c0	                           test rax, rax	       647	nm.c	FUNCTION_13	CALL_4
0x40003f5	          0x4989c6	                            mov r14, rax	       647	nm.c	FUNCTION_13	CALL_4
0x40003f8	     0xf84a2010000	                            je 0x40005a0	       647	nm.c	FUNCTION_13	CALL_4
0x40003fe	        0x498b4f20	            mov rcx, qword [r15 + 0x20] 	       650	nm.c	FUNCTION_13	CALL_6
0x4000402	        0x488b4020	            mov rax, qword [rax + 0x20] 	       651	nm.c	FUNCTION_13
0x4000406	    0x4881f9000000	                              cmp rcx, 0	       653	nm.c	FUNCTION_13	CALL_8
0x400040d	     0xf8488010000	                            je 0x400059b	       653	nm.c	FUNCTION_13	CALL_8
0x4000413	    0x483d00000000	                              cmp rax, 0	       655	nm.c	FUNCTION_13	CALL_10
0x4000419	     0xf847c010000	                            je 0x400059b	       655	nm.c	FUNCTION_13	CALL_10
0x400041f	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000423	        0x488b4028	            mov rax, qword [rax + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000427	          0x4889cf	                            mov rdi, rcx	       658	nm.c	FUNCTION_13	IF_4
0x400042a	          0x4889c6	                            mov rsi, rax	       658	nm.c	FUNCTION_13	IF_4
0x400042d	        0x49037f10	             add rdi, qword [r15 + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x4000431	        0x49037610	             add rsi, qword [r14 + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x4000435	          0x4839f7	                            cmp rdi, rsi	       658	nm.c	FUNCTION_13	IF_4
0x4000438	            0x7416	                            je 0x4000450	       658	nm.c	FUNCTION_13	IF_4
0x400043a	            0x19c0	                            sbb eax, eax	       659	nm.c	FUNCTION_13
0x400043c	          0x83c801	                               or eax, 1	       659	nm.c	FUNCTION_13
0x400043f	        0x4883c428	                           add rsp, 0x28	       702	nm.c	
0x4000443	              0x5b	                                 pop rbx	       702	nm.c	
0x4000444	              0x5d	                                 pop rbp	       702	nm.c	
0x4000445	            0x415c	                                 pop r12	       702	nm.c	
0x4000447	            0x415d	                                 pop r13	       702	nm.c	
0x4000449	            0x415e	                                 pop r14	       702	nm.c	
0x400044b	            0x415f	                                 pop r15	       702	nm.c	
0x400044d	              0xc3	                                     ret	       702	nm.c	
0x400044e	            0x6690	                                     nop	       702	nm.c	
0x4000450	          0x4839c1	                            cmp rcx, rax	       661	nm.c	FUNCTION_13	IF_5
0x4000453	            0x75e5	                           jne 0x400043a	       661	nm.c	FUNCTION_13	IF_5
0x4000455	        0x4d8b6f08	                mov r13, qword [r15 + 8]	       664	nm.c	FUNCTION_13	CALL_12
0x4000459	        0x4d8b6608	                mov r12, qword [r14 + 8]	       665	nm.c	FUNCTION_13	CALL_13
0x400045d	          0x4c89ef	                            mov rdi, r13	       666	nm.c	FUNCTION_13	CALL_14
0x4000460	      0xe800000000	                          call 0x4000465	       666	nm.c	FUNCTION_13	CALL_14
0x4000465	          0x4c89e7	                            mov rdi, r12	       667	nm.c	FUNCTION_13
0x4000468	      0x4889442410	             mov qword [rsp + 0x10], rax	       666	nm.c	FUNCTION_13	CALL_14
0x400046d	      0xe800000000	                          call 0x4000472	       667	nm.c	FUNCTION_13
0x4000472	      0xbe00000000	                              mov esi, 0	       672	nm.c	FUNCTION_13	CALL_16
0x4000477	          0x4c89ef	                            mov rdi, r13	       672	nm.c	FUNCTION_13	CALL_16
0x400047a	      0x4889442408	                mov qword [rsp + 8], rax	       667	nm.c	FUNCTION_13
0x400047f	      0xe800000000	                          call 0x4000484	       672	nm.c	FUNCTION_13	CALL_16
0x4000484	          0x4885c0	                           test rax, rax	       673	nm.c	FUNCTION_13	CALL_17
0x4000487	     0xf84cb000000	                            je 0x4000558	       673	nm.c	FUNCTION_13	CALL_17
0x400048d	      0xbe00000000	                              mov esi, 0	       674	nm.c	FUNCTION_13	CALL_18
0x4000492	          0x4c89e7	                            mov rdi, r12	       674	nm.c	FUNCTION_13	CALL_18
0x4000495	      0xe800000000	                          call 0x400049a	       674	nm.c	FUNCTION_13	CALL_18
0x400049a	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x400049d	            0x7431	                            je 0x40004d0	       675	nm.c	FUNCTION_13
0x400049f	      0x41f6471940	           test byte [r15 + 0x19], 0x40 	       693	nm.c	FUNCTION_13
0x40004a4	            0x755a	                           jne 0x4000500	       693	nm.c	FUNCTION_13
0x40004a6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       693	nm.c	FUNCTION_13
0x40004ab	        0x4883f802	                              cmp rax, 2	       693	nm.c	FUNCTION_13
0x40004af	            0x7608	                           jbe 0x40004b9	       693	nm.c	FUNCTION_13
0x40004b1	    0x41807c05fe2e	         cmp byte [r13 + rax - 2], 0x2e 	       693	nm.c	FUNCTION_13
0x40004b7	            0x7433	                            je 0x40004ec	       693	nm.c	FUNCTION_13
0x40004b9	      0x41f6461940	           test byte [r14 + 0x19], 0x40 	       694	nm.c	FUNCTION_13
0x40004be	     0xf84eb000000	                            je 0x40005af	       694	nm.c	FUNCTION_13
0x40004c4	      0xb801000000	                              mov eax, 1	       659	nm.c	FUNCTION_13
0x40004c9	      0xe971ffffff	                           jmp 0x400043f	       659	nm.c	FUNCTION_13
0x40004ce	            0x6690	                                     nop	       659	nm.c	FUNCTION_13
0x40004d0	      0xbe00000000	                              mov esi, 0	       675	nm.c	FUNCTION_13
0x40004d5	          0x4c89e7	                            mov rdi, r12	       675	nm.c	FUNCTION_13
0x40004d8	      0xe800000000	                          call 0x40004dd	       675	nm.c	FUNCTION_13
0x40004dd	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x40004e0	            0x75bd	                           jne 0x400049f	       675	nm.c	FUNCTION_13
0x40004e2	      0xb8ffffffff	                     mov eax, 0xffffffff	       659	nm.c	FUNCTION_13
0x40004e7	      0xe953ffffff	                           jmp 0x400043f	       659	nm.c	FUNCTION_13
0x40004ec	    0x410fb64405ff	         movzx eax, byte [r13 + rax - 1]	       693	nm.c	FUNCTION_13
0x40004f2	            0x3c6f	                            cmp al, 0x6f	       693	nm.c	FUNCTION_13
0x40004f4	            0x740a	                            je 0x4000500	       693	nm.c	FUNCTION_13
0x40004f6	            0x3c61	                            cmp al, 0x61	       693	nm.c	FUNCTION_13
0x40004f8	            0x75bf	                           jne 0x40004b9	       693	nm.c	FUNCTION_13
0x40004fa	    0x660f1f440000	                    nop word [rax + rax]	       693	nm.c	FUNCTION_13
0x4000500	      0x41f6461940	           test byte [r14 + 0x19], 0x40 	       694	nm.c	FUNCTION_13
0x4000505	            0x7533	                           jne 0x400053a	       694	nm.c	FUNCTION_13
0x4000507	    0x48837c240802	                  cmp qword [rsp + 8], 2	       694	nm.c	FUNCTION_13
0x400050d	            0x76d3	                           jbe 0x40004e2	       694	nm.c	FUNCTION_13
0x400050f	      0x488b442408	                mov rax, qword [rsp + 8]	       694	nm.c	FUNCTION_13
0x4000514	    0x41807c04fe2e	         cmp byte [r12 + rax - 2], 0x2e 	       694	nm.c	FUNCTION_13
0x400051a	            0x75c6	                           jne 0x40004e2	       694	nm.c	FUNCTION_13
0x400051c	      0xb801000000	                              mov eax, 1	       694	nm.c	FUNCTION_13
0x4000521	      0x488b542408	                mov rdx, qword [rsp + 8]	       694	nm.c	FUNCTION_13
0x4000526	    0x410fb65414ff	         movzx edx, byte [r12 + rdx - 1]	       694	nm.c	FUNCTION_13
0x400052c	          0x80fa6f	                            cmp dl, 0x6f	       694	nm.c	FUNCTION_13
0x400052f	            0x745f	                            je 0x4000590	       694	nm.c	FUNCTION_13
0x4000531	          0x80fa61	                            cmp dl, 0x61	       694	nm.c	FUNCTION_13
0x4000534	            0x745a	                            je 0x4000590	       694	nm.c	FUNCTION_13
0x4000536	            0x85c0	                           test eax, eax	       696	nm.c	FUNCTION_13	IF_8
0x4000538	            0x75a8	                           jne 0x40004e2	       696	nm.c	FUNCTION_13	IF_8
0x400053a	        0x4883c428	                           add rsp, 0x28	       702	nm.c	
0x400053e	          0x4889ee	                            mov rsi, rbp	       701	nm.c	FUNCTION_13
0x4000541	          0x4889df	                            mov rdi, rbx	       701	nm.c	FUNCTION_13
0x4000544	              0x5b	                                 pop rbx	       702	nm.c	
0x4000545	              0x5d	                                 pop rbp	       702	nm.c	
0x4000546	            0x415c	                                 pop r12	       702	nm.c	
0x4000548	            0x415d	                                 pop r13	       702	nm.c	
0x400054a	            0x415e	                                 pop r14	       702	nm.c	
0x400054c	            0x415f	                                 pop r15	       702	nm.c	
0x400054e	      0xe97dfcffff	             jmp sym.non_numeric_forward	       701	nm.c	FUNCTION_13
0x4000553	       0xf1f440000	                   nop dword [rax + rax]	       701	nm.c	FUNCTION_13
0x4000558	      0xbe00000000	                              mov esi, 0	       673	nm.c	FUNCTION_13	CALL_17
0x400055d	          0x4c89ef	                            mov rdi, r13	       673	nm.c	FUNCTION_13	CALL_17
0x4000560	      0xe800000000	                          call 0x4000565	       673	nm.c	FUNCTION_13	CALL_17
0x4000565	      0xbe00000000	                              mov esi, 0	       674	nm.c	FUNCTION_13	CALL_18
0x400056a	          0x4c89e7	                            mov rdi, r12	       674	nm.c	FUNCTION_13	CALL_18
0x400056d	      0x4889442418	             mov qword [rsp + 0x18], rax	       673	nm.c	FUNCTION_13	CALL_17
0x4000572	      0xe800000000	                          call 0x4000577	       674	nm.c	FUNCTION_13	CALL_18
0x4000577	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x400057a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       675	nm.c	FUNCTION_13
0x400057f	            0x744e	                            je 0x40005cf	       675	nm.c	FUNCTION_13
0x4000581	          0x4885c9	                           test rcx, rcx	       679	nm.c	FUNCTION_13	IF_7
0x4000584	     0xf843affffff	                            je 0x40004c4	       679	nm.c	FUNCTION_13	IF_7
0x400058a	      0xe910ffffff	                           jmp 0x400049f	       679	nm.c	FUNCTION_13	IF_7
0x400058f	              0x90	                                     nop	       679	nm.c	FUNCTION_13	IF_7
0x4000590	          0x83f801	                              cmp eax, 1	       698	nm.c	FUNCTION_13	IF_9
0x4000593	     0xf852bffffff	                           jne 0x40004c4	       698	nm.c	FUNCTION_13	IF_9
0x4000599	            0xeb9f	                           jmp 0x400053a	       698	nm.c	FUNCTION_13	IF_9
0x400059b	      0xe800000000	                          call 0x40005a0	       654	nm.c	FUNCTION_13	IF_3	CALL_9
0x40005a0	    0x488b05000000	            mov rax, qword [0x040005a7] 	       648	nm.c	FUNCTION_13
0x40005a7	          0x488b38	                    mov rdi, qword [rax]	       648	nm.c	FUNCTION_13
0x40005aa	      0xe800000000	                          call 0x40005af	       648	nm.c	FUNCTION_13
0x40005af	    0x48837c240802	                  cmp qword [rsp + 8], 2	       694	nm.c	FUNCTION_13
0x40005b5	            0x7683	                           jbe 0x400053a	       694	nm.c	FUNCTION_13
0x40005b7	      0x488b442408	                mov rax, qword [rsp + 8]	       694	nm.c	FUNCTION_13
0x40005bc	    0x41807c04fe2e	         cmp byte [r12 + rax - 2], 0x2e 	       694	nm.c	FUNCTION_13
0x40005c2	     0xf8572ffffff	                           jne 0x400053a	       694	nm.c	FUNCTION_13
0x40005c8	            0x31c0	                            xor eax, eax	       694	nm.c	FUNCTION_13
0x40005ca	      0xe952ffffff	                           jmp 0x4000521	       694	nm.c	FUNCTION_13
0x40005cf	      0xbe00000000	                              mov esi, 0	       675	nm.c	FUNCTION_13
0x40005d4	          0x4c89e7	                            mov rdi, r12	       675	nm.c	FUNCTION_13
0x40005d7	      0xe800000000	                          call 0x40005dc	       675	nm.c	FUNCTION_13
0x40005dc	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x40005df	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       675	nm.c	FUNCTION_13
0x40005e4	            0x759b	                           jne 0x4000581	       675	nm.c	FUNCTION_13
0x40005e6	          0x83c8ff	                      or eax, 0xffffffff	       659	nm.c	FUNCTION_13
0x40005e9	          0x4885c9	                           test rcx, rcx	       677	nm.c	FUNCTION_13	IF_6
0x40005ec	     0xf854dfeffff	                           jne 0x400043f	       677	nm.c	FUNCTION_13	IF_6
0x40005f2	      0xe9a8feffff	                           jmp 0x400049f	       677	nm.c	FUNCTION_13	IF_6
numeric_forward	SWITCH,0:DO,0:WHILE,0:CALL,10:ELSE,2:FOR,0:IF,5:functions,0	57
0x4000290	            0x4154	                                push r12	       588	nm.c	FUNCTION_11
0x4000292	          0x4989fc	                            mov r12, rdi	       588	nm.c	FUNCTION_11
0x4000295	    0x488b3d000000	            mov rdi, qword [0x0400029c] 	       592	nm.c	FUNCTION_11	CALL_2
0x400029c	              0x55	                                push rbp	       588	nm.c	FUNCTION_11
0x400029d	              0x53	                                push rbx	       588	nm.c	FUNCTION_11
0x400029e	          0x4889f5	                            mov rbp, rsi	       588	nm.c	FUNCTION_11
0x40002a1	    0x488b0d000000	            mov rcx, qword [0x040002a8] 	       592	nm.c	FUNCTION_11	CALL_2
0x40002a8	          0x4c89e2	                            mov rdx, r12	       592	nm.c	FUNCTION_11	CALL_2
0x40002ab	    0x8b3500000000	            mov esi, dword [0x040002b1] 	       592	nm.c	FUNCTION_11	CALL_2
0x40002b1	        0x488b4708	                mov rax, qword [rdi + 8]	       592	nm.c	FUNCTION_11	CALL_2
0x40002b5	    0xff9060020000	                call qword [rax + 0x260]	       592	nm.c	FUNCTION_11	CALL_2
0x40002bb	    0x488b3d000000	            mov rdi, qword [0x040002c2] 	       593	nm.c	FUNCTION_11	IF_1
0x40002c2	          0x4889c3	                            mov rbx, rax	       592	nm.c	FUNCTION_11	CALL_2
0x40002c5	    0x488b0d000000	            mov rcx, qword [0x040002cc] 	       593	nm.c	FUNCTION_11	IF_1
0x40002cc	          0x4889ea	                            mov rdx, rbp	       593	nm.c	FUNCTION_11	IF_1
0x40002cf	    0x8b3500000000	            mov esi, dword [0x040002d5] 	       593	nm.c	FUNCTION_11	IF_1
0x40002d5	        0x488b4708	                mov rax, qword [rdi + 8]	       593	nm.c	FUNCTION_11	IF_1
0x40002d9	    0xff9060020000	                call qword [rax + 0x260]	       593	nm.c	FUNCTION_11	IF_1
0x40002df	          0x4885db	                           test rbx, rbx	       594	nm.c	FUNCTION_11	CALL_4
0x40002e2	            0x7473	                            je 0x4000357	       594	nm.c	FUNCTION_11	CALL_4
0x40002e4	          0x4885c0	                           test rax, rax	       594	nm.c	FUNCTION_11	CALL_4
0x40002e7	            0x746e	                            je 0x4000357	       594	nm.c	FUNCTION_11	CALL_4
0x40002e9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       597	nm.c	FUNCTION_11	CALL_6
0x40002ed	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       598	nm.c	FUNCTION_11
0x40002f1	    0x4881f9000000	                              cmp rcx, 0	       600	nm.c	FUNCTION_11	IF_2
0x40002f8	            0x742e	                            je 0x4000328	       600	nm.c	FUNCTION_11	IF_2
0x40002fa	    0x4881fe000000	                              cmp rsi, 0	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000301	            0x743d	                            je 0x4000340	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000303	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000307	        0x488b4010	            mov rax, qword [rax + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x400030b	        0x48035128	             add rdx, qword [rcx + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x400030f	        0x48034628	             add rax, qword [rsi + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000313	          0x4839c2	                            cmp rdx, rax	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000316	            0x7419	                            je 0x4000331	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000318	            0x19c0	                            sbb eax, eax	       603	nm.c	FUNCTION_11	IF_2
0x400031a	          0x83c801	                               or eax, 1	       603	nm.c	FUNCTION_11	IF_2
0x400031d	              0x5b	                                 pop rbx	       611	nm.c	
0x400031e	              0x5d	                                 pop rbp	       611	nm.c	
0x400031f	            0x415c	                                 pop r12	       611	nm.c	
0x4000321	              0xc3	                                     ret	       611	nm.c	
0x4000322	    0x660f1f440000	                    nop word [rax + rax]	       611	nm.c	
0x4000328	    0x4881fe000000	                              cmp rsi, 0	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x400032f	            0x751f	                           jne 0x4000350	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4000331	              0x5b	                                 pop rbx	       611	nm.c	
0x4000332	          0x4889ee	                            mov rsi, rbp	       610	nm.c	FUNCTION_11
0x4000335	          0x4c89e7	                            mov rdi, r12	       610	nm.c	FUNCTION_11
0x4000338	              0x5d	                                 pop rbp	       611	nm.c	
0x4000339	            0x415c	                                 pop r12	       611	nm.c	
0x400033b	      0xe990feffff	             jmp sym.non_numeric_forward	       610	nm.c	FUNCTION_11
0x4000340	      0xb801000000	                              mov eax, 1	       608	nm.c	FUNCTION_11
0x4000345	            0xebd6	                           jmp 0x400031d	       608	nm.c	FUNCTION_11
0x4000347	    0x660f1f840000	                    nop word [rax + rax]	       608	nm.c	FUNCTION_11
0x4000350	      0xb8ffffffff	                     mov eax, 0xffffffff	       603	nm.c	FUNCTION_11	IF_2
0x4000355	            0xebc6	                           jmp 0x400031d	       603	nm.c	FUNCTION_11	IF_2
0x4000357	    0x488b05000000	            mov rax, qword [0x0400035e] 	       595	nm.c	FUNCTION_11
0x400035e	          0x488b38	                    mov rdi, qword [rax]	       595	nm.c	FUNCTION_11
0x4000361	      0xe800000000	                          call 0x4000366	       595	nm.c	FUNCTION_11
print_symbol_info_bsd	SWITCH,0:DO,0:WHILE,0:CALL,5:ELSE,2:FOR,0:IF,5:functions,0	107
0x4001810	              0x55	                                push rbp	      1520	nm.c	FUNCTION_37	IF_1
0x4001811	              0x53	                                push rbx	      1520	nm.c	FUNCTION_37	IF_1
0x4001812	          0x4889fb	                            mov rbx, rdi	      1520	nm.c	FUNCTION_37	IF_1
0x4001815	          0x4889f5	                            mov rbp, rsi	      1520	nm.c	FUNCTION_37	IF_1
0x4001818	        0x4883ec08	                              sub rsp, 8	      1520	nm.c	FUNCTION_37	IF_1
0x400181c	          0x488b07	                    mov rax, qword [rdi]	      1521	nm.c	FUNCTION_37	IF_1
0x400181f	         0xfbe7808	               movsx edi, byte [rax + 8]	      1521	nm.c	FUNCTION_37	IF_1
0x4001823	      0xe800000000	                          call 0x4001828	      1521	nm.c	FUNCTION_37	IF_1
0x4001828	            0x85c0	                           test eax, eax	      1521	nm.c	FUNCTION_37	IF_1
0x400182a	            0x7464	                            je 0x4001890	      1521	nm.c	FUNCTION_37	IF_1
0x400182c	    0x833d00000000	           cmp dword [0x04001833], 0x40 	      1523	nm.c	FUNCTION_37	ELSE_1
0x4001833	     0xf84df000000	                            je 0x4001918	      1523	nm.c	FUNCTION_37	ELSE_1
0x4001839	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400183e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001843	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001845	      0xe800000000	                          call 0x400184a	       104	stdio2.h	CALL_28
0x400184a	          0x488b03	                    mov rax, qword [rbx]	      1544	nm.c	FUNCTION_37	IF_5
0x400184d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001852	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001857	         0xfbe5008	               movsx edx, byte [rax + 8]	       104	stdio2.h	CALL_28
0x400185b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400185d	      0xe800000000	                          call 0x4001862	       104	stdio2.h	CALL_28
0x4001862	          0x488b03	                    mov rax, qword [rbx]	      1546	nm.c	FUNCTION_37	IF_5
0x4001865	        0x8078082d	                cmp byte [rax + 8], 0x2d	      1546	nm.c	FUNCTION_37	IF_5
0x4001869	     0xf84c1000000	                            je 0x4001930	      1546	nm.c	FUNCTION_37	IF_5
0x400186f	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1555	nm.c	FUNCTION_38
0x4001873	        0x4883c408	                              add rsp, 8	      1556	nm.c	FUNCTION_38	CALL_1
0x4001877	          0x4889ea	                            mov rdx, rbp	      1555	nm.c	FUNCTION_38
0x400187a	              0x5b	                                 pop rbx	      1556	nm.c	FUNCTION_38	CALL_1
0x400187b	              0x5d	                                 pop rbp	      1556	nm.c	FUNCTION_38	CALL_1
0x400187c	      0xbf00000000	                              mov edi, 0	      1555	nm.c	FUNCTION_38
0x4001881	      0xe9cae7ffff	                   jmp sym.print_symname	      1555	nm.c	FUNCTION_38
0x4001886	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1555	nm.c	FUNCTION_38
0x4001890	    0x8b0d00000000	            mov ecx, dword [0x04001896] 	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4001896	            0x85c9	                           test ecx, ecx	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4001898	            0x740a	                            je 0x40018a4	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400189a	    0x8b1500000000	            mov edx, dword [0x040018a0] 	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40018a0	            0x85d2	                           test edx, edx	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40018a2	            0x745c	                            je 0x4001900	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40018a4	          0x488b03	                    mov rax, qword [rbx]	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40018a7	          0x488b38	                    mov rdi, qword [rax]	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40018aa	      0xe8f1feffff	            call sym.print_value.isra.12	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40018af	    0x8b0500000000	            mov eax, dword [0x040018b5] 	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018b5	            0x85c0	                           test eax, eax	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018b7	            0x7491	                            je 0x400184a	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018b9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018bd	          0x4885c0	                           test rax, rax	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018c0	     0xf84d2000000	                            je 0x4001998	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018c6	      0x4883783800	               cmp qword [rax + 0x38], 0	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018cb	           0xf95c0	                                setne al	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018ce	            0x84c0	                             test al, al	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018d0	     0xf8474ffffff	                            je 0x400184a	      1537	nm.c	FUNCTION_37	ELSE_1
0x40018d6	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x40018db	      0xe800000000	                          call 0x40018e0	       104	stdio2.h	CALL_28
0x40018e0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1540	nm.c	FUNCTION_37
0x40018e4	          0x4885c0	                           test rax, rax	      1540	nm.c	FUNCTION_37
0x40018e7	     0xf84cb000000	                            je 0x40019b8	      1540	nm.c	FUNCTION_37
0x40018ed	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1540	nm.c	FUNCTION_37
0x40018f1	      0xe8aafeffff	            call sym.print_value.isra.12	      1540	nm.c	FUNCTION_37
0x40018f6	      0xe94fffffff	                           jmp 0x400184a	      1540	nm.c	FUNCTION_37
0x40018fb	       0xf1f440000	                   nop dword [rax + rax]	      1540	nm.c	FUNCTION_37
0x4001900	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4001904	          0x4885c0	                           test rax, rax	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4001907	     0xf849b000000	                            je 0x40019a8	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400190d	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4001911	            0xeb97	                           jmp 0x40018aa	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4001913	       0xf1f440000	                   nop dword [rax + rax]	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4001918	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400191d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001922	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001924	      0xe800000000	                          call 0x4001929	       104	stdio2.h	CALL_28
0x4001929	      0xe90bffffff	                           jmp 0x4001839	       104	stdio2.h	CALL_28
0x400192e	            0x6690	                                     nop	       104	stdio2.h	CALL_28
0x4001930	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x4001935	      0xe800000000	                          call 0x400193a	       104	stdio2.h	CALL_28
0x400193a	          0x488b03	                    mov rax, qword [rbx]	      1550	nm.c	FUNCTION_37	CALL_5
0x400193d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001942	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001947	         0xfbe5019	           movsx edx, byte [rax + 0x19] 	       104	stdio2.h	CALL_28
0x400194b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400194d	      0xe800000000	                          call 0x4001952	       104	stdio2.h	CALL_28
0x4001952	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x4001957	      0xe800000000	                          call 0x400195c	       104	stdio2.h	CALL_28
0x400195c	          0x488b03	                    mov rax, qword [rbx]	      1552	nm.c	
0x400195f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001964	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001969	         0xfbf501a	           movsx edx, word [rax + 0x1a] 	       104	stdio2.h	CALL_28
0x400196d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400196f	      0xe800000000	                          call 0x4001974	       104	stdio2.h	CALL_28
0x4001974	          0x488b03	                    mov rax, qword [rbx]	      1553	nm.c	
0x4001977	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400197c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001981	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       104	stdio2.h	CALL_28
0x4001985	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001987	      0xe800000000	                          call 0x400198c	       104	stdio2.h	CALL_28
0x400198c	          0x488b03	                    mov rax, qword [rbx]	       104	stdio2.h	CALL_28
0x400198f	      0xe9dbfeffff	                           jmp 0x400186f	       104	stdio2.h	CALL_28
0x4001994	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4001998	      0x48837b0800	                  cmp qword [rbx + 8], 0	      1537	nm.c	FUNCTION_37	ELSE_1
0x400199d	           0xf95c0	                                setne al	      1537	nm.c	FUNCTION_37	ELSE_1
0x40019a0	      0xe929ffffff	                           jmp 0x40018ce	      1537	nm.c	FUNCTION_37	ELSE_1
0x40019a5	           0xf1f00	                         nop dword [rax]	      1537	nm.c	FUNCTION_37	ELSE_1
0x40019a8	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40019ac	      0xe9f9feffff	                           jmp 0x40018aa	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40019b1	     0xf1f80000000	                         nop dword [rax]	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x40019b8	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1540	nm.c	FUNCTION_37
0x40019bc	      0xe930ffffff	                           jmp 0x40018f1	      1540	nm.c	FUNCTION_37
display_rel_file	SWITCH,0:DO,0:WHILE,0:CALL,34:ELSE,3:FOR,1:IF,15:functions,0	493
0x4000c40	            0x4157	                                push r15	      1097	nm.c	FUNCTION_20
0x4000c42	            0x4156	                                push r14	      1097	nm.c	FUNCTION_20
0x4000c44	          0x4989ff	                            mov r15, rdi	      1097	nm.c	FUNCTION_20
0x4000c47	            0x4155	                                push r13	      1097	nm.c	FUNCTION_20
0x4000c49	            0x4154	                                push r12	      1097	nm.c	FUNCTION_20
0x4000c4b	              0x55	                                push rbp	      1097	nm.c	FUNCTION_20
0x4000c4c	              0x53	                                push rbx	      1097	nm.c	FUNCTION_20
0x4000c4d	        0x4883ec58	                           sub rsp, 0x58	      1097	nm.c	FUNCTION_20
0x4000c51	      0x4889742408	                mov qword [rsp + 8], rsi	      1097	nm.c	FUNCTION_20
0x4000c56	    0x8b3500000000	            mov esi, dword [0x04000c5c] 	      1104	nm.c	FUNCTION_20	IF_1
0x4000c5c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1097	nm.c	FUNCTION_20
0x4000c65	      0x4889442448	             mov qword [rsp + 0x48], rax	      1097	nm.c	FUNCTION_20
0x4000c6a	            0x31c0	                            xor eax, eax	      1097	nm.c	FUNCTION_20
0x4000c6c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1102	nm.c	FUNCTION_20
0x4000c75	            0x85f6	                           test esi, esi	      1104	nm.c	FUNCTION_20	IF_1
0x4000c77	            0x750a	                           jne 0x4000c83	      1104	nm.c	FUNCTION_20	IF_1
0x4000c79	        0xf6474502	               test byte [rdi + 0x45], 2	      1106	nm.c	FUNCTION_20	IF_1	IF_2
0x4000c7d	     0xf84cb020000	                            je 0x4000f4e	      1106	nm.c	FUNCTION_20	IF_1	IF_2
0x4000c83	        0x498b4708	                mov rax, qword [r15 + 8]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c87	      0x488d4c2434	                   lea rcx, [rsp + 0x34]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c8c	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c91	          0x4c89ff	                            mov rdi, r15	      1113	nm.c	FUNCTION_20	IF_3
0x4000c94	    0xff9058020000	                call qword [rax + 0x258]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c9a	          0x4885c0	                           test rax, rax	      1114	nm.c	FUNCTION_20	IF_3
0x4000c9d	          0x4989c4	                            mov r12, rax	      1113	nm.c	FUNCTION_20	IF_3
0x4000ca0	     0xf888a020000	                            js 0x4000f30	      1114	nm.c	FUNCTION_20	IF_3
0x4000ca6	     0xf84a2020000	                            je 0x4000f4e	      1125	nm.c	FUNCTION_20	IF_5
0x4000cac	    0x8b2d00000000	            mov ebp, dword [0x04000cb2] 	      1131	nm.c	FUNCTION_20	IF_6
0x4000cb2	        0x8b5c2434	            mov ebx, dword [rsp + 0x34] 	      1131	nm.c	FUNCTION_20	IF_6
0x4000cb6	            0x85ed	                           test ebp, ebp	      1131	nm.c	FUNCTION_20	IF_6
0x4000cb8	            0x7409	                            je 0x4000cc3	      1131	nm.c	FUNCTION_20	IF_6
0x4000cba	          0x83fb08	                              cmp ebx, 8	      1131	nm.c	FUNCTION_20	IF_6
0x4000cbd	     0xf844d040000	                            je 0x4001110	      1131	nm.c	FUNCTION_20	IF_6
0x4000cc3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1131	nm.c	FUNCTION_20	IF_6
0x4000cc8	      0x4889442410	             mov qword [rsp + 0x10], rax	      1131	nm.c	FUNCTION_20	IF_6
0x4000ccd	    0x8b0500000000	            mov eax, dword [0x04000cd3] 	      1184	nm.c	FUNCTION_20
0x4000cd3	          0x4c89ff	                            mov rdi, r15	       462	nm.c	FUNCTION_8	IF_1
0x4000cd6	          0x890424	                    mov dword [rsp], eax	      1184	nm.c	FUNCTION_20
0x4000cd9	        0x498b4708	                mov rax, qword [r15 + 8]	       462	nm.c	FUNCTION_8	IF_1
0x4000cdd	    0xff9000020000	                call qword [rax + 0x200]	       462	nm.c	FUNCTION_8	IF_1
0x4000ce3	          0x4885c0	                           test rax, rax	       463	nm.c	FUNCTION_8	CALL_3
0x4000ce6	          0x4989c5	                            mov r13, rax	       462	nm.c	FUNCTION_8	IF_1
0x4000ce9	     0xf8421070000	                            je 0x4001410	       463	nm.c	FUNCTION_8	CALL_3
0x4000cef	        0x4c0fafe3	                           imul r12, rbx	       467	nm.c	FUNCTION_8
0x4000cf3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       467	nm.c	FUNCTION_8
0x4000cf8	          0x4901c4	                            add r12, rax	       467	nm.c	FUNCTION_8
0x4000cfb	          0x4939c4	                            cmp r12, rax	       470	nm.c	FUNCTION_8	FOR_1
0x4000cfe	     0xf86c8060000	                           jbe 0x40013cc	       470	nm.c	FUNCTION_8	FOR_1
0x4000d04	          0x4889c5	                            mov rbp, rax	       470	nm.c	FUNCTION_8	FOR_1
0x4000d07	          0x4c89f8	                            mov rax, r15	       470	nm.c	FUNCTION_8	FOR_1
0x4000d0a	          0x4d89e6	                            mov r14, r12	       470	nm.c	FUNCTION_8	FOR_1
0x4000d0d	          0x4989ef	                            mov r15, rbp	       470	nm.c	FUNCTION_8	FOR_1
0x4000d10	          0x4989c4	                            mov r12, rax	       470	nm.c	FUNCTION_8	FOR_1
0x4000d13	            0xeb19	                           jmp 0x4000d2e	       470	nm.c	FUNCTION_8	FOR_1
0x4000d15	           0xf1f00	                         nop dword [rax]	       470	nm.c	FUNCTION_8	FOR_1
0x4000d18	    0x498178200000	                cmp qword [r8 + 0x20], 0	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d20	            0x7476	                            je 0x4000d98	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d22	          0x4901df	                            add r15, rbx	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d25	          0x4d39fe	                            cmp r14, r15	       470	nm.c	FUNCTION_8	FOR_1
0x4000d28	     0xf8606010000	                           jbe 0x4000e34	       470	nm.c	FUNCTION_8	FOR_1
0x4000d2e	      0x498b442408	                mov rax, qword [r12 + 8]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000d33	          0x4c89e9	                            mov rcx, r13	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000d36	          0x4c89fa	                            mov rdx, r15	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000d39	          0x8b3424	                    mov esi, dword [rsp]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000d3c	          0x4c89e7	                            mov rdi, r12	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000d3f	    0xff9060020000	                call qword [rax + 0x260]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000d45	          0x4885c0	                           test rax, rax	       478	nm.c	FUNCTION_8	FOR_1	CALL_7
0x4000d48	          0x4989c0	                             mov r8, rax	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000d4b	     0xf84c7060000	                            je 0x4001418	       478	nm.c	FUNCTION_8	FOR_1	CALL_7
0x4000d51	        0x488b4008	                mov rax, qword [rax + 8]	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4000d55	          0x80385f	                    cmp byte [rax], 0x5f	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4000d58	     0xf843a020000	                            je 0x4000f98	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4000d5e	    0x448b1d000000	           mov r11d, dword [0x04000d65] 	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x4000d65	          0x4585db	                         test r11d, r11d	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x4000d68	            0x75ae	                           jne 0x4000d18	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x4000d6a	    0x448b15000000	           mov r10d, dword [0x04000d71] 	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d71	          0x4585d2	                         test r10d, r10d	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d74	            0x7422	                            je 0x4000d98	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d76	    0x41f740188200	       test dword [r8 + 0x18], 0x800082 	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d7e	            0x7518	                           jne 0x4000d98	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d80	        0x498b4020	              mov rax, qword [r8 + 0x20]	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d84	    0x483d00000000	                              cmp rax, 0	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d8a	            0x740c	                            je 0x4000d98	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d8c	        0xf6402110	           test byte [rax + 0x21], 0x10 	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d90	            0x7490	                            je 0x4000d22	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d92	    0x660f1f440000	                    nop word [rax + rax]	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d98	    0x448b0d000000	            mov r9d, dword [0x04000d9f] 	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d9f	          0x4585c9	                           test r9d, r9d	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000da2	            0x750b	                           jne 0x4000daf	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000da4	      0x41f6401804	                test byte [r8 + 0x18], 4	       501	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000da9	     0xf8573ffffff	                           jne 0x4000d22	       501	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000daf	    0x8b1500000000	            mov edx, dword [0x04000db5] 	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4000db5	            0x85d2	                           test edx, edx	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4000db7	            0x741c	                            je 0x4000dd5	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4000db9	        0x498b4020	              mov rax, qword [r8 + 0x20]	       506	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_16
0x4000dbd	    0x483d00000000	                              cmp rax, 0	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000dc3	     0xf8459ffffff	                            je 0x4000d22	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000dc9	    0x483d00000000	                              cmp rax, 0	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000dcf	     0xf844dffffff	                            je 0x4000d22	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000dd5	    0x8b0500000000	            mov eax, dword [0x04000ddb] 	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x4000ddb	            0x85c0	                           test eax, eax	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x4000ddd	            0x740e	                            je 0x4000ded	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x4000ddf	    0x498178200000	                cmp qword [r8 + 0x20], 0	       513	nm.c	FUNCTION_8	FOR_1	IF_8	IF_9
0x4000de7	     0xf8435ffffff	                            je 0x4000d22	       513	nm.c	FUNCTION_8	FOR_1	IF_8	IF_9
0x4000ded	      0x498b442408	                mov rax, qword [r12 + 8]	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000df2	          0x4c89c6	                             mov rsi, r8	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000df5	          0x4c89e7	                            mov rdi, r12	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000df8	    0xff9028020000	                call qword [rax + 0x228]	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000dfe	            0x85c0	                           test eax, eax	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000e00	            0x7410	                            je 0x4000e12	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000e02	    0x448b05000000	            mov r8d, dword [0x04000e09] 	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000e09	          0x4585c0	                           test r8d, r8d	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000e0c	     0xf8410ffffff	                            je 0x4000d22	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000e12	          0x4939ef	                            cmp r15, rbp	       524	nm.c	FUNCTION_8	FOR_1	IF_11	CALL_19
0x4000e15	            0x740e	                            je 0x4000e25	       524	nm.c	FUNCTION_8	FOR_1	IF_11	CALL_19
0x4000e17	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_58	CALL_3
0x4000e1a	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_58	CALL_3
0x4000e1d	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_58	CALL_3
0x4000e20	      0xe800000000	                          call 0x4000e25	        53	string3.h	FUNCTION_58	CALL_3
0x4000e25	          0x4901df	                            add r15, rbx	        53	string3.h	FUNCTION_58	CALL_3
0x4000e28	          0x4801dd	                            add rbp, rbx	       526	nm.c	FUNCTION_8	FOR_1	IF_11
0x4000e2b	          0x4d39fe	                            cmp r14, r15	       470	nm.c	FUNCTION_8	FOR_1
0x4000e2e	     0xf87fafeffff	                            ja 0x4000d2e	       470	nm.c	FUNCTION_8	FOR_1
0x4000e34	          0x4889e8	                            mov rax, rbp	       470	nm.c	FUNCTION_8	FOR_1
0x4000e37	      0x482b442410	             sub rax, qword [rsp + 0x10]	       470	nm.c	FUNCTION_8	FOR_1
0x4000e3c	          0x4d89e7	                            mov r15, r12	       470	nm.c	FUNCTION_8	FOR_1
0x4000e3f	            0x4899	                                     cqo	       530	nm.c	FUNCTION_8
0x4000e41	    0x8b3d00000000	            mov edi, dword [0x04000e47] 	      1187	nm.c	FUNCTION_20	IF_11
0x4000e47	    0x48c704240000	                      mov qword [rsp], 0	      1186	nm.c	FUNCTION_20	IF_11
0x4000e4f	          0x48f7fb	                                idiv rbx	       530	nm.c	FUNCTION_8
0x4000e52	            0x85ff	                           test edi, edi	      1187	nm.c	FUNCTION_20	IF_11
0x4000e54	          0x4889c3	                            mov rbx, rax	       530	nm.c	FUNCTION_8
0x4000e57	          0x4889c5	                            mov rbp, rax	       530	nm.c	FUNCTION_8
0x4000e5a	     0xf8420020000	                            je 0x4001080	      1187	nm.c	FUNCTION_20	IF_11
0x4000e60	    0x8b0d00000000	            mov ecx, dword [0x04000e66] 	      1204	nm.c	FUNCTION_20	CALL_30
0x4000e66	            0x85c9	                           test ecx, ecx	      1204	nm.c	FUNCTION_20	CALL_30
0x4000e68	     0xf8592010000	                           jne 0x4001000	      1204	nm.c	FUNCTION_20	CALL_30
0x4000e6e	        0x498b4708	                mov rax, qword [r15 + 8]	      1074	nm.c	FUNCTION_19	IF_1
0x4000e72	      0x448b642434	           mov r12d, dword [rsp + 0x34] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4000e77	          0x4c89ff	                            mov rdi, r15	      1074	nm.c	FUNCTION_19	IF_1
0x4000e7a	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4000e7f	    0x448b35000000	           mov r14d, dword [0x04000e86] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4000e86	    0xff9000020000	                call qword [rax + 0x200]	      1074	nm.c	FUNCTION_19	IF_1
0x4000e8c	          0x4885c0	                           test rax, rax	      1075	nm.c	FUNCTION_19	CALL_3
0x4000e8f	          0x4989c5	                            mov r13, rax	      1074	nm.c	FUNCTION_19	IF_1
0x4000e92	     0xf8478050000	                            je 0x4001410	      1075	nm.c	FUNCTION_19	CALL_3
0x4000e98	          0x4889e8	                            mov rax, rbp	      1079	nm.c	FUNCTION_19
0x4000e9b	        0x490fafc4	                           imul rax, r12	      1079	nm.c	FUNCTION_19
0x4000e9f	        0x488d2c03	                    lea rbp, [rbx + rax]	      1079	nm.c	FUNCTION_19
0x4000ea3	          0x4839eb	                            cmp rbx, rbp	      1081	nm.c	FUNCTION_19	FOR_1
0x4000ea6	            0x7341	                           jae 0x4000ee9	      1081	nm.c	FUNCTION_19	FOR_1
0x4000ea8	     0xf1f84000000	                   nop dword [rax + rax]	      1081	nm.c	FUNCTION_19	FOR_1
0x4000eb0	        0x498b4708	                mov rax, qword [r15 + 8]	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000eb4	          0x4c89e9	                            mov rcx, r13	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000eb7	          0x4889da	                            mov rdx, rbx	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000eba	          0x4489f6	                           mov esi, r14d	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000ebd	          0x4c89ff	                            mov rdi, r15	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000ec0	    0xff9060020000	                call qword [rax + 0x260]	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000ec6	          0x4885c0	                           test rax, rax	      1086	nm.c	FUNCTION_19	FOR_1	CALL_6
0x4000ec9	     0xf8441050000	                            je 0x4001410	      1086	nm.c	FUNCTION_19	FOR_1	CALL_6
0x4000ecf	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1089	nm.c	FUNCTION_19	FOR_1
0x4000ed4	            0x31d2	                            xor edx, edx	      1089	nm.c	FUNCTION_19	FOR_1
0x4000ed6	          0x4889c6	                            mov rsi, rax	      1089	nm.c	FUNCTION_19	FOR_1
0x4000ed9	          0x4c89ff	                            mov rdi, r15	      1089	nm.c	FUNCTION_19	FOR_1
0x4000edc	          0x4c01e3	                            add rbx, r12	      1089	nm.c	FUNCTION_19	FOR_1
0x4000edf	      0xe8ccf7ffff	                   call sym.print_symbol	      1089	nm.c	FUNCTION_19	FOR_1
0x4000ee4	          0x4839dd	                            cmp rbp, rbx	      1081	nm.c	FUNCTION_19	FOR_1
0x4000ee7	            0x77c7	                            ja 0x4000eb0	      1081	nm.c	FUNCTION_19	FOR_1
0x4000ee9	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1209	nm.c	FUNCTION_20	CALL_32
0x4000eee	          0x4885ff	                           test rdi, rdi	      1209	nm.c	FUNCTION_20	CALL_32
0x4000ef1	            0x7405	                            je 0x4000ef8	      1209	nm.c	FUNCTION_20	CALL_32
0x4000ef3	      0xe800000000	                          call 0x4000ef8	      1210	nm.c	FUNCTION_20	CALL_33
0x4000ef8	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1211	nm.c	FUNCTION_20	CALL_34
0x4000efd	      0xe800000000	                          call 0x4000f02	      1211	nm.c	FUNCTION_20	CALL_34
0x4000f02	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1212	nm.c	FUNCTION_20
0x4000f07	    0x644833042528	                xor rax, qword fs:[0x28]	      1212	nm.c	FUNCTION_20
0x4000f10	     0xf8513050000	                           jne 0x4001429	      1212	nm.c	FUNCTION_20
0x4000f16	        0x488b3c24	                    mov rdi, qword [rsp]	      1212	nm.c	FUNCTION_20
0x4000f1a	        0x4883c458	                           add rsp, 0x58	      1213	nm.c	
0x4000f1e	              0x5b	                                 pop rbx	      1213	nm.c	
0x4000f1f	              0x5d	                                 pop rbp	      1213	nm.c	
0x4000f20	            0x415c	                                 pop r12	      1213	nm.c	
0x4000f22	            0x415d	                                 pop r13	      1213	nm.c	
0x4000f24	            0x415e	                                 pop r14	      1213	nm.c	
0x4000f26	            0x415f	                                 pop r15	      1213	nm.c	
0x4000f28	      0xe900000000	                           jmp 0x4000f2d	      1212	nm.c	FUNCTION_20
0x4000f2d	           0xf1f00	                         nop dword [rax]	      1212	nm.c	FUNCTION_20
0x4000f30	    0x448b25000000	           mov r12d, dword [0x04000f37] 	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000f37	          0x4585e4	                         test r12d, r12d	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000f3a	     0xf84d0040000	                            je 0x4001410	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000f40	      0xe800000000	                          call 0x4000f45	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000f45	          0x83f807	                              cmp eax, 7	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000f48	     0xf85c2040000	                           jne 0x4001410	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000f4e	          0x498b1f	                    mov rbx, qword [r15]	      1127	nm.c	FUNCTION_20	IF_5
0x4000f51	            0x31ff	                            xor edi, edi	      1127	nm.c	FUNCTION_20	IF_5
0x4000f53	      0xba05000000	                              mov edx, 5	      1127	nm.c	FUNCTION_20	IF_5
0x4000f58	      0xbe00000000	                              mov esi, 0	      1127	nm.c	FUNCTION_20	IF_5
0x4000f5d	      0xe800000000	                          call 0x4000f62	      1127	nm.c	FUNCTION_20	IF_5
0x4000f62	          0x4889de	                            mov rsi, rbx	      1127	nm.c	FUNCTION_20	IF_5
0x4000f65	          0x4889c7	                            mov rdi, rax	      1127	nm.c	FUNCTION_20	IF_5
0x4000f68	            0x31c0	                            xor eax, eax	      1127	nm.c	FUNCTION_20	IF_5
0x4000f6a	      0xe800000000	                          call 0x4000f6f	      1127	nm.c	FUNCTION_20	IF_5
0x4000f6f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1213	nm.c	
0x4000f74	    0x644833042528	                xor rax, qword fs:[0x28]	      1213	nm.c	
0x4000f7d	     0xf85a6040000	                           jne 0x4001429	      1213	nm.c	
0x4000f83	        0x4883c458	                           add rsp, 0x58	      1213	nm.c	
0x4000f87	              0x5b	                                 pop rbx	      1213	nm.c	
0x4000f88	              0x5d	                                 pop rbp	      1213	nm.c	
0x4000f89	            0x415c	                                 pop r12	      1213	nm.c	
0x4000f8b	            0x415d	                                 pop r13	      1213	nm.c	
0x4000f8d	            0x415e	                                 pop r14	      1213	nm.c	
0x4000f8f	            0x415f	                                 pop r15	      1213	nm.c	
0x4000f91	              0xc3	                                     ret	      1213	nm.c	
0x4000f92	    0x660f1f440000	                    nop word [rax + rax]	      1213	nm.c	
0x4000f98	        0x8078015f	                cmp byte [rax + 1], 0x5f	       482	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_8
0x4000f9c	     0xf85bcfdffff	                           jne 0x4000d5e	       482	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_8
0x4000fa2	            0x31f6	                            xor esi, esi	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fa4	        0x8078025f	                cmp byte [rax + 2], 0x5f	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fa8	      0xbf00000000	                              mov edi, 0	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fad	      0xb90f000000	                            mov ecx, 0xf	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fb2	        0x400f94c6	                                sete sil	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fb6	          0x4801c6	                            add rsi, rax	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fb9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fbb	     0xf859dfdffff	                           jne 0x4000d5e	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000fc1	        0x498b0424	                    mov rax, qword [r12]	       485	nm.c	FUNCTION_8	FOR_1
0x4000fc5	      0xba05000000	                              mov edx, 5	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fca	      0xbe00000000	                              mov esi, 0	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fcf	            0x31ff	                            xor edi, edi	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fd1	      0x4c89442420	              mov qword [rsp + 0x20], r8	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fd6	      0x4889442418	             mov qword [rsp + 0x18], rax	       485	nm.c	FUNCTION_8	FOR_1
0x4000fdb	      0xe800000000	                          call 0x4000fe0	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fe0	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fe5	          0x4889c7	                            mov rdi, rax	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fe8	            0x31c0	                            xor eax, eax	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fea	      0xe800000000	                          call 0x4000fef	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fef	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000ff4	      0xe965fdffff	                           jmp 0x4000d5e	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000ff9	     0xf1f80000000	                         nop dword [rax]	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4001000	        0x498b4708	                mov rax, qword [r15 + 8]	      1034	nm.c	FUNCTION_18	IF_1
0x4001004	    0x448b25000000	           mov r12d, dword [0x0400100b] 	      1207	nm.c	FUNCTION_20
0x400100b	          0x4c89ff	                            mov rdi, r15	      1034	nm.c	FUNCTION_18	IF_1
0x400100e	    0xff9000020000	                call qword [rax + 0x200]	      1034	nm.c	FUNCTION_18	IF_1
0x4001014	          0x4885c0	                           test rax, rax	      1035	nm.c	FUNCTION_18	CALL_3
0x4001017	          0x4889c3	                            mov rbx, rax	      1034	nm.c	FUNCTION_18	IF_1
0x400101a	     0xf84f0030000	                            je 0x4001410	      1035	nm.c	FUNCTION_18	CALL_3
0x4001020	        0x488b0c24	                    mov rcx, qword [rsp]	      1039	nm.c	FUNCTION_18
0x4001024	          0x4889e8	                            mov rax, rbp	      1039	nm.c	FUNCTION_18
0x4001027	        0x48c1e004	                              shl rax, 4	      1039	nm.c	FUNCTION_18
0x400102b	        0x4c8d2c01	                    lea r13, [rcx + rax]	      1039	nm.c	FUNCTION_18
0x400102f	          0x4c39e9	                            cmp rcx, r13	      1041	nm.c	FUNCTION_18	FOR_1
0x4001032	     0xf83b1feffff	                           jae 0x4000ee9	      1041	nm.c	FUNCTION_18	FOR_1
0x4001038	      0x4c8b742408	                mov r14, qword [rsp + 8]	      1041	nm.c	FUNCTION_18	FOR_1
0x400103d	          0x4889cd	                            mov rbp, rcx	      1041	nm.c	FUNCTION_18	FOR_1
0x4001040	        0x498b4708	                mov rax, qword [r15 + 8]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001044	          0x4889d9	                            mov rcx, rbx	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001047	        0x488b5500	                    mov rdx, qword [rbp]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x400104b	          0x4489e6	                           mov esi, r12d	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x400104e	          0x4c89ff	                            mov rdi, r15	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001051	    0xff9060020000	                call qword [rax + 0x260]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001057	          0x4885c0	                           test rax, rax	      1046	nm.c	FUNCTION_18	FOR_1	CALL_6
0x400105a	     0xf84b0030000	                            je 0x4001410	      1046	nm.c	FUNCTION_18	FOR_1	CALL_6
0x4001060	        0x488b5508	                mov rdx, qword [rbp + 8]	      1049	nm.c	FUNCTION_18	FOR_1
0x4001064	          0x4c89f1	                            mov rcx, r14	      1049	nm.c	FUNCTION_18	FOR_1
0x4001067	          0x4889c6	                            mov rsi, rax	      1049	nm.c	FUNCTION_18	FOR_1
0x400106a	          0x4c89ff	                            mov rdi, r15	      1049	nm.c	FUNCTION_18	FOR_1
0x400106d	        0x4883c510	                           add rbp, 0x10	      1041	nm.c	FUNCTION_18	FOR_1
0x4001071	      0xe83af6ffff	                   call sym.print_symbol	      1049	nm.c	FUNCTION_18	FOR_1
0x4001076	          0x4939ed	                            cmp r13, rbp	      1041	nm.c	FUNCTION_18	FOR_1
0x4001079	            0x77c5	                            ja 0x4001040	      1041	nm.c	FUNCTION_18	FOR_1
0x400107b	      0xe969feffff	                           jmp 0x4000ee9	      1041	nm.c	FUNCTION_18	FOR_1
0x4001080	    0x8b0500000000	            mov eax, dword [0x04001086] 	      1190	nm.c	FUNCTION_20	IF_11	CALL_24
0x4001086	          0x4c89ff	                            mov rdi, r15	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001089	    0x4c893d000000	            mov qword [0x04001090], r15 	      1189	nm.c	FUNCTION_20	IF_11
0x4001090	    0x890500000000	            mov dword [0x04001096], eax 	      1190	nm.c	FUNCTION_20	IF_11	CALL_24
0x4001096	        0x498b4708	                mov rax, qword [r15 + 8]	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x400109a	    0xff9000020000	                call qword [rax + 0x200]	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x40010a0	    0x488905000000	            mov qword [0x040010a7], rax 	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x40010a7	        0x498b4708	                mov rax, qword [r15 + 8]	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x40010ab	          0x4c89ff	                            mov rdi, r15	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x40010ae	    0xff9000020000	                call qword [rax + 0x200]	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x40010b4	    0x48833d000000	               cmp qword [0x040010bc], 0	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x40010bc	    0x488905000000	            mov qword [0x040010c3], rax 	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x40010c3	     0xf8447030000	                            je 0x4001410	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x40010c9	          0x4885c0	                           test rax, rax	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x40010cc	     0xf843e030000	                            je 0x4001410	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x40010d2	    0x8b3500000000	            mov esi, dword [0x040010d8] 	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x40010d8	            0x85f6	                           test esi, esi	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x40010da	     0xf85ce000000	                           jne 0x40011ae	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x40010e0	    0x486315000000	         movsxd rdx, dword [0x040010e7] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010e7	    0x486305000000	         movsxd rax, dword [0x040010ee] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010ee	          0x4889de	                            mov rsi, rbx	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010f1	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010f6	        0x488d0450	                  lea rax, [rax + rdx*2]	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010fa	        0x8b542434	            mov edx, dword [rsp + 0x34] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010fe	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001106	      0xe800000000	                          call 0x400110b	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x400110b	      0xe950fdffff	                           jmp 0x4000e60	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001110	    0x8b1d00000000	            mov ebx, dword [0x04001116] 	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x4001116	            0x85db	                           test ebx, ebx	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x4001118	     0xf848a020000	                            je 0x40013a8	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x400111e	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      1142	nm.c	FUNCTION_20	IF_6	IF_7
0x4001123	          0x4889c1	                            mov rcx, rax	      1142	nm.c	FUNCTION_20	IF_6	IF_7
0x4001126	            0x31f6	                            xor esi, esi	      1135	nm.c	FUNCTION_20	IF_6
0x4001128	            0x31d2	                            xor edx, edx	      1133	nm.c	FUNCTION_20	IF_6
0x400112a	        0x4d8b5f08	                mov r11, qword [r15 + 8]	      1160	nm.c	FUNCTION_20	IF_6
0x400112e	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      1160	nm.c	FUNCTION_20	IF_6
0x4001133	          0x4c89ff	                            mov rdi, r15	      1160	nm.c	FUNCTION_20	IF_6
0x4001136	    0x41ff93480300	                call qword [r11 + 0x348]	      1160	nm.c	FUNCTION_20	IF_6
0x400113d	          0x4885c0	                           test rax, rax	      1162	nm.c	FUNCTION_20	IF_6	IF_10
0x4001140	          0x4889c3	                            mov rbx, rax	      1160	nm.c	FUNCTION_20	IF_6
0x4001143	     0xf8ed3000000	                           jle 0x400121c	      1162	nm.c	FUNCTION_20	IF_6	IF_10
0x4001149	        0x498d2c04	                    lea rbp, [r12 + rax]	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x400114d	        0x49c1e403	                              shl r12, 3	      1170	nm.c	FUNCTION_20	IF_6	IF_10
0x4001151	    0x488d3ced0800	                    lea rdi, [rbp*8 + 8]	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x4001159	      0xe800000000	                          call 0x400115e	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x400115e	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_58	CALL_3
0x4001163	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_58	CALL_3
0x4001166	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_58	CALL_3
0x4001169	      0xe800000000	                          call 0x400116e	        53	string3.h	FUNCTION_58	CALL_3
0x400116e	          0x4989c0	                             mov r8, rax	        53	string3.h	FUNCTION_58	CALL_3
0x4001171	        0x4a8d0420	                    lea rax, [rax + r12]	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001175	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400117a	        0x488d0cd8	                  lea rcx, [rax + rbx*8]	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400117e	            0x6690	                                     nop	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001180	        0x4883c008	                              add rax, 8	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001184	        0x488950f8	                mov qword [rax - 8], rdx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001188	        0x4883c230	                           add rdx, 0x30	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400118c	          0x4839c8	                            cmp rax, rcx	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400118f	            0x75ef	                           jne 0x4001180	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001191	    0x48c700000000	                      mov qword [rax], 0	      1174	nm.c	FUNCTION_20	IF_6	IF_10
0x4001198	        0x8b5c2434	            mov ebx, dword [rsp + 0x34] 	      1174	nm.c	FUNCTION_20	IF_6	IF_10
0x400119c	          0x4989ec	                            mov r12, rbp	      1176	nm.c	FUNCTION_20	IF_6	IF_10
0x400119f	      0x4c89442438	              mov qword [rsp + 0x38], r8	      1175	nm.c	FUNCTION_20	IF_6	IF_10
0x40011a4	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1175	nm.c	FUNCTION_20	IF_6	IF_10
0x40011a9	      0xe91ffbffff	                           jmp 0x4000ccd	      1175	nm.c	FUNCTION_20	IF_6	IF_10
0x40011ae	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	       736	nm.c	FUNCTION_15
0x40011b3	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x40011b8	          0x4889de	                            mov rsi, rbx	       736	nm.c	FUNCTION_15
0x40011bb	    0x8b0500000000	            mov eax, dword [0x040011c1] 	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x40011c1	      0xb900000000	                              mov ecx, 0	       736	nm.c	FUNCTION_15
0x40011c6	            0x31ed	                            xor ebp, ebp	       752	nm.c	FUNCTION_15	IF_1
0x40011c8	          0x4c89ef	                            mov rdi, r13	       736	nm.c	FUNCTION_15
0x40011cb	          0x4c89c2	                             mov rdx, r8	       736	nm.c	FUNCTION_15
0x40011ce	      0x4c89442410	              mov qword [rsp + 0x10], r8	       736	nm.c	FUNCTION_15
0x40011d3	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x40011d7	      0xe800000000	                          call 0x40011dc	       736	nm.c	FUNCTION_15
0x40011dc	          0x4889df	                            mov rdi, rbx	       740	nm.c	FUNCTION_15
0x40011df	        0x48c1e704	                              shl rdi, 4	       740	nm.c	FUNCTION_15
0x40011e3	      0xe800000000	                          call 0x40011e8	       740	nm.c	FUNCTION_15
0x40011e8	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       747	nm.c	FUNCTION_15
0x40011ed	        0x48890424	                    mov qword [rsp], rax	       740	nm.c	FUNCTION_15
0x40011f1	          0x4889d8	                            mov rax, rbx	       747	nm.c	FUNCTION_15
0x40011f4	            0x31f6	                            xor esi, esi	       752	nm.c	FUNCTION_15	IF_1
0x40011f6	        0x490fafc0	                            imul rax, r8	       747	nm.c	FUNCTION_15
0x40011fa	      0x4d8d640500	                    lea r12, [r13 + rax]	       747	nm.c	FUNCTION_15
0x40011ff	          0x4d39e5	                            cmp r13, r12	       752	nm.c	FUNCTION_15	IF_1
0x4001202	            0x7221	                            jb 0x4001225	       752	nm.c	FUNCTION_15	IF_1
0x4001204	        0x488b3c24	                    mov rdi, qword [rsp]	       818	nm.c	FUNCTION_15
0x4001208	      0xb900000000	                              mov ecx, 0	       818	nm.c	FUNCTION_15
0x400120d	      0xba10000000	                           mov edx, 0x10	       818	nm.c	FUNCTION_15
0x4001212	      0xe800000000	                          call 0x4001217	       818	nm.c	FUNCTION_15
0x4001217	      0xe944fcffff	                           jmp 0x4000e60	       818	nm.c	FUNCTION_15
0x400121c	        0x8b5c2434	            mov ebx, dword [rsp + 0x34] 	       818	nm.c	FUNCTION_15
0x4001220	      0xe99efaffff	                           jmp 0x4000cc3	       818	nm.c	FUNCTION_15
0x4001225	    0x4c8b0d000000	              mov r9, qword [0x0400122c]	       749	nm.c	FUNCTION_15
0x400122c	    0x4c8b15000000	            mov r10, qword [0x04001233] 	       750	nm.c	FUNCTION_15
0x4001233	          0x4c89ea	                            mov rdx, r13	       754	nm.c	FUNCTION_15	IF_1
0x4001236	        0x498b4708	                mov rax, qword [r15 + 8]	       754	nm.c	FUNCTION_15	IF_1
0x400123a	      0x4c89442420	              mov qword [rsp + 0x20], r8	       754	nm.c	FUNCTION_15	IF_1
0x400123f	          0x4c89ff	                            mov rdi, r15	       754	nm.c	FUNCTION_15	IF_1
0x4001242	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       754	nm.c	FUNCTION_15	IF_1
0x4001246	      0x4c89542418	             mov qword [rsp + 0x18], r10	       750	nm.c	FUNCTION_15
0x400124b	          0x4c89c9	                             mov rcx, r9	       754	nm.c	FUNCTION_15	IF_1
0x400124e	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       754	nm.c	FUNCTION_15	IF_1
0x4001253	    0xff9060020000	                call qword [rax + 0x260]	       754	nm.c	FUNCTION_15	IF_1
0x4001259	          0x4885c0	                           test rax, rax	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x400125c	          0x4889c5	                            mov rbp, rax	       754	nm.c	FUNCTION_15	IF_1
0x400125f	     0xf84ab010000	                            je 0x4001410	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001265	        0x4c8b3424	                    mov r14, qword [rsp]	       740	nm.c	FUNCTION_15
0x4001269	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       740	nm.c	FUNCTION_15
0x400126e	          0x4d89fb	                            mov r11, r15	       740	nm.c	FUNCTION_15
0x4001271	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       740	nm.c	FUNCTION_15
0x4001276	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       740	nm.c	FUNCTION_15
0x400127b	          0x4c89f0	                            mov rax, r14	       740	nm.c	FUNCTION_15
0x400127e	          0x4d89e6	                            mov r14, r12	       740	nm.c	FUNCTION_15
0x4001281	          0x4d89d4	                            mov r12, r10	       740	nm.c	FUNCTION_15
0x4001284	          0x4d89cf	                             mov r15, r9	       740	nm.c	FUNCTION_15
0x4001287	          0x4989c2	                            mov r10, rax	       740	nm.c	FUNCTION_15
0x400128a	            0xeb6a	                           jmp 0x40012f6	       740	nm.c	FUNCTION_15
0x400128c	         0xf1f4000	                         nop dword [rax]	       740	nm.c	FUNCTION_15
0x4001290	            0x31c0	                            xor eax, eax	       777	nm.c	FUNCTION_15	FOR_1
0x4001292	    0xf74518000120	      test dword [rbp + 0x18], 0x200100 	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001299	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       779	nm.c	FUNCTION_15	FOR_1
0x400129d	            0x7527	                           jne 0x40012c6	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x400129f	        0x498b4b08	                mov rcx, qword [r11 + 8]	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x40012a3	        0x83790805	                  cmp dword [rcx + 8], 5	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x40012a7	     0xf84b0000000	                            je 0x400135d	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x40012ad	        0xf6422110	           test byte [rdx + 0x21], 0x10 	       788	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x40012b1	     0xf85b9000000	                           jne 0x4001370	       788	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x40012b7	          0x4939de	                            cmp r14, rbx	       792	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7	CALL_12
0x40012ba	            0x760a	                           jbe 0x40012c6	       792	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7	CALL_12
0x40012bc	        0x48395020	            cmp qword [rax + 0x20], rdx 	       793	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7
0x40012c0	     0xf84b6000000	                            je 0x400137c	       793	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7
0x40012c6	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x40012ca	        0x482b5510	             sub rdx, qword [rbp + 0x10]	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x40012ce	          0x4889c5	                            mov rbp, rax	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x40012d1	          0x4885d2	                           test rdx, rdx	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x40012d4	            0x740b	                            je 0x40012e1	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x40012d6	          0x4d892a	                    mov qword [r10], r13	       803	nm.c	FUNCTION_15	FOR_1	IF_8
0x40012d9	        0x49895208	                mov qword [r10 + 8], rdx	       804	nm.c	FUNCTION_15	FOR_1	IF_8
0x40012dd	        0x4983c210	                           add r10, 0x10	       805	nm.c	FUNCTION_15	FOR_1	IF_8
0x40012e1	          0x4939de	                            cmp r14, rbx	       760	nm.c	FUNCTION_15	FOR_1
0x40012e4	     0xf86a8000000	                           jbe 0x4001392	       760	nm.c	FUNCTION_15	FOR_1
0x40012ea	          0x4c89e0	                            mov rax, r12	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40012ed	          0x4989dd	                            mov r13, rbx	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40012f0	          0x4d89fc	                            mov r12, r15	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40012f3	          0x4989c7	                            mov r15, rax	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40012f6	      0x4b8d5c0500	                     lea rbx, [r13 + r8]	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40012fb	          0x4939de	                            cmp r14, rbx	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40012fe	            0x7690	                           jbe 0x4001290	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001300	        0x498b4308	                mov rax, qword [r11 + 8]	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001304	      0x4c89542420	             mov qword [rsp + 0x20], r10	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001309	          0x4c89df	                            mov rdi, r11	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x400130c	      0x4c89442418	              mov qword [rsp + 0x18], r8	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001311	      0x4c895c2410	             mov qword [rsp + 0x10], r11	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001316	          0x4c89e1	                            mov rcx, r12	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001319	          0x4889da	                            mov rdx, rbx	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x400131c	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001320	    0xff9060020000	                call qword [rax + 0x260]	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001326	          0x4885c0	                           test rax, rax	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4001329	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x400132e	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4001333	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4001338	     0xf84e3000000	                            je 0x4001421	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x400133e	    0xf74518000120	      test dword [rbp + 0x18], 0x200100 	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001345	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       779	nm.c	FUNCTION_15	FOR_1
0x4001349	     0xf856dffffff	                           jne 0x40012bc	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x400134f	        0x498b4b08	                mov rcx, qword [r11 + 8]	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001353	        0x83790805	                  cmp dword [rcx + 8], 5	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001357	     0xf8550ffffff	                           jne 0x40012ad	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x400135d	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001361	          0x4889c5	                            mov rbp, rax	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001364	      0xe968ffffff	                           jmp 0x40012d1	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001369	     0xf1f80000000	                         nop dword [rax]	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001370	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x4001374	          0x4889c5	                            mov rbp, rax	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x4001377	      0xe955ffffff	                           jmp 0x40012d1	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x400137c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       794	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4
0x4001380	        0x482b5510	             sub rdx, qword [rbp + 0x10]	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001384	          0x4889c5	                            mov rbp, rax	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001387	     0xf845dffffff	                            je 0x40012ea	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x400138d	      0xe944ffffff	                           jmp 0x40012d6	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001392	          0x4c89d6	                            mov rsi, r10	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001395	        0x482b3424	                    sub rsi, qword [rsp]	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001399	          0x4d89df	                            mov r15, r11	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x400139c	        0x48c1fe04	                              sar rsi, 4	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x40013a0	          0x4889f5	                            mov rbp, rsi	       760	nm.c	FUNCTION_15	FOR_1
0x40013a3	      0xe95cfeffff	                           jmp 0x4001204	       760	nm.c	FUNCTION_15	FOR_1
0x40013a8	        0x498b4708	                mov rax, qword [r15 + 8]	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40013ac	          0x4c89ff	                            mov rdi, r15	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40013af	    0xff9038030000	                call qword [rax + 0x338]	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40013b5	          0x4885c0	                           test rax, rax	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x40013b8	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1149	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40013bd	            0x7f14	                            jg 0x40013d3	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x40013bf	          0x4c89e6	                            mov rsi, r12	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x40013c2	            0x31c9	                            xor ecx, ecx	      1136	nm.c	FUNCTION_20	IF_6
0x40013c4	          0x4531c0	                            xor r8d, r8d	      1134	nm.c	FUNCTION_20	IF_6
0x40013c7	      0xe95efdffff	                           jmp 0x400112a	      1134	nm.c	FUNCTION_20	IF_6
0x40013cc	            0x31c0	                            xor eax, eax	       470	nm.c	FUNCTION_8	FOR_1
0x40013ce	      0xe96cfaffff	                           jmp 0x4000e3f	       470	nm.c	FUNCTION_8	FOR_1
0x40013d3	          0x4889c7	                            mov rdi, rax	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40013d6	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40013db	      0xe800000000	                          call 0x40013e0	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40013e0	          0x4989c0	                             mov r8, rax	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40013e3	        0x498b4708	                mov rax, qword [r15 + 8]	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40013e7	          0x4c89ff	                            mov rdi, r15	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40013ea	          0x4c89c6	                             mov rsi, r8	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40013ed	        0x4c890424	                     mov qword [rsp], r8	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40013f1	    0xff9040030000	                call qword [rax + 0x340]	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40013f7	          0x4885c0	                           test rax, rax	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x40013fa	          0x4889c1	                            mov rcx, rax	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40013fd	        0x4c8b0424	                     mov r8, qword [rsp]	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x4001401	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x4001406	            0x7808	                            js 0x4001410	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x4001408	          0x4c89e6	                            mov rsi, r12	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x400140b	      0xe91afdffff	                           jmp 0x400112a	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x4001410	          0x498b3f	                    mov rdi, qword [r15]	      1047	nm.c	FUNCTION_18	FOR_1
0x4001413	      0xe800000000	                          call 0x4001418	      1047	nm.c	FUNCTION_18	FOR_1
0x4001418	        0x498b3c24	                    mov rdi, qword [r12]	       479	nm.c	FUNCTION_8	FOR_1
0x400141c	      0xe800000000	                          call 0x4001421	       479	nm.c	FUNCTION_8	FOR_1
0x4001421	          0x498b3b	                    mov rdi, qword [r11]	       774	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001424	      0xe800000000	                          call 0x4001429	       774	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001429	      0xe800000000	                          call 0x400142e	      1213	nm.c	
