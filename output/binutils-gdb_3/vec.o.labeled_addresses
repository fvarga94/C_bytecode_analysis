vec_p_reserve	DO,0:WHILE,0:ELSE,0:SWITCH,0:IF,0:FOR,0:functions,0:CALL,1	3
0x4000140	      0xb908000000	                              mov ecx, 8	        83	vec.c	FUNCTION_2
0x4000145	      0xba08000000	                              mov edx, 8	        83	vec.c	FUNCTION_2
0x400014a	      0xe9f1feffff	jmp sym.vec_o_reserve_void__int_unsignedlong_unsignedlong	        83	vec.c	FUNCTION_2
vec_o_reserve	DO,0:WHILE,0:ELSE,0:SWITCH,0:IF,2:FOR,0:functions,0:CALL,2	82
0x4000040	              0x55	                                push rbp	        92	vec.c	FUNCTION_3
0x4000041	              0x53	                                push rbx	        92	vec.c	FUNCTION_3
0x4000042	        0x4883ec08	                              sub rsp, 8	        92	vec.c	FUNCTION_3
0x4000046	          0x4885ff	                           test rdi, rdi	        40	vec.c	FUNCTION_1	IF_1
0x4000049	     0xf84a9000000	                            je 0x40000f8	        40	vec.c	FUNCTION_1	IF_1
0x400004f	        0x448b4704	                mov r8d, dword [rdi + 4]	        42	vec.c	FUNCTION_1	IF_1
0x4000053	            0x8b1f	                    mov ebx, dword [rdi]	        43	vec.c	FUNCTION_1	IF_1
0x4000055	          0x4589c1	                            mov r9d, r8d	        43	vec.c	FUNCTION_1	IF_1
0x4000058	          0x4129d9	                            sub r9d, ebx	        43	vec.c	FUNCTION_1	IF_1
0x400005b	          0x4889fd	                            mov rbp, rdi	        43	vec.c	FUNCTION_1	IF_1
0x400005e	            0x89f7	                            mov edi, esi	        51	vec.c	FUNCTION_1	CALL_1
0x4000060	          0xc1ff1f	                           sar edi, 0x1f	        51	vec.c	FUNCTION_1	CALL_1
0x4000063	            0x89f8	                            mov eax, edi	        51	vec.c	FUNCTION_1	CALL_1
0x4000065	            0x31f0	                            xor eax, esi	        51	vec.c	FUNCTION_1	CALL_1
0x4000067	            0x29f8	                            sub eax, edi	        51	vec.c	FUNCTION_1	CALL_1
0x4000069	          0x4439c8	                            cmp eax, r9d	        51	vec.c	FUNCTION_1	CALL_1
0x400006c	     0xf86a2000000	                           jbe 0x4000114	        51	vec.c	FUNCTION_1	CALL_1
0x4000072	            0x85f6	                           test esi, esi	        53	vec.c	FUNCTION_1	IF_3
0x4000074	            0x786a	                            js 0x40000e0	        53	vec.c	FUNCTION_1	IF_3
0x4000076	          0x4585c0	                           test r8d, r8d	        59	vec.c	FUNCTION_1	ELSE_2	IF_4
0x4000079	      0xb804000000	                              mov eax, 4	        60	vec.c	FUNCTION_1	ELSE_2	IF_4
0x400007e	            0x7530	                           jne 0x40000b0	        59	vec.c	FUNCTION_1	ELSE_2	IF_4
0x4000080	             0x1f3	                            add ebx, esi	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x4000082	            0x39c3	                            cmp ebx, eax	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x4000084	            0x763a	                           jbe 0x40000c0	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x4000086	            0x89de	                            mov esi, ebx	        99	vec.c	FUNCTION_3	CALL_2
0x4000088	          0x4889ef	                            mov rdi, rbp	        99	vec.c	FUNCTION_3	CALL_2
0x400008b	        0x480fafce	                           imul rcx, rsi	        99	vec.c	FUNCTION_3	CALL_2
0x400008f	        0x488d3411	                    lea rsi, [rcx + rdx]	        99	vec.c	FUNCTION_3	CALL_2
0x4000093	      0xe800000000	                          call 0x4000098	        99	vec.c	FUNCTION_3	CALL_2
0x4000098	          0x4885ed	                           test rbp, rbp	       101	vec.c	FUNCTION_3	IF_2
0x400009b	          0x895804	                mov dword [rax + 4], ebx	       100	vec.c	FUNCTION_3
0x400009e	            0x7448	                            je 0x40000e8	       101	vec.c	FUNCTION_3	IF_2
0x40000a0	        0x4883c408	                              add rsp, 8	       105	vec.c	FUNCTION_3
0x40000a4	              0x5b	                                 pop rbx	       105	vec.c	FUNCTION_3
0x40000a5	              0x5d	                                 pop rbp	       105	vec.c	FUNCTION_3
0x40000a6	              0xc3	                                     ret	       105	vec.c	FUNCTION_3
0x40000a7	    0x660f1f840000	                    nop word [rax + rax]	       105	vec.c	FUNCTION_3
0x40000b0	        0x4183f80f	                            cmp r8d, 0xf	        61	vec.c	FUNCTION_1	ELSE_2	ELSE_3	IF_5
0x40000b4	            0x771a	                            ja 0x40000d0	        61	vec.c	FUNCTION_1	ELSE_2	ELSE_3	IF_5
0x40000b6	        0x438d0400	                      lea eax, [r8 + r8]	        63	vec.c	FUNCTION_1	ELSE_2	ELSE_3	IF_5
0x40000ba	             0x1f3	                            add ebx, esi	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000bc	            0x39c3	                            cmp ebx, eax	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000be	            0x77c6	                            ja 0x4000086	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000c0	            0x89c3	                            mov ebx, eax	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000c2	            0x31c0	                            xor eax, eax	        97	vec.c	FUNCTION_3	IF_1
0x40000c4	            0x85db	                           test ebx, ebx	        96	vec.c	FUNCTION_3	IF_1
0x40000c6	            0x75be	                           jne 0x4000086	        96	vec.c	FUNCTION_3	IF_1
0x40000c8	            0xebd6	                           jmp 0x40000a0	        96	vec.c	FUNCTION_3	IF_1
0x40000ca	    0x660f1f440000	                    nop word [rax + rax]	        96	vec.c	FUNCTION_3	IF_1
0x40000d0	        0x438d0440	                    lea eax, [r8 + r8*2]	        66	vec.c	FUNCTION_1	ELSE_2	ELSE_4
0x40000d4	             0x1f3	                            add ebx, esi	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000d6	            0xd1e8	                              shr eax, 1	        66	vec.c	FUNCTION_1	ELSE_2	ELSE_4
0x40000d8	            0x39c3	                            cmp ebx, eax	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000da	            0x77aa	                            ja 0x4000086	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000dc	            0xebe2	                           jmp 0x40000c0	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000de	            0x6690	                                     nop	        69	vec.c	FUNCTION_1	ELSE_2	IF_6
0x40000e0	            0x29f3	                            sub ebx, esi	        55	vec.c	FUNCTION_1	IF_3
0x40000e2	            0xebde	                           jmp 0x40000c2	        55	vec.c	FUNCTION_1	IF_3
0x40000e4	         0xf1f4000	                         nop dword [rax]	        55	vec.c	FUNCTION_1	IF_3
0x40000e8	    0xc70000000000	                      mov dword [rax], 0	       102	vec.c	FUNCTION_3	IF_2
0x40000ee	        0x4883c408	                              add rsp, 8	       105	vec.c	FUNCTION_3
0x40000f2	              0x5b	                                 pop rbx	       105	vec.c	FUNCTION_3
0x40000f3	              0x5d	                                 pop rbp	       105	vec.c	FUNCTION_3
0x40000f4	              0xc3	                                     ret	       105	vec.c	FUNCTION_3
0x40000f5	           0xf1f00	                         nop dword [rax]	       105	vec.c	FUNCTION_3
0x40000f8	            0x85f6	                           test esi, esi	        45	vec.c	FUNCTION_1	ELSE_1	IF_2
0x40000fa	            0x7414	                            je 0x4000110	        45	vec.c	FUNCTION_1	ELSE_1	IF_2
0x40000fc	          0x4531c9	                            xor r9d, r9d	        45	vec.c	FUNCTION_1	ELSE_1	IF_2
0x40000ff	            0x31db	                            xor ebx, ebx	        38	vec.c	FUNCTION_1
0x4000101	          0x4531c0	                            xor r8d, r8d	        37	vec.c	FUNCTION_1
0x4000104	      0xe952ffffff	                           jmp 0x400005b	        37	vec.c	FUNCTION_1
0x4000109	     0xf1f80000000	                         nop dword [rax]	        37	vec.c	FUNCTION_1
0x4000110	            0x31c0	                            xor eax, eax	        97	vec.c	FUNCTION_3	IF_1
0x4000112	            0xeb8c	                           jmp 0x40000a0	        97	vec.c	FUNCTION_3	IF_1
0x4000114	    0x41b800000000	                              mov r8d, 0	        51	vec.c	FUNCTION_1	CALL_1
0x400011a	      0xb900000000	                              mov ecx, 0	        51	vec.c	FUNCTION_1	CALL_1
0x400011f	      0xba00000000	                              mov edx, 0	        51	vec.c	FUNCTION_1	CALL_1
0x4000124	      0xbe33000000	                           mov esi, 0x33	        51	vec.c	FUNCTION_1	CALL_1
0x4000129	      0xbf00000000	                              mov edi, 0	        51	vec.c	FUNCTION_1	CALL_1
0x400012e	            0x31c0	                            xor eax, eax	        51	vec.c	FUNCTION_1	CALL_1
0x4000130	      0xe800000000	                          call 0x4000135	        51	vec.c	FUNCTION_1	CALL_1
