history_set_pos	IF,1:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	14
0x4000160	    0x393d00000000	            cmp dword [0x04000166], edi 	       154	history.c	FUNCTION_6	IF_1
0x4000166	            0x7c28	                            jl 0x4000190	       154	history.c	FUNCTION_6	IF_1
0x4000168	            0x89f8	                            mov eax, edi	       154	history.c	FUNCTION_6	IF_1
0x400016a	          0xc1e81f	                           shr eax, 0x1f	       154	history.c	FUNCTION_6	IF_1
0x400016d	            0x84c0	                             test al, al	       154	history.c	FUNCTION_6	IF_1
0x400016f	            0x751f	                           jne 0x4000190	       154	history.c	FUNCTION_6	IF_1
0x4000171	    0x48833d000000	               cmp qword [0x04000179], 0	       154	history.c	FUNCTION_6	IF_1
0x4000179	            0x7415	                            je 0x4000190	       154	history.c	FUNCTION_6	IF_1
0x400017b	    0x893d00000000	            mov dword [0x04000181], edi 	       156	history.c	FUNCTION_6
0x4000181	      0xb801000000	                              mov eax, 1	       157	history.c	FUNCTION_6
0x4000186	              0xc3	                                     ret	       157	history.c	FUNCTION_6
0x4000187	    0x660f1f840000	                    nop word [rax + rax]	       157	history.c	FUNCTION_6
0x4000190	            0x31c0	                            xor eax, eax	       155	history.c	FUNCTION_6	IF_1
0x4000192	              0xc3	                                     ret	       158	history.c	FUNCTION_6
history_is_stifled	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	2
0x40008b0	    0x8b0500000000	            mov eax, dword [0x040008b6] 	       504	history.c	FUNCTION_19
0x40008b6	              0xc3	                                     ret	       504	history.c	FUNCTION_19
history_total_bytes	IF,0:ELSE,0:FOR,1:CALL,1:SWITCH,0:DO,0:functions,0:WHILE,0	34
0x40000e0	            0x4155	                                push r13	       131	history.c	FUNCTION_4
0x40000e2	            0x4154	                                push r12	       131	history.c	FUNCTION_4
0x40000e4	              0x55	                                push rbp	       131	history.c	FUNCTION_4
0x40000e5	              0x53	                                push rbx	       131	history.c	FUNCTION_4
0x40000e6	        0x4883ec08	                              sub rsp, 8	       131	history.c	FUNCTION_4
0x40000ea	    0x488b2d000000	            mov rbp, qword [0x040000f1] 	       134	history.c	FUNCTION_4	FOR_1
0x40000f1	          0x4885ed	                           test rbp, rbp	       134	history.c	FUNCTION_4	FOR_1
0x40000f4	            0x744f	                            je 0x4000145	       134	history.c	FUNCTION_4	FOR_1
0x40000f6	        0x488b5d00	                    mov rbx, qword [rbp]	       134	history.c	FUNCTION_4	FOR_1
0x40000fa	          0x4885db	                           test rbx, rbx	       134	history.c	FUNCTION_4	FOR_1
0x40000fd	            0x7446	                            je 0x4000145	       134	history.c	FUNCTION_4	FOR_1
0x40000ff	        0x4883c508	                              add rbp, 8	       134	history.c	FUNCTION_4	FOR_1
0x4000103	          0x4531e4	                          xor r12d, r12d	       134	history.c	FUNCTION_4	FOR_1
0x4000106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       134	history.c	FUNCTION_4	FOR_1
0x4000110	          0x488b3b	                    mov rdi, qword [rbx]	       135	history.c	FUNCTION_4	CALL_1
0x4000113	        0x4883c508	                              add rbp, 8	       135	history.c	FUNCTION_4	CALL_1
0x4000117	      0xe800000000	                          call 0x400011c	       135	history.c	FUNCTION_4	CALL_1
0x400011c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       135	history.c	FUNCTION_4	CALL_1
0x4000120	          0x4989c5	                            mov r13, rax	       135	history.c	FUNCTION_4	CALL_1
0x4000123	      0xe800000000	                          call 0x4000128	       135	history.c	FUNCTION_4	CALL_1
0x4000128	        0x488b5df8	                mov rbx, qword [rbp - 8]	       134	history.c	FUNCTION_4	FOR_1
0x400012c	          0x4401e8	                           add eax, r13d	       135	history.c	FUNCTION_4	CALL_1
0x400012f	          0x4101c4	                           add r12d, eax	       135	history.c	FUNCTION_4	CALL_1
0x4000132	          0x4885db	                           test rbx, rbx	       134	history.c	FUNCTION_4	FOR_1
0x4000135	            0x75d9	                           jne 0x4000110	       134	history.c	FUNCTION_4	FOR_1
0x4000137	        0x4883c408	                              add rsp, 8	       138	history.c	FUNCTION_4
0x400013b	          0x4489e0	                           mov eax, r12d	       138	history.c	FUNCTION_4
0x400013e	              0x5b	                                 pop rbx	       138	history.c	FUNCTION_4
0x400013f	              0x5d	                                 pop rbp	       138	history.c	FUNCTION_4
0x4000140	            0x415c	                                 pop r12	       138	history.c	FUNCTION_4
0x4000142	            0x415d	                                 pop r13	       138	history.c	FUNCTION_4
0x4000144	              0xc3	                                     ret	       138	history.c	FUNCTION_4
0x4000145	          0x4531e4	                          xor r12d, r12d	       134	history.c	FUNCTION_4	FOR_1
0x4000148	            0xebed	                           jmp 0x4000137	       134	history.c	FUNCTION_4	FOR_1
next_history	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	12
0x4000210	    0x8b0500000000	            mov eax, dword [0x04000216] 	       194	history.c	FUNCTION_10
0x4000216	    0x3b0500000000	            cmp eax, dword [0x0400021c] 	       194	history.c	FUNCTION_10
0x400021c	            0x741a	                            je 0x4000238	       194	history.c	FUNCTION_10
0x400021e	    0x488b15000000	            mov rdx, qword [0x04000225] 	       194	history.c	FUNCTION_10
0x4000225	          0x83c001	                              add eax, 1	       194	history.c	FUNCTION_10
0x4000228	    0x890500000000	            mov dword [0x0400022e], eax 	       194	history.c	FUNCTION_10
0x400022e	            0x4898	                                    cdqe	       194	history.c	FUNCTION_10
0x4000230	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       194	history.c	FUNCTION_10
0x4000234	              0xc3	                                     ret	       194	history.c	FUNCTION_10
0x4000235	           0xf1f00	                         nop dword [rax]	       194	history.c	FUNCTION_10
0x4000238	            0x31c0	                            xor eax, eax	       194	history.c	FUNCTION_10
0x400023a	              0xc3	                                     ret	       195	history.c	FUNCTION_10
unstifle_history	IF,1:ELSE,1:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	11
0x4000880	    0x8b1500000000	            mov edx, dword [0x04000886] 	       497	history.c	FUNCTION_18	ELSE_1
0x4000886	    0x8b0d00000000	            mov ecx, dword [0x0400088c] 	       491	history.c	FUNCTION_18	IF_1
0x400088c	            0x89d0	                            mov eax, edx	       497	history.c	FUNCTION_18	ELSE_1
0x400088e	            0xf7d8	                                 neg eax	       497	history.c	FUNCTION_18	ELSE_1
0x4000890	            0x85c9	                           test ecx, ecx	       491	history.c	FUNCTION_18	IF_1
0x4000892	            0x750c	                           jne 0x40008a0	       491	history.c	FUNCTION_18	IF_1
0x4000894	            0xf3c3	                                     ret	       498	history.c	FUNCTION_18
0x4000896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       498	history.c	FUNCTION_18
0x40008a0	    0xc70500000000	               mov dword [0x040008aa], 0	       493	history.c	FUNCTION_18	IF_1
0x40008aa	            0x89d0	                            mov eax, edx	       494	history.c	FUNCTION_18	IF_1
0x40008ac	              0xc3	                                     ret	       498	history.c	FUNCTION_18
history_get_history_state	IF,1:ELSE,0:FOR,0:CALL,1:SWITCH,0:DO,0:functions,0:WHILE,0	18
0x4000040	        0x4883ec08	                              sub rsp, 8	        90	history.c	FUNCTION_1
0x4000044	      0xbf18000000	                           mov edi, 0x18	        93	history.c	FUNCTION_1	CALL_1
0x4000049	      0xe800000000	                          call 0x400004e	        93	history.c	FUNCTION_1	CALL_1
0x400004e	    0x488b15000000	            mov rdx, qword [0x04000055] 	        94	history.c	FUNCTION_1
0x4000055	    0xc74014000000	               mov dword [rax + 0x14], 0	        98	history.c	FUNCTION_1
0x400005c	          0x488910	                    mov qword [rax], rdx	        94	history.c	FUNCTION_1
0x400005f	    0x8b1500000000	            mov edx, dword [0x04000065] 	        95	history.c	FUNCTION_1
0x4000065	          0x895008	                mov dword [rax + 8], edx	        95	history.c	FUNCTION_1
0x4000068	    0x8b1500000000	            mov edx, dword [0x0400006e] 	        96	history.c	FUNCTION_1
0x400006e	          0x89500c	              mov dword [rax + 0xc], edx	        96	history.c	FUNCTION_1
0x4000071	    0x8b1500000000	            mov edx, dword [0x04000077] 	        97	history.c	FUNCTION_1
0x4000077	          0x895010	             mov dword [rax + 0x10], edx	        97	history.c	FUNCTION_1
0x400007a	    0x8b1500000000	            mov edx, dword [0x04000080] 	        99	history.c	FUNCTION_1	IF_1
0x4000080	            0x85d2	                           test edx, edx	        99	history.c	FUNCTION_1	IF_1
0x4000082	            0x7407	                            je 0x400008b	        99	history.c	FUNCTION_1	IF_1
0x4000084	    0xc74014010000	               mov dword [rax + 0x14], 1	       100	history.c	FUNCTION_1	IF_1
0x400008b	        0x4883c408	                              add rsp, 8	       103	history.c	FUNCTION_1
0x400008f	              0xc3	                                     ret	       103	history.c	FUNCTION_1
copy_history_entry	IF,1:ELSE,0:FOR,0:CALL,2:SWITCH,0:DO,0:functions,0:WHILE,0	30
0x40005b0	            0x31c0	                            xor eax, eax	       348	history.c	FUNCTION_15
0x40005b2	          0x4885ff	                           test rdi, rdi	       352	history.c	FUNCTION_15	IF_1
0x40005b5	            0x744f	                            je 0x4000606	       352	history.c	FUNCTION_15	IF_1
0x40005b7	            0x4154	                                push r12	       348	history.c	FUNCTION_15
0x40005b9	              0x55	                                push rbp	       348	history.c	FUNCTION_15
0x40005ba	          0x4889fd	                            mov rbp, rdi	       348	history.c	FUNCTION_15
0x40005bd	              0x53	                                push rbx	       348	history.c	FUNCTION_15
0x40005be	          0x488b3f	                    mov rdi, qword [rdi]	       355	history.c	FUNCTION_15	CALL_1
0x40005c1	            0x31f6	                            xor esi, esi	       355	history.c	FUNCTION_15	CALL_1
0x40005c3	      0xe800000000	                          call 0x40005c8	       355	history.c	FUNCTION_15	CALL_1
0x40005c8	        0x4c8b6508	                mov r12, qword [rbp + 8]	       357	history.c	FUNCTION_15	CALL_2
0x40005cc	          0x4889c3	                            mov rbx, rax	       355	history.c	FUNCTION_15	CALL_1
0x40005cf	          0x4d85e4	                           test r12, r12	       357	history.c	FUNCTION_15	CALL_2
0x40005d2	            0x741f	                            je 0x40005f3	       357	history.c	FUNCTION_15	CALL_2
0x40005d4	          0x4c89e7	                            mov rdi, r12	       357	history.c	FUNCTION_15	CALL_2
0x40005d7	      0xe800000000	                          call 0x40005dc	       357	history.c	FUNCTION_15	CALL_2
0x40005dc	        0x488d7801	                      lea rdi, [rax + 1]	       357	history.c	FUNCTION_15	CALL_2
0x40005e0	      0xe800000000	                          call 0x40005e5	       357	history.c	FUNCTION_15	CALL_2
0x40005e5	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_27	CALL_3
0x40005e8	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_27	CALL_3
0x40005eb	      0xe800000000	                          call 0x40005f0	       110	string3.h	FUNCTION_27	CALL_3
0x40005f0	          0x4989c4	                            mov r12, rax	       110	string3.h	FUNCTION_27	CALL_3
0x40005f3	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       360	history.c	FUNCTION_15
0x40005f7	        0x4c896308	                mov qword [rbx + 8], r12	       358	history.c	FUNCTION_15
0x40005fb	        0x48894310	             mov qword [rbx + 0x10], rax	       360	history.c	FUNCTION_15
0x40005ff	          0x4889d8	                            mov rax, rbx	       362	history.c	FUNCTION_15
0x4000602	              0x5b	                                 pop rbx	       363	history.c	FUNCTION_15
0x4000603	              0x5d	                                 pop rbp	       363	history.c	FUNCTION_15
0x4000604	            0x415c	                                 pop r12	       363	history.c	FUNCTION_15
0x4000606	            0xf3c3	                                     ret	       363	history.c	FUNCTION_15
remove_history	IF,1:ELSE,0:FOR,1:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	26
0x4000750	            0x85ff	                           test edi, edi	       445	history.c	FUNCTION_16	IF_1
0x4000752	            0x784c	                            js 0x40007a0	       445	history.c	FUNCTION_16	IF_1
0x4000754	    0x8b3500000000	            mov esi, dword [0x0400075a] 	       445	history.c	FUNCTION_16	IF_1
0x400075a	            0x85f6	                           test esi, esi	       445	history.c	FUNCTION_16	IF_1
0x400075c	            0x7442	                            je 0x40007a0	       445	history.c	FUNCTION_16	IF_1
0x400075e	            0x39f7	                            cmp edi, esi	       445	history.c	FUNCTION_16	IF_1
0x4000760	            0x7d3e	                           jge 0x40007a0	       445	history.c	FUNCTION_16	IF_1
0x4000762	    0x488b05000000	            mov rax, qword [0x04000769] 	       445	history.c	FUNCTION_16	IF_1
0x4000769	          0x4885c0	                           test rax, rax	       445	history.c	FUNCTION_16	IF_1
0x400076c	            0x7432	                            je 0x40007a0	       445	history.c	FUNCTION_16	IF_1
0x400076e	          0x4863d7	                         movsxd rdx, edi	       448	history.c	FUNCTION_16
0x4000771	        0x488d14d0	                  lea rdx, [rax + rdx*8]	       448	history.c	FUNCTION_16
0x4000775	          0x488b02	                    mov rax, qword [rdx]	       448	history.c	FUNCTION_16
0x4000778	     0xf1f84000000	                   nop dword [rax + rax]	       448	history.c	FUNCTION_16
0x4000780	        0x488b4a08	                mov rcx, qword [rdx + 8]	       451	history.c	FUNCTION_16	FOR_1
0x4000784	          0x83c701	                              add edi, 1	       450	history.c	FUNCTION_16	FOR_1
0x4000787	        0x4883c208	                              add rdx, 8	       450	history.c	FUNCTION_16	FOR_1
0x400078b	        0x48894af8	                mov qword [rdx - 8], rcx	       451	history.c	FUNCTION_16	FOR_1
0x400078f	            0x39fe	                            cmp esi, edi	       450	history.c	FUNCTION_16	FOR_1
0x4000791	            0x7fed	                            jg 0x4000780	       450	history.c	FUNCTION_16	FOR_1
0x4000793	          0x83ee01	                              sub esi, 1	       453	history.c	FUNCTION_16
0x4000796	    0x893500000000	            mov dword [0x0400079c], esi 	       453	history.c	FUNCTION_16
0x400079c	              0xc3	                                     ret	       455	history.c	FUNCTION_16
0x400079d	           0xf1f00	                         nop dword [rax]	       455	history.c	FUNCTION_16
0x40007a0	            0x31c0	                            xor eax, eax	       446	history.c	FUNCTION_16	IF_1
0x40007a2	              0xc3	                                     ret	       456	history.c	FUNCTION_16
free_history_entry	IF,1:ELSE,0:FOR,0:CALL,3:SWITCH,0:DO,0:functions,0:WHILE,0	25
0x4000370	          0x4885ff	                           test rdi, rdi	       336	history.c	FUNCTION_14	IF_1
0x4000373	            0x743b	                            je 0x40003b0	       336	history.c	FUNCTION_14	IF_1
0x4000375	              0x55	                                push rbp	       333	history.c	FUNCTION_14
0x4000376	              0x53	                                push rbx	       333	history.c	FUNCTION_14
0x4000377	          0x4889fb	                            mov rbx, rdi	       333	history.c	FUNCTION_14
0x400037a	        0x4883ec08	                              sub rsp, 8	       333	history.c	FUNCTION_14
0x400037e	          0x488b3f	                    mov rdi, qword [rdi]	       338	history.c	FUNCTION_14	CALL_1
0x4000381	          0x4885ff	                           test rdi, rdi	       338	history.c	FUNCTION_14	CALL_1
0x4000384	            0x7405	                            je 0x400038b	       338	history.c	FUNCTION_14	CALL_1
0x4000386	      0xe800000000	                          call 0x400038b	       338	history.c	FUNCTION_14	CALL_1
0x400038b	        0x488b7b08	                mov rdi, qword [rbx + 8]	       339	history.c	FUNCTION_14	CALL_2
0x400038f	          0x4885ff	                           test rdi, rdi	       339	history.c	FUNCTION_14	CALL_2
0x4000392	            0x7405	                            je 0x4000399	       339	history.c	FUNCTION_14	CALL_2
0x4000394	      0xe800000000	                          call 0x4000399	       339	history.c	FUNCTION_14	CALL_2
0x4000399	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	       340	history.c	FUNCTION_14
0x400039d	          0x4889df	                            mov rdi, rbx	       341	history.c	FUNCTION_14	CALL_3
0x40003a0	      0xe800000000	                          call 0x40003a5	       341	history.c	FUNCTION_14	CALL_3
0x40003a5	        0x4883c408	                              add rsp, 8	       343	history.c	FUNCTION_14
0x40003a9	          0x4889e8	                            mov rax, rbp	       342	history.c	FUNCTION_14
0x40003ac	              0x5b	                                 pop rbx	       343	history.c	FUNCTION_14
0x40003ad	              0x5d	                                 pop rbp	       343	history.c	FUNCTION_14
0x40003ae	              0xc3	                                     ret	       343	history.c	FUNCTION_14
0x40003af	              0x90	                                     nop	       343	history.c	FUNCTION_14
0x40003b0	            0x31c0	                            xor eax, eax	       337	history.c	FUNCTION_14	IF_1
0x40003b2	              0xc3	                                     ret	       337	history.c	FUNCTION_14	IF_1
history_list	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	2
0x40001a0	    0x488b05000000	            mov rax, qword [0x040001a7] 	       167	history.c	FUNCTION_7
0x40001a7	              0xc3	                                     ret	       167	history.c	FUNCTION_7
using_history	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	3
0x40000d0	    0x8b0500000000	            mov eax, dword [0x040000d6] 	       123	history.c	FUNCTION_3
0x40000d6	    0x890500000000	            mov dword [0x040000dc], eax 	       123	history.c	FUNCTION_3
0x40000dc	              0xc3	                                     ret	       123	history.c	FUNCTION_3
clear_history	IF,0:ELSE,0:FOR,1:CALL,1:SWITCH,0:DO,0:functions,0:WHILE,0	24
0x40008c0	              0x55	                                push rbp	       508	history.c	FUNCTION_20
0x40008c1	              0x53	                                push rbx	       508	history.c	FUNCTION_20
0x40008c2	            0x31ed	                            xor ebp, ebp	       508	history.c	FUNCTION_20
0x40008c4	            0x31db	                            xor ebx, ebx	       508	history.c	FUNCTION_20
0x40008c6	        0x4883ec08	                              sub rsp, 8	       508	history.c	FUNCTION_20
0x40008ca	    0x8b1500000000	            mov edx, dword [0x040008d0] 	       512	history.c	FUNCTION_20	FOR_1
0x40008d0	    0x488b05000000	            mov rax, qword [0x040008d7] 	       512	history.c	FUNCTION_20	FOR_1
0x40008d7	            0x85d2	                           test edx, edx	       512	history.c	FUNCTION_20	FOR_1
0x40008d9	            0x7e2c	                           jle 0x4000907	       512	history.c	FUNCTION_20	FOR_1
0x40008db	       0xf1f440000	                   nop dword [rax + rax]	       512	history.c	FUNCTION_20	FOR_1
0x40008e0	        0x488b3c18	              mov rdi, qword [rax + rbx]	       514	history.c	FUNCTION_20	FOR_1	CALL_1
0x40008e4	          0x83c501	                              add ebp, 1	       512	history.c	FUNCTION_20	FOR_1
0x40008e7	      0xe800000000	                          call 0x40008ec	       514	history.c	FUNCTION_20	FOR_1	CALL_1
0x40008ec	    0x488b05000000	            mov rax, qword [0x040008f3] 	       515	history.c	FUNCTION_20	FOR_1
0x40008f3	    0x48c704180000	                mov qword [rax + rbx], 0	       515	history.c	FUNCTION_20	FOR_1
0x40008fb	        0x4883c308	                              add rbx, 8	       515	history.c	FUNCTION_20	FOR_1
0x40008ff	    0x392d00000000	            cmp dword [0x04000905], ebp 	       512	history.c	FUNCTION_20	FOR_1
0x4000905	            0x7fd9	                            jg 0x40008e0	       512	history.c	FUNCTION_20	FOR_1
0x4000907	    0xc70500000000	               mov dword [0x04000911], 0	       518	history.c	FUNCTION_20
0x4000911	    0xc70500000000	               mov dword [0x0400091b], 0	       518	history.c	FUNCTION_20
0x400091b	        0x4883c408	                              add rsp, 8	       519	history.c	FUNCTION_20
0x400091f	              0x5b	                                 pop rbx	       519	history.c	FUNCTION_20
0x4000920	              0x5d	                                 pop rbp	       519	history.c	FUNCTION_20
0x4000921	              0xc3	                                     ret	       519	history.c	FUNCTION_20
history_get	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	14
0x4000240	    0x2b3d00000000	             sub edi, dword [0x04000246]	       205	history.c	FUNCTION_11
0x4000246	    0x3b3d00000000	            cmp edi, dword [0x0400024c] 	       206	history.c	FUNCTION_11
0x400024c	            0x7d22	                           jge 0x4000270	       206	history.c	FUNCTION_11
0x400024e	            0x85ff	                           test edi, edi	       206	history.c	FUNCTION_11
0x4000250	            0x781e	                            js 0x4000270	       206	history.c	FUNCTION_11
0x4000252	    0x488b05000000	            mov rax, qword [0x04000259] 	       206	history.c	FUNCTION_11
0x4000259	          0x4885c0	                           test rax, rax	       206	history.c	FUNCTION_11
0x400025c	            0x7412	                            je 0x4000270	       206	history.c	FUNCTION_11
0x400025e	          0x4863ff	                         movsxd rdi, edi	       208	history.c	FUNCTION_11
0x4000261	        0x488b04f8	            mov rax, qword [rax + rdi*8]	       208	history.c	FUNCTION_11
0x4000265	              0xc3	                                     ret	       208	history.c	FUNCTION_11
0x4000266	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       208	history.c	FUNCTION_11
0x4000270	            0x31c0	                            xor eax, eax	       208	history.c	FUNCTION_11
0x4000272	              0xc3	                                     ret	       209	history.c	FUNCTION_11
stifle_history	IF,2:ELSE,0:FOR,2:CALL,1:SWITCH,0:DO,0:functions,0:WHILE,0	55
0x40007b0	            0x4155	                                push r13	       462	history.c	FUNCTION_17
0x40007b2	            0x4154	                                push r12	       462	history.c	FUNCTION_17
0x40007b4	              0x55	                                push rbp	       462	history.c	FUNCTION_17
0x40007b5	              0x53	                                push rbx	       462	history.c	FUNCTION_17
0x40007b6	      0xbd00000000	                              mov ebp, 0	       462	history.c	FUNCTION_17
0x40007bb	        0x4883ec08	                              sub rsp, 8	       462	history.c	FUNCTION_17
0x40007bf	    0x8b0500000000	            mov eax, dword [0x040007c5] 	       468	history.c	FUNCTION_17	IF_2
0x40007c5	            0x85ff	                           test edi, edi	       468	history.c	FUNCTION_17	IF_2
0x40007c7	           0xf49ef	                         cmovns ebp, edi	       468	history.c	FUNCTION_17	IF_2
0x40007ca	            0x39e8	                            cmp eax, ebp	       468	history.c	FUNCTION_17	IF_2
0x40007cc	     0xf8e86000000	                           jle 0x4000858	       468	history.c	FUNCTION_17	IF_2
0x40007d2	            0x29e8	                            sub eax, ebp	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40007d4	            0x31db	                            xor ebx, ebx	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40007d6	          0x4189c5	                           mov r13d, eax	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40007d9	          0x8d40ff	                      lea eax, [rax - 1]	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40007dc	    0x4c8d24c50800	                    lea r12, [rax*8 + 8]	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40007e4	         0xf1f4000	                         nop dword [rax]	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40007e8	    0x488b05000000	            mov rax, qword [0x040007ef] 	       472	history.c	FUNCTION_17	IF_2	CALL_1
0x40007ef	        0x488b3c18	              mov rdi, qword [rax + rbx]	       472	history.c	FUNCTION_17	IF_2	CALL_1
0x40007f3	        0x4883c308	                              add rbx, 8	       472	history.c	FUNCTION_17	IF_2	CALL_1
0x40007f7	      0xe800000000	                          call 0x40007fc	       472	history.c	FUNCTION_17	IF_2	CALL_1
0x40007fc	          0x4939dc	                            cmp r12, rbx	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x40007ff	            0x75e7	                           jne 0x40007e8	       471	history.c	FUNCTION_17	IF_2	FOR_1
0x4000801	    0x8b0d00000000	            mov ecx, dword [0x04000807] 	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000807	            0x31d2	                            xor edx, edx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000809	            0x31c0	                            xor eax, eax	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400080b	    0x44892d000000	           mov dword [0x04000812], r13d 	       474	history.c	FUNCTION_17	IF_2
0x4000812	    0x488b3d000000	            mov rdi, qword [0x04000819] 	       474	history.c	FUNCTION_17	IF_2
0x4000819	            0x29e9	                            sub ecx, ebp	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400081b	            0x85ed	                           test ebp, ebp	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400081d	            0x742b	                            je 0x400084a	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400081f	          0x8d55ff	                      lea edx, [rbp - 1]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000822	          0x4889f8	                            mov rax, rdi	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000825	          0x4863c9	                         movsxd rcx, ecx	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000828	      0x488d74d708	              lea rsi, [rdi + rdx*8 + 8]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400082d	           0xf1f00	                         nop dword [rax]	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000830	        0x488b14c8	            mov rdx, qword [rax + rcx*8]	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x4000834	        0x4883c008	                              add rax, 8	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x4000838	        0x488950f8	                mov qword [rax - 8], rdx	       476	history.c	FUNCTION_17	IF_2	FOR_2
0x400083c	          0x4839c6	                            cmp rsi, rax	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400083f	            0x75ef	                           jne 0x4000830	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000841	          0x4863c5	                         movsxd rax, ebp	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000844	            0x89ea	                            mov edx, ebp	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x4000846	        0x48c1e003	                              shl rax, 3	       475	history.c	FUNCTION_17	IF_2	FOR_2
0x400084a	    0x48c704070000	                mov qword [rdi + rax], 0	       477	history.c	FUNCTION_17	IF_2
0x4000852	    0x891500000000	            mov dword [0x04000858], edx 	       478	history.c	FUNCTION_17	IF_2
0x4000858	    0x892d00000000	            mov dword [0x0400085e], ebp 	       482	history.c	FUNCTION_17
0x400085e	    0x892d00000000	            mov dword [0x04000864], ebp 	       482	history.c	FUNCTION_17
0x4000864	    0xc70500000000	               mov dword [0x0400086e], 1	       481	history.c	FUNCTION_17
0x400086e	        0x4883c408	                              add rsp, 8	       483	history.c	FUNCTION_17
0x4000872	              0x5b	                                 pop rbx	       483	history.c	FUNCTION_17
0x4000873	              0x5d	                                 pop rbp	       483	history.c	FUNCTION_17
0x4000874	            0x415c	                                 pop r12	       483	history.c	FUNCTION_17
0x4000876	            0x415d	                                 pop r13	       483	history.c	FUNCTION_17
0x4000878	              0xc3	                                     ret	       483	history.c	FUNCTION_17
where_history	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	2
0x4000150	    0x8b0500000000	            mov eax, dword [0x04000156] 	       146	history.c	FUNCTION_5
0x4000156	              0xc3	                                     ret	       146	history.c	FUNCTION_5
current_history	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	10
0x40001b0	    0x486305000000	         movsxd rax, dword [0x040001b7] 	       174	history.c	FUNCTION_8
0x40001b7	    0x3b0500000000	            cmp eax, dword [0x040001bd] 	       176	history.c	FUNCTION_8
0x40001bd	            0x7411	                            je 0x40001d0	       176	history.c	FUNCTION_8
0x40001bf	    0x488b15000000	            mov rdx, qword [0x040001c6] 	       174	history.c	FUNCTION_8
0x40001c6	          0x4885d2	                           test rdx, rdx	       174	history.c	FUNCTION_8
0x40001c9	            0x7405	                            je 0x40001d0	       174	history.c	FUNCTION_8
0x40001cb	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       176	history.c	FUNCTION_8
0x40001cf	              0xc3	                                     ret	       176	history.c	FUNCTION_8
0x40001d0	            0x31c0	                            xor eax, eax	       176	history.c	FUNCTION_8
0x40001d2	              0xc3	                                     ret	       177	history.c	FUNCTION_8
previous_history	IF,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	12
0x40001e0	    0x8b0500000000	            mov eax, dword [0x040001e6] 	       185	history.c	FUNCTION_9
0x40001e6	            0x85c0	                           test eax, eax	       185	history.c	FUNCTION_9
0x40001e8	            0x741e	                            je 0x4000208	       185	history.c	FUNCTION_9
0x40001ea	    0x488b15000000	            mov rdx, qword [0x040001f1] 	       185	history.c	FUNCTION_9
0x40001f1	          0x83e801	                              sub eax, 1	       185	history.c	FUNCTION_9
0x40001f4	    0x890500000000	            mov dword [0x040001fa], eax 	       185	history.c	FUNCTION_9
0x40001fa	            0x4898	                                    cdqe	       185	history.c	FUNCTION_9
0x40001fc	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       185	history.c	FUNCTION_9
0x4000200	              0xc3	                                     ret	       185	history.c	FUNCTION_9
0x4000201	     0xf1f80000000	                         nop dword [rax]	       185	history.c	FUNCTION_9
0x4000208	            0x31c0	                            xor eax, eax	       185	history.c	FUNCTION_9
0x400020a	              0xc3	                                     ret	       186	history.c	FUNCTION_9
history_set_history_state	IF,1:ELSE,0:FOR,0:CALL,0:SWITCH,0:DO,0:functions,0:WHILE,0	12
0x4000090	          0x488b07	                    mov rax, qword [rdi]	       110	history.c	FUNCTION_2
0x4000093	        0xf6471401	               test byte [rdi + 0x14], 1	       114	history.c	FUNCTION_2	IF_1
0x4000097	    0x488905000000	            mov qword [0x0400009e], rax 	       110	history.c	FUNCTION_2
0x400009e	          0x8b4708	                mov eax, dword [rdi + 8]	       111	history.c	FUNCTION_2
0x40000a1	    0x890500000000	            mov dword [0x040000a7], eax 	       111	history.c	FUNCTION_2
0x40000a7	          0x8b470c	              mov eax, dword [rdi + 0xc]	       112	history.c	FUNCTION_2
0x40000aa	    0x890500000000	            mov dword [0x040000b0], eax 	       112	history.c	FUNCTION_2
0x40000b0	          0x8b4710	            mov eax, dword [rdi + 0x10] 	       113	history.c	FUNCTION_2
0x40000b3	    0x890500000000	            mov dword [0x040000b9], eax 	       113	history.c	FUNCTION_2
0x40000b9	            0x740a	                            je 0x40000c5	       114	history.c	FUNCTION_2	IF_1
0x40000bb	    0xc70500000000	               mov dword [0x040000c5], 1	       115	history.c	FUNCTION_2	IF_1
0x40000c5	            0xf3c3	                                     ret	       115	history.c	FUNCTION_2	IF_1
