bfd_get_target_info	SWITCH,0:ELSE,1:functions,0:FOR,0:CALL,9:IF,12:WHILE,1:DO,0	103
0x4000260	            0x4155	                                push r13	      1556	targets.c	FUNCTION_5
0x4000262	            0x4154	                                push r12	      1556	targets.c	FUNCTION_5
0x4000264	          0x4989d5	                            mov r13, rdx	      1556	targets.c	FUNCTION_5
0x4000267	              0x55	                                push rbp	      1556	targets.c	FUNCTION_5
0x4000268	              0x53	                                push rbx	      1556	targets.c	FUNCTION_5
0x4000269	          0x4989cc	                            mov r12, rcx	      1556	targets.c	FUNCTION_5
0x400026c	          0x4c89c5	                             mov rbp, r8	      1556	targets.c	FUNCTION_5
0x400026f	        0x4883ec48	                           sub rsp, 0x48	      1556	targets.c	FUNCTION_5
0x4000273	    0x64488b042528	                mov rax, qword fs:[0x28]	      1556	targets.c	FUNCTION_5
0x400027c	      0x4889442438	             mov qword [rsp + 0x38], rax	      1556	targets.c	FUNCTION_5
0x4000281	            0x31c0	                            xor eax, eax	      1556	targets.c	FUNCTION_5
0x4000283	          0x4885d2	                           test rdx, rdx	      1559	targets.c	FUNCTION_5	IF_1
0x4000286	            0x7406	                            je 0x400028e	      1559	targets.c	FUNCTION_5	IF_1
0x4000288	    0xc70200000000	                      mov dword [rdx], 0	      1560	targets.c	FUNCTION_5	IF_1
0x400028e	          0x4d85e4	                           test r12, r12	      1561	targets.c	FUNCTION_5	IF_2
0x4000291	            0x7408	                            je 0x400029b	      1561	targets.c	FUNCTION_5	IF_2
0x4000293	    0x41c70424ffff	            mov dword [r12], 0xffffffff 	      1562	targets.c	FUNCTION_5	IF_2
0x400029b	          0x4885ed	                           test rbp, rbp	      1563	targets.c	FUNCTION_5	IF_3
0x400029e	            0x7408	                            je 0x40002a8	      1563	targets.c	FUNCTION_5	IF_3
0x40002a0	    0x48c745000000	                      mov qword [rbp], 0	      1564	targets.c	FUNCTION_5	IF_3
0x40002a8	      0xe800000000	                          call 0x40002ad	      1565	targets.c	FUNCTION_5	CALL_1
0x40002ad	          0x4885c0	                           test rax, rax	      1566	targets.c	FUNCTION_5	IF_4
0x40002b0	          0x4889c3	                            mov rbx, rax	      1565	targets.c	FUNCTION_5	CALL_1
0x40002b3	     0xf8407010000	                            je 0x40003c0	      1566	targets.c	FUNCTION_5	IF_4
0x40002b9	          0x4d85ed	                           test r13, r13	      1568	targets.c	FUNCTION_5	IF_5
0x40002bc	            0x740e	                            je 0x40002cc	      1568	targets.c	FUNCTION_5	IF_5
0x40002be	          0x8b530c	              mov edx, dword [rbx + 0xc]	      1569	targets.c	FUNCTION_5	IF_5
0x40002c1	            0x31c0	                            xor eax, eax	      1569	targets.c	FUNCTION_5	IF_5
0x40002c3	            0x85d2	                           test edx, edx	      1569	targets.c	FUNCTION_5	IF_5
0x40002c5	           0xf94c0	                                 sete al	      1569	targets.c	FUNCTION_5	IF_5
0x40002c8	        0x41894500	                    mov dword [r13], eax	      1569	targets.c	FUNCTION_5	IF_5
0x40002cc	          0x4d85e4	                           test r12, r12	      1571	targets.c	FUNCTION_5	IF_6
0x40002cf	            0x7408	                            je 0x40002d9	      1571	targets.c	FUNCTION_5	IF_6
0x40002d1	         0xfb6431c	           movzx eax, byte [rbx + 0x1c] 	      1572	targets.c	FUNCTION_5	IF_6
0x40002d5	        0x41890424	                    mov dword [r12], eax	      1572	targets.c	FUNCTION_5	IF_6
0x40002d9	          0x4885ed	                           test rbp, rbp	      1574	targets.c	FUNCTION_5	IF_7
0x40002dc	          0x4889d8	                            mov rax, rbx	      1574	targets.c	FUNCTION_5	IF_7
0x40002df	            0x744c	                            je 0x400032d	      1574	targets.c	FUNCTION_5	IF_7
0x40002e1	          0x4c8b2b	                    mov r13, qword [rbx]	      1576	targets.c	FUNCTION_5	IF_7
0x40002e4	      0xe800000000	                          call 0x40002e9	      1577	targets.c	FUNCTION_5	IF_7	CALL_2
0x40002e9	          0x4885c0	                           test rax, rax	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002ec	          0x4989c4	                            mov r12, rax	      1577	targets.c	FUNCTION_5	IF_7	CALL_2
0x40002ef	            0x745f	                            je 0x4000350	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002f1	          0x4d85ed	                           test r13, r13	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002f4	            0x745a	                            je 0x4000350	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002f6	      0xbe2d000000	                           mov esi, 0x2d	      1581	targets.c	FUNCTION_5	IF_7	IF_8	CALL_3
0x40002fb	          0x4c89ef	                            mov rdi, r13	      1581	targets.c	FUNCTION_5	IF_7	IF_8	CALL_3
0x40002fe	      0xe800000000	                          call 0x4000303	      1581	targets.c	FUNCTION_5	IF_7	IF_8	CALL_3
0x4000303	          0x4885c0	                           test rax, rax	      1583	targets.c	FUNCTION_5	IF_7	IF_8	IF_9
0x4000306	     0xf849c000000	                            je 0x40003a8	      1583	targets.c	FUNCTION_5	IF_7	IF_8	IF_9
0x400030c	        0x4c8d6801	                      lea r13, [rax + 1]	      1585	targets.c	FUNCTION_5	IF_7	IF_8	IF_9
0x4000310	          0x4889ea	                            mov rdx, rbp	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x4000313	          0x4c89e6	                            mov rsi, r12	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x4000316	          0x4c89ef	                            mov rdi, r13	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x4000319	      0xe822fdffff	           call sym._bfd_find_arch_match	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x400031e	            0x85c0	                           test eax, eax	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x4000320	            0x743e	                            je 0x4000360	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x4000322	          0x4c89e7	                            mov rdi, r12	      1608	targets.c	FUNCTION_5	IF_7	CALL_9
0x4000325	      0xe800000000	                          call 0x400032a	      1608	targets.c	FUNCTION_5	IF_7	CALL_9
0x400032a	          0x4889d8	                            mov rax, rbx	      1608	targets.c	FUNCTION_5	IF_7	CALL_9
0x400032d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1611	targets.c	FUNCTION_5
0x4000332	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1611	targets.c	FUNCTION_5
0x400033b	     0xf8586000000	                           jne 0x40003c7	      1611	targets.c	FUNCTION_5
0x4000341	        0x4883c448	                           add rsp, 0x48	      1611	targets.c	FUNCTION_5
0x4000345	              0x5b	                                 pop rbx	      1611	targets.c	FUNCTION_5
0x4000346	              0x5d	                                 pop rbp	      1611	targets.c	FUNCTION_5
0x4000347	            0x415c	                                 pop r12	      1611	targets.c	FUNCTION_5
0x4000349	            0x415d	                                 pop r13	      1611	targets.c	FUNCTION_5
0x400034b	              0xc3	                                     ret	      1611	targets.c	FUNCTION_5
0x400034c	         0xf1f4000	                         nop dword [rax]	      1611	targets.c	FUNCTION_5
0x4000350	          0x4d85e4	                           test r12, r12	      1607	targets.c	FUNCTION_5	IF_7	IF_12
0x4000353	            0x75cd	                           jne 0x4000322	      1607	targets.c	FUNCTION_5	IF_7	IF_12
0x4000355	            0xebd3	                           jmp 0x400032a	      1607	targets.c	FUNCTION_5	IF_7	IF_12
0x4000357	    0x660f1f840000	                    nop word [rax + rax]	      1607	targets.c	FUNCTION_5	IF_7	IF_12
0x4000360	      0xba32000000	                           mov edx, 0x32	       110	string3.h	FUNCTION_15	CALL_3
0x4000365	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_15	CALL_3
0x4000368	          0x4889e7	                            mov rdi, rsp	       110	string3.h	FUNCTION_15	CALL_3
0x400036b	      0xe800000000	                          call 0x4000370	       110	string3.h	FUNCTION_15	CALL_3
0x4000370	            0xeb1b	                           jmp 0x400038d	       110	string3.h	FUNCTION_15	CALL_3
0x4000372	    0x660f1f440000	                    nop word [rax + rax]	       110	string3.h	FUNCTION_15	CALL_3
0x4000378	          0xc60000	                       mov byte [rax], 0	      1596	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1
0x400037b	          0x4889ea	                            mov rdx, rbp	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x400037e	          0x4c89e6	                            mov rsi, r12	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x4000381	          0x4889e7	                            mov rdi, rsp	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x4000384	      0xe8b7fcffff	           call sym._bfd_find_arch_match	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x4000389	            0x85c0	                           test eax, eax	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x400038b	            0x7595	                           jne 0x4000322	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x400038d	      0xbe2d000000	                           mov esi, 0x2d	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x4000392	          0x4889e7	                            mov rdi, rsp	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x4000395	      0xe800000000	                          call 0x400039a	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x400039a	          0x4885c0	                           test rax, rax	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x400039d	            0x75d9	                           jne 0x4000378	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x400039f	            0xeb81	                           jmp 0x4000322	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x40003a1	     0xf1f80000000	                         nop dword [rax]	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x40003a8	          0x4889ea	                            mov rdx, rbp	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x40003ab	          0x4c89e6	                            mov rsi, r12	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x40003ae	          0x4c89ef	                            mov rdi, r13	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x40003b1	      0xe88afcffff	           call sym._bfd_find_arch_match	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x40003b6	      0xe967ffffff	                           jmp 0x4000322	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x40003bb	       0xf1f440000	                   nop dword [rax + rax]	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x40003c0	            0x31c0	                            xor eax, eax	      1567	targets.c	FUNCTION_5	IF_4
0x40003c2	      0xe966ffffff	                           jmp 0x400032d	      1567	targets.c	FUNCTION_5	IF_4
0x40003c7	      0xe800000000	                          call 0x40003cc	      1611	targets.c	FUNCTION_5
_bfd_find_arch_match	SWITCH,0:ELSE,0:functions,0:FOR,0:CALL,2:IF,2:WHILE,1:DO,0	50
0x4000040	          0x4885f6	                           test rsi, rsi	      1504	targets.c	FUNCTION_4	IF_1
0x4000043	            0x7476	                            je 0x40000bb	      1504	targets.c	FUNCTION_4	IF_1
0x4000045	            0x4156	                                push r14	      1503	targets.c	FUNCTION_4
0x4000047	            0x4155	                                push r13	      1503	targets.c	FUNCTION_4
0x4000049	          0x4989d6	                            mov r14, rdx	      1503	targets.c	FUNCTION_4
0x400004c	            0x4154	                                push r12	      1503	targets.c	FUNCTION_4
0x400004e	              0x55	                                push rbp	      1503	targets.c	FUNCTION_4
0x400004f	          0x4989fd	                            mov r13, rdi	      1503	targets.c	FUNCTION_4
0x4000052	              0x53	                                push rbx	      1503	targets.c	FUNCTION_4
0x4000053	          0x488b1e	                    mov rbx, qword [rsi]	      1507	targets.c	FUNCTION_4	WHILE_1
0x4000056	          0x4989f4	                            mov r12, rsi	      1507	targets.c	FUNCTION_4	WHILE_1
0x4000059	          0x4885db	                           test rbx, rbx	      1507	targets.c	FUNCTION_4	WHILE_1
0x400005c	            0x750f	                           jne 0x400006d	      1507	targets.c	FUNCTION_4	WHILE_1
0x400005e	            0xeb50	                           jmp 0x40000b0	      1507	targets.c	FUNCTION_4	WHILE_1
0x4000060	        0x4983c408	                              add r12, 8	      1518	targets.c	FUNCTION_4	WHILE_1
0x4000064	        0x498b1c24	                    mov rbx, qword [r12]	      1507	targets.c	FUNCTION_4	WHILE_1
0x4000068	          0x4885db	                           test rbx, rbx	      1507	targets.c	FUNCTION_4	WHILE_1
0x400006b	            0x7443	                            je 0x40000b0	      1507	targets.c	FUNCTION_4	WHILE_1
0x400006d	          0x4c89ee	                            mov rsi, r13	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x4000070	          0x4889df	                            mov rdi, rbx	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x4000073	      0xe800000000	                          call 0x4000078	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x4000078	          0x4885c0	                           test rax, rax	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x400007b	          0x4889c5	                            mov rbp, rax	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x400007e	            0x74e0	                            je 0x4000060	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000080	          0x4c89ef	                            mov rdi, r13	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000083	      0xe800000000	                          call 0x4000088	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000088	          0x4839eb	                            cmp rbx, rbp	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400008b	            0x7406	                            je 0x4000093	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400008d	        0x807dff3a	                cmp byte [rbp - 1], 0x3a	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000091	            0x75cd	                           jne 0x4000060	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000093	      0x807c050000	                 cmp byte [rbp + rax], 0	      1513	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000098	            0x75c6	                           jne 0x4000060	      1513	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400009a	          0x49891e	                    mov qword [r14], rbx	      1515	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400009d	      0xb801000000	                              mov eax, 1	      1516	targets.c	FUNCTION_4	WHILE_1	IF_2
0x40000a2	              0x5b	                                 pop rbx	      1521	targets.c	FUNCTION_4
0x40000a3	              0x5d	                                 pop rbp	      1521	targets.c	FUNCTION_4
0x40000a4	            0x415c	                                 pop r12	      1521	targets.c	FUNCTION_4
0x40000a6	            0x415d	                                 pop r13	      1521	targets.c	FUNCTION_4
0x40000a8	            0x415e	                                 pop r14	      1521	targets.c	FUNCTION_4
0x40000aa	              0xc3	                                     ret	      1521	targets.c	FUNCTION_4
0x40000ab	       0xf1f440000	                   nop dword [rax + rax]	      1521	targets.c	FUNCTION_4
0x40000b0	              0x5b	                                 pop rbx	      1521	targets.c	FUNCTION_4
0x40000b1	            0x31c0	                            xor eax, eax	      1505	targets.c	FUNCTION_4	IF_1
0x40000b3	              0x5d	                                 pop rbp	      1521	targets.c	FUNCTION_4
0x40000b4	            0x415c	                                 pop r12	      1521	targets.c	FUNCTION_4
0x40000b6	            0x415d	                                 pop r13	      1521	targets.c	FUNCTION_4
0x40000b8	            0x415e	                                 pop r14	      1521	targets.c	FUNCTION_4
0x40000ba	              0xc3	                                     ret	      1521	targets.c	FUNCTION_4
0x40000bb	            0x31c0	                            xor eax, eax	      1505	targets.c	FUNCTION_4	IF_1
0x40000bd	              0xc3	                                     ret	      1521	targets.c	FUNCTION_4
bfd_flavour_name	SWITCH,1:ELSE,0:functions,0:FOR,0:CALL,1:IF,0:WHILE,0:DO,0	73
0x40004c0	          0x83ff14	                           cmp edi, 0x14	      1696	targets.c	FUNCTION_8	SWITCH_1
0x40004c3	     0xf8757010000	                            ja 0x4000620	      1696	targets.c	FUNCTION_8	SWITCH_1
0x40004c9	            0x89ff	                            mov edi, edi	      1696	targets.c	FUNCTION_8	SWITCH_1
0x40004cb	    0xff24fd000000	                       jmp qword [rdi*8]	      1696	targets.c	FUNCTION_8	SWITCH_1
0x40004d2	    0x660f1f440000	                    nop word [rax + rax]	      1696	targets.c	FUNCTION_8	SWITCH_1
0x40004d8	      0xb800000000	                              mov eax, 0	      1700	targets.c	FUNCTION_8	SWITCH_1
0x40004dd	              0xc3	                                     ret	      1724	targets.c	FUNCTION_8
0x40004de	            0x6690	                                     nop	      1724	targets.c	FUNCTION_8
0x40004e0	      0xb800000000	                              mov eax, 0	      1699	targets.c	FUNCTION_8	SWITCH_1
0x40004e5	              0xc3	                                     ret	      1699	targets.c	FUNCTION_8	SWITCH_1
0x40004e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1699	targets.c	FUNCTION_8	SWITCH_1
0x40004f0	      0xb800000000	                              mov eax, 0	      1698	targets.c	FUNCTION_8	SWITCH_1
0x40004f5	              0xc3	                                     ret	      1698	targets.c	FUNCTION_8	SWITCH_1
0x40004f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1698	targets.c	FUNCTION_8	SWITCH_1
0x4000500	      0xb800000000	                              mov eax, 0	      1718	targets.c	FUNCTION_8	SWITCH_1
0x4000505	              0xc3	                                     ret	      1718	targets.c	FUNCTION_8	SWITCH_1
0x4000506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1718	targets.c	FUNCTION_8	SWITCH_1
0x4000510	      0xb800000000	                              mov eax, 0	      1717	targets.c	FUNCTION_8	SWITCH_1
0x4000515	              0xc3	                                     ret	      1717	targets.c	FUNCTION_8	SWITCH_1
0x4000516	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1717	targets.c	FUNCTION_8	SWITCH_1
0x4000520	      0xb800000000	                              mov eax, 0	      1716	targets.c	FUNCTION_8	SWITCH_1
0x4000525	              0xc3	                                     ret	      1716	targets.c	FUNCTION_8	SWITCH_1
0x4000526	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1716	targets.c	FUNCTION_8	SWITCH_1
0x4000530	      0xb800000000	                              mov eax, 0	      1715	targets.c	FUNCTION_8	SWITCH_1
0x4000535	              0xc3	                                     ret	      1715	targets.c	FUNCTION_8	SWITCH_1
0x4000536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1715	targets.c	FUNCTION_8	SWITCH_1
0x4000540	      0xb800000000	                              mov eax, 0	      1714	targets.c	FUNCTION_8	SWITCH_1
0x4000545	              0xc3	                                     ret	      1714	targets.c	FUNCTION_8	SWITCH_1
0x4000546	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1714	targets.c	FUNCTION_8	SWITCH_1
0x4000550	      0xb800000000	                              mov eax, 0	      1713	targets.c	FUNCTION_8	SWITCH_1
0x4000555	              0xc3	                                     ret	      1713	targets.c	FUNCTION_8	SWITCH_1
0x4000556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1713	targets.c	FUNCTION_8	SWITCH_1
0x4000560	      0xb800000000	                              mov eax, 0	      1712	targets.c	FUNCTION_8	SWITCH_1
0x4000565	              0xc3	                                     ret	      1712	targets.c	FUNCTION_8	SWITCH_1
0x4000566	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1712	targets.c	FUNCTION_8	SWITCH_1
0x4000570	      0xb800000000	                              mov eax, 0	      1711	targets.c	FUNCTION_8	SWITCH_1
0x4000575	              0xc3	                                     ret	      1711	targets.c	FUNCTION_8	SWITCH_1
0x4000576	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1711	targets.c	FUNCTION_8	SWITCH_1
0x4000580	      0xb800000000	                              mov eax, 0	      1710	targets.c	FUNCTION_8	SWITCH_1
0x4000585	              0xc3	                                     ret	      1710	targets.c	FUNCTION_8	SWITCH_1
0x4000586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1710	targets.c	FUNCTION_8	SWITCH_1
0x4000590	      0xb800000000	                              mov eax, 0	      1709	targets.c	FUNCTION_8	SWITCH_1
0x4000595	              0xc3	                                     ret	      1709	targets.c	FUNCTION_8	SWITCH_1
0x4000596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1709	targets.c	FUNCTION_8	SWITCH_1
0x40005a0	      0xb800000000	                              mov eax, 0	      1708	targets.c	FUNCTION_8	SWITCH_1
0x40005a5	              0xc3	                                     ret	      1708	targets.c	FUNCTION_8	SWITCH_1
0x40005a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1708	targets.c	FUNCTION_8	SWITCH_1
0x40005b0	      0xb800000000	                              mov eax, 0	      1707	targets.c	FUNCTION_8	SWITCH_1
0x40005b5	              0xc3	                                     ret	      1707	targets.c	FUNCTION_8	SWITCH_1
0x40005b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1707	targets.c	FUNCTION_8	SWITCH_1
0x40005c0	      0xb800000000	                              mov eax, 0	      1706	targets.c	FUNCTION_8	SWITCH_1
0x40005c5	              0xc3	                                     ret	      1706	targets.c	FUNCTION_8	SWITCH_1
0x40005c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1706	targets.c	FUNCTION_8	SWITCH_1
0x40005d0	      0xb800000000	                              mov eax, 0	      1705	targets.c	FUNCTION_8	SWITCH_1
0x40005d5	              0xc3	                                     ret	      1705	targets.c	FUNCTION_8	SWITCH_1
0x40005d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1705	targets.c	FUNCTION_8	SWITCH_1
0x40005e0	      0xb800000000	                              mov eax, 0	      1704	targets.c	FUNCTION_8	SWITCH_1
0x40005e5	              0xc3	                                     ret	      1704	targets.c	FUNCTION_8	SWITCH_1
0x40005e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1704	targets.c	FUNCTION_8	SWITCH_1
0x40005f0	      0xb800000000	                              mov eax, 0	      1703	targets.c	FUNCTION_8	SWITCH_1
0x40005f5	              0xc3	                                     ret	      1703	targets.c	FUNCTION_8	SWITCH_1
0x40005f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1703	targets.c	FUNCTION_8	SWITCH_1
0x4000600	      0xb800000000	                              mov eax, 0	      1702	targets.c	FUNCTION_8	SWITCH_1
0x4000605	              0xc3	                                     ret	      1702	targets.c	FUNCTION_8	SWITCH_1
0x4000606	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1702	targets.c	FUNCTION_8	SWITCH_1
0x4000610	      0xb800000000	                              mov eax, 0	      1701	targets.c	FUNCTION_8	SWITCH_1
0x4000615	              0xc3	                                     ret	      1701	targets.c	FUNCTION_8	SWITCH_1
0x4000616	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1701	targets.c	FUNCTION_8	SWITCH_1
0x4000620	        0x4883ec08	                              sub rsp, 8	      1695	targets.c	FUNCTION_8
0x4000624	      0xba00000000	                              mov edx, 0	      1723	targets.c	FUNCTION_8	CALL_1
0x4000629	      0xbebb060000	                          mov esi, 0x6bb	      1723	targets.c	FUNCTION_8	CALL_1
0x400062e	      0xbf00000000	                              mov edi, 0	      1723	targets.c	FUNCTION_8	CALL_1
0x4000633	      0xe800000000	                  call section_end..text	      1723	targets.c	FUNCTION_8	CALL_1
bfd_iterate_over_targets	SWITCH,0:ELSE,0:functions,0:FOR,1:CALL,1:IF,1:WHILE,0:DO,0	30
0x4000470	            0x4154	                                push r12	      1672	targets.c	FUNCTION_7
0x4000472	              0x55	                                push rbp	      1672	targets.c	FUNCTION_7
0x4000473	          0x4989fc	                            mov r12, rdi	      1672	targets.c	FUNCTION_7
0x4000476	              0x53	                                push rbx	      1672	targets.c	FUNCTION_7
0x4000477	    0x488b1d000000	            mov rbx, qword [0x0400047e] 	      1675	targets.c	FUNCTION_7	FOR_1
0x400047e	          0x4889f5	                            mov rbp, rsi	      1675	targets.c	FUNCTION_7	FOR_1
0x4000481	          0x488b3b	                    mov rdi, qword [rbx]	      1675	targets.c	FUNCTION_7	FOR_1
0x4000484	          0x4885ff	                           test rdi, rdi	      1675	targets.c	FUNCTION_7	FOR_1
0x4000487	            0x7513	                           jne 0x400049c	      1675	targets.c	FUNCTION_7	FOR_1
0x4000489	            0xeb25	                           jmp 0x40004b0	      1675	targets.c	FUNCTION_7	FOR_1
0x400048b	       0xf1f440000	                   nop dword [rax + rax]	      1675	targets.c	FUNCTION_7	FOR_1
0x4000490	        0x4883c308	                              add rbx, 8	      1675	targets.c	FUNCTION_7	FOR_1
0x4000494	          0x488b3b	                    mov rdi, qword [rbx]	      1675	targets.c	FUNCTION_7	FOR_1
0x4000497	          0x4885ff	                           test rdi, rdi	      1675	targets.c	FUNCTION_7	FOR_1
0x400049a	            0x7414	                            je 0x40004b0	      1675	targets.c	FUNCTION_7	FOR_1
0x400049c	          0x4889ee	                            mov rsi, rbp	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x400049f	          0x41ffd4	                                call r12	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40004a2	            0x85c0	                           test eax, eax	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40004a4	            0x74ea	                            je 0x4000490	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40004a6	          0x488b03	                    mov rax, qword [rbx]	      1677	targets.c	FUNCTION_7	FOR_1	IF_1
0x40004a9	              0x5b	                                 pop rbx	      1680	targets.c	FUNCTION_7
0x40004aa	              0x5d	                                 pop rbp	      1680	targets.c	FUNCTION_7
0x40004ab	            0x415c	                                 pop r12	      1680	targets.c	FUNCTION_7
0x40004ad	              0xc3	                                     ret	      1680	targets.c	FUNCTION_7
0x40004ae	            0x6690	                                     nop	      1680	targets.c	FUNCTION_7
0x40004b0	              0x5b	                                 pop rbx	      1680	targets.c	FUNCTION_7
0x40004b1	            0x31c0	                            xor eax, eax	      1679	targets.c	FUNCTION_7
0x40004b3	              0x5d	                                 pop rbp	      1680	targets.c	FUNCTION_7
0x40004b4	            0x415c	                                 pop r12	      1680	targets.c	FUNCTION_7
0x40004b6	              0xc3	                                     ret	      1680	targets.c	FUNCTION_7
bfd_target_list	SWITCH,0:ELSE,0:functions,0:FOR,2:CALL,1:IF,2:WHILE,0:DO,0	45
0x40003d0	        0x4883ec08	                              sub rsp, 8	      1629	targets.c	FUNCTION_6
0x40003d4	    0x488b05000000	            mov rax, qword [0x040003db] 	      1635	targets.c	FUNCTION_6	FOR_1
0x40003db	        0x48833800	                      cmp qword [rax], 0	      1635	targets.c	FUNCTION_6	FOR_1
0x40003df	            0x747b	                            je 0x400045c	      1635	targets.c	FUNCTION_6	FOR_1
0x40003e1	            0x31d2	                            xor edx, edx	      1635	targets.c	FUNCTION_6	FOR_1
0x40003e3	            0xeb05	                           jmp 0x40003ea	      1635	targets.c	FUNCTION_6	FOR_1
0x40003e5	           0xf1f00	                         nop dword [rax]	      1635	targets.c	FUNCTION_6	FOR_1
0x40003e8	            0x89ca	                            mov edx, ecx	      1636	targets.c	FUNCTION_6	FOR_1
0x40003ea	        0x4883c008	                              add rax, 8	      1635	targets.c	FUNCTION_6	FOR_1
0x40003ee	          0x8d4a01	                      lea ecx, [rdx + 1]	      1636	targets.c	FUNCTION_6	FOR_1
0x40003f1	        0x48833800	                      cmp qword [rax], 0	      1635	targets.c	FUNCTION_6	FOR_1
0x40003f5	            0x75f1	                           jne 0x40003e8	      1635	targets.c	FUNCTION_6	FOR_1
0x40003f7	          0x8d7a02	                      lea edi, [rdx + 2]	      1635	targets.c	FUNCTION_6	FOR_1
0x40003fa	          0x4863ff	                         movsxd rdi, edi	      1635	targets.c	FUNCTION_6	FOR_1
0x40003fd	        0x48c1e703	                              shl rdi, 3	      1635	targets.c	FUNCTION_6	FOR_1
0x4000401	      0xe800000000	                          call 0x4000406	      1639	targets.c	FUNCTION_6	CALL_1
0x4000406	          0x4885c0	                           test rax, rax	      1641	targets.c	FUNCTION_6	IF_1
0x4000409	            0x7458	                            je 0x4000463	      1641	targets.c	FUNCTION_6	IF_1
0x400040b	    0x488b15000000	            mov rdx, qword [0x04000412] 	      1644	targets.c	FUNCTION_6	FOR_2
0x4000412	          0x4889c7	                            mov rdi, rax	      1644	targets.c	FUNCTION_6	FOR_2
0x4000415	          0x488b0a	                    mov rcx, qword [rdx]	      1644	targets.c	FUNCTION_6	FOR_2
0x4000418	          0x4885c9	                           test rcx, rcx	      1644	targets.c	FUNCTION_6	FOR_2
0x400041b	            0x7433	                            je 0x4000450	      1644	targets.c	FUNCTION_6	FOR_2
0x400041d	          0x4889d6	                            mov rsi, rdx	      1644	targets.c	FUNCTION_6	FOR_2
0x4000420	            0xeb0d	                           jmp 0x400042f	      1644	targets.c	FUNCTION_6	FOR_2
0x4000422	    0x660f1f440000	                    nop word [rax + rax]	      1644	targets.c	FUNCTION_6	FOR_2
0x4000428	    0x488b35000000	            mov rsi, qword [0x0400042f] 	      1644	targets.c	FUNCTION_6	FOR_2
0x400042f	          0x4839f2	                            cmp rdx, rsi	      1645	targets.c	FUNCTION_6	FOR_2	IF_2
0x4000432	            0x7405	                            je 0x4000439	      1645	targets.c	FUNCTION_6	FOR_2	IF_2
0x4000434	          0x48390e	                    cmp qword [rsi], rcx	      1646	targets.c	FUNCTION_6	FOR_2	IF_2
0x4000437	            0x740b	                            je 0x4000444	      1646	targets.c	FUNCTION_6	FOR_2	IF_2
0x4000439	          0x488b09	                    mov rcx, qword [rcx]	      1647	targets.c	FUNCTION_6	FOR_2	IF_2
0x400043c	        0x4883c708	                              add rdi, 8	      1647	targets.c	FUNCTION_6	FOR_2	IF_2
0x4000440	        0x48894ff8	                mov qword [rdi - 8], rcx	      1647	targets.c	FUNCTION_6	FOR_2	IF_2
0x4000444	        0x4883c208	                              add rdx, 8	      1644	targets.c	FUNCTION_6	FOR_2
0x4000448	          0x488b0a	                    mov rcx, qword [rdx]	      1644	targets.c	FUNCTION_6	FOR_2
0x400044b	          0x4885c9	                           test rcx, rcx	      1644	targets.c	FUNCTION_6	FOR_2
0x400044e	            0x75d8	                           jne 0x4000428	      1644	targets.c	FUNCTION_6	FOR_2
0x4000450	    0x48c707000000	                      mov qword [rdi], 0	      1649	targets.c	FUNCTION_6
0x4000457	        0x4883c408	                              add rsp, 8	      1651	targets.c	FUNCTION_6
0x400045b	              0xc3	                                     ret	      1651	targets.c	FUNCTION_6
0x400045c	      0xbf08000000	                              mov edi, 8	      1635	targets.c	FUNCTION_6	FOR_1
0x4000461	            0xeb9e	                           jmp 0x4000401	      1635	targets.c	FUNCTION_6	FOR_1
0x4000463	            0x31c0	                            xor eax, eax	      1642	targets.c	FUNCTION_6	IF_1
0x4000465	            0xebf0	                           jmp 0x4000457	      1642	targets.c	FUNCTION_6	IF_1
bfd_set_default_target	SWITCH,0:ELSE,0:functions,0:FOR,0:CALL,2:IF,2:WHILE,0:DO,0	22
0x4000170	    0x488b05000000	            mov rax, qword [0x04000177] 	      1427	targets.c	FUNCTION_2	IF_1
0x4000177	              0x53	                                push rbx	      1424	targets.c	FUNCTION_2
0x4000178	          0x4889fb	                            mov rbx, rdi	      1424	targets.c	FUNCTION_2
0x400017b	          0x4885c0	                           test rax, rax	      1427	targets.c	FUNCTION_2	IF_1
0x400017e	            0x7411	                            je 0x4000191	      1427	targets.c	FUNCTION_2	IF_1
0x4000180	          0x488b30	                    mov rsi, qword [rax]	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x4000183	      0xe800000000	                          call 0x4000188	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x4000188	            0x85c0	                           test eax, eax	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x400018a	      0xba01000000	                              mov edx, 1	      1429	targets.c	FUNCTION_2	IF_1
0x400018f	            0x7419	                            je 0x40001aa	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x4000191	          0x4889df	                            mov rdi, rbx	      1431	targets.c	FUNCTION_2	CALL_2
0x4000194	      0xe827ffffff	                    call sym.find_target	      1431	targets.c	FUNCTION_2	CALL_2
0x4000199	          0x4885c0	                           test rax, rax	      1432	targets.c	FUNCTION_2	IF_2
0x400019c	            0x7412	                            je 0x40001b0	      1432	targets.c	FUNCTION_2	IF_2
0x400019e	    0x488905000000	            mov qword [0x040001a5], rax 	      1435	targets.c	FUNCTION_2
0x40001a5	      0xba01000000	                              mov edx, 1	      1436	targets.c	FUNCTION_2
0x40001aa	            0x89d0	                            mov eax, edx	      1437	targets.c	FUNCTION_2
0x40001ac	              0x5b	                                 pop rbx	      1437	targets.c	FUNCTION_2
0x40001ad	              0xc3	                                     ret	      1437	targets.c	FUNCTION_2
0x40001ae	            0x6690	                                     nop	      1437	targets.c	FUNCTION_2
0x40001b0	            0x31d2	                            xor edx, edx	      1433	targets.c	FUNCTION_2	IF_2
0x40001b2	            0xebf6	                           jmp 0x40001aa	      1433	targets.c	FUNCTION_2	IF_2
