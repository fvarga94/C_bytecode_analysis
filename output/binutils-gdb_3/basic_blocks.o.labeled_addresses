bb_write_blocks	IF,2:CALL,8:DO,0:functions,0:SWITCH,0:ELSE,0:FOR,4:WHILE,0	69
0x4000840	    0x488b15000000	            mov rdx, qword [0x04000847] 	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000847	    0x488b0d000000	            mov rcx, qword [0x0400084e] 	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400084e	            0x4156	                                push r14	       209	basic_blocks.c	FUNCTION_5
0x4000850	            0x4155	                                push r13	       209	basic_blocks.c	FUNCTION_5
0x4000852	          0x4989f6	                            mov r14, rsi	       209	basic_blocks.c	FUNCTION_5
0x4000855	            0x4154	                                push r12	       209	basic_blocks.c	FUNCTION_5
0x4000857	              0x55	                                push rbp	       209	basic_blocks.c	FUNCTION_5
0x4000858	          0x4889fd	                            mov rbp, rdi	       209	basic_blocks.c	FUNCTION_5
0x400085b	              0x53	                                push rbx	       209	basic_blocks.c	FUNCTION_5
0x400085c	            0x31db	                            xor ebx, ebx	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400085e	          0x4839d1	                            cmp rcx, rdx	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000861	            0x762d	                           jbe 0x4000890	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000863	       0xf1f440000	                   nop dword [rax + rax]	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000868	            0x31c0	                            xor eax, eax	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400086a	    0x660f1f440000	                    nop word [rax + rax]	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000870	    0x48837cc23800	       cmp qword [rdx + rax*8 + 0x38], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000876	            0x740a	                            je 0x4000882	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000878	        0x4883c001	                              add rax, 1	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400087c	        0x4883f80a	                            cmp rax, 0xa	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000880	            0x75ee	                           jne 0x4000870	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000882	    0x4881c2580100	                          add rdx, 0x158	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000889	             0x1c3	                            add ebx, eax	       219	basic_blocks.c	FUNCTION_5	FOR_1
0x400088b	          0x4839d1	                            cmp rcx, rdx	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400088e	            0x77d8	                            ja 0x4000868	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000890	      0xbe02000000	                              mov esi, 2	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x4000895	          0x4889ef	                            mov rdi, rbp	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x4000898	      0xe800000000	                          call 0x400089d	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x400089d	            0x85c0	                           test eax, eax	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x400089f	            0x7575	                           jne 0x4000916	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x40008a1	            0x89de	                            mov esi, ebx	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40008a3	          0x4889ef	                            mov rdi, rbp	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40008a6	      0xe800000000	                          call 0x40008ab	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40008ab	            0x85c0	                           test eax, eax	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40008ad	            0x7567	                           jne 0x4000916	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40008af	    0x4c8b2d000000	            mov r13, qword [0x040008b6] 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40008b6	    0x4c3b2d000000	            cmp r13, qword [0x040008bd] 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40008bd	            0x734e	                           jae 0x400090d	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40008bf	              0x90	                                     nop	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40008c0	        0x498d5d38	                   lea rbx, [r13 + 0x38]	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40008c4	    0x4d8da5880000	                   lea r12, [r13 + 0x88]	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40008cb	       0xf1f440000	                   nop dword [rax + rax]	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40008d0	          0x488b33	                    mov rsi, qword [rbx]	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x40008d3	          0x4885f6	                           test rsi, rsi	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x40008d6	            0x7425	                            je 0x40008fd	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x40008d8	          0x4889ef	                            mov rdi, rbp	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40008db	      0xe800000000	                          call 0x40008e0	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40008e0	            0x85c0	                           test eax, eax	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40008e2	            0x7532	                           jne 0x4000916	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40008e4	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40008e8	          0x4889ef	                            mov rdi, rbp	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40008eb	      0xe800000000	                          call 0x40008f0	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40008f0	            0x85c0	                           test eax, eax	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40008f2	            0x7522	                           jne 0x4000916	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40008f4	        0x4883c308	                              add rbx, 8	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40008f8	          0x4c39e3	                            cmp rbx, r12	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x40008fb	            0x75d3	                           jne 0x40008d0	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x40008fd	    0x4981c5580100	                          add r13, 0x158	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000904	    0x4c392d000000	            cmp qword [0x0400090b], r13 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x400090b	            0x77b3	                            ja 0x40008c0	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x400090d	              0x5b	                                 pop rbx	       243	basic_blocks.c	FUNCTION_5
0x400090e	              0x5d	                                 pop rbp	       243	basic_blocks.c	FUNCTION_5
0x400090f	            0x415c	                                 pop r12	       243	basic_blocks.c	FUNCTION_5
0x4000911	            0x415d	                                 pop r13	       243	basic_blocks.c	FUNCTION_5
0x4000913	            0x415e	                                 pop r14	       243	basic_blocks.c	FUNCTION_5
0x4000915	              0xc3	                                     ret	       243	basic_blocks.c	FUNCTION_5
0x4000916	          0x4c89f7	                            mov rdi, r14	       226	basic_blocks.c	FUNCTION_5	IF_1	CALL_3
0x4000919	      0xe800000000	                          call 0x400091e	       226	basic_blocks.c	FUNCTION_5	IF_1	CALL_3
0x400091e	      0xbf01000000	                              mov edi, 1	       227	basic_blocks.c	FUNCTION_5	IF_1	CALL_4
0x4000923	      0xe800000000	                          call 0x4000928	       227	basic_blocks.c	FUNCTION_5	IF_1	CALL_4
annotate_with_count	IF,11:CALL,8:DO,0:functions,0:SWITCH,0:ELSE,3:FOR,4:WHILE,0	268
0x4000100	            0x4157	                                push r15	       321	basic_blocks.c	FUNCTION_7
0x4000102	            0x4156	                                push r14	       321	basic_blocks.c	FUNCTION_7
0x4000104	            0x4155	                                push r13	       321	basic_blocks.c	FUNCTION_7
0x4000106	            0x4154	                                push r12	       321	basic_blocks.c	FUNCTION_7
0x4000108	          0x4189f5	                           mov r13d, esi	       321	basic_blocks.c	FUNCTION_7
0x400010b	              0x55	                                push rbp	       321	basic_blocks.c	FUNCTION_7
0x400010c	              0x53	                                push rbx	       321	basic_blocks.c	FUNCTION_7
0x400010d	    0x4881ec580100	                          sub rsp, 0x158	       321	basic_blocks.c	FUNCTION_7
0x4000114	    0x64488b042528	                mov rax, qword fs:[0x28]	       321	basic_blocks.c	FUNCTION_7
0x400011d	    0x488984244801	            mov qword [rsp + 0x148], rax	       321	basic_blocks.c	FUNCTION_7
0x4000125	            0x31c0	                            xor eax, eax	       321	basic_blocks.c	FUNCTION_7
0x4000127	          0x395118	            cmp dword [rcx + 0x18], edx 	       330	basic_blocks.c	FUNCTION_7	IF_1
0x400012a	      0x48897c2408	                mov qword [rsp + 8], rdi	       321	basic_blocks.c	FUNCTION_7
0x400012f	            0x7d5f	                           jge 0x4000190	       330	basic_blocks.c	FUNCTION_7	IF_1
0x4000131	          0x4585ed	                         test r13d, r13d	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000134	            0x741d	                            je 0x4000153	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000136	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400013b	        0x418d55ff	                      lea edx, [r13 - 1]	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400013f	      0x488d541701	                lea rdx, [rdi + rdx + 1]	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000144	          0x4889f8	                            mov rax, rdi	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000147	          0xc60020	                    mov byte [rax], 0x20	       336	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400014a	        0x4883c001	                              add rax, 1	       336	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400014e	          0x4839c2	                            cmp rdx, rax	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000151	            0x75f4	                           jne 0x4000147	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000153	      0x488b442408	                mov rax, qword [rsp + 8]	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x4000158	      0x42c6042800	                 mov byte [rax + r13], 0	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x400015d	    0x488b84244801	           mov rax, qword [rsp + 0x148] 	       455	basic_blocks.c	FUNCTION_7
0x4000165	    0x644833042528	                xor rax, qword fs:[0x28]	       455	basic_blocks.c	FUNCTION_7
0x400016e	     0xf85a7030000	                           jne 0x400051b	       455	basic_blocks.c	FUNCTION_7
0x4000174	    0x4881c4580100	                          add rsp, 0x158	       455	basic_blocks.c	FUNCTION_7
0x400017b	              0x5b	                                 pop rbx	       455	basic_blocks.c	FUNCTION_7
0x400017c	              0x5d	                                 pop rbp	       455	basic_blocks.c	FUNCTION_7
0x400017d	            0x415c	                                 pop r12	       455	basic_blocks.c	FUNCTION_7
0x400017f	            0x415d	                                 pop r13	       455	basic_blocks.c	FUNCTION_7
0x4000181	            0x415e	                                 pop r14	       455	basic_blocks.c	FUNCTION_7
0x4000183	            0x415f	                                 pop r15	       455	basic_blocks.c	FUNCTION_7
0x4000185	              0xc3	                                     ret	       455	basic_blocks.c	FUNCTION_7
0x4000186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       455	basic_blocks.c	FUNCTION_7
0x4000190	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       331	basic_blocks.c	FUNCTION_7	IF_1
0x4000194	          0x4863d2	                         movsxd rdx, edx	       331	basic_blocks.c	FUNCTION_7	IF_1
0x4000197	      0x488b6cd0f8	        mov rbp, qword [rax + rdx*8 - 8]	       331	basic_blocks.c	FUNCTION_7	IF_1
0x400019c	          0x4885ed	                           test rbp, rbp	       333	basic_blocks.c	FUNCTION_7	IF_2
0x400019f	            0x7490	                            je 0x4000131	       333	basic_blocks.c	FUNCTION_7	IF_2
0x40001a1	    0x488305000000	               add qword [0x040001a9], 1	       347	basic_blocks.c	FUNCTION_7	ELSE_1
0x40001a9	        0xf6452401	               test byte [rbp + 0x24], 1	       361	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x40001ad	      0xc644241000	                mov byte [rsp + 0x10], 0	       350	basic_blocks.c	FUNCTION_7	ELSE_1
0x40001b2	     0xf8538020000	                           jne 0x40003f0	       361	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x40001b8	    0x8b0d00000000	            mov ecx, dword [0x040001be] 	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x40001be	            0x85c9	                           test ecx, ecx	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x40001c0	     0xf85ba000000	                           jne 0x4000280	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x40001c6	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001cb	     0xf844f030000	                            je 0x4000520	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001d1	    0x4c8b85880000	              mov r8, qword [rbp + 0x88]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001d8	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x40001dd	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       326	basic_blocks.c	FUNCTION_7
0x40001e4	          0x4531e4	                          xor r12d, r12d	       389	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_5
0x40001e7	          0x4c89fb	                            mov rbx, r15	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x40001ea	    0x4c8905000000	              mov qword [0x040001f1], r8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001f1	    0x4c8db5900000	                   lea r14, [rbp + 0x90]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001f8	    0x4881c5d80000	                           add rbp, 0xd8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001ff	          0x4d01c4	                             add r12, r8	       392	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000202	          0x4939f0	                             cmp r8, rsi	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x4000205	           0xf94c2	                                 sete dl	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x4000208	            0x85c9	                           test ecx, ecx	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x400020a	           0xf95c0	                                setne al	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x400020d	            0x20d0	                              and al, dl	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x400020f	            0x7544	                           jne 0x4000255	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x4000211	          0x4c39fb	                            cmp rbx, r15	       397	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x4000214	            0x7607	                           jbe 0x400021d	       397	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x4000216	          0xc6032c	                    mov byte [rbx], 0x2c	       398	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x4000219	        0x4883c301	                              add rbx, 1	       398	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x400021d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000222	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000227	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_9	CALL_1
0x400022a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000231	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000233	      0xe800000000	                          call 0x4000238	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000238	          0x4889df	                            mov rdi, rbx	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x400023b	      0xe800000000	                          call 0x4000240	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000240	    0x8b0d00000000	            mov ecx, dword [0x04000246] 	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000246	    0x488b35000000	            mov rsi, qword [0x0400024d] 	       402	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400024d	          0x4801c3	                            add rbx, rax	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000250	            0x85c9	                           test ecx, ecx	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000252	           0xf95c0	                                setne al	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000255	          0x4c39f5	                            cmp rbp, r14	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000258	     0xf847a010000	                            je 0x40003d8	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400025e	      0x49837eb000	               cmp qword [r14 - 0x50], 0	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000263	     0xf84af000000	                            je 0x4000318	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000269	          0x4d8b06	                     mov r8, qword [r14]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400026c	        0x4983c608	                              add r14, 8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000270	    0x4c8905000000	              mov qword [0x04000277], r8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000277	            0xeb86	                           jmp 0x40001ff	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000279	     0xf1f80000000	                         nop dword [rax]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000280	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000284	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000289	          0x4885c0	                           test rax, rax	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400028c	     0xf848f000000	                            je 0x4000321	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000292	        0x483b4500	                    cmp rax, qword [rbp]	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000296	     0xf8635ffffff	                           jbe 0x40001d1	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400029c	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002a1	    0x4c8b05000000	              mov r8, qword [0x040002a8]	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002a8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002ad	      0xba2c010000	                          mov edx, 0x12c	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002b2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002b7	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002b9	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002bc	          0x4c89fb	                            mov rbx, r15	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002bf	      0xe800000000	                          call 0x40002c4	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002c4	            0x8b13	                    mov edx, dword [rbx]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002c6	        0x4883c304	                              add rbx, 4	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002ca	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002d0	            0xf7d2	                                 not edx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002d2	            0x21d0	                            and eax, edx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002d4	      0x2580808080	                     and eax, 0x80808080	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002d9	            0x74e9	                            je 0x40002c4	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002db	            0x89c2	                            mov edx, eax	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002dd	    0x488b35000000	            mov rsi, qword [0x040002e4] 	       375	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x40002e4	    0x8b0d00000000	            mov ecx, dword [0x040002ea] 	       375	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x40002ea	          0xc1ea10	                           shr edx, 0x10	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002ed	      0xa980800000	                        test eax, 0x8080	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002f2	           0xf44c2	                          cmove eax, edx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002f5	        0x488d5302	                      lea rdx, [rbx + 2]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002f9	            0x89c7	                            mov edi, eax	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x40002fb	          0x4989f4	                            mov r12, rsi	       376	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x40002fe	        0x480f44da	                          cmove rbx, rdx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000302	          0x4000c7	                             add dil, al	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000305	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000309	        0x4883db03	                              sbb rbx, 3	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400030d	      0xe950010000	                           jmp 0x4000462	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000312	    0x660f1f440000	                    nop word [rax + rax]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000318	          0x4c39fb	                            cmp rbx, r15	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400031b	            0x756b	                           jne 0x4000388	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400031d	            0x84c0	                             test al, al	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400031f	            0x7467	                            je 0x4000388	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000321	    0x4c8b05000000	              mov r8, qword [0x04000328]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000328	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x400032d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000334	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000339	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_9	CALL_1
0x400033c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x400033e	          0x4c89fb	                            mov rbx, r15	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000341	      0xe800000000	                          call 0x4000346	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000346	            0x8b13	                    mov edx, dword [rbx]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000348	        0x4883c304	                              add rbx, 4	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400034c	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000352	            0xf7d2	                                 not edx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000354	            0x21d0	                            and eax, edx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000356	      0x2580808080	                     and eax, 0x80808080	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400035b	            0x74e9	                            je 0x4000346	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400035d	            0x89c2	                            mov edx, eax	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400035f	    0x4c8b25000000	            mov r12, qword [0x04000366] 	       415	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000366	          0xc1ea10	                           shr edx, 0x10	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000369	      0xa980800000	                        test eax, 0x8080	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400036e	           0xf44c2	                          cmove eax, edx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000371	        0x488d5302	                      lea rdx, [rbx + 2]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000375	            0x89c7	                            mov edi, eax	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000377	        0x480f44da	                          cmove rbx, rdx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400037b	          0x4000c7	                             add dil, al	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400037e	        0x4883db03	                              sbb rbx, 3	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000382	    0x660f1f440000	                    nop word [rax + rax]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000388	    0x488305000000	               add qword [0x04000390], 1	       429	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000390	    0x4c3925000000	            cmp qword [0x04000397], r12 	       431	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x4000397	     0xf8763010000	                            ja 0x4000500	       431	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x400039d	    0xc703202d3e20	            mov dword [rbx], 0x203e2d20 	       110	string3.h	FUNCTION_32	CALL_3
0x40003a3	        0xc6430400	                   mov byte [rbx + 4], 0	       110	string3.h	FUNCTION_32	CALL_3
0x40003a7	        0x4883c304	                              add rbx, 4	       440	basic_blocks.c	FUNCTION_7	ELSE_1
0x40003ab	          0x4c29fb	                            sub rbx, r15	       440	basic_blocks.c	FUNCTION_7	ELSE_1
0x40003ae	          0x4139dd	                           cmp r13d, ebx	       441	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x40003b1	     0xf8701010000	                            ja 0x40004b8	       441	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x40003b7	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       126	string3.h	FUNCTION_34	CALL_3
0x40003bc	          0x4c89ea	                            mov rdx, r13	       126	string3.h	FUNCTION_34	CALL_3
0x40003bf	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_34	CALL_3
0x40003c2	          0x4889df	                            mov rdi, rbx	       126	string3.h	FUNCTION_34	CALL_3
0x40003c5	      0xe800000000	                          call 0x40003ca	       126	string3.h	FUNCTION_34	CALL_3
0x40003ca	      0x42c6042b00	                 mov byte [rbx + r13], 0	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x40003cf	      0xe989fdffff	                           jmp 0x400015d	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x40003d4	         0xf1f4000	                         nop dword [rax]	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x40003d8	          0x4c39fb	                            cmp rbx, r15	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003db	            0x75ab	                           jne 0x4000388	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003dd	            0x84c0	                             test al, al	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003df	            0x74a7	                            je 0x4000388	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003e1	      0xe93bffffff	                           jmp 0x4000321	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x40003f0	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003f5	        0x4c8b4528	              mov r8, qword [rbp + 0x28]	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003f9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x40003fe	      0xba2c010000	                          mov edx, 0x12c	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000403	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000408	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_9	CALL_1
0x400040a	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_9	CALL_1
0x400040d	          0x4c89fb	                            mov rbx, r15	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000410	      0xe800000000	                          call 0x4000415	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000415	            0x8b13	                    mov edx, dword [rbx]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000417	        0x4883c304	                              add rbx, 4	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400041b	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000421	            0xf7d2	                                 not edx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000423	            0x21d0	                            and eax, edx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000425	      0x2580808080	                     and eax, 0x80808080	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400042a	            0x74e9	                            je 0x4000415	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400042c	            0x89c2	                            mov edx, eax	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400042e	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000432	    0x8b0d00000000	            mov ecx, dword [0x04000438] 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000438	          0xc1ea10	                           shr edx, 0x10	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400043b	      0xa980800000	                        test eax, 0x8080	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000440	           0xf44c2	                          cmove eax, edx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000443	        0x488d5302	                      lea rdx, [rbx + 2]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000447	            0x89c7	                            mov edi, eax	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000449	    0x488935000000	            mov qword [0x04000450], rsi 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000450	          0x4989f4	                            mov r12, rsi	       367	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x4000453	        0x480f44da	                          cmove rbx, rdx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000457	          0x4000c7	                             add dil, al	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400045a	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x400045e	        0x4883db03	                              sbb rbx, 3	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x4000462	          0x4885c0	                           test rax, rax	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000465	     0xf85d4000000	                           jne 0x400053f	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400046b	      0xb801000000	                              mov eax, 1	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000470	          0x4c39fb	                            cmp rbx, r15	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000473	     0xf84b9000000	                            je 0x4000532	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000479	            0x85c0	                           test eax, eax	       419	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x400047b	     0xf8507ffffff	                           jne 0x4000388	       419	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x4000481	          0x4585ed	                         test r13d, r13d	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x4000484	     0xf84c9fcffff	                            je 0x4000153	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x400048a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x400048f	        0x418d55ff	                      lea edx, [r13 - 1]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x4000493	      0x488d541701	                lea rdx, [rdi + rdx + 1]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x4000498	          0x4889f8	                            mov rax, rdi	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x400049b	       0xf1f440000	                   nop dword [rax + rax]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40004a0	          0xc60020	                    mov byte [rax], 0x20	       424	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40004a3	        0x4883c001	                              add rax, 1	       424	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40004a7	          0x4839d0	                            cmp rax, rdx	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40004aa	            0x75f4	                           jne 0x40004a0	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40004ac	      0xe9a2fcffff	                           jmp 0x4000153	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40004b1	     0xf1f80000000	                         nop dword [rax]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40004b8	      0x4c8b642408	                mov r12, qword [rsp + 8]	       110	string3.h	FUNCTION_32	CALL_3
0x40004bd	          0x4489ef	                           mov edi, r13d	       110	string3.h	FUNCTION_32	CALL_3
0x40004c0	            0x89d8	                            mov eax, ebx	       110	string3.h	FUNCTION_32	CALL_3
0x40004c2	          0x4829c7	                            sub rdi, rax	       110	string3.h	FUNCTION_32	CALL_3
0x40004c5	          0x4c89fe	                            mov rsi, r15	       110	string3.h	FUNCTION_32	CALL_3
0x40004c8	          0x4c01e7	                            add rdi, r12	       110	string3.h	FUNCTION_32	CALL_3
0x40004cb	      0xe800000000	                          call 0x40004d0	       110	string3.h	FUNCTION_32	CALL_3
0x40004d0	          0x4129dd	                           sub r13d, ebx	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004d3	     0xf8484fcffff	                            je 0x400015d	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004d9	        0x418d45ff	                      lea eax, [r13 - 1]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004dd	      0x498d440401	                lea rax, [r12 + rax + 1]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004e2	    0x660f1f440000	                    nop word [rax + rax]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004e8	      0x41c6042420	                    mov byte [r12], 0x20	       452	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004ed	        0x4983c401	                              add r12, 1	       452	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004f1	          0x4939c4	                            cmp r12, rax	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004f4	            0x75f2	                           jne 0x40004e8	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004f6	      0xe962fcffff	                           jmp 0x400015d	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x40004fb	       0xf1f440000	                   nop dword [rax + rax]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000500	      0xb823000000	                           mov eax, 0x23	       110	string3.h	FUNCTION_32	CALL_3
0x4000505	    0xc74424102323	     mov dword [rsp + 0x10], 0x23232323 	       110	string3.h	FUNCTION_32	CALL_3
0x400050d	        0x498d5f05	                      lea rbx, [r15 + 5]	       434	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x4000511	      0x6689442414	               mov word [rsp + 0x14], ax	       110	string3.h	FUNCTION_32	CALL_3
0x4000516	      0xe982feffff	                           jmp 0x400039d	       110	string3.h	FUNCTION_32	CALL_3
0x400051b	      0xe800000000	                          call 0x4000520	       455	basic_blocks.c	FUNCTION_7
0x4000520	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000525	          0x4531e4	                          xor r12d, r12d	       352	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000528	            0x31c0	                            xor eax, eax	       353	basic_blocks.c	FUNCTION_7	ELSE_1
0x400052a	          0x4c89fb	                            mov rbx, r15	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x400052d	      0xe93effffff	                           jmp 0x4000470	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000532	            0x85c9	                           test ecx, ecx	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000534	     0xf843fffffff	                            je 0x4000479	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400053a	      0xe9e2fdffff	                           jmp 0x4000321	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400053f	    0x4c8b85880000	              mov r8, qword [rbp + 0x88]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000546	    0x4c8905000000	              mov qword [0x0400054d], r8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400054d	      0xe99ffcffff	                           jmp 0x40001f1	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
cmp_ncalls	IF,4:CALL,0:DO,0:functions,0:SWITCH,0:ELSE,2:FOR,0:WHILE,0	20
0x4000040	          0x488b17	                    mov rdx, qword [rdi]	        87	basic_blocks.c	ELSE_2	FUNCTION_2
0x4000043	          0x488b0e	                    mov rcx, qword [rsi]	        88	basic_blocks.c	ELSE_2	FUNCTION_2
0x4000046	          0x4885d2	                           test rdx, rdx	        90	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x4000049	            0x7435	                            je 0x4000080	        90	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x400004b	          0x4885c9	                           test rcx, rcx	        92	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x400004e	            0x7420	                            je 0x4000070	        92	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x4000050	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000054	        0x48397228	            cmp qword [rdx + 0x28], rsi 	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000058	      0xb801000000	                              mov eax, 1	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x400005d	            0x7216	                            jb 0x4000075	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x400005f	            0x770f	                            ja 0x4000070	        97	basic_blocks.c	FUNCTION_2	IF_4
0x4000061	          0x8b4220	            mov eax, dword [rdx + 0x20] 	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000064	          0x2b4120	             sub eax, dword [rcx + 0x20]	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000067	              0xc3	                                     ret	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000070	      0xb8ffffffff	                     mov eax, 0xffffffff	        93	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x4000075	            0xf3c3	                                     ret	       101	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000077	    0x660f1f840000	                    nop word [rax + rax]	       101	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000080	      0xb801000000	                              mov eax, 1	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x4000085	              0xc3	                                     ret	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
cmp_bb	IF,5:CALL,1:DO,0:functions,0:SWITCH,0:ELSE,2:FOR,0:WHILE,0	36
0x4000090	              0x55	                                push rbp	        57	basic_blocks.c	FUNCTION_1
0x4000091	              0x53	                                push rbx	        57	basic_blocks.c	FUNCTION_1
0x4000092	        0x4883ec08	                              sub rsp, 8	        57	basic_blocks.c	FUNCTION_1
0x4000096	          0x488b1f	                    mov rbx, qword [rdi]	        59	basic_blocks.c	FUNCTION_1
0x4000099	          0x488b2e	                    mov rbp, qword [rsi]	        60	basic_blocks.c	FUNCTION_1
0x400009c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a0	          0x4885c0	                           test rax, rax	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a3	            0x7433	                            je 0x40000d8	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a5	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a9	          0x4885d2	                           test rdx, rdx	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000ac	            0x742a	                            je 0x40000d8	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000ae	        0x488b7208	                mov rsi, qword [rdx + 8]	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000b2	        0x488b7808	                mov rdi, qword [rax + 8]	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000b6	      0xe800000000	                          call 0x40000bb	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000bb	            0x85c0	                           test eax, eax	        66	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000bd	            0x750c	                           jne 0x40000cb	        66	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000bf	          0x8b4320	            mov eax, dword [rbx + 0x20] 	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c2	          0x8b5520	            mov edx, dword [rbp + 0x20] 	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c5	            0x39d0	                            cmp eax, edx	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c7	            0x740f	                            je 0x40000d8	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c9	            0x29d0	                            sub eax, edx	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000cb	        0x4883c408	                              add rsp, 8	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000cf	              0x5b	                                 pop rbx	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d0	              0x5d	                                 pop rbp	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d1	              0xc3	                                     ret	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d2	    0x660f1f440000	                    nop word [rax + rax]	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000d8	        0x488b4500	                    mov rax, qword [rbp]	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000dc	          0x483903	                    cmp qword [rbx], rax	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000df	      0xbaffffffff	                     mov edx, 0xffffffff	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000e4	           0xf97c0	                                 seta al	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000e7	           0xfb6c0	                           movzx eax, al	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000ea	           0xf42c2	                          cmovb eax, edx	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000ed	        0x4883c408	                              add rsp, 8	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000f1	              0x5b	                                 pop rbx	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000f2	              0x5d	                                 pop rbp	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000f3	              0xc3	                                     ret	        79	basic_blocks.c	FUNCTION_1	ELSE_2
print_annotated_source	IF,11:CALL,18:DO,0:functions,0:SWITCH,0:ELSE,2:FOR,5:WHILE,0	315
0x4000bd0	            0x4155	                                push r13	       463	basic_blocks.c	FUNCTION_8
0x4000bd2	            0x4154	                                push r12	       463	basic_blocks.c	FUNCTION_8
0x4000bd4	              0x55	                                push rbp	       463	basic_blocks.c	FUNCTION_8
0x4000bd5	              0x53	                                push rbx	       463	basic_blocks.c	FUNCTION_8
0x4000bd6	        0x4883ec18	                           sub rsp, 0x18	       463	basic_blocks.c	FUNCTION_8
0x4000bda	    0x488b1d000000	            mov rbx, qword [0x04000be1] 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000be1	    0x483b1d000000	            cmp rbx, qword [0x04000be8] 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000be8	            0x7216	                            jb 0x4000c00	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000bea	      0xe91c040000	                           jmp 0x400100b	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000bef	              0x90	                                     nop	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000bf0	    0x4881c3580100	                          add rbx, 0x158	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000bf7	    0x48391d000000	            cmp qword [0x04000bfe], rbx 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000bfe	            0x7638	                           jbe 0x4000c38	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000c00	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c04	          0x4885c0	                           test rax, rax	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c07	            0x74e7	                            je 0x4000bf0	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c09	          0x8b4018	            mov eax, dword [rax + 0x18] 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c0c	          0x394320	            cmp dword [rbx + 0x20], eax 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c0f	            0x7edf	                           jle 0x4000bf0	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c11	          0x488b33	                    mov rsi, qword [rbx]	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000c14	      0xbf00000000	                              mov edi, 0	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000c19	      0xe800000000	                          call 0x4000c1e	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000c1e	          0x4885c0	                           test rax, rax	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000c21	     0xf8449040000	                            je 0x4001070	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000c27	          0x8b5320	            mov edx, dword [rbx + 0x20] 	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c2a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c2e	          0x895018	             mov dword [rax + 0x18], edx	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c31	            0xebbd	                           jmp 0x4000bf0	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c33	       0xf1f440000	                   nop dword [rax + rax]	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000c38	    0x488b1d000000	            mov rbx, qword [0x04000c3f] 	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000c3f	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000c42	     0xf84b6040000	                            je 0x40010fe	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000c48	     0xf1f84000000	                   nop dword [rax + rax]	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000c50	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000c54	            0x85ff	                           test edi, edi	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000c56	            0x7e1f	                           jle 0x4000c77	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000c58	        0x48c1e703	                              shl rdi, 3	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000c5c	      0xe800000000	                          call 0x4000c61	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000c61	        0x48635318	         movsxd rdx, dword [rbx + 0x18] 	        90	string3.h	FUNCTION_29	CALL_6
0x4000c65	        0x48894320	             mov qword [rbx + 0x20], rax	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000c69	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_29	CALL_6
0x4000c6b	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_29	CALL_6
0x4000c6e	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x4000c72	      0xe800000000	                          call 0x4000c77	        90	string3.h	FUNCTION_29	CALL_6
0x4000c77	          0x488b1b	                    mov rbx, qword [rbx]	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000c7a	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000c7d	            0x75d1	                           jne 0x4000c50	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000c7f	    0x488b1d000000	            mov rbx, qword [0x04000c86] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c86	    0x483b1d000000	            cmp rbx, qword [0x04000c8d] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c8d	            0x7219	                            jb 0x4000ca8	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c8f	            0xeb77	                           jmp 0x4000d08	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c91	     0xf1f80000000	                         nop dword [rax]	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c98	    0x4881c3580100	                          add rbx, 0x158	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c9f	    0x48391d000000	            cmp qword [0x04000ca6], rbx 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000ca6	            0x7660	                           jbe 0x4000d08	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000ca8	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cac	          0x4885c0	                           test rax, rax	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000caf	            0x74e7	                            je 0x4000c98	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cb1	          0x8b7018	            mov esi, dword [rax + 0x18] 	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cb4	            0x85f6	                           test esi, esi	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cb6	            0x74e0	                            je 0x4000c98	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cb8	          0x488b33	                    mov rsi, qword [rbx]	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000cbb	      0xbf00000000	                              mov edi, 0	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000cc0	      0xe800000000	                          call 0x4000cc5	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000cc5	          0x4885c0	                           test rax, rax	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000cc8	     0xf84d2030000	                            je 0x40010a0	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000cce	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cd2	        0x48634b20	         movsxd rcx, dword [rbx + 0x20] 	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cd6	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cda	        0x48015010	            add qword [rax + 0x10], rdx 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cde	        0x488b4020	            mov rax, qword [rax + 0x20] 	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000ce2	      0x488d44c8f8	              lea rax, [rax + rcx*8 - 8]	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000ce7	          0x488b28	                    mov rbp, qword [rax]	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000cea	          0x4885ed	                           test rbp, rbp	       507	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000ced	     0xf84dd030000	                            je 0x40010d0	       507	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000cf3	      0x48837d0000	                      cmp qword [rbp], 0	       512	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000cf8	     0xf8532030000	                           jne 0x4001030	       512	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000cfe	        0x48015528	            add qword [rbp + 0x28], rdx 	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000d02	            0xeb94	                           jmp 0x4000c98	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000d04	         0xf1f4000	                         nop dword [rax]	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000d08	    0x488b1d000000	            mov rbx, qword [0x04000d0f] 	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d0f	    0xf20f101d0000	         movsd xmm3, qword [0x04000d17] 	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000d17	    0xf20f115c2408	             movsd qword [rsp + 8], xmm3	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000d1d	          0x4885db	                           test rbx, rbx	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d20	     0xf85be010000	                           jne 0x4000ee4	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d26	      0xe9f0020000	                           jmp 0x400101b	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d2b	       0xf1f440000	                   nop dword [rax + rax]	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d30	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d34	      0xe800000000	                          call 0x4000d39	       564	basic_blocks.c	FUNCTION_8	FOR_4	CALL_11
0x4000d39	      0xba05000000	                              mov edx, 5	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d3e	      0xbe00000000	                              mov esi, 0	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d43	      0xbf00000000	                              mov edi, 0	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d48	    0x48c743200000	               mov qword [rbx + 0x20], 0	       565	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d50	      0xe800000000	                          call 0x4000d55	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d55	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000d5a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000d5d	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000d60	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000d62	      0xe800000000	                          call 0x4000d67	        97	stdio2.h	CALL_13
0x4000d67	    0x488b2d000000	            mov rbp, qword [0x04000d6e] 	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000d6e	      0xba05000000	                              mov edx, 5	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000d73	      0xbe00000000	                              mov esi, 0	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000d78	      0xbf00000000	                              mov edi, 0	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000d7d	      0xe800000000	                          call 0x4000d82	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000d82	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000d85	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000d88	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000d8d	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000d90	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000d92	      0xe800000000	                          call 0x4000d97	        97	stdio2.h	CALL_13
0x4000d97	    0x488b2d000000	            mov rbp, qword [0x04000d9e] 	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000d9e	      0xba05000000	                              mov edx, 5	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000da3	      0xbe00000000	                              mov esi, 0	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000da8	      0xbf00000000	                              mov edi, 0	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000dad	      0xe800000000	                          call 0x4000db2	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000db2	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000db5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000db8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000dbd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000dbf	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000dc2	      0xe800000000	                          call 0x4000dc7	        97	stdio2.h	CALL_13
0x4000dc7	    0x488b05000000	            mov rax, qword [0x04000dce] 	       573	basic_blocks.c	FUNCTION_8	FOR_4
0x4000dce	    0xf20f10050000	         movsd xmm0, qword [0x04000dd6] 	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000dd6	          0x4885c0	                           test rax, rax	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000dd9	            0x7420	                            je 0x4000dfb	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000ddb	        0x660fefc9	                         pxor xmm1, xmm1	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000ddf	        0x660fefc0	                         pxor xmm0, xmm0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000de3	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000de8	    0xf2480f2a0500	       cvtsi2sd xmm0, qword [0x04000df1]	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000df1	    0xf20f59442408	             mulsd xmm0, qword [rsp + 8]	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000df7	        0xf20f5ec1	                        divsd xmm0, xmm1	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000dfb	      0xba05000000	                              mov edx, 5	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e00	      0xbe00000000	                              mov esi, 0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e05	      0xbf00000000	                              mov edi, 0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e0a	      0xf20f110424	                 movsd qword [rsp], xmm0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e0f	      0xe800000000	                          call 0x4000e14	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e14	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000e19	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000e1c	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000e1f	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_13
0x4000e24	      0xf20f100424	                 movsd xmm0, qword [rsp]	        97	stdio2.h	CALL_13
0x4000e29	      0xe800000000	                          call 0x4000e2e	        97	stdio2.h	CALL_13
0x4000e2e	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e32	      0xba05000000	                              mov edx, 5	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e37	      0xbe00000000	                              mov esi, 0	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e3c	      0xbf00000000	                              mov edi, 0	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e41	      0xe800000000	                          call 0x4000e46	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e46	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000e49	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000e4c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000e51	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000e53	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000e56	      0xe800000000	                          call 0x4000e5b	        97	stdio2.h	CALL_13
0x4000e5b	    0x488b15000000	            mov rdx, qword [0x04000e62] 	       579	basic_blocks.c	FUNCTION_8	FOR_4
0x4000e62	        0x660fefc0	                         pxor xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e66	          0x4885d2	                           test rdx, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e69	            0x7423	                            je 0x4000e8e	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e6b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e6f	          0x4885c0	                           test rax, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e72	     0xf8868020000	                            js 0x40010e0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e78	        0x660fefc0	                         pxor xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e7c	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e81	        0x660fefc9	                         pxor xmm1, xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e85	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e8a	        0xf20f5ec1	                        divsd xmm0, xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e8e	      0xba05000000	                              mov edx, 5	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e93	      0xbe00000000	                              mov esi, 0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e98	      0xbf00000000	                              mov edi, 0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000e9d	      0xf20f110424	                 movsd qword [rsp], xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ea2	      0xe800000000	                          call 0x4000ea7	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ea7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000eac	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000eaf	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000eb2	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_13
0x4000eb7	      0xf20f100424	                 movsd xmm0, qword [rsp]	        97	stdio2.h	CALL_13
0x4000ebc	      0xe800000000	                          call 0x4000ec1	        97	stdio2.h	CALL_13
0x4000ec1	    0x4c3b25000000	            cmp r12, qword [0x04000ec8] 	       582	basic_blocks.c	FUNCTION_8	FOR_4	IF_11
0x4000ec8	            0x740e	                            je 0x4000ed8	       582	basic_blocks.c	FUNCTION_8	FOR_4	IF_11
0x4000eca	          0x4c89e7	                            mov rdi, r12	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x4000ecd	      0xe800000000	                          call 0x4000ed2	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x4000ed2	    0x660f1f440000	                    nop word [rax + rax]	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x4000ed8	          0x488b1b	                    mov rbx, qword [rbx]	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000edb	          0x4885db	                           test rbx, rbx	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ede	     0xf8437010000	                            je 0x400101b	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ee4	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000ee7	            0x85d2	                           test edx, edx	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000ee9	            0x74ed	                            je 0x4000ed8	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000eeb	    0x8b0500000000	            mov eax, dword [0x04000ef1] 	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000ef1	            0x85c0	                           test eax, eax	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000ef3	            0x7407	                            je 0x4000efc	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000ef5	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000efa	            0x74dc	                            je 0x4000ed8	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000efc	          0x4889d9	                            mov rcx, rbx	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000eff	      0xba00000000	                              mov edx, 0	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000f04	      0xbe10000000	                           mov esi, 0x10	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000f09	          0x4889df	                            mov rdi, rbx	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000f0c	    0x48c705000000	               mov qword [0x04000f17], 0	       535	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f17	    0x48c705000000	               mov qword [0x04000f22], 0	       535	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f22	      0xe800000000	                          call 0x4000f27	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000f27	          0x4885c0	                           test rax, rax	       538	basic_blocks.c	FUNCTION_8	FOR_4	IF_7
0x4000f2a	          0x4989c4	                            mov r12, rax	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000f2d	            0x74a9	                            je 0x4000ed8	       538	basic_blocks.c	FUNCTION_8	FOR_4	IF_7
0x4000f2f	    0x8b2d00000000	            mov ebp, dword [0x04000f35] 	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000f35	            0x85ed	                           test ebp, ebp	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000f37	     0xf8ef3fdffff	                           jle 0x4000d30	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000f3d	      0xba05000000	                              mov edx, 5	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000f42	      0xbe00000000	                              mov esi, 0	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000f47	      0xbf00000000	                              mov edi, 0	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000f4c	      0xe800000000	                          call 0x4000f51	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000f51	            0x89e9	                            mov ecx, ebp	        97	stdio2.h	CALL_13
0x4000f53	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000f56	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000f5b	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000f5e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000f60	      0xe800000000	                          call 0x4000f65	        97	stdio2.h	CALL_13
0x4000f65	        0x48637318	         movsxd rsi, dword [rbx + 0x18] 	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000f69	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000f6d	      0xba08000000	                              mov edx, 8	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000f72	      0xb900000000	                              mov ecx, 0	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000f77	      0xe800000000	                          call 0x4000f7c	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000f7c	    0x8b0500000000	            mov eax, dword [0x04000f82] 	       548	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000f82	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       550	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	IF_9
0x4000f85	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000f89	            0x39d0	                            cmp eax, edx	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000f8b	           0xf4ed0	                         cmovle edx, eax	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000f8e	            0x85d2	                           test edx, edx	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000f90	     0xf8e9efdffff	                           jle 0x4000d34	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000f96	          0x488b07	                    mov rax, qword [rdi]	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000f99	          0x4885c0	                           test rax, rax	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000f9c	     0xf8492fdffff	                            je 0x4000d34	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fa2	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fa6	          0x4d85c0	                             test r8, r8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fa9	     0xf8485fdffff	                            je 0x4000d34	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000faf	          0x83ea01	                              sub edx, 1	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fb2	      0xbd08000000	                              mov ebp, 8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fb7	    0x4c8d2cd50800	                    lea r13, [rdx*8 + 8]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fbf	            0xeb25	                           jmp 0x4000fe6	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fc1	     0xf1f80000000	                         nop dword [rax]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fc8	        0x488b042f	              mov rax, qword [rdi + rbp]	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000fcc	          0x4885c0	                           test rax, rax	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fcf	     0xf845ffdffff	                            je 0x4000d34	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fd5	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fd9	        0x4883c508	                              add rbp, 8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fdd	          0x4d85c0	                             test r8, r8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fe0	     0xf844efdffff	                            je 0x4000d34	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000fe6	          0x8b4820	            mov ecx, dword [rax + 0x20] 	        97	stdio2.h	CALL_13
0x4000fe9	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000fec	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000fee	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_13
0x4000ff3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000ff8	      0xe800000000	                          call 0x4000ffd	        97	stdio2.h	CALL_13
0x4000ffd	          0x4c39ed	                            cmp rbp, r13	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4001000	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4001004	            0x75c2	                           jne 0x4000fc8	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4001006	      0xe929fdffff	                           jmp 0x4000d34	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x400100b	    0x488b1d000000	            mov rbx, qword [0x04001012] 	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4001012	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4001015	     0xf8535fcffff	                           jne 0x4000c50	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x400101b	        0x4883c418	                           add rsp, 0x18	       585	basic_blocks.c	FUNCTION_8
0x400101f	              0x5b	                                 pop rbx	       585	basic_blocks.c	FUNCTION_8
0x4001020	              0x5d	                                 pop rbp	       585	basic_blocks.c	FUNCTION_8
0x4001021	            0x415c	                                 pop r12	       585	basic_blocks.c	FUNCTION_8
0x4001023	            0x415d	                                 pop r13	       585	basic_blocks.c	FUNCTION_8
0x4001025	              0xc3	                                     ret	       585	basic_blocks.c	FUNCTION_8
0x4001026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       585	basic_blocks.c	FUNCTION_8
0x4001030	      0xbf58010000	                          mov edi, 0x158	       520	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2	CALL_7
0x4001035	      0xe800000000	                          call 0x400103a	       520	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2	CALL_7
0x400103a	      0xb92b000000	                           mov ecx, 0x2b	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400103f	          0x4889c7	                            mov rdi, rax	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001042	          0x4889ee	                            mov rsi, rbp	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001045	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001048	    0x48c700000000	                      mov qword [rax], 0	       522	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400104f	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       523	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001053	        0x48015028	            add qword [rax + 0x28], rdx 	       523	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001057	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400105b	        0x48634b20	         movsxd rcx, dword [rbx + 0x20] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400105f	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001063	      0x488944caf8	        mov qword [rdx + rcx*8 - 8], rax	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001068	      0xe92bfcffff	                           jmp 0x4000c98	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x400106d	           0xf1f00	                         nop dword [rax]	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4001070	    0x8b3d00000000	            mov edi, dword [0x04001076] 	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4001076	            0x85ff	                           test edi, edi	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4001078	     0xf8572fbffff	                           jne 0x4000bf0	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x400107e	          0x488b33	                    mov rsi, qword [rbx]	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4001081	      0xbf00000000	                              mov edi, 0	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4001086	      0xe800000000	                          call 0x400108b	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x400108b	          0x4885c0	                           test rax, rax	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x400108e	     0xf855cfbffff	                           jne 0x4000bf0	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4001094	      0xe98efbffff	                           jmp 0x4000c27	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4001099	     0xf1f80000000	                         nop dword [rax]	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x40010a0	    0x8b0d00000000	            mov ecx, dword [0x040010a6] 	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x40010a6	            0x85c9	                           test ecx, ecx	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x40010a8	     0xf85eafbffff	                           jne 0x4000c98	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x40010ae	          0x488b33	                    mov rsi, qword [rbx]	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x40010b1	      0xbf00000000	                              mov edi, 0	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x40010b6	      0xe800000000	                          call 0x40010bb	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x40010bb	          0x4885c0	                           test rax, rax	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x40010be	     0xf85d4fbffff	                           jne 0x4000c98	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x40010c4	      0xe905fcffff	                           jmp 0x4000cce	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x40010c9	     0xf1f80000000	                         nop dword [rax]	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x40010d0	          0x488918	                    mov qword [rax], rbx	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x40010d3	      0xe9c0fbffff	                           jmp 0x4000c98	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x40010d8	     0xf1f84000000	                   nop dword [rax + rax]	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x40010e0	          0x4889c1	                            mov rcx, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010e3	        0x660fefc0	                         pxor xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010e7	          0x48d1e9	                              shr rcx, 1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010ea	          0x83e001	                              and eax, 1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010ed	          0x4809c1	                             or rcx, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010f0	      0xf2480f2ac1	                      cvtsi2sd xmm0, rcx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010f5	        0xf20f58c0	                        addsd xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010f9	      0xe983fdffff	                           jmp 0x4000e81	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x40010fe	    0x488b1d000000	            mov rbx, qword [0x04001105] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4001105	    0x48391d000000	            cmp qword [0x0400110c], rbx 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x400110c	     0xf8796fbffff	                            ja 0x4000ca8	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4001112	      0xe904ffffff	                           jmp 0x400101b	       497	basic_blocks.c	FUNCTION_8	FOR_3
bb_read_rec	IF,9:CALL,19:DO,0:functions,0:SWITCH,0:ELSE,2:FOR,2:WHILE,0	171
0x4000560	            0x4155	                                push r13	       121	basic_blocks.c	FUNCTION_4
0x4000562	            0x4154	                                push r12	       121	basic_blocks.c	FUNCTION_4
0x4000564	          0x4989f4	                            mov r12, rsi	       121	basic_blocks.c	FUNCTION_4
0x4000567	              0x55	                                push rbp	       121	basic_blocks.c	FUNCTION_4
0x4000568	              0x53	                                push rbx	       121	basic_blocks.c	FUNCTION_4
0x4000569	          0x4889fb	                            mov rbx, rdi	       121	basic_blocks.c	FUNCTION_4
0x400056c	        0x4883ec28	                           sub rsp, 0x28	       121	basic_blocks.c	FUNCTION_4
0x4000570	          0x4889e6	                            mov rsi, rsp	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x4000573	    0x64488b042528	                mov rax, qword fs:[0x28]	       121	basic_blocks.c	FUNCTION_4
0x400057c	      0x4889442418	             mov qword [rsp + 0x18], rax	       121	basic_blocks.c	FUNCTION_4
0x4000581	            0x31c0	                            xor eax, eax	       121	basic_blocks.c	FUNCTION_4
0x4000583	      0xe800000000	                          call 0x4000588	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x4000588	            0x85c0	                           test eax, eax	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x400058a	     0xf8565020000	                           jne 0x40007f5	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x4000590	    0x488b05000000	            mov rax, qword [0x04000597] 	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x4000597	          0x4889e7	                            mov rdi, rsp	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x400059a	        0x488b4008	                mov rax, qword [rax + 8]	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x400059e	          0xff5038	                 call qword [rax + 0x38]	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x40005a1	    0x448b05000000	            mov r8d, dword [0x040005a8] 	       134	basic_blocks.c	FUNCTION_4	IF_2
0x40005a8	            0x89c2	                            mov edx, eax	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x40005aa	          0x890424	                    mov dword [rsp], eax	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x40005ad	          0x4585c0	                           test r8d, r8d	       134	basic_blocks.c	FUNCTION_4	IF_2
0x40005b0	     0xf84ea000000	                            je 0x40006a0	       134	basic_blocks.c	FUNCTION_4	IF_2
0x40005b6	            0x85d2	                           test edx, edx	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x40005b8	     0xf84bb000000	                            je 0x4000679	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x40005be	            0x31ed	                            xor ebp, ebp	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x40005c0	    0x8b3d00000000	            mov edi, dword [0x040005c6] 	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x40005c6	            0x85ff	                           test edi, edi	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x40005c8	     0xf85f2000000	                           jne 0x40006c0	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x40005ce	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005d3	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005d6	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005db	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005e0	      0xe800000000	                          call 0x40005e5	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005e5	        0x4883f801	                              cmp rax, 1	       145	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_6
0x40005e9	     0xf85f7000000	                           jne 0x40006e6	       145	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_6
0x40005ef	      0x488d7c2408	                      lea rdi, [rsp + 8]	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005f4	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005f7	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005fc	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000601	      0xe800000000	                          call 0x4000606	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000606	        0x4883f801	                              cmp rax, 1	       146	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_7
0x400060a	     0xf85d6000000	                           jne 0x40006e6	       146	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_7
0x4000610	          0x4889df	                            mov rdi, rbx	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x4000613	      0xe800000000	                          call 0x4000618	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x4000618	          0x83c001	                              add eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x400061b	          0x83f801	                              cmp eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x400061e	            0x77f0	                            ja 0x4000610	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000620	          0x4889df	                            mov rdi, rbx	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x4000623	      0xe800000000	                          call 0x4000628	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x4000628	          0x83c001	                              add eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x400062b	          0x83f801	                              cmp eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x400062e	            0x77f0	                            ja 0x4000620	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000630	      0x488d7c2404	                      lea rdi, [rsp + 4]	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000635	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000638	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x400063d	      0xbe04000000	                              mov esi, 4	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000642	      0xe800000000	                          call 0x4000647	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000647	        0x4883f801	                              cmp rax, 1	       149	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_10
0x400064b	     0xf8595000000	                           jne 0x40006e6	       149	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_10
0x4000651	    0x8b3500000000	            mov esi, dword [0x04000657] 	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x4000657	            0x85f6	                           test esi, esi	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x4000659	     0xf85a1000000	                           jne 0x4000700	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x400065f	    0x8b0500000000	            mov eax, dword [0x04000665] 	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x4000665	            0x85c0	                           test eax, eax	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x4000667	     0xf840b010000	                            je 0x4000778	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x400066d	          0x83c501	                              add ebp, 1	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000670	          0x392c24	                    cmp dword [rsp], ebp	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000673	     0xf8747ffffff	                            ja 0x40005c0	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000679	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       202	basic_blocks.c	FUNCTION_4
0x400067e	    0x644833042528	                xor rax, qword fs:[0x28]	       202	basic_blocks.c	FUNCTION_4
0x4000687	     0xf8563010000	                           jne 0x40007f0	       202	basic_blocks.c	FUNCTION_4
0x400068d	        0x4883c428	                           add rsp, 0x28	       202	basic_blocks.c	FUNCTION_4
0x4000691	              0x5b	                                 pop rbx	       202	basic_blocks.c	FUNCTION_4
0x4000692	              0x5d	                                 pop rbp	       202	basic_blocks.c	FUNCTION_4
0x4000693	            0x415c	                                 pop r12	       202	basic_blocks.c	FUNCTION_4
0x4000695	            0x415d	                                 pop r13	       202	basic_blocks.c	FUNCTION_4
0x4000697	              0xc3	                                     ret	       202	basic_blocks.c	FUNCTION_4
0x4000698	     0xf1f84000000	                   nop dword [rax + rax]	       202	basic_blocks.c	FUNCTION_4
0x40006a0	          0x4889df	                            mov rdi, rbx	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x40006a3	      0xe800000000	                          call 0x40006a8	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x40006a8	          0x83c001	                              add eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40006ab	          0x83f801	                              cmp eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40006ae	            0x77f0	                            ja 0x40006a0	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40006b0	          0x8b1424	                    mov edx, dword [rsp]	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40006b3	      0xe9fefeffff	                           jmp 0x40005b6	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40006b8	     0xf1f84000000	                   nop dword [rax + rax]	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x40006c0	      0x488d742408	                      lea rsi, [rsp + 8]	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40006c5	          0x4889df	                            mov rdi, rbx	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40006c8	      0xe800000000	                          call 0x40006cd	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40006cd	            0x85c0	                           test eax, eax	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40006cf	            0x7515	                           jne 0x40006e6	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40006d1	      0x488d742410	                   lea rsi, [rsp + 0x10]	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006d6	          0x4889df	                            mov rdi, rbx	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006d9	      0xe800000000	                          call 0x40006de	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006de	            0x85c0	                           test eax, eax	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006e0	     0xf846bffffff	                            je 0x4000651	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40006e6	          0x4c89e7	                            mov rdi, r12	       151	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_11
0x40006e9	      0xe800000000	                          call 0x40006ee	       151	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_11
0x40006ee	      0xbf01000000	                              mov edi, 1	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x40006f3	      0xe800000000	                          call 0x40006f8	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x40006f8	     0xf1f84000000	                   nop dword [rax + rax]	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x4000700	      0x488b742408	                mov rsi, qword [rsp + 8]	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x4000705	      0xbf00000000	                              mov edi, 0	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x400070a	      0xe800000000	                          call 0x400070f	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x400070f	          0x4885c0	                           test rax, rax	       168	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7
0x4000712	          0x4989c5	                            mov r13, rax	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x4000715	     0xf8452ffffff	                            je 0x400066d	       168	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7
0x400071b	    0xf60500000000	               test byte [0x04000722], 8	       172	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	CALL_18
0x4000722	     0xf8598000000	                           jne 0x40007c0	       172	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	CALL_18
0x4000728	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       172	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	CALL_18
0x400072d	            0x31c0	                            xor eax, eax	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x400072f	            0xeb1a	                           jmp 0x400074b	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000731	     0xf1f80000000	                         nop dword [rax]	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000738	          0x4839ca	                            cmp rdx, rcx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400073b	            0x741b	                            je 0x4000758	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400073d	        0x4883c001	                              add rax, 1	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000741	        0x4883f80a	                            cmp rax, 0xa	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000745	     0xf8422ffffff	                            je 0x400066d	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400074b	      0x498b54c538	    mov rdx, qword [r13 + rax*8 + 0x38] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000750	          0x4863f0	                         movsxd rsi, eax	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000753	          0x4885d2	                           test rdx, rdx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000756	            0x75e0	                           jne 0x4000738	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000758	      0x498d44f500	                  lea rax, [r13 + rsi*8]	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400075d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       182	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000762	        0x48894838	             mov qword [rax + 0x38], rcx	       181	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000766	    0x480190880000	            add qword [rax + 0x88], rdx 	       182	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400076d	      0xe9fbfeffff	                           jmp 0x400066d	       183	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000772	    0x660f1f440000	                    nop word [rax + rax]	       183	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000778	    0x4c8b2d000000	            mov r13, qword [0x0400077f] 	       195	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x400077f	      0xba05000000	                              mov edx, 5	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x4000784	      0xbe00000000	                              mov esi, 0	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x4000789	      0xbf00000000	                              mov edi, 0	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x400078e	    0xc70500000000	               mov dword [0x04000798], 1	       194	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x4000798	      0xe800000000	                          call 0x400079d	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x400079d	    0x488b3d000000	            mov rdi, qword [0x040007a4] 	        97	stdio2.h	CALL_13
0x40007a4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40007a7	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_13
0x40007aa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40007af	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40007b1	      0xe800000000	                          call 0x40007b6	        97	stdio2.h	CALL_13
0x40007b6	      0xe9b2feffff	                           jmp 0x400066d	        97	stdio2.h	CALL_13
0x40007bb	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_13
0x40007c0	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x40007c4	        0x448b4820	            mov r9d, dword [rax + 0x20] 	       104	stdio2.h	CALL_16
0x40007c8	        0x4c8b4010	              mov r8, qword [rax + 0x10]	       104	stdio2.h	CALL_16
0x40007cc	        0xff742418	                 push qword [rsp + 0x18]	       104	stdio2.h	CALL_16
0x40007d0	          0x488b08	                    mov rcx, qword [rax]	       104	stdio2.h	CALL_16
0x40007d3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40007d8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40007dd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40007e2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40007e4	      0xe800000000	                          call 0x40007e9	       104	stdio2.h	CALL_16
0x40007e9	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x40007ea	              0x59	                                 pop rcx	       104	stdio2.h	CALL_16
0x40007eb	      0xe938ffffff	                           jmp 0x4000728	       104	stdio2.h	CALL_16
0x40007f0	      0xe800000000	                          call 0x40007f5	       202	basic_blocks.c	FUNCTION_4
0x40007f5	    0x488b1d000000	            mov rbx, qword [0x040007fc] 	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40007fc	      0xba05000000	                              mov edx, 5	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x4000801	      0xbe00000000	                              mov esi, 0	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x4000806	      0xbf00000000	                              mov edi, 0	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x400080b	      0xe800000000	                          call 0x4000810	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x4000810	    0x488b3d000000	            mov rdi, qword [0x04000817] 	        97	stdio2.h	CALL_13
0x4000817	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x400081a	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_13
0x400081d	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_13
0x4000820	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000825	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000827	      0xe800000000	                          call 0x400082c	        97	stdio2.h	CALL_13
0x400082c	      0xbf01000000	                              mov edi, 1	       130	basic_blocks.c	FUNCTION_4	IF_1	CALL_3
0x4000831	      0xe800000000	                          call 0x4000836	       130	basic_blocks.c	FUNCTION_4	IF_1	CALL_3
print_exec_counts	IF,4:CALL,9:DO,0:functions,0:SWITCH,0:ELSE,1:FOR,3:WHILE,0	166
0x4000930	            0x4157	                                push r15	       252	basic_blocks.c	FUNCTION_6
0x4000932	            0x4156	                                push r14	       252	basic_blocks.c	FUNCTION_6
0x4000934	            0x4155	                                push r13	       252	basic_blocks.c	FUNCTION_6
0x4000936	            0x4154	                                push r12	       252	basic_blocks.c	FUNCTION_6
0x4000938	              0x55	                                push rbp	       252	basic_blocks.c	FUNCTION_6
0x4000939	              0x53	                                push rbx	       252	basic_blocks.c	FUNCTION_6
0x400093a	        0x4883ec38	                           sub rsp, 0x38	       252	basic_blocks.c	FUNCTION_6
0x400093e	    0x448b15000000	           mov r10d, dword [0x04000945] 	       256	basic_blocks.c	FUNCTION_6	IF_1
0x4000945	          0x4585d2	                         test r10d, r10d	       256	basic_blocks.c	FUNCTION_6	IF_1
0x4000948	     0xf844c020000	                            je 0x4000b9a	       256	basic_blocks.c	FUNCTION_6	IF_1
0x400094e	    0xc70500000000	               mov dword [0x04000958], 0	       257	basic_blocks.c	FUNCTION_6	IF_1
0x4000958	    0x8b3d00000000	            mov edi, dword [0x0400095e] 	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x400095e	        0x48c1e703	                              shl rdi, 3	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000962	      0xe800000000	                          call 0x4000967	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000967	    0x488b1d000000	            mov rbx, qword [0x0400096e] 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x400096e	    0x483b1d000000	            cmp rbx, qword [0x04000975] 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000975	      0x4889442420	             mov qword [rsp + 0x20], rax	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x400097a	     0xf8329020000	                           jae 0x4000ba9	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000980	            0x31ed	                            xor ebp, ebp	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000982	            0xeb22	                           jmp 0x40009a6	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000984	         0xf1f4000	                         nop dword [rax]	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000988	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x400098d	            0x89e8	                            mov eax, ebp	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x400098f	          0x83c501	                              add ebp, 1	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000992	        0x48891cc1	            mov qword [rcx + rax*8], rbx	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x4000996	    0x4881c3580100	                          add rbx, 0x158	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x400099d	    0x48391d000000	            cmp qword [0x040009a4], rbx 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x40009a4	            0x763a	                           jbe 0x40009e0	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x40009a6	          0x488b33	                    mov rsi, qword [rbx]	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40009a9	      0xbf00000000	                              mov edi, 0	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40009ae	      0xe800000000	                          call 0x40009b3	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40009b3	          0x4885c0	                           test rax, rax	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40009b6	            0x75d0	                           jne 0x4000988	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40009b8	    0x448b0d000000	            mov r9d, dword [0x040009bf] 	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40009bf	          0x4585c9	                           test r9d, r9d	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40009c2	            0x75d2	                           jne 0x4000996	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40009c4	          0x488b33	                    mov rsi, qword [rbx]	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40009c7	      0xbf00000000	                              mov edi, 0	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40009cc	      0xe800000000	                          call 0x40009d1	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40009d1	          0x4885c0	                           test rax, rax	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40009d4	            0x75c0	                           jne 0x4000996	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40009d6	            0xebb0	                           jmp 0x4000988	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40009d8	     0xf1f84000000	                   nop dword [rax + rax]	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40009e0	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40009e5	            0x89ee	                            mov esi, ebp	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40009e7	      0xb900000000	                              mov ecx, 0	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40009ec	      0xba08000000	                              mov edx, 8	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40009f1	          0x4889df	                            mov rdi, rbx	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40009f4	      0xe800000000	                          call 0x40009f9	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40009f9	            0x85ed	                           test ebp, ebp	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x40009fb	     0xf8432010000	                            je 0x4000b33	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a01	          0x8d45ff	                      lea eax, [rbp - 1]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a04	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a09	      0x488d44c308	              lea rax, [rbx + rax*8 + 8]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a0e	      0x4889442428	             mov qword [rsp + 0x28], rax	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a13	       0xf1f440000	                   nop dword [rax + rax]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a18	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       284	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a1d	          0x4c8b38	                    mov r15, qword [rax]	       284	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a20	        0x4d8b7728	            mov r14, qword [r15 + 0x28] 	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000a24	          0x4d85f6	                           test r14, r14	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000a27	            0x750c	                           jne 0x4000a35	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000a29	    0x448b05000000	            mov r8d, dword [0x04000a30] 	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000a30	          0x4585c0	                           test r8d, r8d	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000a33	            0x7558	                           jne 0x4000a8d	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000a35	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       290	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_6
0x4000a39	          0x4d8b27	                    mov r12, qword [r15]	       291	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000a3c	        0x498b6f10	            mov rbp, qword [r15 + 0x10] 	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a40	        0x418b4f20	            mov ecx, dword [r15 + 0x20] 	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a44	          0x4885c0	                           test rax, rax	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a47	     0xf8429010000	                            je 0x4000b76	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a4d	        0x488b5808	                mov rbx, qword [rax + 8]	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a51	      0xba05000000	                              mov edx, 5	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a56	      0xbe00000000	                              mov esi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a5b	      0xbf00000000	                              mov edi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a60	        0x894c2408	                mov dword [rsp + 8], ecx	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a64	      0xe800000000	                          call 0x4000a69	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000a69	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4000a6d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000a70	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000a75	            0x4156	                                push r14	       104	stdio2.h	CALL_16
0x4000a77	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4000a7b	          0x4d89e1	                             mov r9, r12	       104	stdio2.h	CALL_16
0x4000a7e	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_16
0x4000a81	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4000a84	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000a86	      0xe800000000	                          call 0x4000a8b	       104	stdio2.h	CALL_16
0x4000a8b	              0x5e	                                 pop rsi	       104	stdio2.h	CALL_16
0x4000a8c	              0x5f	                                 pop rdi	       104	stdio2.h	CALL_16
0x4000a8d	    0x498d87880000	                   lea rax, [r15 + 0x88]	       104	stdio2.h	CALL_16
0x4000a94	        0x498d5f38	                   lea rbx, [r15 + 0x38]	       104	stdio2.h	CALL_16
0x4000a98	      0x4889442410	             mov qword [rsp + 0x10], rax	       104	stdio2.h	CALL_16
0x4000a9d	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4000aa0	          0x4c8b33	                    mov r14, qword [rbx]	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000aa3	          0x4d85f6	                           test r14, r14	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000aa6	            0x7475	                            je 0x4000b1d	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000aa8	        0x4c8b6350	            mov r12, qword [rbx + 0x50] 	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000aac	          0x4d85e4	                           test r12, r12	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000aaf	            0x750a	                           jne 0x4000abb	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000ab1	    0x8b0d00000000	            mov ecx, dword [0x04000ab7] 	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000ab7	            0x85c9	                           test ecx, ecx	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000ab9	            0x7557	                           jne 0x4000b12	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x4000abb	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       300	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_8
0x4000abf	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ac3	        0x458b6f20	           mov r13d, dword [r15 + 0x20] 	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ac7	          0x4885c0	                           test rax, rax	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000aca	     0xf8480000000	                            je 0x4000b50	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ad0	        0x488b6808	                mov rbp, qword [rax + 8]	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ad4	      0xba05000000	                              mov edx, 5	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ad9	      0xbe00000000	                              mov esi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ade	      0xbf00000000	                              mov edi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ae3	      0x4c89442408	                 mov qword [rsp + 8], r8	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000ae8	      0xe800000000	                          call 0x4000aed	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000aed	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4000af1	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4000af4	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000af7	            0x4154	                                push r12	       104	stdio2.h	CALL_16
0x4000af9	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       104	stdio2.h	CALL_16
0x4000afe	          0x4d89f1	                             mov r9, r14	       104	stdio2.h	CALL_16
0x4000b01	          0x4489e9	                           mov ecx, r13d	       104	stdio2.h	CALL_16
0x4000b04	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000b09	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000b0b	      0xe800000000	                          call 0x4000b10	       104	stdio2.h	CALL_16
0x4000b10	              0x58	                                 pop rax	       104	stdio2.h	CALL_16
0x4000b11	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x4000b12	        0x4883c308	                              add rbx, 8	       104	stdio2.h	CALL_16
0x4000b16	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000b1b	            0x7583	                           jne 0x4000aa0	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000b1d	    0x488344241808	               add qword [rsp + 0x18], 8	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000b23	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000b28	      0x483b442428	            cmp rax, qword [rsp + 0x28] 	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000b2d	     0xf85e5feffff	                           jne 0x4000a18	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000b33	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000b38	        0x4883c438	                           add rsp, 0x38	       307	basic_blocks.c	FUNCTION_6
0x4000b3c	              0x5b	                                 pop rbx	       307	basic_blocks.c	FUNCTION_6
0x4000b3d	              0x5d	                                 pop rbp	       307	basic_blocks.c	FUNCTION_6
0x4000b3e	            0x415c	                                 pop r12	       307	basic_blocks.c	FUNCTION_6
0x4000b40	            0x415d	                                 pop r13	       307	basic_blocks.c	FUNCTION_6
0x4000b42	            0x415e	                                 pop r14	       307	basic_blocks.c	FUNCTION_6
0x4000b44	            0x415f	                                 pop r15	       307	basic_blocks.c	FUNCTION_6
0x4000b46	      0xe900000000	                           jmp 0x4000b4b	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000b4b	       0xf1f440000	                   nop dword [rax + rax]	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000b50	      0xba05000000	                              mov edx, 5	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b55	      0xbe00000000	                              mov esi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b5a	      0xbf00000000	                              mov edi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b5f	      0x4c89442408	                 mov qword [rsp + 8], r8	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b64	      0xe800000000	                          call 0x4000b69	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b69	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b6e	          0x4889c5	                            mov rbp, rax	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b71	      0xe95effffff	                           jmp 0x4000ad4	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000b76	      0xba05000000	                              mov edx, 5	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b7b	      0xbe00000000	                              mov esi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b80	      0xbf00000000	                              mov edi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b85	        0x894c2408	                mov dword [rsp + 8], ecx	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b89	      0xe800000000	                          call 0x4000b8e	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b8e	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b92	          0x4889c3	                            mov rbx, rax	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b95	      0xe9b7feffff	                           jmp 0x4000a51	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000b9a	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4000b9f	      0xe800000000	                          call 0x4000ba4	       104	stdio2.h	CALL_16
0x4000ba4	      0xe9affdffff	                           jmp 0x4000958	       104	stdio2.h	CALL_16
0x4000ba9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000bae	      0xb900000000	                              mov ecx, 0	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000bb3	      0xba08000000	                              mov edx, 8	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000bb8	            0x31f6	                            xor esi, esi	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000bba	      0xe800000000	                          call 0x4000bbf	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000bbf	      0xe96fffffff	                           jmp 0x4000b33	       278	basic_blocks.c	FUNCTION_6	CALL_4
