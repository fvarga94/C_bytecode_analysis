parse_register	IF,4:DO,0:ELSE,1:WHILE,0:CALL,7:functions,0:SWITCH,0:FOR,0	74
0x40032a0	            0x4155	                                push r13	     10292	tc-i386.c	FUNCTION_121
0x40032a2	            0x4154	                                push r12	     10292	tc-i386.c	FUNCTION_121
0x40032a4	              0x55	                                push rbp	     10292	tc-i386.c	FUNCTION_121
0x40032a5	              0x53	                                push rbx	     10292	tc-i386.c	FUNCTION_121
0x40032a6	          0x4889f3	                            mov rbx, rsi	     10292	tc-i386.c	FUNCTION_121
0x40032a9	        0x4883ec18	                           sub rsp, 0x18	     10292	tc-i386.c	FUNCTION_121
0x40032ad	      0x48897c2408	                mov qword [rsp + 8], rdi	     10292	tc-i386.c	FUNCTION_121
0x40032b2	          0x803f25	                    cmp byte [rdi], 0x25	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40032b5	            0x740a	                            je 0x40032c1	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40032b7	    0x8b0500000000	            mov eax, dword [0x040032bd] 	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40032bd	            0x85c0	                           test eax, eax	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40032bf	            0x741f	                            je 0x40032e0	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40032c1	          0x4889de	                            mov rsi, rbx	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x40032c4	      0xe8e7fcffff	            call sym.parse_real_register	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x40032c9	          0x4885c0	                           test rax, rax	     10299	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40032cc	            0x740b	                            je 0x40032d9	     10299	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40032ce	        0x4883c418	                           add rsp, 0x18	     10324	tc-i386.c	FUNCTION_121
0x40032d2	              0x5b	                                 pop rbx	     10324	tc-i386.c	FUNCTION_121
0x40032d3	              0x5d	                                 pop rbp	     10324	tc-i386.c	FUNCTION_121
0x40032d4	            0x415c	                                 pop r12	     10324	tc-i386.c	FUNCTION_121
0x40032d6	            0x415d	                                 pop r13	     10324	tc-i386.c	FUNCTION_121
0x40032d8	              0xc3	                                     ret	     10324	tc-i386.c	FUNCTION_121
0x40032d9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     10324	tc-i386.c	FUNCTION_121
0x40032de	            0x6690	                                     nop	     10324	tc-i386.c	FUNCTION_121
0x40032e0	    0x4c8b25000000	            mov r12, qword [0x040032e7] 	     10301	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40032e7	    0x48893d000000	            mov qword [0x040032ee], rdi 	     10305	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40032ee	      0x488d7c2408	                      lea rdi, [rsp + 8]	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x40032f3	      0xe800000000	                          call 0x40032f8	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x40032f8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x40032fd	          0x4189c5	                           mov r13d, eax	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4003300	      0xe800000000	                          call 0x4003305	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4003305	          0x4885c0	                           test rax, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4003308	          0x4889c5	                            mov rbp, rax	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x400330b	            0x7411	                            je 0x400331e	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x400330d	          0x4889c7	                            mov rdi, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4003310	      0xe800000000	                          call 0x4003315	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4003315	    0x483b05000000	            cmp rax, qword [0x0400331c] 	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x400331c	            0x741e	                            je 0x400333c	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x400331e	            0x31c0	                            xor eax, eax	     10292	tc-i386.c	FUNCTION_121
0x4003320	    0x488b15000000	            mov rdx, qword [0x04003327] 	     10320	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4003327	          0x44882a	                    mov byte [rdx], r13b	     10320	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x400332a	    0x4c8925000000	            mov qword [0x04003331], r12 	     10321	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x4003331	        0x4883c418	                           add rsp, 0x18	     10324	tc-i386.c	FUNCTION_121
0x4003335	              0x5b	                                 pop rbx	     10324	tc-i386.c	FUNCTION_121
0x4003336	              0x5d	                                 pop rbp	     10324	tc-i386.c	FUNCTION_121
0x4003337	            0x415c	                                 pop r12	     10324	tc-i386.c	FUNCTION_121
0x4003339	            0x415d	                                 pop r13	     10324	tc-i386.c	FUNCTION_121
0x400333b	              0xc3	                                     ret	     10324	tc-i386.c	FUNCTION_121
0x400333c	          0x4889ef	                            mov rdi, rbp	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x400333f	      0xe800000000	                          call 0x4003344	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x4003344	        0x80781805	                cmp byte [rax + 0x18], 5	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4003348	            0x7550	                           jne 0x400339a	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x400334a	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400334e	          0x4885c0	                           test rax, rax	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4003351	            0x7833	                            js 0x4003386	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4003353	    0x8b1500000000	            mov edx, dword [0x04003359] 	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4003359	          0x4839d0	                            cmp rax, rdx	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400335c	            0x7328	                           jae 0x4003386	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400335e	        0x488d0440	                  lea rax, [rax + rax*2]	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4003362	    0x488d04c50000	                        lea rax, [rax*8]	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x400336a	        0xf6401004	               test byte [rax + 0x10], 4	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x400336e	            0x740a	                            je 0x400337a	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4003370	    0xc70500000000	               mov dword [0x0400337a], 3	     10317	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x400337a	    0x488b15000000	            mov rdx, qword [0x04003381] 	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4003381	          0x488913	                    mov qword [rbx], rdx	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4003384	            0xeb9a	                           jmp 0x4003320	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4003386	      0xba00000000	                              mov edx, 0	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400338b	      0xbe4a280000	                         mov esi, 0x284a	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4003390	      0xbf00000000	                              mov edi, 0	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4003395	      0xe800000000	                          call 0x400339a	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400339a	      0xba00000000	                              mov edx, 0	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x400339f	      0xbe48280000	                         mov esi, 0x2848	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x40033a4	      0xbf00000000	                              mov edi, 0	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x40033a9	      0xe800000000	                          call 0x40033ae	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
set_check	IF,5:DO,0:ELSE,5:WHILE,0:CALL,11:functions,0:SWITCH,0:FOR,0	83
0x4000640	            0x4154	                                push r12	      2501	tc-i386.c	FUNCTION_47
0x4000642	              0x55	                                push rbp	      2501	tc-i386.c	FUNCTION_47
0x4000643	      0xba00000000	                              mov edx, 0	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4000648	              0x53	                                push rbx	      2501	tc-i386.c	FUNCTION_47
0x4000649	      0xbb00000000	                              mov ebx, 0	      2508	tc-i386.c	FUNCTION_47	IF_1
0x400064e	        0x4883ec10	                           sub rsp, 0x10	      2501	tc-i386.c	FUNCTION_47
0x4000652	    0x64488b042528	                mov rax, qword fs:[0x28]	      2501	tc-i386.c	FUNCTION_47
0x400065b	      0x4889442408	                mov qword [rsp + 8], rax	      2501	tc-i386.c	FUNCTION_47
0x4000660	            0x31c0	                            xor eax, eax	      2501	tc-i386.c	FUNCTION_47
0x4000662	            0x85ff	                           test edi, edi	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4000664	      0xb800000000	                              mov eax, 0	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4000669	        0x480f45d8	                         cmovne rbx, rax	      2508	tc-i386.c	FUNCTION_47	IF_1
0x400066d	      0xb800000000	                              mov eax, 0	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4000672	        0x480f44c2	                          cmove rax, rdx	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4000676	    0x488b15000000	            mov rdx, qword [0x0400067d] 	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x400067d	          0x4989c4	                            mov r12, rax	      2508	tc-i386.c	FUNCTION_47	IF_1
0x4000680	           0xfb602	                   movzx eax, byte [rdx]	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4000683	            0x3c20	                            cmp al, 0x20	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4000685	     0xf84b5000000	                            je 0x4000740	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x400068b	    0x80b800000000	                       cmp byte [rax], 0	      2518	tc-i386.c	FUNCTION_47	IF_2
0x4000692	            0x753c	                           jne 0x40006d0	      2518	tc-i386.c	FUNCTION_47	IF_2
0x4000694	          0x4889e7	                            mov rdi, rsp	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x4000697	      0xe800000000	                          call 0x400069c	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x400069c	            0x89c5	                            mov ebp, eax	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x400069e	        0x488b0424	                    mov rax, qword [rsp]	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40006a2	      0xbf00000000	                              mov edi, 0	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40006a7	      0xb905000000	                              mov ecx, 5	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40006ac	          0x4889c6	                            mov rsi, rax	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40006af	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40006b1	            0x755d	                           jne 0x4000710	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40006b3	    0x41c704240000	                      mov dword [r12], 0	      2524	tc-i386.c	FUNCTION_47	IF_2	IF_3
0x40006bb	        0x400fbefd	                          movsx edi, bpl	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x40006bf	      0xe800000000	                          call 0x40006c4	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x40006c4	            0xeb28	                           jmp 0x40006ee	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x40006c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x40006d0	      0xbe00000000	                              mov esi, 0	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006d5	            0x31ff	                            xor edi, edi	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006d7	      0xba05000000	                              mov edx, 5	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006dc	      0xe800000000	                          call 0x40006e1	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006e1	          0x4889de	                            mov rsi, rbx	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006e4	          0x4889c7	                            mov rdi, rax	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006e7	            0x31c0	                            xor eax, eax	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006e9	      0xe800000000	                          call 0x40006ee	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x40006ee	      0xe800000000	                          call 0x40006f3	      2536	tc-i386.c	FUNCTION_47	CALL_11
0x40006f3	      0x488b442408	                mov rax, qword [rsp + 8]	      2537	tc-i386.c	FUNCTION_47
0x40006f8	    0x644833042528	                xor rax, qword fs:[0x28]	      2537	tc-i386.c	FUNCTION_47
0x4000701	     0xf8584000000	                           jne 0x400078b	      2537	tc-i386.c	FUNCTION_47
0x4000707	        0x4883c410	                           add rsp, 0x10	      2537	tc-i386.c	FUNCTION_47
0x400070b	              0x5b	                                 pop rbx	      2537	tc-i386.c	FUNCTION_47
0x400070c	              0x5d	                                 pop rbp	      2537	tc-i386.c	FUNCTION_47
0x400070d	            0x415c	                                 pop r12	      2537	tc-i386.c	FUNCTION_47
0x400070f	              0xc3	                                     ret	      2537	tc-i386.c	FUNCTION_47
0x4000710	      0xbf00000000	                              mov edi, 0	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x4000715	      0xb908000000	                              mov ecx, 8	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x400071a	          0x4889c6	                            mov rsi, rax	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x400071d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x400071f	            0x7437	                            je 0x4000758	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x4000721	      0xbf00000000	                              mov edi, 0	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4000726	      0xb906000000	                              mov ecx, 6	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x400072b	          0x4889c6	                            mov rsi, rax	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x400072e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4000730	            0x7536	                           jne 0x4000768	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4000732	    0x41c704240200	                      mov dword [r12], 2	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x400073a	      0xe97cffffff	                           jmp 0x40006bb	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x400073f	              0x90	                                     nop	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x4000740	        0x488d4201	                      lea rax, [rdx + 1]	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4000744	    0x488905000000	            mov qword [0x0400074b], rax 	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x400074b	         0xfb64201	               movzx eax, byte [rdx + 1]	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x400074f	      0xe937ffffff	                           jmp 0x400068b	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4000754	         0xf1f4000	                         nop dword [rax]	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4000758	    0x41c704240100	                      mov dword [r12], 1	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x4000760	      0xe956ffffff	                           jmp 0x40006bb	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x4000765	           0xf1f00	                         nop dword [rax]	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x4000768	            0x31ff	                            xor edi, edi	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400076a	      0xba05000000	                              mov edx, 5	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400076f	      0xbe00000000	                              mov esi, 0	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4000774	      0xe800000000	                          call 0x4000779	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4000779	          0x4889de	                            mov rsi, rbx	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400077c	          0x4889c7	                            mov rdi, rax	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400077f	            0x31c0	                            xor eax, eax	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4000781	      0xe800000000	                          call 0x4000786	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4000786	      0xe930ffffff	                           jmp 0x40006bb	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400078b	      0xe800000000	               call sym.set_intel_syntax	      2537	tc-i386.c	FUNCTION_47
i386_print_statistics	IF,0:DO,0:ELSE,0:WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,0	10
0x400ba40	    0x488b15000000	            mov rdx, qword [0x0400ba47] 	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x400ba47	              0x53	                                push rbx	      2918	tc-i386.c	FUNCTION_53
0x400ba48	      0xbe00000000	                              mov esi, 0	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x400ba4d	          0x4889fb	                            mov rbx, rdi	      2918	tc-i386.c	FUNCTION_53
0x400ba50	      0xe800000000	                          call 0x400ba55	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x400ba55	          0x4889df	                            mov rdi, rbx	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x400ba58	    0x488b15000000	            mov rdx, qword [0x0400ba5f] 	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x400ba5f	      0xbe00000000	                              mov esi, 0	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x400ba64	              0x5b	                                 pop rbx	      2921	tc-i386.c	FUNCTION_53
0x400ba65	      0xe900000000	                           jmp 0x400ba6a	      2920	tc-i386.c	FUNCTION_53	CALL_2
i386_generate_nops	IF,13:DO,0:ELSE,9:WHILE,0:CALL,9:functions,0:SWITCH,3:FOR,0	223
0x400b2f0	            0x4157	                                push r15	      1301	tc-i386.c	FUNCTION_6
0x400b2f2	            0x4156	                                push r14	      1301	tc-i386.c	FUNCTION_6
0x400b2f4	          0x4989f6	                            mov r14, rsi	      1301	tc-i386.c	FUNCTION_6
0x400b2f7	            0x4155	                                push r13	      1301	tc-i386.c	FUNCTION_6
0x400b2f9	            0x4154	                                push r12	      1301	tc-i386.c	FUNCTION_6
0x400b2fb	          0x4189cc	                           mov r12d, ecx	      1301	tc-i386.c	FUNCTION_6
0x400b2fe	              0x55	                                push rbp	      1301	tc-i386.c	FUNCTION_6
0x400b2ff	              0x53	                                push rbx	      1301	tc-i386.c	FUNCTION_6
0x400b300	          0x4889fd	                            mov rbp, rdi	      1301	tc-i386.c	FUNCTION_6
0x400b303	          0x4889d3	                            mov rbx, rdx	      1301	tc-i386.c	FUNCTION_6
0x400b306	        0x4883ec18	                           sub rsp, 0x18	      1301	tc-i386.c	FUNCTION_6
0x400b30a	          0x8b475c	            mov eax, dword [rdi + 0x5c] 	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b30d	          0x83f803	                              cmp eax, 3	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b310	            0x741e	                            je 0x400b330	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b312	          0x83f80a	                            cmp eax, 0xa	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b315	            0x7419	                            je 0x400b330	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b317	        0x4883c418	                           add rsp, 0x18	      1502	tc-i386.c	FUNCTION_6
0x400b31b	              0x5b	                                 pop rbx	      1502	tc-i386.c	FUNCTION_6
0x400b31c	              0x5d	                                 pop rbp	      1502	tc-i386.c	FUNCTION_6
0x400b31d	            0x415c	                                 pop r12	      1502	tc-i386.c	FUNCTION_6
0x400b31f	            0x415d	                                 pop r13	      1502	tc-i386.c	FUNCTION_6
0x400b321	            0x415e	                                 pop r14	      1502	tc-i386.c	FUNCTION_6
0x400b323	            0x415f	                                 pop r15	      1502	tc-i386.c	FUNCTION_6
0x400b325	              0xc3	                                     ret	      1502	tc-i386.c	FUNCTION_6
0x400b326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1502	tc-i386.c	FUNCTION_6
0x400b330	    0x8b3500000000	            mov esi, dword [0x0400b336] 	      1330	tc-i386.c	FUNCTION_6	IF_1
0x400b336	          0x83fe01	                              cmp esi, 1	      1330	tc-i386.c	FUNCTION_6	IF_1
0x400b339	            0x7475	                            je 0x400b3b0	      1330	tc-i386.c	FUNCTION_6	IF_1
0x400b33b	          0x8b5564	            mov edx, dword [rbp + 0x64] 	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400b33e	            0x85d2	                           test edx, edx	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400b340	            0x755e	                           jne 0x400b3a0	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400b342	    0x8b0d00000000	            mov ecx, dword [0x0400b348] 	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b348	          0x83f915	                           cmp ecx, 0x15	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b34b	            0x772b	                            ja 0x400b378	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b34d	      0xba01000000	                              mov edx, 1	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b352	          0x48d3e2	                             shl rdx, cl	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b355	    0xf7c21e100100	                       test edx, 0x1101e	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b35b	     0xf8505010000	                           jne 0x400b466	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b361	    0xf7c2e0ef3e00	                      test edx, 0x3eefe0	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b367	     0xf8513010000	                           jne 0x400b480	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b36d	            0x85c9	                           test ecx, ecx	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b36f	     0xf84eb000000	                            je 0x400b460	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b375	           0xf1f00	                         nop dword [rax]	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b378	    0x48c704240000	                      mov qword [rsp], 0	      1302	tc-i386.c	FUNCTION_6
0x400b380	          0x4585e4	                         test r12d, r12d	      1441	tc-i386.c	FUNCTION_6	IF_7
0x400b383	      0xb907000000	                              mov ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b388	    0x41bd0b000000	                           mov r13d, 0xb	      1435	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b38e	            0x7538	                           jne 0x400b3c8	      1441	tc-i386.c	FUNCTION_6	IF_7
0x400b390	          0x83f80a	                            cmp eax, 0xa	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b393	          0x4589ec	                          mov r12d, r13d	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b396	            0x7539	                           jne 0x400b3d1	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b398	            0xeb3b	                           jmp 0x400b3d5	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b39a	    0x660f1f440000	                    nop word [rax + rax]	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b3a0	        0x837d7815	           cmp dword [rbp + 0x78], 0x15 	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b3a4	            0x77d2	                            ja 0x400b378	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b3a6	          0x8b5578	            mov edx, dword [rbp + 0x78] 	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b3a9	    0xff24d5000000	                       jmp qword [rdx*8]	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b3b0	      0xb902000000	                              mov ecx, 2	      1335	tc-i386.c	FUNCTION_6	IF_1
0x400b3b5	    0x41bd04000000	                             mov r13d, 4	      1333	tc-i386.c	FUNCTION_6	IF_1
0x400b3bb	    0x48c704240000	                      mov qword [rsp], 0	      1332	tc-i386.c	FUNCTION_6	IF_1
0x400b3c3	          0x4585e4	                         test r12d, r12d	      1441	tc-i386.c	FUNCTION_6	IF_7
0x400b3c6	            0x74c8	                            je 0x400b390	      1441	tc-i386.c	FUNCTION_6	IF_7
0x400b3c8	          0x83f80a	                            cmp eax, 0xa	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b3cb	     0xf847f010000	                            je 0x400b550	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b3d1	        0x48895d18	            mov qword [rbp + 0x18], rbx 	      1457	tc-i386.c	FUNCTION_6	ELSE_7
0x400b3d5	          0x4889d8	                            mov rax, rbx	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b3d8	            0x4899	                                     cqo	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b3da	          0x49f7fd	                                idiv r13	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b3dd	          0x4839c8	                            cmp rax, rcx	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b3e0	     0xf8ebe000000	                           jle 0x400b4a4	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b3e6	        0x488d43fe	                      lea rax, [rbx - 2]	      1462	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b3ea	          0x4889c2	                            mov rdx, rax	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b3ed	          0x83e27f	                           and edx, 0x7f	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b3f0	          0x4839d0	                            cmp rax, rdx	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b3f3	     0xf843f010000	                            je 0x400b538	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b3f9	          0x83fe01	                              cmp esi, 1	      1475	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b3fc	     0xf848e010000	                            je 0x400b590	      1475	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b402	        0x41c606e9	                    mov byte [r14], 0xe9	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400b406	      0xba05000000	                              mov edx, 5	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400b40b	    0x41bd05000000	                             mov r13d, 5	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400b411	      0xb801000000	                              mov eax, 1	      1484	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400b416	          0x4829d3	                            sub rbx, rdx	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400b419	          0x4889da	                            mov rdx, rbx	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b41c	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b422	          0x4839d3	                            cmp rbx, rdx	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b425	            0x7469	                            je 0x400b490	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b427	      0xba05000000	                              mov edx, 5	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b42c	      0xbe00000000	                              mov esi, 0	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b431	            0x31ff	                            xor edi, edi	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b433	      0xe800000000	                          call 0x400b438	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b438	          0x8b7548	            mov esi, dword [rbp + 0x48] 	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b43b	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b43f	        0x4883c418	                           add rsp, 0x18	      1502	tc-i386.c	FUNCTION_6
0x400b443	              0x5b	                                 pop rbx	      1502	tc-i386.c	FUNCTION_6
0x400b444	              0x5d	                                 pop rbp	      1502	tc-i386.c	FUNCTION_6
0x400b445	            0x415c	                                 pop r12	      1502	tc-i386.c	FUNCTION_6
0x400b447	            0x415d	                                 pop r13	      1502	tc-i386.c	FUNCTION_6
0x400b449	            0x415e	                                 pop r14	      1502	tc-i386.c	FUNCTION_6
0x400b44b	            0x415f	                                 pop r15	      1502	tc-i386.c	FUNCTION_6
0x400b44d	          0x4889c2	                            mov rdx, rax	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b450	            0x31c0	                            xor eax, eax	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b452	      0xe900000000	                           jmp 0x400b457	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b457	    0x660f1f840000	                    nop word [rax + rax]	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b460	        0x807d6800	                cmp byte [rbp + 0x68], 0	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x400b464	            0x781a	                            js 0x400b480	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x400b466	      0xb902000000	                              mov ecx, 2	      1431	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x400b46b	    0x41bd07000000	                             mov r13d, 7	      1429	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x400b471	    0x48c704240000	                      mov qword [rsp], 0	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b479	      0xe945ffffff	                           jmp 0x400b3c3	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b47e	            0x6690	                                     nop	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b480	    0x48c704240000	                      mov qword [rsp], 0	      1367	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x400b488	      0xe9f3feffff	                           jmp 0x400b380	      1367	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x400b48d	           0xf1f00	                         nop dword [rax]	      1367	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	ELSE_2
0x400b490	        0x498d3c06	                    lea rdi, [r14 + rax]	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b494	      0xba04000000	                              mov edx, 4	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b499	          0x4889de	                            mov rsi, rbx	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b49c	          0x4d01ee	                            add r14, r13	      1496	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400b49f	      0xe800000000	                          call 0x400b4a4	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b4a4	        0x488b0424	                    mov rax, qword [rsp]	      1252	tc-i386.c	FUNCTION_3
0x400b4a8	          0x4963ec	                        movsxd rbp, r12d	      1252	tc-i386.c	FUNCTION_3
0x400b4ab	      0x4c8b6ce8f8	        mov r13, qword [rax + rbp*8 - 8]	      1252	tc-i386.c	FUNCTION_3
0x400b4b0	          0x4d85ed	                           test r13, r13	      1255	tc-i386.c	FUNCTION_3	IF_1
0x400b4b3	     0xf84f7000000	                            je 0x400b5b0	      1255	tc-i386.c	FUNCTION_3	IF_1
0x400b4b9	            0x89d8	                            mov eax, ebx	      1261	tc-i386.c	FUNCTION_3
0x400b4bb	              0x99	                                     cdq	      1261	tc-i386.c	FUNCTION_3
0x400b4bc	          0x41f7fc	                               idiv r12d	      1261	tc-i386.c	FUNCTION_3
0x400b4bf	            0x29d3	                            sub ebx, edx	      1263	tc-i386.c	FUNCTION_3
0x400b4c1	        0x8954240c	              mov dword [rsp + 0xc], edx	      1261	tc-i386.c	FUNCTION_3
0x400b4c5	            0x85db	                           test ebx, ebx	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4c7	     0xf8e0f010000	                           jle 0x400b5dc	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4cd	          0x4d89f0	                             mov r8, r14	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4d0	          0x4589e7	                          mov r15d, r12d	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4d3	       0xf1f440000	                   nop dword [rax + rax]	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4d8	          0x4c89c7	                             mov rdi, r8	        53	string3.h	FUNCTION_144	CALL_3
0x400b4db	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_144	CALL_3
0x400b4de	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_144	CALL_3
0x400b4e1	      0xe800000000	                          call 0x400b4e6	        53	string3.h	FUNCTION_144	CALL_3
0x400b4e6	          0x4589f9	                           mov r9d, r15d	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4e9	          0x4989c0	                             mov r8, rax	        53	string3.h	FUNCTION_144	CALL_3
0x400b4ec	          0x4501e7	                          add r15d, r12d	        53	string3.h	FUNCTION_144	CALL_3
0x400b4ef	          0x4901e8	                             add r8, rbp	        53	string3.h	FUNCTION_144	CALL_3
0x400b4f2	          0x4439cb	                            cmp ebx, r9d	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4f5	            0x7fe1	                            jg 0x400b4d8	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b4f7	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1267	tc-i386.c	FUNCTION_3	IF_2
0x400b4fb	            0x85c0	                           test eax, eax	      1267	tc-i386.c	FUNCTION_3	IF_2
0x400b4fd	     0xf8414feffff	                            je 0x400b317	      1267	tc-i386.c	FUNCTION_3	IF_2
0x400b503	          0x4863d0	                         movsxd rdx, eax	      1269	tc-i386.c	FUNCTION_3	IF_2
0x400b506	        0x488b0424	                    mov rax, qword [rsp]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x400b50a	      0x488b74d0f8	        mov rsi, qword [rax + rdx*8 - 8]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x400b50f	          0x4885f6	                           test rsi, rsi	      1270	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b512	     0xf84cc000000	                            je 0x400b5e4	      1270	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b518	        0x4883c418	                           add rsp, 0x18	      1502	tc-i386.c	FUNCTION_6
0x400b51c	          0x4963f9	                         movsxd rdi, r9d	        53	string3.h	FUNCTION_144	CALL_3
0x400b51f	              0x5b	                                 pop rbx	      1502	tc-i386.c	FUNCTION_6
0x400b520	          0x4c01f7	                            add rdi, r14	        53	string3.h	FUNCTION_144	CALL_3
0x400b523	              0x5d	                                 pop rbp	      1502	tc-i386.c	FUNCTION_6
0x400b524	            0x415c	                                 pop r12	      1502	tc-i386.c	FUNCTION_6
0x400b526	            0x415d	                                 pop r13	      1502	tc-i386.c	FUNCTION_6
0x400b528	            0x415e	                                 pop r14	      1502	tc-i386.c	FUNCTION_6
0x400b52a	            0x415f	                                 pop r15	      1502	tc-i386.c	FUNCTION_6
0x400b52c	      0xe900000000	                           jmp 0x400b531	        53	string3.h	FUNCTION_144	CALL_3
0x400b531	     0xf1f80000000	                         nop dword [rax]	        53	string3.h	FUNCTION_144	CALL_3
0x400b538	        0x41c606eb	                    mov byte [r14], 0xeb	      1467	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b53c	        0x41884601	                  mov byte [r14 + 1], al	      1468	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b540	          0x4889c3	                            mov rbx, rax	      1468	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b543	        0x4983c602	                              add r14, 2	      1469	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b547	      0xe958ffffff	                           jmp 0x400b4a4	      1469	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b54c	         0xf1f4000	                         nop dword [rax]	      1469	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b550	          0x4539e5	                          cmp r13d, r12d	      1447	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400b553	     0xf8d7cfeffff	                           jge 0x400b3d5	      1447	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400b559	      0xba05000000	                              mov edx, 5	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b55e	      0xbe00000000	                              mov esi, 0	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b563	            0x31ff	                            xor edi, edi	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b565	      0xe800000000	                          call 0x400b56a	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b56a	          0x8b7548	            mov esi, dword [rbp + 0x48] 	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b56d	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b571	        0x4883c418	                           add rsp, 0x18	      1502	tc-i386.c	FUNCTION_6
0x400b575	              0x5b	                                 pop rbx	      1502	tc-i386.c	FUNCTION_6
0x400b576	          0x4589e8	                           mov r8d, r13d	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b579	          0x4489e1	                           mov ecx, r12d	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b57c	          0x4889c2	                            mov rdx, rax	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b57f	              0x5d	                                 pop rbp	      1502	tc-i386.c	FUNCTION_6
0x400b580	            0x415c	                                 pop r12	      1502	tc-i386.c	FUNCTION_6
0x400b582	            0x415d	                                 pop r13	      1502	tc-i386.c	FUNCTION_6
0x400b584	            0x415e	                                 pop r14	      1502	tc-i386.c	FUNCTION_6
0x400b586	            0x415f	                                 pop r15	      1502	tc-i386.c	FUNCTION_6
0x400b588	            0x31c0	                            xor eax, eax	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b58a	      0xe900000000	                           jmp 0x400b58f	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b58f	              0x90	                                     nop	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b590	        0x41c60666	                    mov byte [r14], 0x66	      1477	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b594	      0x41c64601e9	                mov byte [r14 + 1], 0xe9	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b599	      0xba06000000	                              mov edx, 6	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b59e	    0x41bd06000000	                             mov r13d, 6	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b5a4	      0xb802000000	                              mov eax, 2	      1479	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b5a9	      0xe968feffff	                           jmp 0x400b416	      1479	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b5ae	            0x6690	                                     nop	      1479	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b5b0	        0x4183ec01	                             sub r12d, 1	      1257	tc-i386.c	FUNCTION_3	IF_1
0x400b5b4	          0x4963ec	                        movsxd rbp, r12d	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400b5b7	      0x4c8b6ce8f8	        mov r13, qword [rax + rbp*8 - 8]	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400b5bc	      0xe9f8feffff	                           jmp 0x400b4b9	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400b5c1	     0xf1f80000000	                         nop dword [rax]	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400b5c8	      0xba00000000	                              mov edx, 0	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b5cd	      0xbe6a050000	                          mov esi, 0x56a	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b5d2	      0xbf00000000	                              mov edi, 0	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b5d7	      0xe800000000	                          call 0x400b5dc	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b5dc	          0x4531c9	                            xor r9d, r9d	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b5df	      0xe913ffffff	                           jmp 0x400b4f7	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b5e4	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      1274	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b5e8	          0x4963f9	                         movsxd rdi, r9d	        53	string3.h	FUNCTION_144	CALL_3
0x400b5eb	          0x4989c7	                            mov r15, rax	        53	string3.h	FUNCTION_144	CALL_3
0x400b5ee	          0x4c01f7	                            add rdi, r14	        53	string3.h	FUNCTION_144	CALL_3
0x400b5f1	      0x44894c240c	              mov dword [rsp + 0xc], r9d	        53	string3.h	FUNCTION_144	CALL_3
0x400b5f6	          0x83eb01	                              sub ebx, 1	      1274	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b5f9	          0x4863d3	                         movsxd rdx, ebx	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b5fc	      0x488b74d0f8	        mov rsi, qword [rax + rdx*8 - 8]	        53	string3.h	FUNCTION_144	CALL_3
0x400b601	      0xe800000000	                          call 0x400b606	        53	string3.h	FUNCTION_144	CALL_3
0x400b606	          0x498b17	                    mov rdx, qword [r15]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b609	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b60e	           0xfb612	                   movzx edx, byte [rdx]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b611	        0x418d0419	                     lea eax, [r9 + rbx]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b615	            0x4898	                                    cdqe	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b617	        0x41881406	                mov byte [r14 + rax], dl	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b61b	      0xe9f7fcffff	                           jmp 0x400b317	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
i386_index_check	IF,11:DO,0:ELSE,4:WHILE,0:CALL,12:functions,0:SWITCH,0:FOR,0	268
0x4004020	            0x4156	                                push r14	      9103	tc-i386.c	FUNCTION_109
0x4004022	            0x4155	                                push r13	      9103	tc-i386.c	FUNCTION_109
0x4004024	            0x4154	                                push r12	      9103	tc-i386.c	FUNCTION_109
0x4004026	              0x55	                                push rbp	      9103	tc-i386.c	FUNCTION_109
0x4004027	          0x4889fd	                            mov rbp, rdi	      9103	tc-i386.c	FUNCTION_109
0x400402a	              0x53	                                push rbx	      9103	tc-i386.c	FUNCTION_109
0x400402b	        0x4883ec10	                           sub rsp, 0x10	      9103	tc-i386.c	FUNCTION_109
0x400402f	    0x64488b042528	                mov rax, qword fs:[0x28]	      9103	tc-i386.c	FUNCTION_109
0x4004038	      0x4889442408	                mov qword [rsp + 8], rax	      9103	tc-i386.c	FUNCTION_109
0x400403d	            0x31c0	                            xor eax, eax	      9103	tc-i386.c	FUNCTION_109
0x400403f	    0x803d00000000	                cmp byte [0x04004046], 0	      9049	tc-i386.c	FUNCTION_108	IF_1
0x4004046	     0xf84cc000000	                            je 0x4004118	      9049	tc-i386.c	FUNCTION_108	IF_1
0x400404c	    0x448b15000000	           mov r10d, dword [0x04004053] 	      9050	tc-i386.c	FUNCTION_108	IF_1
0x4004053	            0x31db	                            xor ebx, ebx	      9050	tc-i386.c	FUNCTION_108	IF_1
0x4004055	          0x4585d2	                         test r10d, r10d	      9050	tc-i386.c	FUNCTION_108	IF_1
0x4004058	           0xf94c3	                                 sete bl	      9050	tc-i386.c	FUNCTION_108	IF_1
0x400405b	    0x488b0d000000	            mov rcx, qword [0x04004062] 	      9107	tc-i386.c	FUNCTION_109	IF_1
0x4004062	    0x48b800000001	                movabs rax, 0x2001000000	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400406c	          0x488b11	                    mov rdx, qword [rcx]	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400406f	        0x48234228	             and rax, qword [rdx + 0x28]	      9107	tc-i386.c	FUNCTION_109	IF_1
0x4004073	    0x483d00000001	                      cmp rax, 0x1000000	      9107	tc-i386.c	FUNCTION_109	IF_1
0x4004079	     0xf84a9000000	                            je 0x4004128	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400407f	          0x83fb01	                              cmp ebx, 1	      9174	tc-i386.c	FUNCTION_109	ELSE_3	IF_6
0x4004082	     0xf8418010000	                            je 0x40041a0	      9174	tc-i386.c	FUNCTION_109	ELSE_3	IF_6
0x4004088	    0x488b05000000	            mov rax, qword [0x0400408f] 	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400408f	          0x4885c0	                           test rax, rax	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004092	            0x7413	                            je 0x40040a7	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004094	          0x83fb02	                              cmp ebx, 2	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004097	     0xf84b3020000	                            je 0x4004350	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400409d	        0x80780b00	                 cmp byte [rax + 0xb], 0	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040a1	     0xf8969010000	                           jns 0x4004210	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040a7	    0x488b0d000000	            mov rcx, qword [0x040040ae] 	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040ae	          0x4885c9	                           test rcx, rcx	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040b1	            0x7437	                            je 0x40040ea	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040b3	         0xfb6710c	            movzx esi, byte [rcx + 0xc] 	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040b7	        0x40f6c638	                          test sil, 0x38	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040bb	            0x752d	                           jne 0x40040ea	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040bd	          0x83fb02	                              cmp ebx, 2	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040c0	     0xf84a2030000	                            je 0x4004468	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040c6	        0x80790b00	                 cmp byte [rcx + 0xb], 0	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040ca	            0x7814	                            js 0x40040e0	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040cc	        0x807911fd	            cmp byte [rcx + 0x11], 0xfd 	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040d0	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40040d5	     0xf85ec000000	                           jne 0x40041c7	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040db	       0xf1f440000	                   nop dword [rax + rax]	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040e0	        0xf6410a40	            test byte [rcx + 0xa], 0x40 	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040e4	     0xf845c030000	                            je 0x4004446	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40040ea	          0x8b520c	              mov edx, dword [rdx + 0xc]	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x40040ed	    0x81fa1b0ff300	                       cmp edx, 0xf30f1b	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x40040f3	     0xf845f010000	                            je 0x4004258	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x40040f9	          0x83e2fe	                     and edx, 0xfffffffe	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x40040fc	    0x81fa1a0f0000	                          cmp edx, 0xf1a	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x4004102	     0xf84e8020000	                            je 0x40043f0	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x4004108	      0xb801000000	                              mov eax, 1	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400410d	      0xe9d8000000	                           jmp 0x40041ea	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x4004112	    0x660f1f440000	                    nop word [rax + rax]	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x4004118	      0xe823feffff	    call sym.i386_addressing_mode.part.7	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400411d	            0x89c3	                            mov ebx, eax	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400411f	      0xe937ffffff	                           jmp 0x400405b	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x4004124	         0xf1f4000	                         nop dword [rax]	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x4004128	        0x488b4908	                mov rcx, qword [rcx + 8]	      9109	tc-i386.c	FUNCTION_109	IF_1
0x400412c	        0xf641cb01	               test byte [rcx - 0x35], 1	      9109	tc-i386.c	FUNCTION_109	IF_1
0x4004130	     0xf840a010000	                            je 0x4004240	      9109	tc-i386.c	FUNCTION_109	IF_1
0x4004136	        0xf6422c01	               test byte [rdx + 0x2c], 1	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400413a	     0xf8450010000	                            je 0x4004290	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x4004140	        0xf641d640	           test byte [rcx - 0x2a], 0x40 	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004144	            0x742e	                            je 0x4004174	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004146	         0xfb641d7	            movzx eax, byte [rcx - 0x29]	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400414a	    0x8b3d00000000	            mov edi, dword [0x04004150] 	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004150	    0x448b05000000	            mov r8d, dword [0x04004157] 	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004157	          0xc0e802	                               shr al, 2	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400415a	          0x83e001	                              and eax, 1	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x400415d	            0x85ff	                           test edi, edi	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400415f	        0x400f94c6	                                sete sil	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004163	          0x4585c0	                           test r8d, r8d	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004166	           0xf94c2	                                 sete dl	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004169	          0x4038d6	                             cmp sil, dl	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400416c	            0x7410	                            je 0x400417e	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400416e	        0xf641de40	           test byte [rcx - 0x22], 0x40 	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004172	            0x740a	                            je 0x400417e	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004174	         0xfb641df	            movzx eax, byte [rcx - 0x21]	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4004178	          0xc0e802	                               shr al, 2	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400417b	          0x83e001	                              and eax, 1	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400417e	          0x83e03f	                           and eax, 0x3f	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x4004181	            0x89da	                            mov edx, ebx	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x4004183	    0x488b3d000000	            mov rdi, qword [0x0400418a] 	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400418a	        0x488d0450	                  lea rax, [rax + rdx*2]	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400418e	    0x488b34c50000	                  mov rsi, qword [rax*8]	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x4004196	      0xe800000000	                          call 0x400419b	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400419b	      0xe906010000	                           jmp 0x40042a6	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40041a0	    0x488b15000000	            mov rdx, qword [0x040041a7] 	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40041a7	          0x4885d2	                           test rdx, rdx	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40041aa	     0xf8488020000	                            je 0x4004438	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40041b0	         0xfb7420a	            movzx eax, word [rdx + 0xa] 	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40041b4	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40041b9	        0x66254040	                          and ax, 0x4040	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40041bd	        0x663d4040	                          cmp ax, 0x4040	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40041c1	     0xf84d9010000	                            je 0x40043a0	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40041c7	      0xba05000000	                              mov edx, 5	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041cc	      0xbe00000000	                              mov esi, 0	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041d1	            0x31ff	                            xor edi, edi	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041d3	      0xe800000000	                          call 0x40041d8	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041d8	          0x4889da	                            mov rdx, rbx	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041db	          0x4889c7	                            mov rdi, rax	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041de	          0x4889ee	                            mov rsi, rbp	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041e1	            0x31c0	                            xor eax, eax	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041e3	      0xe800000000	                          call 0x40041e8	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40041e8	            0x31c0	                            xor eax, eax	      9170	tc-i386.c	FUNCTION_109	IF_1
0x40041ea	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      9230	tc-i386.c	FUNCTION_109
0x40041ef	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9230	tc-i386.c	FUNCTION_109
0x40041f8	     0xf85b2020000	                           jne 0x40044b0	      9230	tc-i386.c	FUNCTION_109
0x40041fe	        0x4883c410	                           add rsp, 0x10	      9230	tc-i386.c	FUNCTION_109
0x4004202	              0x5b	                                 pop rbx	      9230	tc-i386.c	FUNCTION_109
0x4004203	              0x5d	                                 pop rbp	      9230	tc-i386.c	FUNCTION_109
0x4004204	            0x415c	                                 pop r12	      9230	tc-i386.c	FUNCTION_109
0x4004206	            0x415d	                                 pop r13	      9230	tc-i386.c	FUNCTION_109
0x4004208	            0x415e	                                 pop r14	      9230	tc-i386.c	FUNCTION_109
0x400420a	              0xc3	                                     ret	      9230	tc-i386.c	FUNCTION_109
0x400420b	       0xf1f440000	                   nop dword [rax + rax]	      9230	tc-i386.c	FUNCTION_109
0x4004210	    0x48833d000000	               cmp qword [0x04004218], 0	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004218	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400421d	            0x75a8	                           jne 0x40041c7	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400421f	         0xfb67011	           movzx esi, byte [rax + 0x11] 	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004223	      0xb9fe000000	                           mov ecx, 0xfe	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004228	            0x39ce	                            cmp esi, ecx	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400422a	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400422f	            0x7596	                           jne 0x40041c7	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004231	      0xe9b4feffff	                           jmp 0x40040ea	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004240	    0x448b0d000000	            mov r9d, dword [0x04004247] 	      9110	tc-i386.c	FUNCTION_109	IF_1
0x4004247	          0x4585c9	                           test r9d, r9d	      9110	tc-i386.c	FUNCTION_109	IF_1
0x400424a	     0xf842ffeffff	                            je 0x400407f	      9110	tc-i386.c	FUNCTION_109	IF_1
0x4004250	      0xe9e1feffff	                           jmp 0x4004136	      9110	tc-i386.c	FUNCTION_109	IF_1
0x4004255	           0xf1f00	                         nop dword [rax]	      9110	tc-i386.c	FUNCTION_109	IF_1
0x4004258	          0x4885c0	                           test rax, rax	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400425b	     0xf84a7feffff	                            je 0x4004108	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x4004261	        0x807811ff	            cmp byte [rax + 0x11], 0xff 	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x4004265	     0xf859dfeffff	                           jne 0x4004108	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400426b	      0xba05000000	                              mov edx, 5	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x4004270	      0xbe00000000	                              mov esi, 0	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x4004275	            0x31ff	                            xor edi, edi	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x4004277	      0xe800000000	                          call 0x400427c	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400427c	          0x4889ee	                            mov rsi, rbp	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x400427f	          0x4889c7	                            mov rdi, rax	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x4004282	            0x31c0	                            xor eax, eax	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x4004284	      0xe800000000	                          call 0x4004289	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x4004289	            0x31c0	                            xor eax, eax	      9204	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400428b	      0xe95affffff	                           jmp 0x40041ea	      9204	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x4004290	            0x89d8	                            mov eax, ebx	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x4004292	    0x488b3d000000	            mov rdi, qword [0x04004299] 	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x4004299	    0x488b34c50000	                  mov rsi, qword [rax*8]	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x40042a1	      0xe800000000	                          call 0x40042a6	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x40042a6	    0x488b15000000	            mov rdx, qword [0x040042ad] 	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40042ad	          0x4839d0	                            cmp rax, rdx	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40042b0	     0xf84d2010000	                            je 0x4004488	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40042b6	    0x8b3500000000	            mov esi, dword [0x040042bc] 	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042bc	            0x85f6	                           test esi, esi	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042be	            0x7440	                            je 0x4004300	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042c0	          0x4885d2	                           test rdx, rdx	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042c3	            0x743b	                            je 0x4004300	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042c5	          0x83fb02	                              cmp ebx, 2	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042c8	            0x7426	                            je 0x40042f0	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042ca	            0x85db	                           test ebx, ebx	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042cc	     0xf857e010000	                           jne 0x4004450	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042d2	         0xfb6520b	            movzx edx, byte [rdx + 0xb] 	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042d6	            0xf7d2	                                 not edx	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042d8	          0xc0ea07	                               shr dl, 7	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042db	            0x84d2	                             test dl, dl	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042dd	            0x7421	                            je 0x4004300	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042df	      0xbb00000000	                              mov ebx, 0	      9123	tc-i386.c	FUNCTION_109	IF_1
0x40042e4	      0xe9defeffff	                           jmp 0x40041c7	      9123	tc-i386.c	FUNCTION_109	IF_1
0x40042e9	     0xf1f80000000	                         nop dword [rax]	      9123	tc-i386.c	FUNCTION_109	IF_1
0x40042f0	        0xf6420c02	                test byte [rdx + 0xc], 2	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042f4	     0xf8456010000	                            je 0x4004450	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x40042fa	    0x660f1f440000	                    nop word [rax + rax]	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4004300	    0x8b0d00000000	            mov ecx, dword [0x04004306] 	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004306	            0x85c9	                           test ecx, ecx	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004308	            0x7476	                            je 0x4004380	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400430a	          0x4c8b30	                    mov r14, qword [rax]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400430d	    0x4c8b2d000000	            mov r13, qword [0x04004314] 	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004314	    0x41bc5d000000	                          mov r12d, 0x5d	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400431a	      0xbb5b000000	                           mov ebx, 0x5b	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400431f	            0x31ff	                            xor edi, edi	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004321	      0xba05000000	                              mov edx, 5	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004326	      0xbe00000000	                              mov esi, 0	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400432b	      0xe800000000	                          call 0x4004330	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004330	          0x4589e1	                           mov r9d, r12d	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004333	          0x4889c7	                            mov rdi, rax	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004336	          0x4d89f0	                             mov r8, r14	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004339	          0x4c89e9	                            mov rcx, r13	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400433c	            0x89da	                            mov edx, ebx	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400433e	          0x4889ee	                            mov rsi, rbp	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004341	            0x31c0	                            xor eax, eax	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004343	      0xe800000000	                          call 0x4004348	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004348	      0xe9bbfdffff	                           jmp 0x4004108	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400434d	           0xf1f00	                         nop dword [rax]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004350	        0xf6400c02	                test byte [rax + 0xc], 2	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004354	     0xf854dfdffff	                           jne 0x40040a7	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400435a	    0x48833d000000	               cmp qword [0x04004362], 0	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004362	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x4004367	     0xf855afeffff	                           jne 0x40041c7	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400436d	         0xfb67011	           movzx esi, byte [rax + 0x11] 	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004371	      0xb9ff000000	                           mov ecx, 0xff	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004376	      0xe9adfeffff	                           jmp 0x4004228	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400437b	       0xf1f440000	                   nop dword [rax + rax]	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004380	          0x4c8b30	                    mov r14, qword [rax]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004383	    0x4c8b2d000000	            mov r13, qword [0x0400438a] 	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400438a	    0x41bc29000000	                          mov r12d, 0x29	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004390	      0xbb28000000	                           mov ebx, 0x28	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004395	            0xeb88	                           jmp 0x400431f	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4004397	    0x660f1f840000	                    nop word [rax + rax]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40043a0	    0x488b0d000000	            mov rcx, qword [0x040043a7] 	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043a7	          0x4885c9	                           test rcx, rcx	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043aa	     0xf8458fdffff	                            je 0x4004108	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043b0	         0xfb7410a	            movzx eax, word [rcx + 0xa] 	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043b4	        0x66254040	                          and ax, 0x4040	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043b8	        0x663d4040	                          cmp ax, 0x4040	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043bc	     0xf8505feffff	                           jne 0x40041c7	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043c2	        0x807a1105	                cmp byte [rdx + 0x11], 5	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043c6	     0xf87fbfdffff	                            ja 0x40041c7	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043cc	        0x80791105	                cmp byte [rcx + 0x11], 5	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043d0	     0xf86f1fdffff	                           jbe 0x40041c7	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043d6	    0x8b0500000000	            mov eax, dword [0x040043dc] 	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043dc	            0x85c0	                           test eax, eax	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043de	     0xf8424fdffff	                            je 0x4004108	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043e4	      0xe9defdffff	                           jmp 0x40041c7	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043e9	     0xf1f80000000	                         nop dword [rax]	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40043f0	          0x4885c0	                           test rax, rax	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40043f3	            0x740a	                            je 0x40043ff	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40043f5	        0x807811ff	            cmp byte [rax + 0x11], 0xff 	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40043f9	     0xf846cfeffff	                            je 0x400426b	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40043ff	    0x8b1500000000	            mov edx, dword [0x04004405] 	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x4004405	            0x85d2	                           test edx, edx	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x4004407	     0xf84fbfcffff	                            je 0x4004108	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x400440d	      0xba05000000	                              mov edx, 5	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4004412	      0xbe00000000	                              mov esi, 0	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4004417	            0x31ff	                            xor edi, edi	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4004419	      0xe800000000	                          call 0x400441e	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400441e	          0x4889c7	                            mov rdi, rax	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4004421	            0x31c0	                            xor eax, eax	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4004423	      0xe800000000	                          call 0x4004428	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4004428	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x400442d	      0xe9b8fdffff	                           jmp 0x40041ea	      9229	tc-i386.c	FUNCTION_109
0x4004432	    0x660f1f440000	                    nop word [rax + rax]	      9229	tc-i386.c	FUNCTION_109
0x4004438	    0x48833d000000	               cmp qword [0x04004440], 0	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4004440	     0xf84c2fcffff	                            je 0x4004108	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4004446	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400444b	      0xe977fdffff	                           jmp 0x40041c7	      9104	tc-i386.c	FUNCTION_109
0x4004450	         0xfb6520b	            movzx edx, byte [rdx + 0xb] 	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4004454	          0xc0ea06	                               shr dl, 6	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4004457	          0x83f201	                              xor edx, 1	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400445a	          0x83e201	                              and edx, 1	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400445d	      0xe979feffff	                           jmp 0x40042db	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4004462	    0x660f1f440000	                    nop word [rax + rax]	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4004468	          0x83e602	                              and esi, 2	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400446b	     0xf856ffcffff	                           jne 0x40040e0	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004471	        0x807911fc	            cmp byte [rcx + 0x11], 0xfc 	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004475	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400447a	     0xf8547fdffff	                           jne 0x40041c7	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004480	      0xe95bfcffff	                           jmp 0x40040e0	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004485	           0xf1f00	                         nop dword [rax]	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4004488	    0x48833d000000	               cmp qword [0x04004490], 0	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x4004490	     0xf8520feffff	                           jne 0x40042b6	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x4004496	    0x48630d000000	         movsxd rcx, dword [0x0400449d] 	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400449d	    0xf604cd000000	                 test byte [rcx*8], 0x1f	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x40044a5	     0xf850bfeffff	                           jne 0x40042b6	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x40044ab	      0xe958fcffff	                           jmp 0x4004108	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x40044b0	      0xe800000000	                          call 0x40044b5	      9230	tc-i386.c	FUNCTION_109
update_code_flag	IF,5:DO,0:ELSE,3:WHILE,0:CALL,3:functions,0:SWITCH,0:FOR,0	50
0x4000240	              0x55	                                push rbp	      2398	tc-i386.c	FUNCTION_41
0x4000241	              0x53	                                push rbx	      2398	tc-i386.c	FUNCTION_41
0x4000242	        0x4883ec08	                              sub rsp, 8	      2398	tc-i386.c	FUNCTION_41
0x4000246	          0x83ff02	                              cmp edi, 2	      2402	tc-i386.c	FUNCTION_41	IF_1
0x4000249	    0x893d00000000	            mov dword [0x0400024f], edi 	      2401	tc-i386.c	FUNCTION_41
0x400024f	     0xfb605000000	           movzx eax, byte [0x04000256] 	      2404	tc-i386.c	FUNCTION_41	IF_1
0x4000256	            0x7468	                            je 0x40002c0	      2402	tc-i386.c	FUNCTION_41	IF_1
0x4000258	          0x83e0bf	                     and eax, 0xffffffbf	      2409	tc-i386.c	FUNCTION_41	ELSE_1
0x400025b	          0x83c880	                      or eax, 0xffffff80	      2410	tc-i386.c	FUNCTION_41	ELSE_1
0x400025e	            0x85ff	                           test edi, edi	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4000260	    0x880500000000	               mov byte [0x04000266], al	      2410	tc-i386.c	FUNCTION_41	ELSE_1
0x4000266	            0x7546	                           jne 0x40002ae	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4000268	    0xf60500000000	               test byte [0x0400026f], 4	      2421	tc-i386.c	FUNCTION_41	IF_4
0x400026f	            0x753d	                           jne 0x40002ae	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4000271	    0x488b1d000000	            mov rbx, qword [0x04000278] 	      2428	tc-i386.c	FUNCTION_41	IF_4
0x4000278	            0x85f6	                           test esi, esi	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x400027a	      0xbd00000000	                              mov ebp, 0	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x400027f	      0xb800000000	                              mov eax, 0	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x4000284	      0xba05000000	                              mov edx, 5	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000289	      0xbe00000000	                              mov esi, 0	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x400028e	        0x480f45e8	                         cmovne rbp, rax	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x4000292	          0x4885db	                           test rbx, rbx	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000295	    0x480f441d0000	           cmove rbx, qword [0x0400029d]	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x400029d	            0x31ff	                            xor edi, edi	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x400029f	      0xe800000000	                          call 0x40002a4	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x40002a4	          0x4889de	                            mov rsi, rbx	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x40002a7	          0x4889c7	                            mov rdi, rax	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x40002aa	            0x31c0	                            xor eax, eax	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x40002ac	            0xffd5	                                call rbp	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x40002ae	    0xc60500000000	                mov byte [0x040002b5], 0	      2430	tc-i386.c	FUNCTION_41
0x40002b5	        0x4883c408	                              add rsp, 8	      2431	tc-i386.c	FUNCTION_41
0x40002b9	              0x5b	                                 pop rbx	      2431	tc-i386.c	FUNCTION_41
0x40002ba	              0x5d	                                 pop rbp	      2431	tc-i386.c	FUNCTION_41
0x40002bb	              0xc3	                                     ret	      2431	tc-i386.c	FUNCTION_41
0x40002bc	         0xf1f4000	                         nop dword [rax]	      2431	tc-i386.c	FUNCTION_41
0x40002c0	          0x83c840	                            or eax, 0x40	      2404	tc-i386.c	FUNCTION_41	IF_1
0x40002c3	          0x83e07f	                           and eax, 0x7f	      2405	tc-i386.c	FUNCTION_41	IF_1
0x40002c6	    0xf60500000000	               test byte [0x040002cd], 2	      2412	tc-i386.c	FUNCTION_41	IF_2
0x40002cd	    0x880500000000	               mov byte [0x040002d3], al	      2405	tc-i386.c	FUNCTION_41	IF_1
0x40002d3	            0x75d9	                           jne 0x40002ae	      2412	tc-i386.c	FUNCTION_41	IF_2
0x40002d5	    0x488b1d000000	            mov rbx, qword [0x040002dc] 	      2419	tc-i386.c	FUNCTION_41	IF_2
0x40002dc	            0x85f6	                           test esi, esi	      2415	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x40002de	      0xbd00000000	                              mov ebp, 0	      2415	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x40002e3	      0xb800000000	                              mov eax, 0	      2415	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x40002e8	      0xba05000000	                              mov edx, 5	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x40002ed	      0xbe00000000	                              mov esi, 0	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x40002f2	        0x480f44e8	                          cmove rbp, rax	      2415	tc-i386.c	FUNCTION_41	IF_2	IF_3
0x40002f6	          0x4885db	                           test rbx, rbx	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x40002f9	    0x480f441d0000	           cmove rbx, qword [0x04000301]	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000301	            0xeb9a	                           jmp 0x400029d	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
i386_att_operand	IF,53:DO,1:ELSE,10:WHILE,0:CALL,44:functions,0:SWITCH,1:FOR,0	791
0x4004ac0	            0x4157	                                push r15	      9341	tc-i386.c	FUNCTION_112
0x4004ac2	            0x4156	                                push r14	      9341	tc-i386.c	FUNCTION_112
0x4004ac4	            0x4155	                                push r13	      9341	tc-i386.c	FUNCTION_112
0x4004ac6	            0x4154	                                push r12	      9341	tc-i386.c	FUNCTION_112
0x4004ac8	              0x55	                                push rbp	      9341	tc-i386.c	FUNCTION_112
0x4004ac9	              0x53	                                push rbx	      9341	tc-i386.c	FUNCTION_112
0x4004aca	          0x4889fd	                            mov rbp, rdi	      9341	tc-i386.c	FUNCTION_112
0x4004acd	          0x4889fb	                            mov rbx, rdi	      9341	tc-i386.c	FUNCTION_112
0x4004ad0	        0x4883ec38	                           sub rsp, 0x38	      9341	tc-i386.c	FUNCTION_112
0x4004ad4	    0x64488b042528	                mov rax, qword fs:[0x28]	      9341	tc-i386.c	FUNCTION_112
0x4004add	      0x4889442428	             mov qword [rsp + 0x28], rax	      9341	tc-i386.c	FUNCTION_112
0x4004ae2	            0x31c0	                            xor eax, eax	      9341	tc-i386.c	FUNCTION_112
0x4004ae4	           0xfb607	                   movzx eax, byte [rdi]	      9346	tc-i386.c	FUNCTION_112	IF_1
0x4004ae7	            0x3c20	                            cmp al, 0x20	      9346	tc-i386.c	FUNCTION_112	IF_1
0x4004ae9	     0xf8421010000	                            je 0x4004c10	      9346	tc-i386.c	FUNCTION_112	IF_1
0x4004aef	            0x3c2a	                            cmp al, 0x2a	      9351	tc-i386.c	FUNCTION_112	IF_2
0x4004af1	     0xf84e9000000	                            je 0x4004be0	      9351	tc-i386.c	FUNCTION_112	IF_2
0x4004af7	      0x488d742418	                   lea rsi, [rsp + 0x18]	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4004afc	          0x4889df	                            mov rdi, rbx	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4004aff	      0xe89ce7ffff	                 call sym.parse_register	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4004b04	          0x4885c0	                           test rax, rax	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4004b07	          0x4989c4	                            mov r12, rax	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4004b0a	     0xf8440010000	                            je 0x4004c50	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x4004b10	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      9366	tc-i386.c	FUNCTION_112	IF_4
0x4004b15	      0x410fb64500	                   movzx eax, byte [r13]	      9367	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4004b1a	            0x3c20	                            cmp al, 0x20	      9367	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4004b1c	     0xf84fe000000	                            je 0x4004c20	      9367	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4004b22	            0x3c3a	                            cmp al, 0x3a	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4004b24	     0xf8486000000	                            je 0x4004bb0	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4004b2a	            0x3c7b	                            cmp al, 0x7b	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x4004b2c	     0xf84de040000	                            je 0x4005010	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x4004b32	            0x84c0	                             test al, al	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x4004b34	     0xf8580000000	                           jne 0x4004bba	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x4004b3a	    0x48633d000000	         movsxd rdi, dword [0x04004b41] 	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x4004b41	      0x418b54240c	              mov edx, dword [r12 + 0xc]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4004b46	      0x498b742408	                mov rsi, qword [r12 + 8]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4004b4b	        0x488d470e	                    lea rax, [rdi + 0xe]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4004b4f	    0x4881e6ffffbf	             and rsi, 0xffffffffffbfffff	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4004b56	    0x488d0cc50000	                        lea rcx, [rax*8]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4004b5e	        0x448b490c	              mov r9d, dword [rcx + 0xc]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4004b62	           0x97108	                 or dword [rcx + 8], esi	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4004b65	          0x4409ca	                             or edx, r9d	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4004b68	          0x89510c	              mov dword [rcx + 0xc], edx	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x4004b6b	    0x8024c5000000	                  and byte [rax*8], 0xbf	      9436	tc-i386.c	FUNCTION_112	IF_4
0x4004b73	    0x4c8924fd0000	                  mov qword [rdi*8], r12	      9437	tc-i386.c	FUNCTION_112	IF_4
0x4004b7b	      0xb801000000	                              mov eax, 1	      9667	tc-i386.c	FUNCTION_112
0x4004b80	    0x830500000000	               add dword [0x04004b87], 1	      9438	tc-i386.c	FUNCTION_112	IF_4
0x4004b87	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      9668	tc-i386.c	FUNCTION_112
0x4004b8c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9668	tc-i386.c	FUNCTION_112
0x4004b95	     0xf85e00c0000	                           jne 0x400587b	      9668	tc-i386.c	FUNCTION_112
0x4004b9b	        0x4883c438	                           add rsp, 0x38	      9668	tc-i386.c	FUNCTION_112
0x4004b9f	              0x5b	                                 pop rbx	      9668	tc-i386.c	FUNCTION_112
0x4004ba0	              0x5d	                                 pop rbp	      9668	tc-i386.c	FUNCTION_112
0x4004ba1	            0x415c	                                 pop r12	      9668	tc-i386.c	FUNCTION_112
0x4004ba3	            0x415d	                                 pop r13	      9668	tc-i386.c	FUNCTION_112
0x4004ba5	            0x415e	                                 pop r14	      9668	tc-i386.c	FUNCTION_112
0x4004ba7	            0x415f	                                 pop r15	      9668	tc-i386.c	FUNCTION_112
0x4004ba9	              0xc3	                                     ret	      9668	tc-i386.c	FUNCTION_112
0x4004baa	    0x660f1f440000	                    nop word [rax + rax]	      9668	tc-i386.c	FUNCTION_112
0x4004bb0	    0x6641f7442408	              test word [r12 + 8], 0x180	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4004bb8	            0x7576	                           jne 0x4004c30	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4004bba	      0xbe00000000	                              mov esi, 0	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bbf	            0x31ff	                            xor edi, edi	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bc1	      0xba05000000	                              mov edx, 5	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bc6	      0xe800000000	                          call 0x4004bcb	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bcb	          0x4c89ee	                            mov rsi, r13	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bce	          0x4889c7	                            mov rdi, rax	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bd1	            0x31c0	                            xor eax, eax	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bd3	      0xe800000000	                          call 0x4004bd8	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4004bd8	            0x31c0	                            xor eax, eax	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4004bda	            0xebab	                           jmp 0x4004b87	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4004bdc	         0xf1f4000	                         nop dword [rax]	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4004be0	        0x807b0120	                cmp byte [rbx + 1], 0x20	      9353	tc-i386.c	FUNCTION_112	IF_2
0x4004be4	        0x488d4301	                      lea rax, [rbx + 1]	      9353	tc-i386.c	FUNCTION_112	IF_2
0x4004be8	        0x488d5302	                      lea rdx, [rbx + 2]	      9353	tc-i386.c	FUNCTION_112	IF_2
0x4004bec	        0x480f44c2	                          cmove rax, rdx	      9353	tc-i386.c	FUNCTION_112	IF_2
0x4004bf0	          0x4889c3	                            mov rbx, rax	      9353	tc-i386.c	FUNCTION_112	IF_2
0x4004bf3	    0x486305000000	         movsxd rax, dword [0x04004bfa] 	      9356	tc-i386.c	FUNCTION_112	IF_2
0x4004bfa	    0x800cc5000000	                      or byte [rax*8], 2	      9356	tc-i386.c	FUNCTION_112	IF_2
0x4004c02	      0xe9f0feffff	                           jmp 0x4004af7	      9356	tc-i386.c	FUNCTION_112	IF_2
0x4004c07	    0x660f1f840000	                    nop word [rax + rax]	      9356	tc-i386.c	FUNCTION_112	IF_2
0x4004c10	        0x488d5f01	                      lea rbx, [rdi + 1]	      9347	tc-i386.c	FUNCTION_112	IF_1
0x4004c14	         0xfb64701	               movzx eax, byte [rdi + 1]	      9347	tc-i386.c	FUNCTION_112	IF_1
0x4004c18	      0xe9d2feffff	                           jmp 0x4004aef	      9347	tc-i386.c	FUNCTION_112	IF_1
0x4004c1d	           0xf1f00	                         nop dword [rax]	      9347	tc-i386.c	FUNCTION_112	IF_1
0x4004c20	      0x410fb64501	               movzx eax, byte [r13 + 1]	      9347	tc-i386.c	FUNCTION_112	IF_1
0x4004c25	        0x4983c501	                              add r13, 1	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4004c29	      0xe9f4feffff	                           jmp 0x4004b22	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4004c2e	            0x6690	                                     nop	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x4004c30	    0x41807c241105	                cmp byte [r12 + 0x11], 5	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004c36	     0xf874c030000	                            ja 0x4004f88	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004c3c	    0x410fb6442411	           movzx eax, byte [r12 + 0x11] 	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004c42	    0xff24c5000000	                       jmp qword [rax*8]	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004c49	     0xf1f80000000	                         nop dword [rax]	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004c50	           0xfb603	                   movzx eax, byte [rbx]	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x4004c53	            0x3c25	                            cmp al, 0x25	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x4004c55	     0xf8495080000	                            je 0x40054f0	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x4004c5b	            0x3c24	                            cmp al, 0x24	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x4004c5d	     0xf841d060000	                            je 0x4005280	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x4004c63	        0x807d007b	                    cmp byte [rbp], 0x7b	      9241	tc-i386.c	FUNCTION_110	IF_1
0x4004c67	     0xf8493080000	                            je 0x4005500	      9241	tc-i386.c	FUNCTION_110	IF_1
0x4004c6d	           0xfb6d0	                           movzx edx, al	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004c70	    0x80ba00000000	                       cmp byte [rdx], 0	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004c77	     0xf845b040000	                            je 0x40050d8	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004c7d	           0xf1f00	                         nop dword [rax]	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004c80	    0x8b0500000000	            mov eax, dword [0x04004c86] 	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x4004c86	          0x83f801	                              cmp eax, 1	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x4004c89	     0xf8469070000	                            je 0x40053f8	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x4004c8f	          0x83f802	                              cmp eax, 2	      9479	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4004c92	     0xf8428070000	                            je 0x40053c0	      9479	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4004c98	          0x4889df	                            mov rdi, rbx	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4004c9b	      0xe800000000	                          call 0x4004ca0	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4004ca0	      0xbe7b000000	                           mov esi, 0x7b	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x4004ca5	          0x4889df	                            mov rdi, rbx	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x4004ca8	        0x4c8d2c03	                    lea r13, [rbx + rax]	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4004cac	      0xe800000000	                          call 0x4004cb1	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x4004cb1	          0x4885c0	                           test rax, rax	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x4004cb4	          0x4989c4	                            mov r12, rax	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x4004cb7	            0x7409	                            je 0x4004cc2	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x4004cb9	          0x4939c5	                            cmp r13, rax	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x4004cbc	     0xf877e030000	                            ja 0x4005040	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x4004cc2	      0x410fb645ff	               movzx eax, byte [r13 - 1]	      9502	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x4004cc7	            0x3c20	                            cmp al, 0x20	      9502	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x4004cc9	     0xf84e1060000	                            je 0x40053b0	      9502	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x4004ccf	        0x4d8d65ff	                      lea r12, [r13 - 1]	      9501	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004cd3	            0x3c29	                            cmp al, 0x29	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4004cd5	      0x4d8d742401	                      lea r14, [r12 + 1]	      9507	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004cda	      0xba01000000	                              mov edx, 1	      9507	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004cdf	     0xf84f6010000	                            je 0x4004edb	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4004ce5	          0x4c39f3	                            cmp rbx, r14	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4004ce8	     0xf8484010000	                            je 0x4004e72	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4004cee	    0x833d00000000	               cmp dword [0x04004cf5], 2	      8812	tc-i386.c	FUNCTION_106	IF_1
0x4004cf5	    0x48c744242000	               mov qword [rsp + 0x20], 0	      8809	tc-i386.c	FUNCTION_106
0x4004cfe	      0xc64424221f	            mov byte [rsp + 0x22], 0x1f 	      8809	tc-i386.c	FUNCTION_106
0x4004d03	     0xf84be080000	                            je 0x40055c7	      8812	tc-i386.c	FUNCTION_106	IF_1
0x4004d09	    0x486305000000	         movsxd rax, dword [0x04004d10] 	      8820	tc-i386.c	FUNCTION_106	IF_2
0x4004d10	            0x31c9	                            xor ecx, ecx	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4004d12	    0xf604c5000000	                    test byte [rax*8], 2	      8820	tc-i386.c	FUNCTION_106	IF_2
0x4004d1a	     0xf8440030000	                            je 0x4005060	      8820	tc-i386.c	FUNCTION_106	IF_2
0x4004d20	    0x8b3500000000	            mov esi, dword [0x04004d26] 	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x4004d26	          0x4889ca	                            mov rdx, rcx	      8824	tc-i386.c	FUNCTION_106	IF_2
0x4004d29	     0xfb63d000000	           movzx edi, byte [0x04004d30] 	      8825	tc-i386.c	FUNCTION_106	IF_2
0x4004d30	    0x4881ca000004	                         or rdx, 0x40000	      8824	tc-i386.c	FUNCTION_106	IF_2
0x4004d37	          0x83fe02	                              cmp esi, 2	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x4004d3a	     0xf84e0070000	                            je 0x4005520	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x4004d40	          0x4084ff	                           test dil, dil	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d43	        0x400f95c7	                               setne dil	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d47	          0x83fe01	                              cmp esi, 1	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d4a	           0xf94c1	                                 sete cl	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d4d	          0x4038cf	                             cmp dil, cl	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d50	            0x740e	                            je 0x4004d60	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d52	    0x4881e2fffffb	             and rdx, 0xfffffffffffbffff	      8836	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d59	    0x4881ca000002	                         or rdx, 0x20000	      8837	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4004d60	     0x914c5000000	                   or dword [rax*8], edx	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x4004d67	    0x488b0d000000	            mov rcx, qword [0x04004d6e] 	      8875	tc-i386.c	FUNCTION_106
0x4004d6e	    0x488d3c850000	                        lea rdi, [rax*4]	      8923	tc-i386.c	FUNCTION_106
0x4004d76	    0x448b2d000000	           mov r13d, dword [0x04004d7d] 	      8872	tc-i386.c	FUNCTION_106
0x4004d7d	    0x48891d000000	            mov qword [0x04004d84], rbx 	      8876	tc-i386.c	FUNCTION_106
0x4004d84	            0x31f6	                            xor esi, esi	      8923	tc-i386.c	FUNCTION_106
0x4004d86	        0x48890c24	                    mov qword [rsp], rcx	      8875	tc-i386.c	FUNCTION_106
0x4004d8a	          0x4c89ea	                            mov rdx, r13	      8872	tc-i386.c	FUNCTION_106
0x4004d8d	          0x4d89ec	                            mov r12, r13	      8872	tc-i386.c	FUNCTION_106
0x4004d90	          0x83c201	                              add edx, 1	      8874	tc-i386.c	FUNCTION_106
0x4004d93	        0x49c1e405	                              shl r12, 5	      8872	tc-i386.c	FUNCTION_106
0x4004d97	    0x891500000000	            mov dword [0x04004d9d], edx 	      8874	tc-i386.c	FUNCTION_106
0x4004d9d	    0x488b15000000	            mov rdx, qword [0x04004da4] 	      8877	tc-i386.c	FUNCTION_106
0x4004da4	    0x4981c4000000	                              add r12, 0	      8872	tc-i386.c	FUNCTION_106
0x4004dab	    0x4c8924c50000	                  mov qword [rax*8], r12	      8873	tc-i386.c	FUNCTION_106
0x4004db3	        0x488d4a01	                      lea rcx, [rdx + 1]	      8877	tc-i386.c	FUNCTION_106
0x4004db7	    0x48890d000000	            mov qword [0x04004dbe], rcx 	      8877	tc-i386.c	FUNCTION_106
0x4004dbe	        0x410fb60e	                   movzx ecx, byte [r14]	      8877	tc-i386.c	FUNCTION_106
0x4004dc2	            0x880a	                      mov byte [rdx], cl	      8877	tc-i386.c	FUNCTION_106
0x4004dc4	      0x488d542420	                   lea rdx, [rsp + 0x20]	      8923	tc-i386.c	FUNCTION_106
0x4004dc9	        0x41c60600	                       mov byte [r14], 0	      8877	tc-i386.c	FUNCTION_106
0x4004dcd	      0xe81ee9ffff	                        call sym.lex_got	      8923	tc-i386.c	FUNCTION_106
0x4004dd2	          0x4885c0	                           test rax, rax	      8924	tc-i386.c	FUNCTION_106	IF_11
0x4004dd5	          0x4989c7	                            mov r15, rax	      8923	tc-i386.c	FUNCTION_106
0x4004dd8	            0x7407	                            je 0x4004de1	      8924	tc-i386.c	FUNCTION_106	IF_11
0x4004dda	    0x488905000000	            mov qword [0x04004de1], rax 	      8925	tc-i386.c	FUNCTION_106	IF_11
0x4004de1	            0x31ff	                            xor edi, edi	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4004de3	      0xba01000000	                              mov edx, 1	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4004de8	          0x4c89e6	                            mov rsi, r12	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4004deb	      0xe800000000	                          call 0x4004df0	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4004df0	    0x4c8b05000000	              mov r8, qword [0x04004df7]	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4004df7	        0x410fb600	                    movzx eax, byte [r8]	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4004dfb	            0x3c20	                            cmp al, 0x20	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4004dfd	     0xf8475060000	                            je 0x4005478	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4004e03	            0x84c0	                             test al, al	      8930	tc-i386.c	FUNCTION_106	IF_12
0x4004e05	     0xf853d060000	                           jne 0x4005448	      8930	tc-i386.c	FUNCTION_106	IF_12
0x4004e0b	        0x488b0424	                    mov rax, qword [rsp]	      8935	tc-i386.c	FUNCTION_106
0x4004e0f	          0x4d85ff	                           test r15, r15	      8936	tc-i386.c	FUNCTION_106	IF_13
0x4004e12	    0x488905000000	            mov qword [0x04004e19], rax 	      8935	tc-i386.c	FUNCTION_106
0x4004e19	            0x7426	                            je 0x4004e41	      8936	tc-i386.c	FUNCTION_106	IF_13
0x4004e1b	          0x4c89ff	                            mov rdi, r15	      8938	tc-i386.c	FUNCTION_106	IF_13	CALL_9
0x4004e1e	      0xe800000000	                          call 0x4004e23	      8938	tc-i386.c	FUNCTION_106	IF_13	CALL_9
0x4004e23	          0x4c89e8	                            mov rax, r13	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4004e26	        0x48c1e005	                              shl rax, 5	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4004e2a	     0xfb680000000	                   movzx eax, byte [rax]	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4004e31	            0x3c02	                               cmp al, 2	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4004e33	     0xf84f7050000	                            je 0x4005430	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4004e39	            0x3c05	                               cmp al, 5	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4004e3b	     0xf84ef050000	                            je 0x4005430	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4004e41	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4004e46	          0x4889da	                            mov rdx, rbx	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4004e49	          0x4c89e7	                            mov rdi, r12	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4004e4c	      0xe83ffaffff	call sym.i386_finalize_displacement.isra.15	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4004e51	    0x488b15000000	            mov rdx, qword [0x04004e58] 	      8946	tc-i386.c	FUNCTION_106
0x4004e58	            0x85c0	                           test eax, eax	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4004e5a	        0x488d4aff	                      lea rcx, [rdx - 1]	      8946	tc-i386.c	FUNCTION_106
0x4004e5e	         0xfb652ff	               movzx edx, byte [rdx - 1]	      8946	tc-i386.c	FUNCTION_106
0x4004e62	    0x48890d000000	            mov qword [0x04004e69], rcx 	      8946	tc-i386.c	FUNCTION_106
0x4004e69	          0x418816	                      mov byte [r14], dl	      8946	tc-i386.c	FUNCTION_106
0x4004e6c	     0xf8466fdffff	                            je 0x4004bd8	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4004e72	    0x488b05000000	            mov rax, qword [0x04004e79] 	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4004e79	          0x4885c0	                           test rax, rax	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4004e7c	            0x740f	                            je 0x4004e8d	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4004e7e	    0x8b0d00000000	            mov ecx, dword [0x04004e84] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004e84	          0x39480c	              cmp dword [rax + 0xc], ecx	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004e87	     0xf84b3020000	                            je 0x4005140	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004e8d	          0x4889ef	                            mov rdi, rbp	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4004e90	      0xe88bf1ffff	               call sym.i386_index_check	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4004e95	            0x85c0	                           test eax, eax	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4004e97	     0xf843bfdffff	                            je 0x4004bd8	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4004e9d	    0x486305000000	         movsxd rax, dword [0x04004ea4] 	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004ea4	    0x800cc5000000	                   or byte [rax*8], 0x10	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004eac	    0x8b0500000000	            mov eax, dword [0x04004eb2] 	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4004eb2	            0x85c0	                           test eax, eax	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4004eb4	     0xf84a6030000	                            je 0x4005260	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4004eba	          0x83c001	                              add eax, 1	      9656	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004ebd	    0x890500000000	            mov dword [0x04004ec3], eax 	      9656	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004ec3	      0xb801000000	                              mov eax, 1	      9667	tc-i386.c	FUNCTION_112
0x4004ec8	      0xe9bafcffff	                           jmp 0x4004b87	      9465	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004ecd	           0xf1f00	                         nop dword [rax]	      9465	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4004ed0	            0x3c28	                            cmp al, 0x28	      9520	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4004ed2	     0xf8458010000	                            je 0x4005030	      9520	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4004ed8	          0x4d89ec	                            mov r12, r13	      9520	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4004edb	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4004ee1	      0x4d8d6c24ff	                      lea r13, [r12 - 1]	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x4004ee6	            0x3c29	                            cmp al, 0x29	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4004ee8	            0x75e6	                           jne 0x4004ed0	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4004eea	          0x83c201	                              add edx, 1	      9519	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4004eed	            0x85d2	                           test edx, edx	      9523	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4004eef	            0x75e7	                           jne 0x4004ed8	      9523	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4004ef1	      0x410fb64501	               movzx eax, byte [r13 + 1]	      9529	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4004ef6	            0x3c20	                            cmp al, 0x20	      9529	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4004ef8	     0xf8435060000	                            je 0x4005533	      9529	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4004efe	            0x3c2c	                            cmp al, 0x2c	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4004f00	     0xf858a050000	                           jne 0x4005490	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4004f06	    0x486305000000	         movsxd rax, dword [0x04004f0d] 	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4004f0d	    0x488b15000000	            mov rdx, qword [0x04004f14] 	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4004f14	    0x800cc5000000	                   or byte [rax*8], 0x40	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4004f1c	          0x4885d2	                           test rdx, rdx	      9540	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x4004f1f	     0xf840b070000	                            je 0x4005630	      9540	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x4004f25	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      9542	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x4004f2a	      0x410fb60424	                   movzx eax, byte [r12]	      9543	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x4004f2f	            0x3c20	                            cmp al, 0x20	      9543	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x4004f31	     0xf8481060000	                            je 0x40055b8	      9543	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x4004f37	            0x3c2c	                            cmp al, 0x2c	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4004f39	     0xf8403060000	                            je 0x4005542	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4004f3f	            0x3c29	                            cmp al, 0x29	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4004f41	          0x4d89ee	                            mov r14, r13	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4004f44	      0xba05000000	                              mov edx, 5	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4004f49	      0xbe00000000	                              mov esi, 0	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4004f4e	     0xf8491fdffff	                            je 0x4004ce5	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4004f54	            0x31ff	                            xor edi, edi	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4004f56	      0xe800000000	                          call 0x4004f5b	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4004f5b	          0x4889ee	                            mov rsi, rbp	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4004f5e	          0x4889c7	                            mov rdi, rax	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4004f61	            0x31c0	                            xor eax, eax	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4004f63	      0xe800000000	                          call 0x4004f68	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4004f68	            0x31c0	                            xor eax, eax	      9599	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4004f6a	      0xe918fcffff	                           jmp 0x4004b87	      9599	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4004f6f	              0x90	                                     nop	      9599	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4004f70	    0x8b0500000000	            mov eax, dword [0x04004f76] 	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004f76	    0x48c704c50000	                    mov qword [rax*8], 0	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004f82	    0x660f1f440000	                    nop word [rax + rax]	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4004f88	      0x410fb64501	               movzx eax, byte [r13 + 1]	      9397	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x4004f8d	        0x498d5d01	                      lea rbx, [r13 + 1]	      9396	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4004f91	            0x3c20	                            cmp al, 0x20	      9397	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x4004f93	     0xf8407040000	                            je 0x40053a0	      9397	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x4004f99	           0xfb6d0	                           movzx edx, al	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004f9c	    0x80ba00000000	                       cmp byte [rdx], 0	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fa3	            0x753b	                           jne 0x4004fe0	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fa5	    0x80ba00000000	                       cmp byte [rdx], 0	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fac	            0x7532	                           jne 0x4004fe0	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fae	            0x3c28	                            cmp al, 0x28	      9402	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fb0	     0xf84cafcffff	                            je 0x4004c80	      9402	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fb6	            0x3c2a	                            cmp al, 0x2a	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fb8	            0x742e	                            je 0x4004fe8	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x4004fba	      0xba05000000	                              mov edx, 5	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x4004fbf	      0xbe00000000	                              mov esi, 0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x4004fc4	            0x31ff	                            xor edi, edi	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4004fc6	      0xe800000000	                          call 0x4004fcb	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4004fcb	          0x4889de	                            mov rsi, rbx	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4004fce	          0x4889c7	                            mov rdi, rax	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4004fd1	            0x31c0	                            xor eax, eax	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4004fd3	      0xe800000000	                          call 0x4004fd8	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4004fd8	            0x31c0	                            xor eax, eax	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4004fda	      0xe9a8fbffff	                           jmp 0x4004b87	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4004fdf	              0x90	                                     nop	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4004fe0	            0x3c2a	                            cmp al, 0x2a	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4004fe2	     0xf8598fcffff	                           jne 0x4004c80	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4004fe8	        0x807b0120	                cmp byte [rbx + 1], 0x20	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4004fec	        0x488d4301	                      lea rax, [rbx + 1]	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4004ff0	        0x488d5302	                      lea rdx, [rbx + 2]	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4004ff4	        0x480f44c2	                          cmove rax, rdx	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4004ff8	          0x4889c3	                            mov rbx, rax	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4004ffb	    0x486305000000	         movsxd rax, dword [0x04005002] 	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4005002	    0x800cc5000000	                      or byte [rax*8], 2	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x400500a	      0xe971fcffff	                           jmp 0x4004c80	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x400500f	              0x90	                                     nop	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4005010	            0x31f6	                            xor esi, esi	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4005012	          0x4c89ef	                            mov rdi, r13	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4005015	      0xe896e3ffff	            call sym.check_VecOperations	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x400501a	          0x4885c0	                           test rax, rax	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x400501d	          0x4989c5	                            mov r13, rax	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4005020	     0xf84b2fbffff	                            je 0x4004bd8	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x4005026	           0xfb600	                   movzx eax, byte [rax]	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x4005029	      0xe904fbffff	                           jmp 0x4004b32	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x400502e	            0x6690	                                     nop	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x4005030	          0x83ea01	                              sub edx, 1	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4005033	      0xe9b5feffff	                           jmp 0x4004eed	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4005038	     0xf1f84000000	                   nop dword [rax + rax]	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4005040	          0x4c89ee	                            mov rsi, r13	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x4005043	          0x4889c7	                            mov rdi, rax	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x4005046	      0xe865e3ffff	            call sym.check_VecOperations	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x400504b	          0x4885c0	                           test rax, rax	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x400504e	     0xf8484fbffff	                            je 0x4004bd8	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x4005054	          0x4d89e5	                            mov r13, r12	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x4005057	      0xe966fcffff	                           jmp 0x4004cc2	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x400505c	         0xf1f4000	                         nop dword [rax]	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x4005060	    0x488b15000000	            mov rdx, qword [0x04005067] 	      8821	tc-i386.c	FUNCTION_106	IF_2
0x4005067	          0x488b12	                    mov rdx, qword [rdx]	      8822	tc-i386.c	FUNCTION_106	IF_2
0x400506a	        0xf6422860	           test byte [rdx + 0x28], 0x60 	      8821	tc-i386.c	FUNCTION_106	IF_2
0x400506e	     0xf84acfcffff	                            je 0x4004d20	      8821	tc-i386.c	FUNCTION_106	IF_2
0x4005074	    0x8b3500000000	            mov esi, dword [0x0400507a] 	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x400507a	     0xfb615000000	           movzx edx, byte [0x04005081] 	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x4005081	          0x83fe02	                              cmp esi, 2	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x4005084	     0xf84b0050000	                            je 0x400563a	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x400508a	            0x84d2	                             test dl, dl	      8857	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400508c	      0xbf01000000	                              mov edi, 1	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x4005091	            0x7523	                           jne 0x40050b6	      8857	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4005093	     0xfbe3d000000	           movsx edi, byte [0x0400509a] 	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400509a	          0x83fe01	                              cmp esi, 1	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x400509d	    0x41b877000000	                           mov r8d, 0x77	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x40050a3	      0xba6c000000	                           mov edx, 0x6c	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x40050a8	        0x410f45d0	                         cmovne edx, r8d	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x40050ac	            0x39d7	                            cmp edi, edx	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x40050ae	        0x400f94c7	                                sete dil	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x40050b2	        0x400fb6ff	                          movzx edi, dil	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x40050b6	    0x4881c9000004	                         or rcx, 0x40000	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x40050bd	          0x4889ca	                            mov rdx, rcx	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x40050c0	            0x31c9	                            xor ecx, ecx	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x40050c2	          0x83fe01	                              cmp esi, 1	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x40050c5	           0xf94c1	                                 sete cl	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x40050c8	            0x39f9	                            cmp ecx, edi	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x40050ca	     0xf8582fcffff	                           jne 0x4004d52	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x40050d0	      0xe98bfcffff	                           jmp 0x4004d60	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x40050d5	           0xf1f00	                         nop dword [rax]	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x40050d8	            0x3c28	                            cmp al, 0x28	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050da	        0x400f94c6	                                sete sil	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050de	            0x3c22	                            cmp al, 0x22	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050e0	           0xf94c1	                                 sete cl	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050e3	          0x4008ce	                              or sil, cl	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050e6	     0xf8594fbffff	                           jne 0x4004c80	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050ec	    0x80ba00000000	                       cmp byte [rdx], 0	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050f3	     0xf8587fbffff	                           jne 0x4004c80	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40050f9	    0x8b0d00000000	            mov ecx, dword [0x040050ff] 	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x40050ff	           0xfbef8	                           movsx edi, al	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005102	          0x8d6901	                      lea ebp, [rcx + 1]	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005105	      0xe896f4ffff	                 call sym.output_invalid	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x400510a	      0xba05000000	                              mov edx, 5	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x400510f	          0x4989c4	                            mov r12, rax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005112	      0xbe00000000	                              mov esi, 0	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005117	            0x31ff	                            xor edi, edi	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005119	      0xe800000000	                          call 0x400511e	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x400511e	          0x4889d9	                            mov rcx, rbx	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005121	          0x4889c7	                            mov rdi, rax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005124	            0x89ea	                            mov edx, ebp	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005126	            0x31c0	                            xor eax, eax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005128	          0x4c89e6	                            mov rsi, r12	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x400512b	      0xe800000000	                          call 0x4005130	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4005130	            0x31c0	                            xor eax, eax	      9665	tc-i386.c	FUNCTION_112	ELSE_10
0x4005132	      0xe950faffff	                           jmp 0x4004b87	      9665	tc-i386.c	FUNCTION_112	ELSE_10
0x4005137	    0x660f1f840000	                    nop word [rax + rax]	      9665	tc-i386.c	FUNCTION_112	ELSE_10
0x4005140	    0x8b0d00000000	            mov ecx, dword [0x04005146] 	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4005146	          0x394808	                cmp dword [rax + 8], ecx	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4005149	     0xf853efdffff	                           jne 0x4004e8d	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x400514f	    0x48833d000000	               cmp qword [0x04005157], 0	      9642	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4005157	     0xf8530fdffff	                           jne 0x4004e8d	      9642	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x400515d	    0x8b0500000000	            mov eax, dword [0x04005163] 	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4005163	            0x85c0	                           test eax, eax	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4005165	     0xf8522fdffff	                           jne 0x4004e8d	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x400516b	    0x8b0500000000	            mov eax, dword [0x04005171] 	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4005171	    0x48833cc50000	                    cmp qword [rax*8], 0	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x400517a	     0xf850dfdffff	                           jne 0x4004e8d	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4005180	    0x486305000000	         movsxd rax, dword [0x04005187] 	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4005187	        0x4883c00e	                            add rax, 0xe	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x400518b	    0xf604c5000000	                 test byte [rax*8], 0x1f	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4005193	     0xf85f4fcffff	                           jne 0x4004e8d	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4005199	    0x48c704c50000	                    mov qword [rax*8], 0	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x40051a5	    0x800cc5000000	                   or byte [rax*8], 0x80	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x40051ad	      0xb801000000	                              mov eax, 1	      9648	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x40051b2	      0xe9d0f9ffff	                           jmp 0x4004b87	      9648	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x40051b7	    0x660f1f840000	                    nop word [rax + rax]	      9648	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x40051c0	    0x8b0500000000	            mov eax, dword [0x040051c6] 	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40051c6	    0x48c704c50000	                    mov qword [rax*8], 0	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40051d2	      0xe9b1fdffff	                           jmp 0x4004f88	      9389	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40051d7	    0x660f1f840000	                    nop word [rax + rax]	      9389	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40051e0	    0x8b0500000000	            mov eax, dword [0x040051e6] 	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40051e6	    0x48c704c50000	                    mov qword [rax*8], 0	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40051f2	      0xe991fdffff	                           jmp 0x4004f88	      9386	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x40051f7	    0x660f1f840000	                    nop word [rax + rax]	      9386	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005200	    0x8b0500000000	            mov eax, dword [0x04005206] 	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005206	    0x48c704c50000	                    mov qword [rax*8], 0	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005212	      0xe971fdffff	                           jmp 0x4004f88	      9383	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005217	    0x660f1f840000	                    nop word [rax + rax]	      9383	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005220	    0x8b0500000000	            mov eax, dword [0x04005226] 	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005226	    0x48c704c50000	                    mov qword [rax*8], 0	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005232	      0xe951fdffff	                           jmp 0x4004f88	      9380	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005237	    0x660f1f840000	                    nop word [rax + rax]	      9380	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005240	    0x8b0500000000	            mov eax, dword [0x04005246] 	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005246	    0x48c704c50000	                    mov qword [rax*8], 0	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005252	      0xe931fdffff	                           jmp 0x4004f88	      9377	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005257	    0x660f1f840000	                    nop word [rax + rax]	      9377	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4005260	          0x4889ef	                            mov rdi, rbp	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4005263	      0xe800000000	                          call 0x4005268	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4005268	    0x488905000000	            mov qword [0x0400526f], rax 	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x400526f	    0x8b0500000000	            mov eax, dword [0x04005275] 	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4005275	      0xe940fcffff	                           jmp 0x4004eba	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x400527a	    0x660f1f440000	                    nop word [rax + rax]	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4005280	    0x486305000000	         movsxd rax, dword [0x04005287] 	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4005287	    0xf604c5000000	                    test byte [rax*8], 2	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x400528f	     0xf8533020000	                           jne 0x40054c8	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4005295	    0x8b2d00000000	            mov ebp, dword [0x0400529b] 	      8650	tc-i386.c	FUNCTION_103	IF_1
0x400529b	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x40052a3	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x40052ab	          0x83fd02	                              cmp ebp, 2	      8650	tc-i386.c	FUNCTION_103	IF_1
0x40052ae	     0xf84ee030000	                            je 0x40056a2	      8650	tc-i386.c	FUNCTION_103	IF_1
0x40052b4	          0x4989ec	                            mov r12, rbp	      8657	tc-i386.c	FUNCTION_103
0x40052b7	          0x8d5501	                      lea edx, [rbp + 1]	      8657	tc-i386.c	FUNCTION_103
0x40052ba	        0x488d4b02	                      lea rcx, [rbx + 2]	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40052be	        0x49c1e405	                              shl r12, 5	      8657	tc-i386.c	FUNCTION_103
0x40052c2	    0x488d3c850000	                        lea rdi, [rax*4]	      8666	tc-i386.c	FUNCTION_103
0x40052ca	    0x4c8b35000000	            mov r14, qword [0x040052d1] 	      8663	tc-i386.c	FUNCTION_103
0x40052d1	    0x4981c4000000	                              add r12, 0	      8657	tc-i386.c	FUNCTION_103
0x40052d8	    0x891500000000	            mov dword [0x040052de], edx 	      8657	tc-i386.c	FUNCTION_103
0x40052de	        0x488d5301	                      lea rdx, [rbx + 1]	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40052e2	    0x4c8924c50000	                  mov qword [rax*8], r12	      8658	tc-i386.c	FUNCTION_103
0x40052ea	        0x807b0120	                cmp byte [rbx + 1], 0x20	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40052ee	          0x4889d3	                            mov rbx, rdx	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40052f1	      0x488d542420	                   lea rdx, [rsp + 0x20]	      8666	tc-i386.c	FUNCTION_103
0x40052f6	        0x480f44d9	                          cmove rbx, rcx	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40052fa	            0x31f6	                            xor esi, esi	      8666	tc-i386.c	FUNCTION_103
0x40052fc	    0x48891d000000	            mov qword [0x04005303], rbx 	      8664	tc-i386.c	FUNCTION_103
0x4005303	      0xe8e8e3ffff	                        call sym.lex_got	      8666	tc-i386.c	FUNCTION_103
0x4005308	          0x4885c0	                           test rax, rax	      8667	tc-i386.c	FUNCTION_103	IF_3
0x400530b	          0x4989c5	                            mov r13, rax	      8666	tc-i386.c	FUNCTION_103
0x400530e	            0x7407	                            je 0x4005317	      8667	tc-i386.c	FUNCTION_103	IF_3
0x4005310	    0x488905000000	            mov qword [0x04005317], rax 	      8668	tc-i386.c	FUNCTION_103	IF_3
0x4005317	            0x31ff	                            xor edi, edi	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x4005319	      0xba01000000	                              mov edx, 1	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400531e	          0x4c89e6	                            mov rsi, r12	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x4005321	      0xe800000000	                          call 0x4005326	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x4005326	    0x488b0d000000	            mov rcx, qword [0x0400532d] 	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400532d	          0x4989c7	                            mov r15, rax	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x4005330	           0xfb601	                   movzx eax, byte [rcx]	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4005333	            0x3c20	                            cmp al, 0x20	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4005335	     0xf84de020000	                            je 0x4005619	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400533b	            0x3c7b	                            cmp al, 0x7b	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400533d	     0xf8421030000	                            je 0x4005664	      8675	tc-i386.c	FUNCTION_103	IF_4
0x4005343	            0x84c0	                             test al, al	      8683	tc-i386.c	FUNCTION_103	IF_6
0x4005345	     0xf85a3020000	                           jne 0x40055ee	      8683	tc-i386.c	FUNCTION_103	IF_6
0x400534b	          0x4d85ed	                           test r13, r13	      8687	tc-i386.c	FUNCTION_103	IF_7
0x400534e	    0x4c8935000000	            mov qword [0x04005355], r14 	      8686	tc-i386.c	FUNCTION_103
0x4005355	            0x7426	                            je 0x400537d	      8687	tc-i386.c	FUNCTION_103	IF_7
0x4005357	          0x4c89ef	                            mov rdi, r13	      8689	tc-i386.c	FUNCTION_103	IF_7	CALL_9
0x400535a	      0xe800000000	                          call 0x400535f	      8689	tc-i386.c	FUNCTION_103	IF_7	CALL_9
0x400535f	          0x4889e8	                            mov rax, rbp	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x4005362	        0x48c1e005	                              shl rax, 5	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x4005366	     0xfb680000000	                   movzx eax, byte [rax]	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400536d	            0x3c02	                               cmp al, 2	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400536f	     0xf8433020000	                            je 0x40055a8	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x4005375	            0x3c05	                               cmp al, 5	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x4005377	     0xf842b020000	                            je 0x40055a8	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400537d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x4005382	          0x4889d9	                            mov rcx, rbx	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x4005385	          0x4c89e6	                            mov rsi, r12	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x4005388	          0x4c89ff	                            mov rdi, r15	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x400538b	      0xe880b1ffff	        call sym.i386_finalize_immediate	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x4005390	            0x85c0	                           test eax, eax	      9443	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x4005392	           0xf95c0	                                setne al	      9443	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x4005395	           0xfb6c0	                           movzx eax, al	      9443	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x4005398	      0xe9eaf7ffff	                           jmp 0x4004b87	      9443	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x400539d	           0xf1f00	                         nop dword [rax]	      9443	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40053a0	        0x498d5d02	                      lea rbx, [r13 + 2]	      9398	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x40053a4	      0x410fb64502	               movzx eax, byte [r13 + 2]	      9398	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x40053a9	      0xe9ebfbffff	                           jmp 0x4004f99	      9398	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x40053ae	            0x6690	                                     nop	      9398	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_7
0x40053b0	        0x4d8d65fe	                      lea r12, [r13 - 2]	      9503	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40053b4	      0x410fb645fe	               movzx eax, byte [r13 - 2]	      9503	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40053b9	      0xe915f9ffff	                           jmp 0x4004cd3	      9503	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40053be	            0x6690	                                     nop	      9503	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40053c0	    0x488b05000000	            mov rax, qword [0x040053c7] 	      9503	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40053c7	          0x488b00	                    mov rax, qword [rax]	      9503	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_24
0x40053ca	          0x488b18	                    mov rbx, qword [rax]	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053cd	      0xba05000000	                              mov edx, 5	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053d2	      0xbe00000000	                              mov esi, 0	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053d7	            0x31ff	                            xor edi, edi	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053d9	      0xe800000000	                          call 0x40053de	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053de	          0x4889de	                            mov rsi, rbx	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053e1	          0x4889c7	                            mov rdi, rax	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053e4	            0x31c0	                            xor eax, eax	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053e6	      0xe800000000	                          call 0x40053eb	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x40053eb	            0x31c0	                            xor eax, eax	      9483	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x40053ed	      0xe995f7ffff	                           jmp 0x4004b87	      9483	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x40053f2	    0x660f1f440000	                    nop word [rax + rax]	      9483	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x40053f8	      0xe8c3f0ffff	         call sym.maybe_adjust_templates	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40053fd	            0x85c0	                           test eax, eax	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x40053ff	     0xf84d3f7ffff	                            je 0x4004bd8	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x4005405	    0x8b0500000000	            mov eax, dword [0x0400540b] 	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400540b	          0x83f801	                              cmp eax, 1	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400540e	     0xf857bf8ffff	                           jne 0x4004c8f	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4005414	    0x488b05000000	            mov rax, qword [0x0400541b] 	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400541b	          0x488b00	                    mov rax, qword [rax]	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400541e	        0xf6402b01	               test byte [rax + 0x2b], 1	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4005422	     0xf8570f8ffff	                           jne 0x4004c98	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4005428	            0xeba0	                           jmp 0x40053ca	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400542a	    0x660f1f440000	                    nop word [rax + rax]	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4005430	        0x49c1e505	                              shl r13, 5	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4005434	    0x41c685000000	                       mov byte [r13], 0	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x400543c	      0xe900faffff	                           jmp 0x4004e41	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4005441	     0xf1f80000000	                         nop dword [rax]	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4005448	            0x31ff	                            xor edi, edi	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400544a	      0xba05000000	                              mov edx, 5	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400544f	      0xbe00000000	                              mov esi, 0	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005454	      0x4c89442408	                 mov qword [rsp + 8], r8	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005459	      0xe800000000	                          call 0x400545e	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400545e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005463	          0x4889c7	                            mov rdi, rax	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005466	            0x31c0	                            xor eax, eax	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005468	          0x4c89c6	                             mov rsi, r8	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x400546b	      0xe800000000	                          call 0x4005470	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005470	      0xe996f9ffff	                           jmp 0x4004e0b	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005475	           0xf1f00	                         nop dword [rax]	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4005478	        0x498d5001	                       lea rdx, [r8 + 1]	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400547c	    0x488915000000	            mov qword [0x04005483], rdx 	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4005483	      0x410fb64001	                movzx eax, byte [r8 + 1]	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4005488	          0x4989d0	                             mov r8, rdx	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x400548b	      0xe973f9ffff	                           jmp 0x4004e03	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4005490	      0x488d742418	                   lea rsi, [rsp + 0x18]	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4005495	          0x4c89e7	                            mov rdi, r12	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4005498	      0xe803deffff	                 call sym.parse_register	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x400549d	          0x4885c0	                           test rax, rax	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x40054a0	    0x488905000000	            mov qword [0x040054a7], rax 	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x40054a7	     0xf84dc010000	                            je 0x4005689	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x40054ad	    0x486305000000	         movsxd rax, dword [0x040054b4] 	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x40054b4	    0x800cc5000000	                   or byte [rax*8], 0x40	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x40054bc	      0xe964faffff	                           jmp 0x4004f25	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x40054c1	     0xf1f80000000	                         nop dword [rax]	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x40054c8	      0xba05000000	                              mov edx, 5	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x40054cd	      0xbe00000000	                              mov esi, 0	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x40054d2	            0x31ff	                            xor edi, edi	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x40054d4	      0xe800000000	                          call 0x40054d9	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x40054d9	          0x4889c7	                            mov rdi, rax	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x40054dc	            0x31c0	                            xor eax, eax	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x40054de	      0xe800000000	                          call 0x40054e3	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x40054e3	            0x31c0	                            xor eax, eax	      9451	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x40054e5	      0xe99df6ffff	                           jmp 0x4004b87	      9451	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x40054ea	    0x660f1f440000	                    nop word [rax + rax]	      9451	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x40054f0	      0xba05000000	                              mov edx, 5	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40054f5	      0xbe00000000	                              mov esi, 0	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40054fa	      0xe9c5faffff	                           jmp 0x4004fc4	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40054ff	              0x90	                                     nop	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4005500	          0x4889ef	                            mov rdi, rbp	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4005503	      0xe838f2ffff	       call sym.RC_SAE_immediate.part.14	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x4005508	            0x85c0	                           test eax, eax	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x400550a	     0xf84a2030000	                            je 0x40058b2	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x4005510	      0xb801000000	                              mov eax, 1	      9667	tc-i386.c	FUNCTION_112
0x4005515	      0xe96df6ffff	                           jmp 0x4004b87	      9667	tc-i386.c	FUNCTION_112
0x400551a	    0x660f1f440000	                    nop word [rax + rax]	      9667	tc-i386.c	FUNCTION_112
0x4005520	    0x4881c900001c	                        or rcx, 0x1c0000	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4005527	          0x4084ff	                           test dil, dil	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400552a	        0x480f44d1	                          cmove rdx, rcx	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x400552e	      0xe92df8ffff	                           jmp 0x4004d60	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4005533	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4005539	        0x4d8d6502	                      lea r12, [r13 + 2]	      9530	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x400553d	      0xe9bcf9ffff	                           jmp 0x4004efe	      9530	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4005542	    0x41807c240120	                cmp byte [r12 + 1], 0x20	      9550	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4005548	      0x498d542402	                      lea rdx, [r12 + 2]	      9550	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x400554d	      0x498d442401	                      lea rax, [r12 + 1]	      9550	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4005552	      0x488d742418	                   lea rsi, [rsp + 0x18]	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4005557	        0x480f44c2	                          cmove rax, rdx	      9550	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x400555b	          0x4889c7	                            mov rdi, rax	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x400555e	          0x4989c4	                            mov r12, rax	      9550	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4005561	      0xe83addffff	                 call sym.parse_register	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4005566	          0x4885c0	                           test rax, rax	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4005569	    0x488905000000	            mov qword [0x04005570], rax 	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4005570	     0xf8403020000	                            je 0x4005779	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x4005576	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      9557	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34
0x400557b	           0xfb602	                   movzx eax, byte [rdx]	      9558	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x400557e	            0x3c20	                            cmp al, 0x20	      9558	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x4005580	     0xf8443010000	                            je 0x40056c9	      9558	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x4005586	            0x3c2c	                            cmp al, 0x2c	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x4005588	     0xf8448010000	                            je 0x40056d6	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x400558e	            0x3c29	                            cmp al, 0x29	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x4005590	          0x4d89ee	                            mov r14, r13	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x4005593	      0xba05000000	                              mov edx, 5	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4005598	      0xbe00000000	                              mov esi, 0	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x400559d	     0xf8442f7ffff	                            je 0x4004ce5	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x40055a3	      0xe9acf9ffff	                           jmp 0x4004f54	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x40055a8	        0x48c1e505	                              shl rbp, 5	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40055ac	    0xc68500000000	                       mov byte [rbp], 0	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40055b3	      0xe9c5fdffff	                           jmp 0x400537d	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40055b8	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40055be	        0x4983c401	                              add r12, 1	      9544	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x40055c2	      0xe970f9ffff	                           jmp 0x4004f37	      9544	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x40055c7	      0xba05000000	                              mov edx, 5	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055cc	      0xbe00000000	                              mov esi, 0	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055d1	            0x31ff	                            xor edi, edi	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055d3	      0xe800000000	                          call 0x40055d8	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055d8	      0xbe02000000	                              mov esi, 2	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055dd	          0x4889c7	                            mov rdi, rax	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055e0	            0x31c0	                            xor eax, eax	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055e2	      0xe800000000	                          call 0x40055e7	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x40055e7	            0x31c0	                            xor eax, eax	      9635	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50
0x40055e9	      0xe999f5ffff	                           jmp 0x4004b87	      9635	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50
0x40055ee	            0x31ff	                            xor edi, edi	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x40055f0	      0xba05000000	                              mov edx, 5	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x40055f5	      0xbe00000000	                              mov esi, 0	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x40055fa	        0x48890c24	                    mov qword [rsp], rcx	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x40055fe	      0xe800000000	                          call 0x4005603	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4005603	        0x488b0c24	                    mov rcx, qword [rsp]	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4005607	          0x4889c7	                            mov rdi, rax	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400560a	            0x31c0	                            xor eax, eax	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400560c	          0x4889ce	                            mov rsi, rcx	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400560f	      0xe800000000	                          call 0x4005614	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4005614	      0xe932fdffff	                           jmp 0x400534b	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4005619	        0x488d5101	                      lea rdx, [rcx + 1]	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400561d	    0x488915000000	            mov qword [0x04005624], rdx 	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4005624	         0xfb64101	               movzx eax, byte [rcx + 1]	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4005628	          0x4889d1	                            mov rcx, rdx	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400562b	      0xe90bfdffff	                           jmp 0x400533b	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4005630	      0x410fb60424	                   movzx eax, byte [r12]	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4005635	      0xe9fdf8ffff	                           jmp 0x4004f37	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400563a	            0x84d2	                             test dl, dl	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400563c	            0x7517	                           jne 0x4005655	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400563e	          0x4889ca	                            mov rdx, rcx	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x4005641	    0x4881ca00000c	                         or rdx, 0xc0000	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x4005648	    0x803d00000000	            cmp byte [0x0400564f], 0x77 	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400564f	     0xf850bf7ffff	                           jne 0x4004d60	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4005655	    0x4881c9000002	                         or rcx, 0x20000	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400565c	          0x4889ca	                            mov rdx, rcx	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x400565f	      0xe9fcf6ffff	                           jmp 0x4004d60	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4005664	            0x31f6	                            xor esi, esi	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x4005666	          0x4889cf	                            mov rdi, rcx	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x4005669	      0xe842ddffff	            call sym.check_VecOperations	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x400566e	          0x4885c0	                           test rax, rax	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x4005671	          0x4889c1	                            mov rcx, rax	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x4005674	    0x488905000000	            mov qword [0x0400567b], rax 	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x400567b	     0xf8457f5ffff	                            je 0x4004bd8	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x4005681	           0xfb600	                   movzx eax, byte [rax]	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x4005684	      0xe9bafcffff	                           jmp 0x4005343	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x4005689	      0x41803c2425	                    cmp byte [r12], 0x25	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x400568e	     0xf841d010000	                            je 0x40057b1	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4005694	          0x4c39f3	                            cmp rbx, r14	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4005697	     0xf8551f6ffff	                           jne 0x4004cee	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x400569d	      0xe9ebf7ffff	                           jmp 0x4004e8d	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x40056a2	      0xba05000000	                              mov edx, 5	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056a7	      0xbe00000000	                              mov esi, 0	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056ac	            0x31ff	                            xor edi, edi	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056ae	      0xe800000000	                          call 0x40056b3	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056b3	      0xbe02000000	                              mov esi, 2	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056b8	          0x4889c7	                            mov rdi, rax	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056bb	            0x31c0	                            xor eax, eax	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056bd	      0xe800000000	                          call 0x40056c2	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x40056c2	            0x31c0	                            xor eax, eax	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x40056c4	      0xe9bef4ffff	                           jmp 0x4004b87	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x40056c9	         0xfb64201	               movzx eax, byte [rdx + 1]	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x40056cd	        0x4883c201	                              add rdx, 1	      9559	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x40056d1	      0xe9b0feffff	                           jmp 0x4005586	      9559	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x40056d6	         0xfb64201	               movzx eax, byte [rdx + 1]	      9563	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x40056da	        0x4c8d6201	                      lea r12, [rdx + 1]	      9562	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x40056de	            0x3c20	                            cmp al, 0x20	      9563	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x40056e0	     0xf8488010000	                            je 0x400586e	      9563	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x40056e6	            0x3c29	                            cmp al, 0x29	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40056e8	     0xf84cc010000	                            je 0x40058ba	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40056ee	    0x4c8b35000000	            mov r14, qword [0x040056f5] 	      8759	tc-i386.c	FUNCTION_105
0x40056f5	    0x4c8925000000	            mov qword [0x040056fc], r12 	      8761	tc-i386.c	FUNCTION_105
0x40056fc	      0xe800000000	                          call 0x4005701	      8762	tc-i386.c	FUNCTION_105	CALL_1
0x4005701	        0x4883f802	                              cmp rax, 2	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005705	     0xf8403010000	                            je 0x400580e	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400570b	     0xf8edf000000	                           jle 0x40057f0	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005711	        0x4883f804	                              cmp rax, 4	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005715	     0xf8444010000	                            je 0x400585f	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400571b	        0x4883f808	                              cmp rax, 8	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400571f	     0xf85f8000000	                           jne 0x400581d	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005725	    0xc70500000000	               mov dword [0x0400572f], 3	      8776	tc-i386.c	FUNCTION_105	SWITCH_1
0x400572f	    0x48833d000000	               cmp qword [0x04005737], 0	      8790	tc-i386.c	FUNCTION_105	IF_1
0x4005737	     0xf8443010000	                            je 0x4005880	      8790	tc-i386.c	FUNCTION_105	IF_1
0x400573d	    0x488b15000000	            mov rdx, qword [0x04005744] 	      8796	tc-i386.c	FUNCTION_105
0x4005744	    0x4c8935000000	            mov qword [0x0400574b], r14 	      8797	tc-i386.c	FUNCTION_105
0x400574b	          0x4885d2	                           test rdx, rdx	      9588	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x400574e	     0xf8484f4ffff	                            je 0x4004bd8	      9588	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x4005754	           0xfb602	                   movzx eax, byte [rdx]	      9592	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4005757	            0x3c20	                            cmp al, 0x20	      9592	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4005759	     0xf84a6000000	                            je 0x4005805	      9592	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x400575f	            0x3c29	                            cmp al, 0x29	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4005761	          0x4d89ee	                            mov r14, r13	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4005764	     0xf847bf5ffff	                            je 0x4004ce5	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x400576a	      0xba05000000	                              mov edx, 5	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x400576f	      0xbe00000000	                              mov esi, 0	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4005774	      0xe9dbf7ffff	                           jmp 0x4004f54	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4005779	      0x410fb60424	                   movzx eax, byte [r12]	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x400577e	            0x3c25	                            cmp al, 0x25	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x4005780	            0x742f	                            je 0x40057b1	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x4005782	            0x3c29	                            cmp al, 0x29	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x4005784	     0xf8564ffffff	                           jne 0x40056ee	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x400578a	      0xba05000000	                              mov edx, 5	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x400578f	      0xbe00000000	                              mov esi, 0	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4005794	            0x31ff	                            xor edi, edi	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4005796	      0xe800000000	                          call 0x400579b	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x400579b	      0xbe29000000	                           mov esi, 0x29	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x40057a0	          0x4889c7	                            mov rdi, rax	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x40057a3	            0x31c0	                            xor eax, eax	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x40057a5	      0xe800000000	                          call 0x40057aa	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x40057aa	            0x31c0	                            xor eax, eax	      9607	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x40057ac	      0xe9d6f3ffff	                           jmp 0x4004b87	      9607	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45
0x40057b1	      0xbe2c000000	                           mov esi, 0x2c	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x40057b6	          0x4c89e7	                            mov rdi, r12	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x40057b9	      0xe800000000	                          call 0x40057be	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x40057be	          0x4885c0	                           test rax, rax	      9621	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x40057c1	      0x4889442418	             mov qword [rsp + 0x18], rax	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x40057c6	            0x7403	                            je 0x40057cb	      9621	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x40057c8	          0xc60000	                       mov byte [rax], 0	      9622	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x40057cb	      0xba05000000	                              mov edx, 5	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057d0	      0xbe00000000	                              mov esi, 0	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057d5	            0x31ff	                            xor edi, edi	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057d7	      0xe800000000	                          call 0x40057dc	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057dc	          0x4c89e6	                            mov rsi, r12	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057df	          0x4889c7	                            mov rdi, rax	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057e2	            0x31c0	                            xor eax, eax	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057e4	      0xe800000000	                          call 0x40057e9	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x40057e9	            0x31c0	                            xor eax, eax	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x40057eb	      0xe997f3ffff	                           jmp 0x4004b87	      9624	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x40057f0	        0x4883e801	                              sub rax, 1	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40057f4	            0x7527	                           jne 0x400581d	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40057f6	    0xc70500000000	               mov dword [0x04005800], 0	      8794	tc-i386.c	FUNCTION_105	IF_1
0x4005800	      0xe938ffffff	                           jmp 0x400573d	      8794	tc-i386.c	FUNCTION_105	IF_1
0x4005805	         0xfb64201	               movzx eax, byte [rdx + 1]	      8794	tc-i386.c	FUNCTION_105	IF_1
0x4005809	      0xe951ffffff	                           jmp 0x400575f	      8794	tc-i386.c	FUNCTION_105	IF_1
0x400580e	    0xc70500000000	               mov dword [0x04005818], 1	      8770	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005818	      0xe912ffffff	                           jmp 0x400572f	      8770	tc-i386.c	FUNCTION_105	SWITCH_1
0x400581d	    0x488b05000000	            mov rax, qword [0x04005824] 	      8780	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005824	      0xba05000000	                              mov edx, 5	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4005829	      0xbe00000000	                              mov esi, 0	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400582e	            0x31ff	                            xor edi, edi	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4005830	           0xfb618	                   movzx ebx, byte [rax]	      8780	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005833	          0xc60000	                       mov byte [rax], 0	      8782	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005836	      0xe800000000	                          call 0x400583b	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400583b	          0x4c89e6	                            mov rsi, r12	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x400583e	          0x4889c7	                            mov rdi, rax	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4005841	            0x31c0	                            xor eax, eax	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4005843	      0xe800000000	                          call 0x4005848	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4005848	    0x488b05000000	            mov rax, qword [0x0400584f] 	      8785	tc-i386.c	FUNCTION_105	SWITCH_1
0x400584f	            0x8818	                      mov byte [rax], bl	      8785	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005851	    0x4c8935000000	            mov qword [0x04005858], r14 	      8786	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005858	            0x31c0	                            xor eax, eax	      9589	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x400585a	      0xe928f3ffff	                           jmp 0x4004b87	      9589	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x400585f	    0xc70500000000	               mov dword [0x04005869], 2	      8773	tc-i386.c	FUNCTION_105	SWITCH_1
0x4005869	      0xe9c1feffff	                           jmp 0x400572f	      8773	tc-i386.c	FUNCTION_105	SWITCH_1
0x400586e	        0x4c8d6202	                      lea r12, [rdx + 2]	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x4005872	         0xfb64202	               movzx eax, byte [rdx + 2]	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x4005876	      0xe96bfeffff	                           jmp 0x40056e6	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x400587b	      0xe800000000	                          call 0x4005880	      9668	tc-i386.c	FUNCTION_112
0x4005880	    0x8b0d00000000	            mov ecx, dword [0x04005886] 	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4005886	    0x41bc01000000	                             mov r12d, 1	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400588c	            0x31ff	                            xor edi, edi	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400588e	      0xba05000000	                              mov edx, 5	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4005893	      0xbe00000000	                              mov esi, 0	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4005898	          0x41d3e4	                            shl r12d, cl	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x400589b	      0xe800000000	                          call 0x40058a0	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058a0	          0x4489e6	                           mov esi, r12d	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058a3	          0x4889c7	                            mov rdi, rax	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058a6	            0x31c0	                            xor eax, eax	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058a8	      0xe800000000	                          call 0x40058ad	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058ad	      0xe944ffffff	                           jmp 0x40057f6	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058b2	           0xfb603	                   movzx eax, byte [rbx]	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058b5	      0xe9b3f3ffff	                           jmp 0x4004c6d	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x40058ba	          0x4d89ee	                            mov r14, r13	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40058bd	      0xe923f4ffff	                           jmp 0x4004ce5	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
parse_real_register	IF,27:DO,0:ELSE,0:WHILE,1:CALL,4:functions,0:SWITCH,0:FOR,0	187
0x4002fb0	            0x4154	                                push r12	     10161	tc-i386.c	FUNCTION_120
0x4002fb2	              0x55	                                push rbp	     10161	tc-i386.c	FUNCTION_120
0x4002fb3	          0x4889f5	                            mov rbp, rsi	     10161	tc-i386.c	FUNCTION_120
0x4002fb6	              0x53	                                push rbx	     10161	tc-i386.c	FUNCTION_120
0x4002fb7	          0x4889fb	                            mov rbx, rdi	     10161	tc-i386.c	FUNCTION_120
0x4002fba	        0x4883ec20	                           sub rsp, 0x20	     10161	tc-i386.c	FUNCTION_120
0x4002fbe	    0x64488b042528	                mov rax, qword fs:[0x28]	     10161	tc-i386.c	FUNCTION_120
0x4002fc7	      0x4889442418	             mov qword [rsp + 0x18], rax	     10161	tc-i386.c	FUNCTION_120
0x4002fcc	            0x31c0	                            xor eax, eax	     10161	tc-i386.c	FUNCTION_120
0x4002fce	           0xfb607	                   movzx eax, byte [rdi]	     10168	tc-i386.c	FUNCTION_120	IF_1
0x4002fd1	            0x3c25	                            cmp al, 0x25	     10168	tc-i386.c	FUNCTION_120	IF_1
0x4002fd3	            0x745b	                            je 0x4003030	     10168	tc-i386.c	FUNCTION_120	IF_1
0x4002fd5	            0x3c20	                            cmp al, 0x20	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4002fd7	            0x7463	                            je 0x400303c	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4002fd9	     0xfb690000000	                   movzx edx, byte [rax]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002fe0	            0x84d2	                             test dl, dl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002fe2	          0x881424	                      mov byte [rsp], dl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002fe5	            0x7471	                            je 0x4003058	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002fe7	        0x488d7307	                      lea rsi, [rbx + 7]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002feb	      0x488d542401	                      lea rdx, [rsp + 1]	     10172	tc-i386.c	FUNCTION_120	IF_2
0x4002ff0	        0x4883c301	                              add rbx, 1	     10179	tc-i386.c	FUNCTION_120	WHILE_1
0x4002ff4	           0xfb603	                   movzx eax, byte [rbx]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002ff7	        0x4883c201	                              add rdx, 1	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002ffb	     0xfb688000000	                   movzx ecx, byte [rax]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003002	            0x84c9	                             test cl, cl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003004	          0x884aff	                  mov byte [rdx - 1], cl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003007	            0x744f	                            je 0x4003058	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003009	          0x4839f3	                            cmp rbx, rsi	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x400300c	            0x75e2	                           jne 0x4002ff0	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x400300e	            0x31c0	                            xor eax, eax	     10178	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4003010	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10286	tc-i386.c	FUNCTION_120
0x4003015	    0x6448333c2528	                xor rdi, qword fs:[0x28]	     10286	tc-i386.c	FUNCTION_120
0x400301e	     0xf855d020000	                           jne 0x4003281	     10286	tc-i386.c	FUNCTION_120
0x4003024	        0x4883c420	                           add rsp, 0x20	     10286	tc-i386.c	FUNCTION_120
0x4003028	              0x5b	                                 pop rbx	     10286	tc-i386.c	FUNCTION_120
0x4003029	              0x5d	                                 pop rbp	     10286	tc-i386.c	FUNCTION_120
0x400302a	            0x415c	                                 pop r12	     10286	tc-i386.c	FUNCTION_120
0x400302c	              0xc3	                                     ret	     10286	tc-i386.c	FUNCTION_120
0x400302d	           0xf1f00	                         nop dword [rax]	     10286	tc-i386.c	FUNCTION_120
0x4003030	         0xfb64701	               movzx eax, byte [rdi + 1]	     10286	tc-i386.c	FUNCTION_120
0x4003034	        0x4883c301	                              add rbx, 1	     10169	tc-i386.c	FUNCTION_120	IF_1
0x4003038	            0x3c20	                            cmp al, 0x20	     10171	tc-i386.c	FUNCTION_120	IF_2
0x400303a	            0x759d	                           jne 0x4002fd9	     10171	tc-i386.c	FUNCTION_120	IF_2
0x400303c	         0xfb64301	               movzx eax, byte [rbx + 1]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003040	        0x4883c301	                              add rbx, 1	     10172	tc-i386.c	FUNCTION_120	IF_2
0x4003044	     0xfb690000000	                   movzx edx, byte [rax]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x400304b	            0x84d2	                             test dl, dl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x400304d	          0x881424	                      mov byte [rsp], dl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003050	            0x7595	                           jne 0x4002fe7	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003052	    0x660f1f440000	                    nop word [rax + rax]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4003058	    0x448b15000000	           mov r10d, dword [0x0400305f] 	     10185	tc-i386.c	FUNCTION_120	IF_4
0x400305f	          0x4585d2	                         test r10d, r10d	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4003062	            0x7409	                            je 0x400306d	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4003064	    0x80b800000000	                       cmp byte [rax], 0	     10185	tc-i386.c	FUNCTION_120	IF_4
0x400306b	            0x75a1	                           jne 0x400300e	     10185	tc-i386.c	FUNCTION_120	IF_4
0x400306d	    0x488b3d000000	            mov rdi, qword [0x04003074] 	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x4003074	        0x48895d00	                    mov qword [rbp], rbx	     10188	tc-i386.c	FUNCTION_120
0x4003078	          0x4889e6	                            mov rsi, rsp	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x400307b	      0xe800000000	                          call 0x4003080	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x4003080	    0x483d00000000	                              cmp rax, 0	     10193	tc-i386.c	FUNCTION_120	IF_5
0x4003086	          0x4889c2	                            mov rdx, rax	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x4003089	     0xf844f010000	                            je 0x40031de	     10193	tc-i386.c	FUNCTION_120	IF_5
0x400308f	          0x4885c0	                           test rax, rax	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4003092	     0xf8476ffffff	                            je 0x400300e	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4003098	    0x448b0d000000	            mov r9d, dword [0x0400309f] 	     10226	tc-i386.c	FUNCTION_120	IF_13
0x400309f	          0x4889d0	                            mov rax, rdx	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x40030a2	          0x4585c9	                           test r9d, r9d	     10226	tc-i386.c	FUNCTION_120	IF_13
0x40030a5	     0xf8565ffffff	                           jne 0x4003010	     10226	tc-i386.c	FUNCTION_120	IF_13
0x40030ab	        0x448b420c	              mov r8d, dword [rdx + 0xc]	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40030af	          0x4585c0	                           test r8d, r8d	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40030b2	            0x750b	                           jne 0x40030bf	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x40030b4	          0x8b7a08	                mov edi, dword [rdx + 8]	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x40030b7	            0x85ff	                           test edi, edi	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x40030b9	     0xf844fffffff	                            je 0x400300e	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x40030bf	    0xf74208700100	       test dword [rdx + 8], 0x80000170 	     10232	tc-i386.c	FUNCTION_120	IF_15
0x40030c6	            0x740d	                            je 0x40030d5	     10232	tc-i386.c	FUNCTION_120	IF_15
0x40030c8	    0xf60500000000	               test byte [0x040030cf], 4	     10237	tc-i386.c	FUNCTION_120	IF_15
0x40030cf	     0xf8439ffffff	                            je 0x400300e	     10237	tc-i386.c	FUNCTION_120	IF_15
0x40030d5	         0xfb64a08	               movzx ecx, byte [rdx + 8]	     10240	tc-i386.c	FUNCTION_120	IF_16
0x40030d9	          0xf6c102	                              test cl, 2	     10240	tc-i386.c	FUNCTION_120	IF_16
0x40030dc	            0x740d	                            je 0x40030eb	     10240	tc-i386.c	FUNCTION_120	IF_16
0x40030de	    0xf60500000000	           test byte [0x040030e5], 0x40 	     10240	tc-i386.c	FUNCTION_120	IF_16
0x40030e5	     0xf8423ffffff	                            je 0x400300e	     10240	tc-i386.c	FUNCTION_120	IF_16
0x40030eb	     0xfb605000000	           movzx eax, byte [0x040030f2] 	     10243	tc-i386.c	FUNCTION_120	IF_17
0x40030f2	            0x84c0	                             test al, al	     10243	tc-i386.c	FUNCTION_120	IF_17
0x40030f4	            0x783a	                            js 0x4003130	     10243	tc-i386.c	FUNCTION_120	IF_17
0x40030f6	    0x48be08000000	                movabs rsi, 0x2000000008	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4003100	        0x48857208	               test qword [rdx + 8], rsi	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4003104	     0xf8504ffffff	                           jne 0x400300e	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x400310a	            0xa820	                           test al, 0x20	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x400310c	            0x7522	                           jne 0x4003130	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x400310e	         0xfb6420c	            movzx eax, byte [rdx + 0xc] 	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4003112	            0xa810	                           test al, 0x10	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4003114	     0xf85f4feffff	                           jne 0x400300e	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x400311a	    0x803d00000000	                cmp byte [0x04003121], 0	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4003121	            0x780d	                            js 0x4003130	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4003123	            0xa808	                              test al, 8	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4003125	     0xf85e3feffff	                           jne 0x400300e	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x400312b	       0xf1f440000	                   nop dword [rax + rax]	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4003130	        0xf6420d02	                test byte [rdx + 0xd], 2	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4003134	            0x740d	                            je 0x4003143	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4003136	    0xf60500000000	               test byte [0x0400313d], 1	     10258	tc-i386.c	FUNCTION_120	IF_22
0x400313d	     0xf84cbfeffff	                            je 0x400300e	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4003143	    0x8b3500000000	            mov esi, dword [0x04003149] 	     10262	tc-i386.c	FUNCTION_120	IF_23
0x4003149	            0x85f6	                           test esi, esi	     10262	tc-i386.c	FUNCTION_120	IF_23
0x400314b	            0x750f	                           jne 0x400315c	     10262	tc-i386.c	FUNCTION_120	IF_23
0x400314d	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4003151	          0x83c004	                              add eax, 4	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4003154	            0x3c01	                               cmp al, 1	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4003156	     0xf86b2feffff	                           jbe 0x400300e	     10263	tc-i386.c	FUNCTION_120	IF_23
0x400315c	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4003160	            0xa804	                              test al, 4	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4003162	            0x7424	                            je 0x4003188	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4003164	    0x803d00000000	                cmp byte [0x0400316b], 0	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x400316b	     0xf899dfeffff	                           jns 0x400300e	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4003171	    0x833d00000000	               cmp dword [0x04003178], 2	     10271	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4003178	     0xf8590feffff	                           jne 0x400300e	     10271	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x400317e	    0xc70500000000	               mov dword [0x04003188], 3	     10274	tc-i386.c	FUNCTION_120	IF_24
0x4003188	            0xa803	                              test al, 3	     10277	tc-i386.c	FUNCTION_120	IF_26
0x400318a	            0x7534	                           jne 0x40031c0	     10277	tc-i386.c	FUNCTION_120	IF_26
0x400318c	        0xf6420c02	                test byte [rdx + 0xc], 2	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4003190	            0x752e	                           jne 0x40031c0	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4003192	        0xf6420901	                  test byte [rdx + 9], 1	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4003196	          0x4889d0	                            mov rax, rdx	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4003199	     0xf8471feffff	                            je 0x4003010	     10282	tc-i386.c	FUNCTION_120	IF_27
0x400319f	        0x807a11ff	            cmp byte [rdx + 0x11], 0xff 	     10282	tc-i386.c	FUNCTION_120	IF_27
0x40031a3	     0xf8567feffff	                           jne 0x4003010	     10282	tc-i386.c	FUNCTION_120	IF_27
0x40031a9	    0x8b1500000000	            mov edx, dword [0x040031af] 	     10282	tc-i386.c	FUNCTION_120	IF_27
0x40031af	            0x85d2	                           test edx, edx	     10282	tc-i386.c	FUNCTION_120	IF_27
0x40031b1	     0xf8559feffff	                           jne 0x4003010	     10282	tc-i386.c	FUNCTION_120	IF_27
0x40031b7	      0xe952feffff	                           jmp 0x400300e	     10282	tc-i386.c	FUNCTION_120	IF_27
0x40031bc	         0xf1f4000	                         nop dword [rax]	     10282	tc-i386.c	FUNCTION_120	IF_27
0x40031c0	    0xf60500000000	               test byte [0x040031c7], 2	     10278	tc-i386.c	FUNCTION_120	IF_26
0x40031c7	            0x750e	                           jne 0x40031d7	     10278	tc-i386.c	FUNCTION_120	IF_26
0x40031c9	    0x833d00000000	               cmp dword [0x040031d0], 2	     10279	tc-i386.c	FUNCTION_120	IF_26
0x40031d0	            0x74c0	                            je 0x4003192	     10279	tc-i386.c	FUNCTION_120	IF_26
0x40031d2	      0xe937feffff	                           jmp 0x400300e	     10279	tc-i386.c	FUNCTION_120	IF_26
0x40031d7	          0x83e110	                           and ecx, 0x10	     10278	tc-i386.c	FUNCTION_120	IF_26
0x40031da	            0x75b6	                           jne 0x4003192	     10278	tc-i386.c	FUNCTION_120	IF_26
0x40031dc	            0xebeb	                           jmp 0x40031c9	     10278	tc-i386.c	FUNCTION_120	IF_26
0x40031de	    0xf60500000000	            test byte [0x040031e5], 0xe 	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x40031e5	     0xf8423feffff	                            je 0x400300e	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x40031eb	           0xfb603	                   movzx eax, byte [rbx]	     10200	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x40031ee	            0x3c20	                            cmp al, 0x20	     10200	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x40031f0	            0x7470	                            je 0x4003262	     10200	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x40031f2	            0x3c28	                            cmp al, 0x28	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x40031f4	     0xf859efeffff	                           jne 0x4003098	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x40031fa	      0x440fb66301	              movzx r12d, byte [rbx + 1]	     10205	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x40031ff	        0x488d4301	                      lea rax, [rbx + 1]	     10204	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4003203	        0x4180fc20	                          cmp r12b, 0x20	     10205	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4003207	            0x746d	                            je 0x4003276	     10205	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4003209	      0x418d5424d0	                   lea edx, [r12 - 0x30]	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x400320e	          0x80fa07	                               cmp dl, 7	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4003211	     0xf87f7fdffff	                            ja 0x400300e	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4003217	         0xfb64801	               movzx ecx, byte [rax + 1]	     10211	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x400321b	        0x488d5001	                      lea rdx, [rax + 1]	     10210	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x400321f	          0x80f920	                            cmp cl, 0x20	     10211	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4003222	            0x7448	                            je 0x400326c	     10211	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4003224	          0x80f929	                            cmp cl, 0x29	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003227	     0xf85e1fdffff	                           jne 0x400300e	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x400322d	    0x488b3d000000	            mov rdi, qword [0x04003234] 	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x4003234	        0x4883c201	                              add rdx, 1	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003238	      0xbe00000000	                              mov esi, 0	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x400323d	        0x48895500	                    mov qword [rbp], rdx	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003241	      0xe800000000	                          call 0x4003246	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x4003246	          0x4885c0	                           test rax, rax	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4003249	            0x743b	                            je 0x4003286	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x400324b	        0x410fbed4	                         movsx edx, r12b	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x400324f	          0x83ea30	                           sub edx, 0x30	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003252	          0x4863d2	                         movsxd rdx, edx	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003255	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003259	        0x488d04d0	                  lea rax, [rax + rdx*8]	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x400325d	      0xe9aefdffff	                           jmp 0x4003010	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003262	         0xfb64301	               movzx eax, byte [rbx + 1]	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4003266	        0x4883c301	                              add rbx, 1	     10201	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x400326a	            0xeb86	                           jmp 0x40031f2	     10201	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x400326c	        0x488d5002	                      lea rdx, [rax + 2]	     10212	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4003270	         0xfb64802	               movzx ecx, byte [rax + 2]	     10212	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4003274	            0xebae	                           jmp 0x4003224	     10212	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_11
0x4003276	        0x488d4302	                      lea rax, [rbx + 2]	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x400327a	      0x440fb66302	              movzx r12d, byte [rbx + 2]	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x400327f	            0xeb88	                           jmp 0x4003209	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4003281	      0xe800000000	                          call 0x4003286	     10286	tc-i386.c	FUNCTION_120
0x4003286	      0xba00000000	                              mov edx, 0	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x400328b	      0xbee9270000	                         mov esi, 0x27e9	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4003290	      0xbf00000000	                              mov edi, 0	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4003295	      0xe800000000	                          call 0x400329a	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
i386_frag_max_var	IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	13
0x400e770	        0x837f5c07	               cmp dword [rdi + 0x5c], 7	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e774	            0x750f	                           jne 0x400e785	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e776	          0x8b4760	            mov eax, dword [rdi + 0x60] 	      9679	tc-i386.c	FUNCTION_113
0x400e779	          0xc1e802	                              shr eax, 2	      9679	tc-i386.c	FUNCTION_113
0x400e77c	          0x83f801	                              cmp eax, 1	      9679	tc-i386.c	FUNCTION_113
0x400e77f	            0x19c0	                            sbb eax, eax	      9679	tc-i386.c	FUNCTION_113
0x400e781	          0x83c005	                              add eax, 5	      9679	tc-i386.c	FUNCTION_113
0x400e784	              0xc3	                                     ret	      9680	tc-i386.c	FUNCTION_113
0x400e785	              0x50	                                push rax	      9675	tc-i386.c	FUNCTION_113
0x400e786	      0xba00000000	                              mov edx, 0	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e78b	      0xbece250000	                         mov esi, 0x25ce	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e790	      0xbf00000000	                              mov edi, 0	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e795	      0xe800000000	                          call 0x400e79a	      9678	tc-i386.c	FUNCTION_113	CALL_1
tc_gen_reloc	IF,13:DO,0:ELSE,6:WHILE,0:CALL,26:functions,0:SWITCH,5:FOR,0	326
0x4010810	            0x4156	                                push r14	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010812	            0x4155	                                push r13	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010814	          0x4989fd	                            mov r13, rdi	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010817	            0x4154	                                push r12	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010819	              0x55	                                push rbp	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401081a	          0x4889f5	                            mov rbp, rsi	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401081d	              0x53	                                push rbx	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401081e	        0x4883ec10	                           sub rsp, 0x10	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010822	          0x8b7e50	            mov edi, dword [rsi + 0x50] 	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010825	    0x64488b042528	                mov rax, qword fs:[0x28]	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401082e	      0x4889442408	                mov qword [rsp + 8], rax	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010833	            0x31c0	                            xor eax, eax	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010835	    0x81ff79010000	                          cmp edi, 0x179	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401083b	     0xf871f010000	                            ja 0x4010960	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010841	    0x81ff78010000	                          cmp edi, 0x178	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010847	     0xf83db010000	                           jae 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401084d	    0x81ff65010000	                          cmp edi, 0x165	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010853	     0xf87a7010000	                            ja 0x4010a00	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010859	    0x81ff64010000	                          cmp edi, 0x164	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401085f	     0xf83c3010000	                           jae 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010865	          0x83ff24	                           cmp edi, 0x24	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010868	     0xf827a020000	                            jb 0x4010ae8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401086e	          0x83ff25	                           cmp edi, 0x25	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010871	     0xf87a9040000	                            ja 0x4010d20	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010877	        0x488b7e18	            mov rdi, qword [rsi + 0x18] 	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x401087b	      0xe800000000	                          call 0x4010880	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010880	            0x85c0	                           test eax, eax	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010882	     0xf8588030000	                           jne 0x4010c10	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010888	          0x8b7d50	            mov edi, dword [rbp + 0x50] 	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x401088b	          0x83ff02	                              cmp edi, 2	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x401088e	            0x89fb	                            mov ebx, edi	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4010890	     0xf8562030000	                           jne 0x4010bf8	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4010896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x40108a0	    0x488b05000000	            mov rax, qword [0x040108a7] 	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x40108a7	          0x4885c0	                           test rax, rax	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x40108aa	            0x740a	                            je 0x40108b6	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x40108ac	        0x483b4518	            cmp rax, qword [rbp + 0x18] 	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x40108b0	     0xf8452040000	                            je 0x4010d08	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x40108b6	      0xbf20000000	                           mov edi, 0x20	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x40108bb	      0xe800000000	                          call 0x40108c0	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x40108c0	      0xbf08000000	                              mov edi, 8	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x40108c5	          0x4989c4	                            mov r12, rax	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x40108c8	      0xe800000000	                          call 0x40108cd	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x40108cd	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	     11429	tc-i386.c	FUNCTION_134	IF_8
0x40108d1	        0x49890424	                    mov qword [r12], rax	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x40108d5	          0x4989c6	                            mov r14, rax	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x40108d8	      0xe800000000	                          call 0x40108dd	     11429	tc-i386.c	FUNCTION_134	IF_8
0x40108dd	        0x488b5508	                mov rdx, qword [rbp + 8]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x40108e1	          0x498906	                    mov qword [r14], rax	     11429	tc-i386.c	FUNCTION_134	IF_8
0x40108e4	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x40108e8	          0x480302	                    add rax, qword [rdx]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x40108eb	    0x8b1500000000	            mov edx, dword [0x040108f1] 	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x40108f1	            0x85d2	                           test edx, edx	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x40108f3	      0x4989442408	                mov qword [r12 + 8], rax	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x40108f8	     0xf856a010000	                           jne 0x4010a68	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x40108fe	    0x817d50a40500	          cmp dword [rbp + 0x50], 0x5a4 	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010905	     0xf8485030000	                            je 0x4010c90	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x401090b	    0x49c744241000	               mov qword [r12 + 0x10], 0	     11444	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010914	    0x488b3d000000	            mov rdi, qword [0x0401091b] 	     11495	tc-i386.c	
0x401091b	            0x89de	                            mov esi, ebx	     11495	tc-i386.c	
0x401091d	          0x4d89e5	                            mov r13, r12	     11495	tc-i386.c	
0x4010920	      0xe800000000	                          call 0x4010925	     11495	tc-i386.c	
0x4010925	          0x4885c0	                           test rax, rax	     11496	tc-i386.c	
0x4010928	      0x4989442418	             mov qword [r12 + 0x18], rax	     11495	tc-i386.c	
0x401092d	     0xf846d030000	                            je 0x4010ca0	     11496	tc-i386.c	
0x4010933	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     11507	tc-i386.c	FUNCTION_135
0x4010938	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     11507	tc-i386.c	FUNCTION_135
0x4010941	          0x4c89e8	                            mov rax, r13	     11507	tc-i386.c	FUNCTION_135
0x4010944	     0xf8568040000	                           jne 0x4010db2	     11507	tc-i386.c	FUNCTION_135
0x401094a	        0x4883c410	                           add rsp, 0x10	     11507	tc-i386.c	FUNCTION_135
0x401094e	              0x5b	                                 pop rbx	     11507	tc-i386.c	FUNCTION_135
0x401094f	              0x5d	                                 pop rbp	     11507	tc-i386.c	FUNCTION_135
0x4010950	            0x415c	                                 pop r12	     11507	tc-i386.c	FUNCTION_135
0x4010952	            0x415d	                                 pop r13	     11507	tc-i386.c	FUNCTION_135
0x4010954	            0x415e	                                 pop r14	     11507	tc-i386.c	FUNCTION_135
0x4010956	              0xc3	                                     ret	     11507	tc-i386.c	FUNCTION_135
0x4010957	    0x660f1f840000	                    nop word [rax + rax]	     11507	tc-i386.c	FUNCTION_135
0x4010960	    0x81ff95010000	                          cmp edi, 0x195	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010966	     0xf8754010000	                            ja 0x4010ac0	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401096c	    0x81ff86010000	                          cmp edi, 0x186	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010972	     0xf83b0000000	                           jae 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010978	    0x81ff83010000	                          cmp edi, 0x183	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401097e	     0xf84a4000000	                            je 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010984	     0xf86a6030000	                           jbe 0x4010d30	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401098a	    0x81ff84010000	                          cmp edi, 0x184	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010990	     0xf8552010000	                           jne 0x4010ae8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010996	          0xf60601	                      test byte [rsi], 1	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4010999	     0xf8401020000	                            je 0x4010ba0	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x401099f	      0x440fb66502	              movzx r12d, byte [rbp + 2]	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109a4	        0x4180fc02	                             cmp r12b, 2	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109a8	     0xf84da030000	                            je 0x4010d88	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109ae	     0xf86ac030000	                           jbe 0x4010d60	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109b4	        0x4180fc04	                             cmp r12b, 4	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109b8	     0xf84ba030000	                            je 0x4010d78	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109be	        0x4180fc08	                             cmp r12b, 8	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109c2	      0xbb08000000	                              mov ebx, 8	     11384	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109c7	            0x746d	                            je 0x4010a36	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x40109c9	      0xba05000000	                              mov edx, 5	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109ce	      0xbe00000000	                              mov esi, 0	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109d3	            0x31ff	                            xor edi, edi	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109d5	      0xe800000000	                          call 0x40109da	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109da	          0x8b7568	            mov esi, dword [rbp + 0x68] 	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109dd	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109e1	          0x4889c2	                            mov rdx, rax	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109e4	        0x410fb6cc	                         movzx ecx, r12b	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109e8	            0x31c0	                            xor eax, eax	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109ea	      0xbb09000000	                              mov ebx, 9	     11378	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3	CALL_11
0x40109ef	      0xe800000000	                          call 0x40109f4	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109f4	      0xe9a7feffff	                           jmp 0x40108a0	     11379	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109f9	     0xf1f80000000	                         nop dword [rax]	     11379	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010a00	    0x81ff6a010000	                          cmp edi, 0x16a	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a06	     0xf82dc000000	                            jb 0x4010ae8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a0c	    0x81ff6b010000	                          cmp edi, 0x16b	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a12	            0x7614	                           jbe 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a14	    0x8d8793feffff	                  lea eax, [rdi - 0x16d]	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a1a	          0x83f807	                              cmp eax, 7	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a1d	     0xf87c5000000	                            ja 0x4010ae8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a23	       0xf1f440000	                   nop dword [rax + rax]	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a28	            0x89fb	                            mov ebx, edi	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010a2a	    0x81fb84010000	                          cmp ebx, 0x184	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a30	     0xf846afeffff	                            je 0x40108a0	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a36	          0x83fb01	                              cmp ebx, 1	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010a39	            0x7409	                            je 0x4010a44	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010a3b	          0x83fb08	                              cmp ebx, 8	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010a3e	     0xf8572feffff	                           jne 0x40108b6	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010a44	    0x488b05000000	            mov rax, qword [0x04010a4b] 	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4010a4b	          0x4885c0	                           test rax, rax	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4010a4e	     0xf8462feffff	                            je 0x40108b6	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4010a54	        0x483b4518	            cmp rax, qword [rbp + 0x18] 	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010a58	      0xb891010000	                          mov eax, 0x191	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010a5d	           0xf44d8	                          cmove ebx, eax	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010a60	      0xe951feffff	                           jmp 0x40108b6	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010a65	           0xf1f00	                         nop dword [rax]	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010a68	    0x8b0500000000	            mov eax, dword [0x04010a6e] 	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a6e	            0x85c0	                           test eax, eax	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a70	            0x742e	                            je 0x4010aa0	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a72	    0x81fb87010000	                          cmp ebx, 0x187	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a78	     0xf8632010000	                           jbe 0x4010bb0	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a7e	    0x81fb8d010000	                          cmp ebx, 0x18d	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a84	     0xf8437010000	                            je 0x4010bc1	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a8a	            0x7214	                            jb 0x4010aa0	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a8c	    0x8d8371feffff	                  lea eax, [rbx - 0x18f]	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a92	          0x83f804	                              cmp eax, 4	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a95	     0xf8626010000	                           jbe 0x4010bc1	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010a9b	       0xf1f440000	                   nop dword [rax + rax]	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010aa0	        0xf6450001	                      test byte [rbp], 1	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010aa4	     0xf85a6000000	                           jne 0x4010b50	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010aaa	        0x488b4528	            mov rax, qword [rbp + 0x28] 	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010aae	      0x4989442410	             mov qword [r12 + 0x10], rax	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010ab3	      0xe95cfeffff	                           jmp 0x4010914	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010ab8	     0xf1f84000000	                   nop dword [rax + rax]	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010ac0	    0x81ff9a010000	                          cmp edi, 0x19a	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010ac6	            0x7220	                            jb 0x4010ae8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010ac8	    0x81ff9b010000	                          cmp edi, 0x19b	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010ace	     0xf8654ffffff	                           jbe 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010ad4	    0x8d875dfaffff	                  lea eax, [rdi - 0x5a3]	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010ada	          0x83f801	                              cmp eax, 1	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010add	     0xf8645ffffff	                           jbe 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010ae3	       0xf1f440000	                   nop dword [rax + rax]	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010ae8	        0xf6450001	                      test byte [rbp], 1	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4010aec	     0xf85adfeffff	                           jne 0x401099f	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4010af2	      0x440fb66502	              movzx r12d, byte [rbp + 2]	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010af7	        0x4180fc02	                             cmp r12b, 2	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010afb	     0xf84a7020000	                            je 0x4010da8	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010b01	     0xf8641020000	                           jbe 0x4010d48	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010b07	        0x4180fc04	                             cmp r12b, 4	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010b0b	     0xf8487020000	                            je 0x4010d98	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010b11	        0x4180fc08	                             cmp r12b, 8	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010b15	      0xbb01000000	                              mov ebx, 1	     11402	tc-i386.c	FUNCTION_134	IF_5	ELSE_2
0x4010b1a	     0xf8416ffffff	                            je 0x4010a36	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010b20	      0xba05000000	                              mov edx, 5	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010b25	      0xbe00000000	                              mov esi, 0	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010b2a	            0x31ff	                            xor edi, edi	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010b2c	      0xe800000000	                          call 0x4010b31	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010b31	          0x8b7568	            mov esi, dword [rbp + 0x68] 	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010b34	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010b38	          0x4889c2	                            mov rdx, rax	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010b3b	        0x410fb6cc	                         movzx ecx, r12b	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010b3f	            0x31c0	                            xor eax, eax	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010b41	      0xbb02000000	                              mov ebx, 2	     11396	tc-i386.c	FUNCTION_134	IF_5
0x4010b46	      0xe800000000	                          call 0x4010b4b	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010b4b	      0xe950fdffff	                           jmp 0x40108a0	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b50	    0x8d8b83feffff	                  lea ecx, [rbx - 0x17d]	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b56	          0x83f91e	                           cmp ecx, 0x1e	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b59	            0x7725	                            ja 0x4010b80	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b5b	      0xb801000000	                              mov eax, 1	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b60	          0x48d3e0	                             shl rax, cl	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b63	      0xa943588061	                    test eax, 0x61805843	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b68	            0x7416	                            je 0x4010b80	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010b6a	         0xfb64502	               movzx eax, byte [rbp + 2]	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010b6e	        0x488b4d28	            mov rcx, qword [rbp + 0x28] 	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010b72	          0x4829c1	                            sub rcx, rax	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010b75	      0x49894c2410	             mov qword [r12 + 0x10], rcx	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010b7a	      0xe995fdffff	                           jmp 0x4010914	     11485	tc-i386.c	FUNCTION_134	IF_13
0x4010b7f	              0x90	                                     nop	     11485	tc-i386.c	FUNCTION_134	IF_13
0x4010b80	        0x488b5508	                mov rdx, qword [rbp + 8]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x4010b84	        0x488b4558	            mov rax, qword [rbp + 0x58] 	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4010b88	        0x49034528	             add rax, qword [r13 + 0x28]	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4010b8c	          0x480302	                    add rax, qword [rdx]	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4010b8f	        0x48034510	             add rax, qword [rbp + 0x10]	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4010b93	      0x4989442410	             mov qword [r12 + 0x10], rax	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4010b98	      0xe977fdffff	                           jmp 0x4010914	     11491	tc-i386.c	FUNCTION_134
0x4010b9d	           0xf1f00	                         nop dword [rax]	     11491	tc-i386.c	FUNCTION_134
0x4010ba0	      0xbb84010000	                          mov ebx, 0x184	     11491	tc-i386.c	FUNCTION_134
0x4010ba5	      0xe9f6fcffff	                           jmp 0x40108a0	     11491	tc-i386.c	FUNCTION_134
0x4010baa	    0x660f1f440000	                    nop word [rax + rax]	     11491	tc-i386.c	FUNCTION_134
0x4010bb0	    0x81fb86010000	                          cmp ebx, 0x186	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010bb6	            0x7309	                           jae 0x4010bc1	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010bb8	          0x83fb08	                              cmp ebx, 8	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010bbb	     0xf85dffeffff	                           jne 0x4010aa0	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010bc1	            0x89df	                            mov edi, ebx	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bc3	      0xe800000000	                          call 0x4010bc8	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bc8	            0x31ff	                            xor edi, edi	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bca	      0xba05000000	                              mov edx, 5	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bcf	      0xbe00000000	                              mov esi, 0	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bd4	          0x4989c6	                            mov r14, rax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bd7	      0xe800000000	                          call 0x4010bdc	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bdc	          0x8b7568	            mov esi, dword [rbp + 0x68] 	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bdf	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010be3	          0x4889c2	                            mov rdx, rax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010be6	          0x4c89f1	                            mov rcx, r14	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010be9	            0x31c0	                            xor eax, eax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010beb	      0xe800000000	                          call 0x4010bf0	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bf0	      0xe9abfeffff	                           jmp 0x4010aa0	     11464	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bf5	           0xf1f00	                         nop dword [rax]	     11464	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bf8	          0x83ff09	                              cmp edi, 9	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4010bfb	     0xf849ffcffff	                            je 0x40108a0	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4010c01	      0xe924feffff	                           jmp 0x4010a2a	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4010c06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11409	tc-i386.c	FUNCTION_134	ELSE_2	IF_7
0x4010c10	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c14	      0xe800000000	                          call 0x4010c19	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c19	            0x85c0	                           test eax, eax	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c1b	     0xf8567fcffff	                           jne 0x4010888	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c21	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c25	      0xe800000000	                          call 0x4010c2a	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c2a	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c2e	        0x48035038	             add rdx, qword [rax + 0x38]	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c32	        0x837d5024	           cmp dword [rbp + 0x50], 0x24 	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c36	          0x4889d0	                            mov rax, rdx	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c39	        0x48891424	                    mov qword [rsp], rdx	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c3d	            0x752c	                           jne 0x4010c6b	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c3f	      0xbaffffffff	                     mov edx, 0xffffffff	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c44	          0x4839d0	                            cmp rax, rdx	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c47	            0x7622	                           jbe 0x4010c6b	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c49	      0xba05000000	                              mov edx, 5	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c4e	      0xbe00000000	                              mov esi, 0	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c53	            0x31ff	                            xor edi, edi	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c55	      0xe800000000	                          call 0x4010c5a	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c5a	          0x8b7568	            mov esi, dword [rbp + 0x68] 	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c5d	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c61	          0x4889c2	                            mov rdx, rax	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c64	            0x31c0	                            xor eax, eax	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c66	      0xe800000000	                          call 0x4010c6b	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c6b	    0x48c745180000	               mov qword [rbp + 0x18], 0	     11309	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c73	    0x48c745200000	               mov qword [rbp + 0x20], 0	     11310	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c7b	            0x31d2	                            xor edx, edx	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c7d	          0x4889e6	                            mov rsi, rsp	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c80	          0x4889ef	                            mov rdi, rbp	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c83	          0x4531ed	                          xor r13d, r13d	     11312	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c86	      0xe800000000	                          call 0x4010c8b	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c8b	      0xe9a3fcffff	                           jmp 0x4010933	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010c90	        0x488b4528	            mov rax, qword [rbp + 0x28] 	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010c94	      0x4989442408	                mov qword [r12 + 8], rax	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010c99	      0xe96dfcffff	                           jmp 0x401090b	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010c9e	            0x6690	                                     nop	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010ca0	            0x89df	                            mov edi, ebx	     11498	tc-i386.c	FUNCTION_135
0x4010ca2	      0xe800000000	                          call 0x4010ca7	     11498	tc-i386.c	FUNCTION_135
0x4010ca7	            0x31ff	                            xor edi, edi	     11499	tc-i386.c	FUNCTION_135
0x4010ca9	      0xba05000000	                              mov edx, 5	     11499	tc-i386.c	FUNCTION_135
0x4010cae	      0xbe00000000	                              mov esi, 0	     11499	tc-i386.c	FUNCTION_135
0x4010cb3	          0x4889c3	                            mov rbx, rax	     11498	tc-i386.c	FUNCTION_135
0x4010cb6	      0xe800000000	                          call 0x4010cbb	     11499	tc-i386.c	FUNCTION_135
0x4010cbb	          0x8b7568	            mov esi, dword [rbp + 0x68] 	     11498	tc-i386.c	FUNCTION_135
0x4010cbe	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	     11498	tc-i386.c	FUNCTION_135
0x4010cc2	          0x4889c2	                            mov rdx, rax	     11498	tc-i386.c	FUNCTION_135
0x4010cc5	          0x4889d9	                            mov rcx, rbx	     11498	tc-i386.c	FUNCTION_135
0x4010cc8	            0x31c0	                            xor eax, eax	     11498	tc-i386.c	FUNCTION_135
0x4010cca	      0xe800000000	                          call 0x4010ccf	     11498	tc-i386.c	FUNCTION_135
0x4010ccf	    0x488b3d000000	            mov rdi, qword [0x04010cd6] 	     11502	tc-i386.c	FUNCTION_135
0x4010cd6	      0xbe02000000	                              mov esi, 2	     11502	tc-i386.c	FUNCTION_135
0x4010cdb	      0xe800000000	                          call 0x4010ce0	     11502	tc-i386.c	FUNCTION_135
0x4010ce0	          0x4885c0	                           test rax, rax	     11503	tc-i386.c	FUNCTION_135
0x4010ce3	      0x4989442418	             mov qword [r12 + 0x18], rax	     11502	tc-i386.c	FUNCTION_135
0x4010ce8	     0xf8545fcffff	                           jne 0x4010933	     11503	tc-i386.c	FUNCTION_135
0x4010cee	      0xba00000000	                              mov edx, 0	     11503	tc-i386.c	FUNCTION_135
0x4010cf3	      0xbeef2c0000	                         mov esi, 0x2cef	     11503	tc-i386.c	FUNCTION_135
0x4010cf8	      0xbf00000000	                              mov edi, 0	     11503	tc-i386.c	FUNCTION_135
0x4010cfd	      0xe800000000	                          call 0x4010d02	     11503	tc-i386.c	FUNCTION_135
0x4010d02	    0x660f1f440000	                    nop word [rax + rax]	     11503	tc-i386.c	FUNCTION_135
0x4010d08	    0x833d00000000	               cmp dword [0x04010d0f], 1	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010d0f	            0x19db	                            sbb ebx, ebx	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010d11	          0x83e3dd	                     and ebx, 0xffffffdd	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010d14	    0x81c38e010000	                          add ebx, 0x18e	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010d1a	      0xe997fbffff	                           jmp 0x40108b6	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010d1f	              0x90	                                     nop	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010d20	          0x83ff3e	                           cmp edi, 0x3e	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d23	     0xf85bffdffff	                           jne 0x4010ae8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d29	      0xe9fafcffff	                           jmp 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d2e	            0x6690	                                     nop	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d30	    0x8d8784feffff	                  lea eax, [rdi - 0x17c]	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d36	          0x83f802	                              cmp eax, 2	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d39	     0xf87a9fdffff	                            ja 0x4010ae8	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d3f	      0xe9e4fcffff	                           jmp 0x4010a28	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d44	         0xf1f4000	                         nop dword [rax]	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010d48	        0x4180fc01	                             cmp r12b, 1	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010d4c	      0xbb07000000	                              mov ebx, 7	     11398	tc-i386.c	FUNCTION_134	IF_5
0x4010d51	     0xf84dffcffff	                            je 0x4010a36	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010d57	      0xe9c4fdffff	                           jmp 0x4010b20	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010d5c	         0xf1f4000	                         nop dword [rax]	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010d60	        0x4180fc01	                             cmp r12b, 1	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d64	      0xbb0d000000	                            mov ebx, 0xd	     11380	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d69	     0xf84c7fcffff	                            je 0x4010a36	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d6f	      0xe955fcffff	                           jmp 0x40109c9	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d74	         0xf1f4000	                         nop dword [rax]	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d78	      0xbb09000000	                              mov ebx, 9	     11382	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d7d	      0xe91efbffff	                           jmp 0x40108a0	     11382	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d82	    0x660f1f440000	                    nop word [rax + rax]	     11382	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d88	      0xbb0b000000	                            mov ebx, 0xb	     11381	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d8d	      0xe9a4fcffff	                           jmp 0x4010a36	     11381	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d92	    0x660f1f440000	                    nop word [rax + rax]	     11381	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d98	      0xbb02000000	                              mov ebx, 2	     11400	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010d9d	      0xe9fefaffff	                           jmp 0x40108a0	     11400	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010da2	    0x660f1f440000	                    nop word [rax + rax]	     11400	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010da8	      0xbb05000000	                              mov ebx, 5	     11399	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010dad	      0xe984fcffff	                           jmp 0x4010a36	     11399	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010db2	      0xe800000000	                          call 0x4010db7	     11507	tc-i386.c	FUNCTION_135
process_suffix	IF,60:DO,0:ELSE,27:WHILE,0:CALL,17:functions,0:SWITCH,2:FOR,2	784
0x4000d60	     0xfb605000000	           movzx eax, byte [0x04000d67] 	      5798	tc-i386.c	FUNCTION_79	IF_1
0x4000d67	            0x4156	                                push r14	      5795	tc-i386.c	FUNCTION_79
0x4000d69	            0x4155	                                push r13	      5795	tc-i386.c	FUNCTION_79
0x4000d6b	            0x4154	                                push r12	      5795	tc-i386.c	FUNCTION_79
0x4000d6d	              0x55	                                push rbp	      5795	tc-i386.c	FUNCTION_79
0x4000d6e	              0x53	                                push rbx	      5795	tc-i386.c	FUNCTION_79
0x4000d6f	            0xa808	                              test al, 8	      5798	tc-i386.c	FUNCTION_79	IF_1
0x4000d71	            0x756d	                           jne 0x4000de0	      5798	tc-i386.c	FUNCTION_79	IF_1
0x4000d73	            0xa810	                           test al, 0x10	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4000d75	     0xf8465010000	                            je 0x4000ee0	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x4000d7b	    0xc60500000000	            mov byte [0x04000d82], 0x6c 	      5819	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x4000d82	            0xa802	                              test al, 2	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x4000d84	     0xf8426020000	                            je 0x4000fb0	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x4000d8a	    0x833500000000	               xor dword [0x04000d91], 4	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x4000d91	    0x8b1500000000	            mov edx, dword [0x04000d97] 	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x4000d97	    0x660f1f840000	                    nop word [rax + rax]	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x4000da0	            0x85d2	                           test edx, edx	      6055	tc-i386.c	FUNCTION_79	IF_57
0x4000da2	    0x8b3500000000	            mov esi, dword [0x04000da8] 	      6055	tc-i386.c	FUNCTION_79	IF_57
0x4000da8	            0x7417	                            je 0x4000dc1	      6055	tc-i386.c	FUNCTION_79	IF_57
0x4000daa	          0x83fe01	                              cmp esi, 1	      6056	tc-i386.c	FUNCTION_79	IF_57
0x4000dad	            0x7612	                           jbe 0x4000dc1	      6056	tc-i386.c	FUNCTION_79	IF_57
0x4000daf	     0xfb605000000	           movzx eax, byte [0x04000db6] 	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4000db6	          0x83e028	                           and eax, 0x28	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4000db9	            0x3c08	                               cmp al, 8	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4000dbb	     0xf846f020000	                            je 0x4001030	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4000dc1	      0xb801000000	                              mov eax, 1	      6090	tc-i386.c	FUNCTION_79
0x4000dc6	              0x5b	                                 pop rbx	      6091	tc-i386.c	FUNCTION_79
0x4000dc7	              0x5d	                                 pop rbp	      6091	tc-i386.c	FUNCTION_79
0x4000dc8	            0x415c	                                 pop r12	      6091	tc-i386.c	FUNCTION_79
0x4000dca	            0x415d	                                 pop r13	      6091	tc-i386.c	FUNCTION_79
0x4000dcc	            0x415e	                                 pop r14	      6091	tc-i386.c	FUNCTION_79
0x4000dce	              0xc3	                                     ret	      6091	tc-i386.c	FUNCTION_79
0x4000dcf	          0x83e204	                              and edx, 4	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x4000dd2	     0xf8528040000	                           jne 0x4001200	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x4000dd8	     0xf1f84000000	                   nop dword [rax + rax]	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x4000de0	    0xc60500000000	            mov byte [0x04000de7], 0x77 	      5817	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4000de7	      0xbb77000000	                           mov ebx, 0x77	      5817	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4000dec	     0xfb605000000	           movzx eax, byte [0x04000df3] 	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x4000df3	            0xa802	                              test al, 2	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x4000df5	            0x740f	                            je 0x4000e06	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x4000df7	            0xa810	                           test al, 0x10	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x4000df9	     0xf8409030000	                            je 0x4001108	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x4000dff	    0x830d00000000	                or dword [0x04000e06], 8	      5999	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x4000e06	    0x8b1500000000	            mov edx, dword [0x04000e0c] 	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e0c	            0x85d2	                           test edx, edx	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e0e	            0x7570	                           jne 0x4000e80	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e10	          0x80fb71	                            cmp bl, 0x71	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e13	     0xf84b7020000	                            je 0x40010d0	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e19	     0xfb605000000	           movzx eax, byte [0x04000e20] 	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e20	            0xa882	                           test al, 0x82	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e22	     0xf8578ffffff	                           jne 0x4000da0	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e28	    0x8b0500000000	            mov eax, dword [0x04000e2e] 	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e2e	          0x80fb6c	                            cmp bl, 0x6c	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e31	        0x400f95c6	                               setne sil	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e35	          0x83f801	                              cmp eax, 1	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e38	           0xf94c1	                                 sete cl	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e3b	          0x4038ce	                             cmp sil, cl	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e3e	     0xf843c050000	                            je 0x4001380	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e44	     0xfb605000000	           movzx eax, byte [0x04000e4b] 	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x4000e4b	          0x83e080	                     and eax, 0xffffff80	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x4000e4e	            0x3c01	                               cmp al, 1	      6030	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e50	            0x19ff	                            sbb edi, edi	      6030	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e52	          0x83c767	                           add edi, 0x67	      6030	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4000e55	      0xe886fdffff	                     call sym.add_prefix	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x4000e5a	            0x85c0	                           test eax, eax	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x4000e5c	     0xf84be010000	                            je 0x4001020	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x4000e62	    0x803d00000000	            cmp byte [0x04000e69], 0x71 	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000e69	     0xf8459020000	                            je 0x40010c8	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000e6f	    0x8b1500000000	            mov edx, dword [0x04000e75] 	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000e75	      0xe926ffffff	                           jmp 0x4000da0	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000e7a	    0x660f1f440000	                    nop word [rax + rax]	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000e80	    0xf60500000000	               test byte [0x04000e87], 1	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e87	            0x7487	                            je 0x4000e10	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e89	     0xfb605000000	           movzx eax, byte [0x04000e90] 	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e90	            0xa808	                              test al, 8	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e92	     0xf8478ffffff	                            je 0x4000e10	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e98	            0xa820	                           test al, 0x20	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000e9a	     0xf849d030000	                            je 0x400123d	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4000ea0	    0x8b3500000000	            mov esi, dword [0x04000ea6] 	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4000ea6	            0x85f6	                           test esi, esi	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4000ea8	     0xf84f2040000	                            je 0x40013a0	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4000eae	    0x488b0d000000	            mov rcx, qword [0x04000eb5] 	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4000eb5	        0x80790b00	                 cmp byte [rcx + 0xb], 0	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4000eb9	     0xf88d7040000	                            js 0x4001396	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x4000ebf	    0x803d00000000	            cmp byte [0x04000ec6], 0x71 	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000ec6	     0xf84a70c0000	                            je 0x4001b73	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000ecc	    0x8b3500000000	            mov esi, dword [0x04000ed2] 	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000ed2	      0xe9d3feffff	                           jmp 0x4000daa	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000ed7	    0x660f1f840000	                    nop word [rax + rax]	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4000ee0	            0xa820	                           test al, 0x20	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4000ee2	     0xf85b0000000	                           jne 0x4000f98	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x4000ee8	    0x8b1500000000	            mov edx, dword [0x04000eee] 	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x4000eee	            0x85d2	                           test edx, edx	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x4000ef0	     0xf84aa020000	                            je 0x40011a0	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x4000ef6	     0xfbe1d000000	           movsx ebx, byte [0x04000efd] 	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x4000efd	            0x84db	                             test bl, bl	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x4000eff	            0x89de	                            mov esi, ebx	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x4000f01	     0xf8548030000	                           jne 0x400124f	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x4000f07	    0x8b0d00000000	            mov ecx, dword [0x04000f0d] 	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x4000f0d	    0x81f9f1380ff2	                     cmp ecx, 0xf20f38f1	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x4000f13	     0xf8462060000	                            je 0x400157b	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x4000f19	    0x8b3500000000	            mov esi, dword [0x04000f1f] 	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4000f1f	    0x81f9f0380ff2	                     cmp ecx, 0xf20f38f0	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x4000f25	            0x89f2	                            mov edx, esi	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4000f27	     0xf84c0060000	                            je 0x40015ed	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x4000f2d	           0xf1f00	                         nop dword [rax]	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x4000f30	          0x83ea01	                              sub edx, 1	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4000f33	     0xf88c7020000	                            js 0x4001200	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x4000f39	          0x4863ca	                         movsxd rcx, edx	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4000f3c	        0x488d7906	                      lea rdi, [rcx + 6]	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4000f40	    0x803cfd000000	                     cmp byte [rdi*8], 0	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4000f48	            0x78e6	                            js 0x4000f30	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4000f4a	    0xf604fd000000	                    test byte [rdi*8], 1	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4000f52	            0x75dc	                           jne 0x4000f30	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x4000f54	        0x4883c10e	                            add rcx, 0xe	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4000f58	    0xf604cd000000	                    test byte [rcx*8], 1	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4000f60	            0x74ce	                            je 0x4000f30	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x4000f62	     0xfb63ccd0000	                 movzx edi, byte [rcx*8]	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4000f6a	        0x40f6c720	                          test dil, 0x20	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4000f6e	     0xf85700b0000	                           jne 0x4001ae4	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4000f74	        0x40f6c740	                          test dil, 0x40	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4000f78	     0xf8562feffff	                           jne 0x4000de0	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x4000f7e	          0x4084ff	                           test dil, dil	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4000f81	     0xf88f4fdffff	                            js 0x4000d7b	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x4000f87	    0xf604cd000000	                    test byte [rcx*8], 2	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4000f8f	            0x749f	                            je 0x4000f30	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4000f91	     0xf1f80000000	                         nop dword [rax]	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x4000f98	    0xc60500000000	            mov byte [0x04000f9f], 0x71 	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4000f9f	      0xbb71000000	                           mov ebx, 0x71	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4000fa4	      0xe943feffff	                           jmp 0x4000dec	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4000fa9	     0xf1f80000000	                         nop dword [rax]	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4000fb0	      0xbb6c000000	                           mov ebx, 0x6c	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4000fb5	      0xe932feffff	                           jmp 0x4000dec	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x4000fba	     0xfb60cd50000	                 movzx ecx, byte [rdx*8]	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4000fc2	          0xf6c140	                           test cl, 0x40	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4000fc5	            0x7508	                           jne 0x4000fcf	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4000fc7	            0x84c9	                             test cl, cl	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4000fc9	     0xf89f1080000	                           jns 0x40018c0	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4000fcf	          0x4584c0	                           test r8b, r8b	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4000fd2	     0xf85810b0000	                           jne 0x4001b59	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4000fd8	    0x440fbe2d0000	          movsx r13d, byte [0x04000fe0] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4000fe0	    0x4c8b25000000	            mov r12, qword [0x04000fe7] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4000fe7	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4000fef	          0x488b28	                    mov rbp, qword [rax]	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4000ff2	    0x488b1d000000	            mov rbx, qword [0x04000ff9] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4000ff9	      0xba05000000	                              mov edx, 5	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4000ffe	      0xbe00000000	                              mov esi, 0	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4001003	            0x31ff	                            xor edi, edi	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4001005	      0xe800000000	                          call 0x400100a	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400100a	          0x4589e8	                           mov r8d, r13d	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400100d	          0x4889c7	                            mov rdi, rax	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4001010	          0x4c89e1	                            mov rcx, r12	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4001013	          0x4889ea	                            mov rdx, rbp	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4001016	          0x4889de	                            mov rsi, rbx	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4001019	            0x31c0	                            xor eax, eax	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400101b	      0xe800000000	                          call 0x4001020	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x4001020	            0x31c0	                            xor eax, eax	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4001022	              0x5b	                                 pop rbx	      6091	tc-i386.c	FUNCTION_79
0x4001023	              0x5d	                                 pop rbp	      6091	tc-i386.c	FUNCTION_79
0x4001024	            0x415c	                                 pop r12	      6091	tc-i386.c	FUNCTION_79
0x4001026	            0x415d	                                 pop r13	      6091	tc-i386.c	FUNCTION_79
0x4001028	            0x415e	                                 pop r14	      6091	tc-i386.c	FUNCTION_79
0x400102a	              0xc3	                                     ret	      6091	tc-i386.c	FUNCTION_79
0x400102b	       0xf1f440000	                   nop dword [rax + rax]	      6091	tc-i386.c	FUNCTION_79
0x4001030	    0x8b0500000000	            mov eax, dword [0x04001036] 	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4001036	            0x85c0	                           test eax, eax	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4001038	     0xf853a010000	                           jne 0x4001178	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400103e	            0x31ff	                            xor edi, edi	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4001040	    0x803d00000000	                cmp byte [0x04001047], 0	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4001047	        0x400f94c7	                                sete dil	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400104b	      0xba00000000	                              mov edx, 0	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4001050	            0x31c0	                            xor eax, eax	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4001052	            0xeb19	                           jmp 0x400106d	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4001054	         0xf1f4000	                         nop dword [rax]	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4001058	        0xf6410b40	            test byte [rcx + 0xb], 0x40 	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400105c	            0x7431	                            je 0x400108f	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400105e	          0x83c001	                              add eax, 1	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4001061	        0x4883c208	                              add rdx, 8	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4001065	            0x39f0	                            cmp eax, esi	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x4001067	     0xf8354fdffff	                           jae 0x4000dc1	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400106d	            0x89c1	                            mov ecx, eax	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400106f	    0xf604cd000000	                    test byte [rcx*8], 1	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4001077	            0x74e5	                            je 0x400105e	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4001079	            0x85ff	                           test edi, edi	      6077	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400107b	    0x488b8aa00000	            mov rcx, qword [rdx + 0xa0] 	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4001082	            0x74d4	                            je 0x4001058	      6077	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4001084	          0x83ff01	                              cmp edi, 1	      6079	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4001087	            0x7537	                           jne 0x40010c0	      6079	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x4001089	        0x80790b00	                 cmp byte [rcx + 0xb], 0	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400108d	            0x78cf	                            js 0x400105e	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400108f	    0x488b1d000000	            mov rbx, qword [0x04001096] 	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x4001096	      0xba05000000	                              mov edx, 5	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400109b	      0xbe00000000	                              mov esi, 0	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x40010a0	            0x31ff	                            xor edi, edi	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40010a2	      0xe800000000	                          call 0x40010a7	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40010a7	          0x4889de	                            mov rsi, rbx	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40010aa	          0x4889c7	                            mov rdi, rax	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40010ad	            0x31c0	                            xor eax, eax	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40010af	      0xe800000000	                          call 0x40010b4	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40010b4	            0x31c0	                            xor eax, eax	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x40010b6	      0xe967ffffff	                           jmp 0x4001022	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x40010bb	       0xf1f440000	                   nop dword [rax + rax]	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x40010c0	        0xf6410c02	                test byte [rcx + 0xc], 2	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40010c4	            0x7598	                           jne 0x400105e	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40010c6	            0xebc7	                           jmp 0x400108f	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40010c8	    0x8b1500000000	            mov edx, dword [0x040010ce] 	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40010ce	            0x6690	                                     nop	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x40010d0	    0x833d00000000	               cmp dword [0x040010d7], 2	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010d7	     0xf85c3fcffff	                           jne 0x4000da0	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010dd	     0xfb605000000	           movzx eax, byte [0x040010e4] 	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010e4	            0xa840	                           test al, 0x40	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010e6	     0xf85b4fcffff	                           jne 0x4000da0	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010ec	    0x8b3500000000	            mov esi, dword [0x040010f2] 	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010f2	          0x83fe02	                              cmp esi, 2	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010f5	            0x741d	                            je 0x4001114	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010f7	    0x830d00000000	                or dword [0x040010fe], 8	      6050	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x40010fe	      0xe99dfcffff	                           jmp 0x4000da0	      6050	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001103	       0xf1f440000	                   nop dword [rax + rax]	      6050	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001108	    0x830d00000000	                or dword [0x0400110f], 1	      6001	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	ELSE_24
0x400110f	      0xe9f2fcffff	                           jmp 0x4000e06	      6001	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	ELSE_24
0x4001114	    0x813d00000000	           cmp dword [0x0400111e], 0x90 	      6046	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400111e	            0x75d7	                           jne 0x40010f7	      6046	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001120	    0x813d00000000	         cmp dword [0x0400112a], 0xffff 	      6047	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400112a	            0x75cb	                           jne 0x40010f7	      6047	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400112c	    0x8b3d00000000	            mov edi, dword [0x04001132] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4001132	    0x3b3d00000000	            cmp edi, dword [0x04001138] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4001138	            0x75bd	                           jne 0x40010f7	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400113a	    0x8b0d00000000	            mov ecx, dword [0x04001140] 	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x4001140	    0x3b0d00000000	            cmp ecx, dword [0x04001146] 	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x4001146	            0x75af	                           jne 0x40010f7	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x4001148	    0x3b3d00000000	            cmp edi, dword [0x0400114e] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400114e	            0x75a7	                           jne 0x40010f7	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4001150	    0x3b0d00000000	            cmp ecx, dword [0x04001156] 	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001156	            0x759f	                           jne 0x40010f7	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001158	            0x85d2	                           test edx, edx	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400115a	     0xf8461fcffff	                            je 0x4000dc1	      6055	tc-i386.c	FUNCTION_79	IF_57
0x4001160	          0x83e028	                           and eax, 0x28	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4001163	            0x3c08	                               cmp al, 8	      6058	tc-i386.c	FUNCTION_79	IF_57
0x4001165	     0xf8556fcffff	                           jne 0x4000dc1	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400116b	    0x8b0500000000	            mov eax, dword [0x04001171] 	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4001171	     0xf1f80000000	                         nop dword [rax]	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x4001178	    0x803d00000000	                cmp byte [0x0400117f], 0	      6069	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x400117f	      0xbf01000000	                              mov edi, 1	      6070	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x4001184	     0xf85c1feffff	                           jne 0x400104b	      6069	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x400118a	            0x31ff	                            xor edi, edi	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400118c	          0x83f802	                              cmp eax, 2	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400118f	        0x400f94c7	                                sete dil	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x4001193	             0x1ff	                            add edi, edi	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x4001195	      0xe9b1feffff	                           jmp 0x400104b	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400119a	    0x660f1f440000	                    nop word [rax + rax]	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x40011a0	     0xfb615000000	           movzx edx, byte [0x040011a7] 	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40011a7	     0xfb61d000000	           movzx ebx, byte [0x040011ae] 	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40011ae	          0xf6c201	                              test dl, 1	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40011b1	     0xf8501010000	                           jne 0x40012b8	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40011b7	    0x8b3d00000000	            mov edi, dword [0x040011bd] 	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011bd	            0x85ff	                           test edi, edi	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011bf	     0xf84ed010000	                            je 0x40013b2	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011c5	            0x84db	                             test bl, bl	      5916	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011c7	     0xf85be000000	                           jne 0x400128b	      5916	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011cd	    0xf60500000000	               test byte [0x040011d4], 2	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011d4	     0xf8523020000	                           jne 0x40013fd	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011da	    0x66f705000000	          test word [0x040011e3], 0x180 	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011e3	     0xf8514020000	                           jne 0x40013fd	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011e9	    0x813d00000000	          cmp dword [0x040011f3], 0xf01 	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011f3	     0xf84f7010000	                            je 0x40013f0	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40011f9	     0xf1f80000000	                         nop dword [rax]	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x4001200	    0x8b0500000000	            mov eax, dword [0x04001206] 	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x4001206	            0x85c0	                           test eax, eax	      5945	tc-i386.c	FUNCTION_79	IF_38	IF_39
0x4001208	     0xf85d9000000	                           jne 0x40012e7	      5945	tc-i386.c	FUNCTION_79	IF_38	IF_39
0x400120e	    0xf60500000000	               test byte [0x04001215], 2	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x4001215	     0xf8454fcffff	                            je 0x4000e6f	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400121b	      0xba05000000	                              mov edx, 5	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4001220	      0xbe00000000	                              mov esi, 0	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4001225	            0x31ff	                            xor edi, edi	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4001227	      0xe800000000	                          call 0x400122c	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400122c	          0x4889c7	                            mov rdi, rax	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400122f	            0x31c0	                            xor eax, eax	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4001231	      0xe800000000	                          call 0x4001236	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x4001236	            0x31c0	                            xor eax, eax	      5951	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x4001238	      0xe989fbffff	                           jmp 0x4000dc6	      5951	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400123d	    0x833d00000000	               cmp dword [0x04001244], 1	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x4001244	     0xf85c6fbffff	                           jne 0x4000e10	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400124a	      0xe951fcffff	                           jmp 0x4000ea0	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400124f	          0x80fb62	                            cmp bl, 0x62	      5862	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20
0x4001252	     0xf84d6010000	                            je 0x400142e	      5862	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20
0x4001258	          0x80fb6c	                            cmp bl, 0x6c	      5871	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23
0x400125b	     0xf84aa030000	                            je 0x400160b	      5871	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23
0x4001261	          0x80fb71	                            cmp bl, 0x71	      5882	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26
0x4001264	     0xf845e050000	                            je 0x40017c8	      5882	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26
0x400126a	          0x80fb77	                            cmp bl, 0x77	      5893	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29
0x400126d	     0xf846e060000	                            je 0x40018e1	      5893	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29
0x4001273	    0x448b05000000	            mov r8d, dword [0x0400127a] 	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400127a	          0x4585c0	                           test r8d, r8d	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400127d	     0xf84c2080000	                            je 0x4001b45	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x4001283	            0x84c0	                             test al, al	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x4001285	     0xf89ba080000	                           jns 0x4001b45	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400128b	          0x80fb71	                            cmp bl, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400128e	     0xf8458fbffff	                            je 0x4000dec	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4001294	     0xf8e96080000	                           jle 0x4001b30	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400129a	          0x80fb73	                            cmp bl, 0x73	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400129d	     0xf8463fbffff	                            je 0x4000e06	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40012a3	          0x80fb77	                            cmp bl, 0x77	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40012a6	     0xf85c3fbffff	                           jne 0x4000e6f	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40012ac	      0xe93bfbffff	                           jmp 0x4000dec	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40012b1	     0xf1f80000000	                         nop dword [rax]	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40012b8	            0x84db	                             test bl, bl	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40012ba	     0xf8520010000	                           jne 0x40013e0	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40012c0	          0xf6c210	                           test dl, 0x10	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40012c3	     0xf8411030000	                            je 0x40015da	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40012c9	     0xfb61d000000	           movzx ebx, byte [0x040012d0] 	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40012d0	    0x881d00000000	               mov byte [0x040012d6], bl	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x40012d6	            0x84db	                             test bl, bl	      5943	tc-i386.c	FUNCTION_79	IF_38
0x40012d8	     0xf8422ffffff	                            je 0x4001200	      5943	tc-i386.c	FUNCTION_79	IF_38
0x40012de	            0xebab	                           jmp 0x400128b	      5943	tc-i386.c	FUNCTION_79	IF_38
0x40012e0	    0xc60500000000	                mov byte [0x040012e7], 0	      5898	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40012e7	     0xfb60d000000	           movzx ecx, byte [0x040012ee] 	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40012ee	            0x89c8	                            mov eax, ecx	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40012f0	            0xd0e8	                               shr al, 1	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40012f2	          0x83f001	                              xor eax, 1	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40012f5	          0x83e001	                              and eax, 1	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x40012f8	            0x89c2	                            mov edx, eax	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x40012fa	          0x83ca02	                               or edx, 2	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x40012fd	          0xf6c104	                              test cl, 4	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x4001300	           0xf44c2	                          cmove eax, edx	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x4001303	            0x89c2	                            mov edx, eax	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x4001305	          0x83ca04	                               or edx, 4	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x4001308	          0xf6c108	                              test cl, 8	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x400130b	           0xf44c2	                          cmove eax, edx	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x400130e	            0x89c2	                            mov edx, eax	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x4001310	          0x83ca08	                               or edx, 8	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x4001313	          0xf6c140	                           test cl, 0x40	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x4001316	           0xf44c2	                          cmove eax, edx	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x4001319	            0x89c2	                            mov edx, eax	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x400131b	          0x83ca10	                            or edx, 0x10	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x400131e	          0xf6c110	                           test cl, 0x10	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x4001321	           0xf44c2	                          cmove eax, edx	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x4001324	    0x833d00000000	               cmp dword [0x0400132b], 2	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400132b	            0x7443	                            je 0x4001370	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400132d	    0xf60500000000	               test byte [0x04001334], 2	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4001334	            0x751b	                           jne 0x4001351	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4001336	          0x8d50ff	                      lea edx, [rax - 1]	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4001339	            0x85c2	                           test edx, eax	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400133b	     0xf842efbffff	                            je 0x4000e6f	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4001341	    0xf70500000000	       test dword [0x0400134b], 0x18000 	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400134b	     0xf851efbffff	                           jne 0x4000e6f	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x4001351	    0x488b1d000000	            mov rbx, qword [0x04001358] 	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4001358	      0xba05000000	                              mov edx, 5	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400135d	      0xbe00000000	                              mov esi, 0	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4001362	      0xe939fdffff	                           jmp 0x40010a0	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4001367	    0x660f1f840000	                    nop word [rax + rax]	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x4001370	            0x89c2	                            mov edx, eax	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4001372	          0x83ca20	                            or edx, 0x20	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4001375	          0x83e120	                           and ecx, 0x20	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4001378	           0xf44c2	                          cmove eax, edx	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400137b	            0xebb0	                           jmp 0x400132d	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400137d	           0xf1f00	                         nop dword [rax]	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x4001380	          0x83f802	                              cmp eax, 2	      6027	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4001383	     0xf8517faffff	                           jne 0x4000da0	      6027	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4001389	    0x803d00000000	                cmp byte [0x04001390], 0	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4001390	     0xf890afaffff	                           jns 0x4000da0	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x4001396	      0xbf67000000	                           mov edi, 0x67	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x400139b	      0xe9b5faffff	                           jmp 0x4000e55	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x40013a0	    0x488b05000000	            mov rax, qword [0x040013a7] 	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x40013a7	        0xf6400b40	            test byte [rax + 0xb], 0x40 	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x40013ab	            0x75e9	                           jne 0x4001396	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x40013ad	      0xe91afbffff	                           jmp 0x4000ecc	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x40013b2	            0x84db	                             test bl, bl	      5943	tc-i386.c	FUNCTION_79	IF_38
0x40013b4	     0xf8454feffff	                            je 0x400120e	      5943	tc-i386.c	FUNCTION_79	IF_38
0x40013ba	          0x80fb71	                            cmp bl, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40013bd	     0xf8429faffff	                            je 0x4000dec	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40013c3	     0xf8ec4070000	                           jle 0x4001b8d	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40013c9	          0x80fb73	                            cmp bl, 0x73	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40013cc	    0x8b1500000000	            mov edx, dword [0x040013d2] 	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x40013d2	     0xf8448faffff	                            je 0x4000e20	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40013d8	      0xe9c6feffff	                           jmp 0x40012a3	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40013dd	           0xf1f00	                         nop dword [rax]	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x40013e0	    0x8b1500000000	            mov edx, dword [0x040013e6] 	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40013e6	            0x85d2	                           test edx, edx	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40013e8	     0xf859dfeffff	                           jne 0x400128b	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40013ee	            0xebca	                           jmp 0x40013ba	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40013f0	    0x833d00000000	               cmp dword [0x040013f7], 3	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40013f7	     0xf8703feffff	                            ja 0x4001200	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40013fd	    0x8b0d00000000	            mov ecx, dword [0x04001403] 	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4001403	          0x83f901	                              cmp ecx, 1	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4001406	     0xf84c3f9ffff	                            je 0x4000dcf	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400140c	            0x7212	                            jb 0x4001420	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400140e	          0x83f902	                              cmp ecx, 2	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4001411	     0xf85e9fdffff	                           jne 0x4001200	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x4001417	          0xf6c220	                           test dl, 0x20	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400141a	     0xf8478fbffff	                            je 0x4000f98	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x4001420	          0x83e208	                              and edx, 8	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x4001423	     0xf8452f9ffff	                            je 0x4000d7b	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x4001429	      0xe9d2fdffff	                           jmp 0x4001200	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x400142e	    0x448b35000000	           mov r14d, dword [0x04001435] 	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4001435	          0x4585f6	                         test r14d, r14d	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4001438	            0x7416	                            je 0x4001450	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400143a	    0x8b0500000000	            mov eax, dword [0x04001440] 	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4001440	      0x2500800200	                        and eax, 0x28000	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4001445	      0x3d00800200	                        cmp eax, 0x28000	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400144a	     0xf8490feffff	                            je 0x40012e0	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x4001450	    0x8b2d00000000	            mov ebp, dword [0x04001456] 	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4001456	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4001460	          0x83ed01	                              sub ebp, 1	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4001463	     0xf886dfeffff	                            js 0x40012d6	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x4001469	          0x4863d5	                         movsxd rdx, ebp	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400146c	        0x488d420e	                    lea rax, [rdx + 0xe]	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x4001470	    0xf604c5000000	                    test byte [rax*8], 1	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x4001478	            0x74e6	                            je 0x4001460	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400147a	     0xfb60cc50000	                 movzx ecx, byte [rax*8]	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4001482	          0xf6c120	                           test cl, 0x20	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4001485	            0x75d9	                           jne 0x4001460	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x4001487	    0x803cd5000000	                     cmp byte [rdx*8], 0	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x400148f	            0x78cf	                            js 0x4001460	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x4001491	    0x813d00000000	     cmp dword [0x0400149b], 0xf20f38f0 	      6115	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x400149b	            0x74c3	                            je 0x4001460	      6115	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x400149d	            0x89ce	                            mov esi, ecx	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400149f	        0x40c0ee06	                              shr sil, 6	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014a3	          0x83e601	                              and esi, 1	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014a6	            0x7556	                           jne 0x40014fe	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014a8	            0x84c9	                             test cl, cl	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014aa	            0x7852	                            js 0x40014fe	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014ac	    0xf604c5000000	                    test byte [rax*8], 2	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014b4	            0x7548	                           jne 0x40014fe	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014b6	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x40014be	    0x4c8b2d000000	            mov r13, qword [0x040014c5] 	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014c5	          0x4c8b20	                    mov r12, qword [rax]	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014c8	      0xba05000000	                              mov edx, 5	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014cd	    0x488b2d000000	            mov rbp, qword [0x040014d4] 	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014d4	      0xbe00000000	                              mov esi, 0	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014d9	            0x31ff	                            xor edi, edi	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014db	      0xe800000000	                          call 0x40014e0	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014e0	        0x440fbec3	                           movsx r8d, bl	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014e4	          0x4889c7	                            mov rdi, rax	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014e7	          0x4c89e9	                            mov rcx, r13	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014ea	            0x31c0	                            xor eax, eax	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014ec	          0x4c89e2	                            mov rdx, r12	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014ef	          0x4889ee	                            mov rsi, rbp	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014f2	      0xe800000000	                          call 0x40014f7	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x40014f7	            0x31c0	                            xor eax, eax	      5869	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	ELSE_12	IF_22
0x40014f9	      0xe9c8f8ffff	                           jmp 0x4000dc6	      5869	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	ELSE_12	IF_22
0x40014fe	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4001506	        0x80781103	                cmp byte [rax + 0x11], 3	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400150a	            0x77b2	                            ja 0x40014be	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400150c	    0x833d00000000	               cmp dword [0x04001513], 2	      6124	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4001513	            0x74a9	                            je 0x40014be	      6124	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x4001515	    0x448b2d000000	           mov r13d, dword [0x0400151c] 	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400151c	          0x4585ed	                         test r13d, r13d	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400151f	     0xf853bffffff	                           jne 0x4001460	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4001525	        0x4080fe01	                              cmp sil, 1	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4001529	    0x4c8b25000000	            mov r12, qword [0x04001530] 	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001530	          0x4c8b28	                    mov r13, qword [rax]	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001533	          0x4819d2	                            sbb rdx, rdx	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4001536	      0xbe00000000	                              mov esi, 0	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400153b	            0x31ff	                            xor edi, edi	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400153d	    0x4881e280feff	             and rdx, 0xfffffffffffffe80	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x4001544	    0x4c8bb410c0fd	      mov r14, qword [rax + rdx - 0x240]	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400154c	      0xba05000000	                              mov edx, 5	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001551	      0xe800000000	                          call 0x4001556	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001556	          0x4189d9	                            mov r9d, ebx	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001559	          0x4889c7	                            mov rdi, rax	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400155c	          0x4d89e8	                             mov r8, r13	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400155f	          0x4c89e1	                            mov rcx, r12	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001562	          0x4c89f2	                            mov rdx, r14	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001565	          0x4c89e6	                            mov rsi, r12	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001568	            0x31c0	                            xor eax, eax	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400156a	      0xe800000000	                          call 0x400156f	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400156f	     0xfbe1d000000	           movsx ebx, byte [0x04001576] 	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x4001576	      0xe9e5feffff	                           jmp 0x4001460	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400157b	    0x8b1500000000	            mov edx, dword [0x04001581] 	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4001581	            0x89d1	                            mov ecx, edx	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4001583	    0x81e101000040	                     and ecx, 0x40000001	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4001589	    0x81f901000040	                     cmp ecx, 0x40000001	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400158f	     0xf844bf8ffff	                            je 0x4000de0	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x4001595	    0x81e201000080	                     and edx, 0x80000001	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x400159b	    0x81fa01000080	                     cmp edx, 0x80000001	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x40015a1	     0xf84d4f7ffff	                            je 0x4000d7b	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x40015a7	    0x48b801000000	                 movabs rax, 0x200000001	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x40015b1	          0x4889c2	                            mov rdx, rax	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x40015b4	    0x482315000000	             and rdx, qword [0x040015bb]	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x40015bb	          0x4839c2	                            cmp rdx, rax	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x40015be	     0xf84d4f9ffff	                            je 0x4000f98	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x40015c4	    0x488b1d000000	            mov rbx, qword [0x040015cb] 	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40015cb	      0xba05000000	                              mov edx, 5	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40015d0	      0xbe00000000	                              mov esi, 0	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40015d5	      0xe9c6faffff	                           jmp 0x40010a0	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x40015da	    0x8b0d00000000	            mov ecx, dword [0x040015e0] 	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40015e0	            0x85c9	                           test ecx, ecx	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40015e2	     0xf85e5fbffff	                           jne 0x40011cd	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40015e8	      0xe913fcffff	                           jmp 0x4001200	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x40015ed	    0x8b0500000000	            mov eax, dword [0x040015f3] 	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x40015f3	      0x2501000020	                     and eax, 0x20000001	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x40015f8	      0x3d01000020	                     cmp eax, 0x20000001	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x40015fd	            0x75c5	                           jne 0x40015c4	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x40015ff	    0xc60500000000	            mov byte [0x04001606], 0x62 	      5826	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x4001606	      0xe964f8ffff	                           jmp 0x4000e6f	      5826	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x400160b	    0x448b25000000	           mov r12d, dword [0x04001612] 	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4001612	          0x4585e4	                         test r12d, r12d	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4001615	            0x741d	                            je 0x4001634	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4001617	    0x48b800800800	                 movabs rax, 0x600088000	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4001621	    0x482305000000	             and rax, qword [0x04001628]	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4001628	    0x483d00800800	                        cmp rax, 0x88000	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400162e	     0xf84acfcffff	                            je 0x40012e0	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x4001634	    0x8b1d00000000	            mov ebx, dword [0x0400163a] 	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x400163a	    0x660f1f440000	                    nop word [rax + rax]	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4001640	          0x83eb01	                              sub ebx, 1	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4001643	     0xf88c7000000	                            js 0x4001710	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4001649	          0x4863c3	                         movsxd rax, ebx	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x400164c	        0x488d500e	                    lea rdx, [rax + 0xe]	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4001650	    0xf604d5000000	                    test byte [rdx*8], 1	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x4001658	            0x74e6	                            je 0x4001640	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x400165a	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001662	            0x7431	                            je 0x4001695	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001664	        0x488d5006	                      lea rdx, [rax + 6]	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001668	    0xf604d5000000	                    test byte [rdx*8], 1	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001670	            0x750a	                           jne 0x400167c	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001672	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400167a	            0x7419	                            je 0x4001695	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400167c	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001684	          0xf6c240	                           test dl, 0x40	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001687	     0xf85de030000	                           jne 0x4001a6b	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400168d	            0x84d2	                             test dl, dl	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400168f	     0xf88d6030000	                            js 0x4001a6b	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x4001695	    0x8b2d00000000	            mov ebp, dword [0x0400169b] 	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400169b	            0x85ed	                           test ebp, ebp	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400169d	     0xf847d000000	                            je 0x4001720	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x40016a3	    0x833d00000000	               cmp dword [0x040016aa], 2	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x40016aa	            0x7474	                            je 0x4001720	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x40016ac	    0xf604c5000000	                    test byte [rax*8], 2	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40016b4	            0x748a	                            je 0x4001640	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40016b6	        0x488d5006	                      lea rdx, [rax + 6]	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40016ba	    0xf604d5000000	                    test byte [rdx*8], 1	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40016c2	     0xf84ed000000	                            je 0x40017b5	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40016c8	    0x803cc5000000	                     cmp byte [rax*8], 0	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40016d0	     0xf896affffff	                           jns 0x4001640	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40016d6	    0x448b1d000000	           mov r11d, dword [0x040016dd] 	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x40016dd	          0x4585db	                         test r11d, r11d	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x40016e0	     0xf84e9030000	                            je 0x4001acf	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x40016e6	    0xf60500000000	               test byte [0x040016ed], 4	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x40016ed	     0xf84dc030000	                            je 0x4001acf	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x40016f3	    0xf60500000000	               test byte [0x040016fa], 4	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x40016fa	     0xf85cf030000	                           jne 0x4001acf	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x4001700	          0x83eb01	                              sub ebx, 1	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4001703	    0xc60500000000	            mov byte [0x0400170a], 0x71 	      6218	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400170a	     0xf8939ffffff	                           jns 0x4001649	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4001710	     0xfb61d000000	           movzx ebx, byte [0x04001717] 	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4001717	      0xe9bafbffff	                           jmp 0x40012d6	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x400171c	         0xf1f4000	                         nop dword [rax]	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x4001720	    0xf604c5000000	                 test byte [rax*8], 0x40	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4001728	     0xf847effffff	                            je 0x40016ac	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400172e	        0x488d5006	                      lea rdx, [rax + 6]	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4001732	    0xf604d5000000	                    test byte [rdx*8], 1	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400173a	            0x750e	                           jne 0x400174a	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400173c	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4001744	     0xf84f6feffff	                            je 0x4001640	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400174a	    0x803cc5000000	                     cmp byte [rax*8], 0	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4001752	     0xf8954ffffff	                           jns 0x40016ac	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x4001758	    0x833d00000000	               cmp dword [0x0400175f], 2	      6193	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x400175f	     0xf846a030000	                            je 0x4001acf	      6193	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x4001765	    0x488b04c50000	                  mov rax, qword [rax*8]	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400176d	    0x440fbe2d0000	          movsx r13d, byte [0x04001775] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4001775	            0x31ff	                            xor edi, edi	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4001777	    0x488b2d000000	            mov rbp, qword [0x0400177e] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400177e	      0xba05000000	                              mov edx, 5	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4001783	      0xbe00000000	                              mov esi, 0	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4001788	          0x4c8b30	                    mov r14, qword [rax]	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400178b	    0x4c8ba0800100	           mov r12, qword [rax + 0x180] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4001792	      0xe800000000	                          call 0x4001797	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x4001797	          0x4589e9	                           mov r9d, r13d	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400179a	          0x4889c7	                            mov rdi, rax	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400179d	          0x4889e9	                            mov rcx, rbp	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x40017a0	          0x4d89f0	                             mov r8, r14	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x40017a3	          0x4c89e2	                            mov rdx, r12	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x40017a6	          0x4889ee	                            mov rsi, rbp	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x40017a9	            0x31c0	                            xor eax, eax	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x40017ab	      0xe800000000	                          call 0x40017b0	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x40017b0	      0xe98bfeffff	                           jmp 0x4001640	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x40017b5	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40017bd	     0xf8505ffffff	                           jne 0x40016c8	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40017c3	      0xe978feffff	                           jmp 0x4001640	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x40017c8	    0x448b1d000000	           mov r11d, dword [0x040017cf] 	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40017cf	          0x4585db	                         test r11d, r11d	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40017d2	            0x741d	                            je 0x40017f1	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40017d4	    0x48b800802000	                 movabs rax, 0x600208000	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40017de	    0x482305000000	             and rax, qword [0x040017e5]	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40017e5	    0x483d00802000	                       cmp rax, 0x208000	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40017eb	     0xf84effaffff	                            je 0x40012e0	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x40017f1	    0x440fb6150000	          movzx r10d, byte [0x040017f9] 	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x40017f9	    0x440fb60d0000	           movzx r9d, byte [0x04001801] 	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001801	          0x4531c0	                            xor r8d, r8d	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001804	    0x8b0500000000	            mov eax, dword [0x0400180a] 	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x400180a	        0x4183e202	                             and r10d, 2	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400180e	        0x4183e104	                              and r9d, 4	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001812	    0x660f1f440000	                    nop word [rax + rax]	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001818	          0x83e801	                              sub eax, 1	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x400181b	     0xf888e000000	                            js 0x40018af	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x4001821	          0x4863d0	                         movsxd rdx, eax	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4001824	        0x488d4a0e	                    lea rcx, [rdx + 0xe]	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4001828	    0xf604cd000000	                    test byte [rcx*8], 1	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4001830	            0x74e6	                            je 0x4001818	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x4001832	     0xfb60ccd0000	                 movzx ecx, byte [rcx*8]	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400183a	          0xf6c120	                           test cl, 0x20	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400183d	     0xf847d000000	                            je 0x40018c0	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4001843	        0x488d7a06	                      lea rdi, [rdx + 6]	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4001847	    0xf604fd000000	                    test byte [rdi*8], 1	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400184f	     0xf8565f7ffff	                           jne 0x4000fba	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4001855	    0xf604fd000000	                 test byte [rdi*8], 0x20	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400185d	     0xf8557f7ffff	                           jne 0x4000fba	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x4001863	          0xf6c140	                           test cl, 0x40	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4001866	            0x75b0	                           jne 0x4001818	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4001868	            0x84c9	                             test cl, cl	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400186a	            0x79ac	                           jns 0x4001818	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400186c	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4001874	            0x74a2	                            je 0x4001818	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4001876	    0xf604d5000000	                    test byte [rdx*8], 2	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400187e	            0x7498	                            je 0x4001818	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x4001880	          0x4585db	                         test r11d, r11d	      6264	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001883	     0xf8494010000	                            je 0x4001a1d	      6264	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001889	          0x4584d2	                         test r10b, r10b	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400188c	     0xf848b010000	                            je 0x4001a1d	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001892	          0x4584c9	                           test r9b, r9b	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x4001895	     0xf8582010000	                           jne 0x4001a1d	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400189b	          0x83e801	                              sub eax, 1	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x400189e	    0x41b801000000	                              mov r8d, 1	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x40018a4	      0xbb6c000000	                           mov ebx, 0x6c	      6269	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x40018a9	     0xf8972ffffff	                           jns 0x4001821	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x40018af	          0x4584c0	                           test r8b, r8b	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x40018b2	     0xf85ac020000	                           jne 0x4001b64	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x40018b8	            0x89f3	                            mov ebx, esi	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x40018ba	      0xe917faffff	                           jmp 0x40012d6	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x40018bf	              0x90	                                     nop	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x40018c0	     0xfb60cd50000	                 movzx ecx, byte [rdx*8]	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018c8	          0xf6c140	                           test cl, 0x40	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018cb	            0x7508	                           jne 0x40018d5	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018cd	            0x84c9	                             test cl, cl	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018cf	     0xf8943ffffff	                           jns 0x4001818	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018d5	    0xf604d5000000	                    test byte [rdx*8], 1	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018dd	            0x7597	                           jne 0x4001876	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018df	            0xeb8b	                           jmp 0x400186c	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x40018e1	    0x448b15000000	           mov r10d, dword [0x040018e8] 	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40018e8	          0x4585d2	                         test r10d, r10d	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40018eb	            0x7416	                            je 0x4001903	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40018ed	    0x8b0500000000	            mov eax, dword [0x040018f3] 	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40018f3	      0x2500800400	                        and eax, 0x48000	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40018f8	      0x3d00800400	                        cmp eax, 0x48000	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x40018fd	     0xf84ddf9ffff	                            je 0x40012e0	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x4001903	    0x8b2d00000000	            mov ebp, dword [0x04001909] 	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x4001909	     0xf1f80000000	                         nop dword [rax]	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x4001910	          0x83ed01	                              sub ebp, 1	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x4001913	     0xf88bdf9ffff	                            js 0x40012d6	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x4001919	          0x4863c5	                         movsxd rax, ebp	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400191c	        0x488d500e	                    lea rdx, [rax + 0xe]	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x4001920	    0xf604d5000000	                    test byte [rdx*8], 1	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x4001928	            0x74e6	                            je 0x4001910	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400192a	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001932	            0x7431	                            je 0x4001965	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001934	        0x488d5006	                      lea rdx, [rax + 6]	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001938	    0xf604d5000000	                    test byte [rdx*8], 1	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001940	            0x750a	                           jne 0x400194c	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001942	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400194a	            0x7419	                            je 0x4001965	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400194c	     0xfb614c50000	                 movzx edx, byte [rax*8]	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001954	          0xf6c240	                           test dl, 0x40	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001957	     0xf852a010000	                           jne 0x4001a87	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400195d	            0x84d2	                             test dl, dl	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400195f	     0xf8822010000	                            js 0x4001a87	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x4001965	    0x448b0d000000	            mov r9d, dword [0x0400196c] 	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400196c	          0x4585c9	                           test r9d, r9d	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400196f	            0x7409	                            je 0x400197a	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x4001971	    0x833d00000000	               cmp dword [0x04001978], 2	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x4001978	            0x7596	                           jne 0x4001910	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400197a	        0x488d500e	                    lea rdx, [rax + 0xe]	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400197e	    0x803cd5000000	                     cmp byte [rdx*8], 0	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x4001986	            0x780e	                            js 0x4001996	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x4001988	    0xf604d5000000	                    test byte [rdx*8], 2	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x4001990	     0xf847affffff	                            je 0x4001910	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x4001996	        0x488d5006	                      lea rdx, [rax + 6]	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400199a	    0xf604d5000000	                    test byte [rdx*8], 1	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x40019a2	            0x750e	                           jne 0x40019b2	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x40019a4	    0xf604d5000000	                 test byte [rdx*8], 0x20	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x40019ac	     0xf845effffff	                            je 0x4001910	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x40019b2	    0xf604c5000000	                 test byte [rax*8], 0x40	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x40019ba	     0xf8450ffffff	                            je 0x4001910	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x40019c0	    0x833d00000000	               cmp dword [0x040019c7], 2	      6315	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x40019c7	    0x488b04c50000	                  mov rax, qword [rax*8]	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x40019cf	     0xf8426010000	                            je 0x4001afb	      6315	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x40019d5	    0x4c8b25000000	            mov r12, qword [0x040019dc] 	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019dc	          0x4c8b30	                    mov r14, qword [rax]	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019df	      0xba05000000	                              mov edx, 5	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019e4	    0x4c8ba880feff	            mov r13, qword [rax - 0x180]	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019eb	      0xbe00000000	                              mov esi, 0	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019f0	            0x31ff	                            xor edi, edi	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019f2	      0xe800000000	                          call 0x40019f7	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019f7	        0x440fbecb	                           movsx r9d, bl	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019fb	          0x4889c7	                            mov rdi, rax	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x40019fe	          0x4d89f0	                             mov r8, r14	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a01	          0x4c89e1	                            mov rcx, r12	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a04	          0x4c89ea	                            mov rdx, r13	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a07	          0x4c89e6	                            mov rsi, r12	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a0a	            0x31c0	                            xor eax, eax	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a0c	      0xe800000000	                          call 0x4001a11	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a11	     0xfb61d000000	           movzx ebx, byte [0x04001a18] 	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a18	      0xe9f3feffff	                           jmp 0x4001910	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a1d	          0x4584c0	                           test r8b, r8b	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a20	     0xf85ca000000	                           jne 0x4001af0	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x4001a26	    0x440fbe250000	          movsx r12d, byte [0x04001a2e] 	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a2e	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a36	          0x488b28	                    mov rbp, qword [rax]	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a39	    0x488b1d000000	            mov rbx, qword [0x04001a40] 	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a40	      0xba05000000	                              mov edx, 5	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a45	      0xbe00000000	                              mov esi, 0	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a4a	            0x31ff	                            xor edi, edi	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a4c	      0xe800000000	                          call 0x4001a51	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a51	          0x4489e1	                           mov ecx, r12d	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a54	          0x4889c7	                            mov rdi, rax	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a57	          0x4889ea	                            mov rdx, rbp	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a5a	            0x31c0	                            xor eax, eax	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a5c	          0x4889de	                            mov rsi, rbx	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a5f	      0xe800000000	                          call 0x4001a64	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x4001a64	            0x31c0	                            xor eax, eax	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4001a66	      0xe9b7f5ffff	                           jmp 0x4001022	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4001a6b	    0x440fbe2d0000	          movsx r13d, byte [0x04001a73] 	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4001a73	    0x4c8b25000000	            mov r12, qword [0x04001a7a] 	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4001a7a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4001a82	      0xe968f5ffff	                           jmp 0x4000fef	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x4001a87	    0x488b04c50000	                  mov rax, qword [rax*8]	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001a8f	    0x4c8b2d000000	            mov r13, qword [0x04001a96] 	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001a96	      0xba05000000	                              mov edx, 5	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001a9b	    0x488b2d000000	            mov rbp, qword [0x04001aa2] 	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001aa2	      0xbe00000000	                              mov esi, 0	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001aa7	            0x31ff	                            xor edi, edi	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001aa9	          0x4c8b20	                    mov r12, qword [rax]	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001aac	      0xe800000000	                          call 0x4001ab1	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001ab1	        0x440fbec3	                           movsx r8d, bl	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001ab5	          0x4889c7	                            mov rdi, rax	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001ab8	          0x4c89e9	                            mov rcx, r13	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001abb	            0x31c0	                            xor eax, eax	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001abd	          0x4c89e2	                            mov rdx, r12	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001ac0	          0x4889ee	                            mov rsi, rbp	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001ac3	      0xe800000000	                          call 0x4001ac8	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x4001ac8	            0x31c0	                            xor eax, eax	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4001aca	      0xe953f5ffff	                           jmp 0x4001022	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4001acf	    0x440fbe250000	          movsx r12d, byte [0x04001ad7] 	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4001ad7	    0x488b04c50000	                  mov rax, qword [rax*8]	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4001adf	      0xe952ffffff	                           jmp 0x4001a36	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x4001ae4	    0xc60500000000	            mov byte [0x04001aeb], 0x62 	      5849	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4001aeb	      0xe9baf2ffff	                           jmp 0x4000daa	      5849	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4001af0	    0x881d00000000	               mov byte [0x04001af6], bl	      5849	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4001af6	      0xe92bffffff	                           jmp 0x4001a26	      5849	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x4001afb	          0x4c8b20	                    mov r12, qword [rax]	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001afe	    0x488b2d000000	            mov rbp, qword [0x04001b05] 	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b05	      0xba05000000	                              mov edx, 5	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b0a	      0xbe00000000	                              mov esi, 0	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b0f	            0x31ff	                            xor edi, edi	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b11	      0xe800000000	                          call 0x4001b16	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b16	           0xfbecb	                           movsx ecx, bl	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b19	          0x4889c7	                            mov rdi, rax	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b1c	          0x4c89e2	                            mov rdx, r12	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b1f	            0x31c0	                            xor eax, eax	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b21	          0x4889ee	                            mov rsi, rbp	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b24	      0xe800000000	                          call 0x4001b29	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x4001b29	            0x31c0	                            xor eax, eax	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4001b2b	      0xe9f2f4ffff	                           jmp 0x4001022	      5839	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x4001b30	          0x80fb6c	                            cmp bl, 0x6c	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4001b33	     0xfb605000000	           movzx eax, byte [0x04001b3a] 	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4001b3a	     0xf852ff3ffff	                           jne 0x4000e6f	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4001b40	      0xe93df2ffff	                           jmp 0x4000d82	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4001b45	      0xba00000000	                              mov edx, 0	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b4a	      0xbe12170000	                         mov esi, 0x1712	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b4f	      0xbf00000000	                              mov edi, 0	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b54	      0xe800000000	                          call 0x4001b59	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b59	    0x881d00000000	               mov byte [0x04001b5f], bl	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b5f	      0xe974f4ffff	                           jmp 0x4000fd8	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b64	            0x89de	                            mov esi, ebx	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b66	    0x881d00000000	               mov byte [0x04001b6c], bl	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b6c	            0x89f3	                            mov ebx, esi	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b6e	      0xe963f7ffff	                           jmp 0x40012d6	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x4001b73	    0x833d00000000	               cmp dword [0x04001b7a], 2	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001b7a	     0xf854cf3ffff	                           jne 0x4000ecc	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001b80	            0xa840	                           test al, 0x40	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001b82	     0xf8464f5ffff	                            je 0x40010ec	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001b88	      0xe93ff3ffff	                           jmp 0x4000ecc	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x4001b8d	          0x80fb6c	                            cmp bl, 0x6c	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4001b90	     0xf85d9f2ffff	                           jne 0x4000e6f	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x4001b96	      0xe9e7f1ffff	                           jmp 0x4000d82	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
md_section_align	IF,1:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	2
0x4010740	          0x4889f0	                            mov rax, rsi	     11201	tc-i386.c	FUNCTION_130
0x4010743	              0xc3	                                     ret	     11218	tc-i386.c	FUNCTION_132
cpu_flags_match	IF,7:DO,0:ELSE,3:WHILE,0:CALL,4:functions,0:SWITCH,0:FOR,0	153
0x4005b00	            0x4156	                                push r14	      1702	tc-i386.c	FUNCTION_16
0x4005b02	            0x4155	                                push r13	      1702	tc-i386.c	FUNCTION_16
0x4005b04	    0x48ba00000000	          movabs rdx, 0xffffffff00000000	      1702	tc-i386.c	FUNCTION_16
0x4005b0e	            0x4154	                                push r12	      1702	tc-i386.c	FUNCTION_16
0x4005b10	              0x55	                                push rbp	      1702	tc-i386.c	FUNCTION_16
0x4005b11	          0x4889d1	                            mov rcx, rdx	      1702	tc-i386.c	FUNCTION_16
0x4005b14	              0x53	                                push rbx	      1702	tc-i386.c	FUNCTION_16
0x4005b15	        0x4883ec10	                           sub rsp, 0x10	      1702	tc-i386.c	FUNCTION_16
0x4005b19	        0x48234f18	             and rcx, qword [rdi + 0x18]	      1702	tc-i386.c	FUNCTION_16
0x4005b1d	        0x48235720	             and rdx, qword [rdi + 0x20]	      1702	tc-i386.c	FUNCTION_16
0x4005b21	    0x64488b042528	                mov rax, qword fs:[0x28]	      1702	tc-i386.c	FUNCTION_16
0x4005b2a	      0x4889442408	                mov qword [rsp + 8], rax	      1702	tc-i386.c	FUNCTION_16
0x4005b2f	            0x31c0	                            xor eax, eax	      1702	tc-i386.c	FUNCTION_16
0x4005b31	          0x8b4718	            mov eax, dword [rdi + 0x18] 	      1703	tc-i386.c	FUNCTION_16
0x4005b34	          0x8b7720	            mov esi, dword [rdi + 0x20] 	      1703	tc-i386.c	FUNCTION_16
0x4005b37	          0x4809c1	                             or rcx, rax	      1703	tc-i386.c	FUNCTION_16
0x4005b3a	          0x4989c0	                             mov r8, rax	      1703	tc-i386.c	FUNCTION_16
0x4005b3d	            0x89f0	                            mov eax, esi	      1703	tc-i386.c	FUNCTION_16
0x4005b3f	          0x4809c2	                             or rdx, rax	      1703	tc-i386.c	FUNCTION_16
0x4005b42	          0x4889d0	                            mov rax, rdx	      1703	tc-i386.c	FUNCTION_16
0x4005b45	        0x48c1e820	                           shr rax, 0x20	      1703	tc-i386.c	FUNCTION_16
0x4005b49	    0x833d00000000	               cmp dword [0x04005b50], 2	      1619	tc-i386.c	FUNCTION_12
0x4005b50	     0xf8422010000	                            je 0x4005c78	      1619	tc-i386.c	FUNCTION_12
0x4005b56	            0xa840	                           test al, 0x40	      1620	tc-i386.c	FUNCTION_12
0x4005b58	     0xf8522010000	                           jne 0x4005c80	      1620	tc-i386.c	FUNCTION_12
0x4005b5e	      0xb802000000	                              mov eax, 2	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4005b63	    0x49b9ffffffff	           movabs r9, 0xffffff3fffffffff	      1707	tc-i386.c	FUNCTION_16
0x4005b6d	          0x4c21ca	                             and rdx, r9	      1707	tc-i386.c	FUNCTION_16
0x4005b70	          0x4889d3	                            mov rbx, rdx	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4005b73	        0x48c1eb20	                           shr rbx, 0x20	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4005b77	            0x85db	                           test ebx, ebx	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4005b79	            0x7508	                           jne 0x4005b83	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4005b7b	            0x85f6	                           test esi, esi	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4005b7d	     0xf8425010000	                            je 0x4005ca8	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4005b83	          0x4989cd	                            mov r13, rcx	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005b86	    0x448b0d000000	            mov r9d, dword [0x04005b8d] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x4005b8d	    0x8b2d00000000	            mov ebp, dword [0x04005b93] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x4005b93	        0x49c1ed20	                           shr r13, 0x20	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005b97	    0x448b35000000	           mov r14d, dword [0x04005b9e] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x4005b9e	    0x448b25000000	           mov r12d, dword [0x04005ba5] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x4005ba5	        0x4183e508	                             and r13d, 8	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005ba9	     0xf85e1000000	                           jne 0x4005c90	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005baf	    0x49bdffffffff	          movabs r13, 0xfffffff7ffffffff	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x4005bb9	          0x4421f6	                           and esi, r14d	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x4005bbc	          0x4521c8	                            and r8d, r9d	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x4005bbf	          0x4c21e9	                            and rcx, r13	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x4005bc2	          0x4989cd	                            mov r13, rcx	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x4005bc5	        0x49c1ed20	                           shr r13, 0x20	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x4005bc9	          0x4421ed	                           and ebp, r13d	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x4005bcc	          0x4185dc	                          test r12d, ebx	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4005bcf	     0xf84fb000000	                            je 0x4005cd0	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4005bd5	          0x4989c9	                             mov r9, rcx	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4005bd8	        0x49c1e918	                            shr r9, 0x18	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4005bdc	        0x41f6c120	                          test r9b, 0x20	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4005be0	     0xf840a010000	                            je 0x4005cf0	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4005be6	          0x4589c1	                            mov r9d, r8d	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005be9	    0x49b800000000	           movabs r8, 0xffffffff00000000	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005bf3	          0x4d21c2	                             and r10, r8	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005bf6	          0x4d09ca	                              or r10, r9	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005bf9	    0x41f7c2000000	                   test r10d, 0x20000000	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c00	          0x4d89d0	                             mov r8, r10	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c03	            0x744b	                            je 0x4005c50	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c05	        0xf6472e40	           test byte [rdi + 0x2e], 0x40 	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c09	     0xf8551010000	                           jne 0x4005d60	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c0f	        0x48c1e928	                           shr rcx, 0x28	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c13	          0xf6c108	                              test cl, 8	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c16	            0x7417	                            je 0x4005c2f	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c18	          0x4989ea	                            mov r10, rbp	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c1b	          0x4589c0	                            mov r8d, r8d	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c1e	        0x49c1e220	                           shl r10, 0x20	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c22	          0x4d09c2	                              or r10, r8	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c25	        0x49c1ea28	                           shr r10, 0x28	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c29	        0x4183e208	                             and r10d, 8	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c2d	            0x7421	                            je 0x4005c50	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c2f	    0xf7c200000020	                    test edx, 0x20000000	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c35	            0x7408	                            je 0x4005c3f	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c37	    0x81e600000020	                     and esi, 0x20000000	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c3d	            0x7411	                            je 0x4005c50	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c3f	          0x83e110	                           and ecx, 0x10	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c42	            0x747d	                            je 0x4005cc1	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c44	    0x81e500100000	                         and ebp, 0x1000	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c4a	            0x7575	                           jne 0x4005cc1	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c4c	         0xf1f4000	                         nop dword [rax]	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005c50	      0x488b742408	                mov rsi, qword [rsp + 8]	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c55	    0x644833342528	                xor rsi, qword fs:[0x28]	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c5e	     0xf850f010000	                           jne 0x4005d73	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c64	        0x4883c410	                           add rsp, 0x10	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c68	              0x5b	                                 pop rbx	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c69	              0x5d	                                 pop rbp	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c6a	            0x415c	                                 pop r12	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c6c	            0x415d	                                 pop r13	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c6e	            0x415e	                                 pop r14	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c70	              0xc3	                                     ret	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c71	     0xf1f80000000	                         nop dword [rax]	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4005c78	            0x84c0	                             test al, al	      1619	tc-i386.c	FUNCTION_12
0x4005c7a	     0xf89defeffff	                           jns 0x4005b5e	      1619	tc-i386.c	FUNCTION_12
0x4005c80	            0x31c0	                            xor eax, eax	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4005c82	      0xe9dcfeffff	                           jmp 0x4005b63	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4005c87	    0x660f1f840000	                    nop word [rax + rax]	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4005c90	          0x4989ea	                            mov r10, rbp	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005c93	        0x49c1e220	                           shl r10, 0x20	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005c97	        0x40f6c508	                             test bpl, 8	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005c9b	     0xf850effffff	                           jne 0x4005baf	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005ca1	            0xebad	                           jmp 0x4005c50	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005ca3	       0xf1f440000	                   nop dword [rax + rax]	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4005ca8	          0x4989c9	                             mov r9, rcx	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4005cab	        0x49c1e920	                            shr r9, 0x20	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4005caf	          0x4585c9	                           test r9d, r9d	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4005cb2	     0xf85cbfeffff	                           jne 0x4005b83	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4005cb8	          0x4585c0	                           test r8d, r8d	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x4005cbb	     0xf85c2feffff	                           jne 0x4005b83	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x4005cc1	          0x83c801	                               or eax, 1	      1747	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_3
0x4005cc4	            0xeb8a	                           jmp 0x4005c50	      1747	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_3
0x4005cc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1747	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_3
0x4005cd0	            0x85f6	                           test esi, esi	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4005cd2	     0xf85fdfeffff	                           jne 0x4005bd5	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4005cd8	            0x85ed	                           test ebp, ebp	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4005cda	     0xf85f5feffff	                           jne 0x4005bd5	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4005ce0	          0x4585c0	                           test r8d, r8d	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x4005ce3	     0xf8467ffffff	                            je 0x4005c50	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x4005ce9	      0xe9e7feffff	                           jmp 0x4005bd5	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x4005cee	            0x6690	                                     nop	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x4005cf0	          0x4584c9	                           test r9b, r9b	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x4005cf3	            0x79cc	                           jns 0x4005cc1	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x4005cf5	        0x49c1e818	                            shr r8, 0x18	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005cf9	          0x4584c0	                           test r8b, r8b	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005cfc	     0xf894effffff	                           jns 0x4005c50	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d02	        0x48c1ea18	                           shr rdx, 0x18	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d06	          0xf6c220	                           test dl, 0x20	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d09	            0x7410	                            je 0x4005d1b	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d0b	          0x4189f3	                           mov r11d, esi	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d0e	    0x41f7c3000000	                   test r11d, 0x20000000	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d15	     0xf8435ffffff	                            je 0x4005c50	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d1b	          0xf6c240	                           test dl, 0x40	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d1e	            0x741f	                            je 0x4005d3f	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d20	    0x48bf00000000	          movabs rdi, 0xffffffff00000000	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d2a	            0x89f1	                            mov ecx, esi	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d2c	          0x4921fb	                            and r11, rdi	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d2f	          0x4909cb	                             or r11, rcx	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d32	    0x41f7c3000000	                   test r11d, 0x40000000	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d39	     0xf8411ffffff	                            je 0x4005c50	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d3f	            0x84d2	                             test dl, dl	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d41	     0xf897affffff	                           jns 0x4005cc1	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d47	        0x48c1ee18	                           shr rsi, 0x18	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d4b	          0x4084f6	                           test sil, sil	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d4e	     0xf89fcfeffff	                           jns 0x4005c50	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d54	      0xe968ffffff	                           jmp 0x4005cc1	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d59	     0xf1f80000000	                         nop dword [rax]	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4005d60	    0x8b3d00000000	            mov edi, dword [0x04005d66] 	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005d66	            0x85ff	                           test edi, edi	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005d68	     0xf84e2feffff	                            je 0x4005c50	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005d6e	      0xe99cfeffff	                           jmp 0x4005c0f	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4005d73	      0xe800000000	                          call 0x4005d78	      1751	tc-i386.c	FUNCTION_16	ELSE_3
md_apply_fix	IF,12:DO,0:ELSE,3:WHILE,0:CALL,14:functions,0:SWITCH,2:FOR,0	181
0x400ec90	            0x4157	                                push r15	      9964	tc-i386.c	FUNCTION_117
0x400ec92	            0x4156	                                push r14	      9964	tc-i386.c	FUNCTION_117
0x400ec94	            0x4155	                                push r13	      9964	tc-i386.c	FUNCTION_117
0x400ec96	            0x4154	                                push r12	      9964	tc-i386.c	FUNCTION_117
0x400ec98	          0x4989f4	                            mov r12, rsi	      9964	tc-i386.c	FUNCTION_117
0x400ec9b	              0x55	                                push rbp	      9964	tc-i386.c	FUNCTION_117
0x400ec9c	              0x53	                                push rbx	      9964	tc-i386.c	FUNCTION_117
0x400ec9d	          0x4889fb	                            mov rbx, rdi	      9964	tc-i386.c	FUNCTION_117
0x400eca0	        0x4883ec18	                           sub rsp, 0x18	      9964	tc-i386.c	FUNCTION_117
0x400eca4	          0xf60701	                      test byte [rdi], 1	      9969	tc-i386.c	FUNCTION_117	IF_1
0x400eca7	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      9965	tc-i386.c	FUNCTION_117
0x400ecab	        0x4c8b7710	            mov r14, qword [rdi + 0x10] 	      9965	tc-i386.c	FUNCTION_117
0x400ecaf	          0x488b2e	                    mov rbp, qword [rsi]	      9966	tc-i386.c	FUNCTION_117
0x400ecb2	            0x744c	                            je 0x400ed00	      9969	tc-i386.c	FUNCTION_117	IF_1
0x400ecb4	          0x8b4750	            mov eax, dword [rdi + 0x50] 	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecb7	          0x83f805	                              cmp eax, 5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecba	     0xf8408020000	                            je 0x400eec8	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecc0	            0x772e	                            ja 0x400ecf0	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecc2	          0x83f801	                              cmp eax, 1	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecc5	     0xf84dd010000	                            je 0x400eea8	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eccb	          0x83f802	                              cmp eax, 2	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecce	            0x7530	                           jne 0x400ed00	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecd0	    0xc74350090000	               mov dword [rbx + 0x50], 9	      9981	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecd7	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ecdb	          0x4885ff	                           test rdi, rdi	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ecde	     0xf858c000000	                           jne 0x400ed70	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ece4	        0x49892c24	                    mov qword [r12], rbp	     10108	tc-i386.c	FUNCTION_117
0x400ece8	          0x800b20	                     or byte [rbx], 0x20	     10113	tc-i386.c	FUNCTION_117	IF_10
0x400eceb	      0xe92f010000	                           jmp 0x400ee1f	     10113	tc-i386.c	FUNCTION_117	IF_10
0x400ecf0	          0x83f807	                              cmp eax, 7	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecf3	     0xf84bf010000	                            je 0x400eeb8	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecf9	      0x3d84010000	                          cmp eax, 0x184	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecfe	            0x74d0	                            je 0x400ecd0	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ed00	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ed04	          0x4885ff	                           test rdi, rdi	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ed07	            0x74db	                            je 0x400ece4	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ed09	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      9993	tc-i386.c	FUNCTION_117	IF_2
0x400ed0c	          0x8d48f5	                    lea ecx, [rax - 0xb]	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed0f	          0x83e1fd	                     and ecx, 0xfffffffd	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed12	            0x745c	                            je 0x400ed70	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed14	          0x8d48f8	                      lea ecx, [rax - 8]	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed17	          0x83f901	                              cmp ecx, 1	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed1a	            0x7654	                           jbe 0x400ed70	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed1c	      0x3d7e010000	                          cmp eax, 0x17e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed21	     0xf84d1000000	                            je 0x400edf8	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed27	            0x765f	                           jbe 0x400ed88	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed29	      0x3d8b010000	                          cmp eax, 0x18b	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed2e	     0xf84bc010000	                            je 0x400eef0	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed34	     0xf86c6010000	                           jbe 0x400ef00	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed3a	      0x3d95010000	                          cmp eax, 0x195	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed3f	            0x7471	                            je 0x400edb2	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed41	     0xf8691010000	                           jbe 0x400eed8	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed47	      0x2da3050000	                          sub eax, 0x5a3	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed4c	          0x83f801	                              cmp eax, 1	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed4f	     0xf87aa000000	                            ja 0x400edff	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed55	          0x8023df	                    and byte [rbx], 0xdf	     10101	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed58	        0x4883c418	                           add rsp, 0x18	     10133	tc-i386.c	FUNCTION_117
0x400ed5c	              0x5b	                                 pop rbx	     10133	tc-i386.c	FUNCTION_117
0x400ed5d	              0x5d	                                 pop rbp	     10133	tc-i386.c	FUNCTION_117
0x400ed5e	            0x415c	                                 pop r12	     10133	tc-i386.c	FUNCTION_117
0x400ed60	            0x415d	                                 pop r13	     10133	tc-i386.c	FUNCTION_117
0x400ed62	            0x415e	                                 pop r14	     10133	tc-i386.c	FUNCTION_117
0x400ed64	            0x415f	                                 pop r15	     10133	tc-i386.c	FUNCTION_117
0x400ed66	              0xc3	                                     ret	     10133	tc-i386.c	FUNCTION_117
0x400ed67	    0x660f1f840000	                    nop word [rax + rax]	     10133	tc-i386.c	FUNCTION_117
0x400ed70	    0x8b0d00000000	            mov ecx, dword [0x0400ed76] 	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed76	            0x85c9	                           test ecx, ecx	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed78	     0xf84c2000000	                            je 0x400ee40	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed7e	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed81	            0xeb99	                           jmp 0x400ed1c	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed83	       0xf1f440000	                   nop dword [rax + rax]	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed88	      0x3d71010000	                          cmp eax, 0x171	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed8d	            0x7641	                           jbe 0x400edd0	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed8f	      0x3d74010000	                          cmp eax, 0x174	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed94	     0xf8458010000	                            je 0x400eef2	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed9a	     0xf8680010000	                           jbe 0x400ef20	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eda0	      0x3d78010000	                          cmp eax, 0x178	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eda5	     0xf8445010000	                            je 0x400eef0	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edab	      0x3d79010000	                          cmp eax, 0x179	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edb0	            0x754d	                           jne 0x400edff	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edb2	      0xe800000000	                          call 0x400edb7	     10095	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_12
0x400edb7	          0x8023df	                    and byte [rbx], 0xdf	     10096	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edba	        0x4883c418	                           add rsp, 0x18	     10133	tc-i386.c	FUNCTION_117
0x400edbe	              0x5b	                                 pop rbx	     10133	tc-i386.c	FUNCTION_117
0x400edbf	              0x5d	                                 pop rbp	     10133	tc-i386.c	FUNCTION_117
0x400edc0	            0x415c	                                 pop r12	     10133	tc-i386.c	FUNCTION_117
0x400edc2	            0x415d	                                 pop r13	     10133	tc-i386.c	FUNCTION_117
0x400edc4	            0x415e	                                 pop r14	     10133	tc-i386.c	FUNCTION_117
0x400edc6	            0x415f	                                 pop r15	     10133	tc-i386.c	FUNCTION_117
0x400edc8	              0xc3	                                     ret	     10133	tc-i386.c	FUNCTION_117
0x400edc9	     0xf1f80000000	                         nop dword [rax]	     10133	tc-i386.c	FUNCTION_117
0x400edd0	      0x3d70010000	                          cmp eax, 0x170	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edd5	     0xf8315010000	                           jae 0x400eef0	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eddb	      0x3d6e010000	                          cmp eax, 0x16e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ede0	     0xf870c010000	                            ja 0x400eef2	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ede6	      0x3d6d010000	                          cmp eax, 0x16d	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edeb	     0xf83ff000000	                           jae 0x400eef0	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edf1	      0x3d65010000	                          cmp eax, 0x165	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edf6	            0x7507	                           jne 0x400edff	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edf8	    0x48c7c5fcffff	             mov rbp, 0xfffffffffffffffc	     10067	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edff	          0x4885ff	                           test rdi, rdi	     10112	tc-i386.c	FUNCTION_117	IF_10
0x400ee02	        0x49892c24	                    mov qword [r12], rbp	     10108	tc-i386.c	FUNCTION_117
0x400ee06	     0xf84dcfeffff	                            je 0x400ece8	     10112	tc-i386.c	FUNCTION_117	IF_10
0x400ee0c	    0x8b0500000000	            mov eax, dword [0x0400ee12] 	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee12	            0x85c0	                           test eax, eax	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee14	            0x7409	                            je 0x400ee1f	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee16	          0x800b40	                     or byte [rbx], 0x40	     10126	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee19	        0x48896b58	             mov qword [rbx + 0x58], rbp	     10128	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee1d	            0x31ed	                            xor ebp, ebp	     10129	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee1f	         0xfb65302	               movzx edx, byte [rbx + 2]	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400ee23	        0x4883c418	                           add rsp, 0x18	     10133	tc-i386.c	FUNCTION_117
0x400ee27	      0x4b8d7c357c	            lea rdi, [r13 + r14 + 0x7c] 	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400ee2c	              0x5b	                                 pop rbx	     10133	tc-i386.c	FUNCTION_117
0x400ee2d	          0x4889ee	                            mov rsi, rbp	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400ee30	              0x5d	                                 pop rbp	     10133	tc-i386.c	FUNCTION_117
0x400ee31	            0x415c	                                 pop r12	     10133	tc-i386.c	FUNCTION_117
0x400ee33	            0x415d	                                 pop r13	     10133	tc-i386.c	FUNCTION_117
0x400ee35	            0x415e	                                 pop r14	     10133	tc-i386.c	FUNCTION_117
0x400ee37	            0x415f	                                 pop r15	     10133	tc-i386.c	FUNCTION_117
0x400ee39	      0xe900000000	                           jmp 0x400ee3e	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400ee3e	            0x6690	                                     nop	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400ee40	          0x4c89f0	                            mov rax, r14	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x400ee43	        0x49034500	                    add rax, qword [r13]	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x400ee47	      0x4889542408	                mov qword [rsp + 8], rdx	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x400ee4c	          0x4801c5	                            add rbp, rax	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x400ee4f	      0xe800000000	                          call 0x400ee54	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x400ee54	      0x488b542408	                mov rdx, qword [rsp + 8]	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee59	          0x4989c7	                            mov r15, rax	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x400ee5c	          0x4839d0	                            cmp rax, rdx	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee5f	            0x7416	                            je 0x400ee77	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee61	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x400ee65	      0xe800000000	                          call 0x400ee6a	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x400ee6a	            0x85c0	                           test eax, eax	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee6c	            0x7423	                            je 0x400ee91	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee6e	    0x4981ff000000	                              cmp r15, 0	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee75	            0x741a	                            je 0x400ee91	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee77	          0x4889df	                            mov rdi, rbx	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ee7a	      0xe800000000	                          call 0x400ee7f	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ee7f	            0x85c0	                           test eax, eax	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ee81	            0x750e	                           jne 0x400ee91	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ee83	        0x488b5308	                mov rdx, qword [rbx + 8]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee87	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee8b	          0x480302	                    add rax, qword [rdx]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee8e	          0x4801c5	                            add rbp, rax	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee91	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ee95	          0x4885ff	                           test rdi, rdi	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400ee98	     0xf8446feffff	                            je 0x400ece4	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400ee9e	      0xe9dbfeffff	                           jmp 0x400ed7e	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400eea3	       0xf1f440000	                   nop dword [rax + rax]	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400eea8	    0xc74750080000	               mov dword [rdi + 0x50], 8	      9977	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eeaf	      0xe923feffff	                           jmp 0x400ecd7	      9978	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eeb4	         0xf1f4000	                         nop dword [rax]	      9978	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eeb8	    0xc747500d0000	            mov dword [rdi + 0x50], 0xd 	      9987	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eebf	      0xe913feffff	                           jmp 0x400ecd7	      9988	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eec4	         0xf1f4000	                         nop dword [rax]	      9988	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eec8	    0xc747500b0000	            mov dword [rdi + 0x50], 0xb 	      9984	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eecf	      0xe903feffff	                           jmp 0x400ecd7	      9985	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eed4	         0xf1f4000	                         nop dword [rax]	      9985	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eed8	      0x3d8c010000	                          cmp eax, 0x18c	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eedd	            0x7413	                            je 0x400eef2	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eedf	      0x3d94010000	                          cmp eax, 0x194	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eee4	     0xf8515ffffff	                           jne 0x400edff	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eeea	    0x660f1f440000	                    nop word [rax + rax]	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eef0	            0x31ed	                            xor ebp, ebp	     10080	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eef2	      0xe800000000	                          call 0x400eef7	     10089	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_11
0x400eef7	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     10089	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_11
0x400eefb	      0xe9fffeffff	                           jmp 0x400edff	     10090	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef00	      0x3d89010000	                          cmp eax, 0x189	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef05	            0x77eb	                            ja 0x400eef2	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef07	      0x3d88010000	                          cmp eax, 0x188	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef0c	            0x73e2	                           jae 0x400eef0	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef0e	      0x3d86010000	                          cmp eax, 0x186	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef13	     0xf82e6feffff	                            jb 0x400edff	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef19	            0xebd7	                           jmp 0x400eef2	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef1b	       0xf1f440000	                   nop dword [rax + rax]	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef20	      0x3d72010000	                          cmp eax, 0x172	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef25	            0x74cb	                            je 0x400eef2	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef27	      0x3d73010000	                          cmp eax, 0x173	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef2c	     0xf85cdfeffff	                           jne 0x400edff	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef32	            0x31ed	                            xor ebp, ebp	     10080	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ef34	            0xebbc	                           jmp 0x400eef2	     10080	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
x86_cons	IF,5:DO,0:ELSE,1:WHILE,0:CALL,6:functions,0:SWITCH,0:FOR,0	83
0x400e620	            0x4154	                                push r12	      8406	tc-i386.c	FUNCTION_99
0x400e622	              0x55	                                push rbp	      8406	tc-i386.c	FUNCTION_99
0x400e623	            0x31d2	                            xor edx, edx	      8411	tc-i386.c	FUNCTION_99
0x400e625	              0x53	                                push rbx	      8406	tc-i386.c	FUNCTION_99
0x400e626	          0x4889fb	                            mov rbx, rdi	      8406	tc-i386.c	FUNCTION_99
0x400e629	        0x4883ec10	                           sub rsp, 0x10	      8406	tc-i386.c	FUNCTION_99
0x400e62d	    0xf71d00000000	                  neg dword [0x0400e633]	      8409	tc-i386.c	FUNCTION_99
0x400e633	        0x6689571a	               mov word [rdi + 0x1a], dx	      8411	tc-i386.c	FUNCTION_99
0x400e637	    0x64488b042528	                mov rax, qword fs:[0x28]	      8406	tc-i386.c	FUNCTION_99
0x400e640	      0x4889442408	                mov qword [rsp + 8], rax	      8406	tc-i386.c	FUNCTION_99
0x400e645	            0x31c0	                            xor eax, eax	      8406	tc-i386.c	FUNCTION_99
0x400e647	          0x83fe04	                              cmp esi, 4	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e64a	    0xc70424470000	                   mov dword [rsp], 0x47	      8407	tc-i386.c	FUNCTION_99
0x400e651	            0x745d	                            je 0x400e6b0	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e653	    0x8b0500000000	            mov eax, dword [0x0400e659] 	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e659	            0x85c0	                           test eax, eax	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e65b	            0x7405	                            je 0x400e662	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e65d	          0x83fe08	                              cmp esi, 8	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e660	            0x744e	                            je 0x400e6b0	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e662	      0xba01000000	                              mov edx, 1	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e667	          0x4889de	                            mov rsi, rbx	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e66a	            0x31ff	                            xor edi, edi	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e66c	      0xe800000000	                          call 0x400e671	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e671	    0x8b0500000000	            mov eax, dword [0x0400e677] 	      8451	tc-i386.c	FUNCTION_99
0x400e677	            0xf7d8	                                 neg eax	      8451	tc-i386.c	FUNCTION_99
0x400e679	            0x85c0	                           test eax, eax	      8453	tc-i386.c	FUNCTION_99	IF_5
0x400e67b	    0x890500000000	            mov dword [0x0400e681], eax 	      8451	tc-i386.c	FUNCTION_99
0x400e681	            0x7408	                            je 0x400e68b	      8453	tc-i386.c	FUNCTION_99	IF_5
0x400e683	          0x4889df	                            mov rdi, rbx	      8454	tc-i386.c	FUNCTION_99	CALL_6
0x400e686	      0xe84596ffff	            call sym.i386_intel_simplify	      8454	tc-i386.c	FUNCTION_99	CALL_6
0x400e68b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8457	tc-i386.c	FUNCTION_99
0x400e690	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8457	tc-i386.c	FUNCTION_99
0x400e699	          0x8b0424	                    mov eax, dword [rsp]	      8457	tc-i386.c	FUNCTION_99
0x400e69c	     0xf85bc000000	                           jne 0x400e75e	      8457	tc-i386.c	FUNCTION_99
0x400e6a2	        0x4883c410	                           add rsp, 0x10	      8457	tc-i386.c	FUNCTION_99
0x400e6a6	              0x5b	                                 pop rbx	      8457	tc-i386.c	FUNCTION_99
0x400e6a7	              0x5d	                                 pop rbp	      8457	tc-i386.c	FUNCTION_99
0x400e6a8	            0x415c	                                 pop r12	      8457	tc-i386.c	FUNCTION_99
0x400e6aa	              0xc3	                                     ret	      8457	tc-i386.c	FUNCTION_99
0x400e6ab	       0xf1f440000	                   nop dword [rax + rax]	      8457	tc-i386.c	FUNCTION_99
0x400e6b0	      0x488d742404	                      lea rsi, [rsp + 4]	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6b5	            0x31d2	                            xor edx, edx	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6b7	          0x4889e7	                            mov rdi, rsp	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6ba	    0xc74424040000	                  mov dword [rsp + 4], 0	      8417	tc-i386.c	FUNCTION_99	IF_1
0x400e6c2	    0x4c8b25000000	            mov r12, qword [0x0400e6c9] 	      8419	tc-i386.c	FUNCTION_99	IF_1
0x400e6c9	      0xe82250ffff	                        call sym.lex_got	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6ce	          0x4885c0	                           test rax, rax	      8421	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e6d1	          0x4889c5	                            mov rbp, rax	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6d4	            0x748c	                            je 0x400e662	      8421	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e6d6	            0x31ff	                            xor edi, edi	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e6d8	      0xba01000000	                              mov edx, 1	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e6dd	          0x4889de	                            mov rsi, rbx	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e6e0	    0x488905000000	            mov qword [0x0400e6e7], rax 	      8422	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e6e7	      0xe800000000	                          call 0x400e6ec	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e6ec	    0x488b15000000	            mov rdx, qword [0x0400e6f3] 	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e6f3	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e6f8	          0x4889ef	                            mov rdi, rbp	      8434	tc-i386.c	FUNCTION_99	IF_1	IF_3	CALL_2
0x400e6fb	          0x4829ea	                            sub rdx, rbp	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e6fe	          0x4801d0	                            add rax, rdx	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e701	          0x4c01e0	                            add rax, r12	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e704	    0x488905000000	            mov qword [0x0400e70b], rax 	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e70b	      0xe800000000	                          call 0x400e710	      8434	tc-i386.c	FUNCTION_99	IF_1	IF_3	CALL_2
0x400e710	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      8435	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e714	          0x8d50fb	                      lea edx, [rax - 5]	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e717	          0x80fa01	                               cmp dl, 1	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e71a	            0x7608	                           jbe 0x400e724	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e71c	            0x3c02	                               cmp al, 2	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e71e	     0xf874dffffff	                            ja 0x400e671	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e724	    0x488b05000000	            mov rax, qword [0x0400e72b] 	      8441	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e72b	      0xba05000000	                              mov edx, 5	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e730	      0xbe00000000	                              mov esi, 0	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e735	            0x31ff	                            xor edi, edi	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e737	           0xfb628	                   movzx ebp, byte [rax]	      8441	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e73a	          0xc60000	                       mov byte [rax], 0	      8442	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e73d	      0xe800000000	                          call 0x400e742	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e742	          0x4c89e6	                            mov rsi, r12	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e745	          0x4889c7	                            mov rdi, rax	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e748	            0x31c0	                            xor eax, eax	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e74a	      0xe800000000	                          call 0x400e74f	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e74f	    0x488b05000000	            mov rax, qword [0x0400e756] 	      8444	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e756	          0x408828	                     mov byte [rax], bpl	      8444	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e759	      0xe913ffffff	                           jmp 0x400e671	      8413	tc-i386.c	FUNCTION_99	IF_1
0x400e75e	      0xe800000000	                          call 0x400e763	      8457	tc-i386.c	FUNCTION_99
swap_2_operands	IF,9:DO,0:ELSE,3:WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,0	72
0x40000e0	        0x4883ec18	                           sub rsp, 0x18	      4678	tc-i386.c	FUNCTION_71
0x40000e4	          0x4863d6	                         movsxd rdx, esi	      4683	tc-i386.c	FUNCTION_71
0x40000e7	    0x64488b042528	                mov rax, qword fs:[0x28]	      4678	tc-i386.c	FUNCTION_71
0x40000f0	      0x4889442408	                mov qword [rsp + 8], rax	      4678	tc-i386.c	FUNCTION_71
0x40000f5	            0x31c0	                            xor eax, eax	      4678	tc-i386.c	FUNCTION_71
0x40000f7	          0x4863c7	                         movsxd rax, edi	      4684	tc-i386.c	FUNCTION_71
0x40000fa	        0x4c8d420e	                     lea r8, [rdx + 0xe]	      4683	tc-i386.c	FUNCTION_71
0x40000fe	        0x488d480e	                    lea rcx, [rax + 0xe]	      4684	tc-i386.c	FUNCTION_71
0x4000102	    0x4e8b0cc50000	                    mov r9, qword [r8*8]	      4683	tc-i386.c	FUNCTION_71
0x400010a	    0x4c8b14cd0000	                  mov r10, qword [rcx*8]	      4684	tc-i386.c	FUNCTION_71
0x4000112	    0x4e8914c50000	                   mov qword [r8*8], r10	      4684	tc-i386.c	FUNCTION_71
0x400011a	        0x4c8d4214	                    lea r8, [rdx + 0x14]	      4686	tc-i386.c	FUNCTION_71
0x400011e	    0x4c890ccd0000	                   mov qword [rcx*8], r9	      4685	tc-i386.c	FUNCTION_71
0x4000126	        0x488d4814	                   lea rcx, [rax + 0x14]	      4687	tc-i386.c	FUNCTION_71
0x400012a	        0x4883c234	                           add rdx, 0x34	      4689	tc-i386.c	FUNCTION_71
0x400012e	        0x4883c034	                           add rax, 0x34	      4690	tc-i386.c	FUNCTION_71
0x4000132	    0x4e8b0cc50000	                    mov r9, qword [r8*8]	      4686	tc-i386.c	FUNCTION_71
0x400013a	    0x4c8b14cd0000	                  mov r10, qword [rcx*8]	      4687	tc-i386.c	FUNCTION_71
0x4000142	    0x4e8914c50000	                   mov qword [r8*8], r10	      4687	tc-i386.c	FUNCTION_71
0x400014a	    0x448b04850000	                  mov r8d, dword [rax*4]	      4690	tc-i386.c	FUNCTION_71
0x4000152	    0x4c890ccd0000	                   mov qword [rcx*8], r9	      4688	tc-i386.c	FUNCTION_71
0x400015a	    0x8b0c95000000	                  mov ecx, dword [rdx*4]	      4689	tc-i386.c	FUNCTION_71
0x4000161	    0x448904950000	                  mov dword [rdx*4], r8d	      4690	tc-i386.c	FUNCTION_71
0x4000169	    0x890c85000000	                  mov dword [rax*4], ecx	      4691	tc-i386.c	FUNCTION_71
0x4000170	    0x488b05000000	            mov rax, qword [0x04000177] 	      4693	tc-i386.c	FUNCTION_71	IF_1
0x4000177	          0x4885c0	                           test rax, rax	      4693	tc-i386.c	FUNCTION_71	IF_1
0x400017a	            0x740b	                            je 0x4000187	      4693	tc-i386.c	FUNCTION_71	IF_1
0x400017c	          0x8b500c	              mov edx, dword [rax + 0xc]	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x400017f	            0x39d7	                            cmp edi, edx	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x4000181	            0x745d	                            je 0x40001e0	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x4000183	            0x39d6	                            cmp esi, edx	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4000185	            0x7469	                            je 0x40001f0	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4000187	    0x488b05000000	            mov rax, qword [0x0400018e] 	      4700	tc-i386.c	FUNCTION_71	IF_4
0x400018e	          0x4885c0	                           test rax, rax	      4700	tc-i386.c	FUNCTION_71	IF_4
0x4000191	            0x740b	                            je 0x400019e	      4700	tc-i386.c	FUNCTION_71	IF_4
0x4000193	          0x8b5004	                mov edx, dword [rax + 4]	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4000196	            0x39d7	                            cmp edi, edx	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4000198	            0x743e	                            je 0x40001d8	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x400019a	            0x39d6	                            cmp esi, edx	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x400019c	            0x744a	                            je 0x40001e8	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x400019e	    0x488b05000000	            mov rax, qword [0x040001a5] 	      4707	tc-i386.c	FUNCTION_71	IF_7
0x40001a5	          0x4885c0	                           test rax, rax	      4707	tc-i386.c	FUNCTION_71	IF_7
0x40001a8	            0x740b	                            je 0x40001b5	      4707	tc-i386.c	FUNCTION_71	IF_7
0x40001aa	          0x8b5004	                mov edx, dword [rax + 4]	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x40001ad	            0x39d7	                            cmp edi, edx	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x40001af	            0x7447	                            je 0x40001f8	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x40001b1	            0x39d6	                            cmp esi, edx	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x40001b3	            0x741b	                            je 0x40001d0	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x40001b5	      0x488b442408	                mov rax, qword [rsp + 8]	      4714	tc-i386.c	FUNCTION_71
0x40001ba	    0x644833042528	                xor rax, qword fs:[0x28]	      4714	tc-i386.c	FUNCTION_71
0x40001c3	            0x7538	                           jne 0x40001fd	      4714	tc-i386.c	FUNCTION_71
0x40001c5	        0x4883c418	                           add rsp, 0x18	      4714	tc-i386.c	FUNCTION_71
0x40001c9	              0xc3	                                     ret	      4714	tc-i386.c	FUNCTION_71
0x40001ca	    0x660f1f440000	                    nop word [rax + rax]	      4714	tc-i386.c	FUNCTION_71
0x40001d0	          0x897804	                mov dword [rax + 4], edi	      4712	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x40001d3	            0xebe0	                           jmp 0x40001b5	      4714	tc-i386.c	FUNCTION_71
0x40001d5	           0xf1f00	                         nop dword [rax]	      4714	tc-i386.c	FUNCTION_71
0x40001d8	          0x897004	                mov dword [rax + 4], esi	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x40001db	            0xebc1	                           jmp 0x400019e	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x40001dd	           0xf1f00	                         nop dword [rax]	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x40001e0	          0x89700c	              mov dword [rax + 0xc], esi	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40001e3	            0xeba2	                           jmp 0x4000187	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40001e5	           0xf1f00	                         nop dword [rax]	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x40001e8	          0x897804	                mov dword [rax + 4], edi	      4705	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x40001eb	            0xebb1	                           jmp 0x400019e	      4705	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x40001ed	           0xf1f00	                         nop dword [rax]	      4705	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x40001f0	          0x89780c	              mov dword [rax + 0xc], edi	      4698	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x40001f3	            0xeb92	                           jmp 0x4000187	      4698	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x40001f5	           0xf1f00	                         nop dword [rax]	      4698	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x40001f8	          0x897004	                mov dword [rax + 4], esi	      4710	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x40001fb	            0xebb8	                           jmp 0x40001b5	      4710	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x40001fd	      0xe800000000	                          call 0x4000202	      4714	tc-i386.c	FUNCTION_71
set_cpu_arch	IF,15:DO,0:ELSE,7:WHILE,0:CALL,36:functions,0:SWITCH,0:FOR,2	294
0x40077a0	            0x4157	                                push r15	      2580	tc-i386.c	FUNCTION_49
0x40077a2	            0x4156	                                push r14	      2580	tc-i386.c	FUNCTION_49
0x40077a4	            0x4155	                                push r13	      2580	tc-i386.c	FUNCTION_49
0x40077a6	            0x4154	                                push r12	      2580	tc-i386.c	FUNCTION_49
0x40077a8	              0x55	                                push rbp	      2580	tc-i386.c	FUNCTION_49
0x40077a9	              0x53	                                push rbx	      2580	tc-i386.c	FUNCTION_49
0x40077aa	        0x4883ec28	                           sub rsp, 0x28	      2580	tc-i386.c	FUNCTION_49
0x40077ae	    0x488b15000000	            mov rdx, qword [0x040077b5] 	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40077b5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2580	tc-i386.c	FUNCTION_49
0x40077be	      0x4889442418	             mov qword [rsp + 0x18], rax	      2580	tc-i386.c	FUNCTION_49
0x40077c3	            0x31c0	                            xor eax, eax	      2580	tc-i386.c	FUNCTION_49
0x40077c5	           0xfb602	                   movzx eax, byte [rdx]	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40077c8	            0x3c20	                            cmp al, 0x20	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40077ca	     0xf8480010000	                            je 0x4007950	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40077d0	    0x80b800000000	                       cmp byte [rax], 0	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40077d7	     0xf8513010000	                           jne 0x40078f0	      2583	tc-i386.c	FUNCTION_49	IF_1
0x40077dd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40077e2	      0xbd00000000	                              mov ebp, 0	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40077e7	    0x41bc00000000	                             mov r12d, 0	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40077ed	            0x31db	                            xor ebx, ebx	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x40077ef	      0xe800000000	                          call 0x40077f4	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40077f4	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40077f9	          0x4189c5	                           mov r13d, eax	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40077fc	            0xeb19	                           jmp 0x4007817	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x40077fe	            0x6690	                                     nop	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x4007800	          0x83c301	                              add ebx, 1	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4007803	    0x81fb84000000	                           cmp ebx, 0x84	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4007809	     0xf84e1020000	                            je 0x4007af0	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x400780f	        0x4c8b6500	                    mov r12, qword [rbp]	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4007813	        0x4883c528	                           add rbp, 0x28	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4007817	          0x4c89e6	                            mov rsi, r12	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400781a	          0x4c89f7	                            mov rdi, r14	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400781d	      0xe800000000	                          call 0x4007822	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4007822	            0x85c0	                           test eax, eax	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4007824	            0x75da	                           jne 0x4007800	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4007826	    0x48833d000000	               cmp qword [0x0400782e], 0	      2550	tc-i386.c	FUNCTION_48	IF_2
0x400782e	     0xf8413040000	                            je 0x4007c47	      2550	tc-i386.c	FUNCTION_48	IF_2
0x4007834	        0x41803e2e	                    cmp byte [r14], 0x2e	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4007838	     0xf8492010000	                            je 0x40079d0	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400783e	        0x488d049b	                  lea rax, [rbx + rbx*4]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4007842	    0x833d00000000	               cmp dword [0x04007849], 2	      2601	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4007849	    0x4c8925000000	            mov qword [0x04007850], r12 	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4007850	    0x48c705000000	               mov qword [0x0400785b], 0	      2599	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400785b	    0x488b14c50000	                  mov rdx, qword [rax*8]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4007863	    0x488b04c50000	                  mov rax, qword [rax*8]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400786b	    0x488915000000	            mov qword [0x04007872], rdx 	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4007872	    0x488905000000	            mov qword [0x04007879], rax 	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4007879	     0xfb605000000	           movzx eax, byte [0x04007880] 	      2603	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4007880	     0xf84b0030000	                            je 0x4007c36	      2601	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4007886	          0x83e0bf	                     and eax, 0xffffffbf	      2608	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x4007889	          0x83c880	                      or eax, 0xffffff80	      2609	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x400788c	    0x880500000000	               mov byte [0x04007892], al	      2609	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x4007892	        0x488d049b	                  lea rax, [rbx + rbx*4]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4007896	    0x8b3500000000	            mov esi, dword [0x0400789c] 	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400789c	    0x488d04c50000	                        lea rax, [rax*8]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40078a4	            0x85f6	                           test esi, esi	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x40078a6	          0x8b480c	              mov ecx, dword [rax + 0xc]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40078a9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40078ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40078b1	    0x890d00000000	            mov dword [0x040078b7], ecx 	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40078b7	    0x488915000000	            mov qword [0x040078be], rdx 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40078be	    0x488905000000	            mov qword [0x040078c5], rax 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40078c5	            0x7514	                           jne 0x40078db	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x40078c7	    0x890d00000000	            mov dword [0x040078cd], ecx 	      2615	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x40078cd	    0x488905000000	            mov qword [0x040078d4], rax 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x40078d4	    0x488915000000	            mov qword [0x040078db], rdx 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x40078db	    0x488b05000000	            mov rax, qword [0x040078e2] 	      2682	tc-i386.c	FUNCTION_49	IF_1
0x40078e2	          0x448828	                    mov byte [rax], r13b	      2682	tc-i386.c	FUNCTION_49	IF_1
0x40078e5	            0xeb24	                           jmp 0x400790b	      2682	tc-i386.c	FUNCTION_49	IF_1
0x40078e7	    0x660f1f840000	                    nop word [rax + rax]	      2682	tc-i386.c	FUNCTION_49	IF_1
0x40078f0	            0x31ff	                            xor edi, edi	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40078f2	      0xba05000000	                              mov edx, 5	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40078f7	      0xbe00000000	                              mov esi, 0	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x40078fc	      0xe800000000	                          call 0x4007901	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4007901	          0x4889c7	                            mov rdi, rax	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4007904	            0x31c0	                            xor eax, eax	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4007906	      0xe800000000	                          call 0x400790b	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x400790b	    0x488b05000000	            mov rax, qword [0x04007912] 	      2688	tc-i386.c	FUNCTION_49	IF_13
0x4007912	    0xc70500000000	               mov dword [0x0400791c], 0	      2687	tc-i386.c	FUNCTION_49
0x400791c	          0x80382c	                    cmp byte [rax], 0x2c	      2688	tc-i386.c	FUNCTION_49	IF_13
0x400791f	            0x7447	                            je 0x4007968	      2688	tc-i386.c	FUNCTION_49	IF_13
0x4007921	      0xe800000000	                          call 0x4007926	      2707	tc-i386.c	FUNCTION_49	CALL_36
0x4007926	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2708	tc-i386.c	FUNCTION_49
0x400792b	    0x644833042528	                xor rax, qword fs:[0x28]	      2708	tc-i386.c	FUNCTION_49
0x4007934	     0xf8591030000	                           jne 0x4007ccb	      2708	tc-i386.c	FUNCTION_49
0x400793a	        0x4883c428	                           add rsp, 0x28	      2708	tc-i386.c	FUNCTION_49
0x400793e	              0x5b	                                 pop rbx	      2708	tc-i386.c	FUNCTION_49
0x400793f	              0x5d	                                 pop rbp	      2708	tc-i386.c	FUNCTION_49
0x4007940	            0x415c	                                 pop r12	      2708	tc-i386.c	FUNCTION_49
0x4007942	            0x415d	                                 pop r13	      2708	tc-i386.c	FUNCTION_49
0x4007944	            0x415e	                                 pop r14	      2708	tc-i386.c	FUNCTION_49
0x4007946	            0x415f	                                 pop r15	      2708	tc-i386.c	FUNCTION_49
0x4007948	              0xc3	                                     ret	      2708	tc-i386.c	FUNCTION_49
0x4007949	     0xf1f80000000	                         nop dword [rax]	      2708	tc-i386.c	FUNCTION_49
0x4007950	        0x488d4201	                      lea rax, [rdx + 1]	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x4007954	    0x488905000000	            mov qword [0x0400795b], rax 	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x400795b	         0xfb64201	               movzx eax, byte [rdx + 1]	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x400795f	      0xe96cfeffff	                           jmp 0x40077d0	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x4007964	         0xf1f4000	                         nop dword [rax]	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x4007968	         0xfb65001	               movzx edx, byte [rax + 1]	      2689	tc-i386.c	FUNCTION_49	IF_13
0x400796c	    0x80ba00000000	                       cmp byte [rdx], 0	      2689	tc-i386.c	FUNCTION_49	IF_13
0x4007973	            0x75ac	                           jne 0x4007921	      2689	tc-i386.c	FUNCTION_49	IF_13
0x4007975	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x400797a	        0x4883c001	                              add rax, 1	      2694	tc-i386.c	FUNCTION_49	IF_13
0x400797e	    0x488905000000	            mov qword [0x04007985], rax 	      2694	tc-i386.c	FUNCTION_49	IF_13
0x4007985	      0xe800000000	                          call 0x400798a	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x400798a	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x400798f	      0xbf00000000	                              mov edi, 0	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4007994	      0xb908000000	                              mov ecx, 8	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4007999	            0x89c3	                            mov ebx, eax	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x400799b	          0x4889ee	                            mov rsi, rbp	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x400799e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x40079a0	     0xf84cb020000	                            je 0x4007c71	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x40079a6	      0xbf00000000	                              mov edi, 0	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x40079ab	      0xb906000000	                              mov ecx, 6	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x40079b0	          0x4889ee	                            mov rsi, rbp	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x40079b3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x40079b5	     0xf85d9020000	                           jne 0x4007c94	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x40079bb	           0xfbefb	                           movsx edi, bl	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079be	      0xe800000000	                          call 0x40079c3	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079c3	      0xe959ffffff	                           jmp 0x4007921	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079c8	     0xf1f84000000	                   nop dword [rax + rax]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079d0	        0x488d049b	                  lea rax, [rbx + rbx*4]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079d4	    0x8b3500000000	            mov esi, dword [0x040079da] 	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079da	    0x8b0d00000000	            mov ecx, dword [0x040079e0] 	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079e0	    0x448b05000000	            mov r8d, dword [0x040079e7] 	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079e7	    0x8b3d00000000	            mov edi, dword [0x040079ed] 	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079ed	    0x488d14c51000	                 lea rdx, [rax*8 + 0x10]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079f5	    0x488d82000000	                          lea rax, [rdx]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x40079fc	    0x448b92000000	                   mov r10d, dword [rdx]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4007a03	    0x448b8a000000	                    mov r9d, dword [rdx]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4007a0a	    0x8b9200000000	                    mov edx, dword [rdx]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4007a10	          0x8b400c	              mov eax, dword [rax + 0xc]	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4007a13	          0x4589ce	                           mov r14d, r9d	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a16	          0x4589d7	                          mov r15d, r10d	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a19	            0x89d5	                            mov ebp, edx	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a1b	          0x4109fe	                            or r14d, edi	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a1e	          0x4509c7	                            or r15d, r8d	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a21	            0x89c3	                            mov ebx, eax	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a23	             0x9cd	                             or ebp, ecx	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a25	             0x9f3	                             or ebx, esi	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a27	            0x39f3	                            cmp ebx, esi	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a29	        0x400f95c6	                               setne sil	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a2d	            0x39cd	                            cmp ebp, ecx	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a2f	           0xf95c1	                                setne cl	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a32	          0x4008ce	                              or sil, cl	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a35	            0x7539	                           jne 0x4007a70	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a37	          0x4139fe	                           cmp r14d, edi	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a3a	            0x7534	                           jne 0x4007a70	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007a3c	          0x4539c7	                           cmp r15d, r8d	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x4007a3f	            0x752f	                           jne 0x4007a70	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x4007a41	     0xb0500000000	              or eax, dword [0x04007a47]	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a47	     0xb1500000000	              or edx, dword [0x04007a4d]	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a4d	    0x440b0d000000	              or r9d, dword [0x04007a54]	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x4007a54	    0x440915000000	             or dword [0x04007a5b], r10d	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x4007a5b	    0x891500000000	            mov dword [0x04007a61], edx 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x4007a61	    0x44890d000000	            mov dword [0x04007a68], r9d 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x4007a68	    0x890500000000	            mov dword [0x04007a6e], eax 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x4007a6e	            0xeb6c	                           jmp 0x4007adc	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x4007a70	    0x488b0d000000	            mov rcx, qword [0x04007a77] 	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x4007a77	          0x4885c9	                           test rcx, rcx	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x4007a7a	     0xf8400020000	                            je 0x4007c80	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x4007a80	          0x4889cf	                            mov rdi, rcx	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4007a83	            0x31d2	                            xor edx, edx	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4007a85	          0x4c89e6	                            mov rsi, r12	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4007a88	            0x31c0	                            xor eax, eax	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4007a8a	      0x48894c2408	                mov qword [rsp + 8], rcx	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4007a8f	      0xe800000000	                          call 0x4007a94	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4007a94	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x4007a99	    0x488905000000	            mov qword [0x04007aa0], rax 	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x4007aa0	          0x4889cf	                            mov rdi, rcx	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x4007aa3	      0xe800000000	                          call 0x4007aa8	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x4007aa8	    0x44893d000000	           mov dword [0x04007aaf], r15d 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007aaf	    0x448935000000	           mov dword [0x04007ab6], r14d 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007ab6	    0x892d00000000	            mov dword [0x04007abc], ebp 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007abc	    0x891d00000000	            mov dword [0x04007ac2], ebx 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007ac2	    0x44893d000000	           mov dword [0x04007ac9], r15d 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007ac9	    0x448935000000	           mov dword [0x04007ad0], r14d 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007ad0	    0x892d00000000	            mov dword [0x04007ad6], ebp 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007ad6	    0x891d00000000	            mov dword [0x04007adc], ebx 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4007adc	        0x410fbefd	                         movsx edi, r13b	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x4007ae0	      0xe800000000	                          call 0x4007ae5	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x4007ae5	      0xe800000000	                          call 0x4007aea	      2672	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_23
0x4007aea	      0xe937feffff	                           jmp 0x4007926	      2673	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9
0x4007aef	              0x90	                                     nop	      2673	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9
0x4007af0	        0x41803e2e	                    cmp byte [r14], 0x2e	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007af4	     0xf850f010000	                           jne 0x4007c09	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007afa	        0x4d8d6601	                      lea r12, [r14 + 1]	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007afe	      0xbd00000000	                              mov ebp, 0	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007b03	      0xbe00000000	                              mov esi, 0	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007b08	            0x31db	                            xor ebx, ebx	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007b0a	            0xeb18	                           jmp 0x4007b24	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007b0c	         0xf1f4000	                         nop dword [rax]	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4007b10	          0x83c301	                              add ebx, 1	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4007b13	          0x83fb21	                           cmp ebx, 0x21	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4007b16	     0xf84ed000000	                            je 0x4007c09	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4007b1c	        0x488b7500	                    mov rsi, qword [rbp]	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4007b20	        0x4883c520	                           add rbp, 0x20	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4007b24	          0x4c89e7	                            mov rdi, r12	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b27	      0xe800000000	                          call 0x4007b2c	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b2c	            0x85c0	                           test eax, eax	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b2e	            0x75e0	                           jne 0x4007b10	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b30	            0x89d8	                            mov eax, ebx	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b32	    0x8b0d00000000	            mov ecx, dword [0x04007b38] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b38	    0x8b1500000000	            mov edx, dword [0x04007b3e] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b3e	        0x48c1e005	                              shl rax, 5	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b42	    0x8b3d00000000	            mov edi, dword [0x04007b48] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b48	    0x8b3500000000	            mov esi, dword [0x04007b4e] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x4007b4e	    0x8ba800000000	                    mov ebp, dword [rax]	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b54	    0x8b9800000000	                    mov ebx, dword [rax]	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b5a	    0x448ba0000000	                   mov r12d, dword [rax]	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b61	    0x448bb8000000	                   mov r15d, dword [rax]	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b68	            0xf7d5	                                 not ebp	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b6a	            0xf7d3	                                 not ebx	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b6c	            0x21cd	                            and ebp, ecx	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b6e	          0x41f7d4	                                not r12d	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b71	          0x41f7d7	                                not r15d	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b74	            0x21d3	                            and ebx, edx	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b76	          0x4121f4	                           and r12d, esi	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b79	          0x4121ff	                           and r15d, edi	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x4007b7c	            0x39e9	                            cmp ecx, ebp	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b7e	           0xf95c1	                                setne cl	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b81	            0x39da	                            cmp edx, ebx	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b83	           0xf95c0	                                setne al	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b86	             0x8c1	                               or cl, al	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b88	            0x750e	                           jne 0x4007b98	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b8a	          0x4439e6	                           cmp esi, r12d	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b8d	            0x7509	                           jne 0x4007b98	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4007b8f	          0x4439ff	                           cmp edi, r15d	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x4007b92	     0xf8444ffffff	                            je 0x4007adc	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x4007b98	    0x488b0d000000	            mov rcx, qword [0x04007b9f] 	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x4007b9f	          0x4885c9	                           test rcx, rcx	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x4007ba2	     0xf840f010000	                            je 0x4007cb7	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x4007ba8	          0x4889cf	                            mov rdi, rcx	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4007bab	            0x31d2	                            xor edx, edx	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4007bad	          0x4c89f6	                            mov rsi, r14	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4007bb0	            0x31c0	                            xor eax, eax	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4007bb2	      0x48894c2408	                mov qword [rsp + 8], rcx	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4007bb7	      0xe800000000	                          call 0x4007bbc	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4007bbc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4007bc1	    0x488905000000	            mov qword [0x04007bc8], rax 	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4007bc8	          0x4889cf	                            mov rdi, rcx	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4007bcb	      0xe800000000	                          call 0x4007bd0	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4007bd0	    0x44893d000000	           mov dword [0x04007bd7], r15d 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007bd7	    0x448925000000	           mov dword [0x04007bde], r12d 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007bde	    0x892d00000000	            mov dword [0x04007be4], ebp 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007be4	    0x891d00000000	            mov dword [0x04007bea], ebx 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007bea	    0x44893d000000	           mov dword [0x04007bf1], r15d 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007bf1	    0x448925000000	           mov dword [0x04007bf8], r12d 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007bf8	    0x892d00000000	            mov dword [0x04007bfe], ebp 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007bfe	    0x891d00000000	            mov dword [0x04007c04], ebx 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007c04	      0xe9d3feffff	                           jmp 0x4007adc	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4007c09	      0xba05000000	                              mov edx, 5	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c0e	      0xbe00000000	                              mov esi, 0	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c13	            0x31ff	                            xor edi, edi	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c15	      0xe800000000	                          call 0x4007c1a	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c1a	          0x4c89f6	                            mov rsi, r14	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c1d	          0x4889c7	                            mov rdi, rax	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c20	            0x31c0	                            xor eax, eax	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c22	      0xe800000000	                          call 0x4007c27	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4007c27	    0x488b05000000	            mov rax, qword [0x04007c2e] 	      2682	tc-i386.c	FUNCTION_49	IF_1
0x4007c2e	          0x448828	                    mov byte [rax], r13b	      2682	tc-i386.c	FUNCTION_49	IF_1
0x4007c31	      0xe9d5fcffff	                           jmp 0x400790b	      2682	tc-i386.c	FUNCTION_49	IF_1
0x4007c36	          0x83c840	                            or eax, 0x40	      2603	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4007c39	          0x83e07f	                           and eax, 0x7f	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4007c3c	    0x880500000000	               mov byte [0x04007c42], al	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4007c42	      0xe94bfcffff	                           jmp 0x4007892	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4007c47	    0x488b05000000	            mov rax, qword [0x04007c4e] 	      2554	tc-i386.c	FUNCTION_48	IF_2
0x4007c4e	          0x4885c0	                           test rax, rax	      2555	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4007c51	    0x488905000000	            mov qword [0x04007c58], rax 	      2554	tc-i386.c	FUNCTION_48	IF_2
0x4007c58	     0xf85d6fbffff	                           jne 0x4007834	      2555	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4007c5e	    0x488b05000000	            mov rax, qword [0x04007c65] 	      2556	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4007c65	    0x488905000000	            mov qword [0x04007c6c], rax 	      2556	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4007c6c	      0xe9c3fbffff	                           jmp 0x4007834	      2556	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4007c71	    0xc70500000000	               mov dword [0x04007c7b], 1	      2698	tc-i386.c	FUNCTION_49	IF_13	IF_14
0x4007c7b	      0xe93bfdffff	                           jmp 0x40079bb	      2698	tc-i386.c	FUNCTION_49	IF_13	IF_14
0x4007c80	          0x4c89e7	                            mov rdi, r12	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4007c83	      0xe800000000	                          call 0x4007c88	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4007c88	    0x488905000000	            mov qword [0x04007c8f], rax 	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4007c8f	      0xe914feffff	                           jmp 0x4007aa8	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4007c94	            0x31ff	                            xor edi, edi	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007c96	      0xba05000000	                              mov edx, 5	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007c9b	      0xbe00000000	                              mov esi, 0	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007ca0	      0xe800000000	                          call 0x4007ca5	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007ca5	          0x4889ee	                            mov rsi, rbp	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007ca8	          0x4889c7	                            mov rdi, rax	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007cab	            0x31c0	                            xor eax, eax	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007cad	      0xe800000000	                          call 0x4007cb2	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007cb2	      0xe904fdffff	                           jmp 0x40079bb	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4007cb7	          0x4c89f7	                            mov rdi, r14	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4007cba	      0xe800000000	                          call 0x4007cbf	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4007cbf	    0x488905000000	            mov qword [0x04007cc6], rax 	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4007cc6	      0xe905ffffff	                           jmp 0x4007bd0	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4007ccb	      0xe800000000	            call sym.i386_intel_simplify	      2708	tc-i386.c	FUNCTION_49
md_begin	IF,11:DO,0:ELSE,5:WHILE,1:CALL,17:functions,0:SWITCH,0:FOR,3	153
0x400b7b0	            0x4154	                                push r12	      2780	tc-i386.c	FUNCTION_52
0x400b7b2	              0x55	                                push rbp	      2780	tc-i386.c	FUNCTION_52
0x400b7b3	              0x53	                                push rbx	      2780	tc-i386.c	FUNCTION_52
0x400b7b4	    0xc60500000000	                mov byte [0x0400b7bb], 2	      2784	tc-i386.c	FUNCTION_52
0x400b7bb	      0xbb00000000	                              mov ebx, 0	      2794	tc-i386.c	FUNCTION_52
0x400b7c0	      0xe800000000	                          call 0x400b7c5	      2787	tc-i386.c	FUNCTION_52	CALL_1
0x400b7c5	      0xbf10000000	                           mov edi, 0x10	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x400b7ca	    0x488905000000	            mov qword [0x0400b7d1], rax 	      2787	tc-i386.c	FUNCTION_52	CALL_1
0x400b7d1	      0xe800000000	                          call 0x400b7d6	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x400b7d6	          0x4989c4	                            mov r12, rax	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x400b7d9	    0x48c700000000	                      mov qword [rax], 0	      2796	tc-i386.c	FUNCTION_52
0x400b7e0	        0x4883c360	                           add rbx, 0x60	      2800	tc-i386.c	FUNCTION_52	WHILE_1
0x400b7e4	          0x488b3b	                    mov rdi, qword [rbx]	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b7e7	        0x488b6ba0	             mov rbp, qword [rbx - 0x60]	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b7eb	          0x4885ff	                           test rdi, rdi	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b7ee	            0x740c	                            je 0x400b7fc	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b7f0	          0x4889ee	                            mov rsi, rbp	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b7f3	      0xe800000000	                          call 0x400b7f8	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b7f8	            0x85c0	                           test eax, eax	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b7fa	            0x74e4	                            je 0x400b7e0	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b7fc	    0x488b3d000000	            mov rdi, qword [0x0400b803] 	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b803	          0x4889ee	                            mov rsi, rbp	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b806	      0x49895c2408	                mov qword [r12 + 8], rbx	      2806	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b80b	          0x4c89e2	                            mov rdx, r12	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b80e	      0xe800000000	                          call 0x400b813	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b813	          0x4885c0	                           test rax, rax	      2810	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x400b816	          0x4889c5	                            mov rbp, rax	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b819	     0xf8513020000	                           jne 0x400ba32	      2810	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x400b81f	        0x48833b00	                      cmp qword [rbx], 0	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x400b823	            0x742b	                            je 0x400b850	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x400b825	      0xbf10000000	                           mov edi, 0x10	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x400b82a	      0xe800000000	                          call 0x400b82f	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x400b82f	          0x488918	                    mov qword [rax], rbx	      2819	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b832	        0x4883c360	                           add rbx, 0x60	      2800	tc-i386.c	FUNCTION_52	WHILE_1
0x400b836	          0x488b3b	                    mov rdi, qword [rbx]	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b839	          0x4989c4	                            mov r12, rax	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x400b83c	        0x488b6ba0	             mov rbp, qword [rbx - 0x60]	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x400b840	          0x4885ff	                           test rdi, rdi	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b843	            0x75ab	                           jne 0x400b7f0	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b845	            0xebb5	                           jmp 0x400b7fc	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b847	    0x660f1f840000	                    nop word [rax + rax]	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b850	      0xe800000000	                          call 0x400b855	      2825	tc-i386.c	FUNCTION_52	CALL_8
0x400b855	    0x8b1500000000	            mov edx, dword [0x0400b85b] 	      2828	tc-i386.c	FUNCTION_52
0x400b85b	          0x4889c7	                            mov rdi, rax	      2825	tc-i386.c	FUNCTION_52	CALL_8
0x400b85e	    0x488905000000	            mov qword [0x0400b865], rax 	      2825	tc-i386.c	FUNCTION_52	CALL_8
0x400b865	            0x85d2	                           test edx, edx	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b867	          0x8d42ff	                      lea eax, [rdx - 1]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b86a	            0x743b	                            je 0x400b8a7	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b86c	      0x488d444003	              lea rax, [rax + rax*2 + 3]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b871	      0xbb00000000	                              mov ebx, 0	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b876	    0x4c8d24c50000	                        lea r12, [rax*8]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b87e	            0xeb07	                           jmp 0x400b887	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b880	    0x488b3d000000	            mov rdi, qword [0x0400b887] 	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b887	          0x488b33	                    mov rsi, qword [rbx]	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b88a	          0x4889da	                            mov rdx, rbx	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b88d	      0xe800000000	                          call 0x400b892	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b892	          0x4885c0	                           test rax, rax	      2833	tc-i386.c	FUNCTION_52	FOR_1	IF_4
0x400b895	          0x4889c5	                            mov rbp, rax	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b898	     0xf8570010000	                           jne 0x400ba0e	      2833	tc-i386.c	FUNCTION_52	FOR_1	IF_4
0x400b89e	        0x4883c318	                           add rbx, 0x18	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b8a2	          0x4c39e3	                            cmp rbx, r12	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b8a5	            0x75d9	                           jne 0x400b880	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b8a7	            0x31c0	                            xor eax, eax	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b8a9	            0x31d2	                            xor edx, edx	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b8ab	            0xeb38	                           jmp 0x400b8e5	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b8ad	           0xf1f00	                         nop dword [rax]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b8b0	    0x889000000000	                      mov byte [rax], dl	      2849	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b8b6	    0x889000000000	                      mov byte [rax], dl	      2850	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b8bc	    0x889000000000	                      mov byte [rax], dl	      2851	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b8c2	    0x889000000000	                      mov byte [rax], dl	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b8c8	    0x81e18c000000	                           and ecx, 0x8c	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x400b8ce	            0x7445	                            je 0x400b915	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x400b8d0	    0x889000000000	                      mov byte [rax], dl	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x400b8d6	        0x4883c001	                              add rax, 1	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x400b8da	          0x83c201	                              add edx, 1	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b8dd	    0x483d00010000	                          cmp rax, 0x100	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b8e3	            0x7450	                            je 0x400b935	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b8e5	     0xfb78c000000	             movzx ecx, word [rax + rax]	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b8ed	          0xf6c104	                              test cl, 4	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b8f0	            0x75be	                           jne 0x400b8b0	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b8f2	          0xf6c108	                              test cl, 8	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x400b8f5	     0xf84b5000000	                            je 0x400b9b0	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x400b8fb	    0x81e18c000000	                           and ecx, 0x8c	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x400b901	    0x889000000000	                      mov byte [rax], dl	      2856	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x400b907	    0x889000000000	                      mov byte [rax], dl	      2857	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x400b90d	    0x889000000000	                      mov byte [rax], dl	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x400b913	            0x75bb	                           jne 0x400b8d0	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x400b915	          0x83fa7f	                           cmp edx, 0x7f	      2874	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b918	            0x7ebc	                           jle 0x400b8d6	      2874	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b91a	    0x889000000000	                      mov byte [rax], dl	      2876	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b920	    0x889000000000	                      mov byte [rax], dl	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b926	        0x4883c001	                              add rax, 1	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b92a	          0x83c201	                              add edx, 1	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b92d	    0x483d00010000	                          cmp rax, 0x100	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b933	            0x75b0	                           jne 0x400b8e5	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b935	     0xfb605000000	           movzx eax, byte [0x0400b93c] 	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b93c	    0xc60500000000	            mov byte [0x0400b943], 0x2d 	      2888	tc-i386.c	FUNCTION_52
0x400b943	      0xba00000000	                              mov edx, 0	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b948	    0xc60500000000	            mov byte [0x0400b94f], 0x5f 	      2889	tc-i386.c	FUNCTION_52
0x400b94f	    0xc60500000000	            mov byte [0x0400b956], 0x2d 	      2890	tc-i386.c	FUNCTION_52
0x400b956	    0xc60500000000	            mov byte [0x0400b95d], 0x2e 	      2891	tc-i386.c	FUNCTION_52
0x400b95d	    0xc60500000000	            mov byte [0x0400b964], 0x5f 	      2892	tc-i386.c	FUNCTION_52
0x400b964	    0xc60500000000	            mov byte [0x0400b96b], 0x2e 	      2893	tc-i386.c	FUNCTION_52
0x400b96b	            0x84c0	                             test al, al	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b96d	            0x7415	                            je 0x400b984	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b96f	              0x90	                                     nop	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b970	           0xfb6c8	                           movzx ecx, al	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x400b973	        0x4883c201	                              add rdx, 1	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b977	    0x888100000000	                      mov byte [rcx], al	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x400b97d	           0xfb602	                   movzx eax, byte [rdx]	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b980	            0x84c0	                             test al, al	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b982	            0x75ec	                           jne 0x400b970	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b984	    0x833d00000000	               cmp dword [0x0400b98b], 2	      2899	tc-i386.c	FUNCTION_52	IF_11
0x400b98b	            0x7468	                            je 0x400b9f5	      2899	tc-i386.c	FUNCTION_52	IF_11
0x400b98d	              0x5b	                                 pop rbx	      2914	tc-i386.c	FUNCTION_52
0x400b98e	    0xc70500000000	               mov dword [0x0400b998], 8	      2911	tc-i386.c	FUNCTION_52	ELSE_5
0x400b998	    0xc70500000000	     mov dword [0x0400b9a2], 0xfffffffc 	      2912	tc-i386.c	FUNCTION_52	ELSE_5
0x400b9a2	              0x5d	                                 pop rbp	      2914	tc-i386.c	FUNCTION_52
0x400b9a3	            0x415c	                                 pop r12	      2914	tc-i386.c	FUNCTION_52
0x400b9a5	              0xc3	                                     ret	      2914	tc-i386.c	FUNCTION_52
0x400b9a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2914	tc-i386.c	FUNCTION_52
0x400b9b0	          0xf6c180	                           test cl, 0x80	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x400b9b3	            0x7423	                            je 0x400b9d8	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x400b9b5	     0xfb6b0000000	                   movzx esi, byte [rax]	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x400b9bc	    0x889000000000	                      mov byte [rax], dl	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x400b9c2	    0x4088b0000000	                     mov byte [rax], sil	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x400b9c9	    0x4088b0000000	                     mov byte [rax], sil	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x400b9d0	      0xe9f3feffff	                           jmp 0x400b8c8	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x400b9d5	           0xf1f00	                         nop dword [rax]	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x400b9d8	          0x8d7285	                   lea esi, [rdx - 0x7b]	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b9db	          0x83e6fd	                     and esi, 0xfffffffd	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b9de	     0xf85e4feffff	                           jne 0x400b8c8	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b9e4	    0x889000000000	                      mov byte [rax], dl	      2868	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b9ea	    0x889000000000	                      mov byte [rax], dl	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b9f0	      0xe9d3feffff	                           jmp 0x400b8c8	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b9f5	              0x5b	                                 pop rbx	      2914	tc-i386.c	FUNCTION_52
0x400b9f6	    0xc70500000000	           mov dword [0x0400ba00], 0x10 	      2905	tc-i386.c	FUNCTION_52	IF_11
0x400ba00	    0xc70500000000	     mov dword [0x0400ba0a], 0xfffffff8 	      2907	tc-i386.c	FUNCTION_52	IF_11
0x400ba0a	              0x5d	                                 pop rbp	      2914	tc-i386.c	FUNCTION_52
0x400ba0b	            0x415c	                                 pop r12	      2914	tc-i386.c	FUNCTION_52
0x400ba0d	              0xc3	                                     ret	      2914	tc-i386.c	FUNCTION_52
0x400ba0e	          0x488b1b	                    mov rbx, qword [rbx]	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba11	      0xba05000000	                              mov edx, 5	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba16	      0xbe00000000	                              mov esi, 0	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba1b	            0x31ff	                            xor edi, edi	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba1d	      0xe800000000	                          call 0x400ba22	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba22	          0x4889ea	                            mov rdx, rbp	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba25	          0x4889c7	                            mov rdi, rax	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba28	          0x4889de	                            mov rsi, rbx	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba2b	            0x31c0	                            xor eax, eax	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba2d	      0xe800000000	                          call 0x400ba32	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400ba32	        0x488b5ba0	             mov rbx, qword [rbx - 0x60]	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400ba36	            0xebd9	                           jmp 0x400ba11	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
i386_arch	IF,6:DO,0:ELSE,3:WHILE,0:CALL,6:functions,0:SWITCH,0:FOR,0	42
0x400b620	        0x4883ec08	                              sub rsp, 8	      2712	tc-i386.c	FUNCTION_50
0x400b624	    0x8b1500000000	            mov edx, dword [0x0400b62a] 	      2713	tc-i386.c	FUNCTION_50	IF_1
0x400b62a	          0x83fa0a	                            cmp edx, 0xa	      2713	tc-i386.c	FUNCTION_50	IF_1
0x400b62d	            0x7419	                            je 0x400b648	      2713	tc-i386.c	FUNCTION_50	IF_1
0x400b62f	          0x83fa0b	                            cmp edx, 0xb	      2720	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x400b632	            0x742c	                            je 0x400b660	      2720	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x400b634	          0x83fa0c	                            cmp edx, 0xc	      2727	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400b637	      0xb808000000	                              mov eax, 8	      2735	tc-i386.c	FUNCTION_50	ELSE_3
0x400b63c	            0x743a	                            je 0x400b678	      2727	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400b63e	        0x4883c408	                              add rsp, 8	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b642	              0xc3	                                     ret	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b643	       0xf1f440000	                   nop dword [rax + rax]	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b648	    0x833d00000000	               cmp dword [0x0400b64f], 2	      2715	tc-i386.c	FUNCTION_50	IF_1	IF_2
0x400b64f	            0x7555	                           jne 0x400b6a6	      2715	tc-i386.c	FUNCTION_50	IF_1	IF_2
0x400b651	      0xb809000000	                              mov eax, 9	      2718	tc-i386.c	FUNCTION_50	IF_1
0x400b656	        0x4883c408	                              add rsp, 8	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b65a	              0xc3	                                     ret	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b65b	       0xf1f440000	                   nop dword [rax + rax]	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b660	    0x833d00000000	               cmp dword [0x0400b667], 2	      2722	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x400b667	            0x7549	                           jne 0x400b6b2	      2722	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x400b669	      0xb80a000000	                            mov eax, 0xa	      2725	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x400b66e	        0x4883c408	                              add rsp, 8	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b672	              0xc3	                                     ret	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b673	       0xf1f440000	                   nop dword [rax + rax]	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b678	    0x833d00000000	               cmp dword [0x0400b67f], 2	      2729	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	IF_6
0x400b67f	            0x740a	                            je 0x400b68b	      2729	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	IF_6
0x400b681	      0xb80b000000	                            mov eax, 0xb	      2732	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400b686	        0x4883c408	                              add rsp, 8	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b68a	              0xc3	                                     ret	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b68b	      0xba05000000	                              mov edx, 5	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b690	      0xbe00000000	                              mov esi, 0	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b695	            0x31ff	                            xor edi, edi	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b697	      0xe800000000	                          call 0x400b69c	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b69c	          0x4889c7	                            mov rdi, rax	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b69f	            0x31c0	                            xor eax, eax	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b6a1	      0xe800000000	                          call 0x400b6a6	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b6a6	      0xba05000000	                              mov edx, 5	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b6ab	      0xbe00000000	                              mov esi, 0	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b6b0	            0xebe3	                           jmp 0x400b695	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b6b2	      0xba05000000	                              mov edx, 5	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b6b7	      0xbe00000000	                              mov esi, 0	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b6bc	            0xebd7	                           jmp 0x400b695	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
x86_64_section_letter	IF,2:DO,0:ELSE,1:WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,0	24
0x4011240	    0x833d00000000	               cmp dword [0x04011247], 2	     11611	tc-i386.c	FUNCTION_142	IF_1
0x4011247	              0x53	                                push rbx	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x4011248	          0x4889f3	                            mov rbx, rsi	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x401124b	            0x7423	                            je 0x4011270	     11611	tc-i386.c	FUNCTION_142	IF_1
0x401124d	      0xba05000000	                              mov edx, 5	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4011252	      0xbe00000000	                              mov esi, 0	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4011257	            0x31ff	                            xor edi, edi	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4011259	      0xe800000000	                          call 0x401125e	     11619	tc-i386.c	FUNCTION_143	IF_1
0x401125e	          0x488903	                    mov qword [rbx], rax	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4011261	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11620	tc-i386.c	FUNCTION_143	IF_1
0x4011268	              0x5b	                                 pop rbx	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
0x4011269	              0xc3	                                     ret	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
0x401126a	    0x660f1f440000	                    nop word [rax + rax]	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
0x4011270	          0x83ff6c	                           cmp edi, 0x6c	     11613	tc-i386.c	FUNCTION_142
0x4011273	      0xb800000010	                     mov eax, 0x10000000	     11614	tc-i386.c	FUNCTION_142
0x4011278	            0x74ee	                            je 0x4011268	     11613	tc-i386.c	FUNCTION_142
0x401127a	      0xba05000000	                              mov edx, 5	     11616	tc-i386.c	
0x401127f	      0xbe00000000	                              mov esi, 0	     11616	tc-i386.c	
0x4011284	            0x31ff	                            xor edi, edi	     11616	tc-i386.c	
0x4011286	      0xe800000000	                          call 0x401128b	     11616	tc-i386.c	
0x401128b	          0x488903	                    mov qword [rbx], rax	     11616	tc-i386.c	
0x401128e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11620	tc-i386.c	FUNCTION_143	IF_1
0x4011295	              0x5b	                                 pop rbx	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
0x4011296	              0xc3	                                     ret	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
build_modrm_byte	IF,92:DO,0:ELSE,41:WHILE,0:CALL,48:functions,0:SWITCH,2:FOR,2	1069
0x4001ba0	              0x55	                                push rbp	      6649	tc-i386.c	FUNCTION_87
0x4001ba1	              0x53	                                push rbx	      6649	tc-i386.c	FUNCTION_87
0x4001ba2	          0x4531c9	                            xor r9d, r9d	      6649	tc-i386.c	FUNCTION_87
0x4001ba5	            0x31d2	                            xor edx, edx	      6649	tc-i386.c	FUNCTION_87
0x4001ba7	        0x4883ec18	                           sub rsp, 0x18	      6649	tc-i386.c	FUNCTION_87
0x4001bab	    0x440fb6050000	           movzx r8d, byte [0x04001bb3] 	      6654	tc-i386.c	FUNCTION_87
0x4001bb3	    0x64488b042528	                mov rax, qword fs:[0x28]	      6649	tc-i386.c	FUNCTION_87
0x4001bbc	      0x4889442408	                mov qword [rsp + 8], rax	      6649	tc-i386.c	FUNCTION_87
0x4001bc1	            0x31c0	                            xor eax, eax	      6649	tc-i386.c	FUNCTION_87
0x4001bc3	        0x4183e00c	                            and r8d, 0xc	      6654	tc-i386.c	FUNCTION_87
0x4001bc7	        0x4180f808	                              cmp r8b, 8	      6655	tc-i386.c	FUNCTION_87	IF_1
0x4001bcb	     0xf84cf040000	                            je 0x40020a0	      6655	tc-i386.c	FUNCTION_87	IF_1
0x4001bd1	    0x8b1d00000000	            mov ebx, dword [0x04001bd7] 	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001bd7	            0x85db	                           test ebx, ebx	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001bd9	            0x745d	                            je 0x4001c38	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001bdb	    0x8b3500000000	            mov esi, dword [0x04001be1] 	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x4001be1	            0x85f6	                           test esi, esi	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x4001be3	            0x7439	                            je 0x4001c1e	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x4001be5	    0x488b05000000	            mov rax, qword [0x04001bec] 	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x4001bec	            0x31d2	                            xor edx, edx	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001bee	      0xb900000000	                              mov ecx, 0	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001bf3	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4001bf7	            0xa85f	                           test al, 0x5f	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001bf9	            0x741c	                            je 0x4001c17	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001bfb	      0xe9f5010000	                           jmp 0x4001df5	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001c00	    0x488b81800000	            mov rax, qword [rcx + 0x80] 	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001c07	        0x4883c108	                              add rcx, 8	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001c0b	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4001c0f	            0xa85f	                           test al, 0x5f	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001c11	     0xf85e9010000	                           jne 0x4001e00	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001c17	          0x83c201	                              add edx, 1	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x4001c1a	            0x39d6	                            cmp esi, edx	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x4001c1c	            0x75e2	                           jne 0x4001c00	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x4001c1e	      0xba00000000	                              mov edx, 0	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4001c23	      0xbe051b0000	                         mov esi, 0x1b05	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4001c28	      0xbf00000000	                              mov edi, 0	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4001c2d	      0xe800000000	                          call 0x4001c32	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4001c32	    0x660f1f440000	                    nop word [rax + rax]	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4001c38	    0x8b0500000000	            mov eax, dword [0x04001c3e] 	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c3e	          0x83f802	                              cmp eax, 2	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c41	     0xf8419060000	                            je 0x4002260	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c47	          0x83f803	                              cmp eax, 3	      6746	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c4a	     0xf8468080000	                            je 0x40024b8	      6746	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c50	          0x83f804	                              cmp eax, 4	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c53	     0xf851d060000	                           jne 0x4002276	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c59	        0x4180f808	                              cmp r8b, 8	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c5d	     0xf8513060000	                           jne 0x4002276	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c63	       0xf1f440000	                   nop dword [rax + rax]	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001c68	    0x8b0500000000	            mov eax, dword [0x04001c6e] 	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c6e	          0x83f803	                              cmp eax, 3	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c71	     0xf84d60d0000	                            je 0x4002a4d	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c77	     0xf86710d0000	                           jbe 0x40029ee	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c7d	          0x83f804	                              cmp eax, 4	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c80	     0xf84f70a0000	                            je 0x400277d	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c86	          0x83f805	                              cmp eax, 5	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c89	     0xf856a0d0000	                           jne 0x40029f9	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4001c8f	     0xfb60d000000	           movzx ecx, byte [0x04001c96] 	      3473	tc-i386.c	FUNCTION_63
0x4001c96	            0x84c9	                             test cl, cl	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x4001c98	            0x7446	                            je 0x4001ce0	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x4001c9a	    0x833d00000000	               cmp dword [0x04001ca1], 2	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4001ca1	     0xf856a110000	                           jne 0x4002e11	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4001ca7	            0x84c9	                             test cl, cl	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4001ca9	     0xf8962110000	                           jns 0x4002e11	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4001caf	    0xf60500000000	           test byte [0x04001cb6], 0xfc 	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4001cb6	     0xf8455110000	                            je 0x4002e11	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4001cbc	    0xf60500000000	           test byte [0x04001cc3], 0xfc 	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x4001cc3	     0xf8501100000	                           jne 0x4002cca	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x4001cc9	    0xf60500000000	           test byte [0x04001cd0], 0xfc 	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x4001cd0	     0xf844f110000	                            je 0x4002e25	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x4001cd6	      0xba01000000	                              mov edx, 1	      6766	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x4001cdb	       0xf1f440000	                   nop dword [rax + rax]	      6766	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x4001ce0	        0x4180f808	                              cmp r8b, 8	      6819	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x4001ce4	            0x742e	                            je 0x4001d14	      6819	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x4001ce6	    0x488b0d000000	            mov rcx, qword [0x04001ced] 	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4001ced	        0x448d4a01	                      lea r9d, [rdx + 1]	      6821	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x4001cf1	          0x4885c9	                           test rcx, rcx	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4001cf4	            0x740b	                            je 0x4001d01	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4001cf6	        0x44394904	                cmp dword [rcx + 4], r9d	      6827	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4001cfa	          0x8d7202	                      lea esi, [rdx + 2]	      6827	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4001cfd	        0x4c0f44ce	                           cmove r9, rsi	      6827	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4001d01	     0xfb60d000000	           movzx ecx, byte [0x04001d08] 	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4001d08	          0x83e118	                           and ecx, 0x18	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4001d0b	          0x80f908	                               cmp cl, 8	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4001d0e	     0xf84b40d0000	                            je 0x4002ac8	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4001d14	        0x498d4106	                       lea rax, [r9 + 6]	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d18	    0xc70500000000	               mov dword [0x04001d22], 3	      6863	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4001d22	    0xf604c5000000	                    test byte [rax*8], 8	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d2a	     0xf85d00a0000	                           jne 0x4002800	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d30	    0x488b04c50000	                  mov rax, qword [rax*8]	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d38	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4001d3c	            0xa85f	                           test al, 0x5f	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x4001d3e	     0xf85bc0a0000	                           jne 0x4002800	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x4001d44	    0x4a8b0ccd0000	                   mov rcx, qword [r9*8]	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d4c	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d50	    0x890500000000	            mov dword [0x04001d56], eax 	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d56	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d5e	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d62	    0x891500000000	            mov dword [0x04001d68], edx 	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4001d68	         0xfb65110	           movzx edx, byte [rcx + 0x10] 	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x4001d6c	          0xf6c201	                              test dl, 1	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x4001d6f	            0x7407	                            je 0x4001d78	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x4001d71	    0x830d00000000	                or dword [0x04001d78], 4	      6876	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x4001d78	          0x83e204	                              and edx, 4	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x4001d7b	            0x7407	                            je 0x4001d84	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x4001d7d	    0x830d00000000	                or dword [0x04001d84], 4	      6878	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x4001d84	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x4001d88	            0xa801	                              test al, 1	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x4001d8a	            0x7407	                            je 0x4001d93	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x4001d8c	    0x830d00000000	                or dword [0x04001d93], 1	      6880	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x4001d93	            0xa804	                              test al, 4	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x4001d95	            0x7409	                            je 0x4001da0	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x4001d97	    0x830d00000000	                or dword [0x04001d9e], 1	      6882	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x4001d9e	            0x6690	                                     nop	      6882	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x4001da0	    0x833d00000000	               cmp dword [0x04001da7], 2	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4001da7	     0xf84e80d0000	                            je 0x4002b95	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4001dad	    0x8b1500000000	            mov edx, dword [0x04001db3] 	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4001db3	          0xf6c204	                              test dl, 4	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4001db6	     0xf84d90d0000	                            je 0x4002b95	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4001dbc	     0xfb605000000	           movzx eax, byte [0x04001dc3] 	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4001dc3	          0xc0e803	                               shr al, 3	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4001dc6	          0x83e001	                              and eax, 1	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4001dc9	        0x4883c00e	                            add rax, 0xe	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4001dcd	    0xf604c5000000	                 test byte [rax*8], 0x10	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4001dd5	     0xf849a100000	                            je 0x4002e75	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4001ddb	          0x83e2fb	                     and edx, 0xfffffffb	      6901	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4001dde	      0xbff0000000	                           mov edi, 0xf0	      6902	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_24
0x4001de3	    0x891500000000	            mov dword [0x04001de9], edx 	      6901	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4001de9	      0xe8f2edffff	                     call sym.add_prefix	      6902	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_24
0x4001dee	            0x31c0	                            xor eax, eax	      6650	tc-i386.c	FUNCTION_87
0x4001df0	      0xe909060000	                           jmp 0x40023fe	      6650	tc-i386.c	FUNCTION_87
0x4001df5	            0x31d2	                            xor edx, edx	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001df7	    0x660f1f840000	                    nop word [rax + rax]	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x4001e00	     0xfb60d000000	           movzx ecx, byte [0x04001e07] 	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e07	    0x488b3d000000	            mov rdi, qword [0x04001e0e] 	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e0e	          0x4189ca	                           mov r10d, ecx	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e11	        0x4183e230	                          and r10d, 0x30	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e15	            0x7453	                            je 0x4001e6a	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e17	    0x488b05000000	            mov rax, qword [0x04001e1e] 	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x4001e1e	         0xfb65811	           movzx ebx, byte [rax + 0x11] 	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x4001e22	          0x8d7304	                      lea esi, [rbx + 4]	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x4001e25	        0x4080fe01	                              cmp sil, 1	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x4001e29	     0xf86a60f0000	                           jbe 0x4002dd5	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x4001e2f	    0x488b3d000000	            mov rdi, qword [0x04001e36] 	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4001e36	    0xc70500000000	               mov dword [0x04001e40], 4	      6925	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e40	          0x4885ff	                           test rdi, rdi	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4001e43	     0xf84a8080000	                            je 0x40026f1	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4001e49	         0xfb67011	           movzx esi, byte [rax + 0x11] 	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e4d	    0x893500000000	            mov dword [0x04001e53], esi 	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4001e53	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x4001e57	            0xa801	                              test al, 1	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x4001e59	            0x7407	                            je 0x4001e62	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x4001e5b	    0x830d00000000	                or dword [0x04001e62], 2	      6947	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x4001e62	            0xa804	                              test al, 4	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x4001e64	     0xf85fe050000	                           jne 0x4002468	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x4001e6a	          0x4885ff	                           test rdi, rdi	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x4001e6d	     0xf846d070000	                            je 0x40025e0	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x4001e73	         0xfb64711	           movzx eax, byte [rdi + 0x11] 	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4001e77	          0x8d7002	                      lea esi, [rax + 2]	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4001e7a	        0x4080fe01	                              cmp sil, 1	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4001e7e	     0xf869c060000	                           jbe 0x4002520	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4001e84	        0xf6470b40	            test byte [rdi + 0xb], 0x40 	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x4001e88	     0xf8592050000	                           jne 0x4002420	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x4001e8e	    0x833d00000000	               cmp dword [0x04001e95], 2	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4001e95	     0xf84d40a0000	                            je 0x400296f	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4001e9b	          0x4584d2	                         test r10b, r10b	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x4001e9e	            0x750a	                           jne 0x4001eaa	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x4001ea0	         0xfb64711	           movzx eax, byte [rdi + 0x11] 	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x4001ea4	    0x890500000000	            mov dword [0x04001eaa], eax 	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x4001eaa	        0xf6471001	               test byte [rdi + 0x10], 1	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x4001eae	     0xf8404070000	                            je 0x40025b8	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x4001eb4	    0x830d00000000	                or dword [0x04001ebb], 1	      7087	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x4001ebb	         0xfb64711	           movzx eax, byte [rdi + 0x11] 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x4001ebf	            0x89c1	                            mov ecx, eax	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x4001ec1	    0x890500000000	            mov dword [0x04001ec7], eax 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x4001ec7	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4001ecc	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4001ece	          0x80f905	                               cmp cl, 5	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x4001ed1	     0xf84f8070000	                            je 0x40026cf	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x4001ed7	    0x8b0d00000000	            mov ecx, dword [0x04001edd] 	      7100	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x4001edd	    0x890d00000000	            mov dword [0x04001ee3], ecx 	      7100	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x4001ee3	    0x488b0d000000	            mov rcx, qword [0x04001eea] 	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4001eea	          0x4885c9	                           test rcx, rcx	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4001eed	     0xf84a50b0000	                            je 0x4002a98	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4001ef3	          0x4584d2	                         test r10b, r10b	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x4001ef6	            0x752f	                           jne 0x4001f27	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x4001ef8	         0xfb67111	           movzx esi, byte [rcx + 0x11] 	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4001efc	        0x448d5604	                     lea r10d, [rsi + 4]	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4001f00	        0x4180fa01	                             cmp r10b, 1	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4001f04	     0xf86dd080000	                           jbe 0x40027e7	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4001f0a	    0x893500000000	            mov dword [0x04001f10], esi 	      7117	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	ELSE_26
0x4001f10	    0xc70500000000	               mov dword [0x04001f1a], 4	      7118	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x4001f1a	        0xf6411001	               test byte [rcx + 0x10], 1	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x4001f1e	            0x7407	                            je 0x4001f27	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x4001f20	    0x830d00000000	                or dword [0x04001f27], 2	      7120	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x4001f27	    0x8b0d00000000	            mov ecx, dword [0x04001f2d] 	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f2d	            0x85c9	                           test ecx, ecx	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f2f	     0xf846b060000	                            je 0x40025a0	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f35	            0x89d6	                            mov esi, edx	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f37	    0x8b0cb5000000	                  mov ecx, dword [rsi*4]	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f3e	    0x81f979010000	                          cmp ecx, 0x179	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f44	     0xf848e080000	                            je 0x40027d8	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f4a	    0x81f995010000	                          cmp ecx, 0x195	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f50	     0xf8482080000	                            je 0x40027d8	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f60	    0x488b0cf50000	                  mov rcx, qword [rsi*8]	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x4001f68	      0xbe01000000	                              mov esi, 1	      2138	tc-i386.c	FUNCTION_29	IF_1
0x4001f6d	        0x48c1e910	                           shr rcx, 0x10	      2137	tc-i386.c	FUNCTION_29	IF_1
0x4001f71	          0xf6c101	                              test cl, 1	      2137	tc-i386.c	FUNCTION_29	IF_1
0x4001f74	            0x750d	                           jne 0x4001f83	      2137	tc-i386.c	FUNCTION_29	IF_1
0x4001f76	          0x83e10e	                            and ecx, 0xe	      2139	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001f79	          0x80f901	                               cmp cl, 1	      2142	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001f7c	            0x19f6	                            sbb esi, esi	      2142	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001f7e	            0xf7d6	                                 not esi	      2142	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001f80	          0x83e602	                              and esi, 2	      2142	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4001f83	    0x893500000000	            mov dword [0x04001f89], esi 	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x4001f89	            0x85ff	                           test edi, edi	      7143	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001f8b	            0x745f	                            je 0x4001fec	      7143	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001f8d	            0x89d6	                            mov esi, edx	      7143	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001f8f	        0x4883c614	                           add rsi, 0x14	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4001f93	    0x48833cf50000	                    cmp qword [rsi*8], 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4001f9c	     0xf85bf0e0000	                           jne 0x4002e61	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4001fa2	    0x8b0d00000000	            mov ecx, dword [0x04001fa8] 	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fa8	          0x8d7901	                      lea edi, [rcx + 1]	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fab	        0x48c1e105	                              shl rcx, 5	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001faf	    0xc68100000000	                       mov byte [rcx], 2	      7152	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fb6	    0x48c781000000	                      mov qword [rcx], 0	      7153	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fc1	    0x893d00000000	            mov dword [0x04001fc7], edi 	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fc7	    0x488db9000000	                          lea rdi, [rcx]	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fce	    0x48c781000000	                      mov qword [rcx], 0	      7154	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fd9	    0x48c781000000	                      mov qword [rcx], 0	      7155	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fe4	    0x48893cf50000	                  mov qword [rsi*8], rdi	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001fec	     0xfb60d000000	           movzx ecx, byte [0x04001ff3] 	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4001ff3	          0x83e10c	                            and ecx, 0xc	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4001ff6	          0x80f904	                               cmp cl, 4	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4001ff9	     0xf8591020000	                           jne 0x4002290	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4001fff	    0xf60500000000	           test byte [0x04002006], 0xfc 	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x4002006	     0xf84c4040000	                            je 0x40024d0	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x400200c	    0x48c705000000	               mov qword [0x04002017], 0	      7166	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66
0x4002017	    0x488b15000000	            mov rdx, qword [0x0400201e] 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400201e	         0xfb64a11	           movzx ecx, byte [rdx + 0x11] 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4002022	    0x890d00000000	            mov dword [0x04002028], ecx 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4002028	        0xf6421001	               test byte [rdx + 0x10], 1	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400202c	            0x7407	                            je 0x4002035	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x400202e	    0x830d00000000	                or dword [0x04002035], 4	      7181	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x4002035	    0x8b2d00000000	            mov ebp, dword [0x0400203b] 	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x400203b	            0x85ed	                           test ebp, ebp	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x400203d	            0x7549	                           jne 0x4002088	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x400203f	     0xfb615000000	           movzx edx, byte [0x04002046] 	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4002046	    0xc70500000000	               mov dword [0x04002050], 3	      7186	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x4002050	          0x83e260	                           and edx, 0x60	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4002053	          0x80fa20	                            cmp dl, 0x20	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4002056	     0xf8442040000	                            je 0x400249e	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x400205c	    0x488b15000000	            mov rdx, qword [0x04002063] 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x4002063	         0xfb65211	           movzx edx, byte [rdx + 0x11] 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x4002067	    0x891500000000	            mov dword [0x0400206d], edx 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x400206d	    0x488b15000000	            mov rdx, qword [0x04002074] 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x4002074	        0xf6421001	               test byte [rdx + 0x10], 1	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x4002078	            0x740e	                            je 0x4002088	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400207a	    0x830d00000000	                or dword [0x04002081], 1	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x4002081	     0xf1f80000000	                         nop dword [rax]	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x4002088	    0x8b1500000000	            mov edx, dword [0x0400208e] 	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x400208e	    0x81faffff0000	                         cmp edx, 0xffff	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x4002094	     0xf855e030000	                           jne 0x40023f8	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400209a	      0xe95f030000	                           jmp 0x40023fe	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x400209f	              0x90	                                     nop	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x40020a0	    0x8b0500000000	            mov eax, dword [0x040020a6] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020a6	    0x8b0d00000000	            mov ecx, dword [0x040020ac] 	      6660	tc-i386.c	FUNCTION_87	IF_1
0x40020ac	          0x83f804	                              cmp eax, 4	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020af	        0x448d49ff	                      lea r9d, [rcx - 1]	      6660	tc-i386.c	FUNCTION_87	IF_1
0x40020b3	          0x8d71fe	                      lea esi, [rcx - 2]	      6661	tc-i386.c	FUNCTION_87	IF_1
0x40020b6	            0x7416	                            je 0x40020ce	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020b8	          0x83f803	                              cmp eax, 3	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020bb	     0xf85000d0000	                           jne 0x4002dc1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020c1	    0x833d00000000	               cmp dword [0x040020c8], 1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020c8	     0xf85f30c0000	                           jne 0x4002dc1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020ce	     0xfb605000000	           movzx eax, byte [0x040020d5] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020d5	            0x89c2	                            mov edx, eax	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020d7	          0x83e218	                           and edx, 0x18	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020da	          0x80fa08	                               cmp dl, 8	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020dd	     0xf85de0c0000	                           jne 0x4002dc1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020e3	          0x83e060	                           and eax, 0x60	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020e6	     0xf84d50c0000	                            je 0x4002dc1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020ec	          0x4489ca	                            mov edx, r9d	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020ef	    0xf604d5000000	                    test byte [rdx*8], 4	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020f7	     0xf84c40c0000	                            je 0x4002dc1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x40020fd	            0x3c40	                            cmp al, 0x40	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x40020ff	     0xf846b040000	                            je 0x4002570	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4002105	    0x8b0500000000	            mov eax, dword [0x0400210b] 	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x400210b	          0x8d5001	                      lea edx, [rax + 1]	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x400210e	            0x89c7	                            mov edi, eax	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x4002110	            0x85ff	                           test edi, edi	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4002112	     0xf84b0000000	                            je 0x40021c8	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4002118	          0x83ff01	                              cmp edi, 1	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400211b	     0xf85a40d0000	                           jne 0x4002ec5	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4002121	    0xf60500000000	               test byte [0x04002128], 1	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4002128	     0xf84970d0000	                            je 0x4002ec5	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x400212e	    0xf60500000000	           test byte [0x04002135], 0x20 	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4002135	     0xf8445040000	                            je 0x4002580	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400213b	          0x83ea01	                              sub edx, 1	      6714	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x400213e	          0x83e801	                              sub eax, 1	      6715	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4002141	          0x4489cf	                            mov edi, r9d	      6713	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4002144	    0xf604c5000000	                    test byte [rax*8], 4	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x400214c	     0xf845f0d0000	                            je 0x4002eb1	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4002152	        0x4883c014	                           add rax, 0x14	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x4002156	    0x488b3cfd0000	                  mov rdi, qword [rdi*8]	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x400215e	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x4002166	      0x440fb65110	          movzx r10d, byte [rcx + 0x10] 	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400216b	         0xfb64911	           movzx ecx, byte [rcx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400216f	        0x448d5908	                     lea r11d, [rcx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4002173	        0x41f6c201	                            test r10b, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4002177	        0x410f45cb	                        cmovne ecx, r11d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400217b	        0x4183e204	                             and r10d, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400217f	        0x448d5910	                  lea r11d, [rcx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4002183	        0x410f45cb	                        cmovne ecx, r11d	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4002187	          0xc1e104	                              shl ecx, 4	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400218a	        0x48094f10	              or qword [rdi + 0x10], rcx	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x400218e	    0x488b04c50000	                  mov rax, qword [rax*8]	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4002196	        0xf6401004	               test byte [rax + 0x10], 4	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x400219a	     0xf85fd0c0000	                           jne 0x4002e9d	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x40021a0	    0xf604f5000000	                    test byte [rsi*8], 4	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x40021a8	     0xf84db0c0000	                            je 0x4002e89	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x40021ae	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6732	tc-i386.c	FUNCTION_87	IF_1
0x40021b6	    0x488905000000	            mov qword [0x040021bd], rax 	      6732	tc-i386.c	FUNCTION_87	IF_1
0x40021bd	      0xe90ffaffff	                           jmp 0x4001bd1	      6732	tc-i386.c	FUNCTION_87	IF_1
0x40021c2	    0x660f1f440000	                    nop word [rax + rax]	      6732	tc-i386.c	FUNCTION_87	IF_1
0x40021c8	            0x89cf	                            mov edi, ecx	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x40021ca	    0xc70500000000	               mov dword [0x040021d4], 1	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x40021d4	          0x83c101	                              add ecx, 1	      6696	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x40021d7	    0x48c704fd0000	                    mov qword [rdi*8], 0	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x40021e3	        0x4883c70e	                            add rdi, 0xe	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x40021e7	    0x48c704fd0000	                    mov qword [rdi*8], 0	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x40021f3	    0x800cfd000000	                      or byte [rdi*8], 4	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x40021fb	    0x890d00000000	            mov dword [0x04002201], ecx 	      6696	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4002201	    0xf604c5000000	                    test byte [rax*8], 4	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4002209	     0xf84ee0b0000	                            je 0x4002dfd	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x400220f	    0x488b04c50000	                  mov rax, qword [rax*8]	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4002217	    0xc60500000000	                mov byte [0x0400221e], 2	      6699	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x400221e	         0xfb64810	           movzx ecx, byte [rax + 0x10] 	      6699	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4002222	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4002226	          0x8d7808	                      lea edi, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4002229	          0xf6c101	                              test cl, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400222c	           0xf45c7	                         cmovne eax, edi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400222f	          0x83e104	                              and ecx, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4002232	     0xf8458030000	                            je 0x4002590	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4002238	          0x83c010	                           add eax, 0x10	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400223b	      0xba00000000	                              mov edx, 0	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4002240	      0xbe2d1a0000	                         mov esi, 0x1a2d	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4002245	          0xc1e004	                              shl eax, 4	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4002248	      0xbf00000000	                              mov edi, 0	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x400224d	    0x488905000000	            mov qword [0x04002254], rax 	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4002254	      0xe800000000	                          call 0x4002259	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4002259	     0xf1f80000000	                         nop dword [rax]	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4002260	     0xfb605000000	           movzx eax, byte [0x04002267] 	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4002267	          0xc0e803	                               shr al, 3	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400226a	          0x83e003	                              and eax, 3	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400226d	          0x83f801	                              cmp eax, 1	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4002270	     0xf8ef2f9ffff	                           jle 0x4001c68	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4002276	     0xfb60d000000	           movzx ecx, byte [0x0400227d] 	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x400227d	      0xbaffffffff	                     mov edx, 0xffffffff	      7161	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29
0x4002282	            0x31c0	                            xor eax, eax	      6650	tc-i386.c	FUNCTION_87
0x4002284	          0x83e10c	                            and ecx, 0xc	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4002287	          0x80f904	                               cmp cl, 4	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x400228a	     0xf846ffdffff	                            je 0x4001fff	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4002290	    0x440fb6150000	          movzx r10d, byte [0x04002298] 	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4002298	        0x4183e218	                          and r10d, 0x18	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400229c	        0x4180fa18	                          cmp r10b, 0x18	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x40022a0	     0xf84d2010000	                            je 0x4002478	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x40022a6	    0x448b1d000000	           mov r11d, dword [0x040022ad] 	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x40022ad	          0x4585db	                         test r11d, r11d	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x40022b0	     0xf84d2fdffff	                            je 0x4002088	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x40022b6	    0x8b1d00000000	            mov ebx, dword [0x040022bc] 	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x40022bc	            0x85db	                           test ebx, ebx	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x40022be	     0xf84830a0000	                            je 0x4002d47	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x40022c4	     0xfb60d000000	           movzx ecx, byte [0x040022cb] 	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022cb	          0xf6c101	                              test cl, 1	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022ce	     0xf85ed070000	                           jne 0x4002ac1	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022d4	          0xf6c102	                              test cl, 2	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022d7	     0xf85e4070000	                           jne 0x4002ac1	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022dd	          0xf6c104	                              test cl, 4	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022e0	     0xf85db070000	                           jne 0x4002ac1	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022e6	    0xf60500000000	               test byte [0x040022ed], 2	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022ed	     0xf85ce070000	                           jne 0x4002ac1	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022f3	            0x31f6	                            xor esi, esi	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022f5	          0x83e108	                              and ecx, 8	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022f8	            0x7576	                           jne 0x4002370	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022fa	            0x31c9	                            xor ecx, ecx	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022fc	            0xeb5d	                           jmp 0x400235b	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x40022fe	            0x6690	                                     nop	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002300	    0xf604cd000000	                    test byte [rcx*8], 1	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002308	            0x7566	                           jne 0x4002370	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400230a	        0x40f6c710	                          test dil, 0x10	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400230e	            0x7560	                           jne 0x4002370	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002310	        0x40f6c720	                          test dil, 0x20	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002314	            0x755a	                           jne 0x4002370	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002316	          0x83e740	                           and edi, 0x40	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002319	            0x7555	                           jne 0x4002370	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400231b	          0x83c601	                              add esi, 1	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x400231e	            0x39de	                            cmp esi, ebx	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4002320	     0xf848a070000	                            je 0x4002ab0	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4002326	            0x89f1	                            mov ecx, esi	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002328	        0x4c8d590e	                    lea r11, [rcx + 0xe]	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400232c	    0x420fb63cdd00	                 movzx edi, byte [r11*8]	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002335	        0x40f6c701	                             test dil, 1	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002339	            0x7535	                           jne 0x4002370	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400233b	        0x40f6c702	                             test dil, 2	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400233f	            0x752f	                           jne 0x4002370	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002341	          0x83e704	                              and edi, 4	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002344	            0x752a	                           jne 0x4002370	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002346	    0x42f604dd0000	                    test byte [r11*8], 2	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400234f	            0x751f	                           jne 0x4002370	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002351	    0xf604cd000000	                    test byte [rcx*8], 8	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002359	            0x7515	                           jne 0x4002370	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400235b	        0x4883c10e	                            add rcx, 0xe	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400235f	     0xfb63ccd0000	                 movzx edi, byte [rcx*8]	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002367	          0x4084ff	                           test dil, dil	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400236a	            0x7994	                           jns 0x4002300	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x400236c	         0xf1f4000	                         nop dword [rax]	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002370	        0x4180f808	                              cmp r8b, 8	      7230	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x4002374	     0xf8436030000	                            je 0x40026b0	      7230	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x400237a	        0x4180fa08	                             cmp r10b, 8	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x400237e	     0xf841c050000	                            je 0x40028a0	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x4002384	        0x4180fa10	                          cmp r10b, 0x10	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x4002388	     0xf843d060000	                            je 0x40029cb	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x400238e	            0x39f3	                            cmp ebx, esi	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4002390	     0xf86a30a0000	                           jbe 0x4002e39	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4002396	      0xbaffffffff	                     mov edx, 0xffffffff	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x400239b	            0x39d6	                            cmp esi, edx	      7297	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85
0x400239d	    0x8b1500000000	            mov edx, dword [0x040023a3] 	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x40023a3	     0xf8457010000	                            je 0x4002500	      7297	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85
0x40023a9	    0x488b0cf50000	                  mov rcx, qword [rsi*8]	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x40023b1	    0x81faffff0000	                         cmp edx, 0xffff	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x40023b7	         0xfb67111	           movzx esi, byte [rcx + 0x11] 	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x40023bb	     0xf84a7040000	                            je 0x4002868	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x40023c1	    0x893500000000	            mov dword [0x040023c7], esi 	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x40023c7	         0xfb64910	           movzx ecx, byte [rcx + 0x10] 	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x40023cb	          0xf6c101	                              test cl, 1	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x40023ce	            0x7407	                            je 0x40023d7	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x40023d0	    0x830d00000000	                or dword [0x040023d7], 1	      7305	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x40023d7	          0x83e104	                              and ecx, 4	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x40023da	            0x7407	                            je 0x40023e3	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x40023dc	    0x830d00000000	                or dword [0x040023e3], 1	      7307	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x40023e3	    0x8b3500000000	            mov esi, dword [0x040023e9] 	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x40023e9	            0x85f6	                           test esi, esi	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x40023eb	     0xf841d010000	                            je 0x400250e	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x40023f1	     0xf1f80000000	                         nop dword [rax]	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x40023f8	    0x891500000000	            mov dword [0x040023fe], edx 	      7328	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x40023fe	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      7331	tc-i386.c	FUNCTION_87
0x4002403	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7331	tc-i386.c	FUNCTION_87
0x400240c	     0xf85aa090000	                           jne 0x4002dbc	      7331	tc-i386.c	FUNCTION_87
0x4002412	        0x4883c418	                           add rsp, 0x18	      7331	tc-i386.c	FUNCTION_87
0x4002416	              0x5b	                                 pop rbx	      7331	tc-i386.c	FUNCTION_87
0x4002417	              0x5d	                                 pop rbp	      7331	tc-i386.c	FUNCTION_87
0x4002418	              0xc3	                                     ret	      7331	tc-i386.c	FUNCTION_87
0x4002419	     0xf1f80000000	                         nop dword [rax]	      7331	tc-i386.c	FUNCTION_87
0x4002420	          0x4584d2	                         test r10b, r10b	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4002423	     0xf853c0b0000	                           jne 0x4002f65	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4002429	            0x3c03	                               cmp al, 3	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400242b	     0xf8413050000	                            je 0x4002944	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4002431	            0x3c05	                               cmp al, 5	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4002433	     0xf857f020000	                           jne 0x40026b8	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4002439	    0x488b05000000	            mov rax, qword [0x04002440] 	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x4002440	          0x4885c0	                           test rax, rax	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x4002443	     0xf84a3080000	                            je 0x4002cec	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x4002449	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400244d	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400244f	            0x89d6	                            mov esi, edx	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002451	          0x83e804	                              sub eax, 4	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x4002454	    0x890500000000	            mov dword [0x0400245a], eax 	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400245a	      0xb800000000	                              mov eax, 0	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400245f	      0xe9fcfaffff	                           jmp 0x4001f60	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002464	         0xf1f4000	                         nop dword [rax]	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002468	    0x830d00000000	                or dword [0x0400246f], 2	      6949	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x400246f	      0xe9f6f9ffff	                           jmp 0x4001e6a	      6949	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x4002474	         0xf1f4000	                         nop dword [rax]	      6949	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x4002478	    0x8b1d00000000	            mov ebx, dword [0x0400247e] 	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400247e	    0x488b15000000	            mov rdx, qword [0x04002485] 	      7199	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4002485	            0x85db	                           test ebx, ebx	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4002487	    0x488915000000	            mov qword [0x0400248e], rdx 	      7199	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x400248e	     0xf85f4fbffff	                           jne 0x4002088	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4002494	    0xc70500000000	               mov dword [0x0400249e], 3	      7202	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x400249e	    0x488b15000000	            mov rdx, qword [0x040024a5] 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x40024a5	         0xfb64a11	           movzx ecx, byte [rdx + 0x11] 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x40024a9	    0x890d00000000	            mov dword [0x040024af], ecx 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x40024af	      0xe9c0fbffff	                           jmp 0x4002074	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x40024b4	         0xf1f4000	                         nop dword [rax]	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x40024b8	     0xfb605000000	           movzx eax, byte [0x040024bf] 	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x40024bf	          0x83e018	                           and eax, 0x18	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x40024c2	            0x3c08	                               cmp al, 8	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x40024c4	     0xf85acfdffff	                           jne 0x4002276	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x40024ca	      0xe999f7ffff	                           jmp 0x4001c68	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x40024cf	              0x90	                                     nop	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x40024d0	     0xfb615000000	           movzx edx, byte [0x040024d7] 	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40024d7	          0x83e260	                           and edx, 0x60	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40024da	          0x80fa20	                            cmp dl, 0x20	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40024dd	     0xf84d5040000	                            je 0x40029b8	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40024e3	    0x488b15000000	            mov rdx, qword [0x040024ea] 	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x40024ea	    0x488915000000	            mov qword [0x040024f1], rdx 	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x40024f1	      0xe921fbffff	                           jmp 0x4002017	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x40024f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x4002500	    0x8b3d00000000	            mov edi, dword [0x04002506] 	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4002506	            0x85ff	                           test edi, edi	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4002508	     0xf8580fbffff	                           jne 0x400208e	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x400250e	    0xc70500000000	               mov dword [0x04002518], 3	      7323	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4002518	      0xe971fbffff	                           jmp 0x400208e	      7323	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x400251d	           0xf1f00	                         nop dword [rax]	      7323	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4002520	          0x4584d2	                         test r10b, r10b	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4002523	     0xf85c4090000	                           jne 0x4002eed	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4002529	            0x89d6	                            mov esi, edx	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400252b	    0xc70500000000	               mov dword [0x04002535], 5	      7024	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4002535	        0x488d7e0e	                    lea rdi, [rsi + 0xe]	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4002539	     0xfb604fd0000	                 movzx eax, byte [rdi*8]	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4002541	          0x83e0e0	                     and eax, 0xffffffe0	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4002544	          0x83c808	                               or eax, 8	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4002547	    0x8804fd000000	                    mov byte [rdi*8], al	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400254e	    0x8b3d00000000	            mov edi, dword [0x04002554] 	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x4002554	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002559	    0x830cb5000000	                     or dword [rsi*4], 1	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4002561	            0x85ff	                           test edi, edi	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x4002563	     0xf8426faffff	                            je 0x4001f8f	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x4002569	      0xe916fdffff	                           jmp 0x4002284	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x400256e	            0x6690	                                     nop	      7031	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	IF_46
0x4002570	    0x8b1500000000	            mov edx, dword [0x04002576] 	      6680	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4002576	          0x8d4201	                      lea eax, [rdx + 1]	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4002579	            0x89d7	                            mov edi, edx	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x400257b	      0xe990fbffff	                           jmp 0x4002110	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4002580	    0x800d00000000	                 or byte [0x04002587], 4	      6722	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x4002587	            0x31ff	                            xor edi, edi	      6719	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x4002589	      0xe9b6fbffff	                           jmp 0x4002144	      6719	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x400258e	            0x6690	                                     nop	      6719	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x4002590	          0xc1e004	                              shl eax, 4	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4002593	    0x488905000000	            mov qword [0x0400259a], rax 	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400259a	      0xe901fcffff	                           jmp 0x40021a0	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x400259f	              0x90	                                     nop	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x40025a0	            0x85ff	                           test edi, edi	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40025a2	     0xf84aa010000	                            je 0x4002752	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40025a8	      0xbf01000000	                              mov edi, 1	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40025ad	            0x89d6	                            mov esi, edx	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40025af	      0xe9acf9ffff	                           jmp 0x4001f60	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40025b4	         0xf1f4000	                         nop dword [rax]	      7129	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40025b8	         0xfb64711	           movzx eax, byte [rdi + 0x11] 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x40025bc	            0x89c1	                            mov ecx, eax	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x40025be	    0x890500000000	            mov dword [0x040025c4], eax 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x40025c4	          0x8d40fc	                      lea eax, [rax - 4]	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x40025c7	            0x3c01	                               cmp al, 1	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x40025c9	     0xf86e8040000	                           jbe 0x4002ab7	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x40025cf	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40025d4	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40025d6	      0xe9fcf8ffff	                           jmp 0x4001ed7	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40025db	       0xf1f440000	                   nop dword [rax + rax]	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40025e0	    0x448b1d000000	           mov r11d, dword [0x040025e7] 	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40025e7	    0x488b0d000000	            mov rcx, qword [0x040025ee] 	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x40025ee	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40025f0	    0xc70500000000	               mov dword [0x040025fa], 0	      6956	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x40025fa	          0x4585db	                         test r11d, r11d	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40025fd	        0x400f94c7	                                sete dil	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002601	          0x4885c9	                           test rcx, rcx	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x4002604	     0xf84b6050000	                            je 0x4002bc0	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x400260a	          0x4584d2	                         test r10b, r10b	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x400260d	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002612	     0xf8571f9ffff	                           jne 0x4001f89	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x4002618	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400261c	          0x8d7004	                      lea esi, [rax + 4]	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400261f	        0x4080fe01	                              cmp sil, 1	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x4002623	     0xf8689060000	                           jbe 0x4002cb2	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x4002629	    0x890500000000	            mov dword [0x0400262f], eax 	      6997	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400262f	    0x8b0500000000	            mov eax, dword [0x04002635] 	      6999	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002635	            0x89d6	                            mov esi, edx	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002637	    0xc70500000000	               mov dword [0x04002641], 5	      6998	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002641	    0xc70500000000	               mov dword [0x0400264b], 4	      7000	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400264b	    0x890500000000	            mov dword [0x04002651], eax 	      6999	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002651	        0x488d460e	                    lea rax, [rsi + 0xe]	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002655	    0x440fb614c500	                movzx r10d, byte [rax*8]	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400265e	          0x4589d3	                          mov r11d, r10d	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002661	        0x4183e3ec	                    and r11d, 0xffffffec	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002665	    0x833d00000000	               cmp dword [0x0400266c], 2	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400266c	    0x44881cc50000	                  mov byte [rax*8], r11b	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4002674	     0xf8415060000	                            je 0x4002c8f	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400267a	        0x4883c60e	                            add rsi, 0xe	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400267e	     0xfb604f50000	                 movzx eax, byte [rsi*8]	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4002686	          0x83c804	                               or eax, 4	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4002689	          0x83e0f7	                     and eax, 0xfffffff7	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400268c	    0x8804f5000000	                    mov byte [rsi*8], al	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4002693	        0xf6411001	               test byte [rcx + 0x10], 1	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x4002697	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400269c	     0xf84e7f8ffff	                            je 0x4001f89	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40026a2	    0x830d00000000	                or dword [0x040026a9], 2	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40026a9	      0xe9dbf8ffff	                           jmp 0x4001f89	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40026ae	            0x6690	                                     nop	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40026b0	          0x4489ce	                            mov esi, r9d	      7231	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x40026b3	      0xe9defcffff	                           jmp 0x4002396	      7231	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x40026b8	          0x83e802	                              sub eax, 2	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x40026bb	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40026bd	            0x89d6	                            mov esi, edx	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40026bf	    0x890500000000	            mov dword [0x040026c5], eax 	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x40026c5	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40026ca	      0xe991f8ffff	                           jmp 0x4001f60	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40026cf	    0x8b3500000000	            mov esi, dword [0x040026d5] 	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x40026d5	            0x85f6	                           test esi, esi	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x40026d7	     0xf85faf7ffff	                           jne 0x4001ed7	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x40026dd	            0x89d6	                            mov esi, edx	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x40026df	      0xbf01000000	                              mov edi, 1	      7097	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x40026e4	    0x800cf5000000	                      or byte [rsi*8], 1	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x40026ec	      0xe9e6f7ffff	                           jmp 0x4001ed7	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x40026f1	    0x8b3500000000	            mov esi, dword [0x040026f7] 	      6929	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x40026f7	    0xc70500000000	               mov dword [0x04002701], 5	      6928	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4002701	    0x893500000000	            mov dword [0x04002707], esi 	      6929	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4002707	            0x89d6	                            mov esi, edx	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4002709	        0x4c8d5e0e	                    lea r11, [rsi + 0xe]	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400270d	    0x420fb61cdd00	                 movzx ebx, byte [r11*8]	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4002716	            0x89dd	                            mov ebp, ebx	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4002718	          0x83e5ec	                     and ebp, 0xffffffec	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400271b	    0x833d00000000	               cmp dword [0x04002722], 2	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002722	    0x42882cdd0000	                   mov byte [r11*8], bpl	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400272a	     0xf843d050000	                            je 0x4002c6d	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002730	        0x4883c60e	                            add rsi, 0xe	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002734	    0x440fb61cf500	                movzx r11d, byte [rsi*8]	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400273d	        0x4183cb04	                              or r11d, 4	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002741	        0x4183e3f7	                    and r11d, 0xfffffff7	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002745	    0x44881cf50000	                  mov byte [rsi*8], r11b	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400274d	      0xe9f7f6ffff	                           jmp 0x4001e49	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002752	    0x8b0d00000000	            mov ecx, dword [0x04002758] 	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4002758	            0x89d6	                            mov esi, edx	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400275a	            0x85c9	                           test ecx, ecx	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400275c	     0xf84fef7ffff	                            je 0x4001f60	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4002762	          0x83f901	                              cmp ecx, 1	      7134	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x4002765	     0xf84e5050000	                            je 0x4002d50	      7134	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x400276b	    0x800cf5000000	                      or byte [rsi*8], 4	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x4002773	      0xbf01000000	                              mov edi, 1	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4002778	      0xe9e3f7ffff	                           jmp 0x4001f60	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x400277d	    0x8b0d00000000	            mov ecx, dword [0x04002783] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002783	          0x83f902	                              cmp ecx, 2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002786	     0xf8491050000	                            je 0x4002d1d	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400278c	     0xfb615000000	           movzx edx, byte [0x04002793] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002793	          0x83e218	                           and edx, 0x18	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002796	          0x80fa08	                               cmp dl, 8	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002799	     0xf8587050000	                           jne 0x4002d26	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x400279f	          0x83f901	                              cmp ecx, 1	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027a2	     0xf857e050000	                           jne 0x4002d26	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027a8	     0xfb615000000	           movzx edx, byte [0x040027af] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027af	          0x83e204	                              and edx, 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027b2	            0x7517	                           jne 0x40027cb	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027b4	    0xf60500000000	               test byte [0x040027bb], 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027bb	            0x750e	                           jne 0x40027cb	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027bd	    0x48833d000000	               cmp qword [0x040027c5], 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027c5	     0xf845b050000	                            je 0x4002d26	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x40027cb	            0x84d2	                             test dl, dl	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x40027cd	           0xf95c2	                                setne dl	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x40027d0	           0xfb6d2	                           movzx edx, dl	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x40027d3	      0xe908f5ffff	                           jmp 0x4001ce0	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x40027d8	    0xc70500000000	               mov dword [0x040027e2], 0	      7126	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40027e2	      0xe9a2f7ffff	                           jmp 0x4001f89	      7126	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40027e7	    0xc70500000000	               mov dword [0x040027f1], 4	      7115	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x40027f1	      0xe91af7ffff	                           jmp 0x4001f10	      7115	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x40027f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7115	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4002800	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x4002808	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400280c	    0x891500000000	            mov dword [0x04002812], edx 	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x4002812	    0x4a8b14cd0000	                   mov rdx, qword [r9*8]	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400281a	         0xfb64a11	           movzx ecx, byte [rdx + 0x11] 	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400281e	    0x890d00000000	            mov dword [0x04002824], ecx 	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x4002824	         0xfb65210	           movzx edx, byte [rdx + 0x10] 	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x4002828	          0xf6c201	                              test dl, 1	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400282b	            0x7407	                            je 0x4002834	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400282d	    0x830d00000000	                or dword [0x04002834], 1	      6889	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x4002834	          0x83e204	                              and edx, 4	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x4002837	            0x7407	                            je 0x4002840	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x4002839	    0x830d00000000	                or dword [0x04002840], 1	      6891	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x4002840	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x4002844	            0xa801	                              test al, 1	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x4002846	            0x7407	                            je 0x400284f	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x4002848	    0x830d00000000	                or dword [0x0400284f], 4	      6893	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400284f	            0xa804	                              test al, 4	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x4002851	     0xf8449f5ffff	                            je 0x4001da0	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x4002857	    0x830d00000000	                or dword [0x0400285e], 4	      6895	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400285e	      0xe93df5ffff	                           jmp 0x4001da0	      6895	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x4002863	       0xf1f440000	                   nop dword [rax + rax]	      6895	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x4002868	    0x893500000000	            mov dword [0x0400286e], esi 	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x400286e	         0xfb64910	           movzx ecx, byte [rcx + 0x10] 	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x4002872	          0xf6c101	                              test cl, 1	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x4002875	            0x7407	                            je 0x400287e	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x4002877	    0x830d00000000	                or dword [0x0400287e], 4	      7313	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x400287e	          0x83e104	                              and ecx, 4	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x4002881	            0x7407	                            je 0x400288a	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x4002883	    0x830d00000000	                or dword [0x0400288a], 4	      7315	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x400288a	    0x8b0d00000000	            mov ecx, dword [0x04002890] 	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4002890	            0x85c9	                           test ecx, ecx	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4002892	     0xf8566fbffff	                           jne 0x40023fe	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4002898	      0xe971fcffff	                           jmp 0x400250e	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x400289d	           0xf1f00	                         nop dword [rax]	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x40028a0	          0x83faff	             cmp edx, 0xffffffffffffffff	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x40028a3	     0xf8494060000	                            je 0x4002f3d	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x40028a9	            0x39f2	                            cmp edx, esi	      7238	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x40028ab	     0xf835c010000	                           jae 0x4002a0d	      7238	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x40028b1	          0x8d4e01	                      lea ecx, [rsi + 1]	      7240	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x40028b4	            0x39d9	                            cmp ecx, ebx	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x40028b6	     0xf8395060000	                           jae 0x4002f51	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x40028bc	            0x89f2	                            mov edx, esi	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x40028be	            0x89ce	                            mov esi, ecx	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x40028c0	          0x83faff	             cmp edx, 0xffffffffffffffff	      7283	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x40028c3	     0xf84d2faffff	                            je 0x400239b	      7283	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x40028c9	            0x89d1	                            mov ecx, edx	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028cb	        0x488d7906	                      lea rdi, [rcx + 6]	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028cf	    0x440fb604fd00	                 movzx r8d, byte [rdi*8]	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028d8	        0x41f6c001	                             test r8b, 1	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028dc	            0x7414	                            je 0x40028f2	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028de	    0x803cfd000000	                     cmp byte [rdi*8], 0	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028e6	            0x7848	                            js 0x4002930	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028e8	    0xf604fd000000	                    test byte [rdi*8], 2	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028f0	            0x753e	                           jne 0x4002930	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028f2	        0x4183e004	                              and r8d, 4	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028f6	            0x7538	                           jne 0x4002930	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x40028f8	    0x8b1d00000000	            mov ebx, dword [0x040028fe] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x40028fe	    0x391ccd000000	                  cmp dword [rcx*8], ebx	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4002905	            0x7419	                            je 0x4002920	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4002907	      0xba00000000	                              mov edx, 0	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x400290c	      0xbe7b1c0000	                         mov esi, 0x1c7b	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x4002911	      0xbf00000000	                              mov edi, 0	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x4002916	      0xe800000000	                          call 0x400291b	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x400291b	       0xf1f440000	                   nop dword [rax + rax]	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x4002920	    0x8b1d00000000	            mov ebx, dword [0x04002926] 	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x4002926	    0x391ccd000000	                  cmp dword [rcx*8], ebx	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400292d	            0x75d8	                           jne 0x4002907	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x400292f	              0x90	                                     nop	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x4002930	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x4002938	    0x48890d000000	            mov qword [0x0400293f], rcx 	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x400293f	      0xe957faffff	                           jmp 0x400239b	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x4002944	    0x488b05000000	            mov rax, qword [0x0400294b] 	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x400294b	          0x4885c0	                           test rax, rax	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x400294e	     0xf8480030000	                            je 0x4002cd4	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x4002954	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002958	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400295a	            0x89d6	                            mov esi, edx	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400295c	          0x83e806	                              sub eax, 6	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400295f	    0x890500000000	            mov dword [0x04002965], eax 	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002965	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400296a	      0xe9f1f5ffff	                           jmp 0x4001f60	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400296f	            0x89d6	                            mov esi, edx	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002971	        0x4883c60e	                            add rsi, 0xe	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002975	    0xf604f5000000	                 test byte [rsi*8], 0x1f	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400297d	     0xf8418f5ffff	                            je 0x4001e9b	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x4002983	     0xfb60cf50000	                 movzx ecx, byte [rsi*8]	      7070	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400298b	            0x89c8	                            mov eax, ecx	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x400298d	          0x83e0ed	                     and eax, 0xffffffed	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4002990	    0x8804f5000000	                    mov byte [rsi*8], al	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4002997	    0x803d00000000	                cmp byte [0x0400299e], 0	      7072	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400299e	     0xf85b7020000	                           jne 0x4002c5b	      7072	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40029a4	            0x89c8	                            mov eax, ecx	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40029a6	          0x83e0e9	                     and eax, 0xffffffe9	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40029a9	          0x83c808	                               or eax, 8	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40029ac	    0x8804f5000000	                    mov byte [rsi*8], al	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40029b3	      0xe9e3f4ffff	                           jmp 0x4001e9b	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40029b8	    0x488b15000000	            mov rdx, qword [0x040029bf] 	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40029bf	    0x488915000000	            mov qword [0x040029c6], rdx 	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40029c6	      0xe94cf6ffff	                           jmp 0x4002017	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40029cb	    0x448b05000000	            mov r8d, dword [0x040029d2] 	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x40029d2	          0x4585c0	                           test r8d, r8d	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x40029d5	     0xf8599010000	                           jne 0x4002b74	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x40029db	          0x8d5602	                      lea edx, [rsi + 2]	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x40029de	            0x39da	                            cmp edx, ebx	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x40029e0	     0xf8503040000	                           jne 0x4002de9	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x40029e6	          0x8d5601	                      lea edx, [rsi + 1]	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x40029e9	      0xe9d2feffff	                           jmp 0x40028c0	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x40029ee	            0x31d2	                            xor edx, edx	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x40029f0	          0x83f802	                              cmp eax, 2	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x40029f3	     0xf84e7f2ffff	                            je 0x4001ce0	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x40029f9	      0xba00000000	                              mov edx, 0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x40029fe	      0xbea01a0000	                         mov esi, 0x1aa0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x4002a03	      0xbf00000000	                              mov edi, 0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x4002a08	      0xe800000000	                          call 0x4002a0d	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x4002a0d	            0x89f1	                            mov ecx, esi	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a0f	    0xf604cd000000	                 test byte [rcx*8], 0x40	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a17	     0xf857f010000	                           jne 0x4002b9c	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a1d	          0x8d7e01	                      lea edi, [rsi + 1]	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a20	    0xf604fd000000	                 test byte [rdi*8], 0x40	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a28	          0x4889f9	                            mov rcx, rdi	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a2b	     0xf840f030000	                            je 0x4002d40	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a31	          0x8d7e02	                      lea edi, [rsi + 2]	      7251	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002a34	            0x39df	                            cmp edi, ebx	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002a36	     0xf8311040000	                           jae 0x4002e4d	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002a3c	            0x39ca	                            cmp edx, ecx	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002a3e	     0xf8509040000	                           jne 0x4002e4d	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002a44	            0x89f2	                            mov edx, esi	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002a46	            0x89fe	                            mov esi, edi	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002a48	      0xe973feffff	                           jmp 0x40028c0	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002a4d	    0x8b1500000000	            mov edx, dword [0x04002a53] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a53	          0x83fa01	                              cmp edx, 1	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a56	            0x7424	                            je 0x4002a7c	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a58	            0x85d2	                           test edx, edx	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a5a	     0xf85a1040000	                           jne 0x4002f01	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a60	     0xfb615000000	           movzx edx, byte [0x04002a67] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a67	          0x83e218	                           and edx, 0x18	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a6a	          0x80fa08	                               cmp dl, 8	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a6d	            0x740d	                            je 0x4002a7c	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a6f	    0xf60500000000	               test byte [0x04002a76], 1	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a76	     0xf8485040000	                            je 0x4002f01	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002a7c	    0xf60500000000	           test byte [0x04002a83], 0xfc 	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x4002a83	     0xf854df2ffff	                           jne 0x4001cd6	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x4002a89	     0xfb615000000	           movzx edx, byte [0x04002a90] 	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4002a90	          0x83e201	                              and edx, 1	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4002a93	      0xe948f2ffff	                           jmp 0x4001ce0	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4002a98	          0x4584d2	                         test r10b, r10b	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4002a9b	     0xf8588040000	                           jne 0x4002f29	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4002aa1	    0xc70500000000	               mov dword [0x04002aab], 4	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4002aab	      0xe977f4ffff	                           jmp 0x4001f27	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4002ab0	            0x89f3	                            mov ebx, esi	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4002ab2	      0xe9b9f8ffff	                           jmp 0x4002370	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4002ab7	      0xb800000000	                              mov eax, 0	      7094	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x4002abc	      0xe90bf4ffff	                           jmp 0x4001ecc	      7094	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x4002ac1	            0x31f6	                            xor esi, esi	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002ac3	      0xe9a8f8ffff	                           jmp 0x4002370	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4002ac8	            0x89d1	                            mov ecx, edx	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002aca	          0x4489ce	                            mov esi, r9d	      6848	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	ELSE_10
0x4002acd	    0xf604cd000000	                 test byte [rcx*8], 0x40	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002ad5	            0x7512	                           jne 0x4002ae9	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002ad7	          0x4489c9	                            mov ecx, r9d	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002ada	    0xf604cd000000	                 test byte [rcx*8], 0x40	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002ae2	            0x7405	                            je 0x4002ae9	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002ae4	            0x89d6	                            mov esi, edx	      6844	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002ae6	          0x4489ca	                            mov edx, r9d	      6845	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x4002ae9	        0x488d7e06	                      lea rdi, [rsi + 6]	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4002aed	        0x4183c101	                              add r9d, 1	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002af1	    0x488b0cfd0000	                  mov rcx, qword [rdi*8]	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4002af9	    0x8b3cfd000000	                  mov edi, dword [rdi*8]	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4002b00	    0x4881e1ffffff	             and rcx, 0xfffffffff7ffffff	      6851	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4002b07	          0x4439c8	                            cmp eax, r9d	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b0a	            0x7638	                           jbe 0x4002b44	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b0c	          0xf6c101	                              test cl, 1	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b0f	            0x89c8	                            mov eax, ecx	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b11	            0x7425	                            je 0x4002b38	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b13	          0x4989c8	                             mov r8, rcx	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b16	        0x49c1e818	                            shr r8, 0x18	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b1a	          0x4584c0	                           test r8b, r8b	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b1d	            0x7841	                            js 0x4002b60	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b1f	          0x4989f8	                             mov r8, rdi	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b22	            0x89c9	                            mov ecx, ecx	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b24	        0x49c1e020	                            shl r8, 0x20	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b28	          0x4c09c1	                              or rcx, r8	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b2b	          0x4989c8	                             mov r8, rcx	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b2e	        0x49c1e820	                            shr r8, 0x20	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b32	        0x4183e002	                              and r8d, 2	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b36	            0x7528	                           jne 0x4002b60	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b38	            0xa804	                              test al, 4	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b3a	            0x7524	                           jne 0x4002b60	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4002b3c	    0x3b3d00000000	            cmp edi, dword [0x04002b42] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4002b42	            0x7414	                            je 0x4002b58	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4002b44	      0xba00000000	                              mov edx, 0	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x4002b49	      0xbec91a0000	                         mov esi, 0x1ac9	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x4002b4e	      0xbf00000000	                              mov edi, 0	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x4002b53	      0xe800000000	                          call 0x4002b58	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x4002b58	    0x390d00000000	            cmp dword [0x04002b5e], ecx 	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x4002b5e	            0x75e4	                           jne 0x4002b44	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x4002b60	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4002b68	    0x488905000000	            mov qword [0x04002b6f], rax 	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4002b6f	      0xe9a0f1ffff	                           jmp 0x4001d14	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4002b74	    0x8b1500000000	            mov edx, dword [0x04002b7a] 	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002b7a	          0x8d4a02	                      lea ecx, [rdx + 2]	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002b7d	            0x39d9	                            cmp ecx, ebx	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002b7f	     0xf8590030000	                           jne 0x4002f15	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002b85	            0x39f1	                            cmp ecx, esi	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002b87	     0xf8688030000	                           jbe 0x4002f15	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002b8d	          0x83c201	                              add edx, 1	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x4002b90	      0xe92bfdffff	                           jmp 0x40028c0	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x4002b95	            0x31c0	                            xor eax, eax	      6650	tc-i386.c	FUNCTION_87
0x4002b97	      0xe962f8ffff	                           jmp 0x40023fe	      6650	tc-i386.c	FUNCTION_87
0x4002b9c	          0x8d5601	                      lea edx, [rsi + 1]	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4002b9f	            0x39da	                            cmp edx, ebx	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4002ba1	     0xf8219fdffff	                            jb 0x40028c0	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4002ba7	      0xba00000000	                              mov edx, 0	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4002bac	      0xbe5a1c0000	                         mov esi, 0x1c5a	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4002bb1	      0xbf00000000	                              mov edi, 0	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4002bb6	      0xe800000000	                          call 0x4002bbb	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4002bbb	       0xf1f440000	                   nop dword [rax + rax]	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4002bc0	          0x4584d2	                         test r10b, r10b	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4002bc3	     0xf8510030000	                           jne 0x4002ed9	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4002bc9	    0x8b0500000000	            mov eax, dword [0x04002bcf] 	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002bcf	          0x83f802	                              cmp eax, 2	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002bd2	     0xf8496010000	                            je 0x4002d6e	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002bd8	          0x83f801	                              cmp eax, 1	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002bdb	           0xf94c1	                                 sete cl	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002bde	    0x803d00000000	                cmp byte [0x04002be5], 0	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002be5	           0xf95c0	                                setne al	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002be8	            0x38c1	                              cmp cl, al	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002bea	     0xf84b3010000	                            je 0x4002da3	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002bf0	    0xc70500000000	               mov dword [0x04002bfa], 6	      6979	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002bfa	            0x31c0	                            xor eax, eax	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002bfc	            0x31c9	                            xor ecx, ecx	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002bfe	    0x41ba01000000	                             mov r10d, 1	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002c04	            0x89d6	                            mov esi, edx	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4002c06	    0x8b1d00000000	            mov ebx, dword [0x04002c0c] 	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4002c0c	          0x83e101	                              and ecx, 1	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4002c0f	    0x4c8d1cf50000	                        lea r11, [rsi*8]	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4002c17	    0x8b3500000000	            mov esi, dword [0x04002c1d] 	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c1d	        0x4183e201	                             and r10d, 1	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c21	        0x49c1e211	                           shl r10, 0x11	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c25	            0xf7d3	                                 not ebx	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4002c27	        0x41235b08	                and ebx, dword [r11 + 8]	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x4002c2b	            0xf7d6	                                 not esi	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c2d	        0x4121730c	              and dword [r11 + 0xc], esi	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c31	          0x4889ce	                            mov rsi, rcx	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c34	          0x4889c1	                            mov rcx, rax	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c37	        0x48c1e612	                           shl rsi, 0x12	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c3b	          0x4c89d0	                            mov rax, r10	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c3e	          0x83e101	                              and ecx, 1	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c41	          0x4809f0	                             or rax, rsi	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c44	        0x48c1e113	                           shl rcx, 0x13	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c48	          0x4809c8	                             or rax, rcx	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4002c4b	             0x9d8	                             or eax, ebx	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x4002c4d	        0x41894308	                mov dword [r11 + 8], eax	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x4002c51	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002c56	      0xe92ef3ffff	                           jmp 0x4001f89	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002c5b	          0x83c804	                               or eax, 4	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x4002c5e	          0x83e0f7	                     and eax, 0xfffffff7	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x4002c61	    0x8804f5000000	                    mov byte [rsi*8], al	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x4002c68	      0xe92ef2ffff	                           jmp 0x4001e9b	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x4002c6d	    0x803d00000000	                cmp byte [0x04002c74], 0	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002c74	     0xf85b6faffff	                           jne 0x4002730	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4002c7a	          0x83e3e8	                     and ebx, 0xffffffe8	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x4002c7d	            0x89de	                            mov esi, ebx	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x4002c7f	          0x83ce08	                               or esi, 8	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x4002c82	    0x428834dd0000	                   mov byte [r11*8], sil	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x4002c8a	      0xe9baf1ffff	                           jmp 0x4001e49	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x4002c8f	    0x803d00000000	                cmp byte [0x04002c96], 0	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4002c96	     0xf85def9ffff	                           jne 0x400267a	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4002c9c	          0x4489d6	                           mov esi, r10d	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x4002c9f	          0x83e6e8	                     and esi, 0xffffffe8	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x4002ca2	          0x83ce08	                               or esi, 8	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x4002ca5	    0x408834c50000	                   mov byte [rax*8], sil	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x4002cad	      0xe9e1f9ffff	                           jmp 0x4002693	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x4002cb2	    0xc70500000000	               mov dword [0x04002cbc], 4	      6995	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x4002cbc	      0xe96ef9ffff	                           jmp 0x400262f	      6995	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x4002cc1	    0xf60500000000	               test byte [0x04002cc8], 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002cc8	            0x745c	                            je 0x4002d26	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002cca	      0xba02000000	                              mov edx, 2	      6787	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_7
0x4002ccf	      0xe90cf0ffff	                           jmp 0x4001ce0	      6787	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_7
0x4002cd4	    0xc70500000000	               mov dword [0x04002cde], 7	      7041	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x4002cde	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002ce0	      0xb800000000	                              mov eax, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002ce5	            0x89d6	                            mov esi, edx	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002ce7	      0xe974f2ffff	                           jmp 0x4001f60	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002cec	            0x89d6	                            mov esi, edx	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002cee	    0xc70500000000	               mov dword [0x04002cf8], 6	      7049	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x4002cf8	        0x488d460e	                    lea rax, [rsi + 0xe]	      7049	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x4002cfc	    0xf604c5000000	                 test byte [rax*8], 0x1f	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x4002d04	            0x755c	                           jne 0x4002d62	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x4002d06	    0x800cc5000000	                      or byte [rax*8], 1	      7053	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x4002d0e	      0xbf01000000	                              mov edi, 1	      7054	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x4002d13	      0xb800000000	                              mov eax, 0	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002d18	      0xe943f2ffff	                           jmp 0x4001f60	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002d1d	    0xf60500000000	               test byte [0x04002d24], 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d24	            0x759b	                           jne 0x4002cc1	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d26	      0xba00000000	                              mov edx, 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d2b	      0xbe811a0000	                         mov esi, 0x1a81	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d30	      0xbf00000000	                              mov edi, 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d35	      0xe800000000	                          call 0x4002d3a	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d3a	    0x660f1f440000	                    nop word [rax + rax]	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d40	            0x89fa	                            mov edx, edi	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d42	      0xe958feffff	                           jmp 0x4002b9f	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4002d47	            0x31f6	                            xor esi, esi	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4002d49	            0x31db	                            xor ebx, ebx	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4002d4b	      0xe920f6ffff	                           jmp 0x4002370	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4002d50	    0x800cf5000000	                      or byte [rsi*8], 1	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x4002d58	      0xbf01000000	                              mov edi, 1	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4002d5d	      0xe9fef1ffff	                           jmp 0x4001f60	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4002d62	            0x31ff	                            xor edi, edi	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4002d64	      0xb800000000	                              mov eax, 0	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002d69	      0xe9f2f1ffff	                           jmp 0x4001f60	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4002d6e	    0x803d00000000	                cmp byte [0x04002d75], 1	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d75	    0xc70500000000	               mov dword [0x04002d7f], 4	      6971	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d7f	    0xc70500000000	               mov dword [0x04002d89], 5	      6972	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d89	    0xc70500000000	               mov dword [0x04002d93], 4	      6973	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d93	           0xf92c0	                                 setb al	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d96	            0x19c9	                            sbb ecx, ecx	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d98	          0x4531d2	                          xor r10d, r10d	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d9b	          0x83c101	                              add ecx, 1	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002d9e	      0xe961feffff	                           jmp 0x4002c04	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4002da3	    0xc70500000000	               mov dword [0x04002dad], 5	      6984	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x4002dad	            0x31c0	                            xor eax, eax	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x4002daf	      0xb901000000	                              mov ecx, 1	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x4002db4	          0x4531d2	                          xor r10d, r10d	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x4002db7	      0xe948feffff	                           jmp 0x4002c04	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x4002dbc	      0xe800000000	                          call 0x4002dc1	      7331	tc-i386.c	FUNCTION_87
0x4002dc1	      0xba00000000	                              mov edx, 0	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4002dc6	      0xbe121a0000	                         mov esi, 0x1a12	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4002dcb	      0xbf00000000	                              mov edi, 0	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4002dd0	      0xe800000000	                          call 0x4002dd5	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4002dd5	      0xba00000000	                              mov edx, 0	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x4002dda	      0xbe0b1b0000	                         mov esi, 0x1b0b	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x4002ddf	      0xbf00000000	                              mov edi, 0	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x4002de4	      0xe800000000	                          call 0x4002de9	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x4002de9	      0xba00000000	                              mov edx, 0	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4002dee	      0xbe651c0000	                         mov esi, 0x1c65	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4002df3	      0xbf00000000	                              mov edi, 0	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4002df8	      0xe800000000	                          call 0x4002dfd	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4002dfd	      0xba00000000	                              mov edx, 0	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4002e02	      0xbe2a1a0000	                         mov esi, 0x1a2a	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4002e07	      0xbf00000000	                              mov edi, 0	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4002e0c	      0xe800000000	                          call 0x4002e11	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4002e11	      0xba00000000	                              mov edx, 0	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4002e16	      0xbe961a0000	                         mov esi, 0x1a96	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4002e1b	      0xbf00000000	                              mov edi, 0	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4002e20	      0xe800000000	                          call 0x4002e25	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4002e25	      0xba00000000	                              mov edx, 0	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x4002e2a	      0xbe9c1a0000	                         mov esi, 0x1a9c	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x4002e2f	      0xbf00000000	                              mov edi, 0	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x4002e34	      0xe800000000	                          call 0x4002e39	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x4002e39	      0xba00000000	                              mov edx, 0	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4002e3e	      0xbe711c0000	                         mov esi, 0x1c71	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4002e43	      0xbf00000000	                              mov edi, 0	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4002e48	      0xe800000000	                          call 0x4002e4d	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4002e4d	      0xba00000000	                              mov edx, 0	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002e52	      0xbe551c0000	                         mov esi, 0x1c55	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002e57	      0xbf00000000	                              mov edi, 0	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002e5c	      0xe800000000	                          call 0x4002e61	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4002e61	      0xba00000000	                              mov edx, 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4002e66	      0xbeed1b0000	                         mov esi, 0x1bed	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4002e6b	      0xbf00000000	                              mov edi, 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4002e70	      0xe800000000	                          call 0x4002e75	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4002e75	      0xba00000000	                              mov edx, 0	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x4002e7a	      0xbef41a0000	                         mov esi, 0x1af4	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x4002e7f	      0xbf00000000	                              mov edi, 0	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x4002e84	      0xe800000000	                          call 0x4002e89	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x4002e89	      0xba00000000	                              mov edx, 0	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4002e8e	      0xbe4b1a0000	                         mov esi, 0x1a4b	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4002e93	      0xbf00000000	                              mov edi, 0	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4002e98	      0xe800000000	                          call 0x4002e9d	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4002e9d	      0xba00000000	                              mov edx, 0	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4002ea2	      0xbe481a0000	                         mov esi, 0x1a48	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4002ea7	      0xbf00000000	                              mov edi, 0	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4002eac	      0xe800000000	                          call 0x4002eb1	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4002eb1	      0xba00000000	                              mov edx, 0	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4002eb6	      0xbe451a0000	                         mov esi, 0x1a45	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4002ebb	      0xbf00000000	                              mov edi, 0	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4002ec0	      0xe800000000	                          call 0x4002ec5	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4002ec5	      0xba00000000	                              mov edx, 0	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4002eca	      0xbe331a0000	                         mov esi, 0x1a33	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4002ecf	      0xbf00000000	                              mov edi, 0	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4002ed4	      0xe800000000	                          call 0x4002ed9	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4002ed9	      0xba00000000	                              mov edx, 0	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4002ede	      0xbe331b0000	                         mov esi, 0x1b33	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4002ee3	      0xbf00000000	                              mov edi, 0	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4002ee8	      0xe800000000	                          call 0x4002eed	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4002eed	      0xba00000000	                              mov edx, 0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4002ef2	      0xbe6f1b0000	                         mov esi, 0x1b6f	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4002ef7	      0xbf00000000	                              mov edi, 0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4002efc	      0xe800000000	                          call 0x4002f01	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4002f01	      0xba00000000	                              mov edx, 0	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002f06	      0xbe6b1a0000	                         mov esi, 0x1a6b	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002f0b	      0xbf00000000	                              mov edi, 0	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002f10	      0xe800000000	                          call 0x4002f15	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4002f15	      0xba00000000	                              mov edx, 0	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002f1a	      0xbe6c1c0000	                         mov esi, 0x1c6c	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002f1f	      0xbf00000000	                              mov edi, 0	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002f24	      0xe800000000	                          call 0x4002f29	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4002f29	      0xba00000000	                              mov edx, 0	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4002f2e	      0xbebf1b0000	                         mov esi, 0x1bbf	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4002f33	      0xbf00000000	                              mov edi, 0	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4002f38	      0xe800000000	                          call 0x4002f3d	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4002f3d	      0xba00000000	                              mov edx, 0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4002f42	      0xbe441c0000	                         mov esi, 0x1c44	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4002f47	      0xbf00000000	                              mov edi, 0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4002f4c	      0xe800000000	                          call 0x4002f51	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4002f51	      0xba00000000	                              mov edx, 0	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4002f56	      0xbe491c0000	                         mov esi, 0x1c49	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4002f5b	      0xbf00000000	                              mov edi, 0	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4002f60	      0xe800000000	                          call 0x4002f65	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4002f65	      0xba00000000	                              mov edx, 0	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4002f6a	      0xbe7c1b0000	                         mov esi, 0x1b7c	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4002f6f	      0xbf00000000	                              mov edi, 0	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4002f74	      0xe800000000	                          call 0x4002f79	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
set_intel_mnemonic	IF,0:DO,0:ELSE,0:WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,0	2
0x40000c0	    0x893d00000000	            mov dword [0x040000c6], edi 	      2490	tc-i386.c	FUNCTION_45
0x40000c6	              0xc3	                                     ret	      2490	tc-i386.c	FUNCTION_45
i386_intel_simplify_register	IF,9:DO,0:ELSE,6:WHILE,0:CALL,6:functions,0:SWITCH,0:FOR,0	113
0x4000320	        0x4883ec08	                              sub rsp, 8	       259	tc-i386-intel.c	FUNCTION_160
0x4000324	    0x486305000000	         movsxd rax, dword [0x0400032b] 	       262	tc-i386-intel.c	FUNCTION_160	IF_1
0x400032b	            0x85c0	                           test eax, eax	       262	tc-i386-intel.c	FUNCTION_160	IF_1
0x400032d	            0x782e	                            js 0x400035d	       262	tc-i386-intel.c	FUNCTION_160	IF_1
0x400032f	    0x448b05000000	            mov r8d, dword [0x04000336] 	       262	tc-i386-intel.c	FUNCTION_160	IF_1
0x4000336	          0x4585c0	                           test r8d, r8d	       262	tc-i386-intel.c	FUNCTION_160	IF_1
0x4000339	            0x7522	                           jne 0x400035d	       262	tc-i386-intel.c	FUNCTION_160	IF_1
0x400033b	        0x807f1805	                cmp byte [rdi + 0x18], 5	       268	tc-i386-intel.c	FUNCTION_160	IF_2
0x400033f	            0x746f	                            je 0x40003b0	       268	tc-i386-intel.c	FUNCTION_160	IF_2
0x4000341	         0xfb7571a	           movzx edx, word [rdi + 0x1a] 	       271	tc-i386-intel.c	FUNCTION_160	ELSE_1
0x4000345	          0x83ea01	                              sub edx, 1	       271	tc-i386-intel.c	FUNCTION_160	ELSE_1
0x4000348	    0x8b3d00000000	            mov edi, dword [0x0400034e] 	       273	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3
0x400034e	            0x85ff	                           test edi, edi	       273	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3
0x4000350	            0x752e	                           jne 0x4000380	       273	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3
0x4000352	    0x48833cc50000	                    cmp qword [rax*8], 0	       275	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_4
0x400035b	            0x745b	                            je 0x40003b8	       275	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_4
0x400035d	      0xba05000000	                              mov edx, 5	       264	tc-i386-intel.c	FUNCTION_160	IF_1	CALL_2
0x4000362	      0xbe00000000	                              mov esi, 0	       264	tc-i386-intel.c	FUNCTION_160	IF_1	CALL_2
0x4000367	            0x31ff	                            xor edi, edi	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x4000369	      0xe800000000	                          call 0x400036e	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x400036e	          0x4889c7	                            mov rdi, rax	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x4000371	            0x31c0	                            xor eax, eax	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x4000373	      0xe800000000	                          call 0x4000378	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x4000378	            0x31c0	                            xor eax, eax	       284	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x400037a	        0x4883c408	                              add rsp, 8	       317	tc-i386-intel.c	FUNCTION_160
0x400037e	              0xc3	                                     ret	       317	tc-i386-intel.c	FUNCTION_160
0x400037f	              0x90	                                     nop	       317	tc-i386-intel.c	FUNCTION_160
0x4000380	    0x48833d000000	               cmp qword [0x04000388], 0	       288	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000388	     0xf8492000000	                            je 0x4000420	       288	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x400038e	    0x48833d000000	               cmp qword [0x04000396], 0	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000396	            0x7458	                            je 0x40003f0	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000398	    0x48c705000000	               mov qword [0x040003a3], 0	       314	tc-i386-intel.c	FUNCTION_160	ELSE_6
0x40003a3	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_160
0x40003a8	        0x4883c408	                              add rsp, 8	       317	tc-i386-intel.c	FUNCTION_160
0x40003ac	              0xc3	                                     ret	       317	tc-i386-intel.c	FUNCTION_160
0x40003ad	           0xf1f00	                         nop dword [rax]	       317	tc-i386-intel.c	FUNCTION_160
0x40003b0	          0x8b5710	            mov edx, dword [rdi + 0x10] 	       269	tc-i386-intel.c	FUNCTION_160	IF_2
0x40003b3	            0xeb93	                           jmp 0x4000348	       269	tc-i386-intel.c	FUNCTION_160	IF_2
0x40003b5	           0xf1f00	                         nop dword [rax]	       269	tc-i386-intel.c	FUNCTION_160	IF_2
0x40003b8	          0x4863d2	                         movsxd rdx, edx	       280	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x40003bb	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       280	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x40003bf	    0x488d0ccd0000	                        lea rcx, [rcx*8]	       280	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x40003c7	        0xf6410901	                  test byte [rcx + 9], 1	       280	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x40003cb	     0xf8587000000	                           jne 0x4000458	       280	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x40003d1	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       286	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3
0x40003d5	    0x488d14d50000	                        lea rdx, [rdx*8]	       286	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3
0x40003dd	    0x488914c50000	                  mov qword [rax*8], rdx	       286	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3
0x40003e5	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_160
0x40003ea	        0x4883c408	                              add rsp, 8	       317	tc-i386-intel.c	FUNCTION_160
0x40003ee	              0xc3	                                     ret	       317	tc-i386-intel.c	FUNCTION_160
0x40003ef	              0x90	                                     nop	       317	tc-i386-intel.c	FUNCTION_160
0x40003f0	    0x8b0500000000	            mov eax, dword [0x040003f6] 	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x40003f6	            0x85c0	                           test eax, eax	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x40003f8	            0x759e	                           jne 0x4000398	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x40003fa	          0x4863d2	                         movsxd rdx, edx	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x40003fd	        0x488d0452	                  lea rax, [rdx + rdx*2]	       296	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000401	    0x488d04c50000	                        lea rax, [rax*8]	       296	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000409	    0x488905000000	            mov qword [0x04000410], rax 	       296	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000410	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_160
0x4000415	      0xe960ffffff	                           jmp 0x400037a	       296	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x400041a	    0x660f1f440000	                    nop word [rax + rax]	       296	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000420	          0x4863d2	                         movsxd rdx, edx	       289	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000423	        0x488d0452	                  lea rax, [rdx + rdx*2]	       289	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000427	    0x488d0cc50000	                        lea rcx, [rax*8]	       289	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x400042f	         0xfb6410c	            movzx eax, byte [rcx + 0xc] 	       289	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000433	            0xa808	                              test al, 8	       289	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000435	            0x7441	                            je 0x4000478	       289	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000437	        0x488d0452	                  lea rax, [rdx + rdx*2]	       303	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x400043b	    0x488d04c50000	                        lea rax, [rax*8]	       303	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x4000443	    0x488905000000	            mov qword [0x0400044a], rax 	       303	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x400044a	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_160
0x400044f	      0xe926ffffff	                           jmp 0x400037a	       303	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x4000454	         0xf1f4000	                         nop dword [rax]	       303	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x4000458	        0x807911ff	            cmp byte [rcx + 0x11], 0xff 	       281	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x400045c	     0xf856fffffff	                           jne 0x40003d1	       281	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5
0x4000462	      0xba05000000	                              mov edx, 5	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x4000467	      0xbe00000000	                              mov esi, 0	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x400046c	      0xe9f6feffff	                           jmp 0x4000367	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x4000471	     0xf1f80000000	                         nop dword [rax]	       283	tc-i386-intel.c	FUNCTION_160	ELSE_1	IF_3	IF_5	CALL_6
0x4000478	            0xa810	                           test al, 0x10	       290	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x400047a	            0x75bb	                           jne 0x4000437	       290	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x400047c	            0xa820	                           test al, 0x20	       291	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x400047e	            0x75b7	                           jne 0x4000437	       291	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000480	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	       293	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000484	          0x83c004	                              add eax, 4	       293	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000487	            0x3c01	                               cmp al, 1	       293	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x4000489	            0x76ac	                           jbe 0x4000437	       293	tc-i386-intel.c	FUNCTION_160	ELSE_2	IF_6
0x400048b	    0x488b0d000000	            mov rcx, qword [0x04000492] 	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000492	          0x4885c9	                           test rcx, rcx	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000495	            0x7460	                            je 0x40004f7	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000497	    0x8b3500000000	            mov esi, dword [0x0400049d] 	       299	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x400049d	            0x85f6	                           test esi, esi	       299	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x400049f	            0x7596	                           jne 0x4000437	       299	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004a1	    0x488b05000000	            mov rax, qword [0x040004a8] 	       300	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004a8	          0x488b00	                    mov rax, qword [rax]	       300	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004ab	          0x8b400c	              mov eax, dword [rax + 0xc]	       300	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004ae	      0x3d1b0ff300	                       cmp eax, 0xf30f1b	       300	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004b3	            0x7482	                            je 0x4000437	       300	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004b5	          0x83e0fe	                     and eax, 0xfffffffe	       301	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004b8	      0x3d1a0f0000	                          cmp eax, 0xf1a	       301	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004bd	     0xf8474ffffff	                            je 0x4000437	       301	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004c3	        0x488d0452	                  lea rax, [rdx + rdx*2]	       302	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004c7	    0xf604c5000000	                 test byte [rax*8], 0x40	       302	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004cf	     0xf8562ffffff	                           jne 0x4000437	       302	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	IF_9
0x40004d5	        0x486bc218	                     imul rax, rdx, 0x18	       308	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	ELSE_5
0x40004d9	    0x48890d000000	            mov qword [0x040004e0], rcx 	       307	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	ELSE_5
0x40004e0	    0x480500000000	                              add rax, 0	       308	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	ELSE_5
0x40004e6	    0x488905000000	            mov qword [0x040004ed], rax 	       308	tc-i386-intel.c	FUNCTION_160	ELSE_4	IF_8	ELSE_5
0x40004ed	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_160
0x40004f2	      0xe983feffff	                           jmp 0x400037a	       316	tc-i386-intel.c	FUNCTION_160
0x40004f7	    0x833d00000000	               cmp dword [0x040004fe], 0	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x40004fe	     0xf84f9feffff	                            je 0x40003fd	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
0x4000504	      0xe92effffff	                           jmp 0x4000437	       295	tc-i386-intel.c	FUNCTION_160	ELSE_3	IF_7
set_allow_index_reg	IF,0:DO,0:ELSE,0:WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,0	2
0x40000d0	    0x893d00000000	            mov dword [0x040000d6], edi 	      2496	tc-i386.c	FUNCTION_46
0x40000d6	              0xc3	                                     ret	      2496	tc-i386.c	FUNCTION_46
i386_need_index_operator	IF,0:DO,0:ELSE,0:WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,0	3
0x4011030	    0x8b0500000000	            mov eax, dword [0x04011036] 	       543	tc-i386-intel.c	FUNCTION_163
0x4011036	          0xc1e81f	                           shr eax, 0x1f	       543	tc-i386-intel.c	FUNCTION_163
0x4011039	              0xc3	                                     ret	       544	tc-i386-intel.c	FUNCTION_163
tc_i386_fix_adjustable	IF,4:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	45
0x400ba70	    0x8b0500000000	            mov eax, dword [0x0400ba76] 	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400ba76	              0x53	                                push rbx	      3198	tc-i386.c	FUNCTION_60
0x400ba77	          0x4889fb	                            mov rbx, rdi	      3198	tc-i386.c	FUNCTION_60
0x400ba7a	            0x85c0	                           test eax, eax	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400ba7c	            0x755a	                           jne 0x400bad8	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400ba7e	    0x488b05000000	            mov rax, qword [0x0400ba85] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400ba85	          0x4885c0	                           test rax, rax	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400ba88	            0x7406	                            je 0x400ba90	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400ba8a	        0x483b4320	            cmp rax, qword [rbx + 0x20] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400ba8e	            0x7460	                            je 0x400baf0	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400ba90	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400ba93	          0x8d46dc	                   lea eax, [rsi - 0x24]	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400ba96	    0x8d8e9cfeffff	                  lea ecx, [rsi - 0x164]	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400ba9c	          0x83f801	                              cmp eax, 1	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400ba9f	           0xf96c0	                                setbe al	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400baa2	            0x31d2	                            xor edx, edx	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400baa4	          0x83f937	                           cmp ecx, 0x37	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400baa7	            0x7710	                            ja 0x400bab9	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400baa9	    0x48ba43fe3187	            movabs rdx, 0xc303fc8731fe43	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400bab3	          0x48d3ea	                             shr rdx, cl	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400bab6	          0x83e201	                              and edx, 1	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400bab9	    0x81eea3050000	                          sub esi, 0x5a3	      3253	tc-i386.c	FUNCTION_60
0x400babf	          0x83fe01	                              cmp esi, 1	      3253	tc-i386.c	FUNCTION_60
0x400bac2	           0xf96c1	                                setbe cl	      3253	tc-i386.c	FUNCTION_60
0x400bac5	             0x9c8	                             or eax, ecx	      3253	tc-i386.c	FUNCTION_60
0x400bac7	             0x9c2	                             or edx, eax	      3253	tc-i386.c	FUNCTION_60
0x400bac9	          0x83f201	                              xor edx, 1	      3253	tc-i386.c	FUNCTION_60
0x400bacc	           0xfb6c2	                           movzx eax, dl	      3253	tc-i386.c	FUNCTION_60
0x400bacf	              0x5b	                                 pop rbx	      3254	tc-i386.c	FUNCTION_60
0x400bad0	              0xc3	                                     ret	      3254	tc-i386.c	FUNCTION_60
0x400bad1	     0xf1f80000000	                         nop dword [rax]	      3254	tc-i386.c	FUNCTION_60
0x400bad8	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400badc	      0xe800000000	                          call 0x400bae1	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400bae1	        0xf6402280	           test byte [rax + 0x22], 0x80 	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400bae5	            0x7497	                            je 0x400ba7e	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400bae7	          0xf60301	                      test byte [rbx], 1	      3207	tc-i386.c	FUNCTION_60	IF_2
0x400baea	            0x7492	                            je 0x400ba7e	      3207	tc-i386.c	FUNCTION_60	IF_2
0x400baec	            0x31c0	                            xor eax, eax	      3208	tc-i386.c	FUNCTION_60	IF_2
0x400baee	              0x5b	                                 pop rbx	      3254	tc-i386.c	FUNCTION_60
0x400baef	              0xc3	                                     ret	      3254	tc-i386.c	FUNCTION_60
0x400baf0	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      3213	tc-i386.c	FUNCTION_60	IF_3
0x400baf3	          0x83fe09	                              cmp esi, 9	      3213	tc-i386.c	FUNCTION_60	IF_3
0x400baf6	            0x759b	                           jne 0x400ba93	      3213	tc-i386.c	FUNCTION_60	IF_3
0x400baf8	            0x31c0	                            xor eax, eax	      3208	tc-i386.c	FUNCTION_60	IF_2
0x400bafa	            0xebf2	                           jmp 0x400baee	      3208	tc-i386.c	FUNCTION_60	IF_2
i386_parse_name	IF,1:DO,0:ELSE,0:WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,0	88
0x400ef50	            0x4155	                                push r13	     10328	tc-i386.c	FUNCTION_122
0x400ef52	            0x4154	                                push r12	     10328	tc-i386.c	FUNCTION_122
0x400ef54	          0x4989f5	                            mov r13, rsi	     10328	tc-i386.c	FUNCTION_122
0x400ef57	              0x55	                                push rbp	     10328	tc-i386.c	FUNCTION_122
0x400ef58	              0x53	                                push rbx	     10328	tc-i386.c	FUNCTION_122
0x400ef59	      0xbe00000000	                              mov esi, 0	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x400ef5e	          0x4989fc	                            mov r12, rdi	     10328	tc-i386.c	FUNCTION_122
0x400ef61	          0x4889d5	                            mov rbp, rdx	     10328	tc-i386.c	FUNCTION_122
0x400ef64	        0x4883ec08	                              sub rsp, 8	     10328	tc-i386.c	FUNCTION_122
0x400ef68	           0xfb602	                   movzx eax, byte [rdx]	     10332	tc-i386.c	FUNCTION_122
0x400ef6b	    0x488b1d000000	            mov rbx, qword [0x0400ef72] 	     10330	tc-i386.c	FUNCTION_122
0x400ef72	            0x8803	                      mov byte [rbx], al	     10332	tc-i386.c	FUNCTION_122
0x400ef74	      0xe82743ffff	                 call sym.parse_register	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x400ef79	          0x4885c0	                           test rax, rax	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef7c	            0x7410	                            je 0x400ef8e	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef7e	    0x488b15000000	            mov rdx, qword [0x0400ef85] 	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef85	          0x4839d3	                            cmp rbx, rdx	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef88	     0xf86a2000000	                           jbe 0x400f030	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef8e	    0x8b0500000000	            mov eax, dword [0x0400ef94] 	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x400ef94	    0x48891d000000	            mov qword [0x0400ef9b], rbx 	     10342	tc-i386.c	FUNCTION_122
0x400ef9b	          0xc60300	                       mov byte [rbx], 0	     10343	tc-i386.c	FUNCTION_122
0x400ef9e	            0x85c0	                           test eax, eax	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x400efa0	            0x750e	                           jne 0x400efb0	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x400efa2	        0x4883c408	                              add rsp, 8	     10345	tc-i386.c	FUNCTION_122
0x400efa6	              0x5b	                                 pop rbx	     10345	tc-i386.c	FUNCTION_122
0x400efa7	              0x5d	                                 pop rbp	     10345	tc-i386.c	FUNCTION_122
0x400efa8	            0x415c	                                 pop r12	     10345	tc-i386.c	FUNCTION_122
0x400efaa	            0x415d	                                 pop r13	     10345	tc-i386.c	FUNCTION_122
0x400efac	              0xc3	                                     ret	     10345	tc-i386.c	FUNCTION_122
0x400efad	           0xf1f00	                         nop dword [rax]	     10345	tc-i386.c	FUNCTION_122
0x400efb0	      0x41803c2424	                    cmp byte [r12], 0x24	       201	tc-i386-intel.c	FUNCTION_157	IF_1	CALL_1
0x400efb5	     0xf84bd000000	                            je 0x400f078	       201	tc-i386-intel.c	FUNCTION_157	IF_1	CALL_1
0x400efbb	      0xbb00000000	                              mov ebx, 0	       201	tc-i386-intel.c	FUNCTION_157	IF_1	CALL_1
0x400efc0	            0x31ed	                            xor ebp, ebp	     10328	tc-i386.c	FUNCTION_122
0x400efc2	      0xbf00000000	                              mov edi, 0	     10328	tc-i386.c	FUNCTION_122
0x400efc7	            0xeb1b	                           jmp 0x400efe4	     10328	tc-i386.c	FUNCTION_122
0x400efc9	     0xf1f80000000	                         nop dword [rax]	     10328	tc-i386.c	FUNCTION_122
0x400efd0	        0x4883c318	                           add rbx, 0x18	     10328	tc-i386.c	FUNCTION_122
0x400efd4	        0x488b7be8	             mov rdi, qword [rbx - 0x18]	       207	tc-i386-intel.c	FUNCTION_157	FOR_1
0x400efd8	          0x83c501	                              add ebp, 1	       207	tc-i386-intel.c	FUNCTION_157	FOR_1
0x400efdb	          0x4885ff	                           test rdi, rdi	       207	tc-i386-intel.c	FUNCTION_157	FOR_1
0x400efde	     0xf84bc000000	                            je 0x400f0a0	       207	tc-i386-intel.c	FUNCTION_157	FOR_1
0x400efe4	          0x4c89e6	                            mov rsi, r12	       208	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2	CALL_3
0x400efe7	      0xe800000000	                          call 0x400efec	       208	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2	CALL_3
0x400efec	            0x85c0	                           test eax, eax	       208	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2	CALL_3
0x400efee	            0x75e0	                           jne 0x400efd0	       208	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2	CALL_3
0x400eff0	    0x8b0500000000	            mov eax, dword [0x0400eff6] 	       211	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400eff6	      0x488d546d00	                  lea rdx, [rbp + rbp*2]	       211	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400effb	      0x41c6451802	                mov byte [r13 + 0x18], 2	       210	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400f000	    0x49c745000000	                      mov qword [r13], 0	       212	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400f008	    0x49c745080000	                  mov qword [r13 + 8], 0	       213	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400f010	        0x488d0490	                  lea rax, [rax + rdx*4]	       211	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400f014	     0xfb784000000	             movzx eax, word [rax + rax]	       211	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400f01c	        0x49894510	             mov qword [r13 + 0x10], rax	       211	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400f020	        0x4883c408	                              add rsp, 8	     10345	tc-i386.c	FUNCTION_122
0x400f024	      0xb801000000	                              mov eax, 1	       214	tc-i386-intel.c	FUNCTION_157	FOR_1	IF_2
0x400f029	              0x5b	                                 pop rbx	     10345	tc-i386.c	FUNCTION_122
0x400f02a	              0x5d	                                 pop rbp	     10345	tc-i386.c	FUNCTION_122
0x400f02b	            0x415c	                                 pop r12	     10345	tc-i386.c	FUNCTION_122
0x400f02d	            0x415d	                                 pop r13	     10345	tc-i386.c	FUNCTION_122
0x400f02f	              0xc3	                                     ret	     10345	tc-i386.c	FUNCTION_122
0x400f030	           0xfb612	                   movzx edx, byte [rdx]	     10336	tc-i386.c	FUNCTION_122	IF_1
0x400f033	    0x482d00000000	                              sub rax, 0	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400f039	        0x48c1f803	                              sar rax, 3	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400f03d	          0x885500	                      mov byte [rbp], dl	     10336	tc-i386.c	FUNCTION_122	IF_1
0x400f040	    0x488b15000000	            mov rdx, qword [0x0400f047] 	     10337	tc-i386.c	FUNCTION_122	IF_1
0x400f047	          0xc60200	                       mov byte [rdx], 0	     10337	tc-i386.c	FUNCTION_122	IF_1
0x400f04a	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400f054	      0x41c6451805	                mov byte [r13 + 0x18], 5	     10338	tc-i386.c	FUNCTION_122	IF_1
0x400f059	        0x480fafc2	                           imul rax, rdx	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400f05d	        0x49894510	             mov qword [r13 + 0x10], rax	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400f061	        0x4883c408	                              add rsp, 8	     10345	tc-i386.c	FUNCTION_122
0x400f065	      0xb801000000	                              mov eax, 1	     10340	tc-i386.c	FUNCTION_122	IF_1
0x400f06a	              0x5b	                                 pop rbx	     10345	tc-i386.c	FUNCTION_122
0x400f06b	              0x5d	                                 pop rbp	     10345	tc-i386.c	FUNCTION_122
0x400f06c	            0x415c	                                 pop r12	     10345	tc-i386.c	FUNCTION_122
0x400f06e	            0x415d	                                 pop r13	     10345	tc-i386.c	FUNCTION_122
0x400f070	              0xc3	                                     ret	     10345	tc-i386.c	FUNCTION_122
0x400f071	     0xf1f80000000	                         nop dword [rax]	     10345	tc-i386.c	FUNCTION_122
0x400f078	    0x41807c240100	                   cmp byte [r12 + 1], 0	       201	tc-i386-intel.c	FUNCTION_157	IF_1	CALL_1
0x400f07e	     0xf8537ffffff	                           jne 0x400efbb	       201	tc-i386-intel.c	FUNCTION_157	IF_1	CALL_1
0x400f084	          0x4c89ef	                            mov rdi, r13	       203	tc-i386-intel.c	FUNCTION_157	IF_1	CALL_2
0x400f087	      0xe800000000	                          call 0x400f08c	       203	tc-i386-intel.c	FUNCTION_157	IF_1	CALL_2
0x400f08c	      0xb801000000	                              mov eax, 1	       204	tc-i386-intel.c	FUNCTION_157	IF_1
0x400f091	      0xe90cffffff	                           jmp 0x400efa2	       204	tc-i386-intel.c	FUNCTION_157	IF_1
0x400f096	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       204	tc-i386-intel.c	FUNCTION_157	IF_1
0x400f0a0	            0x31c0	                            xor eax, eax	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x400f0a2	      0xe9fbfeffff	                           jmp 0x400efa2	     10344	tc-i386.c	FUNCTION_122	CALL_2
show_arch	IF,6:DO,0:ELSE,3:WHILE,0:CALL,4:functions,0:SWITCH,0:FOR,2	83
0x40059e0	            0x4156	                                push r14	     10895	tc-i386.c	FUNCTION_126
0x40059e2	            0x4155	                                push r13	     10895	tc-i386.c	FUNCTION_126
0x40059e4	          0x4189f6	                           mov r14d, esi	     10895	tc-i386.c	FUNCTION_126
0x40059e7	            0x4154	                                push r12	     10895	tc-i386.c	FUNCTION_126
0x40059e9	              0x55	                                push rbp	     10895	tc-i386.c	FUNCTION_126
0x40059ea	          0x4189d5	                           mov r13d, edx	     10895	tc-i386.c	FUNCTION_126
0x40059ed	              0x53	                                push rbx	     10895	tc-i386.c	FUNCTION_126
0x40059ee	          0x4989fc	                            mov r12, rdi	     10895	tc-i386.c	FUNCTION_126
0x40059f1	      0xbb00000000	                              mov ebx, 0	     10895	tc-i386.c	FUNCTION_126
0x40059f6	            0x31d2	                            xor edx, edx	     10906	tc-i386.c	FUNCTION_126
0x40059f8	            0x31ed	                            xor ebp, ebp	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40059fa	        0x4883ec10	                           sub rsp, 0x10	     10895	tc-i386.c	FUNCTION_126
0x40059fe	    0x64488b042528	                mov rax, qword fs:[0x28]	     10895	tc-i386.c	FUNCTION_126
0x4005a07	      0x4889442408	                mov qword [rsp + 8], rax	     10895	tc-i386.c	FUNCTION_126
0x4005a0c	            0x31c0	                            xor eax, eax	     10895	tc-i386.c	FUNCTION_126
0x4005a0e	    0xc74424043600	               mov dword [rsp + 4], 0x36	     10906	tc-i386.c	FUNCTION_126
0x4005a16	      0xb800000000	                              mov eax, 0	     10905	tc-i386.c	FUNCTION_126
0x4005a1b	            0xeb3f	                           jmp 0x4005a5c	     10905	tc-i386.c	FUNCTION_126
0x4005a1d	           0xf1f00	                         nop dword [rax]	     10905	tc-i386.c	FUNCTION_126
0x4005a20	          0x4585f6	                         test r14d, r14d	     10926	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x4005a23	            0x7525	                           jne 0x4005a4a	     10926	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x4005a25	          0x4585ed	                         test r13d, r13d	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4005a28	            0x7410	                            je 0x4005a3a	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4005a2a	            0x89ea	                            mov edx, ebp	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4005a2c	        0x488d1492	                  lea rdx, [rdx + rdx*4]	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4005a30	    0xf604d5000000	                    test byte [rdx*8], 4	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4005a38	            0x7410	                            je 0x4005a4a	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4005a3a	      0x488d542404	                      lea rdx, [rsp + 4]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4005a3f	          0x4889c6	                            mov rsi, rax	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4005a42	          0x4c89e7	                            mov rdi, r12	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4005a45	      0xe8d6feffff	    call sym.output_message.constprop.18	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x4005a4a	          0x83c501	                              add ebp, 1	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x4005a4d	    0x4881fb000000	                              cmp rbx, 0	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x4005a54	            0x742a	                            je 0x4005a80	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x4005a56	            0x8b13	                    mov edx, dword [rbx]	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x4005a58	        0x4883c328	                           add rbx, 0x28	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x4005a5c	            0x85d2	                           test edx, edx	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4005a5e	            0x75ea	                           jne 0x4005a4a	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4005a60	        0x488b4bb8	             mov rcx, qword [rbx - 0x48]	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4005a64	        0x448b43c0	             mov r8d, dword [rbx - 0x40]	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x4005a68	          0x80392e	                    cmp byte [rcx], 0x2e	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x4005a6b	            0x75b3	                           jne 0x4005a20	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x4005a6d	          0x4585f6	                         test r14d, r14d	     10918	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4005a70	            0x74d8	                            je 0x4005a4a	     10918	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4005a72	        0x4883c101	                              add rcx, 1	     10920	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4005a76	        0x4183e801	                              sub r8d, 1	     10921	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4005a7a	            0xebbe	                           jmp 0x4005a3a	     10921	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4005a7c	         0xf1f4000	                         nop dword [rax]	     10921	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4005a80	          0x4585f6	                         test r14d, r14d	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005a83	            0x743b	                            je 0x4005ac0	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005a85	      0xbb00000000	                              mov ebx, 0	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005a8a	      0xbd00000000	                              mov ebp, 0	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005a8f	    0x41b804000000	                              mov r8d, 4	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005a95	      0xb900000000	                              mov ecx, 0	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005a9a	            0xeb0f	                           jmp 0x4005aab	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005a9c	         0xf1f4000	                         nop dword [rax]	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005aa0	          0x488b0b	                    mov rcx, qword [rbx]	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005aa3	        0x448b4308	                mov r8d, dword [rbx + 8]	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005aa7	        0x4883c320	                           add rbx, 0x20	     10941	tc-i386.c	FUNCTION_126	IF_6
0x4005aab	      0x488d542404	                      lea rdx, [rsp + 4]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4005ab0	          0x4889c6	                            mov rsi, rax	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4005ab3	          0x4c89e7	                            mov rdi, r12	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4005ab6	      0xe865feffff	    call sym.output_message.constprop.18	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4005abb	          0x4839dd	                            cmp rbp, rbx	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4005abe	            0x75e0	                           jne 0x4005aa0	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4005ac0	          0xc60000	                       mov byte [rax], 0	     10950	tc-i386.c	FUNCTION_126
0x4005ac3	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_260
0x4005ac8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4005aca	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_260
0x4005acf	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4005ad4	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_260
0x4005ad7	      0xe800000000	                          call 0x4005adc	        97	stdio2.h	CALL_260
0x4005adc	      0x488b442408	                mov rax, qword [rsp + 8]	     10952	tc-i386.c	FUNCTION_126
0x4005ae1	    0x644833042528	                xor rax, qword fs:[0x28]	     10952	tc-i386.c	FUNCTION_126
0x4005aea	            0x750d	                           jne 0x4005af9	     10952	tc-i386.c	FUNCTION_126
0x4005aec	        0x4883c410	                           add rsp, 0x10	     10952	tc-i386.c	FUNCTION_126
0x4005af0	              0x5b	                                 pop rbx	     10952	tc-i386.c	FUNCTION_126
0x4005af1	              0x5d	                                 pop rbp	     10952	tc-i386.c	FUNCTION_126
0x4005af2	            0x415c	                                 pop r12	     10952	tc-i386.c	FUNCTION_126
0x4005af4	            0x415d	                                 pop r13	     10952	tc-i386.c	FUNCTION_126
0x4005af6	            0x415e	                                 pop r14	     10952	tc-i386.c	FUNCTION_126
0x4005af8	              0xc3	                                     ret	     10952	tc-i386.c	FUNCTION_126
0x4005af9	      0xe800000000	                          call 0x4005afe	     10952	tc-i386.c	FUNCTION_126
set_intel_syntax	IF,4:DO,0:ELSE,3:WHILE,0:CALL,10:functions,0:SWITCH,0:FOR,0	111
0x4000790	            0x4154	                                push r12	      2452	tc-i386.c	FUNCTION_44
0x4000792	              0x55	                                push rbp	      2452	tc-i386.c	FUNCTION_44
0x4000793	              0x53	                                push rbx	      2452	tc-i386.c	FUNCTION_44
0x4000794	            0x89fb	                            mov ebx, edi	      2452	tc-i386.c	FUNCTION_44
0x4000796	        0x4883ec10	                           sub rsp, 0x10	      2452	tc-i386.c	FUNCTION_44
0x400079a	    0x488b15000000	            mov rdx, qword [0x040007a1] 	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40007a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2452	tc-i386.c	FUNCTION_44
0x40007aa	      0x4889442408	                mov qword [rsp + 8], rax	      2452	tc-i386.c	FUNCTION_44
0x40007af	            0x31c0	                            xor eax, eax	      2452	tc-i386.c	FUNCTION_44
0x40007b1	           0xfb602	                   movzx eax, byte [rdx]	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40007b4	            0x3c20	                            cmp al, 0x20	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40007b6	     0xf8444010000	                            je 0x4000900	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40007bc	    0x80b800000000	                       cmp byte [rax], 0	      2457	tc-i386.c	FUNCTION_44	IF_1
0x40007c3	     0xf84df000000	                            je 0x40008a8	      2457	tc-i386.c	FUNCTION_44	IF_1
0x40007c9	      0xe800000000	                          call 0x40007ce	      2470	tc-i386.c	FUNCTION_44	CALL_8
0x40007ce	            0x31c0	                            xor eax, eax	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x40007d0	            0x85db	                           test ebx, ebx	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x40007d2	    0x891d00000000	            mov dword [0x040007d8], ebx 	      2472	tc-i386.c	FUNCTION_44
0x40007d8	     0xf8592000000	                           jne 0x4000870	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x40007de	    0x890500000000	            mov dword [0x040007e4], eax 	      2475	tc-i386.c	FUNCTION_44	IF_4
0x40007e4	          0x83fb01	                              cmp ebx, 1	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x40007e7	      0xbf1f000000	                           mov edi, 0x1f	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x40007ec	            0x19f6	                            sbb esi, esi	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x40007ee	            0xf7d6	                                 not esi	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x40007f0	          0x83e60a	                            and esi, 0xa	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x40007f3	      0xe800000000	                          call 0x40007f8	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x40007f8	    0x8b0d00000000	            mov ecx, dword [0x040007fe] 	      2482	tc-i386.c	FUNCTION_44
0x40007fe	            0x85c9	                           test ecx, ecx	      2482	tc-i386.c	FUNCTION_44
0x4000800	            0x7426	                            je 0x4000828	      2482	tc-i386.c	FUNCTION_44
0x4000802	    0x8b1500000000	            mov edx, dword [0x04000808] 	      2482	tc-i386.c	FUNCTION_44
0x4000808	            0x85d2	                           test edx, edx	      2482	tc-i386.c	FUNCTION_44
0x400080a	     0xf8480000000	                            je 0x4000890	      2482	tc-i386.c	FUNCTION_44
0x4000810	    0xc60500000000	            mov byte [0x04000817], 0x25 	      2482	tc-i386.c	FUNCTION_44
0x4000817	    0xc60500000000	            mov byte [0x0400081e], 0x24 	      2483	tc-i386.c	FUNCTION_44
0x400081e	      0xb800000000	                              mov eax, 0	      2484	tc-i386.c	FUNCTION_44
0x4000823	            0xeb27	                           jmp 0x400084c	      2484	tc-i386.c	FUNCTION_44
0x4000825	           0xf1f00	                         nop dword [rax]	      2484	tc-i386.c	FUNCTION_44
0x4000828	    0x8b0500000000	            mov eax, dword [0x0400082e] 	      2484	tc-i386.c	FUNCTION_44
0x400082e	      0xba00000000	                              mov edx, 0	      2484	tc-i386.c	FUNCTION_44
0x4000833	    0xc60500000000	                mov byte [0x0400083a], 0	      2482	tc-i386.c	FUNCTION_44
0x400083a	    0xc60500000000	                mov byte [0x04000841], 0	      2483	tc-i386.c	FUNCTION_44
0x4000841	            0x85c0	                           test eax, eax	      2484	tc-i386.c	FUNCTION_44
0x4000843	      0xb800000000	                              mov eax, 0	      2484	tc-i386.c	FUNCTION_44
0x4000848	        0x480f45c2	                         cmovne rax, rdx	      2484	tc-i386.c	FUNCTION_44
0x400084c	    0x488905000000	            mov qword [0x04000853], rax 	      2484	tc-i386.c	FUNCTION_44
0x4000853	      0x488b442408	                mov rax, qword [rsp + 8]	      2485	tc-i386.c	FUNCTION_44
0x4000858	    0x644833042528	                xor rax, qword fs:[0x28]	      2485	tc-i386.c	FUNCTION_44
0x4000861	     0xf85f8000000	                           jne 0x400095f	      2485	tc-i386.c	FUNCTION_44
0x4000867	        0x4883c410	                           add rsp, 0x10	      2485	tc-i386.c	FUNCTION_44
0x400086b	              0x5b	                                 pop rbx	      2485	tc-i386.c	FUNCTION_44
0x400086c	              0x5d	                                 pop rbp	      2485	tc-i386.c	FUNCTION_44
0x400086d	            0x415c	                                 pop r12	      2485	tc-i386.c	FUNCTION_44
0x400086f	              0xc3	                                     ret	      2485	tc-i386.c	FUNCTION_44
0x4000870	    0x488b05000000	            mov rax, qword [0x04000877] 	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4000877	        0x488b4008	                mov rax, qword [rax + 8]	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x400087b	        0x80781c00	                cmp byte [rax + 0x1c], 0	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x400087f	           0xf95c0	                                setne al	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4000882	           0xfb6c0	                           movzx eax, al	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4000885	      0xe954ffffff	                           jmp 0x40007de	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x400088a	    0x660f1f440000	                    nop word [rax + rax]	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4000890	    0xc60500000000	                mov byte [0x04000897], 0	      2482	tc-i386.c	FUNCTION_44
0x4000897	    0xc60500000000	            mov byte [0x0400089e], 0x24 	      2483	tc-i386.c	FUNCTION_44
0x400089e	      0xb800000000	                              mov eax, 0	      2484	tc-i386.c	FUNCTION_44
0x40008a3	            0xeba7	                           jmp 0x400084c	      2484	tc-i386.c	FUNCTION_44
0x40008a5	           0xf1f00	                         nop dword [rax]	      2484	tc-i386.c	FUNCTION_44
0x40008a8	          0x4889e7	                            mov rdi, rsp	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x40008ab	      0xe800000000	                          call 0x40008b0	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x40008b0	          0x4189c4	                           mov r12d, eax	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x40008b3	        0x488b0424	                    mov rax, qword [rsp]	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008b7	      0xbf00000000	                              mov edi, 0	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008bc	      0xb907000000	                              mov ecx, 7	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008c1	          0x4889c6	                            mov rsi, rax	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008c4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008c6	        0x400f97c5	                                seta bpl	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008ca	           0xf92c2	                                 setb dl	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008cd	            0x29d5	                            sub ebp, edx	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008cf	        0x400fbeed	                          movsx ebp, bpl	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008d3	            0x85ed	                           test ebp, ebp	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008d5	            0x7541	                           jne 0x4000918	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40008d7	        0x410fbefc	                         movsx edi, r12b	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x40008db	      0xe800000000	                          call 0x40008e0	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x40008e0	      0xe800000000	                          call 0x40008e5	      2470	tc-i386.c	FUNCTION_44	CALL_8
0x40008e5	    0x891d00000000	            mov dword [0x040008eb], ebx 	      2472	tc-i386.c	FUNCTION_44
0x40008eb	    0x892d00000000	            mov dword [0x040008f1], ebp 	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x40008f1	      0xe9eefeffff	                           jmp 0x40007e4	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x40008f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4000900	        0x488d4201	                      lea rax, [rdx + 1]	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4000904	    0x488905000000	            mov qword [0x0400090b], rax 	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x400090b	         0xfb64201	               movzx eax, byte [rdx + 1]	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x400090f	      0xe9a8feffff	                           jmp 0x40007bc	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4000914	         0xf1f4000	                         nop dword [rax]	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x4000918	          0x4889c6	                            mov rsi, rax	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x400091b	      0xbf00000000	                              mov edi, 0	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4000920	      0xb909000000	                              mov ecx, 9	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4000925	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4000927	      0xbd01000000	                              mov ebp, 1	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x400092c	           0xf97c2	                                 seta dl	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x400092f	           0xf92c0	                                 setb al	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4000932	            0x38c2	                              cmp dl, al	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4000934	            0x74a1	                            je 0x40008d7	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4000936	      0xba05000000	                              mov edx, 5	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x400093b	      0xbe00000000	                              mov esi, 0	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4000940	            0x31ff	                            xor edi, edi	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4000942	      0xe800000000	                          call 0x4000947	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4000947	          0x4889c7	                            mov rdi, rax	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x400094a	            0x31c0	                            xor eax, eax	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x400094c	      0xe800000000	                          call 0x4000951	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4000951	        0x410fbefc	                         movsx edi, r12b	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4000955	      0xe800000000	                          call 0x400095a	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x400095a	      0xe96afeffff	                           jmp 0x40007c9	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x400095f	      0xe800000000	                          call 0x4000964	      2485	tc-i386.c	FUNCTION_44
reloc	IF,13:DO,0:ELSE,6:WHILE,0:CALL,19:functions,0:SWITCH,4:FOR,0	225
0x4003970	          0x83f947	                           cmp ecx, 0x47	      3088	tc-i386.c	FUNCTION_59	IF_1
0x4003973	            0x4156	                                push r14	      3087	tc-i386.c	FUNCTION_59
0x4003975	          0x4189d6	                           mov r14d, edx	      3087	tc-i386.c	FUNCTION_59
0x4003978	            0x4155	                                push r13	      3087	tc-i386.c	FUNCTION_59
0x400397a	          0x4189f5	                           mov r13d, esi	      3087	tc-i386.c	FUNCTION_59
0x400397d	            0x4154	                                push r12	      3087	tc-i386.c	FUNCTION_59
0x400397f	              0x55	                                push rbp	      3087	tc-i386.c	FUNCTION_59
0x4003980	            0x89fd	                            mov ebp, edi	      3087	tc-i386.c	FUNCTION_59
0x4003982	              0x53	                                push rbx	      3087	tc-i386.c	FUNCTION_59
0x4003983	     0xf8487000000	                            je 0x4003a10	      3088	tc-i386.c	FUNCTION_59	IF_1
0x4003989	          0x83ff08	                              cmp edi, 8	      3092	tc-i386.c	FUNCTION_59	IF_1	IF_2
0x400398c	            0x89cb	                            mov ebx, ecx	      3092	tc-i386.c	FUNCTION_59	IF_1	IF_2
0x400398e	     0xf84d4000000	                            je 0x4003a68	      3092	tc-i386.c	FUNCTION_59	IF_1	IF_2
0x4003994	          0x83f924	                           cmp ecx, 0x24	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4003997	     0xf842b010000	                            je 0x4003ac8	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x400399d	          0x83fd04	                              cmp ebp, 4	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40039a0	     0xf845a010000	                            je 0x4003b00	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40039a6	    0x488b3d000000	            mov rdi, qword [0x040039ad] 	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40039ad	            0x89de	                            mov esi, ebx	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40039af	      0xe800000000	                          call 0x40039b4	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40039b4	          0x4885c0	                           test rax, rax	      3138	tc-i386.c	FUNCTION_59	IF_1	IF_7
0x40039b7	          0x4989c4	                            mov r12, rax	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40039ba	     0xf8460010000	                            je 0x4003b20	      3138	tc-i386.c	FUNCTION_59	IF_1	IF_7
0x40039c0	          0x4889c7	                            mov rdi, rax	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x40039c3	      0xe800000000	                          call 0x40039c8	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x40039c8	            0x39c5	                            cmp ebp, eax	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x40039ca	     0xf8480010000	                            je 0x4003b50	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x40039d0	          0x4c89e7	                            mov rdi, r12	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039d3	      0xe800000000	                          call 0x40039d8	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039d8	      0xba05000000	                              mov edx, 5	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039dd	            0x89c3	                            mov ebx, eax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039df	      0xbe00000000	                              mov esi, 0	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039e4	            0x31ff	                            xor edi, edi	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039e6	      0xe800000000	                          call 0x40039eb	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039eb	            0x89ea	                            mov edx, ebp	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039ed	          0x4889c7	                            mov rdi, rax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039f0	            0x89de	                            mov esi, ebx	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039f2	            0x31c0	                            xor eax, eax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039f4	      0xe800000000	                          call 0x40039f9	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x40039f9	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x40039fe	              0x5b	                                 pop rbx	      3189	tc-i386.c	FUNCTION_59
0x40039ff	              0x5d	                                 pop rbp	      3189	tc-i386.c	FUNCTION_59
0x4003a00	            0x415c	                                 pop r12	      3189	tc-i386.c	FUNCTION_59
0x4003a02	            0x415d	                                 pop r13	      3189	tc-i386.c	FUNCTION_59
0x4003a04	            0x415e	                                 pop r14	      3189	tc-i386.c	FUNCTION_59
0x4003a06	              0xc3	                                     ret	      3189	tc-i386.c	FUNCTION_59
0x4003a07	    0x660f1f840000	                    nop word [rax + rax]	      3189	tc-i386.c	FUNCTION_59
0x4003a10	            0x85f6	                           test esi, esi	      3156	tc-i386.c	FUNCTION_59	ELSE_4	IF_11
0x4003a12	            0x746c	                            je 0x4003a80	      3156	tc-i386.c	FUNCTION_59	ELSE_4	IF_11
0x4003a14	            0x85d2	                           test edx, edx	      3158	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	IF_12
0x4003a16	     0xf845c020000	                            je 0x4003c78	      3158	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	IF_12
0x4003a1c	          0x83fd02	                              cmp ebp, 2	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a1f	     0xf84ab020000	                            je 0x4003cd0	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a25	     0xf8635020000	                           jbe 0x4003c60	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a2b	          0x83fd04	                              cmp ebp, 4	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a2e	      0xb809000000	                              mov eax, 9	      3164	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a33	            0x74c9	                            je 0x40039fe	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a35	          0x83fd08	                              cmp ebp, 8	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a38	      0xb808000000	                              mov eax, 8	      3165	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a3d	            0x74bf	                            je 0x40039fe	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003a3f	      0xba05000000	                              mov edx, 5	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a44	      0xbe00000000	                              mov esi, 0	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a49	            0x31ff	                            xor edi, edi	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a4b	      0xe800000000	                          call 0x4003a50	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a50	            0x89ee	                            mov esi, ebp	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a52	          0x4889c7	                            mov rdi, rax	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a55	            0x31c0	                            xor eax, eax	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a57	      0xe800000000	                          call 0x4003a5c	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4003a5c	      0xb847000000	                           mov eax, 0x47	      3188	tc-i386.c	FUNCTION_59
0x4003a61	            0xeb9b	                           jmp 0x40039fe	      3188	tc-i386.c	FUNCTION_59
0x4003a63	       0xf1f440000	                   nop dword [rax + rax]	      3188	tc-i386.c	FUNCTION_59
0x4003a68	    0x8d8183feffff	                  lea eax, [rcx - 0x17d]	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003a6e	          0x83f816	                           cmp eax, 0x16	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003a71	     0xf8799010000	                            ja 0x4003c10	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003a77	    0xff24c5000000	                       jmp qword [rax*8]	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003a7e	            0x6690	                                     nop	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003a80	            0x85d2	                           test edx, edx	      3171	tc-i386.c	FUNCTION_59	ELSE_5	IF_13
0x4003a82	     0xf8e18020000	                           jle 0x4003ca0	      3171	tc-i386.c	FUNCTION_59	ELSE_5	IF_13
0x4003a88	          0x83ff04	                              cmp edi, 4	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4003a8b	      0xb884010000	                          mov eax, 0x184	      3174	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4003a90	     0xf8468ffffff	                            je 0x40039fe	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4003a96	      0xbb00000000	                              mov ebx, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003a9b	      0xba05000000	                              mov edx, 5	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003aa0	      0xbe00000000	                              mov esi, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003aa5	            0x31ff	                            xor edi, edi	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003aa7	      0xe800000000	                          call 0x4003aac	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003aac	            0x89ea	                            mov edx, ebp	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003aae	          0x4889c7	                            mov rdi, rax	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003ab1	          0x4889de	                            mov rsi, rbx	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003ab4	            0x31c0	                            xor eax, eax	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003ab6	      0xe800000000	                          call 0x4003abb	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003abb	      0xb847000000	                           mov eax, 0x47	      3188	tc-i386.c	FUNCTION_59
0x4003ac0	      0xe939ffffff	                           jmp 0x40039fe	      3188	tc-i386.c	FUNCTION_59
0x4003ac5	           0xf1f00	                         nop dword [rax]	      3188	tc-i386.c	FUNCTION_59
0x4003ac8	          0x4585ed	                         test r13d, r13d	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4003acb	     0xf84ccfeffff	                            je 0x400399d	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4003ad1	      0xba05000000	                              mov edx, 5	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4003ad6	      0xbe00000000	                              mov esi, 0	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4003adb	            0x31ff	                            xor edi, edi	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003add	      0xe800000000	                          call 0x4003ae2	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003ae2	          0x4889c7	                            mov rdi, rax	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003ae5	            0x31c0	                            xor eax, eax	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003ae7	      0xe800000000	                          call 0x4003aec	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003aec	              0x5b	                                 pop rbx	      3189	tc-i386.c	FUNCTION_59
0x4003aed	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4003af2	              0x5d	                                 pop rbp	      3189	tc-i386.c	FUNCTION_59
0x4003af3	            0x415c	                                 pop r12	      3189	tc-i386.c	FUNCTION_59
0x4003af5	            0x415d	                                 pop r13	      3189	tc-i386.c	FUNCTION_59
0x4003af7	            0x415e	                                 pop r14	      3189	tc-i386.c	FUNCTION_59
0x4003af9	              0xc3	                                     ret	      3189	tc-i386.c	FUNCTION_59
0x4003afa	    0x660f1f440000	                    nop word [rax + rax]	      3189	tc-i386.c	FUNCTION_59
0x4003b00	    0x833d00000000	               cmp dword [0x04003b07], 2	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003b07	     0xf8433010000	                            je 0x4003c40	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003b0d	    0x41beffffffff	                    mov r14d, 0xffffffff	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003b13	      0xe98efeffff	                           jmp 0x40039a6	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003b18	     0xf1f84000000	                   nop dword [rax + rax]	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003b20	      0xba05000000	                              mov edx, 5	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b25	      0xbe00000000	                              mov esi, 0	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b2a	            0x31ff	                            xor edi, edi	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b2c	      0xe800000000	                          call 0x4003b31	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b31	            0x89de	                            mov esi, ebx	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b33	          0x4889c7	                            mov rdi, rax	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b36	            0x31c0	                            xor eax, eax	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b38	      0xe800000000	                          call 0x4003b3d	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4003b3d	              0x5b	                                 pop rbx	      3189	tc-i386.c	FUNCTION_59
0x4003b3e	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4003b43	              0x5d	                                 pop rbp	      3189	tc-i386.c	FUNCTION_59
0x4003b44	            0x415c	                                 pop r12	      3189	tc-i386.c	FUNCTION_59
0x4003b46	            0x415d	                                 pop r13	      3189	tc-i386.c	FUNCTION_59
0x4003b48	            0x415e	                                 pop r14	      3189	tc-i386.c	FUNCTION_59
0x4003b4a	              0xc3	                                     ret	      3189	tc-i386.c	FUNCTION_59
0x4003b4b	       0xf1f440000	                   nop dword [rax + rax]	      3189	tc-i386.c	FUNCTION_59
0x4003b50	          0x4585ed	                         test r13d, r13d	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b53	            0x7409	                            je 0x4003b5e	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b55	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b5a	            0x85c0	                           test eax, eax	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b5c	            0x7432	                            je 0x4003b90	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b5e	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b63	          0x83f802	                              cmp eax, 2	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b66	     0xf84c4000000	                            je 0x4003c30	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b6c	          0x4585f6	                         test r14d, r14d	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b6f	     0xf8ec4000000	                           jle 0x4003c39	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b75	          0x83f803	                              cmp eax, 3	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b78	     0xf85bb000000	                           jne 0x4003c39	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b7e	      0xba05000000	                              mov edx, 5	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b83	      0xbe00000000	                              mov esi, 0	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b88	      0xe94effffff	                           jmp 0x4003adb	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b8d	           0xf1f00	                         nop dword [rax]	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003b90	      0xba05000000	                              mov edx, 5	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b95	      0xbe00000000	                              mov esi, 0	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b9a	      0xe93cffffff	                           jmp 0x4003adb	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003b9f	              0x90	                                     nop	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4003ba0	      0xb88f010000	                          mov eax, 0x18f	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003ba5	      0xe954feffff	                           jmp 0x40039fe	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003baa	    0x660f1f440000	                    nop word [rax + rax]	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bb0	      0xbb87010000	                          mov ebx, 0x187	      3111	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bb5	      0xe9ecfdffff	                           jmp 0x40039a6	      3111	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bba	    0x660f1f440000	                    nop word [rax + rax]	      3111	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bc0	      0xbb86010000	                          mov ebx, 0x186	      3114	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bc5	      0xe9dcfdffff	                           jmp 0x40039a6	      3115	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bca	    0x660f1f440000	                    nop word [rax + rax]	      3115	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bd0	      0xbb90010000	                          mov ebx, 0x190	      3108	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bd5	      0xe9ccfdffff	                           jmp 0x40039a6	      3108	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bda	    0x660f1f440000	                    nop word [rax + rax]	      3108	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003be0	      0xb892010000	                          mov eax, 0x192	      3099	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003be5	      0xe914feffff	                           jmp 0x40039fe	      3099	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bea	    0x660f1f440000	                    nop word [rax + rax]	      3099	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bf0	      0xbb91010000	                          mov ebx, 0x191	      3105	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bf5	      0xe9acfdffff	                           jmp 0x40039a6	      3105	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003bfa	    0x660f1f440000	                    nop word [rax + rax]	      3105	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003c00	      0xb893010000	                          mov eax, 0x193	      3102	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003c05	      0xe9f4fdffff	                           jmp 0x40039fe	      3102	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003c0a	    0x660f1f440000	                    nop word [rax + rax]	      3102	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4003c10	          0x83fb24	                           cmp ebx, 0x24	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4003c13	     0xf858dfdffff	                           jne 0x40039a6	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4003c19	          0x4585ed	                         test r13d, r13d	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4003c1c	      0xbb25000000	                           mov ebx, 0x25	      3124	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_4
0x4003c21	     0xf847ffdffff	                            je 0x40039a6	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4003c27	      0xe9a5feffff	                           jmp 0x4003ad1	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4003c2c	         0xf1f4000	                         nop dword [rax]	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4003c30	          0x4585f6	                         test r14d, r14d	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003c33	     0xf8445ffffff	                            je 0x4003b7e	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003c39	            0x89d8	                            mov eax, ebx	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003c3b	      0xe9befdffff	                           jmp 0x40039fe	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x4003c40	    0x8b1500000000	            mov edx, dword [0x04003c46] 	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003c46	      0xb8ffffffff	                     mov eax, 0xffffffff	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003c4b	            0x85d2	                           test edx, edx	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003c4d	        0x440f45f0	                        cmovne r14d, eax	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003c51	      0xe950fdffff	                           jmp 0x40039a6	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x4003c60	          0x83fd01	                              cmp ebp, 1	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003c63	      0xb80d000000	                            mov eax, 0xd	      3162	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003c68	     0xf8490fdffff	                            je 0x40039fe	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003c6e	      0xe9ccfdffff	                           jmp 0x4003a3f	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003c73	       0xf1f440000	                   nop dword [rax + rax]	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003c78	            0x31ff	                            xor edi, edi	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c7a	      0xba05000000	                              mov edx, 5	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c7f	      0xbe00000000	                              mov esi, 0	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c84	      0xe800000000	                          call 0x4003c89	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c89	          0x4889c7	                            mov rdi, rax	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c8c	            0x31c0	                            xor eax, eax	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c8e	      0xe800000000	                          call 0x4003c93	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c93	      0xe984fdffff	                           jmp 0x4003a1c	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003c98	     0xf1f84000000	                   nop dword [rax + rax]	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4003ca0	          0x83ff02	                              cmp edi, 2	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003ca3	            0x744b	                            je 0x4003cf0	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003ca5	            0x7639	                           jbe 0x4003ce0	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003ca7	          0x83ff04	                              cmp edi, 4	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003caa	      0xb802000000	                              mov eax, 2	      3181	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003caf	     0xf8449fdffff	                            je 0x40039fe	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003cb5	          0x83ff08	                              cmp edi, 8	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003cb8	      0xb801000000	                              mov eax, 1	      3182	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003cbd	     0xf843bfdffff	                            je 0x40039fe	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003cc3	      0xbb00000000	                              mov ebx, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003cc8	      0xe9cefdffff	                           jmp 0x4003a9b	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003ccd	           0xf1f00	                         nop dword [rax]	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4003cd0	      0xb80b000000	                            mov eax, 0xb	      3163	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003cd5	      0xe924fdffff	                           jmp 0x40039fe	      3163	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003cda	    0x660f1f440000	                    nop word [rax + rax]	      3163	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4003ce0	          0x83ff01	                              cmp edi, 1	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003ce3	      0xb807000000	                              mov eax, 7	      3179	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003ce8	     0xf8410fdffff	                            je 0x40039fe	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003cee	            0xebd3	                           jmp 0x4003cc3	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003cf0	      0xb805000000	                              mov eax, 5	      3180	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x4003cf5	      0xe904fdffff	                           jmp 0x40039fe	      3180	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
check_VecOperations	IF,19:DO,0:ELSE,9:WHILE,1:CALL,18:functions,0:SWITCH,0:FOR,0	179
0x40033b0	              0x55	                                push rbp	      8493	tc-i386.c	FUNCTION_102
0x40033b1	              0x53	                                push rbx	      8493	tc-i386.c	FUNCTION_102
0x40033b2	          0x4889f5	                            mov rbp, rsi	      8493	tc-i386.c	FUNCTION_102
0x40033b5	          0x4889fb	                            mov rbx, rdi	      8493	tc-i386.c	FUNCTION_102
0x40033b8	        0x4883ec18	                           sub rsp, 0x18	      8493	tc-i386.c	FUNCTION_102
0x40033bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      8493	tc-i386.c	FUNCTION_102
0x40033c5	      0x4889442408	                mov qword [rsp + 8], rax	      8493	tc-i386.c	FUNCTION_102
0x40033ca	            0x31c0	                            xor eax, eax	      8493	tc-i386.c	FUNCTION_102
0x40033cc	           0xfb607	                   movzx eax, byte [rdi]	      8493	tc-i386.c	FUNCTION_102
0x40033cf	            0x84c0	                             test al, al	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x40033d1	     0xf84c9000000	                            je 0x40034a0	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x40033d7	          0x4885ed	                           test rbp, rbp	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x40033da	            0x7409	                            je 0x40033e5	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x40033dc	          0x4839eb	                            cmp rbx, rbp	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x40033df	     0xf83bb000000	                           jae 0x40034a0	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x40033e5	            0x3c7b	                            cmp al, 0x7b	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x40033e7	     0xf8543020000	                           jne 0x4003630	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x40033ed	        0x488d4301	                      lea rax, [rbx + 1]	      8504	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x40033f1	      0xbf00000000	                              mov edi, 0	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x40033f6	      0xb903000000	                              mov ecx, 3	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x40033fb	          0x4889c6	                            mov rsi, rax	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x40033fe	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x4003400	     0xf85ea000000	                           jne 0x40034f0	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x4003406	    0x48833d000000	               cmp qword [0x0400340e], 0	      8511	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x400340e	     0xf852c020000	                           jne 0x4003640	      8511	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x4003414	         0xfb64304	               movzx eax, byte [rbx + 4]	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x4003418	        0x488d5304	                      lea rdx, [rbx + 4]	      8514	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400341c	            0x3c38	                            cmp al, 0x38	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400341e	     0xf846c010000	                            je 0x4003590	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x4003424	            0x3c34	                            cmp al, 0x34	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x4003426	     0xf8474010000	                            je 0x40035a0	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400342c	            0x3c32	                            cmp al, 0x32	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400342e	     0xf847c010000	                            je 0x40035b0	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x4003434	            0x3c31	                            cmp al, 0x31	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x4003436	     0xf8513020000	                           jne 0x400364f	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400343c	        0x807b0536	                cmp byte [rbx + 5], 0x36	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x4003440	     0xf8509020000	                           jne 0x400364f	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x4003446	        0x488d5305	                      lea rdx, [rbx + 5]	      8525	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400344a	      0xb810000000	                           mov eax, 0x10	      8524	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400344f	    0x890500000000	            mov dword [0x04003455], eax 	      8534	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x4003455	    0x8b0500000000	            mov eax, dword [0x0400345b] 	      8535	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400345b	        0x4883c201	                              add rdx, 1	      8532	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400345f	    0x48c705000000	               mov qword [0x0400346a], 0	      8536	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400346a	    0x890500000000	            mov dword [0x04003470], eax 	      8535	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x4003470	          0x803a7d	                    cmp byte [rdx], 0x7d	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x4003473	     0xf85d8000000	                           jne 0x4003551	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x4003479	         0xfb64201	               movzx eax, byte [rdx + 1]	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x400347d	        0x488d5a01	                      lea rbx, [rdx + 1]	      8615	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x4003481	            0x3c20	                            cmp al, 0x20	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4003483	     0xf8546ffffff	                           jne 0x40033cf	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4003489	         0xfb64202	               movzx eax, byte [rdx + 2]	      8619	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x400348d	        0x488d5a02	                      lea rbx, [rdx + 2]	      8620	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4003491	            0x84c0	                             test al, al	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x4003493	     0xf853effffff	                           jne 0x40033d7	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x4003499	     0xf1f80000000	                         nop dword [rax]	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x40034a0	    0x488b15000000	            mov rdx, qword [0x040034a7] 	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034a7	          0x4889d8	                            mov rax, rbx	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034aa	          0x4885d2	                           test rdx, rdx	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034ad	     0xf84be000000	                            je 0x4003571	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034b3	          0x8b4a08	                mov ecx, dword [rdx + 8]	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034b6	            0x85c9	                           test ecx, ecx	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034b8	     0xf84b3000000	                            je 0x4003571	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034be	        0x48833a00	                      cmp qword [rdx], 0	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034c2	     0xf85a9000000	                           jne 0x4003571	      8630	tc-i386.c	FUNCTION_102	IF_19
0x40034c8	      0xba05000000	                              mov edx, 5	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x40034cd	      0xbe00000000	                              mov esi, 0	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x40034d2	            0x31ff	                            xor edi, edi	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x40034d4	      0xe800000000	                          call 0x40034d9	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x40034d9	          0x4889c7	                            mov rdi, rax	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x40034dc	            0x31c0	                            xor eax, eax	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x40034de	      0xe800000000	                          call 0x40034e3	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x40034e3	            0x31c0	                            xor eax, eax	      8633	tc-i386.c	FUNCTION_102	IF_19
0x40034e5	      0xe987000000	                           jmp 0x4003571	      8633	tc-i386.c	FUNCTION_102	IF_19
0x40034ea	    0x660f1f440000	                    nop word [rax + rax]	      8633	tc-i386.c	FUNCTION_102	IF_19
0x40034f0	          0x4889e6	                            mov rsi, rsp	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40034f3	          0x4889c7	                            mov rdi, rax	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40034f6	      0xe8a5fdffff	                 call sym.parse_register	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40034fb	          0x4885c0	                           test rax, rax	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40034fe	     0xf84bc000000	                            je 0x40035c0	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x4003504	        0xf6400808	                  test byte [rax + 8], 8	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x4003508	     0xf8481010000	                            je 0x400368f	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x400350e	        0x80781100	                cmp byte [rax + 0x11], 0	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x4003512	     0xf8477010000	                            je 0x400368f	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x4003518	    0x488b15000000	            mov rdx, qword [0x0400351f] 	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400351f	          0x4885d2	                           test rdx, rdx	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4003522	     0xf84d8000000	                            je 0x4003600	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4003528	        0x48833a00	                      cmp qword [rdx], 0	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x400352c	     0xf850e010000	                           jne 0x4003640	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x4003532	          0x488902	                    mov qword [rdx], rax	      8561	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6
0x4003535	    0x8b0500000000	            mov eax, dword [0x0400353b] 	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400353b	          0x39420c	              cmp dword [rdx + 0xc], eax	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x400353e	     0xf857d010000	                           jne 0x40036c1	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x4003544	        0x488b1424	                    mov rdx, qword [rsp]	      8572	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8
0x4003548	          0x803a7d	                    cmp byte [rdx], 0x7d	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x400354b	     0xf8428ffffff	                            je 0x4003479	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x4003551	      0xba05000000	                              mov edx, 5	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4003556	      0xbe00000000	                              mov esi, 0	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x400355b	            0x31ff	                            xor edi, edi	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400355d	      0xe800000000	                          call 0x4003562	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4003562	          0x4889de	                            mov rsi, rbx	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4003565	          0x4889c7	                            mov rdi, rax	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4003568	            0x31c0	                            xor eax, eax	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400356a	      0xe800000000	                          call 0x400356f	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400356f	            0x31c0	                            xor eax, eax	      8530	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4
0x4003571	      0x488b742408	                mov rsi, qword [rsp + 8]	      8637	tc-i386.c	FUNCTION_102
0x4003576	    0x644833342528	                xor rsi, qword fs:[0x28]	      8637	tc-i386.c	FUNCTION_102
0x400357f	     0xf855a010000	                           jne 0x40036df	      8637	tc-i386.c	FUNCTION_102
0x4003585	        0x4883c418	                           add rsp, 0x18	      8637	tc-i386.c	FUNCTION_102
0x4003589	              0x5b	                                 pop rbx	      8637	tc-i386.c	FUNCTION_102
0x400358a	              0x5d	                                 pop rbp	      8637	tc-i386.c	FUNCTION_102
0x400358b	              0xc3	                                     ret	      8637	tc-i386.c	FUNCTION_102
0x400358c	         0xf1f4000	                         nop dword [rax]	      8637	tc-i386.c	FUNCTION_102
0x4003590	      0xb808000000	                              mov eax, 8	      8516	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x4003595	      0xe9b5feffff	                           jmp 0x400344f	      8516	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400359a	    0x660f1f440000	                    nop word [rax + rax]	      8516	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x40035a0	      0xb804000000	                              mov eax, 4	      8518	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x40035a5	      0xe9a5feffff	                           jmp 0x400344f	      8518	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x40035aa	    0x660f1f440000	                    nop word [rax + rax]	      8518	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x40035b0	      0xb802000000	                              mov eax, 2	      8520	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x40035b5	      0xe995feffff	                           jmp 0x400344f	      8520	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x40035ba	    0x660f1f440000	                    nop word [rax + rax]	      8520	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x40035c0	        0x807b017a	                cmp byte [rbx + 1], 0x7a	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x40035c4	            0x756a	                           jne 0x4003630	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x40035c6	    0x488b05000000	            mov rax, qword [0x040035cd] 	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x40035cd	          0x4885c0	                           test rax, rax	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x40035d0	     0xf8488000000	                            je 0x400365e	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x40035d6	          0x8b7008	                mov esi, dword [rax + 8]	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x40035d9	            0x85f6	                           test esi, esi	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x40035db	            0x7563	                           jne 0x4003640	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x40035dd	    0x8b3d00000000	            mov edi, dword [0x040035e3] 	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x40035e3	          0x39780c	              cmp dword [rax + 0xc], edi	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x40035e6	    0xc74008010000	                  mov dword [rax + 8], 1	      8593	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8
0x40035ed	     0xf85dd000000	                           jne 0x40036d0	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x40035f3	        0x488d5302	                      lea rdx, [rbx + 2]	      8605	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x40035f7	      0xe974feffff	                           jmp 0x4003470	      8605	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x40035fc	         0xf1f4000	                         nop dword [rax]	      8605	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x4003600	    0x488905000000	            mov qword [0x04003607], rax 	      8551	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4003607	    0x8b0500000000	            mov eax, dword [0x0400360d] 	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400360d	    0xc70500000000	               mov dword [0x04003617], 0	      8552	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4003617	    0x48c705000000	               mov qword [0x04003622], 0	      8554	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4003622	    0x890500000000	            mov dword [0x04003628], eax 	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4003628	      0xe917ffffff	                           jmp 0x4003544	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x400362d	           0xf1f00	                         nop dword [rax]	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4003630	      0xba05000000	                              mov edx, 5	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4003635	      0xbe00000000	                              mov esi, 0	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400363a	      0xe91cffffff	                           jmp 0x400355b	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x400363f	              0x90	                                     nop	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4003640	      0xba05000000	                              mov edx, 5	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4003645	      0xbe00000000	                              mov esi, 0	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400364a	      0xe90cffffff	                           jmp 0x400355b	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x400364f	      0xba05000000	                              mov edx, 5	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4003654	      0xbe00000000	                              mov esi, 0	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4003659	      0xe9fdfeffff	                           jmp 0x400355b	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400365e	    0x8b0500000000	            mov eax, dword [0x04003664] 	      8581	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4003664	    0x48c705000000	               mov qword [0x0400366f], 0	      8579	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400366f	    0xc70500000000	               mov dword [0x04003679], 1	      8580	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4003679	    0x48c705000000	               mov qword [0x04003684], 0	      8582	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4003684	    0x890500000000	            mov dword [0x0400368a], eax 	      8581	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400368a	      0xe964ffffff	                           jmp 0x40035f3	      8581	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x400368f	          0x488b28	                    mov rbp, qword [rax]	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x4003692	    0x488b1d000000	            mov rbx, qword [0x04003699] 	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x4003699	      0xba05000000	                              mov edx, 5	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x400369e	      0xbe00000000	                              mov esi, 0	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036a3	            0x31ff	                            xor edi, edi	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036a5	      0xe800000000	                          call 0x40036aa	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036aa	          0x4889ea	                            mov rdx, rbp	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036ad	          0x4889c7	                            mov rdi, rax	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036b0	          0x4889de	                            mov rsi, rbx	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036b3	            0x31c0	                            xor eax, eax	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036b5	      0xe800000000	                          call 0x40036ba	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40036ba	            0x31c0	                            xor eax, eax	      8546	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x40036bc	      0xe9b0feffff	                           jmp 0x4003571	      8546	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x40036c1	      0xba05000000	                              mov edx, 5	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x40036c6	      0xbe00000000	                              mov esi, 0	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x40036cb	      0xe98bfeffff	                           jmp 0x400355b	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x40036d0	      0xba05000000	                              mov edx, 5	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x40036d5	      0xbe00000000	                              mov esi, 0	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x40036da	      0xe97cfeffff	                           jmp 0x400355b	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x40036df	      0xe800000000	                          call 0x40036e4	      8637	tc-i386.c	FUNCTION_102
md_atof	IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	2
0x400ef40	            0x31c9	                            xor ecx, ecx	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x400ef42	      0xe900000000	                           jmp 0x400ef47	     10140	tc-i386.c	FUNCTION_118	CALL_1
operand_type_register_match	IF,4:DO,0:ELSE,0:WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,0	63
0x4000040	        0x4883ec18	                           sub rsp, 0x18	      2046	tc-i386.c	FUNCTION_26
0x4000044	    0x64488b042528	                mov rax, qword fs:[0x28]	      2046	tc-i386.c	FUNCTION_26
0x400004d	      0x4889442408	                mov qword [rsp + 8], rax	      2046	tc-i386.c	FUNCTION_26
0x4000052	            0x31c0	                            xor eax, eax	      2046	tc-i386.c	FUNCTION_26
0x4000054	    0x48b8ffffff1d	          movabs rax, 0xffffff801dffffff	      2059	tc-i386.c	FUNCTION_26
0x400005e	          0x4821f8	                            and rax, rdi	      2059	tc-i386.c	FUNCTION_26
0x4000061	          0x4889c2	                            mov rdx, rax	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4000064	        0x48c1ea20	                           shr rdx, 0x20	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4000068	            0x85d2	                           test edx, edx	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400006a	            0x752c	                           jne 0x4000098	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400006c	            0x85c0	                           test eax, eax	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x400006e	            0x7528	                           jne 0x4000098	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4000070	    0xc70500000000	               mov dword [0x0400007a], 1	      2068	tc-i386.c	FUNCTION_26
0x400007a	            0x31c0	                            xor eax, eax	      2069	tc-i386.c	FUNCTION_26
0x400007c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2070	tc-i386.c	FUNCTION_26
0x4000081	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2070	tc-i386.c	FUNCTION_26
0x400008a	            0x752b	                           jne 0x40000b7	      2070	tc-i386.c	FUNCTION_26
0x400008c	        0x4883c418	                           add rsp, 0x18	      2070	tc-i386.c	FUNCTION_26
0x4000090	              0xc3	                                     ret	      2070	tc-i386.c	FUNCTION_26
0x4000091	     0xf1f80000000	                         nop dword [rax]	      2070	tc-i386.c	FUNCTION_26
0x4000098	          0x4889f8	                            mov rax, rdi	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400009b	          0x4831f0	                            xor rax, rsi	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400009e	      0xa900004000	                      test eax, 0x400000	      2063	tc-i386.c	FUNCTION_26	IF_2
0x40000a3	            0x75cb	                           jne 0x4000070	      2063	tc-i386.c	FUNCTION_26	IF_2
0x40000a5	          0x4889c7	                            mov rdi, rax	      2064	tc-i386.c	FUNCTION_26	IF_2
0x40000a8	      0xb801000000	                              mov eax, 1	      2065	tc-i386.c	FUNCTION_26	IF_2
0x40000ad	    0xf7c700000002	                     test edi, 0x2000000	      2064	tc-i386.c	FUNCTION_26	IF_2
0x40000b3	            0x75bb	                           jne 0x4000070	      2064	tc-i386.c	FUNCTION_26	IF_2
0x40000b5	            0xebc5	                           jmp 0x400007c	      2064	tc-i386.c	FUNCTION_26	IF_2
0x40000b7	      0xe800000000	                          call 0x40000bc	      2070	tc-i386.c	FUNCTION_26
0x40000bc	         0xf1f4000	                         nop dword [rax]	      2070	tc-i386.c	FUNCTION_26
0x40000c0	    0x893d00000000	            mov dword [0x040000c6], edi 	      2490	tc-i386.c	FUNCTION_45
0x40000c6	              0xc3	                                     ret	      2490	tc-i386.c	FUNCTION_45
0x40000c7	    0x660f1f840000	                    nop word [rax + rax]	      2490	tc-i386.c	FUNCTION_45
0x40000d0	    0x893d00000000	            mov dword [0x040000d6], edi 	      2496	tc-i386.c	FUNCTION_46
0x40000d6	              0xc3	                                     ret	      2496	tc-i386.c	FUNCTION_46
0x40000d7	    0x660f1f840000	                    nop word [rax + rax]	      2496	tc-i386.c	FUNCTION_46
0x40000e0	        0x4883ec18	                           sub rsp, 0x18	      4678	tc-i386.c	FUNCTION_71
0x40000e4	          0x4863d6	                         movsxd rdx, esi	      4683	tc-i386.c	FUNCTION_71
0x40000e7	    0x64488b042528	                mov rax, qword fs:[0x28]	      4678	tc-i386.c	FUNCTION_71
0x40000f0	      0x4889442408	                mov qword [rsp + 8], rax	      4678	tc-i386.c	FUNCTION_71
0x40000f5	            0x31c0	                            xor eax, eax	      4678	tc-i386.c	FUNCTION_71
0x40000f7	          0x4863c7	                         movsxd rax, edi	      4684	tc-i386.c	FUNCTION_71
0x40000fa	        0x4c8d420e	                     lea r8, [rdx + 0xe]	      4683	tc-i386.c	FUNCTION_71
0x40000fe	        0x488d480e	                    lea rcx, [rax + 0xe]	      4684	tc-i386.c	FUNCTION_71
0x4000102	    0x4e8b0cc50000	                    mov r9, qword [r8*8]	      4683	tc-i386.c	FUNCTION_71
0x400010a	    0x4c8b14cd0000	                  mov r10, qword [rcx*8]	      4684	tc-i386.c	FUNCTION_71
0x4000112	    0x4e8914c50000	                   mov qword [r8*8], r10	      4684	tc-i386.c	FUNCTION_71
0x400011a	        0x4c8d4214	                    lea r8, [rdx + 0x14]	      4686	tc-i386.c	FUNCTION_71
0x400011e	    0x4c890ccd0000	                   mov qword [rcx*8], r9	      4685	tc-i386.c	FUNCTION_71
0x4000126	        0x488d4814	                   lea rcx, [rax + 0x14]	      4687	tc-i386.c	FUNCTION_71
0x400012a	        0x4883c234	                           add rdx, 0x34	      4689	tc-i386.c	FUNCTION_71
0x400012e	        0x4883c034	                           add rax, 0x34	      4690	tc-i386.c	FUNCTION_71
0x4000132	    0x4e8b0cc50000	                    mov r9, qword [r8*8]	      4686	tc-i386.c	FUNCTION_71
0x400013a	    0x4c8b14cd0000	                  mov r10, qword [rcx*8]	      4687	tc-i386.c	FUNCTION_71
0x4000142	    0x4e8914c50000	                   mov qword [r8*8], r10	      4687	tc-i386.c	FUNCTION_71
0x400014a	    0x448b04850000	                  mov r8d, dword [rax*4]	      4690	tc-i386.c	FUNCTION_71
0x4000152	    0x4c890ccd0000	                   mov qword [rcx*8], r9	      4688	tc-i386.c	FUNCTION_71
0x400015a	    0x8b0c95000000	                  mov ecx, dword [rdx*4]	      4689	tc-i386.c	FUNCTION_71
0x4000161	    0x448904950000	                  mov dword [rdx*4], r8d	      4690	tc-i386.c	FUNCTION_71
0x4000169	              0x89	                                 invalid	      4691	tc-i386.c	FUNCTION_71
0x400016a	             0xc85	                             or al, 0x85	      4691	tc-i386.c	FUNCTION_71
0x400016c	               0x0	                                 invalid	      4691	tc-i386.c	FUNCTION_71
set_code_flag	IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	2
0x4000310	            0x31f6	                            xor esi, esi	      2436	tc-i386.c	FUNCTION_42	CALL_1
0x4000312	      0xe929ffffff	                jmp sym.update_code_flag	      2436	tc-i386.c	FUNCTION_42	CALL_1
parse_insn	IF,32:DO,0:ELSE,12:WHILE,2:CALL,39:functions,0:SWITCH,3:FOR,1	420
0x4005d80	            0x4156	                                push r14	      4279	tc-i386.c	FUNCTION_69
0x4005d82	            0x4155	                                push r13	      4279	tc-i386.c	FUNCTION_69
0x4005d84	          0x4989f6	                            mov r14, rsi	      4279	tc-i386.c	FUNCTION_69
0x4005d87	            0x4154	                                push r12	      4279	tc-i386.c	FUNCTION_69
0x4005d89	              0x55	                                push rbp	      4279	tc-i386.c	FUNCTION_69
0x4005d8a	          0x4989fd	                            mov r13, rdi	      4279	tc-i386.c	FUNCTION_69
0x4005d8d	              0x53	                                push rbx	      4279	tc-i386.c	FUNCTION_69
0x4005d8e	          0x4531e4	                          xor r12d, r12d	      4285	tc-i386.c	FUNCTION_69
0x4005d91	        0x4883ec10	                           sub rsp, 0x10	      4279	tc-i386.c	FUNCTION_69
0x4005d95	    0x64488b042528	                mov rax, qword fs:[0x28]	      4279	tc-i386.c	FUNCTION_69
0x4005d9e	      0x4889442408	                mov qword [rsp + 8], rax	      4279	tc-i386.c	FUNCTION_69
0x4005da3	            0x31c0	                            xor eax, eax	      4279	tc-i386.c	FUNCTION_69
0x4005da5	      0x410fb64500	                   movzx eax, byte [r13]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005daa	     0xfb680000000	                   movzx eax, byte [rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005db1	            0x84c0	                             test al, al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005db3	          0x418806	                      mov byte [r14], al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005db6	     0xf842c010000	                            je 0x4005ee8	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dbc	        0x498d5513	                   lea rdx, [r13 + 0x13]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dc0	          0x4c89f5	                            mov rbp, r14	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dc3	          0x4c89eb	                            mov rbx, r13	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dc6	            0xeb1d	                           jmp 0x4005de5	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dc8	     0xf1f84000000	                   nop dword [rax + rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dd0	        0x4883c301	                              add rbx, 1	      4300	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dd4	           0xfb603	                   movzx eax, byte [rbx]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dd7	     0xfb680000000	                   movzx eax, byte [rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005dde	            0x84c0	                             test al, al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005de0	          0x884500	                      mov byte [rbp], al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005de3	            0x745b	                            je 0x4005e40	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005de5	            0x3c2e	                            cmp al, 0x2e	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005de7	        0x4c0f44e5	                          cmove r12, rbp	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005deb	        0x4883c501	                              add rbp, 1	      4294	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005def	          0x4839d3	                            cmp rbx, rdx	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x4005df2	            0x75dc	                           jne 0x4005dd0	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x4005df4	      0xba05000000	                              mov edx, 5	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005df9	      0xbe00000000	                              mov esi, 0	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005dfe	            0x31ff	                            xor edi, edi	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005e00	      0xe800000000	                          call 0x4005e05	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005e05	            0x31db	                            xor ebx, ebx	      4492	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005e07	          0x4889c7	                            mov rdi, rax	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005e0a	          0x4c89ee	                            mov rsi, r13	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005e0d	            0x31c0	                            xor eax, eax	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005e0f	      0xe800000000	                          call 0x4005e14	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005e14	      0x488b742408	                mov rsi, qword [rsp + 8]	      4555	tc-i386.c	FUNCTION_69
0x4005e19	    0x644833342528	                xor rsi, qword fs:[0x28]	      4555	tc-i386.c	FUNCTION_69
0x4005e22	          0x4889d8	                            mov rax, rbx	      4555	tc-i386.c	FUNCTION_69
0x4005e25	     0xf855d060000	                           jne 0x4006488	      4555	tc-i386.c	FUNCTION_69
0x4005e2b	        0x4883c410	                           add rsp, 0x10	      4555	tc-i386.c	FUNCTION_69
0x4005e2f	              0x5b	                                 pop rbx	      4555	tc-i386.c	FUNCTION_69
0x4005e30	              0x5d	                                 pop rbp	      4555	tc-i386.c	FUNCTION_69
0x4005e31	            0x415c	                                 pop r12	      4555	tc-i386.c	FUNCTION_69
0x4005e33	            0x415d	                                 pop r13	      4555	tc-i386.c	FUNCTION_69
0x4005e35	            0x415e	                                 pop r14	      4555	tc-i386.c	FUNCTION_69
0x4005e37	              0xc3	                                     ret	      4555	tc-i386.c	FUNCTION_69
0x4005e38	     0xf1f84000000	                   nop dword [rax + rax]	      4555	tc-i386.c	FUNCTION_69
0x4005e40	           0xfb603	                   movzx eax, byte [rbx]	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005e43	            0xa8df	                           test al, 0xdf	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005e45	     0xf85b5000000	                           jne 0x4005f00	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005e4b	          0x4939dd	                            cmp r13, rbx	      4312	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005e4e	     0xf84e4050000	                            je 0x4006438	      4312	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005e54	    0x488b3d000000	            mov rdi, qword [0x04005e5b] 	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x4005e5b	          0x4c89f6	                            mov rsi, r14	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x4005e5e	      0xe800000000	                          call 0x4005e63	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x4005e63	           0xfb60b	                   movzx ecx, byte [rbx]	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e66	    0x488905000000	            mov qword [0x04005e6d], rax 	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x4005e6d	            0x84c9	                             test cl, cl	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e6f	     0xf84d5000000	                            je 0x4005f4a	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e75	          0x80f920	                            cmp cl, 0x20	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e78	     0xf84c2000000	                            je 0x4005f40	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e7e	          0x4885c0	                           test rax, rax	      4326	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e81	     0xf841e040000	                            je 0x40062a5	      4326	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e87	          0x488b10	                    mov rdx, qword [rax]	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e8a	        0xf6422c10	           test byte [rdx + 0x2c], 0x10 	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e8e	     0xf84a3030000	                            je 0x4006237	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e94	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005e98	    0x8b0d00000000	            mov ecx, dword [0x04005e9e] 	      1619	tc-i386.c	FUNCTION_12
0x4005e9e	        0x48c1e820	                           shr rax, 0x20	      1620	tc-i386.c	FUNCTION_12
0x4005ea2	          0x83f902	                              cmp ecx, 2	      1619	tc-i386.c	FUNCTION_12
0x4005ea5	     0xf8435010000	                            je 0x4005fe0	      1619	tc-i386.c	FUNCTION_12
0x4005eab	            0xa840	                           test al, 0x40	      1620	tc-i386.c	FUNCTION_12
0x4005ead	     0xf8556020000	                           jne 0x4006109	      1620	tc-i386.c	FUNCTION_12
0x4005eb3	         0xfb64229	           movzx eax, byte [rdx + 0x29] 	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005eb7	            0xa818	                           test al, 0x18	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005eb9	     0xf8429010000	                            je 0x4005fe8	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ebf	          0xc0e804	                               shr al, 4	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ec2	          0x83e001	                              and eax, 1	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ec5	          0x83f901	                              cmp ecx, 1	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ec8	           0xf94c1	                                 sete cl	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ecb	           0xfb6c9	                           movzx ecx, cl	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ece	            0x39c8	                            cmp eax, ecx	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ed0	     0xf8412010000	                            je 0x4005fe8	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005ed6	          0x488b1a	                    mov rbx, qword [rdx]	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005ed9	      0xbe00000000	                              mov esi, 0	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005ede	      0xba05000000	                              mov edx, 5	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005ee3	            0xeb4a	                           jmp 0x4005f2f	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005ee5	           0xf1f00	                         nop dword [rax]	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005ee8	      0x410fb64500	                   movzx eax, byte [r13]	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005eed	            0xa8df	                           test al, 0xdf	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005eef	     0xf8420030000	                            je 0x4006215	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005ef5	          0x4c89eb	                            mov rbx, r13	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005ef8	          0x4c89f5	                            mov rbp, r14	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005efb	       0xf1f440000	                   nop dword [rax + rax]	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f00	    0x8b3d00000000	            mov edi, dword [0x04005f06] 	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f06	            0x85ff	                           test edi, edi	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f08	            0x7510	                           jne 0x4005f1a	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f0a	            0x3c2f	                            cmp al, 0x2f	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f0c	     0xf8439ffffff	                            je 0x4005e4b	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f12	            0x3c2c	                            cmp al, 0x2c	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f14	     0xf8431ffffff	                            je 0x4005e4b	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005f1a	           0xfbef8	                           movsx edi, al	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005f1d	      0xe87ee6ffff	                 call sym.output_invalid	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005f22	      0xba05000000	                              mov edx, 5	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005f27	          0x4889c3	                            mov rbx, rax	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005f2a	      0xbe00000000	                              mov esi, 0	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005f2f	            0x31ff	                            xor edi, edi	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005f31	      0xe800000000	                          call 0x4005f36	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005f36	      0xe9e2010000	                           jmp 0x400611d	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005f3b	       0xf1f440000	                   nop dword [rax + rax]	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005f40	        0x807b0100	                   cmp byte [rbx + 1], 0	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005f44	     0xf8534ffffff	                           jne 0x4005e7e	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x4005f4a	          0x4885c0	                           test rax, rax	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005f4d	     0xf8452030000	                            je 0x40062a5	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005f53	          0x488b10	                    mov rdx, qword [rax]	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005f56	        0xf64228a0	           test byte [rdx + 0x28], 0xa0 	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005f5a	     0xf8422020000	                            je 0x4006182	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005f60	          0x4889d5	                            mov rbp, rdx	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005f63	          0x4989c4	                            mov r12, rax	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005f66	      0x49396c2408	                cmp qword [r12 + 8], rbp	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f6b	     0xf8670030000	                           jbe 0x40062e1	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f71	          0x4531ed	                          xor r13d, r13d	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f74	            0xeb19	                           jmp 0x4005f8f	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f80	        0x4883c560	                           add rbp, 0x60	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f84	      0x49396c2408	                cmp qword [r12 + 8], rbp	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f89	     0xf860c020000	                           jbe 0x400619b	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005f8f	          0x4889ef	                            mov rdi, rbp	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x4005f92	      0xe869fbffff	                call sym.cpu_flags_match	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x4005f97	          0x4109c5	                            or r13d, eax	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x4005f9a	        0x4183fd03	                             cmp r13d, 3	      4534	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005f9e	            0x75e0	                           jne 0x4005f80	      4534	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005fa0	    0xf60500000000	               test byte [0x04005fa7], 4	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005fa7	     0xf8567feffff	                           jne 0x4005e14	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005fad	    0x833d00000000	               cmp dword [0x04005fb4], 1	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005fb4	     0xf845afeffff	                            je 0x4005e14	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005fba	            0x31ff	                            xor edi, edi	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fbc	      0xba05000000	                              mov edx, 5	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fc1	      0xbe00000000	                              mov esi, 0	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fc6	      0xe800000000	                          call 0x4005fcb	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fcb	          0x4889c7	                            mov rdi, rax	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fce	            0x31c0	                            xor eax, eax	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fd0	      0xe800000000	                          call 0x4005fd5	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fd5	      0xe93afeffff	                           jmp 0x4005e14	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fda	    0x660f1f440000	                    nop word [rax + rax]	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005fe0	            0x84c0	                             test al, al	      1619	tc-i386.c	FUNCTION_12
0x4005fe2	     0xf8814020000	                            js 0x40061fc	      1619	tc-i386.c	FUNCTION_12
0x4005fe8	        0x807a1400	                cmp byte [rdx + 0x14], 0	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x4005fec	            0x751a	                           jne 0x4006008	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x4005fee	        0x837a0c08	                cmp dword [rdx + 0xc], 8	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005ff2	     0xf8748010000	                            ja 0x4006140	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005ff8	          0x8b420c	              mov eax, dword [rdx + 0xc]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005ffb	    0xff24c5000000	                       jmp qword [rax*8]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4006002	    0x660f1f440000	                    nop word [rax + rax]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4006008	          0x8b7a0c	              mov edi, dword [rdx + 0xc]	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400600b	      0xe8d0abffff	                     call sym.add_prefix	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4006010	          0x83f802	                              cmp eax, 2	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4006013	            0x7449	                            je 0x400605e	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4006015	          0x83f803	                              cmp eax, 3	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4006018	            0x7428	                            je 0x4006042	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400601a	            0x85c0	                           test eax, eax	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400601c	            0x741d	                            je 0x400603b	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400601e	            0x6690	                                     nop	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4006020	        0x4c8d6b01	                      lea r13, [rbx + 1]	      4418	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_4
0x4006024	      0xe97cfdffff	                           jmp 0x4005da5	      4422	tc-i386.c	FUNCTION_69	WHILE_1	ELSE_4	ELSE_5
0x4006029	      0xbf3e000000	                           mov edi, 0x3e	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x400602e	      0xe8adabffff	                     call sym.add_prefix	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4006033	            0x85c0	                           test eax, eax	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4006035	     0xf853f010000	                           jne 0x400617a	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x400603b	            0x31db	                            xor ebx, ebx	      4400	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x400603d	      0xe9d2fdffff	                           jmp 0x4005e14	      4400	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x4006042	    0x488b05000000	            mov rax, qword [0x04006049] 	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4006049	          0x488b00	                    mov rax, qword [rax]	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400604c	        0xf6402308	               test byte [rax + 0x23], 8	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4006050	            0x74ce	                            je 0x4006020	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4006052	          0x488b00	                    mov rax, qword [rax]	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4006055	    0x488905000000	            mov qword [0x0400605c], rax 	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400605c	            0xebc2	                           jmp 0x4006020	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400605e	    0x488b05000000	            mov rax, qword [0x04006065] 	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4006065	          0x488b00	                    mov rax, qword [rax]	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4006068	        0xf6401f10	           test byte [rax + 0x1f], 0x10 	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400606c	     0xf85bf000000	                           jne 0x4006131	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4006072	        0xf6402001	               test byte [rax + 0x20], 1	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4006076	          0x488b00	                    mov rax, qword [rax]	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4006079	     0xf84f7010000	                            je 0x4006276	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x400607f	    0x488905000000	            mov qword [0x04006086], rax 	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4006086	            0xeb98	                           jmp 0x4006020	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4006088	    0xc70500000000	               mov dword [0x04006092], 1	      4384	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4006092	            0xeb8c	                           jmp 0x4006020	      4385	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4006094	    0xc70500000000	               mov dword [0x0400609e], 3	      4380	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400609e	            0xeb80	                           jmp 0x4006020	      4381	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060a0	    0xc70500000000	               mov dword [0x040060aa], 2	      4376	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060aa	      0xe971ffffff	                           jmp 0x4006020	      4377	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060af	    0xc70500000000	               mov dword [0x040060b9], 1	      4372	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060b9	      0xe962ffffff	                           jmp 0x4006020	      4373	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060be	    0xc70500000000	               mov dword [0x040060c8], 2	      4368	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060c8	      0xe953ffffff	                           jmp 0x4006020	      4369	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060cd	    0xc70500000000	               mov dword [0x040060d7], 1	      4364	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060d7	      0xe944ffffff	                           jmp 0x4006020	      4365	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060dc	    0xc70500000000	               mov dword [0x040060e6], 2	      4360	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060e6	      0xe935ffffff	                           jmp 0x4006020	      4361	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060eb	    0xc70500000000	               mov dword [0x040060f5], 1	      4356	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060f5	      0xe926ffffff	                           jmp 0x4006020	      4357	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40060fa	    0xc70500000000	               mov dword [0x04006104], 1	      4388	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4006104	      0xe917ffffff	                           jmp 0x4006020	      4389	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4006109	          0x488b1a	                    mov rbx, qword [rdx]	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400610c	      0xbe00000000	                              mov esi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4006111	      0xba05000000	                              mov edx, 5	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4006116	            0x31ff	                            xor edi, edi	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4006118	      0xe800000000	                          call 0x400611d	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400611d	          0x4889de	                            mov rsi, rbx	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4006120	          0x4889c7	                            mov rdi, rax	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4006123	            0x31c0	                            xor eax, eax	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4006125	      0xe800000000	                          call 0x400612a	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400612a	            0x31db	                            xor ebx, ebx	      4554	tc-i386.c	FUNCTION_69
0x400612c	      0xe9e3fcffff	                           jmp 0x4005e14	      4554	tc-i386.c	FUNCTION_69
0x4006131	          0x488b00	                    mov rax, qword [rax]	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4006134	    0x488905000000	            mov qword [0x0400613b], rax 	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400613b	      0xe9e0feffff	                           jmp 0x4006020	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4006140	      0xba00000000	                              mov edx, 0	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x4006145	      0xbe27110000	                         mov esi, 0x1127	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x400614a	      0xbf00000000	                              mov edi, 0	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x400614f	      0xe800000000	                          call 0x4006154	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x4006154	         0xfb64302	               movzx eax, byte [rbx + 2]	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4006158	            0x3c74	                            cmp al, 0x74	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x400615a	     0xf84c9feffff	                            je 0x4006029	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4006160	            0x3c6e	                            cmp al, 0x6e	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4006162	     0xf85f2000000	                           jne 0x400625a	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4006168	      0xbf2e000000	                           mov edi, 0x2e	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x400616d	      0xe86eaaffff	                     call sym.add_prefix	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4006172	            0x85c0	                           test eax, eax	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4006174	     0xf84c1feffff	                            je 0x400603b	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x400617a	         0xfb64b03	               movzx ecx, byte [rbx + 3]	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x400617e	        0x4883c303	                              add rbx, 3	      4517	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4006182	          0x80f92c	                            cmp cl, 0x2c	      4522	tc-i386.c	FUNCTION_69	IF_29
0x4006185	     0xf84cf000000	                            je 0x400625a	      4522	tc-i386.c	FUNCTION_69	IF_29
0x400618b	    0x4c8b25000000	            mov r12, qword [0x04006192] 	      4522	tc-i386.c	FUNCTION_69	IF_29
0x4006192	        0x498b2c24	                    mov rbp, qword [r12]	      4522	tc-i386.c	FUNCTION_69	IF_29
0x4006196	      0xe9cbfdffff	                           jmp 0x4005f66	      4522	tc-i386.c	FUNCTION_69	IF_29
0x400619b	        0x4183e502	                             and r13d, 2	      4543	tc-i386.c	FUNCTION_69	IF_32
0x400619f	     0xf84dd000000	                            je 0x4006282	      4543	tc-i386.c	FUNCTION_69	IF_32
0x40061a5	    0x488b05000000	            mov rax, qword [0x040061ac] 	      4552	tc-i386.c	FUNCTION_69	ELSE_12
0x40061ac	    0x488b1d000000	            mov rbx, qword [0x040061b3] 	      4551	tc-i386.c	FUNCTION_69	ELSE_12
0x40061b3	      0xbd00000000	                              mov ebp, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061b8	      0xba05000000	                              mov edx, 5	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061bd	      0xbe00000000	                              mov esi, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061c2	          0x4885c0	                           test rax, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061c5	        0x480f45e8	                         cmovne rbp, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061c9	        0x498b0424	                    mov rax, qword [r12]	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061cd	          0x4885db	                           test rbx, rbx	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061d0	    0x480f441d0000	           cmove rbx, qword [0x040061d8]	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061d8	            0x31ff	                            xor edi, edi	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061da	          0x4c8b20	                    mov r12, qword [rax]	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061dd	      0xe800000000	                          call 0x40061e2	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061e2	          0x4889da	                            mov rdx, rbx	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061e5	          0x4889c7	                            mov rdi, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061e8	          0x4889e9	                            mov rcx, rbp	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061eb	          0x4c89e6	                            mov rsi, r12	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061ee	            0x31c0	                            xor eax, eax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061f0	            0x31db	                            xor ebx, ebx	      4554	tc-i386.c	FUNCTION_69
0x40061f2	      0xe800000000	                          call 0x40061f7	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061f7	      0xe918fcffff	                           jmp 0x4005e14	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40061fc	          0x488b1a	                    mov rbx, qword [rdx]	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x40061ff	      0xba05000000	                              mov edx, 5	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4006204	      0xbe00000000	                              mov esi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4006209	            0x31ff	                            xor edi, edi	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400620b	      0xe800000000	                          call 0x4006210	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4006210	      0xe908ffffff	                           jmp 0x400611d	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4006215	      0xba05000000	                              mov edx, 5	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x400621a	      0xbe00000000	                              mov esi, 0	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x400621f	            0x31ff	                            xor edi, edi	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4006221	            0x31db	                            xor ebx, ebx	      4318	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4006223	      0xe800000000	                          call 0x4006228	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4006228	          0x4889c7	                            mov rdi, rax	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x400622b	            0x31c0	                            xor eax, eax	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x400622d	      0xe800000000	                          call 0x4006232	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4006232	      0xe9ddfbffff	                           jmp 0x4005e14	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4006237	          0x4989c4	                            mov r12, rax	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x400623a	        0xf64228a0	           test byte [rdx + 0x28], 0xa0 	      4496	tc-i386.c	FUNCTION_69	IF_23
0x400623e	     0xf843effffff	                            je 0x4006182	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4006244	          0x80f92c	                            cmp cl, 0x2c	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4006247	          0x4889d5	                            mov rbp, rdx	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x400624a	     0xf8516fdffff	                           jne 0x4005f66	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4006250	        0x807b0170	                cmp byte [rbx + 1], 0x70	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4006254	     0xf84fafeffff	                            je 0x4006154	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x400625a	      0xbf2c000000	                           mov edi, 0x2c	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x400625f	      0xe83ce3ffff	                 call sym.output_invalid	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4006264	      0xba05000000	                              mov edx, 5	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4006269	          0x4889c3	                            mov rbx, rax	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x400626c	      0xbe00000000	                              mov esi, 0	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4006271	      0xe9b9fcffff	                           jmp 0x4005f2f	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x4006276	    0x488905000000	            mov qword [0x0400627d], rax 	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x400627d	      0xe99efdffff	                           jmp 0x4006020	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x4006282	        0x498b1424	                    mov rdx, qword [r12]	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x4006286	    0x833d00000000	               cmp dword [0x0400628d], 2	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400628d	          0x488b1a	                    mov rbx, qword [rdx]	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4006290	      0xba05000000	                              mov edx, 5	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4006295	     0xf8469ffffff	                            je 0x4006204	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400629b	      0xbe00000000	                              mov esi, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x40062a0	      0xe98afcffff	                           jmp 0x4005f2f	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x40062a5	        0x488d45fe	                      lea rax, [rbp - 2]	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40062a9	          0x4939c4	                            cmp r12, rax	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40062ac	     0xf845e010000	                            je 0x4006410	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40062b2	        0x488d45fd	                      lea rax, [rbp - 3]	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40062b6	          0x4c39e0	                            cmp rax, r12	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40062b9	     0xf842a010000	                            je 0x40063e9	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40062bf	        0x488d45fc	                      lea rax, [rbp - 4]	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40062c3	          0x4c39e0	                            cmp rax, r12	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40062c6	            0x747a	                            je 0x4006342	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40062c8	         0xfb675ff	               movzx esi, byte [rbp - 1]	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40062cc	          0x8d469e	                   lea eax, [rsi - 0x62]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40062cf	            0x3c15	                            cmp al, 0x15	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40062d1	     0xf871dfbffff	                            ja 0x4005df4	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40062d7	           0xfb6c0	                           movzx eax, al	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40062da	    0xff24c5000000	                       jmp qword [rax*8]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40062e1	          0x4889ea	                            mov rdx, rbp	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x40062e4	            0xeba0	                           jmp 0x4006286	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x40062e6	          0x4989ec	                            mov r12, rbp	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40062e9	    0x8b0d00000000	            mov ecx, dword [0x040062ef] 	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x40062ef	      0xbe77000000	                           mov esi, 0x77	      3263	tc-i386.c	FUNCTION_61	IF_1
0x40062f4	            0x85c9	                           test ecx, ecx	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x40062f6	            0x740a	                            je 0x4006302	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x40062f8	        0x41803e66	                    cmp byte [r14], 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x40062fc	     0xf848b010000	                            je 0x400648d	      3263	tc-i386.c	FUNCTION_61	IF_1
0x4006302	    0x408835000000	              mov byte [0x04006309], sil	      4468	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x4006309	    0x41c64424ff00	                   mov byte [r12 - 1], 0	      4483	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x400630f	    0x488b3d000000	            mov rdi, qword [0x04006316] 	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4006316	          0x4c89f6	                            mov rsi, r14	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4006319	      0xe800000000	                          call 0x400631e	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x400631e	    0x488905000000	            mov qword [0x04006325], rax 	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4006325	          0x4989c4	                            mov r12, rax	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4006328	          0x4d85e4	                           test r12, r12	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x400632b	     0xf84c3faffff	                            je 0x4005df4	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4006331	        0x498b1424	                    mov rdx, qword [r12]	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4006335	           0xfb60b	                   movzx ecx, byte [rbx]	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4006338	      0xe9fdfeffff	                           jmp 0x400623a	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x400633d	          0x4989ec	                            mov r12, rbp	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4006340	            0xebc0	                           jmp 0x4006302	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4006342	        0x807dfd64	                cmp byte [rbp - 3], 0x64	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006346	            0x7580	                           jne 0x40062c8	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006348	        0x80780233	                cmp byte [rax + 2], 0x33	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400634c	     0xf8576ffffff	                           jne 0x40062c8	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006352	         0xfb67003	               movzx esi, byte [rax + 3]	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006356	        0x4080fe32	                           cmp sil, 0x32	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400635a	     0xf856cffffff	                           jne 0x40062cc	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006360	    0xc70500000000	               mov dword [0x0400636a], 2	      4438	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400636a	    0x488b3d000000	            mov rdi, qword [0x04006371] 	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4006371	      0x41c6042400	                       mov byte [r12], 0	      4442	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4006376	          0x4c89f6	                            mov rsi, r14	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4006379	      0xe800000000	                          call 0x400637e	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x400637e	          0x4885c0	                           test rax, rax	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4006381	    0x488905000000	            mov qword [0x04006388], rax 	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4006388	     0xf85cf000000	                           jne 0x400645d	      4446	tc-i386.c	FUNCTION_69	IF_17
0x400638e	    0x410fb67424ff	               movzx esi, byte [r12 - 1]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4006394	          0x8d469e	                   lea eax, [rsi - 0x62]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4006397	            0x3c15	                            cmp al, 0x15	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4006399	     0xf8755faffff	                            ja 0x4005df4	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400639f	           0xfb6c0	                           movzx eax, al	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40063a2	    0xff24c5000000	                       jmp qword [rax*8]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40063a9	          0x4989ec	                            mov r12, rbp	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40063ac	    0x8b1500000000	            mov edx, dword [0x040063b2] 	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40063b2	            0x85d2	                           test edx, edx	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40063b4	     0xf8448ffffff	                            je 0x4006302	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40063ba	    0x4c8b25000000	            mov r12, qword [0x040063c1] 	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40063c1	      0xe962ffffff	                           jmp 0x4006328	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40063c6	          0x4989ec	                            mov r12, rbp	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x40063c9	    0x8b0500000000	            mov eax, dword [0x040063cf] 	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x40063cf	            0x85c0	                           test eax, eax	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x40063d1	            0x74e7	                            je 0x40063ba	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x40063d3	        0x41803e66	                    cmp byte [r14], 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x40063d7	     0xf848e000000	                            je 0x400646b	      3263	tc-i386.c	FUNCTION_61	IF_1
0x40063dd	    0xc60500000000	            mov byte [0x040063e4], 0x6c 	      4482	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	ELSE_10
0x40063e4	      0xe920ffffff	                           jmp 0x4006309	      4482	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	ELSE_10
0x40063e9	        0x807dfe64	                cmp byte [rbp - 2], 0x64	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40063ed	         0xfb675ff	               movzx esi, byte [rbp - 1]	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40063f1	     0xf85d5feffff	                           jne 0x40062cc	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40063f7	        0x4080fe38	                           cmp sil, 0x38	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40063fb	            0x742c	                            je 0x4006429	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40063fd	        0x488d55fc	                      lea rdx, [rbp - 4]	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006401	          0x4939d4	                            cmp r12, rdx	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006404	     0xf85c2feffff	                           jne 0x40062cc	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400640a	      0xe939ffffff	                           jmp 0x4006348	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400640f	              0x90	                                     nop	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4006410	        0x807dff73	                cmp byte [rbp - 1], 0x73	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4006414	     0xf8598feffff	                           jne 0x40062b2	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x400641a	    0xc70500000000	               mov dword [0x04006424], 2	      4429	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4006424	      0xe941ffffff	                           jmp 0x400636a	      4429	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x4006429	    0xc70500000000	               mov dword [0x04006433], 1	      4433	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4006433	      0xe932ffffff	                           jmp 0x400636a	      4433	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x4006438	    0x8b3500000000	            mov esi, dword [0x0400643e] 	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x400643e	            0x85f6	                           test esi, esi	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4006440	     0xf85cffdffff	                           jne 0x4006215	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4006446	            0x3c2f	                            cmp al, 0x2f	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4006448	     0xf85c7fdffff	                           jne 0x4006215	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x400644e	      0xba05000000	                              mov edx, 5	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4006453	      0xbe00000000	                              mov esi, 0	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4006458	      0xe9c2fdffff	                           jmp 0x400621f	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400645d	          0x488b10	                    mov rdx, qword [rax]	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4006460	           0xfb60b	                   movzx ecx, byte [rbx]	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4006463	          0x4989c4	                            mov r12, rax	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4006466	      0xe9cffdffff	                           jmp 0x400623a	      4446	tc-i386.c	FUNCTION_69	IF_17
0x400646b	          0x4c89f7	                            mov rdi, r14	      4446	tc-i386.c	FUNCTION_69	IF_17
0x400646e	      0xe8fdd9ffff	     call sym.intel_float_operand.part.4	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4006473	          0x83f801	                              cmp eax, 1	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x4006476	     0xf8561ffffff	                           jne 0x40063dd	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x400647c	    0xc60500000000	            mov byte [0x04006483], 0x73 	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x4006483	      0xe981feffff	                           jmp 0x4006309	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x4006488	      0xe800000000	                          call 0x400648d	      4555	tc-i386.c	FUNCTION_69
0x400648d	          0x4c89f7	                            mov rdi, r14	      4555	tc-i386.c	FUNCTION_69
0x4006490	      0xe8dbd9ffff	     call sym.intel_float_operand.part.4	      4555	tc-i386.c	FUNCTION_69
0x4006495	            0xa802	                              test al, 2	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4006497	            0x75e3	                           jne 0x400647c	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4006499	      0xe964feffff	                           jmp 0x4006302	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
i386_finalize_immediate	IF,7:DO,0:ELSE,4:WHILE,0:CALL,8:functions,0:SWITCH,0:FOR,0	71
0x4000510	              0x53	                                push rbx	      8701	tc-i386.c	FUNCTION_104
0x4000511	        0x4883ec10	                           sub rsp, 0x10	      8701	tc-i386.c	FUNCTION_104
0x4000515	         0xfb64618	           movzx eax, byte [rsi + 0x18] 	      8702	tc-i386.c	FUNCTION_104	IF_1
0x4000519	            0x3c01	                               cmp al, 1	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400051b	            0x7663	                           jbe 0x4000580	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400051d	            0x3c06	                               cmp al, 6	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400051f	            0x745f	                            je 0x4000580	      8702	tc-i386.c	FUNCTION_104	IF_1
0x4000521	            0x3c02	                               cmp al, 2	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x4000523	     0xf8497000000	                            je 0x40005c0	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x4000529	    0x8b1d00000000	            mov ebx, dword [0x0400052f] 	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400052f	            0x85db	                           test ebx, ebx	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x4000531	            0x750d	                           jne 0x4000540	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x4000533	    0x48393d000000	            cmp qword [0x0400053a], rdi 	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x400053a	     0xf84d0000000	                            je 0x4000610	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x4000540	    0x486305000000	         movsxd rax, dword [0x04000547] 	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x4000547	          0x4889d1	                            mov rcx, rdx	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400054a	      0xbb01000000	                              mov ebx, 1	      8752	tc-i386.c	FUNCTION_104
0x400054f	        0x48c1e920	                           shr rcx, 0x20	      8752	tc-i386.c	FUNCTION_104
0x4000553	        0x4883c00e	                            add rax, 0xe	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x4000557	    0x800cc5000000	                   or byte [rax*8], 0xf4	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400055f	    0x488d04c50000	                        lea rax, [rax*8]	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x4000567	          0x234804	                and ecx, dword [rax + 4]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400056a	            0x2110	                    and dword [rax], edx	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400056c	          0x894804	                mov dword [rax + 4], ecx	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400056f	        0x4883c410	                           add rsp, 0x10	      8753	tc-i386.c	FUNCTION_104
0x4000573	            0x89d8	                            mov eax, ebx	      8753	tc-i386.c	FUNCTION_104
0x4000575	              0x5b	                                 pop rbx	      8753	tc-i386.c	FUNCTION_104
0x4000576	              0xc3	                                     ret	      8753	tc-i386.c	FUNCTION_104
0x4000577	    0x660f1f840000	                    nop word [rax + rax]	      8753	tc-i386.c	FUNCTION_104
0x4000580	            0x31db	                            xor ebx, ebx	      8707	tc-i386.c	FUNCTION_104	IF_1
0x4000582	          0x4885c9	                           test rcx, rcx	      8704	tc-i386.c	FUNCTION_104	IF_1	IF_2
0x4000585	      0x48894c2408	                mov qword [rsp + 8], rcx	      8704	tc-i386.c	FUNCTION_104	IF_1	IF_2
0x400058a	            0x74e3	                            je 0x400056f	      8704	tc-i386.c	FUNCTION_104	IF_1	IF_2
0x400058c	      0xba05000000	                              mov edx, 5	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4000591	      0xbe00000000	                              mov esi, 0	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4000596	            0x31ff	                            xor edi, edi	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x4000598	      0xe800000000	                          call 0x400059d	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400059d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40005a2	          0x4889c7	                            mov rdi, rax	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40005a5	            0x31c0	                            xor eax, eax	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40005a7	          0x4889ce	                            mov rsi, rcx	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40005aa	      0xe800000000	                          call 0x40005af	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40005af	        0x4883c410	                           add rsp, 0x10	      8753	tc-i386.c	FUNCTION_104
0x40005b3	            0x89d8	                            mov eax, ebx	      8753	tc-i386.c	FUNCTION_104
0x40005b5	              0x5b	                                 pop rbx	      8753	tc-i386.c	FUNCTION_104
0x40005b6	              0xc3	                                     ret	      8753	tc-i386.c	FUNCTION_104
0x40005b7	    0x660f1f840000	                    nop word [rax + rax]	      8753	tc-i386.c	FUNCTION_104
0x40005c0	    0x486305000000	         movsxd rax, dword [0x040005c7] 	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x40005c7	    0x800cc5000000	                   or byte [rax*8], 0x80	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x40005cf	    0x833d00000000	               cmp dword [0x040005d6], 2	      8714	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005d6	            0x7458	                            je 0x4000630	      8714	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005d8	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005dc	    0x48b800000000	          movabs rax, 0xffffffff00000000	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005e6	      0xbb01000000	                              mov ebx, 1	      8752	tc-i386.c	FUNCTION_104
0x40005eb	          0x4885c2	                           test rdx, rax	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005ee	     0xf857bffffff	                           jne 0x400056f	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005f4	      0xb800000080	                     mov eax, 0x80000000	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005f9	          0x4831d0	                            xor rax, rdx	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40005fc	    0x480500000080	             add rax, 0xffffffff80000000	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x4000602	        0x48894610	             mov qword [rsi + 0x10], rax	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x4000606	      0xe964ffffff	                           jmp 0x400056f	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400060b	       0xf1f440000	                   nop dword [rax + rax]	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x4000610	          0x4885c9	                           test rcx, rcx	      8734	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	IF_7
0x4000613	      0x48894c2408	                mov qword [rsp + 8], rcx	      8734	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	IF_7
0x4000618	     0xf8451ffffff	                            je 0x400056f	      8734	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	IF_7
0x400061e	      0xba05000000	                              mov edx, 5	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x4000623	      0xbe00000000	                              mov esi, 0	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x4000628	      0xe969ffffff	                           jmp 0x4000596	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x400062d	           0xf1f00	                         nop dword [rax]	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x4000630	      0xbb01000000	                              mov ebx, 1	      8752	tc-i386.c	FUNCTION_104
0x4000635	      0xe935ffffff	                           jmp 0x400056f	      8752	tc-i386.c	FUNCTION_104
maybe_adjust_templates	IF,5:DO,0:ELSE,0:WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,2	50
0x40044c0	        0x4883ec08	                              sub rsp, 8	      9297	tc-i386.c	FUNCTION_111
0x40044c4	    0x833d00000000	               cmp dword [0x040044cb], 1	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x40044cb	     0xf85b9000000	                           jne 0x400458a	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x40044d1	    0x488b35000000	            mov rsi, qword [0x040044d8] 	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044d8	          0x488b06	                    mov rax, qword [rsi]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044db	        0x488b4e08	                mov rcx, qword [rsi + 8]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044df	          0x4839c8	                            cmp rax, rcx	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044e2	            0x7219	                            jb 0x40044fd	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044e4	      0xe997000000	                           jmp 0x4004580	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044e9	     0xf1f80000000	                         nop dword [rax]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044f0	        0x4883c060	                           add rax, 0x60	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044f4	          0x4839c8	                            cmp rax, rcx	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044f7	     0xf8383000000	                           jae 0x4004580	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40044fd	        0xf6402b01	               test byte [rax + 0x2b], 1	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x4004501	            0x74ed	                            je 0x40044f0	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x4004503	    0x488905000000	            mov qword [0x0400450a], rax 	      9311	tc-i386.c	FUNCTION_111	IF_2
0x400450a	          0x4889c2	                            mov rdx, rax	      9311	tc-i386.c	FUNCTION_111	IF_2
0x400450d	            0xeb07	                           jmp 0x4004516	      9311	tc-i386.c	FUNCTION_111	IF_2
0x400450f	              0x90	                                     nop	      9311	tc-i386.c	FUNCTION_111	IF_2
0x4004510	        0xf6422b01	               test byte [rdx + 0x2b], 1	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x4004514	            0x7409	                            je 0x400451f	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x4004516	        0x4883c260	                           add rdx, 0x60	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x400451a	          0x4839ca	                            cmp rdx, rcx	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x400451d	            0x72f1	                            jb 0x4004510	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x400451f	          0x483906	                    cmp qword [rsi], rax	      9319	tc-i386.c	FUNCTION_111	IF_2
0x4004522	    0x488915000000	            mov qword [0x04004529], rdx 	      9315	tc-i386.c	FUNCTION_111	IF_2
0x4004529	            0x743e	                            je 0x4004569	      9319	tc-i386.c	FUNCTION_111	IF_2
0x400452b	    0x488b3d000000	            mov rdi, qword [0x04004532] 	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x4004532	    0x48c705000000	               mov qword [0x0400453d], 0	      9321	tc-i386.c	FUNCTION_111	IF_2
0x400453d	    0xc70500000000	               mov dword [0x04004547], 0	      9325	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x4004547	          0x4885ff	                           test rdi, rdi	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x400454a	            0x7409	                            je 0x4004555	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x400454c	      0xe8cffaffff	               call sym.i386_index_check	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4004551	            0x85c0	                           test eax, eax	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4004553	            0x7430	                            je 0x4004585	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4004555	    0xc70500000000	               mov dword [0x0400455f], 1	      9329	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x400455f	      0xb801000000	                              mov eax, 1	      9333	tc-i386.c	FUNCTION_111
0x4004564	        0x4883c408	                              add rsp, 8	      9334	tc-i386.c	FUNCTION_111
0x4004568	              0xc3	                                     ret	      9334	tc-i386.c	FUNCTION_111
0x4004569	        0x483b5608	                cmp rdx, qword [rsi + 8]	      9319	tc-i386.c	FUNCTION_111	IF_2
0x400456d	            0x75bc	                           jne 0x400452b	      9319	tc-i386.c	FUNCTION_111	IF_2
0x400456f	    0x48c705000000	               mov qword [0x0400457a], 0	      9321	tc-i386.c	FUNCTION_111	IF_2
0x400457a	    0x660f1f440000	                    nop word [rax + rax]	      9321	tc-i386.c	FUNCTION_111	IF_2
0x4004580	      0xb801000000	                              mov eax, 1	      9333	tc-i386.c	FUNCTION_111
0x4004585	        0x4883c408	                              add rsp, 8	      9334	tc-i386.c	FUNCTION_111
0x4004589	              0xc3	                                     ret	      9334	tc-i386.c	FUNCTION_111
0x400458a	      0xba00000000	                              mov edx, 0	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x400458f	      0xbe54240000	                         mov esi, 0x2454	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4004594	      0xbf00000000	                              mov edi, 0	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4004599	      0xe800000000	                          call 0x400459e	      9300	tc-i386.c	FUNCTION_111	CALL_1
match_template	IF,48:DO,0:ELSE,13:WHILE,0:CALL,65:functions,0:SWITCH,6:FOR,5	1626
0x4009640	            0x4157	                                push r15	      5277	tc-i386.c	FUNCTION_77
0x4009642	            0x4156	                                push r14	      5277	tc-i386.c	FUNCTION_77
0x4009644	            0x4155	                                push r13	      5277	tc-i386.c	FUNCTION_77
0x4009646	            0x4154	                                push r12	      5277	tc-i386.c	FUNCTION_77
0x4009648	              0x55	                                push rbp	      5277	tc-i386.c	FUNCTION_77
0x4009649	              0x53	                                push rbx	      5277	tc-i386.c	FUNCTION_77
0x400964a	    0x4881ec980000	                           sub rsp, 0x98	      5277	tc-i386.c	FUNCTION_77
0x4009651	    0x64488b042528	                mov rax, qword fs:[0x28]	      5277	tc-i386.c	FUNCTION_77
0x400965a	    0x488984248800	             mov qword [rsp + 0x88], rax	      5277	tc-i386.c	FUNCTION_77
0x4009662	            0x31c0	                            xor eax, eax	      5277	tc-i386.c	FUNCTION_77
0x4009664	    0x8b0500000000	            mov eax, dword [0x0400966a] 	      5299	tc-i386.c	FUNCTION_77	IF_1
0x400966a	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_147	CALL_6
0x4009673	    0xc74424480000	               mov dword [rsp + 0x48], 0	        90	string3.h	FUNCTION_147	CALL_6
0x400967b	            0x85c0	                           test eax, eax	      5299	tc-i386.c	FUNCTION_77	IF_1
0x400967d	            0x7431	                            je 0x40096b0	      5299	tc-i386.c	FUNCTION_77	IF_1
0x400967f	    0x48833d000000	               cmp qword [0x04009687], 0	      5299	tc-i386.c	FUNCTION_77	IF_1
0x4009687	            0x7427	                            je 0x40096b0	      5299	tc-i386.c	FUNCTION_77	IF_1
0x4009689	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_147	CALL_6
0x4009692	    0xc74424580000	               mov dword [rsp + 0x58], 0	        90	string3.h	FUNCTION_147	CALL_6
0x400969a	          0x83ef62	                           sub edi, 0x62	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x400969d	        0x4080ff15	                           cmp dil, 0x15	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40096a1	            0x775d	                            ja 0x4009700	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40096a3	        0x400fb6ff	                          movzx edi, dil	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40096a7	    0xff24fd000000	                       jmp qword [rdi*8]	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40096ae	            0x6690	                                     nop	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40096b0	     0xfb615000000	           movzx edx, byte [0x040096b7] 	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x40096b7	          0x80fa62	                            cmp dl, 0x62	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x40096ba	     0xf84b3040000	                            je 0x4009b73	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x40096c0	          0x80fa77	                            cmp dl, 0x77	      5303	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x40096c3	     0xf842b050000	                            je 0x4009bf4	      5303	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x40096c9	          0x80fa73	                            cmp dl, 0x73	      5305	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x40096cc	     0xf842c050000	                            je 0x4009bfe	      5305	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x40096d2	          0x80fa6c	                            cmp dl, 0x6c	      5307	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x40096d5	     0xf84f3040000	                            je 0x4009bce	      5307	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x40096db	          0x80fa71	                            cmp dl, 0x71	      5309	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x40096de	     0xf84f50a0000	                            je 0x400a1d9	      5309	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x40096e4	          0x80fa01	                               cmp dl, 1	      5311	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x40096e7	     0xf858b040000	                           jne 0x4009b78	      5311	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x40096ed	      0x804c244240	              or byte [rsp + 0x42], 0x40	      5312	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x40096f2	      0xe981040000	                           jmp 0x4009b78	      5312	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x40096f7	      0x804c245210	              or byte [rsp + 0x52], 0x10	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40096fc	         0xf1f4000	                         nop dword [rax]	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009700	    0x4c8b25000000	            mov r12, qword [0x04009707] 	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009707	    0xc70500000000	               mov dword [0x04009711], 3	      5328	tc-i386.c	FUNCTION_77
0x4009711	        0x498b1c24	                    mov rbx, qword [r12]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009715	      0x493b5c2408	                cmp rbx, qword [r12 + 8]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400971a	     0xf83c30a0000	                           jae 0x400a1e3	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009720	          0x4531f6	                          xor r14d, r14d	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009723	          0x4531ff	                          xor r15d, r15d	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009726	    0x49bdffffffff	          movabs r13, 0xffffffbfffffffff	      2050	tc-i386.c	FUNCTION_26
0x4009730	            0xeb1f	                           jmp 0x4009751	      2050	tc-i386.c	FUNCTION_26
0x4009732	    0x660f1f440000	                    nop word [rax + rax]	      2050	tc-i386.c	FUNCTION_26
0x4009738	    0x4c8b25000000	            mov r12, qword [0x0400973f] 	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400973f	        0x4883c360	                           add rbx, 0x60	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009743	      0x498b442408	                mov rax, qword [r12 + 8]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009748	          0x4839d8	                            cmp rax, rbx	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400974b	     0xf86af020000	                           jbe 0x4009a00	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009751	          0x8b4308	                mov eax, dword [rbx + 8]	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4009754	    0x390500000000	            cmp dword [0x0400975a], eax 	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x400975a	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400975f	            0x75d7	                           jne 0x4009738	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4009761	          0x4889df	                            mov rdi, rbx	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4009764	    0xc70500000000	               mov dword [0x0400976e], 8	      5338	tc-i386.c	FUNCTION_77	FOR_1
0x400976e	      0xe88dc3ffff	                call sym.cpu_flags_match	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4009773	          0x83f803	                              cmp eax, 3	      5341	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x4009776	            0x75c0	                           jne 0x4009738	      5341	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x4009778	    0x448b25000000	           mov r12d, dword [0x0400977f] 	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x400977f	    0xc70500000000	               mov dword [0x04009789], 6	      5345	tc-i386.c	FUNCTION_77	FOR_1
0x4009789	          0x4585e4	                         test r12d, r12d	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x400978c	            0x7406	                            je 0x4009794	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x400978e	        0xf6433040	           test byte [rbx + 0x30], 0x40 	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4009792	            0x75a4	                           jne 0x4009738	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4009794	    0x8b1500000000	            mov edx, dword [0x0400979a] 	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x400979a	    0xc70500000000	               mov dword [0x040097a4], 7	      5350	tc-i386.c	FUNCTION_77	FOR_1
0x40097a4	            0x85d2	                           test edx, edx	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097a6	     0xf85b4030000	                           jne 0x4009b60	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097ac	         0xfb64331	           movzx eax, byte [rbx + 0x31] 	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097b0	            0xa801	                              test al, 1	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097b2	            0x7514	                           jne 0x40097c8	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097b4	    0x8b2d00000000	            mov ebp, dword [0x040097ba] 	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097ba	            0x85ed	                           test ebp, ebp	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097bc	            0x7514	                           jne 0x40097d2	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097be	            0xa804	                              test al, 4	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097c0	            0x7414	                            je 0x40097d6	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097c2	    0x660f1f440000	                    nop word [rax + rax]	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097c8	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x40097cd	      0xe966ffffff	                           jmp 0x4009738	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x40097d2	            0xa802	                              test al, 2	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097d4	            0x75f2	                           jne 0x40097c8	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40097d6	            0x85d2	                           test edx, edx	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40097d8	    0xc70500000000	               mov dword [0x040097e2], 4	      5358	tc-i386.c	FUNCTION_77	FOR_1
0x40097e2	     0xf8468010000	                            je 0x4009950	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40097e8	        0x807b2900	                cmp byte [rbx + 0x29], 0	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40097ec	     0xf895e010000	                           jns 0x4009950	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40097f2	         0xfb6432a	           movzx eax, byte [rbx + 0x2a] 	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40097f6	            0x89c1	                            mov ecx, eax	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40097f8	          0x83e102	                              and ecx, 2	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40097fb	            0x84c9	                             test cl, cl	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x40097fd	            0x7407	                            je 0x4009806	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x40097ff	      0xf644245202	               test byte [rsp + 0x52], 2	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009804	            0x75c2	                           jne 0x40097c8	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009806	            0xa804	                              test al, 4	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009808	            0x7407	                            je 0x4009811	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400980a	      0xf644245204	               test byte [rsp + 0x52], 4	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400980f	            0x75b7	                           jne 0x40097c8	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009811	            0xa808	                              test al, 8	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009813	     0xf8515040000	                           jne 0x4009c2e	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009819	            0xa810	                           test al, 0x10	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400981b	            0x7407	                            je 0x4009824	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400981d	      0xf644245210	           test byte [rsp + 0x52], 0x10 	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009822	            0x75a4	                           jne 0x40097c8	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009824	            0xa820	                           test al, 0x20	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009826	            0x7407	                            je 0x400982f	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009828	      0xf644245220	           test byte [rsp + 0x52], 0x20 	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400982d	            0x7599	                           jne 0x40097c8	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400982f	            0xa840	                           test al, 0x40	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009831	            0x7407	                            je 0x400983a	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009833	      0xf644245240	           test byte [rsp + 0x52], 0x40 	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009838	            0x758e	                           jne 0x40097c8	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400983a	    0x66f74328e001	          test word [rbx + 0x28], 0x1e0 	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4009840	     0xf8598080000	                           jne 0x400a0de	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4009846	    0x448b0d000000	            mov r9d, dword [0x0400984d] 	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400984d	          0x4585c9	                           test r9d, r9d	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4009850	     0xf8488080000	                            je 0x400a0de	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4009856	    0x4c8b05000000	              mov r8, qword [0x0400985d]	      1944	tc-i386.c	FUNCTION_24
0x400985d	            0x31f6	                            xor esi, esi	      1944	tc-i386.c	FUNCTION_24
0x400985f	            0x89f0	                            mov eax, esi	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4009861	     0xfb60cc50000	                 movzx ecx, byte [rax*8]	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4009869	          0xf6c101	                              test cl, 1	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400986c	            0x7510	                           jne 0x400987e	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400986e	          0x83e104	                              and ecx, 4	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4009871	            0x750b	                           jne 0x400987e	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4009873	      0x807cc33800	        cmp byte [rbx + rax*8 + 0x38], 0	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x4009878	     0xf8854080000	                            js 0x400a0d2	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x400987e	        0x488d4806	                      lea rcx, [rax + 6]	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x4009882	      0xf644cb0401	         test byte [rbx + rcx*8 + 4], 1 	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x4009887	     0xf845a060000	                            je 0x4009ee7	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x400988d	    0xf604c5000000	                 test byte [rax*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x4009895	     0xf84f8050000	                            je 0x4009e93	      1910	tc-i386.c	FUNCTION_22
0x400989b	      0xf644cb0720	      test byte [rbx + rcx*8 + 7], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x40098a0	     0xf85ed050000	                           jne 0x4009e93	      1911	tc-i386.c	FUNCTION_22
0x40098a6	        0xf6432801	               test byte [rbx + 0x28], 1	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40098aa	     0xf8486000000	                            je 0x4009936	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x40098b0	        0x4183f902	                              cmp r9d, 2	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40098b4	     0xf852b180000	                           jne 0x400b0e5	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40098ba	            0x31c9	                            xor ecx, ecx	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x40098bc	            0x89ce	                            mov esi, ecx	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40098be	        0x488d4606	                      lea rax, [rsi + 6]	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40098c2	      0xf644c30401	         test byte [rbx + rax*8 + 4], 1 	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40098c7	            0x750b	                           jne 0x40098d4	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40098c9	      0xf644c30620	      test byte [rbx + rax*8 + 6], 0x20 	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40098ce	     0xf849e090000	                            je 0x400a272	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x40098d4	            0x89c8	                            mov eax, ecx	      1910	tc-i386.c	FUNCTION_22
0x40098d6	          0x83f001	                              xor eax, 1	      1910	tc-i386.c	FUNCTION_22
0x40098d9	    0xf604c5000000	                 test byte [rax*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x40098e1	            0x7407	                            je 0x40098ea	      1910	tc-i386.c	FUNCTION_22
0x40098e3	      0xf644c33720	   test byte [rbx + rax*8 + 0x37], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x40098e8	            0x744c	                            je 0x4009936	      1911	tc-i386.c	FUNCTION_22
0x40098ea	    0xf604c5000000	                 test byte [rax*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x40098f2	            0x7407	                            je 0x40098fb	      1912	tc-i386.c	FUNCTION_22
0x40098f4	      0xf644c33740	   test byte [rbx + rax*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x40098f9	            0x743b	                            je 0x4009936	      1913	tc-i386.c	FUNCTION_22
0x40098fb	    0x803cc5000000	                     cmp byte [rax*8], 0	      1914	tc-i386.c	FUNCTION_22
0x4009903	            0x7907	                           jns 0x400990c	      1914	tc-i386.c	FUNCTION_22
0x4009905	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x400990a	            0x792a	                           jns 0x4009936	      1915	tc-i386.c	FUNCTION_22
0x400990c	    0xf604c5000000	                    test byte [rax*8], 2	      1916	tc-i386.c	FUNCTION_22
0x4009914	            0x7407	                            je 0x400991d	      1916	tc-i386.c	FUNCTION_22
0x4009916	      0xf644c33802	      test byte [rbx + rax*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x400991b	            0x7419	                            je 0x4009936	      1917	tc-i386.c	FUNCTION_22
0x400991d	    0xf604c5000000	                    test byte [rax*8], 4	      1910	tc-i386.c	FUNCTION_22
0x4009925	     0xf8447090000	                            je 0x400a272	      1910	tc-i386.c	FUNCTION_22
0x400992b	      0xf644c33804	      test byte [rbx + rax*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x4009930	     0xf853c090000	                           jne 0x400a272	      1919	tc-i386.c	FUNCTION_22
0x4009936	    0xc70500000000	               mov dword [0x04009940], 0	      2020	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x4009940	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009945	      0xe9eefdffff	                           jmp 0x4009738	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400994a	    0x660f1f440000	                    nop word [rax + rax]	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009950	         0xfb6432a	           movzx eax, byte [rbx + 0x2a] 	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009954	            0x89c1	                            mov ecx, eax	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009956	          0x83e102	                              and ecx, 2	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009959	     0xf8537020000	                           jne 0x4009b96	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400995f	            0xa804	                              test al, 4	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009961	            0x740b	                            je 0x400996e	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009963	      0xf644244204	               test byte [rsp + 0x42], 4	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009968	     0xf855afeffff	                           jne 0x40097c8	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400996e	            0xa808	                              test al, 8	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009970	            0x740b	                            je 0x400997d	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009972	      0xf644244208	               test byte [rsp + 0x42], 8	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009977	     0xf854bfeffff	                           jne 0x40097c8	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400997d	            0xa810	                           test al, 0x10	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400997f	            0x740b	                            je 0x400998c	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009981	      0xf644244210	           test byte [rsp + 0x42], 0x10 	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009986	     0xf853cfeffff	                           jne 0x40097c8	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400998c	            0xa820	                           test al, 0x20	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400998e	            0x740b	                            je 0x400999b	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009990	      0xf644244220	           test byte [rsp + 0x42], 0x20 	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009995	     0xf852dfeffff	                           jne 0x40097c8	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400999b	            0xa840	                           test al, 0x40	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400999d	     0xf8458feffff	                            je 0x40097fb	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40099a3	      0xf644244240	           test byte [rsp + 0x42], 0x40 	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40099a8	     0xf851afeffff	                           jne 0x40097c8	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40099ae	      0xe948feffff	                           jmp 0x40097fb	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40099b3	         0xfb64330	           movzx eax, byte [rbx + 0x30] 	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x40099b7	          0x83e007	                              and eax, 7	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x40099ba	     0xf8562110000	                           jne 0x400ab22	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x40099c0	    0xc70500000000	               mov dword [0x040099ca], 0	      5225	tc-i386.c	FUNCTION_75	ELSE_3
0x40099ca	    0x8b0500000000	            mov eax, dword [0x040099d0] 	      5236	tc-i386.c	FUNCTION_76	IF_1
0x40099d0	          0x83f803	                              cmp eax, 3	      5236	tc-i386.c	FUNCTION_76	IF_1
0x40099d3	     0xf843f0f0000	                            je 0x400a918	      5236	tc-i386.c	FUNCTION_76	IF_1
0x40099d9	        0xf6432d06	               test byte [rbx + 0x2d], 6	      5247	tc-i386.c	FUNCTION_76	IF_3
0x40099dd	     0xf850f110000	                           jne 0x400aaf2	      5247	tc-i386.c	FUNCTION_76	IF_3
0x40099e3	            0x85c0	                           test eax, eax	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x40099e5	     0xf85370f0000	                           jne 0x400a922	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x40099eb	    0x4c8b25000000	            mov r12, qword [0x040099f2] 	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x40099f2	      0x498b442408	                mov rax, qword [r12 + 8]	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x40099f7	    0x660f1f840000	                    nop word [rax + rax]	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x4009a00	          0x4839d8	                            cmp rax, rbx	      5638	tc-i386.c	FUNCTION_77	IF_42
0x4009a03	     0xf84cc010000	                            je 0x4009bd5	      5638	tc-i386.c	FUNCTION_77	IF_42
0x4009a09	    0x8b1500000000	            mov edx, dword [0x04009a0f] 	      5719	tc-i386.c	FUNCTION_77	IF_44
0x4009a0f	            0x85d2	                           test edx, edx	      5719	tc-i386.c	FUNCTION_77	IF_44
0x4009a11	            0x755f	                           jne 0x4009a72	      5719	tc-i386.c	FUNCTION_77	IF_44
0x4009a13	    0x8b0500000000	            mov eax, dword [0x04009a19] 	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a19	            0x85c0	                           test eax, eax	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a1b	            0x753b	                           jne 0x4009a58	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a1d	     0xfb615000000	           movzx edx, byte [0x04009a24] 	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a24	       0xfb6442463	           movzx eax, byte [rsp + 0x63] 	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a29	            0xd0ea	                               shr dl, 1	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a2b	            0xd0e8	                               shr al, 1	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a2d	          0x83e201	                              and edx, 1	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a30	          0x83e001	                              and eax, 1	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a33	            0x38c2	                              cmp dl, al	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a35	            0x7421	                            je 0x4009a58	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x4009a37	          0x4c8b23	                    mov r12, qword [rbx]	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a3a	      0xbe00000000	                              mov esi, 0	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a3f	            0x31ff	                            xor edi, edi	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a41	      0xba05000000	                              mov edx, 5	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a46	      0xe800000000	                          call 0x4009a4b	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a4b	          0x4c89e6	                            mov rsi, r12	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a4e	          0x4889c7	                            mov rdi, rax	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a51	            0x31c0	                            xor eax, eax	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a53	      0xe800000000	                          call 0x4009a58	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x4009a58	    0x48b800800000	                movabs rax, 0x1000008000	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4009a62	          0x4889c2	                            mov rdx, rax	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4009a65	        0x48235328	             and rdx, qword [rbx + 0x28]	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4009a69	          0x4839c2	                            cmp rdx, rax	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4009a6c	     0xf8496010000	                            je 0x4009c08	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x4009a72	          0x488b03	                    mov rax, qword [rbx]	      5738	tc-i386.c	FUNCTION_77
0x4009a75	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      5740	tc-i386.c	FUNCTION_77	IF_47
0x4009a78	    0x488905000000	            mov qword [0x04009a7f], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009a7f	        0x488b4308	                mov rax, qword [rbx + 8]	      5738	tc-i386.c	FUNCTION_77
0x4009a83	    0x488905000000	            mov qword [0x04009a8a], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009a8a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5738	tc-i386.c	FUNCTION_77
0x4009a8e	    0x488905000000	            mov qword [0x04009a95], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009a95	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5738	tc-i386.c	FUNCTION_77
0x4009a99	    0x488905000000	            mov qword [0x04009aa0], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009aa0	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5738	tc-i386.c	FUNCTION_77
0x4009aa4	    0x488905000000	            mov qword [0x04009aab], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009aab	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      5738	tc-i386.c	FUNCTION_77
0x4009aaf	    0x488905000000	            mov qword [0x04009ab6], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009ab6	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5738	tc-i386.c	FUNCTION_77
0x4009aba	    0x488905000000	            mov qword [0x04009ac1], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009ac1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5738	tc-i386.c	FUNCTION_77
0x4009ac5	    0x488905000000	            mov qword [0x04009acc], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009acc	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5738	tc-i386.c	FUNCTION_77
0x4009ad0	    0x488905000000	            mov qword [0x04009ad7], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009ad7	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5738	tc-i386.c	FUNCTION_77
0x4009adb	    0x488905000000	            mov qword [0x04009ae2], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009ae2	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      5738	tc-i386.c	FUNCTION_77
0x4009ae6	    0x488905000000	            mov qword [0x04009aed], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009aed	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      5738	tc-i386.c	FUNCTION_77
0x4009af1	    0x488905000000	            mov qword [0x04009af8], rax 	      5738	tc-i386.c	FUNCTION_77
0x4009af8	            0x7410	                            je 0x4009b0a	      5740	tc-i386.c	FUNCTION_77	IF_47
0x4009afa	          0x4863ed	                         movsxd rbp, ebp	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4009afd	      0x488b44ec60	    mov rax, qword [rsp + rbp*8 + 0x60] 	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4009b02	    0x488904ed0000	                  mov qword [rbp*8], rax	      5742	tc-i386.c	FUNCTION_77	IF_47
0x4009b0a	          0x4585ff	                         test r15d, r15d	      5744	tc-i386.c	FUNCTION_77	IF_48
0x4009b0d	          0x4889d8	                            mov rax, rbx	      5744	tc-i386.c	FUNCTION_77	IF_48
0x4009b10	            0x741f	                            je 0x4009b31	      5744	tc-i386.c	FUNCTION_77	IF_48
0x4009b12	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      5752	tc-i386.c	FUNCTION_77	IF_48
0x4009b17	    0x44313d000000	            xor dword [0x04009b1e], r15d	      5750	tc-i386.c	FUNCTION_77	IF_48
0x4009b1e	    0x488915000000	            mov qword [0x04009b25], rdx 	      5752	tc-i386.c	FUNCTION_77	IF_48
0x4009b25	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      5753	tc-i386.c	FUNCTION_77	IF_48
0x4009b2a	    0x488915000000	            mov qword [0x04009b31], rdx 	      5753	tc-i386.c	FUNCTION_77	IF_48
0x4009b31	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      5757	tc-i386.c	FUNCTION_77
0x4009b39	    0x644833342528	                xor rsi, qword fs:[0x28]	      5757	tc-i386.c	FUNCTION_77
0x4009b42	     0xf85d4150000	                           jne 0x400b11c	      5757	tc-i386.c	FUNCTION_77
0x4009b48	    0x4881c4980000	                           add rsp, 0x98	      5757	tc-i386.c	FUNCTION_77
0x4009b4f	              0x5b	                                 pop rbx	      5757	tc-i386.c	FUNCTION_77
0x4009b50	              0x5d	                                 pop rbp	      5757	tc-i386.c	FUNCTION_77
0x4009b51	            0x415c	                                 pop r12	      5757	tc-i386.c	FUNCTION_77
0x4009b53	            0x415d	                                 pop r13	      5757	tc-i386.c	FUNCTION_77
0x4009b55	            0x415e	                                 pop r14	      5757	tc-i386.c	FUNCTION_77
0x4009b57	            0x415f	                                 pop r15	      5757	tc-i386.c	FUNCTION_77
0x4009b59	              0xc3	                                     ret	      5757	tc-i386.c	FUNCTION_77
0x4009b5a	    0x660f1f440000	                    nop word [rax + rax]	      5757	tc-i386.c	FUNCTION_77
0x4009b60	        0x807b3000	                cmp byte [rbx + 0x30], 0	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4009b64	     0xf885efcffff	                            js 0x40097c8	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4009b6a	         0xfb64331	           movzx eax, byte [rbx + 0x31] 	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4009b6e	      0xe941fcffff	                           jmp 0x40097b4	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x4009b73	      0x804c244202	                 or byte [rsp + 0x42], 2	      5302	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4009b78	            0x85c0	                           test eax, eax	      5315	tc-i386.c	FUNCTION_77	IF_8
0x4009b7a	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_147	CALL_6
0x4009b83	    0xc74424580000	               mov dword [rsp + 0x58], 0	        90	string3.h	FUNCTION_147	CALL_6
0x4009b8b	     0xf846ffbffff	                            je 0x4009700	      5315	tc-i386.c	FUNCTION_77	IF_8
0x4009b91	      0xe904fbffff	                           jmp 0x400969a	      5315	tc-i386.c	FUNCTION_77	IF_8
0x4009b96	      0xf644244202	               test byte [rsp + 0x42], 2	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009b9b	     0xf8527fcffff	                           jne 0x40097c8	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009ba1	      0xe9b9fdffff	                           jmp 0x400995f	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009ba6	      0x804c245204	                 or byte [rsp + 0x52], 4	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bab	      0xe950fbffff	                           jmp 0x4009700	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bb0	      0x804c245220	              or byte [rsp + 0x52], 0x20	      5323	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bb5	      0xe946fbffff	                           jmp 0x4009700	      5323	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bba	      0x804c245208	                 or byte [rsp + 0x52], 8	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bbf	      0xe93cfbffff	                           jmp 0x4009700	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bc4	      0x804c245202	                 or byte [rsp + 0x52], 2	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bc9	      0xe932fbffff	                           jmp 0x4009700	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x4009bce	      0x804c244208	                 or byte [rsp + 0x42], 8	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009bd3	            0xeba3	                           jmp 0x4009b78	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009bd5	          0x4585f6	                         test r14d, r14d	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009bd8	          0x4489f0	                           mov eax, r14d	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009bdb	     0xf4405000000	           cmove eax, dword [0x04009be2]	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009be2	          0x83f814	                           cmp eax, 0x14	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009be5	     0xf8773060000	                            ja 0x400a25e	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009beb	            0x89c0	                            mov eax, eax	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009bed	    0xff24c5000000	                       jmp qword [rax*8]	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009bf4	      0x804c244204	                 or byte [rsp + 0x42], 4	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4009bf9	      0xe97affffff	                           jmp 0x4009b78	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4009bfe	      0x804c244210	              or byte [rsp + 0x42], 0x10	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4009c03	      0xe970ffffff	                           jmp 0x4009b78	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4009c08	          0x4c8b23	                    mov r12, qword [rbx]	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c0b	            0x31ff	                            xor edi, edi	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c0d	      0xba05000000	                              mov edx, 5	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c12	      0xbe00000000	                              mov esi, 0	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c17	      0xe800000000	                          call 0x4009c1c	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c1c	          0x4c89e6	                            mov rsi, r12	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c1f	          0x4889c7	                            mov rdi, rax	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c22	            0x31c0	                            xor eax, eax	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c24	      0xe800000000	                          call 0x4009c29	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c29	      0xe944feffff	                           jmp 0x4009a72	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x4009c2e	      0xf644245208	               test byte [rsp + 0x52], 8	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009c33	     0xf858ffbffff	                           jne 0x40097c8	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009c39	      0xe9dbfbffff	                           jmp 0x4009819	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009c3e	      0xba05000000	                              mov edx, 5	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x4009c43	      0xbe00000000	                              mov esi, 0	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x4009c48	            0x31ff	                            xor edi, edi	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x4009c4a	      0xe800000000	                          call 0x4009c4f	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x4009c4f	          0x4889c3	                            mov rbx, rax	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x4009c52	        0x498b0424	                    mov rax, qword [r12]	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c56	      0xba05000000	                              mov edx, 5	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c5b	      0xbe00000000	                              mov esi, 0	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c60	            0x31ff	                            xor edi, edi	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c62	          0x488b28	                    mov rbp, qword [rax]	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c65	      0xe800000000	                          call 0x4009c6a	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c6a	          0x4889de	                            mov rsi, rbx	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c6d	          0x4889c7	                            mov rdi, rax	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c70	            0x31c0	                            xor eax, eax	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c72	          0x4889ea	                            mov rdx, rbp	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c75	      0xe800000000	                          call 0x4009c7a	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x4009c7a	            0x31c0	                            xor eax, eax	      5716	tc-i386.c	FUNCTION_77	IF_42
0x4009c7c	      0xe9b0feffff	                           jmp 0x4009b31	      5716	tc-i386.c	FUNCTION_77	IF_42
0x4009c81	      0xba05000000	                              mov edx, 5	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4009c86	      0xbe00000000	                              mov esi, 0	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4009c8b	            0x31ff	                            xor edi, edi	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4009c8d	      0xe800000000	                          call 0x4009c92	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4009c92	          0x4889c3	                            mov rbx, rax	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x4009c95	            0xebbb	                           jmp 0x4009c52	      5712	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009c97	        0x498b0424	                    mov rax, qword [r12]	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009c9b	      0xba05000000	                              mov edx, 5	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009ca0	      0xbe00000000	                              mov esi, 0	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009ca5	            0x31ff	                            xor edi, edi	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009ca7	          0x488b18	                    mov rbx, qword [rax]	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009caa	      0xe800000000	                          call 0x4009caf	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009caf	          0x4889c7	                            mov rdi, rax	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009cb2	            0x31c0	                            xor eax, eax	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009cb4	          0x4889de	                            mov rsi, rbx	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009cb7	      0xe800000000	                          call 0x4009cbc	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x4009cbc	            0x31c0	                            xor eax, eax	      5673	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009cbe	      0xe96efeffff	                           jmp 0x4009b31	      5673	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009cc3	      0xba05000000	                              mov edx, 5	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x4009cc8	      0xbe00000000	                              mov esi, 0	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x4009ccd	            0x31ff	                            xor edi, edi	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x4009ccf	      0xe800000000	                          call 0x4009cd4	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x4009cd4	          0x4889c3	                            mov rbx, rax	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x4009cd7	      0xe976ffffff	                           jmp 0x4009c52	      5669	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009cdc	      0xba05000000	                              mov edx, 5	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x4009ce1	      0xbe00000000	                              mov esi, 0	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x4009ce6	            0x31ff	                            xor edi, edi	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x4009ce8	      0xe800000000	                          call 0x4009ced	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x4009ced	          0x4889c3	                            mov rbx, rax	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x4009cf0	      0xe95dffffff	                           jmp 0x4009c52	      5666	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009cf5	      0xba05000000	                              mov edx, 5	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x4009cfa	      0xbe00000000	                              mov esi, 0	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x4009cff	            0x31ff	                            xor edi, edi	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x4009d01	      0xe800000000	                          call 0x4009d06	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x4009d06	          0x4889c3	                            mov rbx, rax	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x4009d09	      0xe944ffffff	                           jmp 0x4009c52	      5663	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009d0e	      0xba05000000	                              mov edx, 5	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x4009d13	      0xbe00000000	                              mov esi, 0	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x4009d18	            0x31ff	                            xor edi, edi	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x4009d1a	      0xe800000000	                          call 0x4009d1f	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x4009d1f	          0x4889c3	                            mov rbx, rax	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x4009d22	      0xe92bffffff	                           jmp 0x4009c52	      5660	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009d27	      0xba05000000	                              mov edx, 5	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x4009d2c	      0xbe00000000	                              mov esi, 0	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x4009d31	            0x31ff	                            xor edi, edi	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x4009d33	      0xe800000000	                          call 0x4009d38	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x4009d38	          0x4889c3	                            mov rbx, rax	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x4009d3b	      0xe912ffffff	                           jmp 0x4009c52	      5654	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009d40	      0xba05000000	                              mov edx, 5	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x4009d45	      0xbe00000000	                              mov esi, 0	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x4009d4a	            0x31ff	                            xor edi, edi	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x4009d4c	      0xe800000000	                          call 0x4009d51	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x4009d51	          0x4889c3	                            mov rbx, rax	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x4009d54	      0xe9f9feffff	                           jmp 0x4009c52	      5651	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009d59	    0x8b0d00000000	            mov ecx, dword [0x04009d5f] 	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x4009d5f	      0xba05000000	                              mov edx, 5	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x4009d64	            0x85c9	                           test ecx, ecx	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x4009d66	     0xf840c080000	                            je 0x400a578	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x4009d6c	      0xbe00000000	                              mov esi, 0	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x4009d71	            0x31ff	                            xor edi, edi	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x4009d73	      0xe800000000	                          call 0x4009d78	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x4009d78	          0x4889c3	                            mov rbx, rax	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x4009d7b	      0xe9d2feffff	                           jmp 0x4009c52	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x4009d80	      0xba05000000	                              mov edx, 5	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x4009d85	      0xbe00000000	                              mov esi, 0	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x4009d8a	            0x31ff	                            xor edi, edi	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x4009d8c	      0xe800000000	                          call 0x4009d91	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x4009d91	          0x4889c3	                            mov rbx, rax	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x4009d94	      0xe9b9feffff	                           jmp 0x4009c52	      5703	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009d99	      0xba05000000	                              mov edx, 5	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x4009d9e	      0xbe00000000	                              mov esi, 0	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x4009da3	            0x31ff	                            xor edi, edi	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x4009da5	      0xe800000000	                          call 0x4009daa	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x4009daa	          0x4889c3	                            mov rbx, rax	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x4009dad	      0xe9a0feffff	                           jmp 0x4009c52	      5697	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009db2	      0xba05000000	                              mov edx, 5	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x4009db7	      0xbe00000000	                              mov esi, 0	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x4009dbc	            0x31ff	                            xor edi, edi	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x4009dbe	      0xe800000000	                          call 0x4009dc3	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x4009dc3	          0x4889c3	                            mov rbx, rax	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x4009dc6	      0xe987feffff	                           jmp 0x4009c52	      5694	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009dcb	      0xba05000000	                              mov edx, 5	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x4009dd0	      0xbe00000000	                              mov esi, 0	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x4009dd5	            0x31ff	                            xor edi, edi	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x4009dd7	      0xe800000000	                          call 0x4009ddc	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x4009ddc	          0x4889c3	                            mov rbx, rax	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x4009ddf	      0xe96efeffff	                           jmp 0x4009c52	      5691	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009de4	      0xba05000000	                              mov edx, 5	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x4009de9	      0xbe00000000	                              mov esi, 0	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x4009dee	            0x31ff	                            xor edi, edi	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x4009df0	      0xe800000000	                          call 0x4009df5	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x4009df5	          0x4889c3	                            mov rbx, rax	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x4009df8	      0xe955feffff	                           jmp 0x4009c52	      5688	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009dfd	      0xba05000000	                              mov edx, 5	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x4009e02	      0xbe00000000	                              mov esi, 0	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x4009e07	            0x31ff	                            xor edi, edi	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x4009e09	      0xe800000000	                          call 0x4009e0e	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x4009e0e	          0x4889c3	                            mov rbx, rax	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x4009e11	      0xe93cfeffff	                           jmp 0x4009c52	      5685	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009e16	      0xba05000000	                              mov edx, 5	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4009e1b	      0xbe00000000	                              mov esi, 0	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4009e20	            0x31ff	                            xor edi, edi	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4009e22	      0xe800000000	                          call 0x4009e27	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4009e27	          0x4889c3	                            mov rbx, rax	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x4009e2a	      0xe923feffff	                           jmp 0x4009c52	      5682	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009e2f	      0xba05000000	                              mov edx, 5	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x4009e34	      0xbe00000000	                              mov esi, 0	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x4009e39	            0x31ff	                            xor edi, edi	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x4009e3b	      0xe800000000	                          call 0x4009e40	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x4009e40	          0x4889c3	                            mov rbx, rax	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x4009e43	      0xe90afeffff	                           jmp 0x4009c52	      5679	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009e48	      0xba05000000	                              mov edx, 5	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x4009e4d	      0xbe00000000	                              mov esi, 0	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x4009e52	            0x31ff	                            xor edi, edi	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x4009e54	      0xe800000000	                          call 0x4009e59	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x4009e59	          0x4889c3	                            mov rbx, rax	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x4009e5c	      0xe9f1fdffff	                           jmp 0x4009c52	      5676	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009e61	      0xba05000000	                              mov edx, 5	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x4009e66	      0xbe00000000	                              mov esi, 0	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x4009e6b	            0x31ff	                            xor edi, edi	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x4009e6d	      0xe800000000	                          call 0x4009e72	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x4009e72	          0x4889c3	                            mov rbx, rax	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x4009e75	      0xe9d8fdffff	                           jmp 0x4009c52	      5700	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009e7a	      0xba05000000	                              mov edx, 5	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x4009e7f	      0xbe00000000	                              mov esi, 0	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x4009e84	            0x31ff	                            xor edi, edi	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x4009e86	      0xe800000000	                          call 0x4009e8b	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x4009e8b	          0x4889c3	                            mov rbx, rax	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x4009e8e	      0xe9bffdffff	                           jmp 0x4009c52	      5657	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x4009e93	    0xf604c5000000	                 test byte [rax*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x4009e9b	            0x740b	                            je 0x4009ea8	      1912	tc-i386.c	FUNCTION_22
0x4009e9d	      0xf644c33740	   test byte [rbx + rax*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x4009ea2	     0xf84fef9ffff	                            je 0x40098a6	      1913	tc-i386.c	FUNCTION_22
0x4009ea8	    0x803cc5000000	                     cmp byte [rax*8], 0	      1914	tc-i386.c	FUNCTION_22
0x4009eb0	            0x790b	                           jns 0x4009ebd	      1914	tc-i386.c	FUNCTION_22
0x4009eb2	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x4009eb7	     0xf89e9f9ffff	                           jns 0x40098a6	      1915	tc-i386.c	FUNCTION_22
0x4009ebd	    0xf604c5000000	                    test byte [rax*8], 2	      1916	tc-i386.c	FUNCTION_22
0x4009ec5	            0x740b	                            je 0x4009ed2	      1916	tc-i386.c	FUNCTION_22
0x4009ec7	      0xf644c33802	      test byte [rbx + rax*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x4009ecc	     0xf84d4f9ffff	                            je 0x40098a6	      1917	tc-i386.c	FUNCTION_22
0x4009ed2	    0xf604c5000000	                    test byte [rax*8], 4	      1910	tc-i386.c	FUNCTION_22
0x4009eda	            0x740b	                            je 0x4009ee7	      1910	tc-i386.c	FUNCTION_22
0x4009edc	      0xf644c33804	      test byte [rbx + rax*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x4009ee1	     0xf84bff9ffff	                            je 0x40098a6	      1919	tc-i386.c	FUNCTION_22
0x4009ee7	        0x488d7806	                      lea rdi, [rax + 6]	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009eeb	       0xfb64cfb04	      movzx ecx, byte [rbx + rdi*8 + 4] 	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009ef0	          0xc0e902	                               shr cl, 2	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009ef3	          0x83e101	                              and ecx, 1	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009ef6	            0x7438	                            je 0x4009f30	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009ef8	    0xf604c5000000	                    test byte [rax*8], 8	      1928	tc-i386.c	FUNCTION_23
0x4009f00	            0x740b	                            je 0x4009f0d	      1928	tc-i386.c	FUNCTION_23
0x4009f02	      0xf644fb0808	         test byte [rbx + rdi*8 + 8], 8 	      1929	tc-i386.c	FUNCTION_23
0x4009f07	     0xf8499f9ffff	                            je 0x40098a6	      1929	tc-i386.c	FUNCTION_23
0x4009f0d	    0xf604c5000000	                 test byte [rax*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x4009f15	            0x740b	                            je 0x4009f22	      1930	tc-i386.c	FUNCTION_23
0x4009f17	      0xf644c33810	   test byte [rbx + rax*8 + 0x38], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x4009f1c	     0xf8484f9ffff	                            je 0x40098a6	      1931	tc-i386.c	FUNCTION_23
0x4009f22	    0xf604c5000000	                 test byte [rax*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x4009f2a	     0xf850e030000	                           jne 0x400a23e	      1928	tc-i386.c	FUNCTION_23
0x4009f30	        0x488d7806	                      lea rdi, [rax + 6]	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4009f34	      0xf644fb0620	      test byte [rbx + rdi*8 + 6], 0x20 	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4009f39	     0xf84a1000000	                            je 0x4009fe0	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x4009f3f	    0xf604c5000000	                 test byte [rax*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x4009f47	            0x740b	                            je 0x4009f54	      1910	tc-i386.c	FUNCTION_22
0x4009f49	      0xf644fb0720	      test byte [rbx + rdi*8 + 7], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x4009f4e	     0xf8452f9ffff	                            je 0x40098a6	      1911	tc-i386.c	FUNCTION_22
0x4009f54	    0xf604c5000000	                 test byte [rax*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x4009f5c	            0x740b	                            je 0x4009f69	      1912	tc-i386.c	FUNCTION_22
0x4009f5e	      0xf644c33740	   test byte [rbx + rax*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x4009f63	     0xf843df9ffff	                            je 0x40098a6	      1913	tc-i386.c	FUNCTION_22
0x4009f69	    0x803cc5000000	                     cmp byte [rax*8], 0	      1914	tc-i386.c	FUNCTION_22
0x4009f71	            0x790b	                           jns 0x4009f7e	      1914	tc-i386.c	FUNCTION_22
0x4009f73	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x4009f78	     0xf8928f9ffff	                           jns 0x40098a6	      1915	tc-i386.c	FUNCTION_22
0x4009f7e	    0xf604c5000000	                    test byte [rax*8], 2	      1916	tc-i386.c	FUNCTION_22
0x4009f86	            0x740b	                            je 0x4009f93	      1916	tc-i386.c	FUNCTION_22
0x4009f88	      0xf644c33802	      test byte [rbx + rax*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x4009f8d	     0xf8413f9ffff	                            je 0x40098a6	      1917	tc-i386.c	FUNCTION_22
0x4009f93	    0xf604c5000000	                    test byte [rax*8], 4	      1910	tc-i386.c	FUNCTION_22
0x4009f9b	            0x740b	                            je 0x4009fa8	      1910	tc-i386.c	FUNCTION_22
0x4009f9d	      0xf644c33804	      test byte [rbx + rax*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x4009fa2	     0xf84fef8ffff	                            je 0x40098a6	      1919	tc-i386.c	FUNCTION_22
0x4009fa8	    0xf604c5000000	                    test byte [rax*8], 8	      1928	tc-i386.c	FUNCTION_23
0x4009fb0	            0x740b	                            je 0x4009fbd	      1928	tc-i386.c	FUNCTION_23
0x4009fb2	      0xf644c33808	      test byte [rbx + rax*8 + 0x38], 8 	      1929	tc-i386.c	FUNCTION_23
0x4009fb7	     0xf84e9f8ffff	                            je 0x40098a6	      1929	tc-i386.c	FUNCTION_23
0x4009fbd	    0xf604c5000000	                 test byte [rax*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x4009fc5	            0x740b	                            je 0x4009fd2	      1930	tc-i386.c	FUNCTION_23
0x4009fc7	      0xf644c33810	   test byte [rbx + rax*8 + 0x38], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x4009fcc	     0xf84d4f8ffff	                            je 0x40098a6	      1931	tc-i386.c	FUNCTION_23
0x4009fd2	    0xf604c5000000	                 test byte [rax*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x4009fda	     0xf856e020000	                           jne 0x400a24e	      1928	tc-i386.c	FUNCTION_23
0x4009fe0	     0xfb63cc50000	                 movzx edi, byte [rax*8]	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4009fe8	        0x40f6c710	                          test dil, 0x10	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4009fec	     0xf84e0000000	                            je 0x400a0d2	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x4009ff2	          0x83e720	                           and edi, 0x20	      1910	tc-i386.c	FUNCTION_22
0x4009ff5	            0x740b	                            je 0x400a002	      1910	tc-i386.c	FUNCTION_22
0x4009ff7	      0xf644c33720	   test byte [rbx + rax*8 + 0x37], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x4009ffc	     0xf84a4f8ffff	                            je 0x40098a6	      1911	tc-i386.c	FUNCTION_22
0x400a002	    0xf604c5000000	                 test byte [rax*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x400a00a	            0x740b	                            je 0x400a017	      1912	tc-i386.c	FUNCTION_22
0x400a00c	      0xf644c33740	   test byte [rbx + rax*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x400a011	     0xf848ff8ffff	                            je 0x40098a6	      1913	tc-i386.c	FUNCTION_22
0x400a017	    0x803cc5000000	                     cmp byte [rax*8], 0	      1914	tc-i386.c	FUNCTION_22
0x400a01f	            0x790b	                           jns 0x400a02c	      1914	tc-i386.c	FUNCTION_22
0x400a021	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x400a026	     0xf897af8ffff	                           jns 0x40098a6	      1915	tc-i386.c	FUNCTION_22
0x400a02c	    0xf604c5000000	                    test byte [rax*8], 2	      1916	tc-i386.c	FUNCTION_22
0x400a034	            0x740b	                            je 0x400a041	      1916	tc-i386.c	FUNCTION_22
0x400a036	      0xf644c33802	      test byte [rbx + rax*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x400a03b	     0xf8465f8ffff	                            je 0x40098a6	      1917	tc-i386.c	FUNCTION_22
0x400a041	    0xf604c5000000	                    test byte [rax*8], 4	      1910	tc-i386.c	FUNCTION_22
0x400a049	            0x740b	                            je 0x400a056	      1910	tc-i386.c	FUNCTION_22
0x400a04b	      0xf644c33804	      test byte [rbx + rax*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x400a050	     0xf8450f8ffff	                            je 0x40098a6	      1919	tc-i386.c	FUNCTION_22
0x400a056	    0xf604c5000000	                 test byte [rax*8], 0x40	      1943	tc-i386.c	FUNCTION_24
0x400a05e	            0x7409	                            je 0x400a069	      1943	tc-i386.c	FUNCTION_24
0x400a060	          0x4d85c0	                             test r8, r8	      1944	tc-i386.c	FUNCTION_24
0x400a063	     0xf8423050000	                            je 0x400a58c	      1944	tc-i386.c	FUNCTION_24
0x400a069	    0xf604c5000000	                    test byte [rax*8], 1	      1946	tc-i386.c	FUNCTION_24
0x400a071	            0x740b	                            je 0x400a07e	      1946	tc-i386.c	FUNCTION_24
0x400a073	      0xf644c33801	      test byte [rbx + rax*8 + 0x38], 1 	      1947	tc-i386.c	FUNCTION_24
0x400a078	     0xf8428f8ffff	                            je 0x40098a6	      1947	tc-i386.c	FUNCTION_24
0x400a07e	            0x84c9	                             test cl, cl	      1943	tc-i386.c	FUNCTION_24
0x400a080	     0xf8470010000	                            je 0x400a1f6	      1943	tc-i386.c	FUNCTION_24
0x400a086	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      1953	tc-i386.c	FUNCTION_24
0x400a08a	     0xf8566010000	                           jne 0x400a1f6	      1953	tc-i386.c	FUNCTION_24
0x400a090	        0x488d7806	                      lea rdi, [rax + 6]	      1954	tc-i386.c	FUNCTION_24
0x400a094	       0xfb64cfb07	      movzx ecx, byte [rbx + rdi*8 + 7] 	      1954	tc-i386.c	FUNCTION_24
0x400a099	          0xf6c120	                           test cl, 0x20	      1954	tc-i386.c	FUNCTION_24
0x400a09c	            0x7514	                           jne 0x400a0b2	      1954	tc-i386.c	FUNCTION_24
0x400a09e	          0xf6c140	                           test cl, 0x40	      1955	tc-i386.c	FUNCTION_24
0x400a0a1	            0x750f	                           jne 0x400a0b2	      1955	tc-i386.c	FUNCTION_24
0x400a0a3	            0x84c9	                             test cl, cl	      1956	tc-i386.c	FUNCTION_24
0x400a0a5	            0x780b	                            js 0x400a0b2	      1956	tc-i386.c	FUNCTION_24
0x400a0a7	      0xf644fb0802	         test byte [rbx + rdi*8 + 8], 2 	      1957	tc-i386.c	FUNCTION_24
0x400a0ac	     0xf8444010000	                            je 0x400a1f6	      1957	tc-i386.c	FUNCTION_24
0x400a0b2	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1958	tc-i386.c	FUNCTION_24
0x400a0ba	            0xa808	                              test al, 8	      1960	tc-i386.c	FUNCTION_24
0x400a0bc	     0xf85e4f7ffff	                           jne 0x40098a6	      1960	tc-i386.c	FUNCTION_24
0x400a0c2	            0xa810	                           test al, 0x10	      1959	tc-i386.c	FUNCTION_24
0x400a0c4	     0xf85dcf7ffff	                           jne 0x40098a6	      1959	tc-i386.c	FUNCTION_24
0x400a0ca	            0xa820	                           test al, 0x20	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400a0cc	     0xf85d4f7ffff	                           jne 0x40098a6	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400a0d2	          0x83c601	                              add esi, 1	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400a0d5	          0x4139f1	                            cmp r9d, esi	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400a0d8	     0xf8581f7ffff	                           jne 0x400985f	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400a0de	            0x31c0	                            xor eax, eax	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400a0e0	      0x488b4c0334	      mov rcx, qword [rbx + rax + 0x34] 	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x400a0e5	      0x48894c0460	       mov qword [rsp + rax + 0x60], rcx	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x400a0ea	        0x4883c008	                              add rax, 8	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x400a0ee	        0x4883f828	                           cmp rax, 0x28	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x400a0f2	            0x75ec	                           jne 0x400a0e0	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x400a0f4	     0xfb605000000	           movzx eax, byte [0x0400a0fb] 	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a0fb	            0x3c71	                            cmp al, 0x71	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a0fd	     0xf84fd030000	                            je 0x400a500	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a103	            0x3c6c	                            cmp al, 0x6c	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a105	     0xf8495030000	                            je 0x400a4a0	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a10b	          0x8b4308	                mov eax, dword [rbx + 8]	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a10e	            0x85c0	                           test eax, eax	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x400a110	     0xf846d100000	                            je 0x400b183	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x400a116	    0x803d00000000	                cmp byte [0x0400a11d], 0	      5420	tc-i386.c	FUNCTION_77	FOR_1	IF_19
0x400a11d	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a122	            0x7446	                            je 0x400a16a	      5420	tc-i386.c	FUNCTION_77	FOR_1	IF_19
0x400a124	    0x8b1500000000	            mov edx, dword [0x0400a12a] 	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a12a	          0x83fa01	                              cmp edx, 1	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a12d	     0xf8488110000	                            je 0x400b2bb	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a133	     0xf8255110000	                            jb 0x400b28e	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a139	          0x83fa02	                              cmp edx, 2	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a13c	            0x752c	                           jne 0x400a16a	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a13e	            0x31ed	                            xor ebp, ebp	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a140	            0xeb12	                           jmp 0x400a154	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a142	    0x660f1f440000	                    nop word [rax + rax]	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400a148	          0x83c501	                              add ebp, 1	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x400a14b	          0x83fd05	                              cmp ebp, 5	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x400a14e	     0xf8430110000	                            je 0x400b284	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x400a154	            0x89e9	                            mov ecx, ebp	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400a156	       0xfb654cc62	   movzx edx, byte [rsp + rcx*8 + 0x62] 	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400a15b	          0xf6c210	                           test dl, 0x10	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400a15e	            0x74e8	                            je 0x400a148	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400a160	          0x83e2ef	                     and edx, 0xffffffef	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400a163	          0x83ca04	                               or edx, 4	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400a166	        0x8854cc62	       mov byte [rsp + rcx*8 + 0x62], dl	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x400a16a	    0x813d00000000	          cmp dword [0x0400a174], 0x164 	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x400a174	     0xf8407020000	                            je 0x400a381	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x400a17a	          0x4531e4	                          xor r12d, r12d	      5476	tc-i386.c	FUNCTION_77	FOR_1	ELSE_9
0x400a17d	        0xf6432940	           test byte [rbx + 0x29], 0x40 	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400a181	            0x7427	                            je 0x400a1aa	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400a183	      0xba01000000	                              mov edx, 1	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400a188	            0x89c1	                            mov ecx, eax	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400a18a	          0x4189d4	                           mov r12d, edx	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400a18d	          0x41d3e4	                            shl r12d, cl	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400a190	    0x488b0d000000	            mov rcx, qword [0x0400a197] 	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a197	        0x4183ec01	                             sub r12d, 1	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x400a19b	          0x4885c9	                           test rcx, rcx	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a19e	            0x740a	                            je 0x400a1aa	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1a0	          0x8b4904	                mov ecx, dword [rcx + 4]	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1a3	            0xd3e2	                             shl edx, cl	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1a5	            0xf7d2	                                 not edx	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1a7	          0x4121d4	                           and r12d, edx	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1aa	    0x8b3d00000000	            mov edi, dword [0x0400a1b0] 	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1b0	    0x8b1500000000	            mov edx, dword [0x0400a1b6] 	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1b6	      0x448b4c2460	            mov r9d, dword [rsp + 0x60] 	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1bb	        0x8b742464	            mov esi, dword [rsp + 0x64] 	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x400a1bf	            0x89d1	                            mov ecx, edx	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400a1c1	          0x4189f8	                            mov r8d, edi	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400a1c4	            0x21f1	                            and ecx, esi	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400a1c6	          0x4521c8	                            and r8d, r9d	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400a1c9	          0x83f805	                              cmp eax, 5	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400a1cc	     0xf8761040000	                            ja 0x400a633	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400a1d2	    0xff24c5000000	                       jmp qword [rax*8]	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400a1d9	      0x804c244220	              or byte [rsp + 0x42], 0x20	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x400a1de	      0xe995f9ffff	                           jmp 0x4009b78	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x400a1e3	     0xf8491fcffff	                            je 0x4009e7a	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400a1e9	      0xbdffffffff	                     mov ebp, 0xffffffff	      5296	tc-i386.c	FUNCTION_77
0x400a1ee	          0x4531ff	                          xor r15d, r15d	      5295	tc-i386.c	FUNCTION_77
0x400a1f1	      0xe913f8ffff	                           jmp 0x4009a09	      5295	tc-i386.c	FUNCTION_77
0x400a1f6	    0xf604c5000000	                    test byte [rax*8], 8	      1928	tc-i386.c	FUNCTION_23
0x400a1fe	            0x740b	                            je 0x400a20b	      1928	tc-i386.c	FUNCTION_23
0x400a200	      0xf644c33808	      test byte [rbx + rax*8 + 0x38], 8 	      1929	tc-i386.c	FUNCTION_23
0x400a205	     0xf849bf6ffff	                            je 0x40098a6	      1929	tc-i386.c	FUNCTION_23
0x400a20b	    0xf604c5000000	                 test byte [rax*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x400a213	            0x740b	                            je 0x400a220	      1930	tc-i386.c	FUNCTION_23
0x400a215	      0xf644c33810	   test byte [rbx + rax*8 + 0x38], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x400a21a	     0xf8486f6ffff	                            je 0x40098a6	      1931	tc-i386.c	FUNCTION_23
0x400a220	    0xf604c5000000	                 test byte [rax*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x400a228	     0xf84a4feffff	                            je 0x400a0d2	      1928	tc-i386.c	FUNCTION_23
0x400a22e	      0xf644c33820	   test byte [rbx + rax*8 + 0x38], 0x20 	      1933	tc-i386.c	FUNCTION_23
0x400a233	     0xf846df6ffff	                            je 0x40098a6	      1933	tc-i386.c	FUNCTION_23
0x400a239	      0xe994feffff	                           jmp 0x400a0d2	      1933	tc-i386.c	FUNCTION_23
0x400a23e	      0xf644c33820	   test byte [rbx + rax*8 + 0x38], 0x20 	      1933	tc-i386.c	FUNCTION_23
0x400a243	     0xf845df6ffff	                            je 0x40098a6	      1933	tc-i386.c	FUNCTION_23
0x400a249	      0xe9e2fcffff	                           jmp 0x4009f30	      1933	tc-i386.c	FUNCTION_23
0x400a24e	      0xf644c33820	   test byte [rbx + rax*8 + 0x38], 0x20 	      1933	tc-i386.c	FUNCTION_23
0x400a253	     0xf844df6ffff	                            je 0x40098a6	      1933	tc-i386.c	FUNCTION_23
0x400a259	      0xe982fdffff	                           jmp 0x4009fe0	      1933	tc-i386.c	FUNCTION_23
0x400a25e	      0xba00000000	                              mov edx, 0	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400a263	      0xbe0d160000	                         mov esi, 0x160d	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400a268	      0xbf00000000	                              mov edi, 0	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400a26d	      0xe800000000	                          call 0x400a272	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400a272	    0xf604f5000000	                 test byte [rsi*8], 0x10	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x400a27a	     0xf84f0000000	                            je 0x400a370	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x400a280	            0x89c8	                            mov eax, ecx	      1910	tc-i386.c	FUNCTION_22
0x400a282	          0x83f001	                              xor eax, 1	      1910	tc-i386.c	FUNCTION_22
0x400a285	    0xf604c5000000	                 test byte [rax*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x400a28d	            0x740b	                            je 0x400a29a	      1910	tc-i386.c	FUNCTION_22
0x400a28f	      0xf644c33720	   test byte [rbx + rax*8 + 0x37], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x400a294	     0xf849cf6ffff	                            je 0x4009936	      1911	tc-i386.c	FUNCTION_22
0x400a29a	    0xf604c5000000	                 test byte [rax*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x400a2a2	            0x740b	                            je 0x400a2af	      1912	tc-i386.c	FUNCTION_22
0x400a2a4	      0xf644c33740	   test byte [rbx + rax*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x400a2a9	     0xf8487f6ffff	                            je 0x4009936	      1913	tc-i386.c	FUNCTION_22
0x400a2af	    0x803cc5000000	                     cmp byte [rax*8], 0	      1914	tc-i386.c	FUNCTION_22
0x400a2b7	            0x790b	                           jns 0x400a2c4	      1914	tc-i386.c	FUNCTION_22
0x400a2b9	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x400a2be	     0xf8972f6ffff	                           jns 0x4009936	      1915	tc-i386.c	FUNCTION_22
0x400a2c4	    0xf604c5000000	                    test byte [rax*8], 2	      1916	tc-i386.c	FUNCTION_22
0x400a2cc	            0x740b	                            je 0x400a2d9	      1916	tc-i386.c	FUNCTION_22
0x400a2ce	      0xf644c33802	      test byte [rbx + rax*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x400a2d3	     0xf845df6ffff	                            je 0x4009936	      1917	tc-i386.c	FUNCTION_22
0x400a2d9	    0xf604c5000000	                    test byte [rax*8], 4	      1910	tc-i386.c	FUNCTION_22
0x400a2e1	            0x740b	                            je 0x400a2ee	      1910	tc-i386.c	FUNCTION_22
0x400a2e3	      0xf644c33804	      test byte [rbx + rax*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x400a2e8	     0xf8448f6ffff	                            je 0x4009936	      1919	tc-i386.c	FUNCTION_22
0x400a2ee	    0xf604c5000000	                 test byte [rax*8], 0x40	      1943	tc-i386.c	FUNCTION_24
0x400a2f6	            0x7409	                            je 0x400a301	      1943	tc-i386.c	FUNCTION_24
0x400a2f8	          0x4d85c0	                             test r8, r8	      1944	tc-i386.c	FUNCTION_24
0x400a2fb	     0xf84730f0000	                            je 0x400b274	      1944	tc-i386.c	FUNCTION_24
0x400a301	    0xf604c5000000	                    test byte [rax*8], 1	      1946	tc-i386.c	FUNCTION_24
0x400a309	            0x740b	                            je 0x400a316	      1946	tc-i386.c	FUNCTION_24
0x400a30b	      0xf644c33801	      test byte [rbx + rax*8 + 0x38], 1 	      1947	tc-i386.c	FUNCTION_24
0x400a310	     0xf8420f6ffff	                            je 0x4009936	      1947	tc-i386.c	FUNCTION_24
0x400a316	        0x488d7006	                      lea rsi, [rax + 6]	      1952	tc-i386.c	FUNCTION_24
0x400a31a	      0xf644f30404	         test byte [rbx + rsi*8 + 4], 4 	      1943	tc-i386.c	FUNCTION_24
0x400a31f	     0xf84070f0000	                            je 0x400b22c	      1943	tc-i386.c	FUNCTION_24
0x400a325	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      1953	tc-i386.c	FUNCTION_24
0x400a329	     0xf85fd0e0000	                           jne 0x400b22c	      1953	tc-i386.c	FUNCTION_24
0x400a32f	       0xfb67cf307	      movzx edi, byte [rbx + rsi*8 + 7] 	      1954	tc-i386.c	FUNCTION_24
0x400a334	        0x40f6c720	                          test dil, 0x20	      1954	tc-i386.c	FUNCTION_24
0x400a338	            0x7516	                           jne 0x400a350	      1954	tc-i386.c	FUNCTION_24
0x400a33a	        0x40f6c740	                          test dil, 0x40	      1955	tc-i386.c	FUNCTION_24
0x400a33e	            0x7510	                           jne 0x400a350	      1955	tc-i386.c	FUNCTION_24
0x400a340	          0x4084ff	                           test dil, dil	      1956	tc-i386.c	FUNCTION_24
0x400a343	            0x780b	                            js 0x400a350	      1956	tc-i386.c	FUNCTION_24
0x400a345	      0xf644f30802	         test byte [rbx + rsi*8 + 8], 2 	      1957	tc-i386.c	FUNCTION_24
0x400a34a	     0xf84dc0e0000	                            je 0x400b22c	      1957	tc-i386.c	FUNCTION_24
0x400a350	     0xfb604c50000	                 movzx eax, byte [rax*8]	      1958	tc-i386.c	FUNCTION_24
0x400a358	            0xa808	                              test al, 8	      1960	tc-i386.c	FUNCTION_24
0x400a35a	     0xf85d6f5ffff	                           jne 0x4009936	      1960	tc-i386.c	FUNCTION_24
0x400a360	            0xa810	                           test al, 0x10	      1959	tc-i386.c	FUNCTION_24
0x400a362	     0xf85cef5ffff	                           jne 0x4009936	      1959	tc-i386.c	FUNCTION_24
0x400a368	            0xa820	                           test al, 0x20	      1960	tc-i386.c	FUNCTION_24
0x400a36a	     0xf85c6f5ffff	                           jne 0x4009936	      1960	tc-i386.c	FUNCTION_24
0x400a370	          0x83c101	                              add ecx, 1	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x400a373	          0x83f902	                              cmp ecx, 2	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x400a376	     0xf8540f5ffff	                           jne 0x40098bc	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x400a37c	      0xe95dfdffff	                           jmp 0x400a0de	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x400a381	    0x817b0ca00000	            cmp dword [rbx + 0xc], 0xa0 	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x400a388	     0xf85ecfdffff	                           jne 0x400a17a	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x400a38e	      0xe9a5f3ffff	                           jmp 0x4009738	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x400a393	       0xf1f440000	                   nop dword [rax + rax]	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x400a398	    0x833d00000000	               cmp dword [0x0400a39f], 2	      5511	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a39f	            0x7516	                           jne 0x400a3b7	      5511	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3a1	    0x448b1d000000	           mov r11d, dword [0x0400a3a8] 	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3a8	          0x4585db	                         test r11d, r11d	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3ab	            0x750a	                           jne 0x400a3b7	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3ad	        0xf6432804	               test byte [rbx + 0x28], 4	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3b1	     0xf8581f3ffff	                           jne 0x4009738	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3b7	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3bb	    0x230500000000	             and eax, dword [0x0400a3c1]	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3c1	    0x8b3d00000000	            mov edi, dword [0x0400a3c7] 	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3c7	        0x237c2468	             and edi, dword [rsp + 0x68]	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3cb	    0x488b15000000	            mov rdx, qword [0x0400a3d2] 	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3d2	        0x48c1e020	                           shl rax, 0x20	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3d6	          0x4809c7	                             or rdi, rax	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x400a3d9	          0x4889c8	                            mov rax, rcx	      2047	tc-i386.c	FUNCTION_26
0x400a3dc	    0x48b9ffffff1d	          movabs rcx, 0xffffff801dffffff	      2059	tc-i386.c	FUNCTION_26
0x400a3e6	        0x48c1e020	                           shl rax, 0x20	      2047	tc-i386.c	FUNCTION_26
0x400a3ea	          0x4c09c0	                              or rax, r8	      2047	tc-i386.c	FUNCTION_26
0x400a3ed	          0x4c21e8	                            and rax, r13	      2050	tc-i386.c	FUNCTION_26
0x400a3f0	          0x4821c8	                            and rax, rcx	      2059	tc-i386.c	FUNCTION_26
0x400a3f3	          0x4889c1	                            mov rcx, rax	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a3f6	        0x48c1e920	                           shr rcx, 0x20	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a3fa	            0x85c9	                           test ecx, ecx	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a3fc	     0xf859e010000	                           jne 0x400a5a0	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a402	            0x85c0	                           test eax, eax	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x400a404	     0xf8596010000	                           jne 0x400a5a0	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x400a40a	    0xc70500000000	               mov dword [0x0400a414], 1	      2068	tc-i386.c	FUNCTION_26
0x400a414	        0xf6432801	               test byte [rbx + 0x28], 1	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a418	     0xf841af3ffff	                            je 0x4009738	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a41e	    0x8b0d00000000	            mov ecx, dword [0x0400a424] 	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a424	    0x8b1500000000	            mov edx, dword [0x0400a42a] 	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a42a	      0x448b4c2460	            mov r9d, dword [rsp + 0x60] 	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a42f	        0x8b742464	            mov esi, dword [rsp + 0x64] 	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a433	    0x233500000000	             and esi, dword [0x0400a439]	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a439	    0x44230d000000	             and r9d, dword [0x0400a440]	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x400a440	        0x234c2468	             and ecx, dword [rsp + 0x68]	      2047	tc-i386.c	FUNCTION_26
0x400a444	          0x4889f0	                            mov rax, rsi	      2047	tc-i386.c	FUNCTION_26
0x400a447	          0x4c89cf	                             mov rdi, r9	      2047	tc-i386.c	FUNCTION_26
0x400a44a	    0x488b35000000	            mov rsi, qword [0x0400a451] 	      2047	tc-i386.c	FUNCTION_26
0x400a451	        0x48c1e020	                           shl rax, 0x20	      2047	tc-i386.c	FUNCTION_26
0x400a455	          0x4809c7	                             or rdi, rax	      2047	tc-i386.c	FUNCTION_26
0x400a458	            0x89d0	                            mov eax, edx	      2047	tc-i386.c	FUNCTION_26
0x400a45a	        0x2344246c	             and eax, dword [rsp + 0x6c]	      2047	tc-i386.c	FUNCTION_26
0x400a45e	    0x48baffffff1d	          movabs rdx, 0xffffff801dffffff	      2059	tc-i386.c	FUNCTION_26
0x400a468	        0x48c1e020	                           shl rax, 0x20	      2047	tc-i386.c	FUNCTION_26
0x400a46c	          0x4809c8	                             or rax, rcx	      2047	tc-i386.c	FUNCTION_26
0x400a46f	          0x4c21e8	                            and rax, r13	      2050	tc-i386.c	FUNCTION_26
0x400a472	          0x4821d0	                            and rax, rdx	      2059	tc-i386.c	FUNCTION_26
0x400a475	          0x4889c2	                            mov rdx, rax	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a478	        0x48c1ea20	                           shr rdx, 0x20	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a47c	            0x85d2	                           test edx, edx	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a47e	     0xf85b30b0000	                           jne 0x400b037	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a484	            0x85c0	                           test eax, eax	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x400a486	     0xf85ab0b0000	                           jne 0x400b037	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x400a48c	    0xc70500000000	               mov dword [0x0400a496], 1	      2068	tc-i386.c	FUNCTION_26
0x400a496	      0xe99df2ffff	                           jmp 0x4009738	      2068	tc-i386.c	FUNCTION_26
0x400a49b	       0xf1f440000	                   nop dword [rax + rax]	      2068	tc-i386.c	FUNCTION_26
0x400a4a0	    0xf60500000000	               test byte [0x0400a4a7], 4	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4a7	     0xf855efcffff	                           jne 0x400a10b	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4ad	            0x85d2	                           test edx, edx	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4af	     0xf84af0c0000	                            je 0x400b164	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4b5	        0x807b2900	                cmp byte [rbx + 0x29], 0	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x400a4b9	     0xf884cfcffff	                            js 0x400a10b	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x400a4bf	          0x488b3b	                    mov rdi, qword [rbx]	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x400a4c2	          0x803f66	                    cmp byte [rdi], 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400a4c5	     0xf84870c0000	                            je 0x400b152	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400a4cb	      0xf644246006	               test byte [rsp + 0x60], 6	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4d0	     0xf84f2f2ffff	                            je 0x40097c8	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4d6	          0x8b4308	                mov eax, dword [rbx + 8]	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4d9	            0x31d2	                            xor edx, edx	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4db	          0x83f801	                              cmp eax, 1	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4de	           0xf97c2	                                 seta dl	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4e1	       0xfb654d460	   movzx edx, byte [rsp + rdx*8 + 0x60] 	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4e6	          0xf6c202	                              test dl, 2	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4e9	     0xf851ffcffff	                           jne 0x400a10e	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4ef	          0x83e204	                              and edx, 4	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4f2	     0xf84d0f2ffff	                            je 0x40097c8	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4f8	      0xe911fcffff	                           jmp 0x400a10e	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a4fd	           0xf1f00	                         nop dword [rax]	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400a500	    0x833d00000000	               cmp dword [0x0400a507], 2	      5384	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a507	     0xf84fefbffff	                            je 0x400a10b	      5384	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a50d	            0x85d2	                           test edx, edx	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a50f	     0xf841e0c0000	                            je 0x400b133	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a515	        0x807b2900	                cmp byte [rbx + 0x29], 0	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x400a519	     0xf88ecfbffff	                            js 0x400a10b	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x400a51f	          0x488b3b	                    mov rdi, qword [rbx]	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x400a522	          0x803f66	                    cmp byte [rdi], 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400a525	     0xf84f60b0000	                            je 0x400b121	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400a52b	      0xf644246006	               test byte [rsp + 0x60], 6	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a530	            0x7422	                            je 0x400a554	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a532	          0x8b4308	                mov eax, dword [rbx + 8]	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a535	            0x31d2	                            xor edx, edx	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a537	          0x83f801	                              cmp eax, 1	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a53a	           0xf97c2	                                 seta dl	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a53d	       0xfb654d460	   movzx edx, byte [rsp + rdx*8 + 0x60] 	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a542	          0xf6c202	                              test dl, 2	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a545	     0xf85c3fbffff	                           jne 0x400a10e	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a54b	          0x83e204	                              and edx, 4	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a54e	     0xf85bafbffff	                           jne 0x400a10e	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a554	    0x817b0cc70f00	           cmp dword [rbx + 0xc], 0xfc7 	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a55b	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a560	     0xf85d2f1ffff	                           jne 0x4009738	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a566	        0x837b1001	               cmp dword [rbx + 0x10], 1	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a56a	     0xf85c8f1ffff	                           jne 0x4009738	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a570	      0xe996fbffff	                           jmp 0x400a10b	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a575	           0xf1f00	                         nop dword [rax]	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400a578	      0xbe00000000	                              mov esi, 0	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400a57d	            0x31ff	                            xor edi, edi	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400a57f	      0xe800000000	                          call 0x400a584	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400a584	          0x4889c3	                            mov rbx, rax	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400a587	      0xe9c6f6ffff	                           jmp 0x4009c52	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400a58c	      0xf644c33840	   test byte [rbx + rax*8 + 0x38], 0x40 	      1945	tc-i386.c	FUNCTION_24
0x400a591	     0xf85d2faffff	                           jne 0x400a069	      1945	tc-i386.c	FUNCTION_24
0x400a597	      0xe90af3ffff	                           jmp 0x40098a6	      1945	tc-i386.c	FUNCTION_24
0x400a59c	         0xf1f4000	                         nop dword [rax]	      1945	tc-i386.c	FUNCTION_24
0x400a5a0	    0x48b800000000	          movabs rax, 0xffffffff00000000	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5aa	      0x4823442438	             and rax, qword [rsp + 0x38]	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5af	          0x4c09c0	                              or rax, r8	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5b2	          0x4889c6	                            mov rsi, rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5b5	      0x4889442438	             mov qword [rsp + 0x38], rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5ba	          0x4831d0	                            xor rax, rdx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5bd	      0xa900004000	                      test eax, 0x400000	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5c2	     0xf8542feffff	                           jne 0x400a40a	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400a5c8	          0x4831f2	                            xor rdx, rsi	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400a5cb	    0xf7c200000002	                     test edx, 0x2000000	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400a5d1	     0xf8533feffff	                           jne 0x400a40a	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400a5d7	    0x488b35000000	            mov rsi, qword [0x0400a5de] 	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400a5de	      0xe85d5affff	             call sym.operand_type_match	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400a5e3	            0x85c0	                           test eax, eax	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400a5e5	     0xf8429feffff	                            je 0x400a414	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400a5eb	          0x4489e0	                           mov eax, r12d	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x400a5ee	          0x83e003	                              and eax, 3	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x400a5f1	          0x83f803	                              cmp eax, 3	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x400a5f4	     0xf84130a0000	                            je 0x400b00d	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x400a5fa	          0x8b4308	                mov eax, dword [rbx + 8]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a5fd	          0x83f804	                              cmp eax, 4	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a600	     0xf8498090000	                            je 0x400af9e	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a606	          0x83f805	                              cmp eax, 5	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a609	     0xf8469090000	                            je 0x400af78	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a60f	          0x83f803	                              cmp eax, 3	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a612	     0xf84a6090000	                            je 0x400afbe	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a618	          0x83f804	                              cmp eax, 4	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a61b	     0xf847c080000	                            je 0x400ae9d	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a621	          0x83f805	                              cmp eax, 5	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a624	     0xf8432080000	                            je 0x400ae5c	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a62a	          0x83f803	                              cmp eax, 3	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a62d	     0xf84c2080000	                            je 0x400aef5	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a633	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a636	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a639	    0x230d00000000	             and ecx, dword [0x0400a63f]	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a63f	    0x231500000000	             and edx, dword [0x0400a645]	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a645	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a648	          0x8b7324	            mov esi, dword [rbx + 0x24] 	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400a64b	    0x230500000000	             and eax, dword [0x0400a651]	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a651	    0x853500000000	           test dword [0x0400a657], esi 	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400a657	            0x750c	                           jne 0x400a665	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400a659	            0x85c9	                           test ecx, ecx	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400a65b	            0x7508	                           jne 0x400a665	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400a65d	            0x85d2	                           test edx, edx	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x400a65f	            0x7504	                           jne 0x400a665	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x400a661	            0x85c0	                           test eax, eax	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x400a663	            0x7442	                            je 0x400a6a7	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x400a665	        0xf6431c08	               test byte [rbx + 0x1c], 8	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a669	            0x753c	                           jne 0x400a6a7	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a66b	    0xf60500000000	               test byte [0x0400a672], 8	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a672	            0x7533	                           jne 0x400a6a7	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a674	          0x8b5308	                mov edx, dword [rbx + 8]	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a677	            0x85d2	                           test edx, edx	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a679	            0x742c	                            je 0x400a6a7	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a67b	            0x31c0	                            xor eax, eax	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a67d	            0x89c1	                            mov ecx, eax	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a67f	      0xf644cb3820	   test byte [rbx + rcx*8 + 0x38], 0x20 	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a684	            0x741a	                            je 0x400a6a0	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a686	     0xfb60ccd0000	                 movzx ecx, byte [rcx*8]	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a68e	          0xf6c110	                           test cl, 0x10	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a691	     0xf858b020000	                           jne 0x400a922	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a697	          0x83e108	                              and ecx, 8	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a69a	     0xf8582020000	                           jne 0x400a922	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a6a0	          0x83c001	                              add eax, 1	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a6a3	            0x39c2	                            cmp edx, eax	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a6a5	            0x75d6	                           jne 0x400a67d	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a6a7	         0xfb6432e	           movzx eax, byte [rbx + 0x2e] 	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6ab	          0x83e030	                           and eax, 0x30	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6ae	     0xf85cf050000	                           jne 0x400ac83	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6b4	    0x488b15000000	            mov rdx, qword [0x0400a6bb] 	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6bb	          0x4885d2	                           test rdx, rdx	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6be	            0x740a	                            je 0x400a6ca	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6c0	        0xf6420c38	            test byte [rdx + 0xc], 0x38 	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6c4	     0xf856d020000	                           jne 0x400a937	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a6ca	        0xf6433008	               test byte [rbx + 0x30], 8	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6ce	     0xf8413010000	                            je 0x400a7e7	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6d4	    0x488b15000000	            mov rdx, qword [0x0400a6db] 	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6db	          0x4885d2	                           test rdx, rdx	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6de	            0x7446	                            je 0x400a726	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6e0	          0x488b12	                    mov rdx, qword [rdx]	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6e3	        0x807a1100	                cmp byte [rdx + 0x11], 0	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6e7	            0x743d	                            je 0x400a726	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a6e9	            0x84c0	                             test al, al	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x400a6eb	     0xf84f6000000	                            je 0x400a7e7	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x400a6f1	    0x488b0d000000	            mov rcx, qword [0x0400a6f8] 	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a6f8	          0x4885c9	                           test rcx, rcx	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a6fb	            0x7414	                            je 0x400a711	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a6fd	            0x3c10	                            cmp al, 0x10	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a6ff	     0xf849c050000	                            je 0x400aca1	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a705	            0x3c20	                            cmp al, 0x20	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a707	     0xf8485050000	                            je 0x400ac92	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a70d	            0x3c30	                            cmp al, 0x30	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a70f	            0x742a	                            je 0x400a73b	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a711	    0xc70500000000	               mov dword [0x0400a71b], 9	      5033	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a71b	    0x41be09000000	                             mov r14d, 9	      5033	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a721	      0xe912f0ffff	                           jmp 0x4009738	      5033	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a726	    0xc70500000000	           mov dword [0x0400a730], 0x11 	      5017	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a730	    0x41be11000000	                          mov r14d, 0x11	      5017	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a736	      0xe9fdefffff	                           jmp 0x4009738	      5017	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a73b	        0xf6410c20	            test byte [rcx + 0xc], 0x20 	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a73f	            0x74d0	                            je 0x400a711	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a741	    0x8b0500000000	            mov eax, dword [0x0400a747] 	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a747	          0x83f802	                              cmp eax, 2	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a74a	     0xf8460050000	                            je 0x400acb0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a750	    0x48833d000000	               cmp qword [0x0400a758], 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a758	     0xf849a060000	                            je 0x400adf8	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a75e	          0x83f801	                              cmp eax, 1	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x400a761	     0xf8580000000	                           jne 0x400a7e7	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x400a767	    0xf60500000000	               test byte [0x0400a76e], 4	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a76e	            0x7477	                            je 0x400a7e7	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a770	    0xf60500000000	           test byte [0x0400a777], 0x38 	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a777	            0x746e	                            je 0x400a7e7	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a779	    0x488b05000000	            mov rax, qword [0x0400a780] 	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x400a780	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x400a784	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400a788	          0x8d7008	                      lea esi, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a78b	          0xf6c201	                              test dl, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a78e	           0xf45c6	                         cmovne eax, esi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a791	          0x83e204	                              and edx, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a794	         0xfb65111	           movzx edx, byte [rcx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400a798	          0x8d7010	                   lea esi, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a79b	           0xf45c6	                         cmovne eax, esi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a79e	         0xfb67110	           movzx esi, byte [rcx + 0x10] 	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a7a2	          0x8d4a08	                      lea ecx, [rdx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a7a5	        0x40f6c601	                             test sil, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a7a9	           0xf45d1	                         cmovne edx, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a7ac	          0x83e604	                              and esi, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a7af	          0x8d4a10	                   lea ecx, [rdx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a7b2	           0xf45d1	                         cmovne edx, ecx	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a7b5	            0x39c2	                            cmp edx, eax	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x400a7b7	            0x752e	                           jne 0x400a7e7	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x400a7b9	    0x8b0500000000	            mov eax, dword [0x0400a7bf] 	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a7bf	          0x83f802	                              cmp eax, 2	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a7c2	     0xf841b060000	                            je 0x400ade3	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a7c8	            0x85c0	                           test eax, eax	      5076	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_14
0x400a7ca	            0x741b	                            je 0x400a7e7	      5076	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_14
0x400a7cc	      0xba05000000	                              mov edx, 5	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a7d1	      0xbe00000000	                              mov esi, 0	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a7d6	            0x31ff	                            xor edi, edi	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a7d8	      0xe800000000	                          call 0x400a7dd	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a7dd	          0x4889c7	                            mov rdi, rax	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a7e0	            0x31c0	                            xor eax, eax	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a7e2	      0xe800000000	                          call 0x400a7e7	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a7e7	    0x488b15000000	            mov rdx, qword [0x0400a7ee] 	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a7ee	          0x4885d2	                           test rdx, rdx	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a7f1	     0xf84a4010000	                            je 0x400a99b	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a7f7	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a7fb	        0x448b4204	                mov r8d, dword [rdx + 4]	      5090	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a7ff	     0xf8481010000	                            je 0x400a986	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a805	          0x4589c1	                            mov r9d, r8d	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a808	        0x498d410e	                     lea rax, [r9 + 0xe]	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a80c	     0xfb634c50000	                 movzx esi, byte [rax*8]	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a814	        0x40f6c610	                          test sil, 0x10	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a818	     0xf8468010000	                            je 0x400a986	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a81e	     0xfb60cc50000	                 movzx ecx, byte [rax*8]	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a826	          0x4531e4	                          xor r12d, r12d	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400a829	          0xf6c140	                           test cl, 0x40	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a82c	     0xf8539040000	                           jne 0x400ac6b	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a832	    0x42807ccb3700	         cmp byte [rbx + r9*8 + 0x37], 0	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a838	     0xf891a040000	                           jns 0x400ac58	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a83e	          0x4084f6	                           test sil, sil	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a841	      0xb804000000	                              mov eax, 4	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a846	     0xf893a010000	                           jns 0x400a986	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a84c	           0xfaf02	                   imul eax, dword [rdx]	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a84f	          0x83f810	                           cmp eax, 0x10	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a852	     0xf8488020000	                            je 0x400aae0	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a858	     0xf8e67020000	                           jle 0x400aac5	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a85e	          0x83f820	                           cmp eax, 0x20	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a861	     0xf842c020000	                            je 0x400aa93	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a867	    0x48ba00000000	                movabs rdx, 0x2000000000	      5116	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a871	          0x4909d4	                             or r12, rdx	      5116	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a874	          0x83f840	                           cmp eax, 0x40	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a877	     0xf8509010000	                           jne 0x400a986	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a87d	          0x4c89e0	                            mov rax, r12	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a880	        0x48c1e820	                           shr rax, 0x20	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a884	      0x428544cb38	    test dword [rbx + r9*8 + 0x38], eax 	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a889	     0xf84f7000000	                            je 0x400a986	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x400a88f	        0xf6432940	           test byte [rbx + 0x29], 0x40 	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a893	            0x7430	                            je 0x400a8c5	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a895	    0x448b15000000	           mov r10d, dword [0x0400a89c] 	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a89c	    0x4981cc000040	                        or r12, 0x400000	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a8a3	        0x4c892424	                    mov qword [rsp], r12	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a8a7	          0x4531e4	                          xor r12d, r12d	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a8aa	          0x4585d2	                         test r10d, r10d	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a8ad	            0x7416	                            je 0x400a8c5	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a8af	          0x4539c4	                           cmp r12d, r8d	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x400a8b2	     0xf8594000000	                           jne 0x400a94c	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x400a8b8	        0x4183c401	                             add r12d, 1	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a8bc	    0x443b25000000	           cmp r12d, dword [0x0400a8c3] 	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a8c3	            0x72ea	                            jb 0x400a8af	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a8c5	    0x488b15000000	            mov rdx, qword [0x0400a8cc] 	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400a8cc	          0x4885d2	                           test rdx, rdx	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400a8cf	     0xf8473010000	                            je 0x400aa48	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400a8d5	         0xfb6432f	           movzx eax, byte [rbx + 0x2f] 	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400a8d9	          0x83e018	                           and eax, 0x18	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400a8dc	     0xf8451010000	                            je 0x400aa33	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400a8e2	          0x8b7208	                mov esi, dword [rdx + 8]	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a8e5	            0x85f6	                           test esi, esi	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a8e7	            0x7408	                            je 0x400a8f1	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a8e9	            0x3c10	                            cmp al, 0x10	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a8eb	     0xf8442010000	                            je 0x400aa33	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a8f1	    0x8b0500000000	            mov eax, dword [0x0400a8f7] 	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a8f7	          0x83e801	                              sub eax, 1	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a8fa	          0x39420c	              cmp dword [rdx + 0xc], eax	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a8fd	     0xf8445010000	                            je 0x400aa48	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a903	    0xc70500000000	           mov dword [0x0400a90d], 0x10 	      5176	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a90d	    0x41be10000000	                          mov r14d, 0x10	      5176	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a913	      0xe920eeffff	                           jmp 0x4009738	      5176	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a918	        0x807b2f00	                cmp byte [rbx + 0x2f], 0	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x400a91c	     0xf85c9f0ffff	                           jne 0x40099eb	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x400a922	    0xc70500000000	               mov dword [0x0400a92c], 8	      5241	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x400a92c	    0x41be08000000	                             mov r14d, 8	      5241	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x400a932	      0xe901eeffff	                           jmp 0x4009738	      5241	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x400a937	    0xc70500000000	            mov dword [0x0400a941], 0xb 	      5009	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a941	    0x41be0b000000	                           mov r14d, 0xb	      5009	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a947	      0xe9ecedffff	                           jmp 0x4009738	      5009	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a94c	          0x4489e0	                           mov eax, r12d	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a94f	      0x4a8b4ccb34	     mov rcx, qword [rbx + r9*8 + 0x34] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a954	        0x488b1424	                    mov rdx, qword [rsp]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a958	      0x488b74c334	    mov rsi, qword [rbx + rax*8 + 0x34] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a95d	    0x488b3cc50000	                  mov rdi, qword [rax*8]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a965	      0x4489442410	             mov dword [rsp + 0x10], r8d	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a96a	      0x4c894c2408	                 mov qword [rsp + 8], r9	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a96f	      0xe800000000	                          call 0x400a974	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a974	            0x85c0	                           test eax, eax	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a976	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a97b	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a980	     0xf8532ffffff	                           jne 0x400a8b8	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a986	    0xc70500000000	            mov dword [0x0400a990], 0xc 	      5099	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a990	    0x41be0c000000	                           mov r14d, 0xc	      5100	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a996	      0xe99dedffff	                           jmp 0x4009738	      5100	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a99b	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a99f	     0xf84a8020000	                            je 0x400ac4d	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a9a5	    0x8b3d00000000	            mov edi, dword [0x0400a9ab] 	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a9ab	            0x85ff	                           test edi, edi	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a9ad	     0xf849a020000	                            je 0x400ac4d	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a9b3	    0x8b0d00000000	            mov ecx, dword [0x0400a9b9] 	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9b9	            0x85c9	                           test ecx, ecx	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9bb	     0xf8478020000	                            je 0x400ac39	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9c1	    0x488b05000000	            mov rax, qword [0x0400a9c8] 	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9c8	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400a9cc	            0xa85f	                           test al, 0x5f	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a9ce	     0xf854b020000	                           jne 0x400ac1f	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a9d4	      0xb800000000	                              mov eax, 0	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a9d9	          0x4531c0	                            xor r8d, r8d	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a9dc	        0x4183c001	                              add r8d, 1	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9e0	          0x4439c1	                            cmp ecx, r8d	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9e3	     0xf8450020000	                            je 0x400ac39	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9e9	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9f0	        0x4883c008	                              add rax, 8	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a9f4	        0x48c1ea10	                           shr rdx, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400a9f8	          0x83e25f	                           and edx, 0x5f	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a9fb	            0x74df	                            je 0x400a9dc	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a9fd	          0x4489c0	                            mov eax, r8d	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa00	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa05	     0xf891c020000	                           jns 0x400ac27	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa0b	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa13	          0xc0e807	                               shr al, 7	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa16	            0x84c0	                             test al, al	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa18	     0xf84a7feffff	                            je 0x400a8c5	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa1e	    0xc70500000000	            mov dword [0x0400aa28], 0xe 	      5156	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa28	    0x41be0e000000	                           mov r14d, 0xe	      5156	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa2e	      0xe905edffff	                           jmp 0x4009738	      5156	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400aa33	    0xc70500000000	            mov dword [0x0400aa3d], 0xf 	      5169	tc-i386.c	FUNCTION_75	IF_23
0x400aa3d	    0x41be0f000000	                           mov r14d, 0xf	      5169	tc-i386.c	FUNCTION_75	IF_23
0x400aa43	      0xe9f0ecffff	                           jmp 0x4009738	      5169	tc-i386.c	FUNCTION_75	IF_23
0x400aa48	    0x488b15000000	            mov rdx, qword [0x0400aa4f] 	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x400aa4f	          0x4885d2	                           test rdx, rdx	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x400aa52	     0xf845befffff	                            je 0x40099b3	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x400aa58	          0x833a04	                      cmp dword [rdx], 4	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aa5b	            0x7448	                            je 0x400aaa5	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aa5d	        0xf6432f40	           test byte [rbx + 0x2f], 0x40 	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aa61	            0x744d	                            je 0x400aab0	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aa63	    0x8b0500000000	            mov eax, dword [0x0400aa69] 	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa69	          0x83f801	                              cmp eax, 1	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa6c	     0xf8641efffff	                           jbe 0x40099b3	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa72	          0x83e801	                              sub eax, 1	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa75	          0x394204	                cmp dword [rdx + 4], eax	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa78	     0xf8435efffff	                            je 0x40099b3	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa7e	    0xc70500000000	           mov dword [0x0400aa88], 0x13 	      5198	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa88	    0x41be13000000	                          mov r14d, 0x13	      5198	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa8e	      0xe9a5ecffff	                           jmp 0x4009738	      5198	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400aa93	    0x48b800000000	                movabs rax, 0x1000000000	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aa9d	          0x4909c4	                             or r12, rax	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aaa0	      0xe9d8fdffff	                           jmp 0x400a87d	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aaa5	         0xfb6432f	           movzx eax, byte [rbx + 0x2f] 	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aaa9	          0x83e0c0	                     and eax, 0xffffffc0	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aaac	            0x3c80	                            cmp al, 0x80	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aaae	            0x74b3	                            je 0x400aa63	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aab0	    0xc70500000000	           mov dword [0x0400aaba], 0x12 	      5189	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aaba	    0x41be12000000	                          mov r14d, 0x12	      5189	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aac0	      0xe973ecffff	                           jmp 0x4009738	      5189	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400aac5	    0x48ba00000000	                 movabs rdx, 0x200000000	      5107	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aacf	          0x4909d4	                             or r12, rdx	      5107	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aad2	          0x83f808	                              cmp eax, 8	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aad5	     0xf84a2fdffff	                            je 0x400a87d	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aadb	      0xe9a6feffff	                           jmp 0x400a986	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aae0	    0x48b800000000	                 movabs rax, 0x800000000	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aaea	          0x4909c4	                             or r12, rax	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aaed	      0xe98bfdffff	                           jmp 0x400a87d	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400aaf2	        0xf6433901	               test byte [rbx + 0x39], 1	      5259	tc-i386.c	FUNCTION_76	IF_5
0x400aaf6	     0xf84efeeffff	                            je 0x40099eb	      5259	tc-i386.c	FUNCTION_76	IF_5
0x400aafc	    0x488b05000000	            mov rax, qword [0x0400ab03] 	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400ab03	        0x80781802	                cmp byte [rax + 0x18], 2	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400ab07	     0xf848d000000	                            je 0x400ab9a	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400ab0d	    0xc70500000000	               mov dword [0x0400ab17], 5	      5264	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400ab17	    0x41be05000000	                             mov r14d, 5	      5264	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400ab1d	      0xe916ecffff	                           jmp 0x4009738	      5264	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400ab22	    0x833d00000000	               cmp dword [0x0400ab29], 2	      5205	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400ab29	     0xf8491eeffff	                            je 0x40099c0	      5205	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400ab2f	    0x48833d000000	               cmp qword [0x0400ab37], 0	      5207	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab37	            0x7456	                            je 0x400ab8f	      5207	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab39	    0x420fb644c337	    movzx eax, byte [rbx + r8*8 + 0x37] 	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab3f	          0xc0e807	                               shr al, 7	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab42	          0xc1e01f	                           shl eax, 0x1f	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab45	          0xc1f81f	                           sar eax, 0x1f	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab48	          0x83c003	                              add eax, 3	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab4b	    0x890500000000	            mov dword [0x0400ab51], eax 	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400ab51	    0x8b3d00000000	            mov edi, dword [0x0400ab57] 	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab57	            0x31c0	                            xor eax, eax	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab59	      0xbe00000000	                              mov esi, 0	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab5e	    0x41b801000000	                              mov r8d, 1	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400ab64	            0x85ff	                           test edi, edi	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab66	     0xf8454eeffff	                            je 0x40099c0	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab6c	        0xf6467a1f	           test byte [rsi + 0x7a], 0x1f 	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x400ab70	            0x740d	                            je 0x400ab7f	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x400ab72	    0x488b96a00000	            mov rdx, qword [rsi + 0xa0] 	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400ab79	        0x807a1802	                cmp byte [rdx + 0x18], 2	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400ab7d	            0x7445	                            je 0x400abc4	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400ab7f	          0x83c001	                              add eax, 1	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab82	        0x4883c608	                              add rsi, 8	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab86	            0x39c7	                            cmp edi, eax	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab88	            0x75e2	                           jne 0x400ab6c	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab8a	      0xe931eeffff	                           jmp 0x40099c0	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400ab8f	           0xfb6c0	                           movzx eax, al	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x400ab92	    0x890500000000	            mov dword [0x0400ab98], eax 	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x400ab98	            0xebb7	                           jmp 0x400ab51	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x400ab9a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400ab9e	          0x4889c2	                            mov rdx, rax	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400aba1	          0x83e20f	                            and edx, 0xf	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400aba4	          0x4839d0	                            cmp rax, rdx	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400aba7	     0xf8560ffffff	                           jne 0x400ab0d	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400abad	    0x48c705000000	               mov qword [0x0400abb8], 0	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400abb8	    0xc60500000000	                mov byte [0x0400abbf], 1	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400abbf	      0xe927eeffff	                           jmp 0x40099eb	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400abc4	    0x8b0d00000000	            mov ecx, dword [0x0400abca] 	      2194	tc-i386.c	FUNCTION_36
0x400abca	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400abce	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400abd1	            0x742b	                            je 0x400abfe	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400abd3	          0x4589c1	                            mov r9d, r8d	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400abd6	          0x41d3e1	                             shl r9d, cl	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400abd9	        0x4183e901	                              sub r9d, 1	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400abdd	          0x4985d1	                            test r9, rdx	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400abe0	            0x7510	                           jne 0x400abf2	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400abe2	          0x48d3fa	                             sar rdx, cl	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400abe5	        0x4883ea80	             sub rdx, 0xffffffffffffff80	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400abe9	    0x4881faff0000	                           cmp rdx, 0xff	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400abf0	            0x7620	                           jbe 0x400ac12	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400abf2	            0x89c2	                            mov edx, eax	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400abf4	    0x8024d5000000	                  and byte [rdx*8], 0xfe	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400abfc	            0xeb81	                           jmp 0x400ab7f	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400abfe	      0xba00000000	                              mov edx, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400ac03	      0xbe96080000	                          mov esi, 0x896	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400ac08	      0xbf00000000	                              mov edi, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400ac0d	      0xe800000000	                          call 0x400ac12	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400ac12	    0x800cc5000000	                      or byte [rax*8], 1	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x400ac1a	      0xe9abedffff	                           jmp 0x40099ca	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x400ac1f	          0x4531c0	                            xor r8d, r8d	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400ac22	      0xe9d6fdffff	                           jmp 0x400a9fd	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400ac27	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400ac2f	            0xd0e8	                               shr al, 1	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400ac31	          0x83e001	                              and eax, 1	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400ac34	      0xe9ddfdffff	                           jmp 0x400aa16	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400ac39	      0xba00000000	                              mov edx, 0	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400ac3e	      0xbe1e140000	                         mov esi, 0x141e	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400ac43	      0xbf00000000	                              mov edi, 0	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400ac48	      0xe800000000	                          call 0x400ac4d	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400ac4d	    0x41b804000000	                              mov r8d, 4	      5161	tc-i386.c	FUNCTION_75
0x400ac53	      0xe96dfcffff	                           jmp 0x400a8c5	      5161	tc-i386.c	FUNCTION_75
0x400ac58	          0x83e102	                              and ecx, 2	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400ac5b	      0xb808000000	                              mov eax, 8	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac60	     0xf85e6fbffff	                           jne 0x400a84c	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400ac66	      0xe91bfdffff	                           jmp 0x400a986	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400ac6b	    0x420fb644cb37	    movzx eax, byte [rbx + r9*8 + 0x37] 	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac71	          0xc0e807	                               shr al, 7	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac74	            0x3c01	                               cmp al, 1	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac76	            0x19c0	                            sbb eax, eax	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac78	          0x83e004	                              and eax, 4	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac7b	          0x83c004	                              add eax, 4	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac7e	      0xe9c9fbffff	                           jmp 0x400a84c	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400ac83	        0xf6433008	               test byte [rbx + 0x30], 8	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400ac87	     0xf8547faffff	                           jne 0x400a6d4	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400ac8d	      0xe95ffaffff	                           jmp 0x400a6f1	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400ac92	        0xf6410c10	            test byte [rcx + 0xc], 0x10 	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400ac96	     0xf8475faffff	                            je 0x400a711	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400ac9c	      0xe9a0faffff	                           jmp 0x400a741	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400aca1	        0xf6410c08	                test byte [rcx + 0xc], 8	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400aca5	     0xf8466faffff	                            je 0x400a711	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400acab	      0xe991faffff	                           jmp 0x400a741	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400acb0	    0x48833d000000	               cmp qword [0x0400acb8], 0	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x400acb8	     0xf8529fbffff	                           jne 0x400a7e7	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x400acbe	    0xf60500000000	               test byte [0x0400acc5], 4	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400acc5	     0xf847d010000	                            je 0x400ae48	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400accb	    0xf60500000000	           test byte [0x0400acd2], 0x18 	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400acd2	     0xf845c010000	                            je 0x400ae34	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400acd8	    0xf60500000000	               test byte [0x0400acdf], 4	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400acdf	     0xf843b010000	                            je 0x400ae20	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400ace5	    0xf60500000000	           test byte [0x0400acec], 0x18 	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400acec	     0xf841a010000	                            je 0x400ae0c	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400acf2	    0x448b05000000	            mov r8d, dword [0x0400acf9] 	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x400acf9	          0x4585c0	                           test r8d, r8d	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x400acfc	     0xf84c8ecffff	                            je 0x40099ca	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x400ad02	    0x488b05000000	            mov rax, qword [0x0400ad09] 	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x400ad09	      0x440fb64910	           movzx r9d, byte [rcx + 0x10] 	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x400ad0e	         0xfb64911	           movzx ecx, byte [rcx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400ad12	         0xfb67010	           movzx esi, byte [rax + 0x10] 	      2123	tc-i386.c	FUNCTION_28
0x400ad16	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400ad1a	          0x4589cc	                           mov r12d, r9d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad1d	        0x448d5908	                     lea r11d, [rcx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad21	            0x89f7	                            mov edi, esi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad23	        0x448d5008	                     lea r10d, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad27	            0x89c2	                            mov edx, eax	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad29	          0x83e701	                              and edi, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad2c	        0x410f45d2	                        cmovne edx, r10d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad30	        0x40883c24	                     mov byte [rsp], dil	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad34	          0x83e604	                              and esi, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad37	          0x8d7a10	                   lea edi, [rdx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad3a	      0x4088742408	                 mov byte [rsp + 8], sil	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad3f	            0x89ce	                            mov esi, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad41	           0xf45d7	                         cmovne edx, edi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad44	        0x4183e401	                             and r12d, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad48	        0x410f45f3	                        cmovne esi, r11d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad4c	        0x4183e104	                              and r9d, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad50	      0x4488642410	             mov byte [rsp + 0x10], r12b	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad55	          0x8d7e10	                   lea edi, [rsi + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad58	      0x44884c2415	              mov byte [rsp + 0x15], r9b	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad5d	           0xf45f7	                         cmovne esi, edi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad60	            0x39d6	                            cmp esi, edx	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x400ad62	            0x746b	                            je 0x400adcf	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x400ad64	    0x488b15000000	            mov rdx, qword [0x0400ad6b] 	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400ad6b	         0xfb67a10	           movzx edi, byte [rdx + 0x10] 	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400ad6f	         0xfb65211	           movzx edx, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400ad73	            0x89fe	                            mov esi, edi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad75	        0x448d4a08	                      lea r9d, [rdx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad79	          0x4189d4	                           mov r12d, edx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad7c	          0x83e601	                              and esi, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad7f	        0x450f45e1	                        cmovne r12d, r9d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad83	      0x4088742416	              mov byte [rsp + 0x16], sil	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad88	          0x83e704	                              and edi, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad8b	          0x4489e6	                           mov esi, r12d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ad8e	      0x458d642410	                  lea r12d, [r12 + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad93	      0x40887c2417	              mov byte [rsp + 0x17], dil	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad98	        0x410f45f4	                        cmovne esi, r12d	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400ad9c	      0x807c241000	                cmp byte [rsp + 0x10], 0	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ada1	        0x410f45cb	                        cmovne ecx, r11d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400ada5	      0x807c241500	                cmp byte [rsp + 0x15], 0	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400adaa	          0x8d7910	                   lea edi, [rcx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400adad	           0xf45cf	                         cmovne ecx, edi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400adb0	            0x39f1	                            cmp ecx, esi	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400adb2	            0x741b	                            je 0x400adcf	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400adb4	        0x803c2400	                       cmp byte [rsp], 0	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400adb8	        0x410f45c2	                        cmovne eax, r10d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400adbc	      0x807c240800	                   cmp byte [rsp + 8], 0	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400adc1	          0x8d4810	                   lea ecx, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400adc4	           0xf45c1	                         cmovne eax, ecx	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400adc7	            0x39c6	                            cmp esi, eax	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x400adc9	     0xf85fbebffff	                           jne 0x40099ca	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x400adcf	        0x4183f802	                              cmp r8d, 2	      5055	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400add3	      0xba05000000	                              mov edx, 5	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400add8	      0xbe00000000	                              mov esi, 0	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400addd	     0xf85f3f9ffff	                           jne 0x400a7d6	      5055	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400ade3	    0xc70500000000	            mov dword [0x0400aded], 0xa 	      5057	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400aded	    0x41be0a000000	                           mov r14d, 0xa	      5057	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400adf3	      0xe940e9ffff	                           jmp 0x4009738	      5057	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400adf8	      0xba00000000	                              mov edx, 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400adfd	      0xbead130000	                         mov esi, 0x13ad	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400ae02	      0xbf00000000	                              mov edi, 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400ae07	      0xe800000000	                          call 0x400ae0c	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400ae0c	      0xba00000000	                              mov edx, 0	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400ae11	      0xbeb5130000	                         mov esi, 0x13b5	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400ae16	      0xbf00000000	                              mov edi, 0	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400ae1b	      0xe800000000	                          call 0x400ae20	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400ae20	      0xba00000000	                              mov edx, 0	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400ae25	      0xbeb3130000	                         mov esi, 0x13b3	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400ae2a	      0xbf00000000	                              mov edi, 0	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400ae2f	      0xe800000000	                          call 0x400ae34	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400ae34	      0xba00000000	                              mov edx, 0	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400ae39	      0xbeb2130000	                         mov esi, 0x13b2	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400ae3e	      0xbf00000000	                              mov edi, 0	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400ae43	      0xe800000000	                          call 0x400ae48	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400ae48	      0xba00000000	                              mov edx, 0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400ae4d	      0xbeb0130000	                         mov esi, 0x13b0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400ae52	      0xbf00000000	                              mov edi, 0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400ae57	      0xe800000000	                          call 0x400ae5c	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400ae5c	    0x488b35000000	            mov rsi, qword [0x0400ae63] 	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400ae63	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400ae68	      0xe8d351ffff	             call sym.operand_type_match	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400ae6d	            0x85c0	                           test eax, eax	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400ae6f	     0xf84c3e8ffff	                            je 0x4009738	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400ae75	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400ae7d	    0x488b15000000	            mov rdx, qword [0x0400ae84] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400ae84	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400ae89	    0x488b3d000000	            mov rdi, qword [0x0400ae90] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400ae90	      0xe800000000	                          call 0x400ae95	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400ae95	            0x85c0	                           test eax, eax	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400ae97	     0xf849be8ffff	                            je 0x4009738	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400ae9d	    0x488b35000000	            mov rsi, qword [0x0400aea4] 	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400aea4	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400aea9	      0xe89251ffff	             call sym.operand_type_match	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400aeae	            0x85c0	                           test eax, eax	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400aeb0	     0xf8482e8ffff	                            je 0x4009738	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400aeb6	          0x4489e0	                           mov eax, r12d	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aeb9	          0x83e00a	                            and eax, 0xa	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aebc	          0x83f80a	                            cmp eax, 0xa	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aebf	     0xf841e010000	                            je 0x400afe3	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aec5	          0x4489e0	                           mov eax, r12d	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aec8	          0x83e00c	                            and eax, 0xc	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aecb	          0x83f80c	                            cmp eax, 0xc	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aece	            0x7525	                           jne 0x400aef5	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400aed0	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400aed5	    0x488b15000000	            mov rdx, qword [0x0400aedc] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400aedc	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400aee1	    0x488b3d000000	            mov rdi, qword [0x0400aee8] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400aee8	      0xe800000000	                          call 0x400aeed	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400aeed	            0x85c0	                           test eax, eax	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400aeef	     0xf8443e8ffff	                            je 0x4009738	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400aef5	    0x488b35000000	            mov rsi, qword [0x0400aefc] 	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400aefc	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400af01	      0xe83a51ffff	             call sym.operand_type_match	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400af06	            0x85c0	                           test eax, eax	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400af08	     0xf842ae8ffff	                            je 0x4009738	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400af0e	          0x4489e0	                           mov eax, r12d	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400af11	          0x83e005	                              and eax, 5	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400af14	          0x83f805	                              cmp eax, 5	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400af17	            0x7438	                            je 0x400af51	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400af19	        0x4183e406	                             and r12d, 6	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400af1d	        0x4183fc06	                             cmp r12d, 6	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400af21	     0xf850cf7ffff	                           jne 0x400a633	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400af27	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af2c	    0x488b15000000	            mov rdx, qword [0x0400af33] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af33	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af38	    0x488b3d000000	            mov rdi, qword [0x0400af3f] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af3f	      0xe800000000	                          call 0x400af44	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af44	            0x85c0	                           test eax, eax	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af46	     0xf84ece7ffff	                            je 0x4009738	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af4c	      0xe9e2f6ffff	                           jmp 0x400a633	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400af51	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af56	    0x488b15000000	            mov rdx, qword [0x0400af5d] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af5d	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af62	    0x488b3d000000	            mov rdi, qword [0x0400af69] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af69	      0xe800000000	                          call 0x400af6e	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af6e	            0x85c0	                           test eax, eax	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af70	     0xf84c2e7ffff	                            je 0x4009738	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af76	            0xeba1	                           jmp 0x400af19	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af78	    0x8b9424840000	            mov edx, dword [rsp + 0x84] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af7f	    0x231500000000	             and edx, dword [0x0400af85]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af85	    0x8b8c24800000	            mov ecx, dword [rsp + 0x80] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af8c	    0x230d00000000	             and ecx, dword [0x0400af92]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af92	        0x48c1e220	                           shl rdx, 0x20	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af96	          0x4809d1	                             or rcx, rdx	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af99	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400af9e	    0x8b1500000000	            mov edx, dword [0x0400afa4] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afa4	        0x2354247c	             and edx, dword [rsp + 0x7c]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afa8	    0x8b0d00000000	            mov ecx, dword [0x0400afae] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afae	        0x234c2478	             and ecx, dword [rsp + 0x78]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afb2	        0x48c1e220	                           shl rdx, 0x20	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afb6	          0x4809d1	                             or rcx, rdx	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afb9	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afbe	    0x8b1500000000	            mov edx, dword [0x0400afc4] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afc4	        0x23542474	             and edx, dword [rsp + 0x74]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afc8	    0x8b0d00000000	            mov ecx, dword [0x0400afce] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afce	        0x234c2470	             and ecx, dword [rsp + 0x70]	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afd2	        0x48c1e220	                           shl rdx, 0x20	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afd6	          0x4809d1	                             or rcx, rdx	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afd9	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afde	      0xe935f6ffff	                           jmp 0x400a618	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400afe3	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400afe8	    0x488b15000000	            mov rdx, qword [0x0400afef] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400afef	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400aff4	    0x488b3d000000	            mov rdi, qword [0x0400affb] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400affb	      0xe800000000	                          call 0x400b000	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400b000	            0x85c0	                           test eax, eax	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400b002	     0xf8430e7ffff	                            je 0x4009738	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400b008	      0xe9b8feffff	                           jmp 0x400aec5	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400b00d	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b012	    0x488b15000000	            mov rdx, qword [0x0400b019] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b019	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b01e	    0x488b3d000000	            mov rdi, qword [0x0400b025] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b025	      0xe800000000	                          call 0x400b02a	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b02a	            0x85c0	                           test eax, eax	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b02c	     0xf85c8f5ffff	                           jne 0x400a5fa	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b032	      0xe9ddf3ffff	                           jmp 0x400a414	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x400b037	    0x48b800000000	          movabs rax, 0xffffffff00000000	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b041	      0x4823442430	             and rax, qword [rsp + 0x30]	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b046	          0x4809c8	                             or rax, rcx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b049	          0x4889c1	                            mov rcx, rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b04c	      0x4889442430	             mov qword [rsp + 0x30], rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b051	          0x4831f0	                            xor rax, rsi	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b054	      0xa900004000	                      test eax, 0x400000	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b059	     0xf852df4ffff	                           jne 0x400a48c	      2063	tc-i386.c	FUNCTION_26	IF_2
0x400b05f	          0x4831ce	                            xor rsi, rcx	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400b062	    0xf7c600000002	                     test esi, 0x2000000	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400b068	     0xf851ef4ffff	                           jne 0x400a48c	      2064	tc-i386.c	FUNCTION_26	IF_2
0x400b06e	    0x488b35000000	            mov rsi, qword [0x0400b075] 	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400b075	      0xe8c64fffff	             call sym.operand_type_match	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400b07a	            0x85c0	                           test eax, eax	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400b07c	     0xf84b6e6ffff	                            je 0x4009738	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400b082	          0x4585e4	                         test r12d, r12d	      5537	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x400b085	            0x7537	                           jne 0x400b0be	      5537	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x400b087	          0x4531ff	                          xor r15d, r15d	      5549	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x400b08a	        0xf6432801	               test byte [rbx + 0x28], 1	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x400b08e	            0x741b	                            je 0x400b0ab	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x400b090	       0xfb6442464	           movzx eax, byte [rsp + 0x64] 	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400b095	          0x83e004	                              and eax, 4	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400b098	            0x3c01	                               cmp al, 1	      5551	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400b09a	          0x4519ff	                          sbb r15d, r15d	      5551	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400b09d	    0x4181e702fcff	                    and r15d, 0xfffffc02	      5551	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400b0a4	    0x4181c7000400	                         add r15d, 0x400	      5551	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x400b0ab	          0x4489f8	                           mov eax, r15d	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x400b0ae	          0x83c808	                               or eax, 8	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x400b0b1	        0xf6432904	               test byte [rbx + 0x29], 4	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x400b0b5	        0x440f45f8	                        cmovne r15d, eax	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x400b0b9	      0xe975f5ffff	                           jmp 0x400a633	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x400b0be	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0c3	    0x488b15000000	            mov rdx, qword [0x0400b0ca] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0ca	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0cf	    0x488b3d000000	            mov rdi, qword [0x0400b0d6] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0d6	      0xe800000000	                          call 0x400b0db	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0db	            0x85c0	                           test eax, eax	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0dd	     0xf8455e6ffff	                            je 0x4009738	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0e3	            0xeba2	                           jmp 0x400b087	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x400b0e5	      0xba00000000	                              mov edx, 0	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x400b0ea	      0xbee9070000	                          mov esi, 0x7e9	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x400b0ef	      0xbf00000000	                              mov edi, 0	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x400b0f4	      0xe800000000	                          call 0x400b0f9	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x400b0f9	    0x488b35000000	            mov rsi, qword [0x0400b100] 	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b100	        0x48c1e120	                           shl rcx, 0x20	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b104	          0x4489c7	                            mov edi, r8d	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b107	          0x4809cf	                             or rdi, rcx	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b10a	      0xe8314fffff	             call sym.operand_type_match	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b10f	            0x85c0	                           test eax, eax	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b111	     0xf8421e6ffff	                            je 0x4009738	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b117	      0xe917f5ffff	                           jmp 0x400a633	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x400b11c	      0xe800000000	                          call 0x400b121	      5757	tc-i386.c	FUNCTION_77
0x400b121	      0xe84a8dffff	     call sym.intel_float_operand.part.4	      5757	tc-i386.c	FUNCTION_77
0x400b126	            0x85c0	                           test eax, eax	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x400b128	     0xf84fdf3ffff	                            je 0x400a52b	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x400b12e	      0xe9d8efffff	                           jmp 0x400a10b	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x400b133	          0x488b3b	                    mov rdi, qword [rbx]	      5388	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_6
0x400b136	          0x803f66	                    cmp byte [rdi], 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400b139	     0xf85ecf3ffff	                           jne 0x400a52b	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400b13f	      0xe82c8dffff	     call sym.intel_float_operand.part.4	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400b144	          0x83f802	                              cmp eax, 2	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400b147	     0xf85def3ffff	                           jne 0x400a52b	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400b14d	      0xe9b9efffff	                           jmp 0x400a10b	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400b152	      0xe8198dffff	     call sym.intel_float_operand.part.4	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x400b157	            0x85c0	                           test eax, eax	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x400b159	     0xf846cf3ffff	                            je 0x400a4cb	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x400b15f	      0xe9a7efffff	                           jmp 0x400a10b	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x400b164	          0x488b3b	                    mov rdi, qword [rbx]	      5403	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_8
0x400b167	          0x803f66	                    cmp byte [rdi], 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400b16a	     0xf855bf3ffff	                           jne 0x400a4cb	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400b170	      0xe8fb8cffff	     call sym.intel_float_operand.part.4	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400b175	          0x83f802	                              cmp eax, 2	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400b178	     0xf854df3ffff	                           jne 0x400a4cb	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400b17e	      0xe988efffff	                           jmp 0x400a10b	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400b183	    0x4c8b25000000	            mov r12, qword [0x0400b18a] 	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x400b18a	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400b18f	      0x498b442408	                mov rax, qword [r12 + 8]	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400b194	      0xe967e8ffff	                           jmp 0x4009a00	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400b199	    0x833d00000000	               cmp dword [0x0400b1a0], 2	      5490	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x400b1a0	            0x7431	                            je 0x400b1d3	      5490	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x400b1a2	    0x48833d000000	               cmp qword [0x0400b1aa], 0	      5498	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400b1aa	            0x7409	                            je 0x400b1b5	      5498	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400b1ac	    0x817b0ca00000	            cmp dword [rbx + 0xc], 0xa0 	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400b1b3	            0x7459	                            je 0x400b20e	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400b1b5	    0x833d00000000	               cmp dword [0x0400b1bc], 2	      5504	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400b1bc	     0xf85f5f1ffff	                           jne 0x400a3b7	      5504	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400b1c2	        0xf6432801	               test byte [rbx + 0x28], 1	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400b1c6	     0xf84d5f1ffff	                            je 0x400a3a1	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400b1cc	            0x89f9	                            mov ecx, edi	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400b1ce	      0xe960f2ffff	                           jmp 0x400a433	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x400b1d3	    0x817b0c900000	            cmp dword [rbx + 0xc], 0x90 	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x400b1da	            0x75d9	                           jne 0x400b1b5	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x400b1dc	    0x391500000000	            cmp dword [0x0400b1e2], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400b1e2	            0x75d1	                           jne 0x400b1b5	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400b1e4	    0x393d00000000	            cmp dword [0x0400b1ea], edi 	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x400b1ea	            0x75c9	                           jne 0x400b1b5	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x400b1ec	    0x8b0500000000	            mov eax, dword [0x0400b1f2] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400b1f2	    0x390500000000	            cmp dword [0x0400b1f8], eax 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400b1f8	            0x75bb	                           jne 0x400b1b5	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400b1fa	    0x8b0500000000	            mov eax, dword [0x0400b200] 	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x400b200	    0x390500000000	            cmp dword [0x0400b206], eax 	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x400b206	     0xf842ce5ffff	                            je 0x4009738	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x400b20c	            0xeba7	                           jmp 0x400b1b5	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x400b20e	    0xf60500000000	           test byte [0x0400b215], 0x20 	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400b215	            0x749e	                            je 0x400b1b5	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x400b217	    0x488b05000000	            mov rax, qword [0x0400b21e] 	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400b21e	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400b222	            0xa85f	                           test al, 0x5f	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x400b224	     0xf850ee5ffff	                           jne 0x4009738	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x400b22a	            0xeb89	                           jmp 0x400b1b5	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x400b22c	    0xf604c5000000	                    test byte [rax*8], 8	      1928	tc-i386.c	FUNCTION_23
0x400b234	            0x740b	                            je 0x400b241	      1928	tc-i386.c	FUNCTION_23
0x400b236	      0xf644c33808	      test byte [rbx + rax*8 + 0x38], 8 	      1929	tc-i386.c	FUNCTION_23
0x400b23b	     0xf84f5e6ffff	                            je 0x4009936	      1929	tc-i386.c	FUNCTION_23
0x400b241	    0xf604c5000000	                 test byte [rax*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x400b249	            0x740b	                            je 0x400b256	      1930	tc-i386.c	FUNCTION_23
0x400b24b	      0xf644c33810	   test byte [rbx + rax*8 + 0x38], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x400b250	     0xf84e0e6ffff	                            je 0x4009936	      1931	tc-i386.c	FUNCTION_23
0x400b256	    0xf604c5000000	                 test byte [rax*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x400b25e	     0xf840cf1ffff	                            je 0x400a370	      1928	tc-i386.c	FUNCTION_23
0x400b264	      0xf644c33820	   test byte [rbx + rax*8 + 0x38], 0x20 	      1933	tc-i386.c	FUNCTION_23
0x400b269	     0xf84c7e6ffff	                            je 0x4009936	      1933	tc-i386.c	FUNCTION_23
0x400b26f	      0xe9fcf0ffff	                           jmp 0x400a370	      1933	tc-i386.c	FUNCTION_23
0x400b274	      0xf644c33840	   test byte [rbx + rax*8 + 0x38], 0x40 	      1945	tc-i386.c	FUNCTION_24
0x400b279	     0xf8582f0ffff	                           jne 0x400a301	      1945	tc-i386.c	FUNCTION_24
0x400b27f	      0xe9b2e6ffff	                           jmp 0x4009936	      1945	tc-i386.c	FUNCTION_24
0x400b284	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400b289	      0xe9dceeffff	                           jmp 0x400a16a	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400b28e	            0x31ed	                            xor ebp, ebp	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400b290	            0xeb0e	                           jmp 0x400b2a0	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400b292	    0x660f1f440000	                    nop word [rax + rax]	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400b298	          0x83c501	                              add ebp, 1	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x400b29b	          0x83fd05	                              cmp ebp, 5	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x400b29e	            0x74e4	                            je 0x400b284	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x400b2a0	            0x89e9	                            mov ecx, ebp	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2a2	       0xfb654cc62	   movzx edx, byte [rsp + rcx*8 + 0x62] 	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2a7	          0xf6c204	                              test dl, 4	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2aa	            0x74ec	                            je 0x400b298	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2ac	          0x83e2fb	                     and edx, 0xfffffffb	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2af	          0x83ca02	                               or edx, 2	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2b2	        0x8854cc62	       mov byte [rsp + rcx*8 + 0x62], dl	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2b6	      0xe9afeeffff	                           jmp 0x400a16a	      5445	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x400b2bb	            0x31ed	                            xor ebp, ebp	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400b2bd	            0xeb09	                           jmp 0x400b2c8	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400b2bf	              0x90	                                     nop	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x400b2c0	          0x83c501	                              add ebp, 1	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x400b2c3	          0x83fd05	                              cmp ebp, 5	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x400b2c6	            0x74bc	                            je 0x400b284	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x400b2c8	            0x89e9	                            mov ecx, ebp	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400b2ca	       0xfb654cc62	   movzx edx, byte [rsp + rcx*8 + 0x62] 	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400b2cf	          0xf6c202	                              test dl, 2	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400b2d2	            0x74ec	                            je 0x400b2c0	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400b2d4	          0x83ca04	                               or edx, 4	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400b2d7	          0x83e2fd	                     and edx, 0xfffffffd	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400b2da	        0x8854cc62	       mov byte [rsp + rcx*8 + 0x62], dl	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x400b2de	      0xe987eeffff	                           jmp 0x400a16a	      5433	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
i386_target_format	IF,17:DO,0:ELSE,10:WHILE,0:CALL,19:functions,0:SWITCH,2:FOR,0	189
0x40102f0	    0x488b05000000	            mov rax, qword [0x040102f7] 	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40102f7	              0x53	                                push rbx	     11053	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40102f8	      0xbf00000000	                              mov edi, 0	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40102fd	      0xb906000000	                              mov ecx, 6	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010302	          0x4889c6	                            mov rsi, rax	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010305	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010307	     0xf8463020000	                            je 0x4010570	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401030d	      0xbf00000000	                              mov edi, 0	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x4010312	      0xb905000000	                              mov ecx, 5	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x4010317	          0x4889c6	                            mov rsi, rax	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401031a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401031c	     0xf848e020000	                            je 0x40105b0	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x4010322	      0xbf00000000	                              mov edi, 0	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010327	      0xb906000000	                              mov ecx, 6	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401032c	          0x4889c6	                            mov rsi, rax	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401032f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010331	     0xf8513030000	                           jne 0x401064a	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010337	            0x31ff	                            xor edi, edi	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x4010339	      0xbe01000000	                              mov esi, 1	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x401033e	      0xe8fdfefeff	               call sym.update_code_flag	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x4010343	    0x8b1500000000	            mov edx, dword [0x04010349] 	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x4010349	            0x85d2	                           test edx, edx	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x401034b	     0xf84cf000000	                            je 0x4010420	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x4010351	          0x83fa0c	                            cmp edx, 0xc	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010354	     0xf8517030000	                           jne 0x4010671	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x401035a	    0x8b0500000000	            mov eax, dword [0x04010360] 	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010360	    0x8b0d00000000	            mov ecx, dword [0x04010366] 	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010366	            0x85c0	                           test eax, eax	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4010368	     0xf8425010000	                            je 0x4010493	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x401036e	    0x448b05000000	            mov r8d, dword [0x04010375] 	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4010375	          0x4585c0	                           test r8d, r8d	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4010378	            0x7553	                           jne 0x40103cd	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x401037a	    0x8b3d00000000	            mov edi, dword [0x04010380] 	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4010380	            0x85ff	                           test edi, edi	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4010382	            0x7549	                           jne 0x40103cd	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4010384	    0x8b3500000000	            mov esi, dword [0x0401038a] 	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x401038a	            0x85f6	                           test esi, esi	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x401038c	            0x753f	                           jne 0x40103cd	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x401038e	    0x8b0500000000	            mov eax, dword [0x04010394] 	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010394	            0x85c0	                           test eax, eax	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010396	            0x7535	                           jne 0x40103cd	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010398	            0x31c0	                            xor eax, eax	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401039a	    0x833d00000000	               cmp dword [0x040103a1], 2	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103a1	           0xf94c0	                                 sete al	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103a4	    0x488d34850000	                        lea rsi, [rax*4]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103ac	          0x4801f0	                            add rax, rsi	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103af	    0x488b34c50000	                  mov rsi, qword [rax*8]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103b7	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103bf	    0x488935000000	            mov qword [0x040103c6], rsi 	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103c6	    0x48893d000000	            mov qword [0x040103cd], rdi 	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40103cd	          0x83f901	                              cmp ecx, 1	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40103d0	     0xf8452010000	                            je 0x4010528	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40103d6	          0x83f902	                              cmp ecx, 2	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40103d9	     0xf8521010000	                           jne 0x4010500	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x40103df	          0x83fa0a	                            cmp edx, 0xa	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40103e2	    0xc70500000000	               mov dword [0x040103ec], 1	     11130	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x40103ec	    0xc70500000000	               mov dword [0x040103f6], 1	     11131	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x40103f6	    0xc70500000000	               mov dword [0x04010400], 1	     11132	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4010400	     0xf8490020000	                            je 0x4010696	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4010406	          0x83fa0b	                            cmp edx, 0xb	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010409	     0xf8404010000	                            je 0x4010513	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401040f	      0xb800000000	                              mov eax, 0	     11133	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4010414	          0x83fa0c	                            cmp edx, 0xc	     11148	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010417	     0xf84bb010000	                            je 0x40105d8	     11148	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401041d	              0x5b	                                 pop rbx	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x401041e	              0xc3	                                     ret	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x401041f	              0x90	                                     nop	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x4010420	    0x8b1d00000000	            mov ebx, dword [0x04010426] 	     11075	tc-i386.c	FUNCTION_128	IF_9
0x4010426	    0x48c705000000	               mov qword [0x04010431], 0	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4010431	    0x48c705000000	               mov qword [0x0401043c], 0	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x401043c	    0x48c705000000	               mov qword [0x04010447], 0	     11070	tc-i386.c	FUNCTION_128	CALL_10
0x4010447	    0x48c705000000	               mov qword [0x04010452], 0	     11071	tc-i386.c	FUNCTION_128
0x4010452	    0x48c705000000	               mov qword [0x0401045d], 0	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401045d	            0x85db	                           test ebx, ebx	     11075	tc-i386.c	FUNCTION_128	IF_9
0x401045f	    0xc60500000000	            mov byte [0x04010466], 0x1f 	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4010466	    0xc70500000000	            mov dword [0x04010470], 0xc 	     11073	tc-i386.c	FUNCTION_128	IF_8
0x4010470	    0x48c705000000	               mov qword [0x0401047b], 0	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x401047b	    0xc60500000000	            mov byte [0x04010482], 0x1f 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x4010482	    0x8b0d00000000	            mov ecx, dword [0x04010488] 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x4010488	     0xf8482010000	                            je 0x4010610	     11075	tc-i386.c	FUNCTION_128	IF_9
0x401048e	      0xba0c000000	                            mov edx, 0xc	     11075	tc-i386.c	FUNCTION_128	IF_9
0x4010493	    0x448b1d000000	           mov r11d, dword [0x0401049a] 	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x401049a	          0x4585db	                         test r11d, r11d	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x401049d	     0xf85cbfeffff	                           jne 0x401036e	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x40104a3	    0x448b15000000	           mov r10d, dword [0x040104aa] 	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40104aa	          0x4585d2	                         test r10d, r10d	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40104ad	     0xf85bbfeffff	                           jne 0x401036e	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40104b3	    0x448b0d000000	            mov r9d, dword [0x040104ba] 	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104ba	          0x4585c9	                           test r9d, r9d	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104bd	     0xf85abfeffff	                           jne 0x401036e	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104c3	            0x31c0	                            xor eax, eax	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104c5	    0x833d00000000	               cmp dword [0x040104cc], 2	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104cc	           0xf94c0	                                 sete al	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104cf	    0x488d34850000	                        lea rsi, [rax*4]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104d7	          0x4801f0	                            add rax, rsi	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104da	    0x488b34c50000	                  mov rsi, qword [rax*8]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104e2	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104ea	    0x488935000000	            mov qword [0x040104f1], rsi 	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104f1	    0x48893d000000	            mov qword [0x040104f8], rdi 	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104f8	      0xe971feffff	                           jmp 0x401036e	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104fd	           0xf1f00	                         nop dword [rax]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010500	          0x83fa0a	                            cmp edx, 0xa	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4010503	            0x745b	                            je 0x4010560	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4010505	          0x83fa0b	                            cmp edx, 0xb	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010508	     0xf8532010000	                           jne 0x4010640	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401050e	          0x83f901	                              cmp ecx, 1	     11144	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010511	            0x743c	                            je 0x401054f	     11144	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010513	      0xba05000000	                              mov edx, 5	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010518	      0xbe00000000	                              mov esi, 0	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401051d	      0xe932010000	                           jmp 0x4010654	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010522	    0x660f1f440000	                    nop word [rax + rax]	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010528	          0x83fa0a	                            cmp edx, 0xa	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x401052b	    0xc70500000000	               mov dword [0x04010535], 1	     11125	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11
0x4010535	    0xc70500000000	               mov dword [0x0401053f], 1	     11126	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x401053f	            0x7428	                            je 0x4010569	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4010541	          0x83fa0b	                            cmp edx, 0xb	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010544	      0xb800000000	                              mov eax, 0	     11127	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x4010549	     0xf85c5feffff	                           jne 0x4010414	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401054f	      0xb800000000	                              mov eax, 0	     11146	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010554	              0x5b	                                 pop rbx	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x4010555	              0xc3	                                     ret	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x4010556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x4010560	          0x83f901	                              cmp ecx, 1	     11138	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010563	     0xf852d010000	                           jne 0x4010696	     11138	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010569	      0xb800000000	                              mov eax, 0	     11140	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401056e	              0x5b	                                 pop rbx	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x401056f	              0xc3	                                     ret	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x4010570	      0xbe01000000	                              mov esi, 1	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010575	      0xbf02000000	                              mov edi, 2	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401057a	      0xe8c1fcfeff	               call sym.update_code_flag	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401057f	    0x488b05000000	            mov rax, qword [0x04010586] 	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010586	        0x80780600	                   cmp byte [rax + 6], 0	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401058a	            0x7564	                           jne 0x40105f0	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401058c	    0xc70500000000	               mov dword [0x04010596], 1	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010596	    0x8b0500000000	            mov eax, dword [0x0401059c] 	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401059c	      0xb901000000	                              mov ecx, 1	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40105a1	    0x8b1500000000	            mov edx, dword [0x040105a7] 	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40105a7	      0xe9bafdffff	                           jmp 0x4010366	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40105ac	         0xf1f4000	                         nop dword [rax]	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40105b0	      0xbe01000000	                              mov esi, 1	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105b5	            0x31ff	                            xor edi, edi	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105b7	      0xe884fcfeff	               call sym.update_code_flag	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105bc	    0x8b0500000000	            mov eax, dword [0x040105c2] 	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105c2	    0x8b0d00000000	            mov ecx, dword [0x040105c8] 	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105c8	    0x8b1500000000	            mov edx, dword [0x040105ce] 	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105ce	      0xe993fdffff	                           jmp 0x4010366	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105d3	       0xf1f440000	                   nop dword [rax + rax]	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105d8	            0x85c9	                           test ecx, ecx	     11150	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40105da	     0xf8585000000	                           jne 0x4010665	     11150	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x40105e0	      0xb800000000	                              mov eax, 0	     11152	tc-i386.c	FUNCTION_128	SWITCH_1
0x40105e5	              0x5b	                                 pop rbx	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x40105e6	              0xc3	                                     ret	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x40105e7	    0x660f1f840000	                    nop word [rax + rax]	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x40105f0	    0xc70500000000	               mov dword [0x040105fa], 2	     11060	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40105fa	    0x8b0500000000	            mov eax, dword [0x04010600] 	     11060	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x4010600	      0xb902000000	                              mov ecx, 2	     11060	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x4010605	    0x8b1500000000	            mov edx, dword [0x0401060b] 	     11060	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401060b	      0xe956fdffff	                           jmp 0x4010366	     11060	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x4010610	    0x488b05000000	            mov rax, qword [0x04010617] 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010617	    0x488b15000000	            mov rdx, qword [0x0401061e] 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x401061e	    0xc70500000000	            mov dword [0x04010628], 0xc 	     11077	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010628	    0x488905000000	            mov qword [0x0401062f], rax 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x401062f	    0x488915000000	            mov qword [0x04010636], rdx 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010636	      0xe953feffff	                           jmp 0x401048e	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x401063b	       0xf1f440000	                   nop dword [rax + rax]	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010640	      0xb800000000	                              mov eax, 0	     11122	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11	IF_12
0x4010645	      0xe9cafdffff	                           jmp 0x4010414	     11122	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11	IF_12
0x401064a	      0xba05000000	                              mov edx, 5	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x401064f	      0xbe00000000	                              mov esi, 0	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x4010654	            0x31ff	                            xor edi, edi	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010656	      0xe800000000	                          call 0x401065b	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401065b	          0x4889c7	                            mov rdi, rax	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401065e	            0x31c0	                            xor eax, eax	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010660	      0xe800000000	                          call 0x4010665	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010665	      0xba05000000	                              mov edx, 5	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x401066a	      0xbe00000000	                              mov esi, 0	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x401066f	            0xebe3	                           jmp 0x4010654	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x4010671	    0x488b1d000000	            mov rbx, qword [0x04010678] 	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010678	      0xbe00000000	                              mov esi, 0	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x401067d	            0x31ff	                            xor edi, edi	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x401067f	      0xba05000000	                              mov edx, 5	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010684	      0xe800000000	                          call 0x4010689	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010689	          0x4889de	                            mov rsi, rbx	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x401068c	          0x4889c7	                            mov rdi, rax	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x401068f	            0x31c0	                            xor eax, eax	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010691	      0xe800000000	                          call 0x4010696	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010696	      0xba05000000	                              mov edx, 5	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401069b	      0xbe00000000	                              mov esi, 0	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x40106a0	            0xebb2	                           jmp 0x4010654	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
i386_intel_simplify	IF,31:DO,0:ELSE,2:WHILE,0:CALL,32:functions,0:SWITCH,2:FOR,0	551
0x4007cd0	            0x4157	                                push r15	       334	tc-i386-intel.c	FUNCTION_162
0x4007cd2	            0x4156	                                push r14	       334	tc-i386-intel.c	FUNCTION_162
0x4007cd4	            0x4155	                                push r13	       334	tc-i386-intel.c	FUNCTION_162
0x4007cd6	            0x4154	                                push r12	       334	tc-i386-intel.c	FUNCTION_162
0x4007cd8	          0x4531e4	                          xor r12d, r12d	       334	tc-i386-intel.c	FUNCTION_162
0x4007cdb	              0x55	                                push rbp	       334	tc-i386-intel.c	FUNCTION_162
0x4007cdc	              0x53	                                push rbx	       334	tc-i386-intel.c	FUNCTION_162
0x4007cdd	          0x4889fb	                            mov rbx, rdi	       334	tc-i386-intel.c	FUNCTION_162
0x4007ce0	        0x4883ec48	                           sub rsp, 0x48	       334	tc-i386-intel.c	FUNCTION_162
0x4007ce4	    0x64488b042528	                mov rax, qword fs:[0x28]	       334	tc-i386-intel.c	FUNCTION_162
0x4007ced	      0x4889442438	             mov qword [rsp + 0x38], rax	       334	tc-i386-intel.c	FUNCTION_162
0x4007cf2	            0x31c0	                            xor eax, eax	       334	tc-i386-intel.c	FUNCTION_162
0x4007cf4	    0x486305000000	         movsxd rax, dword [0x04007cfb] 	       335	tc-i386-intel.c	FUNCTION_162
0x4007cfb	            0x85c0	                           test eax, eax	       336	tc-i386-intel.c	FUNCTION_162
0x4007cfd	            0x780b	                            js 0x4007d0a	       336	tc-i386-intel.c	FUNCTION_162
0x4007cff	          0x4863d0	                         movsxd rdx, eax	       336	tc-i386-intel.c	FUNCTION_162
0x4007d02	    0x4c8b24d50000	                  mov r12, qword [rdx*8]	       336	tc-i386-intel.c	FUNCTION_162
0x4007d0a	    0x448b1d000000	           mov r11d, dword [0x04007d11] 	       341	tc-i386-intel.c	FUNCTION_162	IF_1
0x4007d11	          0x4585db	                         test r11d, r11d	       341	tc-i386-intel.c	FUNCTION_162	IF_1
0x4007d14	     0xf8496010000	                            je 0x4007eb0	       341	tc-i386-intel.c	FUNCTION_162	IF_1
0x4007d1a	         0xfb65318	           movzx edx, byte [rbx + 0x18] 	       344	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007d1e	    0x4c8b35000000	            mov r14, qword [0x04007d25] 	       337	tc-i386-intel.c	FUNCTION_162
0x4007d25	    0x4c8b2d000000	            mov r13, qword [0x04007d2c] 	       338	tc-i386-intel.c	FUNCTION_162
0x4007d2c	          0x4d89f7	                            mov r15, r14	       337	tc-i386-intel.c	FUNCTION_162
0x4007d2f	          0x80fa3d	                            cmp dl, 0x3d	       344	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007d32	          0x4c89ed	                            mov rbp, r13	       338	tc-i386-intel.c	FUNCTION_162
0x4007d35	     0xf8715050000	                            ja 0x4008250	       344	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007d3b	           0xfb6ca	                           movzx ecx, dl	       344	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007d3e	    0xff24cd000000	                       jmp qword [rcx*8]	       344	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007d45	           0xf1f00	                         nop dword [rax]	       344	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007d48	            0x85c0	                           test eax, eax	       433	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007d4a	     0xf889b020000	                            js 0x4007feb	       433	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007d50	    0x8b3d00000000	            mov edi, dword [0x04007d56] 	       433	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007d56	            0x85ff	                           test edi, edi	       433	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007d58	     0xf848d020000	                            je 0x4007feb	       433	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007d5e	    0x8b0500000000	            mov eax, dword [0x04007d64] 	       438	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_17
0x4007d64	          0x8d5001	                      lea edx, [rax + 1]	       438	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_17
0x4007d67	            0x85c0	                           test eax, eax	       438	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_17
0x4007d69	    0x891500000000	            mov dword [0x04007d6f], edx 	       438	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_17
0x4007d6f	            0x750b	                           jne 0x4007d7c	       438	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_17
0x4007d71	    0x48c705000000	               mov qword [0x04007d7c], 1	       439	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_17
0x4007d7c	          0x488b2b	                    mov rbp, qword [rbx]	       441	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_20
0x4007d7f	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007d82	      0xe800000000	                          call 0x4007d87	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007d87	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007d8a	      0xe841ffffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007d8f	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007d92	     0xf84e7060000	                            je 0x400847f	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007d98	            0x85c0	                           test eax, eax	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x4007d9a	     0xf8469060000	                            je 0x4008409	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x4007da0	          0x4d85ed	                           test r13, r13	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x4007da3	     0xf8560060000	                           jne 0x4008409	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x4007da9	    0x48833d000000	               cmp qword [0x04007db1], 0	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x4007db1	     0xf84de060000	                            je 0x4008495	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x4007db7	        0x488b7b08	                mov rdi, qword [rbx + 8]	       443	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_21
0x4007dbb	      0xe800000000	                          call 0x4007dc0	       443	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_21
0x4007dc0	          0x4885c0	                           test rax, rax	       443	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_21
0x4007dc3	          0x4889c5	                            mov rbp, rax	       443	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_21
0x4007dc6	        0x410f94c6	                               sete r14b	       443	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_21
0x4007dca	        0x4c8b7b08	                mov r15, qword [rbx + 8]	       446	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_22
0x4007dce	          0x4c89ff	                            mov rdi, r15	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007dd1	      0xe800000000	                          call 0x4007dd6	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007dd6	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007dd9	      0xe8f2feffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007dde	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007de1	          0x4189c4	                           mov r12d, eax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007de4	     0xf84b6070000	                            je 0x40085a0	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007dea	            0x85c0	                           test eax, eax	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007dec	        0x410f95c7	                              setne r15b	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x4007df0	     0xf840d070000	                            je 0x4008503	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x4007df6	          0x4584f6	                         test r14b, r14b	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x4007df9	     0xf8404070000	                            je 0x4008503	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x4007dff	          0x4d85ed	                           test r13, r13	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x4007e02	     0xf84e2060000	                            je 0x40084ea	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x4007e08	    0x8b0500000000	            mov eax, dword [0x04007e0e] 	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007e0e	          0x83e801	                              sub eax, 1	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007e11	          0x4585e4	                         test r12d, r12d	       460	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_23
0x4007e14	    0x890500000000	            mov dword [0x04007e1a], eax 	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4007e1a	     0xf8406010000	                            je 0x4007f26	       460	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_23
0x4007e20	            0x85c0	                           test eax, eax	       463	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24
0x4007e22	            0x753c	                           jne 0x4007e60	       463	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24
0x4007e24	    0x488b05000000	            mov rax, qword [0x04007e2b] 	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e2b	        0x4883f802	                              cmp rax, 2	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e2f	     0xf845c070000	                            je 0x4008591	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e35	     0xf8e96060000	                           jle 0x40084d1	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e3b	        0x4883f804	                              cmp rax, 4	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e3f	     0xf843d070000	                            je 0x4008582	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e45	        0x4883f808	                              cmp rax, 8	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e49	     0xf8523070000	                           jne 0x4008572	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e4f	    0xc70500000000	               mov dword [0x04007e59], 3	       476	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e59	     0xf1f80000000	                         nop dword [rax]	       476	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4007e60	    0x8b3500000000	            mov esi, dword [0x04007e66] 	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e66	            0x85f6	                           test esi, esi	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e68	            0x7846	                            js 0x4007eb0	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e6a	        0x807b1803	                cmp byte [rbx + 0x18], 3	       527	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e6e	            0x7540	                           jne 0x4007eb0	       527	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e70	    0x8b0d00000000	            mov ecx, dword [0x04007e76] 	       528	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e76	            0x85c9	                           test ecx, ecx	       528	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e78	            0x7536	                           jne 0x4007eb0	       528	tc-i386-intel.c	FUNCTION_162	IF_30
0x4007e7a	          0x488b3b	                    mov rdi, qword [rbx]	       530	tc-i386-intel.c	FUNCTION_162	IF_30	CALL_32
0x4007e7d	      0xe800000000	                          call 0x4007e82	       530	tc-i386-intel.c	FUNCTION_162	IF_30	CALL_32
0x4007e82	    0x483d00000000	                              cmp rax, 0	       532	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007e88	            0x7426	                            je 0x4007eb0	       532	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007e8a	    0x483b05000000	            cmp rax, qword [0x04007e91] 	       533	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007e91	            0x741d	                            je 0x4007eb0	       533	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007e93	    0x483b05000000	            cmp rax, qword [0x04007e9a] 	       534	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007e9a	            0x7414	                            je 0x4007eb0	       534	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007e9c	    0x833d00000000	               cmp dword [0x04007ea3], 1	       535	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007ea3	            0x19c0	                            sbb eax, eax	       535	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007ea5	          0x83c002	                              add eax, 2	       535	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007ea8	     0x90500000000	              or dword [0x04007eae], eax	       535	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007eae	            0x6690	                                     nop	       535	tc-i386-intel.c	FUNCTION_162	IF_30	IF_31
0x4007eb0	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_162
0x4007eb5	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       539	tc-i386-intel.c	FUNCTION_162
0x4007eba	    0x644833342528	                xor rsi, qword fs:[0x28]	       539	tc-i386-intel.c	FUNCTION_162
0x4007ec3	     0xf8575070000	                           jne 0x400863e	       539	tc-i386-intel.c	FUNCTION_162
0x4007ec9	        0x4883c448	                           add rsp, 0x48	       539	tc-i386-intel.c	FUNCTION_162
0x4007ecd	              0x5b	                                 pop rbx	       539	tc-i386-intel.c	FUNCTION_162
0x4007ece	              0x5d	                                 pop rbp	       539	tc-i386-intel.c	FUNCTION_162
0x4007ecf	            0x415c	                                 pop r12	       539	tc-i386-intel.c	FUNCTION_162
0x4007ed1	            0x415d	                                 pop r13	       539	tc-i386-intel.c	FUNCTION_162
0x4007ed3	            0x415e	                                 pop r14	       539	tc-i386-intel.c	FUNCTION_162
0x4007ed5	            0x415f	                                 pop r15	       539	tc-i386-intel.c	FUNCTION_162
0x4007ed7	              0xc3	                                     ret	       539	tc-i386-intel.c	FUNCTION_162
0x4007ed8	     0xf1f84000000	                   nop dword [rax + rax]	       539	tc-i386-intel.c	FUNCTION_162
0x4007ee0	    0x833d00000000	               cmp dword [0x04007ee7], 1	       389	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_9
0x4007ee7	            0x7507	                           jne 0x4007ef0	       389	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_9
0x4007ee9	    0x891500000000	            mov dword [0x04007eef], edx 	       390	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_9
0x4007eef	              0x90	                                     nop	       390	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_9
0x4007ef0	          0x488b3b	                    mov rdi, qword [rbx]	       393	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_10	CALL_8
0x4007ef3	      0xe800000000	                          call 0x4007ef8	       393	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_10	CALL_8
0x4007ef8	        0x80781805	                cmp byte [rax + 0x18], 5	       393	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_10	CALL_8
0x4007efc	     0xf8456010000	                            je 0x4008058	       393	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_10	CALL_8
0x4007f02	          0x488b2b	                    mov rbp, qword [rbx]	       399	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_11	CALL_11
0x4007f05	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f08	      0xe800000000	                          call 0x4007f0d	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f0d	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f10	      0xe8bbfdffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f15	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007f18	     0xf84da030000	                            je 0x40082f8	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007f1e	            0x85c0	                           test eax, eax	       399	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_11	CALL_11
0x4007f20	     0xf85df030000	                           jne 0x4008305	       399	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_11	CALL_11
0x4007f26	            0x31c0	                            xor eax, eax	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x4007f28	            0xeb8b	                           jmp 0x4007eb5	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x4007f2a	    0x660f1f440000	                    nop word [rax + rax]	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x4007f30	          0x4c8b3b	                    mov r15, qword [rbx]	       370	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_5
0x4007f33	    0x830500000000	               add dword [0x04007f3a], 1	       369	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007f3a	    0xc70500000000	               mov dword [0x04007f44], 1	       368	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007f44	          0x4c89ff	                            mov rdi, r15	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f47	      0xe800000000	                          call 0x4007f4c	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f4c	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f4f	      0xe87cfdffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f54	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007f57	            0x89c5	                            mov ebp, eax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007f59	     0xf8469040000	                            je 0x40083c8	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4007f5f	    0x832d00000000	               sub dword [0x04007f66], 1	       371	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x4007f66	            0x85c0	                           test eax, eax	       372	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_8	CALL_6
0x4007f68	            0x74bc	                            je 0x4007f26	       372	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_8	CALL_6
0x4007f6a	    0x486305000000	         movsxd rax, dword [0x04007f71] 	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f71	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f73	            0x780e	                            js 0x4007f83	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f75	    0x4c3b24c50000	                  cmp r12, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f7d	     0xf85d5000000	                           jne 0x4008058	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f83	    0x4c3b35000000	            cmp r14, qword [0x04007f8a] 	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f8a	     0xf85c8000000	                           jne 0x4008058	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f90	    0x4c3b2d000000	            cmp r13, qword [0x04007f97] 	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f97	     0xf85bb000000	                           jne 0x4008058	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x4007f9d	          0x4c8b23	                    mov r12, qword [rbx]	       374	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_7
0x4007fa0	          0x4c89e7	                            mov rdi, r12	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x4007fa3	      0xe800000000	                          call 0x4007fa8	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x4007fa8	          0x4c89e7	                            mov rdi, r12	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x4007fab	          0x4989c5	                            mov r13, rax	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x4007fae	      0xe800000000	                          call 0x4007fb3	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x4007fb3	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x4007fb9	     0xf8463060000	                            je 0x4008622	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x4007fbf	      0x41807d1803	                cmp byte [r13 + 0x18], 3	       247	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4007fc4	     0xf8431060000	                            je 0x40085fb	       247	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4007fca	          0x4c8923	                    mov qword [rbx], r12	       251	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x4007fcd	    0x48c743080000	                  mov qword [rbx + 8], 0	       252	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x4007fd5	            0x89e8	                            mov eax, ebp	       253	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x4007fd7	        0xc6431803	                mov byte [rbx + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x4007fdb	      0xe9d5feffff	                           jmp 0x4007eb5	       253	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x4007fe0	      0x66837b1a00	                cmp word [rbx + 0x1a], 0	       500	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_26
0x4007fe5	     0xf85cd030000	                           jne 0x40083b8	       500	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_26
0x4007feb	          0x488b0b	                    mov rcx, qword [rbx]	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x4007fee	          0x4885c9	                           test rcx, rcx	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x4007ff1	     0xf8469030000	                            je 0x4008360	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x4007ff7	          0x4889cf	                            mov rdi, rcx	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007ffa	      0x48894c2408	                mov qword [rsp + 8], rcx	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4007fff	      0xe800000000	                          call 0x4008004	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008004	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008007	      0xe8c4fcffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x400800c	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x400800f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4008014	     0xf8456030000	                            je 0x4008370	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x400801a	            0x85c0	                           test eax, eax	       507	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27	CALL_28
0x400801c	     0xf8404ffffff	                            je 0x4007f26	       507	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27	CALL_28
0x4008022	         0xfb65318	           movzx edx, byte [rbx + 0x18] 	       507	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27	CALL_28
0x4008026	    0x486305000000	         movsxd rax, dword [0x0400802d] 	       507	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27	CALL_28
0x400802d	          0x83ea13	                           sub edx, 0x13	       509	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_28
0x4008030	          0x80fa01	                               cmp dl, 1	       509	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_28
0x4008033	     0xf86ef020000	                           jbe 0x4008328	       509	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_28
0x4008039	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x400803b	     0xf8827020000	                            js 0x4008268	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008041	          0x4863d0	                         movsxd rdx, eax	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008044	    0x4c3b24d50000	                  cmp r12, qword [rdx*8]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x400804c	     0xf8416020000	                            je 0x4008268	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008052	    0x660f1f440000	                    nop word [rax + rax]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008058	      0xba05000000	                              mov edx, 5	       229	tc-i386-intel.c	FUNCTION_158	IF_1	CALL_2
0x400805d	      0xbe00000000	                              mov esi, 0	       229	tc-i386-intel.c	FUNCTION_158	IF_1	CALL_2
0x4008062	            0x31ff	                            xor edi, edi	       229	tc-i386-intel.c	FUNCTION_158	IF_1	CALL_2
0x4008064	      0xe800000000	                          call 0x4008069	       229	tc-i386-intel.c	FUNCTION_158	IF_1	CALL_2
0x4008069	          0x4889c7	                            mov rdi, rax	       229	tc-i386-intel.c	FUNCTION_158	IF_1	CALL_2
0x400806c	            0x31c0	                            xor eax, eax	       229	tc-i386-intel.c	FUNCTION_158	IF_1	CALL_2
0x400806e	      0xe800000000	                          call 0x4008073	       229	tc-i386-intel.c	FUNCTION_158	IF_1	CALL_2
0x4008073	            0x31c0	                            xor eax, eax	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x4008075	      0xe93bfeffff	                           jmp 0x4007eb5	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x400807a	    0x660f1f440000	                    nop word [rax + rax]	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x4008080	          0x4889df	                            mov rdi, rbx	       489	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_25
0x4008083	      0xe89882ffff	   call sym.i386_intel_simplify_register	       489	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_25
0x4008088	          0x83f802	                              cmp eax, 2	       490	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x400808b	     0xf8524feffff	                           jne 0x4007eb5	       490	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x4008091	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       492	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25	CALL_26
0x4008095	    0x4881fafeff00	                         cmp rdx, 0xfffe	       492	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25	CALL_26
0x400809c	     0xf8fdb050000	                            jg 0x400867d	       492	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25	CALL_26
0x40080a2	          0x83c201	                              add edx, 1	       493	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x40080a5	        0xc6431802	                mov byte [rbx + 0x18], 2	       494	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x40080a9	    0x48c743100000	               mov qword [rbx + 0x10], 0	       495	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x40080b1	        0x6689531a	               mov word [rbx + 0x1a], dx	       493	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x40080b5	      0xe9fbfdffff	                           jmp 0x4007eb5	       493	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x40080ba	    0x660f1f440000	                    nop word [rax + rax]	       493	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25
0x40080c0	          0x488b2b	                    mov rbp, qword [rbx]	       347	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_2
0x40080c3	          0x4885ed	                           test rbp, rbp	       347	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_2
0x40080c6	            0x7440	                            je 0x4008108	       347	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_2
0x40080c8	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x40080cb	      0xe800000000	                          call 0x40080d0	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x40080d0	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x40080d3	      0xe8f8fbffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x40080d8	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x40080db	     0xf843e030000	                            je 0x400841f	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x40080e1	            0x85c0	                           test eax, eax	       349	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_2	IF_3	CALL_1
0x40080e3	     0xf843dfeffff	                            je 0x4007f26	       349	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_2	IF_3	CALL_1
0x40080e9	    0x486305000000	         movsxd rax, dword [0x040080f0] 	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40080f0	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40080f2	            0x7814	                            js 0x4008108	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40080f4	    0x4c3b24c50000	                  cmp r12, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40080fc	     0xf8556ffffff	                           jne 0x4008058	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008102	    0x660f1f440000	                    nop word [rax + rax]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008108	    0x448b15000000	           mov r10d, dword [0x0400810f] 	       354	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_4
0x400810f	          0x4585d2	                         test r10d, r10d	       354	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_4
0x4008112	            0x7507	                           jne 0x400811b	       354	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_4
0x4008114	    0x830500000000	               add dword [0x0400811b], 1	       355	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_4
0x400811b	        0x488b6b08	                mov rbp, qword [rbx + 8]	       356	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_3
0x400811f	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008122	      0xe800000000	                          call 0x4008127	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008127	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x400812a	      0xe8a1fbffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x400812f	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4008132	     0xf8420030000	                            je 0x4008458	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x4008138	    0x448b05000000	            mov r8d, dword [0x0400813f] 	       357	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x400813f	          0x4585c0	                           test r8d, r8d	       357	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x4008142	            0x7507	                           jne 0x400814b	       357	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x4008144	    0x832d00000000	               sub dword [0x0400814b], 1	       358	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x400814b	            0x85c0	                           test eax, eax	       359	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_6
0x400814d	     0xf84d3fdffff	                            je 0x4007f26	       359	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_6
0x4008153	        0x48833b00	                      cmp qword [rbx], 0	       361	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_7
0x4008157	     0xf8461040000	                            je 0x40085be	       361	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_7
0x400815d	        0xc6431813	            mov byte [rbx + 0x18], 0x13 	       362	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_7
0x4008161	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_162
0x4008166	      0xe94afdffff	                           jmp 0x4007eb5	       538	tc-i386-intel.c	FUNCTION_162
0x400816b	       0xf1f440000	                   nop dword [rax + rax]	       538	tc-i386-intel.c	FUNCTION_162
0x4008170	        0x488b7b08	                mov rdi, qword [rbx + 8]	       405	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_12	CALL_13
0x4008174	      0xe800000000	                          call 0x4008179	       405	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_12	CALL_13
0x4008179	        0x80781805	                cmp byte [rax + 0x18], 5	       405	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_12	CALL_13
0x400817d	     0xf84d5feffff	                            je 0x4008058	       405	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_12	CALL_13
0x4008183	        0x488b6b08	                mov rbp, qword [rbx + 8]	       411	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_13	CALL_16
0x4008187	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x400818a	      0xe800000000	                          call 0x400818f	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x400818f	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008192	      0xe839fbffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008197	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x400819a	     0xf8470010000	                            je 0x4008310	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x40081a0	            0x85c0	                           test eax, eax	       411	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_13	CALL_16
0x40081a2	     0xf847efdffff	                            je 0x4007f26	       411	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_13	CALL_16
0x40081a8	    0x486305000000	         movsxd rax, dword [0x040081af] 	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40081af	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40081b1	            0x780e	                            js 0x40081c1	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40081b3	    0x4c3b24c50000	                  cmp r12, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40081bb	     0xf8597feffff	                           jne 0x4008058	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40081c1	    0x8b1500000000	            mov edx, dword [0x040081c7] 	       415	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14
0x40081c7	            0x85d2	                           test edx, edx	       415	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14
0x40081c9	            0x7533	                           jne 0x40081fe	       415	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14
0x40081cb	    0x488b05000000	            mov rax, qword [0x040081d2] 	       417	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	IF_15
0x40081d2	          0x4885c0	                           test rax, rax	       417	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	IF_15
0x40081d5	     0xf8488030000	                            je 0x4008563	       417	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	IF_15
0x40081db	          0x488b13	                    mov rdx, qword [rbx]	       424	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	ELSE_2
0x40081de	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       426	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	ELSE_2	CALL_18
0x40081e3	      0xc64424281f	            mov byte [rsp + 0x28], 0x1f 	       423	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	ELSE_2
0x40081e8	      0x4889442418	             mov qword [rsp + 0x18], rax	       425	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	ELSE_2
0x40081ed	      0x4889542410	             mov qword [rsp + 0x10], rdx	       424	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	ELSE_2
0x40081f2	      0xe800000000	                          call 0x40081f7	       426	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	ELSE_2	CALL_18
0x40081f7	    0x488905000000	            mov qword [0x040081fe], rax 	       426	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	ELSE_2	CALL_18
0x40081fe	        0x488b6b08	                mov rbp, qword [rbx + 8]	       429	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_19
0x4008202	          0x4889ef	                            mov rdi, rbp	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x4008205	      0xe800000000	                          call 0x400820a	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x400820a	          0x4889ef	                            mov rdi, rbp	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x400820d	          0x4989c4	                            mov r12, rax	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x4008210	      0xe800000000	                          call 0x4008215	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x4008215	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x400821b	     0xf8481020000	                            je 0x40084a2	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x4008221	    0x41807c241803	                cmp byte [r12 + 0x18], 3	       247	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4008227	     0xf8404020000	                            je 0x4008431	       247	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x400822d	          0x48892b	                    mov qword [rbx], rbp	       251	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x4008230	    0x48c743080000	                  mov qword [rbx + 8], 0	       252	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x4008238	        0xc6431803	                mov byte [rbx + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x400823c	    0x8b0500000000	            mov eax, dword [0x04008242] 	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x4008242	            0x85c0	                           test eax, eax	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x4008244	     0xf8926fcffff	                           jns 0x4007e70	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x400824a	      0xe961fcffff	                           jmp 0x4007eb0	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x400824f	              0x90	                                     nop	       526	tc-i386-intel.c	FUNCTION_162	IF_30
0x4008250	          0x488b0b	                    mov rcx, qword [rbx]	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x4008253	          0x4885c9	                           test rcx, rcx	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x4008256	     0xf859bfdffff	                           jne 0x4007ff7	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x400825c	      0xe9ccfdffff	                           jmp 0x400802d	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x4008261	     0xf1f80000000	                         nop dword [rax]	       506	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_27
0x4008268	    0x4c3b35000000	            cmp r14, qword [0x0400826f] 	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x400826f	     0xf85e3fdffff	                           jne 0x4008058	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008275	    0x4c8b2d000000	            mov r13, qword [0x0400827c] 	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x400827c	          0x4c39ed	                            cmp rbp, r13	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x400827f	     0xf85d3fdffff	                           jne 0x4008058	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008285	        0x488b6b08	                mov rbp, qword [rbx + 8]	       515	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x4008289	          0x4885ed	                           test rbp, rbp	       515	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x400828c	            0x7428	                            je 0x40082b6	       515	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x400828e	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008291	      0xe800000000	                          call 0x4008296	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008296	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x4008299	      0xe832faffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_161	CALL_2
0x400829e	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x40082a1	     0xf8449010000	                            je 0x40083f0	       325	tc-i386-intel.c	FUNCTION_161	IF_1
0x40082a7	            0x85c0	                           test eax, eax	       516	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29	CALL_30
0x40082a9	     0xf8477fcffff	                            je 0x4007f26	       516	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29	CALL_30
0x40082af	    0x486305000000	         movsxd rax, dword [0x040082b6] 	       516	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29	CALL_30
0x40082b6	        0x807b1813	            cmp byte [rbx + 0x18], 0x13 	       517	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29	CALL_31
0x40082ba	     0xf84d0000000	                            je 0x4008390	       517	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29	CALL_31
0x40082c0	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082c2	            0x780e	                            js 0x40082d2	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082c4	    0x4c3b24c50000	                  cmp r12, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082cc	     0xf8586fdffff	                           jne 0x4008058	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082d2	    0x4c393d000000	            cmp qword [0x040082d9], r15 	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082d9	     0xf8579fdffff	                           jne 0x4008058	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082df	    0x4c392d000000	            cmp qword [0x040082e6], r13 	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082e6	     0xf856cfdffff	                           jne 0x4008058	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082ec	      0xe96ffbffff	                           jmp 0x4007e60	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082f1	     0xf1f80000000	                         nop dword [rax]	       227	tc-i386-intel.c	FUNCTION_158	IF_1
0x40082f8	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40082fd	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008300	      0xe800000000	                          call 0x4008305	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008305	          0x488b2b	                    mov rbp, qword [rbx]	       401	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_12
0x4008308	      0xe9f5feffff	                           jmp 0x4008202	       401	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_12
0x400830d	           0xf1f00	                         nop dword [rax]	       401	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_12
0x4008310	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008315	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008318	      0xe800000000	                          call 0x400831d	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x400831d	      0xe986feffff	                           jmp 0x40081a8	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008322	    0x660f1f440000	                    nop word [rax + rax]	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008328	    0x488b2d000000	            mov rbp, qword [0x0400832f] 	       512	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_28
0x400832f	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008331	    0x4c8b3d000000	            mov r15, qword [0x04008338] 	       511	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_28
0x4008338	          0x4989ed	                            mov r13, rbp	       512	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_28
0x400833b	     0xf8844ffffff	                            js 0x4008285	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008341	          0x4863d0	                         movsxd rdx, eax	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008344	    0x4c3b24d50000	                  cmp r12, qword [rdx*8]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x400834c	     0xf8506fdffff	                           jne 0x4008058	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008352	      0xe925ffffff	                           jmp 0x400827c	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008357	    0x660f1f840000	                    nop word [rax + rax]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008360	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008362	     0xf89d9fcffff	                           jns 0x4008041	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008368	          0x4d89f7	                            mov r15, r14	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x400836b	      0xe90cffffff	                           jmp 0x400827c	       226	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008370	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008375	          0x4889cf	                            mov rdi, rcx	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008378	      0xe800000000	                          call 0x400837d	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x400837d	         0xfb65318	           movzx edx, byte [rbx + 0x18] 	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008381	    0x486305000000	         movsxd rax, dword [0x04008388] 	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008388	      0xe9a0fcffff	                           jmp 0x400802d	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x400838d	           0xf1f00	                         nop dword [rax]	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008390	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x4008392	    0x4c8b2d000000	            mov r13, qword [0x04008399] 	       517	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29	CALL_31
0x4008399	     0xf88c1faffff	                            js 0x4007e60	       224	tc-i386-intel.c	FUNCTION_158	IF_1
0x400839f	    0x4c3b24c50000	                  cmp r12, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40083a7	     0xf85abfcffff	                           jne 0x4008058	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40083ad	      0xe92dffffff	                           jmp 0x40082df	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40083b2	    0x660f1f440000	                    nop word [rax + rax]	       225	tc-i386-intel.c	FUNCTION_158	IF_1
0x40083b8	          0x4889df	                            mov rdi, rbx	       501	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_27
0x40083bb	      0xe8607fffff	   call sym.i386_intel_simplify_register	       501	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_27
0x40083c0	      0xe9f0faffff	                           jmp 0x4007eb5	       501	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_27
0x40083c5	           0xf1f00	                         nop dword [rax]	       501	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_27
0x40083c8	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40083cd	          0x4c89ff	                            mov rdi, r15	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40083d0	      0xbd01000000	                              mov ebp, 1	       328	tc-i386-intel.c	FUNCTION_161	IF_1
0x40083d5	      0xe800000000	                          call 0x40083da	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40083da	    0x832d00000000	               sub dword [0x040083e1], 1	       371	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x40083e1	      0xe984fbffff	                           jmp 0x4007f6a	       371	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x40083e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       371	tc-i386-intel.c	FUNCTION_162	SWITCH_1
0x40083f0	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40083f5	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40083f8	      0xe800000000	                          call 0x40083fd	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40083fd	    0x486305000000	         movsxd rax, dword [0x04008404] 	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008404	      0xe9adfeffff	                           jmp 0x40082b6	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008409	            0x85c0	                           test eax, eax	       445	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_19
0x400840b	     0xf8584000000	                           jne 0x4008495	       445	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_19
0x4008411	    0x832d00000000	               sub dword [0x04008418], 1	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4008418	            0x31c0	                            xor eax, eax	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x400841a	      0xe996faffff	                           jmp 0x4007eb5	       522	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_29
0x400841f	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008424	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008427	      0xe800000000	                          call 0x400842c	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x400842c	      0xe9b8fcffff	                           jmp 0x40080e9	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008431	        0x498b3c24	                    mov rdi, qword [r12]	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008435	      0xe800000000	                          call 0x400843a	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x400843a	      0xbf00000000	                              mov edi, 0	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x400843f	      0xb916000000	                           mov ecx, 0x16	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008444	          0x4889c6	                            mov rsi, rax	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008447	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008449	     0xf85defdffff	                           jne 0x400822d	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x400844f	        0x498b2c24	                    mov rbp, qword [r12]	       250	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4008453	      0xe9d5fdffff	                           jmp 0x400822d	       250	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4008458	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x400845d	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008460	      0xe800000000	                          call 0x4008465	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008465	    0x448b0d000000	            mov r9d, dword [0x0400846c] 	       357	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x400846c	      0xb801000000	                              mov eax, 1	       328	tc-i386-intel.c	FUNCTION_161	IF_1
0x4008471	          0x4585c9	                           test r9d, r9d	       357	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x4008474	     0xf84cafcffff	                            je 0x4008144	       357	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x400847a	      0xe9d4fcffff	                           jmp 0x4008153	       357	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_5
0x400847f	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008484	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x4008487	      0xe800000000	                          call 0x400848c	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x400848c	          0x4d85ed	                           test r13, r13	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x400848f	     0xf8414f9ffff	                            je 0x4007da9	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x4008495	    0x41be01000000	                             mov r14d, 1	       442	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_18
0x400849b	            0x31ed	                            xor ebp, ebp	       435	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x400849d	      0xe928f9ffff	                           jmp 0x4007dca	       435	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x40084a2	        0x498b1424	                    mov rdx, qword [r12]	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084a6	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       240	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084aa	          0x488913	                    mov qword [rbx], rdx	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084ad	      0x498b542408	                mov rdx, qword [r12 + 8]	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084b2	        0x48895308	                mov qword [rbx + 8], rdx	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084b6	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084bb	        0x48895310	             mov qword [rbx + 0x10], rdx	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084bf	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084c4	        0x48014310	            add qword [rbx + 0x10], rax 	       243	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084c8	        0x48895318	             mov qword [rbx + 0x18], rdx	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084cc	      0xe98ff9ffff	                           jmp 0x4007e60	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x40084d1	        0x4883f801	                              cmp rax, 1	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x40084d5	     0xf8597000000	                           jne 0x4008572	       464	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x40084db	    0xc70500000000	               mov dword [0x040084e5], 0	       467	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x40084e5	      0xe976f9ffff	                           jmp 0x4007e60	       468	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x40084ea	    0x48833d000000	               cmp qword [0x040084f2], 0	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x40084f2	     0xf8410f9ffff	                            je 0x4007e08	       447	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_20
0x40084f8	          0x488b3b	                    mov rdi, qword [rbx]	       448	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_23
0x40084fb	      0xe800000000	                          call 0x4008500	       448	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_23
0x4008500	          0x4889c5	                            mov rbp, rax	       448	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	CALL_23
0x4008503	          0x4885ed	                           test rbp, rbp	       450	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21
0x4008506	     0xf84fcf8ffff	                            je 0x4007e08	       450	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21
0x400850c	          0x4584ff	                         test r15b, r15b	       450	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21
0x400850f	     0xf84f3f8ffff	                            je 0x4007e08	       450	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21
0x4008515	          0x4889ef	                            mov rdi, rbp	       452	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	CALL_24
0x4008518	      0xe800000000	                          call 0x400851d	       452	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	CALL_24
0x400851d	        0x807d1802	                cmp byte [rbp + 0x18], 2	       453	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x4008521	            0x742d	                            je 0x4008550	       453	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x4008523	    0x48c745100000	               mov qword [rbp + 0x10], 0	       455	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x400852b	            0x31c0	                            xor eax, eax	       455	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x400852d	    0x480faf050000	            imul rax, qword [0x04008535]	       456	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21
0x4008535	    0x488905000000	            mov qword [0x0400853c], rax 	       456	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21
0x400853c	    0x8b0500000000	            mov eax, dword [0x04008542] 	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4008542	          0x83e801	                              sub eax, 1	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4008545	    0x890500000000	            mov dword [0x0400854b], eax 	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x400854b	      0xe9d0f8ffff	                           jmp 0x4007e20	       459	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16
0x4008550	    0x488b05000000	            mov rax, qword [0x04008557] 	       454	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x4008557	        0xf6400b40	            test byte [rax + 0xb], 0x40 	       454	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x400855b	            0x75c6	                           jne 0x4008523	       454	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x400855d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       454	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x4008561	            0xebca	                           jmp 0x400852d	       454	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_21	IF_22
0x4008563	          0x488b03	                    mov rax, qword [rbx]	       418	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	IF_15
0x4008566	    0x488905000000	            mov qword [0x0400856d], rax 	       418	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	IF_15
0x400856d	      0xe98cfcffff	                           jmp 0x40081fe	       418	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_14	IF_15
0x4008572	    0x48c705000000	               mov qword [0x0400857d], 0	       480	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x400857d	      0xe9def8ffff	                           jmp 0x4007e60	       481	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4008582	    0xc70500000000	               mov dword [0x0400858c], 2	       473	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x400858c	      0xe9cff8ffff	                           jmp 0x4007e60	       474	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4008591	    0xc70500000000	               mov dword [0x0400859b], 1	       470	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x400859b	      0xe9c0f8ffff	                           jmp 0x4007e60	       471	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_16	IF_24	SWITCH_2
0x40085a0	          0x4c89ff	                            mov rdi, r15	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40085a3	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40085a8	    0x41bf01000000	                             mov r15d, 1	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40085ae	      0xe800000000	                          call 0x40085b3	       327	tc-i386-intel.c	FUNCTION_161	IF_1	CALL_3
0x40085b3	    0x41bc01000000	                             mov r12d, 1	       328	tc-i386-intel.c	FUNCTION_161	IF_1
0x40085b9	      0xe938f8ffff	                           jmp 0x4007df6	       328	tc-i386-intel.c	FUNCTION_161	IF_1
0x40085be	        0x4c8b6308	                mov r12, qword [rbx + 8]	       364	tc-i386-intel.c	FUNCTION_162	SWITCH_1	CALL_4
0x40085c2	          0x4c89e7	                            mov rdi, r12	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x40085c5	      0xe800000000	                          call 0x40085ca	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x40085ca	          0x4c89e7	                            mov rdi, r12	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x40085cd	          0x4889c5	                            mov rbp, rax	       237	tc-i386-intel.c	FUNCTION_159	CALL_1
0x40085d0	      0xe800000000	                          call 0x40085d5	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x40085d5	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x40085db	     0xf8482000000	                            je 0x4008663	       238	tc-i386-intel.c	FUNCTION_159	IF_1	CALL_2
0x40085e1	        0x807d1803	                cmp byte [rbp + 0x18], 3	       247	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x40085e5	            0x745c	                            je 0x4008643	       247	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x40085e7	          0x4c8923	                    mov qword [rbx], r12	       251	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x40085ea	    0x48c743080000	                  mov qword [rbx + 8], 0	       252	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x40085f2	        0xc6431803	                mov byte [rbx + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x40085f6	      0xe941fcffff	                           jmp 0x400823c	       253	tc-i386-intel.c	FUNCTION_159	ELSE_1
0x40085fb	        0x498b7d00	                    mov rdi, qword [r13]	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x40085ff	      0xe800000000	                          call 0x4008604	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008604	      0xbe00000000	                              mov esi, 0	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008609	          0x4889c7	                            mov rdi, rax	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x400860c	      0xe800000000	                          call 0x4008611	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008611	            0x85c0	                           test eax, eax	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008613	     0xf85b1f9ffff	                           jne 0x4007fca	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008619	        0x4d8b6500	                    mov r12, qword [r13]	       250	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x400861d	      0xe9a8f9ffff	                           jmp 0x4007fca	       250	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4008622	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       240	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008626	      0xb908000000	                              mov ecx, 8	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x400862b	          0x4889df	                            mov rdi, rbx	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x400862e	          0x4c89ee	                            mov rsi, r13	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008631	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008633	        0x48014310	            add qword [rbx + 0x10], rax 	       243	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008637	            0x89e8	                            mov eax, ebp	       243	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008639	      0xe977f8ffff	                           jmp 0x4007eb5	       243	tc-i386-intel.c	FUNCTION_159	IF_1
0x400863e	      0xe800000000	                          call 0x4008643	       539	tc-i386-intel.c	FUNCTION_162
0x4008643	        0x488b7d00	                    mov rdi, qword [rbp]	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008647	      0xe800000000	                          call 0x400864c	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x400864c	      0xbe00000000	                              mov esi, 0	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008651	          0x4889c7	                            mov rdi, rax	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008654	      0xe800000000	                          call 0x4008659	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x4008659	            0x85c0	                           test eax, eax	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x400865b	            0x758a	                           jne 0x40085e7	       248	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2	CALL_4
0x400865d	        0x4c8b6500	                    mov r12, qword [rbp]	       250	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4008661	            0xeb84	                           jmp 0x40085e7	       250	tc-i386-intel.c	FUNCTION_159	ELSE_1	IF_2
0x4008663	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       240	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008667	      0xb908000000	                              mov ecx, 8	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x400866c	          0x4889df	                            mov rdi, rbx	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x400866f	          0x4889ee	                            mov rsi, rbp	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008672	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	       242	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008674	        0x48014310	            add qword [rbx + 0x10], rax 	       243	tc-i386-intel.c	FUNCTION_159	IF_1
0x4008678	      0xe9e3f7ffff	                           jmp 0x4007e60	       243	tc-i386-intel.c	FUNCTION_159	IF_1
0x400867d	      0xba00000000	                              mov edx, 0	       492	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25	CALL_26
0x4008682	      0xbeec010000	                          mov esi, 0x1ec	       492	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25	CALL_26
0x4008687	      0xbf00000000	                              mov edi, 0	       492	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25	CALL_26
0x400868c	      0xe800000000	                          call 0x4008691	       492	tc-i386-intel.c	FUNCTION_162	SWITCH_1	IF_25	CALL_26
i386_elf_section_type	IF,1:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	21
0x40111f0	    0x833d00000000	               cmp dword [0x040111f7], 2	     11576	tc-i386.c	
0x40111f7	          0x4889f8	                            mov rax, rdi	     11574	tc-i386.c	
0x40111fa	            0x7534	                           jne 0x4011230	     11576	tc-i386.c	
0x40111fc	        0x4883fe06	                              cmp rsi, 6	     11576	tc-i386.c	
0x4011200	            0x752e	                           jne 0x4011230	     11576	tc-i386.c	
0x4011202	          0x4889c6	                            mov rsi, rax	     11577	tc-i386.c	
0x4011205	      0xbf00000000	                              mov edi, 0	     11577	tc-i386.c	
0x401120a	      0xb906000000	                              mov ecx, 6	     11577	tc-i386.c	
0x401120f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11577	tc-i386.c	
0x4011211	           0xf92c2	                                 setb dl	     11577	tc-i386.c	
0x4011214	           0xf97c0	                                 seta al	     11577	tc-i386.c	
0x4011217	            0x29d0	                            sub eax, edx	     11577	tc-i386.c	
0x4011219	           0xfbec0	                           movsx eax, al	     11577	tc-i386.c	
0x401121c	          0x83f801	                              cmp eax, 1	     11578	tc-i386.c	
0x401121f	            0x19c0	                            sbb eax, eax	     11578	tc-i386.c	
0x4011221	      0x2502000070	                     and eax, 0x70000002	     11578	tc-i386.c	
0x4011226	          0x83e801	                              sub eax, 1	     11578	tc-i386.c	
0x4011229	              0xc3	                                     ret	     11578	tc-i386.c	
0x401122a	    0x660f1f440000	                    nop word [rax + rax]	     11578	tc-i386.c	
0x4011230	      0xb8ffffffff	                     mov eax, 0xffffffff	     11580	tc-i386.c	FUNCTION_140
0x4011235	              0xc3	                                     ret	     11581	tc-i386.c	FUNCTION_140
md_estimate_size_before_relax	IF,6:DO,0:ELSE,3:WHILE,0:CALL,10:functions,0:SWITCH,1:FOR,0	183
0x400e7a0	            0x4154	                                push r12	      9731	tc-i386.c	FUNCTION_115
0x400e7a2	              0x55	                                push rbp	      9731	tc-i386.c	FUNCTION_115
0x400e7a3	          0x4889f5	                            mov rbp, rsi	      9731	tc-i386.c	FUNCTION_115
0x400e7a6	              0x53	                                push rbx	      9731	tc-i386.c	FUNCTION_115
0x400e7a7	          0x4889fb	                            mov rbx, rdi	      9731	tc-i386.c	FUNCTION_115
0x400e7aa	        0x4883ec10	                           sub rsp, 0x10	      9731	tc-i386.c	FUNCTION_115
0x400e7ae	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e7b2	      0xe800000000	                          call 0x400e7b7	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e7b7	          0x4839e8	                            cmp rax, rbp	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e7ba	     0xf84f8010000	                            je 0x400e9b8	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e7c0	          0x8b6b60	            mov ebp, dword [rbx + 0x60] 	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e7c3	        0x40f6c501	                             test bpl, 1	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e7c7	     0xf85a3000000	                           jne 0x400e870	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e7cd	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400e7d1	      0xba04000000	                              mov edx, 4	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e7d6	        0x4883f847	                           cmp rax, 0x47	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400e7da	     0xf84a0010000	                            je 0x400e980	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400e7e0	            0x89ee	                            mov esi, ebp	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e7e2	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      9766	tc-i386.c	FUNCTION_115	IF_1
0x400e7e6	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      9767	tc-i386.c	FUNCTION_115	IF_1
0x400e7ea	          0xc1ee02	                              shr esi, 2	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e7ed	          0x83fe01	                              cmp esi, 1	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e7f0	            0x7418	                            je 0x400e80a	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e7f2	     0xf8298000000	                            jb 0x400e890	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e7f8	          0x83fe02	                              cmp esi, 2	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e7fb	     0xf85bf000000	                           jne 0x400e8c0	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e801	          0x83fa02	                              cmp edx, 2	      9782	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e804	     0xf84e6000000	                            je 0x400e8f0	      9782	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e80a	    0x8b3d00000000	            mov edi, dword [0x0400e810] 	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e810	            0x85ff	                           test edi, edi	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e812	            0x740b	                            je 0x400e81f	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e814	      0x48837b1847	           cmp qword [rbx + 0x18], 0x47 	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e819	     0xf84e4000000	                            je 0x400e903	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e81f	           0xfb639	                   movzx edi, byte [rcx]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e822	          0xc6010f	                     mov byte [rcx], 0xf	      9819	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e825	        0x4883ec08	                              sub rsp, 8	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e829	    0x41b901000000	                              mov r9d, 1	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e82f	          0x8d7710	                   lea esi, [rdi + 0x10]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e832	          0x4889df	                            mov rdi, rbx	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e835	        0x40887101	                 mov byte [rcx + 1], sil	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e839	          0x8d4a01	                      lea ecx, [rdx + 1]	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e83c	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e840	              0x50	                                push rax	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e841	      0x418d742401	                      lea esi, [r12 + 1]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e846	          0x4863c9	                         movsxd rcx, ecx	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e849	        0x48014b10	            add qword [rbx + 0x10], rcx 	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e84d	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e851	      0xe800000000	                          call 0x400e856	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e856	              0x58	                                 pop rax	      9826	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e857	              0x5a	                                 pop rdx	      9826	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e858	          0x4889df	                            mov rdi, rbx	      9832	tc-i386.c	FUNCTION_115	IF_1	CALL_10
0x400e85b	      0xe800000000	                          call 0x400e860	      9832	tc-i386.c	FUNCTION_115	IF_1	CALL_10
0x400e860	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      9833	tc-i386.c	FUNCTION_115	IF_1
0x400e864	          0x4429e0	                           sub eax, r12d	      9833	tc-i386.c	FUNCTION_115	IF_1
0x400e867	        0x4883c410	                           add rsp, 0x10	      9843	tc-i386.c	FUNCTION_115
0x400e86b	              0x5b	                                 pop rbx	      9843	tc-i386.c	FUNCTION_115
0x400e86c	              0x5d	                                 pop rbp	      9843	tc-i386.c	FUNCTION_115
0x400e86d	            0x415c	                                 pop r12	      9843	tc-i386.c	FUNCTION_115
0x400e86f	              0xc3	                                     ret	      9843	tc-i386.c	FUNCTION_115
0x400e870	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400e874	      0xba02000000	                              mov edx, 2	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e879	        0x4883f847	                           cmp rax, 0x47	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400e87d	     0xf855dffffff	                           jne 0x400e7e0	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400e883	      0xb80b000000	                            mov eax, 0xb	      9758	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x400e888	      0xe953ffffff	                           jmp 0x400e7e0	      9758	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x400e88d	           0xf1f00	                         nop dword [rax]	      9758	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x400e890	          0xc601e9	                    mov byte [rcx], 0xe9	      9773	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e893	          0x4863ca	                         movsxd rcx, edx	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e896	        0x48014b10	            add qword [rbx + 0x10], rcx 	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e89a	        0x4883ec08	                              sub rsp, 8	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e89e	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e8a2	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e8a6	              0x50	                                push rax	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e8a7	    0x41b901000000	                              mov r9d, 1	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e8ad	          0x4489e6	                           mov esi, r12d	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e8b0	          0x4889df	                            mov rdi, rbx	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e8b3	      0xe800000000	                          call 0x400e8b8	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e8b8	            0x415b	                                 pop r11	      9779	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e8ba	              0x5d	                                 pop rbp	      9779	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e8bb	            0xeb9b	                           jmp 0x400e858	      9779	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e8bd	           0xf1f00	                         nop dword [rax]	      9779	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e8c0	      0xba05000000	                              mov edx, 5	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8c5	      0xbe00000000	                              mov esi, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8ca	            0x31ff	                            xor edi, edi	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8cc	      0xe800000000	                          call 0x400e8d1	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8d1	            0x89ee	                            mov esi, ebp	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8d3	          0x4889c7	                            mov rdi, rax	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8d6	      0xb900000000	                              mov ecx, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8db	      0xba65260000	                         mov edx, 0x2665	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8e0	            0x31c0	                            xor eax, eax	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8e2	      0xe800000000	                          call 0x400e8e7	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8e7	    0x660f1f840000	                    nop word [rax + rax]	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400e8f0	    0x448b15000000	           mov r10d, dword [0x0400e8f7] 	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e8f7	          0x4585d2	                         test r10d, r10d	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e8fa	            0x7444	                            je 0x400e940	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e8fc	      0x48837b1847	           cmp qword [rbx + 0x18], 0x47 	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e901	            0x753d	                           jne 0x400e940	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e903	        0x4883ec08	                              sub rsp, 8	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e907	      0x498d442401	                      lea rax, [r12 + 1]	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e90c	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e910	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e914	            0x6a0d	                                push 0xd	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e916	          0x4489e6	                           mov esi, r12d	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e919	        0x48894310	             mov qword [rbx + 0x10], rax	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e91d	    0x41b901000000	                              mov r9d, 1	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e923	      0xba01000000	                              mov edx, 1	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e928	          0x4889df	                            mov rdi, rbx	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e92b	      0xe800000000	                          call 0x400e930	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e930	          0x800880	                     or byte [rax], 0x80	      9812	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e933	              0x59	                                 pop rcx	      9813	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e934	              0x5e	                                 pop rsi	      9813	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e935	      0xe91effffff	                           jmp 0x400e858	      9813	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e93a	    0x660f1f440000	                    nop word [rax + rax]	      9813	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e940	          0x803101	                       xor byte [rcx], 1	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e943	        0xc6410103	                   mov byte [rcx + 1], 3	      9788	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e947	        0x4883ec08	                              sub rsp, 8	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e94b	        0xc64102e9	                mov byte [rcx + 2], 0xe9	      9790	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e94f	      0x4883431004	               add qword [rbx + 0x10], 4	      9793	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e954	      0x418d742402	                      lea esi, [r12 + 2]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e959	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e95d	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e961	    0x41b901000000	                              mov r9d, 1	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e967	              0x50	                                push rax	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e968	      0xba02000000	                              mov edx, 2	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e96d	          0x4889df	                            mov rdi, rbx	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e970	      0xe800000000	                          call 0x400e975	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e975	            0x4158	                                  pop r8	      9798	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e977	            0x4159	                                  pop r9	      9798	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e979	      0xe9dafeffff	                           jmp 0x400e858	      9798	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e97e	            0x6690	                                     nop	      9798	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e980	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e984	        0x8954240c	              mov dword [rsp + 0xc], edx	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e988	      0xe8436fffff	                   call sym.need_plt32_p	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e98d	            0x85c0	                           test eax, eax	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e98f	          0x8b6b60	            mov ebp, dword [rbx + 0x60] 	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e992	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e996	            0x7410	                            je 0x400e9a8	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e998	      0xb87e010000	                          mov eax, 0x17e	      9761	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4
0x400e99d	      0xe93efeffff	                           jmp 0x400e7e0	      9761	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4
0x400e9a2	    0x660f1f440000	                    nop word [rax + rax]	      9761	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4
0x400e9a8	      0xb809000000	                              mov eax, 9	      9764	tc-i386.c	FUNCTION_115	IF_1	ELSE_3
0x400e9ad	      0xe92efeffff	                           jmp 0x400e7e0	      9764	tc-i386.c	FUNCTION_115	IF_1	ELSE_3
0x400e9b2	    0x660f1f440000	                    nop word [rax + rax]	      9764	tc-i386.c	FUNCTION_115	IF_1	ELSE_3
0x400e9b8	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x400e9bc	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x400e9c0	          0x4889ef	                            mov rdi, rbp	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e9c3	      0xe800000000	                          call 0x400e9c8	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e9c8	        0xf6401a40	           test byte [rax + 0x1a], 0x40 	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e9cc	     0xf85eefdffff	                           jne 0x400e7c0	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e9d2	          0x4889ef	                            mov rdi, rbp	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e9d5	      0xe800000000	                          call 0x400e9da	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e9da	            0x85c0	                           test eax, eax	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e9dc	          0x4889ef	                            mov rdi, rbp	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400e9df	            0x743f	                            je 0x400ea20	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e9e1	      0xe800000000	                          call 0x400e9e6	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x400e9e6	            0xa803	                              test al, 3	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x400e9e8	            0x754b	                           jne 0x400ea35	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x400e9ea	        0x4983fc47	                           cmp r12, 0x47	      9699	tc-i386.c	FUNCTION_114	IF_4
0x400e9ee	            0x7459	                            je 0x400ea49	      9699	tc-i386.c	FUNCTION_114	IF_4
0x400e9f0	    0x4181fc650100	                         cmp r12d, 0x165	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400e9f7	     0xf84c3fdffff	                            je 0x400e7c0	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400e9fd	    0x4181fc7e0100	                         cmp r12d, 0x17e	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400ea04	     0xf84b6fdffff	                            je 0x400e7c0	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400ea0a	      0xba00000000	                              mov edx, 0	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400ea0f	      0xbeeb250000	                         mov esi, 0x25eb	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400ea14	      0xbf00000000	                              mov edi, 0	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400ea19	      0xe800000000	                          call 0x400ea1e	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400ea1e	            0x6690	                                     nop	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400ea20	      0xe800000000	                          call 0x400ea25	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400ea25	            0x85c0	                           test eax, eax	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400ea27	           0xf94c0	                                 sete al	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400ea2a	           0xfb6c0	                           movzx eax, al	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400ea2d	            0x85c0	                           test eax, eax	      9738	tc-i386.c	FUNCTION_115	IF_1
0x400ea2f	     0xf848bfdffff	                            je 0x400e7c0	      9738	tc-i386.c	FUNCTION_115	IF_1
0x400ea35	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      9842	tc-i386.c	FUNCTION_115
0x400ea38	        0x488d0440	                  lea rax, [rax + rax*2]	      9842	tc-i386.c	FUNCTION_115
0x400ea3c	     0xfb604c50000	                 movzx eax, byte [rax*8]	      9842	tc-i386.c	FUNCTION_115
0x400ea44	      0xe91efeffff	                           jmp 0x400e867	      9842	tc-i386.c	FUNCTION_115
0x400ea49	    0x448b25000000	           mov r12d, dword [0x0400ea50] 	      9712	tc-i386.c	FUNCTION_114
0x400ea50	            0x31c0	                            xor eax, eax	      9712	tc-i386.c	FUNCTION_114
0x400ea52	          0x4585e4	                         test r12d, r12d	      9712	tc-i386.c	FUNCTION_114
0x400ea55	           0xf94c0	                                 sete al	      9712	tc-i386.c	FUNCTION_114
0x400ea58	            0xebd3	                           jmp 0x400ea2d	      9712	tc-i386.c	FUNCTION_114
md_show_usage	IF,0:DO,0:ELSE,0:WHILE,0:CALL,31:functions,0:SWITCH,0:FOR,4	249
0x400ff30	              0x53	                                push rbx	     10956	tc-i386.c	FUNCTION_127
0x400ff31	      0xba05000000	                              mov edx, 5	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400ff36	          0x4889fb	                            mov rbx, rdi	     10956	tc-i386.c	FUNCTION_127
0x400ff39	      0xbe00000000	                              mov esi, 0	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400ff3e	            0x31ff	                            xor edi, edi	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400ff40	      0xe800000000	                          call 0x400ff45	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400ff45	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x400ff48	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x400ff4b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x400ff50	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x400ff52	      0xe800000000	                          call 0x400ff57	        97	stdio2.h	CALL_260
0x400ff57	            0x31ff	                            xor edi, edi	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff59	      0xba05000000	                              mov edx, 5	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff5e	      0xbe00000000	                              mov esi, 0	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff63	      0xe800000000	                          call 0x400ff68	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff68	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x400ff6b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x400ff6e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x400ff73	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x400ff75	      0xe800000000	                          call 0x400ff7a	        97	stdio2.h	CALL_260
0x400ff7a	            0x31ff	                            xor edi, edi	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff7c	      0xba05000000	                              mov edx, 5	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff81	      0xbe00000000	                              mov esi, 0	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff86	      0xe800000000	                          call 0x400ff8b	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff8b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x400ff8e	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x400ff91	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x400ff96	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x400ff98	      0xe800000000	                          call 0x400ff9d	        97	stdio2.h	CALL_260
0x400ff9d	            0x31ff	                            xor edi, edi	     10972	tc-i386.c	FUNCTION_127
0x400ff9f	      0xba05000000	                              mov edx, 5	     10972	tc-i386.c	FUNCTION_127
0x400ffa4	      0xbe00000000	                              mov esi, 0	     10972	tc-i386.c	FUNCTION_127
0x400ffa9	      0xe800000000	                          call 0x400ffae	     10972	tc-i386.c	FUNCTION_127
0x400ffae	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x400ffb1	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x400ffb4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x400ffb9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x400ffbb	      0xe800000000	                          call 0x400ffc0	        97	stdio2.h	CALL_260
0x400ffc0	            0x31ff	                            xor edi, edi	     10979	tc-i386.c	FUNCTION_127
0x400ffc2	      0xba05000000	                              mov edx, 5	     10979	tc-i386.c	FUNCTION_127
0x400ffc7	      0xbe00000000	                              mov esi, 0	     10979	tc-i386.c	FUNCTION_127
0x400ffcc	      0xe800000000	                          call 0x400ffd1	     10979	tc-i386.c	FUNCTION_127
0x400ffd1	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x400ffd4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x400ffd7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x400ffdc	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x400ffde	      0xe800000000	                          call 0x400ffe3	        97	stdio2.h	CALL_260
0x400ffe3	            0x31ff	                            xor edi, edi	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400ffe5	      0xba05000000	                              mov edx, 5	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400ffea	      0xbe00000000	                              mov esi, 0	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400ffef	      0xe800000000	                          call 0x400fff4	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400fff4	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x400fff7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x400fffa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x400ffff	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010001	      0xe800000000	                          call 0x4010006	        97	stdio2.h	CALL_260
0x4010006	            0x31f6	                            xor esi, esi	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x4010008	          0x4889df	                            mov rdi, rbx	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x401000b	      0xba01000000	                              mov edx, 1	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x4010010	      0xe8cb59ffff	                      call sym.show_arch	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x4010015	            0x31ff	                            xor edi, edi	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x4010017	      0xba05000000	                              mov edx, 5	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x401001c	      0xbe00000000	                              mov esi, 0	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x4010021	      0xe800000000	                          call 0x4010026	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x4010026	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x4010029	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x401002c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010031	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010033	      0xe800000000	                          call 0x4010038	        97	stdio2.h	CALL_260
0x4010038	            0x31d2	                            xor edx, edx	     10988	tc-i386.c	FUNCTION_127
0x401003a	          0x4889df	                            mov rdi, rbx	     10988	tc-i386.c	FUNCTION_127
0x401003d	      0xbe01000000	                              mov esi, 1	     10988	tc-i386.c	FUNCTION_127
0x4010042	      0xe89959ffff	                      call sym.show_arch	     10988	tc-i386.c	FUNCTION_127
0x4010047	            0x31ff	                            xor edi, edi	     10989	tc-i386.c	FUNCTION_127
0x4010049	      0xba05000000	                              mov edx, 5	     10989	tc-i386.c	FUNCTION_127
0x401004e	      0xbe00000000	                              mov esi, 0	     10989	tc-i386.c	FUNCTION_127
0x4010053	      0xe800000000	                          call 0x4010058	     10989	tc-i386.c	FUNCTION_127
0x4010058	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x401005b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x401005e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010063	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010065	      0xe800000000	                          call 0x401006a	        97	stdio2.h	CALL_260
0x401006a	            0x31d2	                            xor edx, edx	     10991	tc-i386.c	FUNCTION_127
0x401006c	            0x31f6	                            xor esi, esi	     10991	tc-i386.c	FUNCTION_127
0x401006e	          0x4889df	                            mov rdi, rbx	     10991	tc-i386.c	FUNCTION_127
0x4010071	      0xe86a59ffff	                      call sym.show_arch	     10991	tc-i386.c	FUNCTION_127
0x4010076	            0x31ff	                            xor edi, edi	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x4010078	      0xba05000000	                              mov edx, 5	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x401007d	      0xbe00000000	                              mov esi, 0	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x4010082	      0xe800000000	                          call 0x4010087	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x4010087	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x401008a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x401008d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010092	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010094	      0xe800000000	                          call 0x4010099	        97	stdio2.h	CALL_260
0x4010099	            0x31ff	                            xor edi, edi	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x401009b	      0xba05000000	                              mov edx, 5	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x40100a0	      0xbe00000000	                              mov esi, 0	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x40100a5	      0xe800000000	                          call 0x40100aa	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x40100aa	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40100ad	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40100b0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40100b5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40100b7	      0xe800000000	                          call 0x40100bc	        97	stdio2.h	CALL_260
0x40100bc	            0x31ff	                            xor edi, edi	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100be	      0xba05000000	                              mov edx, 5	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100c3	      0xbe00000000	                              mov esi, 0	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100c8	      0xe800000000	                          call 0x40100cd	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100cd	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40100d0	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40100d3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40100d8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40100da	      0xe800000000	                          call 0x40100df	        97	stdio2.h	CALL_260
0x40100df	            0x31ff	                            xor edi, edi	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100e1	      0xba05000000	                              mov edx, 5	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100e6	      0xbe00000000	                              mov esi, 0	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100eb	      0xe800000000	                          call 0x40100f0	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100f0	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40100f3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40100f6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40100fb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40100fd	      0xe800000000	                          call 0x4010102	        97	stdio2.h	CALL_260
0x4010102	            0x31ff	                            xor edi, edi	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4010104	      0xba05000000	                              mov edx, 5	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4010109	      0xbe00000000	                              mov esi, 0	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x401010e	      0xe800000000	                          call 0x4010113	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4010113	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x4010116	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x4010119	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x401011e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010120	      0xe800000000	                          call 0x4010125	        97	stdio2.h	CALL_260
0x4010125	            0x31ff	                            xor edi, edi	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x4010127	      0xba05000000	                              mov edx, 5	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x401012c	      0xbe00000000	                              mov esi, 0	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x4010131	      0xe800000000	                          call 0x4010136	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x4010136	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x4010139	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x401013c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010141	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010143	      0xe800000000	                          call 0x4010148	        97	stdio2.h	CALL_260
0x4010148	      0xba05000000	                              mov edx, 5	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x401014d	      0xbe00000000	                              mov esi, 0	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x4010152	            0x31ff	                            xor edi, edi	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x4010154	      0xe800000000	                          call 0x4010159	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x4010159	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x401015c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x401015f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010164	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010166	      0xe800000000	                          call 0x401016b	        97	stdio2.h	CALL_260
0x401016b	            0x31ff	                            xor edi, edi	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x401016d	      0xba05000000	                              mov edx, 5	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x4010172	      0xbe00000000	                              mov esi, 0	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x4010177	      0xe800000000	                          call 0x401017c	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x401017c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x401017f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x4010182	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010187	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010189	      0xe800000000	                          call 0x401018e	        97	stdio2.h	CALL_260
0x401018e	            0x31ff	                            xor edi, edi	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x4010190	      0xba05000000	                              mov edx, 5	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x4010195	      0xbe00000000	                              mov esi, 0	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x401019a	      0xe800000000	                          call 0x401019f	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x401019f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40101a2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40101a5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40101aa	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40101ac	      0xe800000000	                          call 0x40101b1	        97	stdio2.h	CALL_260
0x40101b1	            0x31ff	                            xor edi, edi	     11017	tc-i386.c	FUNCTION_127
0x40101b3	      0xba05000000	                              mov edx, 5	     11017	tc-i386.c	FUNCTION_127
0x40101b8	      0xbe00000000	                              mov esi, 0	     11017	tc-i386.c	FUNCTION_127
0x40101bd	      0xe800000000	                          call 0x40101c2	     11017	tc-i386.c	FUNCTION_127
0x40101c2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40101c5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40101c8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40101cd	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40101cf	      0xe800000000	                          call 0x40101d4	        97	stdio2.h	CALL_260
0x40101d4	            0x31ff	                            xor edi, edi	     11019	tc-i386.c	FUNCTION_127
0x40101d6	      0xba05000000	                              mov edx, 5	     11019	tc-i386.c	FUNCTION_127
0x40101db	      0xbe00000000	                              mov esi, 0	     11019	tc-i386.c	FUNCTION_127
0x40101e0	      0xe800000000	                          call 0x40101e5	     11019	tc-i386.c	FUNCTION_127
0x40101e5	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40101e8	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40101eb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40101f0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40101f2	      0xe800000000	                          call 0x40101f7	        97	stdio2.h	CALL_260
0x40101f7	            0x31ff	                            xor edi, edi	     11021	tc-i386.c	FUNCTION_127
0x40101f9	      0xba05000000	                              mov edx, 5	     11021	tc-i386.c	FUNCTION_127
0x40101fe	      0xbe00000000	                              mov esi, 0	     11021	tc-i386.c	FUNCTION_127
0x4010203	      0xe800000000	                          call 0x4010208	     11021	tc-i386.c	FUNCTION_127
0x4010208	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x401020b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x401020e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010213	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010215	      0xe800000000	                          call 0x401021a	        97	stdio2.h	CALL_260
0x401021a	            0x31ff	                            xor edi, edi	     11023	tc-i386.c	FUNCTION_127
0x401021c	      0xba05000000	                              mov edx, 5	     11023	tc-i386.c	FUNCTION_127
0x4010221	      0xbe00000000	                              mov esi, 0	     11023	tc-i386.c	FUNCTION_127
0x4010226	      0xe800000000	                          call 0x401022b	     11023	tc-i386.c	FUNCTION_127
0x401022b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x401022e	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x4010231	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010236	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x4010238	      0xe800000000	                          call 0x401023d	        97	stdio2.h	CALL_260
0x401023d	            0x31ff	                            xor edi, edi	     11029	tc-i386.c	
0x401023f	      0xba05000000	                              mov edx, 5	     11029	tc-i386.c	
0x4010244	      0xbe00000000	                              mov esi, 0	     11029	tc-i386.c	
0x4010249	      0xe800000000	                          call 0x401024e	     11029	tc-i386.c	
0x401024e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x4010251	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x4010254	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x4010259	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x401025b	      0xe800000000	                          call 0x4010260	        97	stdio2.h	CALL_260
0x4010260	      0xba05000000	                              mov edx, 5	     11032	tc-i386.c	
0x4010265	      0xbe00000000	                              mov esi, 0	     11032	tc-i386.c	
0x401026a	            0x31ff	                            xor edi, edi	     11032	tc-i386.c	
0x401026c	      0xe800000000	                          call 0x4010271	     11032	tc-i386.c	
0x4010271	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x4010274	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x4010277	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x401027c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x401027e	      0xe800000000	                          call 0x4010283	        97	stdio2.h	CALL_260
0x4010283	      0xba05000000	                              mov edx, 5	     11036	tc-i386.c	
0x4010288	      0xbe00000000	                              mov esi, 0	     11036	tc-i386.c	
0x401028d	            0x31ff	                            xor edi, edi	     11036	tc-i386.c	
0x401028f	      0xe800000000	                          call 0x4010294	     11036	tc-i386.c	
0x4010294	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x4010297	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x401029a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x401029f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40102a1	      0xe800000000	                          call 0x40102a6	        97	stdio2.h	CALL_260
0x40102a6	      0xba05000000	                              mov edx, 5	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40102ab	      0xbe00000000	                              mov esi, 0	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40102b0	            0x31ff	                            xor edi, edi	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40102b2	      0xe800000000	                          call 0x40102b7	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40102b7	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40102ba	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40102bd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40102c2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40102c4	      0xe800000000	                          call 0x40102c9	        97	stdio2.h	CALL_260
0x40102c9	      0xba05000000	                              mov edx, 5	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x40102ce	      0xbe00000000	                              mov esi, 0	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x40102d3	            0x31ff	                            xor edi, edi	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x40102d5	      0xe800000000	                          call 0x40102da	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x40102da	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_260
0x40102dd	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_260
0x40102e0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_260
0x40102e5	              0x5b	                                 pop rbx	     11043	tc-i386.c	FUNCTION_128	IF_1	ELSE_1
0x40102e6	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_260
0x40102e8	      0xe900000000	                           jmp 0x40102ed	        97	stdio2.h	CALL_260
x86_cons_fix_new	IF,1:DO,0:ELSE,0:WHILE,0:CALL,2:functions,0:SWITCH,0:FOR,0	26
0x400e5a0	            0x4155	                                push r13	      8111	tc-i386.c	FUNCTION_97
0x400e5a2	            0x4154	                                push r12	      8111	tc-i386.c	FUNCTION_97
0x400e5a4	          0x4989cd	                            mov r13, rcx	      8111	tc-i386.c	FUNCTION_97
0x400e5a7	              0x55	                                push rbp	      8111	tc-i386.c	FUNCTION_97
0x400e5a8	              0x53	                                push rbx	      8111	tc-i386.c	FUNCTION_97
0x400e5a9	            0x89d3	                            mov ebx, edx	      8111	tc-i386.c	FUNCTION_97
0x400e5ab	          0x4889fd	                            mov rbp, rdi	      8111	tc-i386.c	FUNCTION_97
0x400e5ae	          0x4189f4	                           mov r12d, esi	      8111	tc-i386.c	FUNCTION_97
0x400e5b1	          0x4489c1	                            mov ecx, r8d	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e5b4	        0x4883ec08	                              sub rsp, 8	      8111	tc-i386.c	FUNCTION_97
0x400e5b8	    0x8b1500000000	            mov edx, dword [0x0400e5be] 	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e5be	            0x89df	                            mov edi, ebx	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e5c0	            0x31f6	                            xor esi, esi	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e5c2	      0xe8a953ffff	                          call sym.reloc	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e5c7	        0x4883c408	                              add rsp, 8	      8123	tc-i386.c	FUNCTION_97
0x400e5cb	          0x4c89e9	                            mov rcx, r13	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e5ce	            0x89da	                            mov edx, ebx	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e5d0	          0x4489e6	                           mov esi, r12d	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e5d3	          0x4889ef	                            mov rdi, rbp	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e5d6	          0x4189c1	                            mov r9d, eax	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e5d9	              0x5b	                                 pop rbx	      8123	tc-i386.c	FUNCTION_97
0x400e5da	              0x5d	                                 pop rbp	      8123	tc-i386.c	FUNCTION_97
0x400e5db	            0x415c	                                 pop r12	      8123	tc-i386.c	FUNCTION_97
0x400e5dd	            0x415d	                                 pop r13	      8123	tc-i386.c	FUNCTION_97
0x400e5df	          0x4531c0	                            xor r8d, r8d	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e5e2	      0xe900000000	                           jmp 0x400e5e7	      8122	tc-i386.c	FUNCTION_97	CALL_2
s_bss	IF,1:DO,0:ELSE,0:WHILE,0:CALL,4:functions,0:SWITCH,0:FOR,0	8
0x4002f80	        0x4883ec08	                              sub rsp, 8	     11234	tc-i386.c	FUNCTION_133
0x4002f84	      0xe800000000	                          call 0x4002f89	     11239	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4002f89	      0xe800000000	                          call 0x4002f8e	     11241	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_4
0x4002f8e	    0x488b3d000000	            mov rdi, qword [0x04002f95] 	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4002f95	            0x89c6	                            mov esi, eax	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4002f97	      0xe800000000	                          call 0x4002f9c	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x4002f9c	        0x4883c408	                              add rsp, 8	     11244	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_5
0x4002fa0	      0xe900000000	                           jmp 0x4002fa5	     11243	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
tc_x86_frame_initial_instructions	IF,1:DO,0:ELSE,0:WHILE,0:CALL,4:functions,0:SWITCH,0:FOR,0	43
0x40110f0	              0x53	                                push rbx	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x40110f1	        0x4883ec30	                           sub rsp, 0x30	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x40110f5	    0x64488b042528	                mov rax, qword fs:[0x28]	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x40110fe	      0x4889442428	             mov qword [rsp + 0x28], rax	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x4011103	            0x31c0	                            xor eax, eax	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x4011105	    0x8b0500000000	            mov eax, dword [0x0401110b] 	     11545	tc-i386.c	
0x401110b	            0xd1e8	                              shr eax, 1	     11545	tc-i386.c	
0x401110d	    0x8b3c85000000	                  mov edi, dword [rax*4]	     11545	tc-i386.c	
0x4011114	            0x85ff	                           test edi, edi	     11545	tc-i386.c	
0x4011116	            0x754f	                           jne 0x4011167	     11545	tc-i386.c	
0x4011118	      0x488d448420	          lea rax, [rsp + rax*4 + 0x20] 	     11551	tc-i386.c	FUNCTION_137	IF_1
0x401111d	          0x4889e7	                            mov rdi, rsp	     11552	tc-i386.c	FUNCTION_137
0x4011120	    0x488b1d000000	            mov rbx, qword [0x04011127] 	     11547	tc-i386.c	
0x4011127	    0xc74424206573	       mov dword [rsp + 0x20], 0x707365 	     11548	tc-i386.c	FUNCTION_137
0x401112f	    0xc74424247273	       mov dword [rsp + 0x24], 0x707372 	     11548	tc-i386.c	FUNCTION_137
0x4011137	    0x488905000000	            mov qword [0x0401113e], rax 	     11551	tc-i386.c	FUNCTION_137	IF_1
0x401113e	      0xe800000000	                          call 0x4011143	     11552	tc-i386.c	FUNCTION_137
0x4011143	      0x807c241802	                cmp byte [rsp + 0x18], 2	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x4011148	            0x755a	                           jne 0x40111a4	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x401114a	    0x8b0500000000	            mov eax, dword [0x04011150] 	     11554	tc-i386.c	FUNCTION_137
0x4011150	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	     11554	tc-i386.c	FUNCTION_137
0x4011155	    0x48891d000000	            mov qword [0x0401115c], rbx 	     11555	tc-i386.c	
0x401115c	            0xd1e8	                              shr eax, 1	     11554	tc-i386.c	FUNCTION_137
0x401115e	            0x89d7	                            mov edi, edx	     11554	tc-i386.c	FUNCTION_137
0x4011160	    0x891485000000	                  mov dword [rax*4], edx	     11554	tc-i386.c	FUNCTION_137
0x4011167	    0x8b3500000000	            mov esi, dword [0x0401116d] 	     11558	tc-i386.c	FUNCTION_138
0x401116d	            0xf7de	                                 neg esi	     11558	tc-i386.c	FUNCTION_138
0x401116f	          0x4863f6	                         movsxd rsi, esi	     11558	tc-i386.c	FUNCTION_138
0x4011172	      0xe800000000	                          call 0x4011177	     11558	tc-i386.c	FUNCTION_138
0x4011177	    0x486335000000	         movsxd rsi, dword [0x0401117e] 	     11559	tc-i386.c	FUNCTION_138	IF_1
0x401117e	    0x8b3d00000000	            mov edi, dword [0x04011184] 	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4011184	      0xe800000000	                          call 0x4011189	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4011189	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401118e	    0x644833042528	                xor rax, qword fs:[0x28]	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4011197	            0x7506	                           jne 0x401119f	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4011199	        0x4883c430	                           add rsp, 0x30	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401119d	              0x5b	                                 pop rbx	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401119e	              0xc3	                                     ret	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401119f	      0xe800000000	                          call 0x40111a4	     11560	tc-i386.c	FUNCTION_138	IF_1
0x40111a4	      0xba00000000	                              mov edx, 0	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40111a9	      0xbe212d0000	                         mov esi, 0x2d21	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40111ae	      0xbf00000000	                              mov edi, 0	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40111b3	      0xe800000000	                          call 0x40111b8	     11553	tc-i386.c	FUNCTION_137	CALL_1
i386_intel_operand	IF,59:DO,0:ELSE,23:WHILE,0:CALL,60:functions,0:SWITCH,4:FOR,1	782
0x40086a0	            0x4157	                                push r15	       548	tc-i386-intel.c	FUNCTION_164
0x40086a2	            0x4156	                                push r14	       548	tc-i386-intel.c	FUNCTION_164
0x40086a4	            0x4155	                                push r13	       548	tc-i386-intel.c	FUNCTION_164
0x40086a6	            0x4154	                                push r12	       548	tc-i386-intel.c	FUNCTION_164
0x40086a8	              0x55	                                push rbp	       548	tc-i386-intel.c	FUNCTION_164
0x40086a9	              0x53	                                push rbx	       548	tc-i386-intel.c	FUNCTION_164
0x40086aa	          0x4889fb	                            mov rbx, rdi	       548	tc-i386-intel.c	FUNCTION_164
0x40086ad	        0x4883ec48	                           sub rsp, 0x48	       548	tc-i386-intel.c	FUNCTION_164
0x40086b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       548	tc-i386-intel.c	FUNCTION_164
0x40086ba	      0x4889442438	             mov qword [rsp + 0x38], rax	       548	tc-i386-intel.c	FUNCTION_164
0x40086bf	            0x31c0	                            xor eax, eax	       548	tc-i386-intel.c	FUNCTION_164
0x40086c1	          0x803f7b	                    cmp byte [rdi], 0x7b	      9241	tc-i386.c	FUNCTION_110	IF_1
0x40086c4	        0x89742404	                mov dword [rsp + 4], esi	       548	tc-i386-intel.c	FUNCTION_164
0x40086c8	     0xf84f2020000	                            je 0x40089c0	      9241	tc-i386.c	FUNCTION_110	IF_1
0x40086ce	    0x448b1d000000	           mov r11d, dword [0x040086d5] 	       568	tc-i386-intel.c	FUNCTION_164	CALL_3
0x40086d5	    0xc70500000000	               mov dword [0x040086df], 1	       560	tc-i386-intel.c	FUNCTION_164
0x40086df	    0xc70500000000	               mov dword [0x040086e9], 0	       561	tc-i386-intel.c	FUNCTION_164
0x40086e9	    0xc70500000000	               mov dword [0x040086f3], 0	       562	tc-i386-intel.c	FUNCTION_164
0x40086f3	    0xc70500000000	               mov dword [0x040086fd], 0	       563	tc-i386-intel.c	FUNCTION_164
0x40086fd	    0x48c705000000	               mov qword [0x04008708], 0	       564	tc-i386-intel.c	FUNCTION_164
0x4008708	          0x4585db	                         test r11d, r11d	       568	tc-i386-intel.c	FUNCTION_164	CALL_3
0x400870b	    0x48c705000000	               mov qword [0x04008716], 0	       565	tc-i386-intel.c	FUNCTION_164
0x4008716	    0x48c705000000	               mov qword [0x04008721], 0	       566	tc-i386-intel.c	FUNCTION_164
0x4008721	    0xc70500000000	     mov dword [0x0400872b], 0xffffffff 	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x400872b	    0xc70500000000	     mov dword [0x04008735], 0xffffffff 	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4008735	     0xf85370c0000	                           jne 0x4009372	       568	tc-i386-intel.c	FUNCTION_164	CALL_3
0x400873b	    0x448b15000000	           mov r10d, dword [0x04008742] 	       569	tc-i386-intel.c	FUNCTION_164	CALL_4
0x4008742	          0x4585d2	                         test r10d, r10d	       569	tc-i386-intel.c	FUNCTION_164	CALL_4
0x4008745	     0xf85130c0000	                           jne 0x400935e	       569	tc-i386-intel.c	FUNCTION_164	CALL_4
0x400874b	    0x448b0d000000	            mov r9d, dword [0x04008752] 	       570	tc-i386-intel.c	FUNCTION_164	CALL_5
0x4008752	          0x4585c9	                           test r9d, r9d	       570	tc-i386-intel.c	FUNCTION_164	CALL_5
0x4008755	     0xf85ef0b0000	                           jne 0x400934a	       570	tc-i386-intel.c	FUNCTION_164	CALL_5
0x400875b	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	        90	string3.h	FUNCTION_147	CALL_6
0x4008760	          0x4889df	                            mov rdi, rbx	       573	tc-i386-intel.c	FUNCTION_164	CALL_6
0x4008763	    0x4c8b25000000	            mov r12, qword [0x0400876a] 	       572	tc-i386-intel.c	FUNCTION_164
0x400876a	      0xe800000000	                          call 0x400876f	       573	tc-i386-intel.c	FUNCTION_164	CALL_6
0x400876f	      0xba01000000	                              mov edx, 1	       577	tc-i386-intel.c	FUNCTION_164	CALL_8
0x4008774	            0x31ff	                            xor edi, edi	       577	tc-i386-intel.c	FUNCTION_164	CALL_8
0x4008776	          0x4889ee	                            mov rsi, rbp	       577	tc-i386-intel.c	FUNCTION_164	CALL_8
0x4008779	          0x4989c5	                            mov r13, rax	       573	tc-i386-intel.c	FUNCTION_164	CALL_6
0x400877c	    0x488905000000	            mov qword [0x04008783], rax 	       573	tc-i386-intel.c	FUNCTION_164	CALL_6
0x4008783	    0xc70500000000	     mov dword [0x0400878d], 0xffffffff 	       575	tc-i386-intel.c	FUNCTION_164
0x400878d	    0x48c744241000	               mov qword [rsp + 0x10], 0	        90	string3.h	FUNCTION_147	CALL_6
0x4008796	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_147	CALL_6
0x400879f	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_147	CALL_6
0x40087a8	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_147	CALL_6
0x40087b1	      0xe800000000	                          call 0x40087b6	       577	tc-i386-intel.c	FUNCTION_164	CALL_8
0x40087b6	          0x4889ef	                            mov rdi, rbp	       578	tc-i386-intel.c	FUNCTION_164	CALL_9
0x40087b9	      0x4889442408	                mov qword [rsp + 8], rax	       577	tc-i386-intel.c	FUNCTION_164	CALL_8
0x40087be	      0xe80df5ffff	            call sym.i386_intel_simplify	       578	tc-i386-intel.c	FUNCTION_164	CALL_9
0x40087c3	    0x4c8b3d000000	            mov r15, qword [0x040087ca] 	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x40087ca	          0x4189c6	                           mov r14d, eax	       578	tc-i386-intel.c	FUNCTION_164	CALL_9
0x40087cd	    0xc70500000000	               mov dword [0x040087d7], 1	       579	tc-i386-intel.c	FUNCTION_164
0x40087d7	        0x410fb617	                   movzx edx, byte [r15]	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x40087db	          0x80fa20	                            cmp dl, 0x20	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x40087de	     0xf848c010000	                            je 0x4008970	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x40087e4	          0x80fa7b	                            cmp dl, 0x7b	       584	tc-i386-intel.c	FUNCTION_164	IF_2
0x40087e7	     0xf8493020000	                            je 0x4008a80	       584	tc-i386-intel.c	FUNCTION_164	IF_2
0x40087ed	    0x80ba00000000	                       cmp byte [rdx], 0	       593	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4
0x40087f4	     0xf8596000000	                           jne 0x4008890	       593	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4
0x40087fa	          0x4585f6	                         test r14d, r14d	       595	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	IF_5
0x40087fd	     0xf8555020000	                           jne 0x4008a58	       595	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	IF_5
0x4008803	          0x4531f6	                          xor r14d, r14d	       597	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4
0x4008806	          0x4c89ef	                            mov rdi, r13	       614	tc-i386-intel.c	FUNCTION_164	CALL_16
0x4008809	    0x4c8925000000	            mov qword [0x04008810], r12 	       613	tc-i386-intel.c	FUNCTION_164
0x4008810	      0xe800000000	                          call 0x4008815	       614	tc-i386-intel.c	FUNCTION_164	CALL_16
0x4008815	    0x8b3d00000000	            mov edi, dword [0x0400881b] 	       616	tc-i386-intel.c	FUNCTION_164	CALL_17
0x400881b	            0x85ff	                           test edi, edi	       616	tc-i386-intel.c	FUNCTION_164	CALL_17
0x400881d	     0xf85ff0a0000	                           jne 0x4009322	       616	tc-i386-intel.c	FUNCTION_164	CALL_17
0x4008823	    0x8b3500000000	            mov esi, dword [0x04008829] 	       617	tc-i386-intel.c	FUNCTION_164	CALL_18
0x4008829	            0x85f6	                           test esi, esi	       617	tc-i386-intel.c	FUNCTION_164	CALL_18
0x400882b	     0xf85050b0000	                           jne 0x4009336	       617	tc-i386-intel.c	FUNCTION_164	CALL_18
0x4008831	    0x8b0d00000000	            mov ecx, dword [0x04008837] 	       618	tc-i386-intel.c	FUNCTION_164	CALL_19
0x4008837	            0x85c9	                           test ecx, ecx	       618	tc-i386-intel.c	FUNCTION_164	CALL_19
0x4008839	     0xf85cf0a0000	                           jne 0x400930e	       618	tc-i386-intel.c	FUNCTION_164	CALL_19
0x400883f	          0x4585f6	                         test r14d, r14d	       620	tc-i386-intel.c	FUNCTION_164	IF_9
0x4008842	     0xf84fa000000	                            je 0x4008942	       620	tc-i386-intel.c	FUNCTION_164	IF_9
0x4008848	    0x448b25000000	           mov r12d, dword [0x0400884f] 	       623	tc-i386-intel.c	FUNCTION_164	IF_10
0x400884f	        0x4183fc01	                             cmp r12d, 1	       623	tc-i386-intel.c	FUNCTION_164	IF_10
0x4008853	     0xf84e7010000	                            je 0x4008a40	       623	tc-i386-intel.c	FUNCTION_164	IF_10
0x4008859	    0x488b0d000000	            mov rcx, qword [0x04008860] 	       624	tc-i386-intel.c	FUNCTION_164	IF_10
0x4008860	          0x488b01	                    mov rax, qword [rcx]	       624	tc-i386-intel.c	FUNCTION_164	IF_10
0x4008863	    0x81780c8d0000	            cmp dword [rax + 0xc], 0x8d 	       624	tc-i386-intel.c	FUNCTION_164	IF_10
0x400886a	            0x746c	                            je 0x40088d8	       624	tc-i386-intel.c	FUNCTION_164	IF_10
0x400886c	    0x486315000000	         movsxd rdx, dword [0x04008873] 	       626	tc-i386-intel.c	FUNCTION_164	IF_10
0x4008873	      0x418d4424d0	                   lea eax, [r12 - 0x30]	       628	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008878	    0x8024d5000000	                  and byte [rdx*8], 0xbf	       626	tc-i386-intel.c	FUNCTION_164	IF_10
0x4008880	          0x83f80b	                            cmp eax, 0xb	       628	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008883	     0xf87d7060000	                            ja 0x4008f60	       628	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008889	    0xff24c5000000	                       jmp qword [rax*8]	       628	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008890	      0x807c242801	                cmp byte [rsp + 0x28], 1	       599	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6
0x4008895	     0xf860d020000	                           jbe 0x4008aa8	       599	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6
0x400889b	    0x448b05000000	            mov r8d, dword [0x040088a2] 	       606	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088a2	          0x4585c0	                           test r8d, r8d	       606	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088a5	     0xf855bffffff	                           jne 0x4008806	       606	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088ab	          0x4d39fd	                            cmp r13, r15	       606	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088ae	     0xf8352ffffff	                           jae 0x4008806	       606	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088b4	      0x41807fff5d	                cmp byte [r15 - 1], 0x5d	       607	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088b9	     0xf8547ffffff	                           jne 0x4008806	       607	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088bf	    0x830d00000000	                or dword [0x040088c6], 1	       609	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088c6	    0xc70500000000	               mov dword [0x040088d0], 1	       610	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088d0	      0xe931ffffff	                           jmp 0x4008806	       610	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088d5	           0xf1f00	                         nop dword [rax]	       610	tc-i386-intel.c	FUNCTION_164	ELSE_3	IF_8
0x40088d8	          0x4531e4	                          xor r12d, r12d	       552	tc-i386-intel.c	FUNCTION_164
0x40088db	    0x66f740286001	          test word [rax + 0x28], 0x160 	       737	tc-i386-intel.c	FUNCTION_164	IF_24
0x40088e1	     0xf84a9000000	                            je 0x4008990	       737	tc-i386-intel.c	FUNCTION_164	IF_24
0x40088e7	    0x486305000000	         movsxd rax, dword [0x040088ee] 	       741	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x40088ee	    0x488b0d000000	            mov rcx, qword [0x040088f5] 	       741	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x40088f5	    0x488b14c50000	                  mov rdx, qword [rax*8]	       741	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x40088fd	          0x4885d2	                           test rdx, rdx	       741	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008900	     0xf844a040000	                            je 0x4008d50	       741	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008906	    0x800cc5000000	                      or byte [rax*8], 2	       745	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x400890e	    0x830d00000000	                or dword [0x04008915], 1	       808	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x4008915	          0x4885d2	                           test rdx, rdx	       813	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008918	     0xf84a2030000	                            je 0x4008cc0	       813	tc-i386-intel.c	FUNCTION_164	IF_37
0x400891e	          0x4885c9	                           test rcx, rcx	       818	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38
0x4008921	     0xf84b9000000	                            je 0x40089e0	       818	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38
0x4008927	      0xba05000000	                              mov edx, 5	       820	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38	CALL_35
0x400892c	      0xbe00000000	                              mov esi, 0	       820	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38	CALL_35
0x4008931	            0x31ff	                            xor edi, edi	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x4008933	      0xe800000000	                          call 0x4008938	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x4008938	          0x4889c7	                            mov rdi, rax	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x400893b	            0x31c0	                            xor eax, eax	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x400893d	      0xe800000000	                          call 0x4008942	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x4008942	          0x4531e4	                          xor r12d, r12d	       732	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23
0x4008945	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1036	tc-i386-intel.c	FUNCTION_164
0x400894a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1036	tc-i386-intel.c	FUNCTION_164
0x4008953	          0x4489e0	                           mov eax, r12d	      1036	tc-i386-intel.c	FUNCTION_164
0x4008956	     0xf85ad090000	                           jne 0x4009309	      1036	tc-i386-intel.c	FUNCTION_164
0x400895c	        0x4883c448	                           add rsp, 0x48	      1036	tc-i386-intel.c	FUNCTION_164
0x4008960	              0x5b	                                 pop rbx	      1036	tc-i386-intel.c	FUNCTION_164
0x4008961	              0x5d	                                 pop rbp	      1036	tc-i386-intel.c	FUNCTION_164
0x4008962	            0x415c	                                 pop r12	      1036	tc-i386-intel.c	FUNCTION_164
0x4008964	            0x415d	                                 pop r13	      1036	tc-i386-intel.c	FUNCTION_164
0x4008966	            0x415e	                                 pop r14	      1036	tc-i386-intel.c	FUNCTION_164
0x4008968	            0x415f	                                 pop r15	      1036	tc-i386-intel.c	FUNCTION_164
0x400896a	              0xc3	                                     ret	      1036	tc-i386-intel.c	FUNCTION_164
0x400896b	       0xf1f440000	                   nop dword [rax + rax]	      1036	tc-i386-intel.c	FUNCTION_164
0x4008970	        0x498d4701	                      lea rax, [r15 + 1]	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x4008974	    0x488905000000	            mov qword [0x0400897b], rax 	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x400897b	      0x410fb65701	               movzx edx, byte [r15 + 1]	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x4008980	          0x4989c7	                            mov r15, rax	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x4008983	      0xe95cfeffff	                           jmp 0x40087e4	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x4008988	     0xf1f84000000	                   nop dword [rax + rax]	       581	tc-i386-intel.c	FUNCTION_164	CALL_10
0x4008990	    0x48833d000000	               cmp qword [0x04008998], 0	       810	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x4008998	            0x7407	                            je 0x40089a1	       810	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x400899a	    0x830d00000000	                or dword [0x040089a1], 1	       811	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x40089a1	    0x486305000000	         movsxd rax, dword [0x040089a8] 	       811	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x40089a8	    0x488b0d000000	            mov rcx, qword [0x040089af] 	       811	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x40089af	    0x488b14c50000	                  mov rdx, qword [rax*8]	       811	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x40089b7	      0xe959ffffff	                           jmp 0x4008915	       811	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x40089bc	         0xf1f4000	                         nop dword [rax]	       811	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x40089c0	      0xe87bbdffff	       call sym.RC_SAE_immediate.part.14	       811	tc-i386-intel.c	FUNCTION_164	ELSE_18	IF_36
0x40089c5	            0x85c0	                           test eax, eax	       556	tc-i386-intel.c	FUNCTION_164	IF_1	CALL_1
0x40089c7	     0xf8401fdffff	                            je 0x40086ce	       556	tc-i386-intel.c	FUNCTION_164	IF_1	CALL_1
0x40089cd	    0x41bc01000000	                             mov r12d, 1	       557	tc-i386-intel.c	FUNCTION_164	IF_1
0x40089d3	      0xe96dffffff	                           jmp 0x4008945	       557	tc-i386-intel.c	FUNCTION_164	IF_1
0x40089d8	     0xf1f84000000	                   nop dword [rax + rax]	       557	tc-i386-intel.c	FUNCTION_164	IF_1
0x40089e0	    0x48833d000000	               cmp qword [0x040089e8], 0	       818	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38
0x40089e8	     0xf8539ffffff	                           jne 0x4008927	       818	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38
0x40089ee	    0x48833d000000	               cmp qword [0x040089f6], 0	       818	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38
0x40089f6	     0xf852bffffff	                           jne 0x4008927	       818	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38
0x40089fc	        0x4883c00e	                            add rax, 0xe	       818	tc-i386-intel.c	FUNCTION_164	IF_37	IF_38
0x4008a00	        0x488b7208	                mov rsi, qword [rdx + 8]	       824	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a04	          0x8b520c	              mov edx, dword [rdx + 0xc]	       824	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a07	    0x488d0cc50000	                        lea rcx, [rax*8]	       824	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a0f	    0x41bc01000000	                             mov r12d, 1	      1035	tc-i386-intel.c	FUNCTION_164
0x4008a15	        0x448b410c	              mov r8d, dword [rcx + 0xc]	      1035	tc-i386-intel.c	FUNCTION_164
0x4008a19	    0x4881e6ffffbf	             and rsi, 0xffffffffffbfffff	      1035	tc-i386-intel.c	FUNCTION_164
0x4008a20	           0x97108	                 or dword [rcx + 8], esi	       826	tc-i386-intel.c	FUNCTION_164	IF_37	CALL_36
0x4008a23	          0x4409c2	                             or edx, r8d	       826	tc-i386-intel.c	FUNCTION_164	IF_37	CALL_36
0x4008a26	          0x89510c	              mov dword [rcx + 0xc], edx	       826	tc-i386-intel.c	FUNCTION_164	IF_37	CALL_36
0x4008a29	    0x8024c5000000	                  and byte [rax*8], 0xbf	       828	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a31	    0x830500000000	               add dword [0x04008a38], 1	       829	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a38	      0xe908ffffff	                           jmp 0x4008945	       829	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a3d	           0xf1f00	                         nop dword [rax]	       829	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a40	    0x488b05000000	            mov rax, qword [0x04008a47] 	       829	tc-i386-intel.c	FUNCTION_164	IF_37
0x4008a47	          0x4531e4	                          xor r12d, r12d	       552	tc-i386-intel.c	FUNCTION_164
0x4008a4a	          0x488b00	                    mov rax, qword [rax]	       552	tc-i386-intel.c	FUNCTION_164
0x4008a4d	      0xe989feffff	                           jmp 0x40088db	       552	tc-i386-intel.c	FUNCTION_164
0x4008a52	    0x660f1f440000	                    nop word [rax + rax]	       552	tc-i386-intel.c	FUNCTION_164
0x4008a58	            0x31ff	                            xor edi, edi	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a5a	      0xba05000000	                              mov edx, 5	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a5f	      0xbe00000000	                              mov esi, 0	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a64	      0xe800000000	                          call 0x4008a69	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a69	          0x4c89fe	                            mov rsi, r15	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a6c	          0x4889c7	                            mov rdi, rax	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a6f	            0x31c0	                            xor eax, eax	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a71	      0xe800000000	                          call 0x4008a76	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a76	      0xe988fdffff	                           jmp 0x4008803	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a7b	       0xf1f440000	                   nop dword [rax + rax]	       596	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4	CALL_13
0x4008a80	            0x31f6	                            xor esi, esi	       586	tc-i386-intel.c	FUNCTION_164	IF_2	CALL_11
0x4008a82	          0x4c89ff	                            mov rdi, r15	       586	tc-i386-intel.c	FUNCTION_164	IF_2	CALL_11
0x4008a85	      0xe826a9ffff	            call sym.check_VecOperations	       586	tc-i386-intel.c	FUNCTION_164	IF_2	CALL_11
0x4008a8a	          0x4885c0	                           test rax, rax	       587	tc-i386-intel.c	FUNCTION_164	IF_2	IF_3
0x4008a8d	     0xf84fd040000	                            je 0x4008f90	       587	tc-i386-intel.c	FUNCTION_164	IF_2	IF_3
0x4008a93	    0x488905000000	            mov qword [0x04008a9a], rax 	       588	tc-i386-intel.c	FUNCTION_164	IF_2	IF_3
0x4008a9a	          0x4989c7	                            mov r15, rax	       588	tc-i386-intel.c	FUNCTION_164	IF_2	IF_3
0x4008a9d	           0xfb610	                   movzx edx, byte [rax]	       588	tc-i386-intel.c	FUNCTION_164	IF_2	IF_3
0x4008aa0	      0xe948fdffff	                           jmp 0x40087ed	       588	tc-i386-intel.c	FUNCTION_164	IF_2	IF_3
0x4008aa5	           0xf1f00	                         nop dword [rax]	       588	tc-i386-intel.c	FUNCTION_164	IF_2	IF_3
0x4008aa8	          0x4585f6	                         test r14d, r14d	       601	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	IF_7
0x4008aab	     0xf8452fdffff	                            je 0x4008803	       601	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	IF_7
0x4008ab1	      0xba05000000	                              mov edx, 5	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008ab6	      0xbe00000000	                              mov esi, 0	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008abb	            0x31ff	                            xor edi, edi	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008abd	      0xe800000000	                          call 0x4008ac2	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008ac2	          0x4889c7	                            mov rdi, rax	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008ac5	            0x31c0	                            xor eax, eax	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008ac7	          0x4531f6	                          xor r14d, r14d	       603	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6
0x4008aca	      0xe800000000	                          call 0x4008acf	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008acf	      0xe932fdffff	                           jmp 0x4008806	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008ad4	         0xf1f4000	                         nop dword [rax]	       602	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6	CALL_15
0x4008ad8	    0x41bc01000000	                             mov r12d, 1	       712	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008ade	          0x488b01	                    mov rax, qword [rcx]	       716	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008ae1	        0xf6402860	           test byte [rax + 0x28], 0x60 	       715	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008ae5	            0x7519	                           jne 0x4008b00	       715	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008ae7	        0x8b442404	                mov eax, dword [rsp + 4]	       717	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008aeb	            0x85c0	                           test eax, eax	       717	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008aed	     0xf8598010000	                           jne 0x4008c8b	       717	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008af3	    0x41bc01000000	                             mov r12d, 1	       717	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008af9	     0xf1f80000000	                         nop dword [rax]	       717	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_21
0x4008b00	     0xfb605000000	           movzx eax, byte [0x04008b07] 	       727	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b07	            0x84c0	                             test al, al	       727	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b09	     0xf8591010000	                           jne 0x4008ca0	       727	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b0f	    0x488b05000000	            mov rax, qword [0x04008b16] 	       727	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b16	    0x448825000000	            mov byte [0x04008b1d], r12b 	       728	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b1d	          0x488b00	                    mov rax, qword [rax]	       728	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b20	      0xe9b6fdffff	                           jmp 0x40088db	       728	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b25	           0xf1f00	                         nop dword [rax]	       728	tc-i386-intel.c	FUNCTION_164	IF_10	IF_22
0x4008b28	    0x800cd5000000	                   or byte [rdx*8], 0x20	       631	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008b30	    0x41bc62000000	                          mov r12d, 0x62	       632	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008b36	            0xebc8	                           jmp 0x4008b00	       633	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008b38	     0xf1f84000000	                   nop dword [rax + rax]	       633	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008b40	    0x800cd5000000	                   or byte [rdx*8], 0x40	       636	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008b48	          0x488b01	                    mov rax, qword [rcx]	       637	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x4008b4b	          0x488b10	                    mov rdx, qword [rax]	       637	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x4008b4e	          0x803a6c	                    cmp byte [rdx], 0x6c	       637	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x4008b51	     0xf847c060000	                            je 0x40091d3	       637	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x4008b57	        0x83780c62	            cmp dword [rax + 0xc], 0x62 	       640	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x4008b5b	     0xf842a010000	                            je 0x4008c8b	       640	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x4008b61	      0x837c240402	                  cmp dword [rsp + 4], 2	       642	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_4	IF_12
0x4008b66	     0xf845c060000	                            je 0x40091c8	       642	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_4	IF_12
0x4008b6c	    0x41bc77000000	                          mov r12d, 0x77	       645	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_5
0x4008b72	            0xeb8c	                           jmp 0x4008b00	       645	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_5
0x4008b74	         0xf1f4000	                         nop dword [rax]	       645	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_5
0x4008b78	    0x800cd5000000	                   or byte [rdx*8], 0x80	       649	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008b80	          0x488b01	                    mov rax, qword [rcx]	       650	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4008b83	          0x488b10	                    mov rdx, qword [rax]	       650	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4008b86	          0x803a6c	                    cmp byte [rdx], 0x6c	       650	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4008b89	     0xf8476060000	                            je 0x4009205	       650	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4008b8f	        0x83780c62	            cmp dword [rax + 0xc], 0x62 	       653	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4008b93	            0x74d7	                            je 0x4008b6c	       653	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4008b95	    0x833d00000000	               cmp dword [0x04008b9c], 1	       655	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_6	IF_14
0x4008b9c	     0xf84b1060000	                            je 0x4009253	       655	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_6	IF_14
0x4008ba2	      0x837c240401	                  cmp dword [rsp + 4], 1	       659	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_7	IF_15
0x4008ba7	     0xf841b060000	                            je 0x40091c8	       659	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_7	IF_15
0x4008bad	    0x41bc6c000000	                          mov r12d, 0x6c	       670	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4008bb3	      0xe948ffffff	                           jmp 0x4008b00	       670	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4008bb8	     0xf1f84000000	                   nop dword [rax + rax]	       670	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4008bc0	    0x800cd5000000	                      or byte [rdx*8], 2	       682	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008bc8	          0x488b01	                    mov rax, qword [rcx]	       683	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_19
0x4008bcb	        0x83780c62	            cmp dword [rax + 0xc], 0x62 	       684	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_19
0x4008bcf	            0x74dc	                            je 0x4008bad	       684	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_19
0x4008bd1	      0x837c240401	                  cmp dword [rsp + 4], 1	       684	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_19
0x4008bd6	            0x74d5	                            je 0x4008bad	       684	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_19
0x4008bd8	    0x41bc71000000	                          mov r12d, 0x71	       687	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_11
0x4008bde	      0xe91dffffff	                           jmp 0x4008b00	       687	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_11
0x4008be3	       0xf1f440000	                   nop dword [rax + rax]	       687	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_11
0x4008be8	    0x800cd5000000	                      or byte [rdx*8], 8	       700	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008bf0	          0x4531e4	                          xor r12d, r12d	       552	tc-i386-intel.c	FUNCTION_164
0x4008bf3	      0xe908ffffff	                           jmp 0x4008b00	       701	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008bf8	     0xf1f84000000	                   nop dword [rax + rax]	       701	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008c00	    0x800cd5000000	                   or byte [rdx*8], 0x10	       704	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008c08	          0x4531e4	                          xor r12d, r12d	       552	tc-i386-intel.c	FUNCTION_164
0x4008c0b	      0xe9f0feffff	                           jmp 0x4008b00	       705	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008c10	    0x800cd5000000	                   or byte [rdx*8], 0x20	       708	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008c18	          0x4531e4	                          xor r12d, r12d	       552	tc-i386-intel.c	FUNCTION_164
0x4008c1b	      0xe9e0feffff	                           jmp 0x4008b00	       709	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008c20	          0x4531e4	                          xor r12d, r12d	       552	tc-i386-intel.c	FUNCTION_164
0x4008c23	      0xe9b6feffff	                           jmp 0x4008ade	       552	tc-i386-intel.c	FUNCTION_164
0x4008c28	     0xf1f84000000	                   nop dword [rax + rax]	       552	tc-i386-intel.c	FUNCTION_164
0x4008c30	    0x800cd5000000	                      or byte [rdx*8], 1	       666	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008c38	          0x488b01	                    mov rax, qword [rcx]	       667	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4008c3b	          0x488b00	                    mov rax, qword [rax]	       667	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4008c3e	          0x80386c	                    cmp byte [rax], 0x6c	       667	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4008c41	     0xf84a5050000	                            je 0x40091ec	       667	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4008c47	        0x8b542404	                mov edx, dword [rsp + 4]	       671	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17
0x4008c4b	            0x85d2	                           test edx, edx	       671	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17
0x4008c4d	            0x753c	                           jne 0x4008c8b	       671	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17
0x4008c4f	    0x833d00000000	               cmp dword [0x04008c56], 1	       673	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17	IF_18
0x4008c56	     0xf8597feffff	                           jne 0x4008af3	       673	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17	IF_18
0x4008c5c	      0xbf66000000	                           mov edi, 0x66	       674	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x4008c61	    0x41bc01000000	                             mov r12d, 1	       675	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17
0x4008c67	      0xe8747fffff	                     call sym.add_prefix	       674	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x4008c6c	      0xe98ffeffff	                           jmp 0x4008b00	       674	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x4008c71	     0xf1f80000000	                         nop dword [rax]	       674	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x4008c78	    0x800cd5000000	                      or byte [rdx*8], 4	       691	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1
0x4008c80	      0x837c240401	                  cmp dword [rsp + 4], 1	       692	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_20
0x4008c85	     0xf8468feffff	                            je 0x4008af3	       692	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_20
0x4008c8b	    0x41bc62000000	                          mov r12d, 0x62	       695	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_12
0x4008c91	      0xe96afeffff	                           jmp 0x4008b00	       695	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_12
0x4008c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       695	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_12
0x4008ca0	          0x4138c4	                            cmp r12b, al	       729	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23
0x4008ca3	     0xf8597000000	                           jne 0x4008d40	       729	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23
0x4008ca9	    0x488b05000000	            mov rax, qword [0x04008cb0] 	       729	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23
0x4008cb0	          0x488b00	                    mov rax, qword [rax]	       729	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23
0x4008cb3	      0xe923fcffff	                           jmp 0x40088db	       729	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23
0x4008cb8	     0xf1f84000000	                   nop dword [rax + rax]	       729	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23
0x4008cc0	          0x4885c9	                           test rcx, rcx	       831	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008cc3	     0xf84f2020000	                            je 0x4008fbb	       831	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008cc9	    0x8b1500000000	            mov edx, dword [0x04008ccf] 	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x4008ccf	          0x83fa01	                              cmp edx, 1	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x4008cd2	     0xf84c1030000	                            je 0x4009099	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x4008cd8	    0x488b05000000	            mov rax, qword [0x04008cdf] 	       840	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008cdf	          0x488b08	                    mov rcx, qword [rax]	       840	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008ce2	         0xfb6412b	           movzx eax, byte [rcx + 0x2b] 	       840	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008ce6	          0x83e001	                              and eax, 1	       840	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008ce9	            0x3c01	                               cmp al, 1	       840	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008ceb	            0x19c0	                            sbb eax, eax	       840	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008ced	          0x83c002	                              add eax, 2	       840	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008cf0	            0x39d0	                            cmp eax, edx	       839	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008cf2	     0xf8f88000000	                            jg 0x4008d80	       839	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008cf8	    0x66f741286001	          test word [rcx + 0x28], 0x160 	       850	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4008cfe	            0x7411	                            je 0x4008d11	       850	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4008d00	    0x448b25000000	           mov r12d, dword [0x04008d07] 	       853	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4008d07	        0x4183fc01	                             cmp r12d, 1	       853	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4008d0b	     0xf840f030000	                            je 0x4009020	       853	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4008d11	          0x488b19	                    mov rbx, qword [rcx]	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d14	      0xba05000000	                              mov edx, 5	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d19	      0xbe00000000	                              mov esi, 0	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d1e	            0x31ff	                            xor edi, edi	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d20	          0x4531e4	                          xor r12d, r12d	       889	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008d23	      0xe800000000	                          call 0x4008d28	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d28	          0x4889de	                            mov rsi, rbx	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d2b	          0x4889c7	                            mov rdi, rax	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d2e	            0x31c0	                            xor eax, eax	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d30	      0xe800000000	                          call 0x4008d35	       887	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	CALL_41
0x4008d35	      0xe90bfcffff	                           jmp 0x4008945	       889	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008d3a	    0x660f1f440000	                    nop word [rax + rax]	       889	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41
0x4008d40	      0xba05000000	                              mov edx, 5	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x4008d45	      0xbe00000000	                              mov esi, 0	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x4008d4a	      0xe9e2fbffff	                           jmp 0x4008931	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x4008d4f	              0x90	                                     nop	       731	tc-i386-intel.c	FUNCTION_164	IF_10	ELSE_13	IF_23	CALL_23
0x4008d50	          0x4885c9	                           test rcx, rcx	       742	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d53	     0xf85adfbffff	                           jne 0x4008906	       742	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d59	    0x48833d000000	               cmp qword [0x04008d61], 0	       743	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d61	     0xf859ffbffff	                           jne 0x4008906	       743	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d67	    0x833d00000000	               cmp dword [0x04008d6e], 1	       744	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d6e	     0xf8e12060000	                           jle 0x4009386	       744	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d74	          0x4889d1	                            mov rcx, rdx	       744	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d77	      0xe98afbffff	                           jmp 0x4008906	       744	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d7c	         0xf1f4000	                         nop dword [rax]	       744	tc-i386-intel.c	FUNCTION_164	IF_24	IF_25
0x4008d80	    0x488b05000000	            mov rax, qword [0x04008d87] 	       895	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008d87	          0x4885c0	                           test rax, rax	       895	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008d8a	     0xf849c040000	                            je 0x400922c	       895	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008d90	    0x488b15000000	            mov rdx, qword [0x04008d97] 	       896	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008d97	          0x4885d2	                           test rdx, rdx	       896	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008d9a	     0xf84a8010000	                            je 0x4008f48	       896	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008da0	        0xf6400b40	            test byte [rax + 0xb], 0x40 	       897	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008da4	     0xf849e010000	                            je 0x4008f48	       897	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008daa	        0xf6420b40	            test byte [rdx + 0xb], 0x40 	       898	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008dae	     0xf8494010000	                            je 0x4008f48	       898	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008db4	        0x80781105	                cmp byte [rax + 0x11], 5	       899	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008db8	     0xf868a010000	                           jbe 0x4008f48	       899	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008dbe	        0x807a1105	                cmp byte [rdx + 0x11], 5	       900	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008dc2	     0xf8780010000	                            ja 0x4008f48	       900	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008dc8	    0x488915000000	            mov qword [0x04008dcf], rdx 	       902	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008dcf	    0x488905000000	            mov qword [0x04008dd6], rax 	       903	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008dd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       903	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_45
0x4008de0	    0x486305000000	         movsxd rax, dword [0x04008de7] 	       912	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_46
0x4008de7	    0x800cc5000000	                   or byte [rax*8], 0x40	       912	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_46
0x4008def	    0x8b0500000000	            mov eax, dword [0x04008df5] 	       914	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008df5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_144	CALL_3
0x4008dfa	        0x48c1e005	                              shl rax, 5	       914	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008dfe	    0x488da8000000	                          lea rbp, [rax]	       914	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008e05	    0x488990000000	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_144	CALL_3
0x4008e0c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_144	CALL_3
0x4008e11	          0x4889ef	                            mov rdi, rbp	       916	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	CALL_43
0x4008e14	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_144	CALL_3
0x4008e18	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_144	CALL_3
0x4008e1d	        0x48894510	            mov qword [rbp + 0x10], rax 	        53	string3.h	FUNCTION_144	CALL_3
0x4008e21	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_144	CALL_3
0x4008e26	        0x48894518	            mov qword [rbp + 0x18], rax 	        53	string3.h	FUNCTION_144	CALL_3
0x4008e2a	      0xe800000000	                          call 0x4008e2f	       916	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	CALL_43
0x4008e2f	        0x807d1802	                cmp byte [rbp + 0x18], 2	       918	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x4008e33	    0x4c6335000000	         movsxd r14, dword [0x04008e3a] 	       918	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x4008e3a	     0xf8471020000	                            je 0x40090b1	       918	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x4008e40	     0xfb605000000	           movzx eax, byte [0x04008e47] 	      9049	tc-i386.c	FUNCTION_108	IF_1
0x4008e47	    0x830500000000	               add dword [0x04008e4e], 1	       923	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x4008e4e	    0x4a892cf50000	                  mov qword [r14*8], rbp	       922	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x4008e56	            0x84c0	                             test al, al	      9049	tc-i386.c	FUNCTION_108	IF_1
0x4008e58	     0xf8472020000	                            je 0x40090d0	      9049	tc-i386.c	FUNCTION_108	IF_1
0x4008e5e	    0x8b1500000000	            mov edx, dword [0x04008e64] 	       927	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x4008e64	          0x83fa02	                              cmp edx, 2	       927	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x4008e67	            0x7413	                            je 0x4008e7c	       927	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x4008e69	            0x84c0	                             test al, al	       936	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4008e6b	           0xf94c1	                                 sete cl	       936	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4008e6e	          0x83fa01	                              cmp edx, 1	       936	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4008e71	           0xf94c0	                                 sete al	       936	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4008e74	            0x38c1	                              cmp cl, al	       936	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4008e76	     0xf84a2030000	                            je 0x400921e	       936	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4008e7c	    0x42800cf50000	                      or byte [r14*8], 4	       929	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x4008e85	    0x488b35000000	            mov rsi, qword [0x04008e8c] 	       960	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4008e8c	          0x4889da	                            mov rdx, rbx	       960	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4008e8f	          0x4889ef	                            mov rdi, rbp	       960	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4008e92	      0xe8f9b9ffff	call sym.i386_finalize_displacement.isra.15	       960	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4008e97	            0x85c0	                           test eax, eax	       960	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4008e99	     0xf84a3faffff	                            je 0x4008942	       960	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4008e9f	    0x488b3d000000	            mov rdi, qword [0x04008ea6] 	       966	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53
0x4008ea6	          0x4885ff	                           test rdi, rdi	       966	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53
0x4008ea9	     0xf84c7020000	                            je 0x4009176	       966	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53
0x4008eaf	          0x4531e4	                          xor r12d, r12d	       966	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53
0x4008eb2	            0xeb29	                           jmp 0x4008edd	       966	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53
0x4008eb4	         0xf1f4000	                         nop dword [rax]	       966	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53
0x4008eb8	        0x488b7d08	                mov rdi, qword [rbp + 8]	       972	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4008ebc	      0xe800000000	                          call 0x4008ec1	       972	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4008ec1	        0x80781805	                cmp byte [rax + 0x18], 5	       972	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4008ec5	     0xf85c5010000	                           jne 0x4009090	       972	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4008ecb	        0x488b7d00	                    mov rdi, qword [rbp]	       975	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1
0x4008ecf	    0x448b25000000	           mov r12d, dword [0x04008ed6] 	       968	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1
0x4008ed6	    0x48893d000000	            mov qword [0x04008edd], rdi 	       975	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1
0x4008edd	      0xe800000000	                          call 0x4008ee2	       970	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x4008ee2	          0x4889c5	                            mov rbp, rax	       970	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x4008ee5	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       971	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x4008ee9	            0x3c1f	                            cmp al, 0x1f	       971	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x4008eeb	            0x74cb	                            je 0x4008eb8	       971	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x4008eed	            0x3c05	                               cmp al, 5	       977	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_55
0x4008eef	      0xba05000000	                              mov edx, 5	       979	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4008ef4	      0xbe00000000	                              mov esi, 0	       979	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4008ef9	     0xf8532faffff	                           jne 0x4008931	       977	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_55
0x4008eff	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       982	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56
0x4008f03	        0x488d1440	                  lea rdx, [rax + rax*2]	       982	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56
0x4008f07	    0x488d14d50000	                        lea rdx, [rdx*8]	       982	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56
0x4008f0f	        0x807a0800	                   cmp byte [rdx + 8], 0	       982	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56
0x4008f13	            0x780a	                            js 0x4008f1f	       982	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56
0x4008f15	        0xf6420901	                  test byte [rdx + 9], 1	       983	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56
0x4008f19	     0xf8468030000	                            je 0x4009287	       983	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56
0x4008f1f	        0x4183fc01	                             cmp r12d, 1	       988	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3
0x4008f23	     0xf84f4010000	                            je 0x400911d	       988	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3
0x4008f29	        0x4183fc02	                             cmp r12d, 2	       988	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3
0x4008f2d	     0xf8509020000	                           jne 0x400913c	       988	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3
0x4008f33	      0xba05000000	                              mov edx, 5	       991	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x4008f38	      0xbe00000000	                              mov esi, 0	       991	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x4008f3d	      0xe9eff9ffff	                           jmp 0x4008931	       991	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x4008f42	    0x660f1f440000	                    nop word [rax + rax]	       991	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x4008f48	    0x488905000000	            mov qword [0x04008f4f], rax 	       907	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	ELSE_20
0x4008f4f	    0x488915000000	            mov qword [0x04008f56], rdx 	       908	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	ELSE_20
0x4008f56	      0xe985feffff	                           jmp 0x4008de0	       908	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	ELSE_20
0x4008f5b	       0xf1f440000	                   nop dword [rax + rax]	       908	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	ELSE_20
0x4008f60	      0xba05000000	                              mov edx, 5	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f65	      0xbe00000000	                              mov esi, 0	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f6a	            0x31ff	                            xor edi, edi	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f6c	      0xe800000000	                          call 0x4008f71	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f71	          0x4489e6	                           mov esi, r12d	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f74	          0x4889c7	                            mov rdi, rax	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f77	      0xb900000000	                              mov ecx, 0	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f7c	      0xbad3020000	                          mov edx, 0x2d3	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f81	            0x31c0	                            xor eax, eax	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f83	      0xe800000000	                          call 0x4008f88	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f88	     0xf1f84000000	                   nop dword [rax + rax]	       723	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	CALL_21
0x4008f90	    0x4c8b3d000000	            mov r15, qword [0x04008f97] 	       593	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4
0x4008f97	        0x410fb607	                   movzx eax, byte [r15]	       593	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4
0x4008f9b	    0x80b800000000	                       cmp byte [rax], 0	       593	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4
0x4008fa2	     0xf845bf8ffff	                            je 0x4008803	       593	tc-i386-intel.c	FUNCTION_164	ELSE_1	IF_4
0x4008fa8	          0x4531f6	                          xor r14d, r14d	       590	tc-i386-intel.c	FUNCTION_164	IF_2	ELSE_1
0x4008fab	      0x807c242801	                cmp byte [rsp + 0x28], 1	       599	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6
0x4008fb0	     0xf87e5f8ffff	                            ja 0x400889b	       599	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6
0x4008fb6	      0xe948f8ffff	                           jmp 0x4008803	       599	tc-i386-intel.c	FUNCTION_164	ELSE_2	IF_6
0x4008fbb	    0x48833d000000	               cmp qword [0x04008fc3], 0	       832	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008fc3	     0xf8500fdffff	                           jne 0x4008cc9	       832	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008fc9	    0x48833d000000	               cmp qword [0x04008fd1], 0	       833	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008fd1	     0xf85f2fcffff	                           jne 0x4008cc9	       833	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008fd7	    0x448b25000000	           mov r12d, dword [0x04008fde] 	       834	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008fde	          0x4585e4	                         test r12d, r12d	       834	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008fe1	     0xf85e2fcffff	                           jne 0x4008cc9	       834	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4008fe7	    0x8b1500000000	            mov edx, dword [0x04008fed] 	      1020	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59
0x4008fed	          0x83fa01	                              cmp edx, 1	      1020	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59
0x4008ff0	     0xf8635040000	                           jbe 0x400942b	      1020	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59
0x4008ff6	            0x31ff	                            xor edi, edi	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x4008ff8	      0xba05000000	                              mov edx, 5	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x4008ffd	      0xbe00000000	                              mov esi, 0	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x4009002	      0xe800000000	                          call 0x4009007	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x4009007	      0xbe02000000	                              mov esi, 2	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x400900c	          0x4889c7	                            mov rdi, rax	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x400900f	            0x31c0	                            xor eax, eax	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x4009011	      0xe800000000	                          call 0x4009016	      1022	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59	CALL_59
0x4009016	      0xe92af9ffff	                           jmp 0x4008945	      1024	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59
0x400901b	       0xf1f440000	                   nop dword [rax + rax]	      1024	tc-i386-intel.c	FUNCTION_164	ELSE_23	IF_59
0x4009020	    0x48833d000000	               cmp qword [0x04009028], 0	       855	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4009028	     0xf85e3fcffff	                           jne 0x4008d11	       855	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x400902e	          0x83fa01	                              cmp edx, 1	       855	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4009031	     0xf85dafcffff	                           jne 0x4008d11	       855	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4009037	    0x833d00000000	               cmp dword [0x0400903e], 1	       856	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x400903e	     0xf85cdfcffff	                           jne 0x4008d11	       856	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4009044	    0x833d00000000	               cmp dword [0x0400904b], 1	       857	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x400904b	     0xf85c0fcffff	                           jne 0x4008d11	       857	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4009051	    0x488b15000000	            mov rdx, qword [0x04009058] 	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009058	    0x488b35000000	            mov rsi, qword [0x0400905f] 	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x400905f	            0x31c9	                            xor ecx, ecx	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009061	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009066	    0xc70500000000	               mov dword [0x04009070], 0	       860	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42
0x4009070	      0xe89b74ffff	        call sym.i386_finalize_immediate	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009075	            0x85c0	                           test eax, eax	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009077	     0xf853a030000	                           jne 0x40093b7	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x400907d	    0x488b05000000	            mov rax, qword [0x04009084] 	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009084	          0x488b08	                    mov rcx, qword [rax]	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009087	      0xe985fcffff	                           jmp 0x4008d11	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x400908c	         0xf1f4000	                         nop dword [rax]	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009090	         0xfb64518	           movzx eax, byte [rbp + 0x18] 	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009094	      0xe954feffff	                           jmp 0x4008eed	       861	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4009099	      0xe822b4ffff	         call sym.maybe_adjust_templates	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x400909e	            0x85c0	                           test eax, eax	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x40090a0	     0xf849cf8ffff	                            je 0x4008942	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x40090a6	    0x8b1500000000	            mov edx, dword [0x040090ac] 	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x40090ac	      0xe927fcffff	                           jmp 0x4008cd8	       837	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_40	CALL_37
0x40090b1	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       919	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x40090b6	     0xf8584fdffff	                           jne 0x4008e40	       919	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x40090bc	    0x42f604f50000	                 test byte [r14*8], 0x40	       920	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x40090c5	     0xf8475fdffff	                            je 0x4008e40	       920	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x40090cb	      0xe9cffdffff	                           jmp 0x4008e9f	       920	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x40090d0	      0xe86baeffff	    call sym.i386_addressing_mode.part.7	       920	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47
0x40090d5	    0x8b1500000000	            mov edx, dword [0x040090db] 	       927	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090db	     0xfb605000000	           movzx eax, byte [0x040090e2] 	       927	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090e2	          0x83fa02	                              cmp edx, 2	       927	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090e5	     0xf857efdffff	                           jne 0x4008e69	       927	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090eb	        0x4d8d460e	                     lea r8, [r14 + 0xe]	       929	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090ef	    0x420fb614c500	                  movzx edx, byte [r8*8]	       929	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090f8	            0x89d1	                            mov ecx, edx	       929	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090fa	          0x83c904	                               or ecx, 4	       929	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x40090fd	            0x84c0	                             test al, al	       930	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x40090ff	    0x42880cc50000	                     mov byte [r8*8], cl	       929	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48
0x4009107	     0xf8578fdffff	                           jne 0x4008e85	       930	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x400910d	          0x83ca1c	                            or edx, 0x1c	       933	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4009110	    0x428814c50000	                     mov byte [r8*8], dl	       933	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4009118	      0xe968fdffff	                           jmp 0x4008e85	       933	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x400911d	      0xba05000000	                              mov edx, 5	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4009122	      0xbe00000000	                              mov esi, 0	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4009127	            0x31ff	                            xor edi, edi	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4009129	      0xe800000000	                          call 0x400912e	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x400912e	          0x4889c7	                            mov rdi, rax	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4009131	            0x31c0	                            xor eax, eax	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4009133	      0xe800000000	                          call 0x4009138	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x4009138	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       994	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x400913c	        0x488d0440	                  lea rax, [rax + rax*2]	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009140	     0xfb604c50000	                 movzx eax, byte [rax*8]	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009148	            0x3c03	                               cmp al, 3	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x400914a	     0xf8474010000	                            je 0x40092c4	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009150	     0xf870c010000	                            ja 0x4009262	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009156	            0x3c01	                               cmp al, 1	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009158	     0xf8494010000	                            je 0x40092f2	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x400915e	     0xf8777010000	                            ja 0x40092db	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009164	    0x8b0500000000	            mov eax, dword [0x0400916a] 	       999	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x400916a	    0x48c704c50000	                    mov qword [rax*8], 0	       999	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009176	          0x4889df	                            mov rdi, rbx	      1009	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_57	CALL_56
0x4009179	      0xe8a2aeffff	               call sym.i386_index_check	      1009	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_57	CALL_56
0x400917e	            0x85c0	                           test eax, eax	      1009	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_57	CALL_56
0x4009180	     0xf84bcf7ffff	                            je 0x4008942	      1009	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_57	CALL_56
0x4009186	    0x486305000000	         movsxd rax, dword [0x0400918d] 	      1012	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x400918d	    0x800cc5000000	                   or byte [rax*8], 0x10	      1012	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x4009195	    0x8b0500000000	            mov eax, dword [0x0400919b] 	      1013	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_58
0x400919b	            0x85c0	                           test eax, eax	      1013	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_58
0x400919d	            0x7515	                           jne 0x40091b4	      1013	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_58
0x400919f	          0x4889df	                            mov rdi, rbx	      1014	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	CALL_57
0x40091a2	      0xe800000000	                          call 0x40091a7	      1014	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	CALL_57
0x40091a7	    0x488905000000	            mov qword [0x040091ae], rax 	      1014	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	CALL_57
0x40091ae	    0x8b0500000000	            mov eax, dword [0x040091b4] 	      1014	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	CALL_57
0x40091b4	          0x83c001	                              add eax, 1	      1015	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x40091b7	    0x41bc01000000	                             mov r12d, 1	      1035	tc-i386-intel.c	FUNCTION_164
0x40091bd	    0x890500000000	            mov dword [0x040091c3], eax 	      1015	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x40091c3	      0xe97df7ffff	                           jmp 0x4008945	      1015	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39
0x40091c8	    0x41bc73000000	                          mov r12d, 0x73	       643	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_4	IF_12
0x40091ce	      0xe92df9ffff	                           jmp 0x4008b00	       643	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_4	IF_12
0x40091d3	        0x807a0273	                cmp byte [rdx + 2], 0x73	       638	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x40091d7	     0xf857af9ffff	                           jne 0x4008b57	       638	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x40091dd	        0x807a0300	                   cmp byte [rdx + 3], 0	       639	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x40091e1	     0xf84a4faffff	                            je 0x4008c8b	       639	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x40091e7	      0xe96bf9ffff	                           jmp 0x4008b57	       639	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_11
0x40091ec	        0x80780273	                cmp byte [rax + 2], 0x73	       668	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x40091f0	     0xf8551faffff	                           jne 0x4008c47	       668	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x40091f6	        0x80780300	                   cmp byte [rax + 3], 0	       669	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x40091fa	     0xf8547faffff	                           jne 0x4008c47	       669	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4009200	      0xe9a8f9ffff	                           jmp 0x4008bad	       669	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_16
0x4009205	        0x807a0273	                cmp byte [rdx + 2], 0x73	       651	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4009209	     0xf8580f9ffff	                           jne 0x4008b8f	       651	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x400920f	        0x807a0300	                   cmp byte [rdx + 3], 0	       652	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4009213	     0xf8453f9ffff	                            je 0x4008b6c	       652	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x4009219	      0xe971f9ffff	                           jmp 0x4008b8f	       652	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	IF_13
0x400921e	    0x42800cf50000	                      or byte [r14*8], 2	       939	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_22
0x4009227	      0xe959fcffff	                           jmp 0x4008e85	       939	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_22
0x400922c	    0x488b05000000	            mov rax, qword [0x04009233] 	       939	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_47	ELSE_22
0x4009233	    0x48c705000000	               mov qword [0x0400923e], 0	       907	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	ELSE_20
0x400923e	          0x4885c0	                           test rax, rax	       911	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_46
0x4009241	    0x488905000000	            mov qword [0x04009248], rax 	       908	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	ELSE_20
0x4009248	     0xf8592fbffff	                           jne 0x4008de0	       911	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_46
0x400924e	      0xe99cfbffff	                           jmp 0x4008def	       911	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_46
0x4009253	        0xf6402860	           test byte [rax + 0x28], 0x60 	       656	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_6	IF_14
0x4009257	     0xf8596f8ffff	                           jne 0x4008af3	       656	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_6	IF_14
0x400925d	      0xe940f9ffff	                           jmp 0x4008ba2	       656	tc-i386-intel.c	FUNCTION_164	IF_10	SWITCH_1	ELSE_6	IF_14
0x4009262	            0x3c05	                               cmp al, 5	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009264	            0x7447	                            je 0x40092ad	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009266	            0x722e	                            jb 0x4009296	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009268	             0x401	                               add al, 1	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x400926a	     0xf8506ffffff	                           jne 0x4009176	       997	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009270	    0x8b0500000000	            mov eax, dword [0x04009276] 	      1005	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009276	    0x48c704c50000	                    mov qword [rax*8], 0	      1005	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009282	      0xe9effeffff	                           jmp 0x4009176	      1005	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009287	      0xba05000000	                              mov edx, 5	       985	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x400928c	      0xbe00000000	                              mov esi, 0	       985	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x4009291	      0xe99bf6ffff	                           jmp 0x4008931	       985	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x4009296	    0x8b0500000000	            mov eax, dword [0x0400929c] 	      1003	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x400929c	    0x48c704c50000	                    mov qword [rax*8], 0	      1003	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092a8	      0xe9c9feffff	                           jmp 0x4009176	      1003	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092ad	    0x8b0500000000	            mov eax, dword [0x040092b3] 	      1004	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092b3	    0x48c704c50000	                    mov qword [rax*8], 0	      1004	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092bf	      0xe9b2feffff	                           jmp 0x4009176	      1004	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092c4	    0x8b0500000000	            mov eax, dword [0x040092ca] 	      1002	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092ca	    0x48c704c50000	                    mov qword [rax*8], 0	      1002	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092d6	      0xe99bfeffff	                           jmp 0x4009176	      1002	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092db	    0x8b0500000000	            mov eax, dword [0x040092e1] 	      1001	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092e1	    0x48c704c50000	                    mov qword [rax*8], 0	      1001	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092ed	      0xe984feffff	                           jmp 0x4009176	      1001	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092f2	    0x8b0500000000	            mov eax, dword [0x040092f8] 	      1000	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x40092f8	    0x48c704c50000	                    mov qword [rax*8], 0	      1000	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009304	      0xe96dfeffff	                           jmp 0x4009176	      1000	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_53	SWITCH_4
0x4009309	      0xe800000000	                          call 0x400930e	      1036	tc-i386-intel.c	FUNCTION_164
0x400930e	      0xba00000000	                              mov edx, 0	       618	tc-i386-intel.c	FUNCTION_164	CALL_19
0x4009313	      0xbe6a020000	                          mov esi, 0x26a	       618	tc-i386-intel.c	FUNCTION_164	CALL_19
0x4009318	      0xbf00000000	                              mov edi, 0	       618	tc-i386-intel.c	FUNCTION_164	CALL_19
0x400931d	      0xe800000000	                          call 0x4009322	       618	tc-i386-intel.c	FUNCTION_164	CALL_19
0x4009322	      0xba00000000	                              mov edx, 0	       616	tc-i386-intel.c	FUNCTION_164	CALL_17
0x4009327	      0xbe68020000	                          mov esi, 0x268	       616	tc-i386-intel.c	FUNCTION_164	CALL_17
0x400932c	      0xbf00000000	                              mov edi, 0	       616	tc-i386-intel.c	FUNCTION_164	CALL_17
0x4009331	      0xe800000000	                          call 0x4009336	       616	tc-i386-intel.c	FUNCTION_164	CALL_17
0x4009336	      0xba00000000	                              mov edx, 0	       617	tc-i386-intel.c	FUNCTION_164	CALL_18
0x400933b	      0xbe69020000	                          mov esi, 0x269	       617	tc-i386-intel.c	FUNCTION_164	CALL_18
0x4009340	      0xbf00000000	                              mov edi, 0	       617	tc-i386-intel.c	FUNCTION_164	CALL_18
0x4009345	      0xe800000000	                          call 0x400934a	       617	tc-i386-intel.c	FUNCTION_164	CALL_18
0x400934a	      0xba00000000	                              mov edx, 0	       570	tc-i386-intel.c	FUNCTION_164	CALL_5
0x400934f	      0xbe3a020000	                          mov esi, 0x23a	       570	tc-i386-intel.c	FUNCTION_164	CALL_5
0x4009354	      0xbf00000000	                              mov edi, 0	       570	tc-i386-intel.c	FUNCTION_164	CALL_5
0x4009359	      0xe800000000	                          call 0x400935e	       570	tc-i386-intel.c	FUNCTION_164	CALL_5
0x400935e	      0xba00000000	                              mov edx, 0	       569	tc-i386-intel.c	FUNCTION_164	CALL_4
0x4009363	      0xbe39020000	                          mov esi, 0x239	       569	tc-i386-intel.c	FUNCTION_164	CALL_4
0x4009368	      0xbf00000000	                              mov edi, 0	       569	tc-i386-intel.c	FUNCTION_164	CALL_4
0x400936d	      0xe800000000	                          call 0x4009372	       569	tc-i386-intel.c	FUNCTION_164	CALL_4
0x4009372	      0xba00000000	                              mov edx, 0	       568	tc-i386-intel.c	FUNCTION_164	CALL_3
0x4009377	      0xbe38020000	                          mov esi, 0x238	       568	tc-i386-intel.c	FUNCTION_164	CALL_3
0x400937c	      0xbf00000000	                              mov edi, 0	       568	tc-i386-intel.c	FUNCTION_164	CALL_3
0x4009381	      0xe800000000	                          call 0x4009386	       568	tc-i386-intel.c	FUNCTION_164	CALL_3
0x4009386	    0x8b0d00000000	            mov ecx, dword [0x0400938c] 	       747	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x400938c	          0x83f93a	                           cmp ecx, 0x3a	       747	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x400938f	     0xf8410010000	                            je 0x40094a5	       747	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x4009395	          0x83f93b	                           cmp ecx, 0x3b	       747	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x4009398	     0xf84d8000000	                            je 0x4009476	       747	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x400939e	          0x83f901	                              cmp ecx, 1	       747	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x40093a1	     0xf84fe000000	                            je 0x40094a5	       747	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x40093a7	    0x800cc5000000	                      or byte [rax*8], 2	       804	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x40093af	          0x4889d1	                            mov rcx, rdx	       805	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x40093b2	      0xe957f5ffff	                           jmp 0x400890e	       805	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2
0x40093b7	      0xb800000000	                              mov eax, 0	       868	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x40093bc	      0xb908000000	                              mov ecx, 8	       868	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x40093c1	          0x4889ee	                            mov rsi, rbp	       868	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x40093c4	          0x4889c7	                            mov rdi, rax	       868	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x40093c7	    0x488b15000000	            mov rdx, qword [0x040093ce] 	       871	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x40093ce	    0xc70500000000	               mov dword [0x040093d8], 1	       865	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x40093d8	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	       868	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x40093da	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       871	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x40093df	          0x4889c6	                            mov rsi, rax	       871	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x40093e2	    0x48c705000000	               mov qword [0x040093ed], 0	       867	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x40093ed	      0xe81e71ffff	        call sym.i386_finalize_immediate	       871	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x40093f2	            0x85c0	                           test eax, eax	       871	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x40093f4	     0xf8483fcffff	                            je 0x400907d	       871	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x40093fa	    0xc70500000000	               mov dword [0x04009404], 0	       875	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4009404	    0xc70500000000	               mov dword [0x0400940e], 0	       876	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x400940e	    0xc70500000000	               mov dword [0x04009418], 2	       877	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4009418	    0x802500000000	             and byte [0x0400941f], 0xef	       878	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x400941f	    0x802500000000	             and byte [0x04009426], 0xf1	       881	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4009426	      0xe91af5ffff	                           jmp 0x4008945	       882	tc-i386-intel.c	FUNCTION_164	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x400942b	          0x4189d0	                            mov r8d, edx	      1027	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x400942e	          0x8d4a01	                      lea ecx, [rdx + 1]	      1027	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x4009431	          0x4889ee	                            mov rsi, rbp	      1029	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x4009434	        0x49c1e005	                               shl r8, 5	      1027	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x4009438	    0x488b15000000	            mov rdx, qword [0x0400943f] 	      1031	tc-i386-intel.c	FUNCTION_164	ELSE_23	CALL_60
0x400943f	    0x4981c0000000	                               add r8, 0	      1027	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x4009446	    0x890d00000000	            mov dword [0x0400944c], ecx 	      1027	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x400944c	      0xb908000000	                              mov ecx, 8	      1029	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x4009451	          0x4c89c7	                             mov rdi, r8	      1029	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x4009454	    0x4c8904c50000	                   mov qword [rax*8], r8	      1028	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x400945c	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      1029	tc-i386-intel.c	FUNCTION_164	ELSE_23
0x400945e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1031	tc-i386-intel.c	FUNCTION_164	ELSE_23	CALL_60
0x4009463	          0x4889d9	                            mov rcx, rbx	      1031	tc-i386-intel.c	FUNCTION_164	ELSE_23	CALL_60
0x4009466	          0x4c89c6	                             mov rsi, r8	      1031	tc-i386-intel.c	FUNCTION_164	ELSE_23	CALL_60
0x4009469	      0xe8a270ffff	        call sym.i386_finalize_immediate	      1031	tc-i386-intel.c	FUNCTION_164	ELSE_23	CALL_60
0x400946e	          0x4189c4	                           mov r12d, eax	      1031	tc-i386-intel.c	FUNCTION_164	ELSE_23	CALL_60
0x4009471	      0xe9cff4ffff	                           jmp 0x4008945	      1031	tc-i386-intel.c	FUNCTION_164	ELSE_23	CALL_60
0x4009476	    0x48833d000000	               cmp qword [0x0400947e], 0	       750	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	IF_26
0x400947e	     0xf8523ffffff	                           jne 0x40093a7	       750	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	IF_26
0x4009484	    0xc70500000000	               mov dword [0x0400948e], 1	       753	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15
0x400948e	    0xf604c5000000	                    test byte [rax*8], 2	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x4009496	     0xf841ffbffff	                            je 0x4008fbb	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x400949c	            0x31c9	                            xor ecx, ecx	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x400949e	            0x31d2	                            xor edx, edx	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x40094a0	      0xe969f4ffff	                           jmp 0x400890e	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x40094a5	    0x488b3d000000	            mov rdi, qword [0x040094ac] 	       757	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x40094ac	          0x4885ff	                           test rdi, rdi	       757	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x40094af	            0x7442	                            je 0x40094f3	       757	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x40094b1	      0xe800000000	                          call 0x40094b6	       769	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x40094b6	    0x483b05000000	            cmp rax, qword [0x040094bd] 	       769	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x40094bd	     0xf8444010000	                            je 0x4009607	       769	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x40094c3	    0x8b0500000000	            mov eax, dword [0x040094c9] 	       775	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x40094c9	          0x83f801	                              cmp eax, 1	       775	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x40094cc	            0x7656	                           jbe 0x4009524	       775	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x40094ce	            0x31ff	                            xor edi, edi	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094d0	      0xba05000000	                              mov edx, 5	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094d5	      0xbe00000000	                              mov esi, 0	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094da	      0xe800000000	                          call 0x40094df	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094df	      0xbe02000000	                              mov esi, 2	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094e4	          0x4889c7	                            mov rdi, rax	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094e7	            0x31c0	                            xor eax, eax	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094e9	      0xe800000000	                          call 0x40094ee	       777	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x40094ee	      0xe94ff4ffff	                           jmp 0x4008942	       779	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x40094f3	          0x83e901	                              sub ecx, 1	       760	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x40094f6	    0xc70500000000	               mov dword [0x04009500], 1	       759	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x4009500	     0xf8524010000	                           jne 0x400962a	       760	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x4009506	    0x833d00000000	               cmp dword [0x0400950d], 1	       762	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x400950d	     0xf857bffffff	                           jne 0x400948e	       762	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4009513	    0x800cc5000000	                      or byte [rax*8], 2	       763	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x400951b	            0x31c9	                            xor ecx, ecx	       763	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x400951d	            0x31d2	                            xor edx, edx	       763	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x400951f	      0xe9eaf3ffff	                           jmp 0x400890e	       763	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4009524	          0x8d5001	                      lea edx, [rax + 1]	       781	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4009527	        0x48c1e005	                              shl rax, 5	       781	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x400952b	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_147	CALL_6
0x4009530	    0x4c8da8000000	                          lea r13, [rax]	       781	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4009537	    0x891500000000	            mov dword [0x0400953d], edx 	       781	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x400953d	          0x4889c2	                            mov rdx, rax	       781	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4009540	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_147	CALL_6
0x4009542	          0x4c89ef	                            mov rdi, r13	        90	string3.h	FUNCTION_147	CALL_6
0x4009545	            0xf3ab	              rep stosd dword [rdi], eax	        90	string3.h	FUNCTION_147	CALL_6
0x4009547	    0x488b05000000	            mov rax, qword [0x0400954e] 	       784	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x400954e	          0x4c89ef	                            mov rdi, r13	       787	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_30
0x4009551	    0xc68200000000	                       mov byte [rdx], 3	       783	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4009558	    0x488982000000	                    mov qword [rdx], rax	       784	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x400955f	    0x486305000000	         movsxd rax, dword [0x04009566] 	       785	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4009566	    0x4c892cc50000	                  mov qword [rax*8], r13	       785	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x400956e	      0xe800000000	                          call 0x4009573	       787	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_30
0x4009573	    0x488b3d000000	            mov rdi, qword [0x0400957a] 	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x400957a	      0xe800000000	                          call 0x400957f	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x400957f	        0x4883caff	              or rdx, 0xffffffffffffffff	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4009583	          0x4889d9	                            mov rcx, rbx	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4009586	          0x4c89ee	                            mov rsi, r13	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4009589	          0x4889c7	                            mov rdi, rax	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x400958c	      0xe87f6fffff	        call sym.i386_finalize_immediate	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4009591	            0x85c0	                           test eax, eax	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4009593	     0xf84a9f3ffff	                            je 0x4008942	       789	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4009599	    0x486305000000	         movsxd rax, dword [0x040095a0] 	       792	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x40095a0	          0x83f804	                              cmp eax, 4	       792	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x40095a3	            0x7717	                            ja 0x40095bc	       792	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x40095a5	          0x8d5001	                      lea edx, [rax + 1]	       794	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x40095a8	    0x890500000000	            mov dword [0x040095ae], eax 	       794	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x40095ae	    0x891500000000	            mov dword [0x040095b4], edx 	       794	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x40095b4	    0x800cc5000000	                   or byte [rax*8], 0x40	       795	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x40095bc	        0x4180ec01	                             sub r12b, 1	       797	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x40095c0	            0x7507	                           jne 0x40095c9	       797	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x40095c2	    0xc60500000000	                mov byte [0x040095c9], 0	       798	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x40095c9	    0x486305000000	         movsxd rax, dword [0x040095d0] 	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x40095d0	    0x48c705000000	               mov qword [0x040095db], 0	       799	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x40095db	    0xc70500000000	               mov dword [0x040095e5], 0	       800	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x40095e5	    0x488b0d000000	            mov rcx, qword [0x040095ec] 	       800	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x40095ec	    0xf604c5000000	                    test byte [rax*8], 2	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x40095f4	    0x488b14c50000	                  mov rdx, qword [rax*8]	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x40095fc	     0xf8413f3ffff	                            je 0x4008915	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x4009602	      0xe907f3ffff	                           jmp 0x400890e	       807	tc-i386-intel.c	FUNCTION_164	IF_24	IF_35
0x4009607	    0x486305000000	         movsxd rax, dword [0x0400960e] 	       770	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x400960e	    0x488b0d000000	            mov rcx, qword [0x04009615] 	       770	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4009615	    0x800cc5000000	                      or byte [rax*8], 2	       770	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x400961d	    0x488b14c50000	                  mov rdx, qword [rax*8]	       770	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4009625	      0xe9e4f2ffff	                           jmp 0x400890e	       770	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x400962a	      0xba05000000	                              mov edx, 5	       766	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x400962f	      0xbe00000000	                              mov esi, 0	       766	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4009634	      0xe9f8f2ffff	                           jmp 0x4008931	       766	tc-i386-intel.c	FUNCTION_164	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
x86_64_section_word	IF,1:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	21
0x40112a0	        0x4883fe05	                              cmp rsi, 5	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112a4	          0x4889fa	                            mov rdx, rdi	     11625	tc-i386.c	FUNCTION_143	ELSE_1
0x40112a7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11629	tc-i386.c	FUNCTION_143	ELSE_1
0x40112ae	            0x7408	                            je 0x40112b8	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112b0	            0xf3c3	                                     ret	     11630	tc-i386.c	FUNCTION_143	ELSE_1	IF_2
0x40112b2	    0x660f1f440000	                    nop word [rax + rax]	     11630	tc-i386.c	FUNCTION_143	ELSE_1	IF_2
0x40112b8	    0x833d00000000	               cmp dword [0x040112bf], 2	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112bf	            0x75ef	                           jne 0x40112b0	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112c1	          0x4889d6	                            mov rsi, rdx	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112c4	      0xbf00000000	                              mov edi, 0	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112c9	      0xb905000000	                              mov ecx, 5	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112ce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112d0	           0xf92c2	                                 setb dl	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112d3	           0xf97c0	                                 seta al	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112d6	            0x29d0	                            sub eax, edx	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112d8	           0xfbec0	                           movsx eax, al	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x40112db	          0x83f801	                              cmp eax, 1	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x40112de	          0x4819c0	                            sbb rax, rax	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x40112e1	      0x2501000010	                     and eax, 0x10000001	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x40112e6	        0x4883e801	                              sub rax, 1	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x40112ea	              0xc3	                                     ret	     11630	tc-i386.c	FUNCTION_143	ELSE_1	IF_2
output_insn	IF,21:DO,0:ELSE,6:WHILE,0:CALL,30:functions,0:SWITCH,3:FOR,3	1135
0x40064a0	            0x4157	                                push r15	      7610	tc-i386.c	FUNCTION_92
0x40064a2	            0x4156	                                push r14	      7610	tc-i386.c	FUNCTION_92
0x40064a4	            0x31ff	                            xor edi, edi	      7617	tc-i386.c	FUNCTION_92	CALL_1
0x40064a6	            0x4155	                                push r13	      7610	tc-i386.c	FUNCTION_92
0x40064a8	            0x4154	                                push r12	      7610	tc-i386.c	FUNCTION_92
0x40064aa	              0x55	                                push rbp	      7610	tc-i386.c	FUNCTION_92
0x40064ab	              0x53	                                push rbx	      7610	tc-i386.c	FUNCTION_92
0x40064ac	        0x4883ec38	                           sub rsp, 0x38	      7610	tc-i386.c	FUNCTION_92
0x40064b0	    0x64488b042528	                mov rax, qword fs:[0x28]	      7610	tc-i386.c	FUNCTION_92
0x40064b9	      0x4889442428	             mov qword [rsp + 0x28], rax	      7610	tc-i386.c	FUNCTION_92
0x40064be	            0x31c0	                            xor eax, eax	      7610	tc-i386.c	FUNCTION_92
0x40064c0	      0xe800000000	                          call 0x40064c5	      7617	tc-i386.c	FUNCTION_92	CALL_1
0x40064c5	    0x488b05000000	            mov rax, qword [0x040064cc] 	      7619	tc-i386.c	FUNCTION_92
0x40064cc	      0x4889442408	                mov qword [rsp + 8], rax	      7619	tc-i386.c	FUNCTION_92
0x40064d1	      0xe800000000	                          call 0x40064d6	      7620	tc-i386.c	FUNCTION_92	CALL_2
0x40064d6	      0x4889442410	             mov qword [rsp + 0x10], rax	      7620	tc-i386.c	FUNCTION_92	CALL_2
0x40064db	     0xfb605000000	           movzx eax, byte [0x040064e2] 	      7623	tc-i386.c	FUNCTION_92	IF_1
0x40064e2	            0xa820	                           test al, 0x20	      7623	tc-i386.c	FUNCTION_92	IF_1
0x40064e4	     0xf8536010000	                           jne 0x4006620	      7623	tc-i386.c	FUNCTION_92	IF_1
0x40064ea	            0xa8c0	                           test al, 0xc0	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x40064ec	     0xf85ae040000	                           jne 0x40069a0	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x40064f2	    0xf60500000000	               test byte [0x040064f9], 1	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x40064f9	     0xf8531030000	                           jne 0x4006830	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x40064ff	    0x448b3d000000	           mov r15d, dword [0x04006506] 	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x4006506	          0x4585ff	                         test r15d, r15d	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x4006509	            0x7410	                            je 0x400651b	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400650b	    0x813d00000000	          cmp dword [0x04006515], 0xfae 	      7639	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x4006515	     0xf8465040000	                            je 0x4006980	      7639	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400651b	    0x448b35000000	           mov r14d, dword [0x04006522] 	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x4006522	          0x4585f6	                         test r14d, r14d	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x4006525	            0x7417	                            je 0x400653e	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x4006527	    0x813d00000000	           cmp dword [0x04006531], 0xf0 	      7658	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x4006531	     0xf842d020000	                            je 0x4006764	      7658	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x4006537	    0xc60500000000	                mov byte [0x0400653e], 0	      7660	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400653e	    0xf70500000000	     test dword [0x04006548], 0x7000600 	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x4006548	     0xf8542020000	                           jne 0x4006790	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400654e	     0xfb605000000	           movzx eax, byte [0x04006555] 	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x4006555	            0x3c01	                               cmp al, 1	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x4006557	            0x743d	                            je 0x4006596	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x4006559	     0xf82ef0f0000	                            jb 0x400754e	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400655f	            0x3c02	                               cmp al, 2	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x4006561	     0xf84bc0f0000	                            je 0x4007523	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x4006567	            0x3c03	                               cmp al, 3	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x4006569	     0xf85e70d0000	                           jne 0x4007356	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400656f	    0x8b3d00000000	            mov edi, dword [0x04006575] 	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x4006575	    0xf7c7000000ff	                    test edi, 0xff000000	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400657b	            0x7419	                            je 0x4006596	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400657d	          0xc1ef18	                           shr edi, 0x18	      7672	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x4006580	    0x81fff3000000	                           cmp edi, 0xf3	      7683	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x4006586	            0x7509	                           jne 0x4006591	      7683	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x4006588	    0x803d00000000	            cmp byte [0x0400658f], 0xf3 	      7684	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400658f	            0x7405	                            je 0x4006596	      7684	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x4006591	      0xe84aa6ffff	                     call sym.add_prefix	      7689	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	CALL_9
0x4006596	    0x833d00000000	               cmp dword [0x0400659d], 2	      7708	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400659d	     0xf84f40f0000	                            je 0x4007597	      7708	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x40065a3	      0xbb00000000	                              mov ebx, 0	      7583	tc-i386.c	FUNCTION_91	IF_7
0x40065a8	            0xeb13	                           jmp 0x40065bd	      7583	tc-i386.c	FUNCTION_91	IF_7
0x40065aa	    0x660f1f440000	                    nop word [rax + rax]	      7583	tc-i386.c	FUNCTION_91	IF_7
0x40065b0	        0x4883c301	                              add rbx, 1	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x40065b4	    0x4881fb000000	                              cmp rbx, 0	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x40065bb	            0x7423	                            je 0x40065e0	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x40065bd	           0xfb63b	                   movzx edi, byte [rbx]	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x40065c0	          0x4084ff	                           test dil, dil	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x40065c3	            0x74eb	                            je 0x40065b0	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x40065c5	        0x4883c301	                              add rbx, 1	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x40065c9	      0xe800000000	                          call 0x40065ce	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x40065ce	    0x4881fb000000	                              cmp rbx, 0	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x40065d5	            0x75e6	                           jne 0x40065bd	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x40065d7	    0x660f1f840000	                    nop word [rax + rax]	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x40065e0	     0xfb605000000	           movzx eax, byte [0x040065e7] 	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x40065e7	            0x3c01	                               cmp al, 1	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x40065e9	     0xf84e10f0000	                            je 0x40075d0	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x40065ef	            0x3c03	                               cmp al, 3	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x40065f1	     0xf84430d0000	                            je 0x400733a	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x40065f7	            0x3c04	                               cmp al, 4	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x40065f9	     0xf84150d0000	                            je 0x4007314	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x40065ff	            0x3c02	                               cmp al, 2	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4006601	     0xf8473050000	                            je 0x4006b7a	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4006607	      0xba00000000	                              mov edx, 0	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400660c	      0xbe5c1e0000	                         mov esi, 0x1e5c	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x4006611	      0xbf00000000	                              mov edi, 0	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x4006616	      0xe800000000	                          call 0x400661b	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400661b	       0xf1f440000	                   nop dword [rax + rax]	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x4006620	            0x31db	                            xor ebx, ebx	      7345	tc-i386.c	FUNCTION_88
0x4006622	    0x833d00000000	               cmp dword [0x04006629], 2	      7345	tc-i386.c	FUNCTION_88
0x4006629	    0x8b0500000000	            mov eax, dword [0x0400662f] 	      7344	tc-i386.c	FUNCTION_88
0x400662f	           0xf94c3	                                 sete bl	      7345	tc-i386.c	FUNCTION_88
0x4006632	             0x1db	                            add ebx, ebx	      7345	tc-i386.c	FUNCTION_88
0x4006634	    0x803d00000000	                cmp byte [0x0400663b], 0	      7348	tc-i386.c	FUNCTION_88	IF_1
0x400663b	     0xf851f030000	                           jne 0x4006960	      7348	tc-i386.c	FUNCTION_88	IF_1
0x4006641	          0x4531e4	                          xor r12d, r12d	      7344	tc-i386.c	FUNCTION_88
0x4006644	          0x83f801	                              cmp eax, 1	      7344	tc-i386.c	FUNCTION_88
0x4006647	      0xb801000000	                              mov eax, 1	      7344	tc-i386.c	FUNCTION_88
0x400664c	        0x410f94c4	                               sete r12b	      7344	tc-i386.c	FUNCTION_88
0x4006650	            0x31ed	                            xor ebp, ebp	      7347	tc-i386.c	FUNCTION_88
0x4006652	     0xfb615000000	           movzx edx, byte [0x04006659] 	      7355	tc-i386.c	FUNCTION_88	IF_2
0x4006659	          0x83e2ef	                     and edx, 0xffffffef	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400665c	          0x80fa2e	                            cmp dl, 0x2e	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400665f	            0x750c	                           jne 0x400666d	      7355	tc-i386.c	FUNCTION_88	IF_2
0x4006661	    0x832d00000000	               sub dword [0x04006668], 1	      7359	tc-i386.c	FUNCTION_88	IF_2
0x4006668	            0x89c5	                            mov ebp, eax	      7358	tc-i386.c	FUNCTION_88	IF_2
0x400666a	          0x83c001	                              add eax, 1	      7359	tc-i386.c	FUNCTION_88	IF_2
0x400666d	    0x803d00000000	                cmp byte [0x04006674], 0	      7361	tc-i386.c	FUNCTION_88	IF_3
0x4006674	          0x4189c5	                           mov r13d, eax	      7361	tc-i386.c	FUNCTION_88	IF_3
0x4006677	            0x740d	                            je 0x4006686	      7361	tc-i386.c	FUNCTION_88	IF_3
0x4006679	    0x832d00000000	               sub dword [0x04006680], 1	      7364	tc-i386.c	FUNCTION_88	IF_3
0x4006680	        0x4183c501	                             add r13d, 1	      7364	tc-i386.c	FUNCTION_88	IF_3
0x4006684	            0x89c5	                            mov ebp, eax	      7363	tc-i386.c	FUNCTION_88	IF_3
0x4006686	     0xfb605000000	           movzx eax, byte [0x0400668d] 	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400668d	            0x84c0	                             test al, al	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400668f	     0xf85b5040000	                           jne 0x4006b4a	      7368	tc-i386.c	FUNCTION_88	IF_4
0x4006695	    0x8b0500000000	            mov eax, dword [0x0400669b] 	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400669b	            0x85c0	                           test eax, eax	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400669d	            0x740e	                            je 0x40066ad	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400669f	    0x8b0d00000000	            mov ecx, dword [0x040066a5] 	      7374	tc-i386.c	FUNCTION_88	IF_5
0x40066a5	            0x85c9	                           test ecx, ecx	      7374	tc-i386.c	FUNCTION_88	IF_5
0x40066a7	     0xf84330f0000	                            je 0x40075e0	      7374	tc-i386.c	FUNCTION_88	IF_5
0x40066ad	          0x83c506	                              add ebp, 6	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x40066b0	          0x4863fd	                         movsxd rdi, ebp	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x40066b3	      0xe800000000	                          call 0x40066b8	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x40066b8	          0x4963fd	                        movsxd rdi, r13d	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x40066bb	      0xe800000000	                          call 0x40066c0	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x40066c0	    0x803d00000000	                cmp byte [0x040066c7], 0	      7385	tc-i386.c	FUNCTION_88	IF_6
0x40066c7	          0x4889c5	                            mov rbp, rax	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x40066ca	            0x7407	                            je 0x40066d3	      7385	tc-i386.c	FUNCTION_88	IF_6
0x40066cc	          0xc60066	                    mov byte [rax], 0x66	      7386	tc-i386.c	FUNCTION_88	IF_6
0x40066cf	        0x4883c501	                              add rbp, 1	      7386	tc-i386.c	FUNCTION_88	IF_6
0x40066d3	     0xfb605000000	           movzx eax, byte [0x040066da] 	      7387	tc-i386.c	FUNCTION_88	IF_7
0x40066da	            0x89c2	                            mov edx, eax	      7387	tc-i386.c	FUNCTION_88	IF_7
0x40066dc	          0x83e2ef	                     and edx, 0xffffffef	      7387	tc-i386.c	FUNCTION_88	IF_7
0x40066df	          0x80fa2e	                            cmp dl, 0x2e	      7387	tc-i386.c	FUNCTION_88	IF_7
0x40066e2	            0x7507	                           jne 0x40066eb	      7387	tc-i386.c	FUNCTION_88	IF_7
0x40066e4	          0x884500	                      mov byte [rbp], al	      7389	tc-i386.c	FUNCTION_88	IF_7
0x40066e7	        0x4883c501	                              add rbp, 1	      7389	tc-i386.c	FUNCTION_88	IF_7
0x40066eb	     0xfb605000000	           movzx eax, byte [0x040066f2] 	      7390	tc-i386.c	FUNCTION_88	IF_8
0x40066f2	            0x84c0	                             test al, al	      7390	tc-i386.c	FUNCTION_88	IF_8
0x40066f4	            0x7407	                            je 0x40066fd	      7390	tc-i386.c	FUNCTION_88	IF_8
0x40066f6	          0x884500	                      mov byte [rbp], al	      7391	tc-i386.c	FUNCTION_88	IF_8
0x40066f9	        0x4883c501	                              add rbp, 1	      7391	tc-i386.c	FUNCTION_88	IF_8
0x40066fd	    0x8b0500000000	            mov eax, dword [0x04006703] 	      7392	tc-i386.c	FUNCTION_88
0x4006703	            0x89d9	                            mov ecx, ebx	      7395	tc-i386.c	FUNCTION_88	IF_9
0x4006705	            0x3ceb	                            cmp al, 0xeb	      7394	tc-i386.c	FUNCTION_88	IF_9
0x4006707	          0x884500	                      mov byte [rbp], al	      7392	tc-i386.c	FUNCTION_88
0x400670a	            0x7414	                            je 0x4006720	      7394	tc-i386.c	FUNCTION_88	IF_9
0x400670c	            0x89d8	                            mov eax, ebx	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400670e	          0x83cb08	                               or ebx, 8	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x4006711	          0x83c804	                               or eax, 4	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x4006714	    0xf60500000000	               test byte [0x0400671b], 4	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400671b	            0x89d9	                            mov ecx, ebx	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400671d	           0xf45c8	                         cmovne ecx, eax	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x4006720	    0x488b3d000000	            mov rdi, qword [0x04006727] 	      7402	tc-i386.c	FUNCTION_88
0x4006727	          0x4489e3	                           mov ebx, r12d	      7400	tc-i386.c	FUNCTION_88
0x400672a	             0x9cb	                             or ebx, ecx	      7400	tc-i386.c	FUNCTION_88
0x400672c	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	      7405	tc-i386.c	FUNCTION_88	IF_11
0x4006730	          0x83e802	                              sub eax, 2	      7405	tc-i386.c	FUNCTION_88	IF_11
0x4006733	            0x3c01	                               cmp al, 1	      7405	tc-i386.c	FUNCTION_88	IF_11
0x4006735	     0xf869d030000	                           jbe 0x4006ad8	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400673b	      0xe800000000	                          call 0x4006740	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x4006740	          0x4531c9	                            xor r9d, r9d	      7410	tc-i386.c	FUNCTION_88	IF_11
0x4006743	          0x4989c0	                             mov r8, rax	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x4006746	    0x8b1500000000	            mov edx, dword [0x0400674c] 	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400674c	        0x4883ec08	                              sub rsp, 8	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x4006750	            0x89d9	                            mov ecx, ebx	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x4006752	              0x55	                                push rbp	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x4006753	      0xbe05000000	                              mov esi, 5	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x4006758	      0xbf07000000	                              mov edi, 7	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400675d	      0xe800000000	                          call 0x4006762	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x4006762	              0x58	                                 pop rax	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x4006763	              0x5a	                                 pop rdx	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x4006764	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7812	tc-i386.c	FUNCTION_92
0x4006769	    0x644833042528	                xor rax, qword fs:[0x28]	      7812	tc-i386.c	FUNCTION_92
0x4006772	     0xf851e100000	                           jne 0x4007796	      7812	tc-i386.c	FUNCTION_92
0x4006778	        0x4883c438	                           add rsp, 0x38	      7812	tc-i386.c	FUNCTION_92
0x400677c	              0x5b	                                 pop rbx	      7812	tc-i386.c	FUNCTION_92
0x400677d	              0x5d	                                 pop rbp	      7812	tc-i386.c	FUNCTION_92
0x400677e	            0x415c	                                 pop r12	      7812	tc-i386.c	FUNCTION_92
0x4006780	            0x415d	                                 pop r13	      7812	tc-i386.c	FUNCTION_92
0x4006782	            0x415e	                                 pop r14	      7812	tc-i386.c	FUNCTION_92
0x4006784	            0x415f	                                 pop r15	      7812	tc-i386.c	FUNCTION_92
0x4006786	              0xc3	                                     ret	      7812	tc-i386.c	FUNCTION_92
0x4006787	    0x660f1f840000	                    nop word [rax + rax]	      7812	tc-i386.c	FUNCTION_92
0x4006790	            0x31db	                            xor ebx, ebx	      7812	tc-i386.c	FUNCTION_92
0x4006792	     0xfb6bb000000	                   movzx edi, byte [rbx]	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x4006799	          0x4084ff	                           test dil, dil	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400679c	            0x7432	                            je 0x40067d0	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400679e	          0x83fb01	                              cmp ebx, 1	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x40067a1	            0x720a	                            jb 0x40067ad	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x40067a3	          0x83fb02	                              cmp ebx, 2	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x40067a6	            0x7620	                           jbe 0x40067c8	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x40067a8	          0x83fb06	                              cmp ebx, 6	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x40067ab	            0x7423	                            je 0x40067d0	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x40067ad	      0xba00000000	                              mov edx, 0	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x40067b2	      0xbe381e0000	                         mov esi, 0x1e38	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x40067b7	      0xbf00000000	                              mov edi, 0	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x40067bc	      0xe800000000	                          call 0x40067c1	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x40067c1	     0xf1f80000000	                         nop dword [rax]	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x40067c8	      0xe800000000	                          call 0x40067cd	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x40067cd	           0xf1f00	                         nop dword [rax]	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x40067d0	        0x4883c301	                              add rbx, 1	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x40067d4	        0x4883fb07	                              cmp rbx, 7	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x40067d8	            0x75b8	                           jne 0x4006792	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x40067da	    0x448b2d000000	           mov r13d, dword [0x040067e1] 	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x40067e1	          0x4585ed	                         test r13d, r13d	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x40067e4	     0xf85980f0000	                           jne 0x4007782	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x40067ea	    0x8b3d00000000	            mov edi, dword [0x040067f0] 	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x40067f0	      0xe800000000	                          call 0x40067f5	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x40067f5	    0x448b25000000	           mov r12d, dword [0x040067fc] 	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x40067fc	          0x4585e4	                         test r12d, r12d	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x40067ff	     0xf84dbfdffff	                            je 0x40065e0	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006805	            0x31d2	                            xor edx, edx	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006807	            0x31c9	                            xor ecx, ecx	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006809	     0xfb6b2000000	                   movzx esi, byte [rdx]	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006810	          0x83c101	                              add ecx, 1	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006813	        0x40883410	               mov byte [rax + rdx], sil	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006817	        0x4883c201	                              add rdx, 1	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400681b	    0x390d00000000	            cmp dword [0x04006821], ecx 	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006821	            0x77e6	                            ja 0x4006809	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006823	      0xe9b8fdffff	                           jmp 0x40065e0	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006828	     0xf1f84000000	                   nop dword [rax + rax]	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x4006830	    0x803d00000000	                cmp byte [0x04006837], 0	      7557	tc-i386.c	FUNCTION_91	IF_2
0x4006837	    0x8b1500000000	            mov edx, dword [0x0400683d] 	      7553	tc-i386.c	FUNCTION_91	IF_1
0x400683d	     0xf85e5020000	                           jne 0x4006b28	      7557	tc-i386.c	FUNCTION_91	IF_2
0x4006843	          0x83fa01	                              cmp edx, 1	      7552	tc-i386.c	FUNCTION_91
0x4006846	    0x8b0500000000	            mov eax, dword [0x0400684c] 	      7552	tc-i386.c	FUNCTION_91
0x400684c	           0xf94c2	                                 sete dl	      7552	tc-i386.c	FUNCTION_91
0x400684f	            0x31ed	                            xor ebp, ebp	      7556	tc-i386.c	FUNCTION_91
0x4006851	           0xfb6d2	                           movzx edx, dl	      7552	tc-i386.c	FUNCTION_91
0x4006854	    0x803d00000000	                cmp byte [0x0400685b], 0	      7563	tc-i386.c	FUNCTION_91	IF_3
0x400685b	            0x740c	                            je 0x4006869	      7563	tc-i386.c	FUNCTION_91	IF_3
0x400685d	          0x83e801	                              sub eax, 1	      7566	tc-i386.c	FUNCTION_91	IF_3
0x4006860	          0x83c501	                              add ebp, 1	      7565	tc-i386.c	FUNCTION_91	IF_3
0x4006863	    0x890500000000	            mov dword [0x04006869], eax 	      7566	tc-i386.c	FUNCTION_91	IF_3
0x4006869	          0x83fa01	                              cmp edx, 1	      7569	tc-i386.c	FUNCTION_91
0x400686c	            0x19db	                            sbb ebx, ebx	      7569	tc-i386.c	FUNCTION_91
0x400686e	          0x83e302	                              and ebx, 2	      7569	tc-i386.c	FUNCTION_91
0x4006871	          0x83c302	                              add ebx, 2	      7569	tc-i386.c	FUNCTION_91
0x4006874	            0x85c0	                           test eax, eax	      7573	tc-i386.c	FUNCTION_91	IF_5
0x4006876	            0x740e	                            je 0x4006886	      7573	tc-i386.c	FUNCTION_91	IF_5
0x4006878	    0x8b0500000000	            mov eax, dword [0x0400687e] 	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400687e	            0x85c0	                           test eax, eax	      7573	tc-i386.c	FUNCTION_91	IF_5
0x4006880	     0xf84260c0000	                            je 0x40074ac	      7573	tc-i386.c	FUNCTION_91	IF_5
0x4006886	        0x8d7c1d03	                lea edi, [rbp + rbx + 3]	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400688a	          0x4863ff	                         movsxd rdi, edi	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400688d	      0xe800000000	                          call 0x4006892	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x4006892	    0x803d00000000	                cmp byte [0x04006899], 0	      7579	tc-i386.c	FUNCTION_91	IF_6
0x4006899	            0x7407	                            je 0x40068a2	      7579	tc-i386.c	FUNCTION_91	IF_6
0x400689b	          0xc60066	                    mov byte [rax], 0x66	      7580	tc-i386.c	FUNCTION_91	IF_6
0x400689e	        0x4883c001	                              add rax, 1	      7580	tc-i386.c	FUNCTION_91	IF_6
0x40068a2	     0xfb615000000	           movzx edx, byte [0x040068a9] 	      7582	tc-i386.c	FUNCTION_91	IF_7
0x40068a9	            0x84d2	                             test dl, dl	      7582	tc-i386.c	FUNCTION_91	IF_7
0x40068ab	            0x7406	                            je 0x40068b3	      7582	tc-i386.c	FUNCTION_91	IF_7
0x40068ad	            0x8810	                      mov byte [rax], dl	      7583	tc-i386.c	FUNCTION_91	IF_7
0x40068af	        0x4883c001	                              add rax, 1	      7583	tc-i386.c	FUNCTION_91	IF_7
0x40068b3	    0x8b1500000000	            mov edx, dword [0x040068b9] 	      7585	tc-i386.c	FUNCTION_91
0x40068b9	        0x488d6801	                      lea rbp, [rax + 1]	      7585	tc-i386.c	FUNCTION_91
0x40068bd	            0x8810	                      mov byte [rax], dl	      7585	tc-i386.c	FUNCTION_91
0x40068bf	    0x488b05000000	            mov rax, qword [0x040068c6] 	      7586	tc-i386.c	FUNCTION_91	IF_8
0x40068c6	        0x80781802	                cmp byte [rax + 0x18], 2	      7586	tc-i386.c	FUNCTION_91	IF_8
0x40068ca	     0xf8518020000	                           jne 0x4006ae8	      7586	tc-i386.c	FUNCTION_91	IF_8
0x40068d0	          0x83fb02	                              cmp ebx, 2	      7590	tc-i386.c	FUNCTION_91	IF_8	IF_9
0x40068d3	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7588	tc-i386.c	FUNCTION_91	IF_8
0x40068d7	     0xf84570b0000	                            je 0x4007434	      7590	tc-i386.c	FUNCTION_91	IF_8	IF_9
0x40068dd	            0x89da	                            mov edx, ebx	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x40068df	          0x4889ef	                            mov rdi, rbp	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x40068e2	      0xe800000000	                          call 0x40068e7	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x40068e7	    0x488b05000000	            mov rax, qword [0x040068ee] 	      7602	tc-i386.c	FUNCTION_91	IF_10
0x40068ee	        0x80781802	                cmp byte [rax + 0x18], 2	      7602	tc-i386.c	FUNCTION_91	IF_10
0x40068f2	            0x742c	                            je 0x4006920	      7602	tc-i386.c	FUNCTION_91	IF_10
0x40068f4	    0x4c8b25000000	            mov r12, qword [0x040068fb] 	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x40068fb	      0xba05000000	                              mov edx, 5	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x4006900	      0xbe00000000	                              mov esi, 0	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x4006905	            0x31ff	                            xor edi, edi	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x4006907	      0xe800000000	                          call 0x400690c	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400690c	          0x4c89e6	                            mov rsi, r12	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400690f	          0x4889c7	                            mov rdi, rax	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x4006912	            0x31c0	                            xor eax, eax	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x4006914	      0xe800000000	                          call 0x4006919	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x4006919	    0x488b05000000	            mov rax, qword [0x04006920] 	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x4006920	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x4006925	    0x644833142528	                xor rdx, qword fs:[0x28]	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400692e	     0xf85620e0000	                           jne 0x4007796	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x4006934	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x4006938	          0x4863fb	                         movsxd rdi, ebx	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400693b	      0xba02000000	                              mov edx, 2	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x4006940	          0x4801ef	                            add rdi, rbp	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x4006943	        0x4883c438	                           add rsp, 0x38	      7812	tc-i386.c	FUNCTION_92
0x4006947	              0x5b	                                 pop rbx	      7812	tc-i386.c	FUNCTION_92
0x4006948	              0x5d	                                 pop rbp	      7812	tc-i386.c	FUNCTION_92
0x4006949	            0x415c	                                 pop r12	      7812	tc-i386.c	FUNCTION_92
0x400694b	            0x415d	                                 pop r13	      7812	tc-i386.c	FUNCTION_92
0x400694d	            0x415e	                                 pop r14	      7812	tc-i386.c	FUNCTION_92
0x400694f	            0x415f	                                 pop r15	      7812	tc-i386.c	FUNCTION_92
0x4006951	      0xe900000000	                           jmp 0x4006956	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x4006956	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x4006960	          0x4531e4	                          xor r12d, r12d	      7352	tc-i386.c	FUNCTION_88	IF_1
0x4006963	    0x832d00000000	               sub dword [0x0400696a], 1	      7351	tc-i386.c	FUNCTION_88	IF_1
0x400696a	          0x83f801	                              cmp eax, 1	      7352	tc-i386.c	FUNCTION_88	IF_1
0x400696d	        0x410f95c4	                              setne r12b	      7352	tc-i386.c	FUNCTION_88	IF_1
0x4006971	      0xb802000000	                              mov eax, 2	      7352	tc-i386.c	FUNCTION_88	IF_1
0x4006976	      0xbd01000000	                              mov ebp, 1	      7350	tc-i386.c	FUNCTION_88	IF_1
0x400697b	      0xe9d2fcffff	                           jmp 0x4006652	      7350	tc-i386.c	FUNCTION_88	IF_1
0x4006980	    0x833d00000000	               cmp dword [0x04006987], 1	      7640	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x4006987	     0xf840c0d0000	                            je 0x4007699	      7640	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400698d	    0x8b0500000000	            mov eax, dword [0x04006993] 	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x4006993	            0x85c0	                           test eax, eax	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x4006995	     0xf859cfbffff	                           jne 0x4006537	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400699b	      0xe99efbffff	                           jmp 0x400653e	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x40069a0	            0x84c0	                             test al, al	      7459	tc-i386.c	FUNCTION_90	IF_1
0x40069a2	    0x8b2d00000000	            mov ebp, dword [0x040069a8] 	      7457	tc-i386.c	FUNCTION_90
0x40069a8	     0xf8902010000	                           jns 0x4006ab0	      7459	tc-i386.c	FUNCTION_90	IF_1
0x40069ae	    0x803d00000000	                cmp byte [0x040069b5], 0	      7463	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x40069b5	     0xf85550c0000	                           jne 0x4007610	      7463	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x40069bb	     0xfb605000000	           movzx eax, byte [0x040069c2] 	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x40069c2	      0xbb01000000	                              mov ebx, 1	      7462	tc-i386.c	FUNCTION_90	IF_1
0x40069c7	            0x89c2	                            mov edx, eax	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x40069c9	          0x83e2ef	                     and edx, 0xffffffef	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x40069cc	          0x80fa2e	                            cmp dl, 0x2e	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x40069cf	     0xf84510c0000	                            je 0x4007626	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x40069d5	     0xfb605000000	           movzx eax, byte [0x040069dc] 	      7496	tc-i386.c	FUNCTION_90	IF_7
0x40069dc	            0x84c0	                             test al, al	      7496	tc-i386.c	FUNCTION_90	IF_7
0x40069de	     0xf85040b0000	                           jne 0x40074e8	      7496	tc-i386.c	FUNCTION_90	IF_7
0x40069e4	     0xfb605000000	           movzx eax, byte [0x040069eb] 	      7503	tc-i386.c	FUNCTION_90	IF_8
0x40069eb	            0x84c0	                             test al, al	      7503	tc-i386.c	FUNCTION_90	IF_8
0x40069ed	     0xf85d90a0000	                           jne 0x40074cc	      7503	tc-i386.c	FUNCTION_90	IF_8
0x40069f3	    0x8b0500000000	            mov eax, dword [0x040069f9] 	      7503	tc-i386.c	FUNCTION_90	IF_8
0x40069f9	            0x85c0	                           test eax, eax	      7509	tc-i386.c	FUNCTION_90	IF_9
0x40069fb	            0x740e	                            je 0x4006a0b	      7509	tc-i386.c	FUNCTION_90	IF_9
0x40069fd	    0x8b0500000000	            mov eax, dword [0x04006a03] 	      7509	tc-i386.c	FUNCTION_90	IF_9
0x4006a03	            0x85c0	                           test eax, eax	      7509	tc-i386.c	FUNCTION_90	IF_9
0x4006a05	     0xf842f0c0000	                            je 0x400763a	      7509	tc-i386.c	FUNCTION_90	IF_9
0x4006a0b	     0xfb63d000000	           movzx edi, byte [0x04006a12] 	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x4006a12	             0x1df	                            add edi, ebx	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x4006a14	          0x4863ff	                         movsxd rdi, edi	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x4006a17	      0xe800000000	                          call 0x4006a1c	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x4006a1c	     0xfb615000000	           movzx edx, byte [0x04006a23] 	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a23	          0x80fa01	                               cmp dl, 1	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a26	            0x7419	                            je 0x4006a41	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a28	          0x80fa02	                               cmp dl, 2	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a2b	     0xf8535010000	                           jne 0x4006b66	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a31	    0x8b1500000000	            mov edx, dword [0x04006a37] 	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a37	        0x4883c001	                              add rax, 1	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a3b	          0xc1ea08	                              shr edx, 8	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a3e	          0x8850ff	                  mov byte [rax - 1], dl	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a41	    0x8b1500000000	            mov edx, dword [0x04006a47] 	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a47	          0x83fb04	                              cmp ebx, 4	      7526	tc-i386.c	FUNCTION_90	IF_10
0x4006a4a	        0x4c8d6001	                      lea r12, [rax + 1]	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a4e	            0x8810	                      mov byte [rax], dl	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x4006a50	            0x7509	                           jne 0x4006a5b	      7526	tc-i386.c	FUNCTION_90	IF_10
0x4006a52	          0x83fd47	                           cmp ebp, 0x47	      7526	tc-i386.c	FUNCTION_90	IF_10
0x4006a55	     0xf8458090000	                            je 0x40073b3	      7526	tc-i386.c	FUNCTION_90	IF_10
0x4006a5b	            0x89e9	                            mov ecx, ebp	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x4006a5d	      0xba01000000	                              mov edx, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x4006a62	      0xbe01000000	                              mov esi, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x4006a67	            0x89df	                            mov edi, ebx	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x4006a69	      0xe802cfffff	                          call sym.reloc	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x4006a6e	    0x488b3d000000	            mov rdi, qword [0x04006a75] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a75	          0x4189c1	                            mov r9d, eax	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x4006a78	    0x488b0d000000	            mov rcx, qword [0x04006a7f] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a7f	          0x4c89e6	                            mov rsi, r12	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a82	    0x41b801000000	                              mov r8d, 1	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a88	            0x89da	                            mov edx, ebx	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a8a	        0x488d477c	                   lea rax, [rdi + 0x7c]	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a8e	          0x4829c6	                            sub rsi, rax	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a91	      0xe800000000	                          call 0x4006a96	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4006a96	          0x83fb01	                              cmp ebx, 1	      7540	tc-i386.c	FUNCTION_90	IF_11
0x4006a99	     0xf85c5fcffff	                           jne 0x4006764	      7540	tc-i386.c	FUNCTION_90	IF_11
0x4006a9f	          0x800880	                     or byte [rax], 0x80	      7541	tc-i386.c	FUNCTION_90	IF_11
0x4006aa2	      0xe9bdfcffff	                           jmp 0x4006764	      7541	tc-i386.c	FUNCTION_90	IF_11
0x4006aa7	    0x660f1f840000	                    nop word [rax + rax]	      7541	tc-i386.c	FUNCTION_90	IF_11
0x4006ab0	    0x833d00000000	               cmp dword [0x04006ab7], 1	      7481	tc-i386.c	FUNCTION_90	ELSE_1	IF_4
0x4006ab7	     0xf849d0b0000	                            je 0x400765a	      7481	tc-i386.c	FUNCTION_90	ELSE_1	IF_4
0x4006abd	    0x803d00000000	                cmp byte [0x04006ac4], 0	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x4006ac4	     0xf85c7090000	                           jne 0x4007491	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x4006aca	      0xbb04000000	                              mov ebx, 4	      7491	tc-i386.c	FUNCTION_90	ELSE_1
0x4006acf	      0xe901ffffff	                           jmp 0x40069d5	      7491	tc-i386.c	FUNCTION_90	ELSE_1
0x4006ad4	         0xf1f4000	                         nop dword [rax]	      7491	tc-i386.c	FUNCTION_90	ELSE_1
0x4006ad8	          0x4c8b07	                     mov r8, qword [rdi]	      7402	tc-i386.c	FUNCTION_88
0x4006adb	        0x4c8b4f10	              mov r9, qword [rdi + 0x10]	      7403	tc-i386.c	FUNCTION_88
0x4006adf	      0xe962fcffff	                           jmp 0x4006746	      7403	tc-i386.c	FUNCTION_88
0x4006ae4	         0xf1f4000	                         nop dword [rax]	      7403	tc-i386.c	FUNCTION_88
0x4006ae8	    0x8b0d00000000	            mov ecx, dword [0x04006aee] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006aee	            0x31d2	                            xor edx, edx	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006af0	            0x31f6	                            xor esi, esi	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006af2	            0x89df	                            mov edi, ebx	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006af4	      0xe877ceffff	                          call sym.reloc	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006af9	    0x488b3d000000	            mov rdi, qword [0x04006b00] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b00	          0x4189c1	                            mov r9d, eax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b03	    0x488b0d000000	            mov rcx, qword [0x04006b0a] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b0a	          0x4889ee	                            mov rsi, rbp	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b0d	          0x4531c0	                            xor r8d, r8d	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b10	            0x89da	                            mov edx, ebx	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b12	        0x488d477c	                   lea rax, [rdi + 0x7c]	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b16	          0x4829c6	                            sub rsi, rax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b19	      0xe800000000	                          call 0x4006b1e	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b1e	      0xe9c4fdffff	                           jmp 0x40068e7	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b23	       0xf1f440000	                   nop dword [rax + rax]	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x4006b28	    0x8b0500000000	            mov eax, dword [0x04006b2e] 	      7560	tc-i386.c	FUNCTION_91	IF_2
0x4006b2e	      0xbd01000000	                              mov ebp, 1	      7559	tc-i386.c	FUNCTION_91	IF_2
0x4006b33	          0x83e801	                              sub eax, 1	      7560	tc-i386.c	FUNCTION_91	IF_2
0x4006b36	          0x83fa01	                              cmp edx, 1	      7561	tc-i386.c	FUNCTION_91	IF_2
0x4006b39	           0xf95c2	                                setne dl	      7561	tc-i386.c	FUNCTION_91	IF_2
0x4006b3c	    0x890500000000	            mov dword [0x04006b42], eax 	      7560	tc-i386.c	FUNCTION_91	IF_2
0x4006b42	           0xfb6d2	                           movzx edx, dl	      7561	tc-i386.c	FUNCTION_91	IF_2
0x4006b45	      0xe90afdffff	                           jmp 0x4006854	      7561	tc-i386.c	FUNCTION_91	IF_2
0x4006b4a	           0xfb6f8	                           movzx edi, al	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x4006b4d	      0xe800000000	                          call 0x4006b52	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x4006b52	    0x8b0500000000	            mov eax, dword [0x04006b58] 	      7371	tc-i386.c	FUNCTION_88	IF_4
0x4006b58	          0x83e801	                              sub eax, 1	      7371	tc-i386.c	FUNCTION_88	IF_4
0x4006b5b	    0x890500000000	            mov dword [0x04006b61], eax 	      7371	tc-i386.c	FUNCTION_88	IF_4
0x4006b61	      0xe935fbffff	                           jmp 0x400669b	      7371	tc-i386.c	FUNCTION_88	IF_4
0x4006b66	      0xba00000000	                              mov edx, 0	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x4006b6b	      0xbe621d0000	                         mov esi, 0x1d62	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x4006b70	      0xbf00000000	                              mov edi, 0	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x4006b75	      0xe800000000	                          call 0x4006b7a	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x4006b7a	      0xbf02000000	                              mov edi, 2	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x4006b7f	      0xe800000000	                          call 0x4006b84	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x4006b84	          0x4889c1	                            mov rcx, rax	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x4006b87	    0x8b1500000000	            mov edx, dword [0x04006b8d] 	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x4006b8d	          0xc1ea08	                              shr edx, 8	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x4006b90	            0x8811	                      mov byte [rcx], dl	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x4006b92	    0x8b0500000000	            mov eax, dword [0x04006b98] 	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x4006b98	          0x884101	                  mov byte [rcx + 1], al	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x4006b9b	    0xf60500000000	               test byte [0x04006ba2], 8	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x4006ba2	     0xf85f1060000	                           jne 0x4007299	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x4006ba8	    0x8b2d00000000	            mov ebp, dword [0x04006bae] 	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x4006bae	            0x85ed	                           test ebp, ebp	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x4006bb0	     0xf85a2020000	                           jne 0x4006e58	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x4006bb6	    0x8b1d00000000	            mov ebx, dword [0x04006bbc] 	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x4006bbc	            0x85db	                           test ebx, ebx	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x4006bbe	     0xf84a0fbffff	                            je 0x4006764	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x4006bc4	    0x448b0d000000	            mov r9d, dword [0x04006bcb] 	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006bcb	          0x4585c9	                           test r9d, r9d	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006bce	     0xf8490fbffff	                            je 0x4006764	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006bd4	      0x488b442408	                mov rax, qword [rsp + 8]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4006bd9	    0x41bf00000000	                             mov r15d, 0	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4006bdf	            0x31db	                            xor ebx, ebx	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006be1	          0x4c89fd	                            mov rbp, r15	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006be4	        0x4c8d687c	                   lea r13, [rax + 0x7c]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4006be8	     0xf1f84000000	                   nop dword [rax + rax]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4006bf0	    0x488b05000000	            mov rax, qword [0x04006bf7] 	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x4006bf7	          0x4885c0	                           test rax, rax	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x4006bfa	            0x7409	                            je 0x4006c05	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x4006bfc	          0x395804	                cmp dword [rax + 4], ebx	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x4006bff	     0xf84fb000000	                            je 0x4006d00	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x4006c05	        0xf64579fc	           test byte [rbp + 0x79], 0xfc 	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x4006c09	     0xf84f1000000	                            je 0x4006d00	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x4006c0f	    0x488b85a00000	            mov rax, qword [rbp + 0xa0] 	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x4006c16	        0x80781802	                cmp byte [rax + 0x18], 2	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x4006c1a	     0xf84f0010000	                            je 0x4006e10	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x4006c20	            0x89d9	                            mov ecx, ebx	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006c22	     0xfb604cd0000	                 movzx eax, byte [rcx*8]	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006c2a	            0x84c0	                             test al, al	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006c2c	     0xf88c6010000	                            js 0x4006df8	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006c32	            0xa804	                              test al, 4	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006c34	            0x752a	                           jne 0x4006c60	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006c36	            0xa808	                              test al, 8	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006c38	            0x7526	                           jne 0x4006c60	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006c3a	          0xc0e804	                               shr al, 4	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c3d	          0x83e001	                              and eax, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c40	            0x3c01	                               cmp al, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c42	          0x4519c0	                            sbb r8d, r8d	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c45	        0x4183e002	                              and r8d, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c49	        0x4183c002	                              add r8d, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c4d	            0x3c01	                               cmp al, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c4f	          0x4819ff	                            sbb rdi, rdi	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c52	          0x4589c6	                           mov r14d, r8d	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c55	          0x83e702	                              and edi, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c58	        0x4883c702	                              add rdi, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c5c	            0xeb13	                           jmp 0x4006c71	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c5e	            0x6690	                                     nop	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006c60	    0x41b801000000	                              mov r8d, 1	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006c66	      0xbf01000000	                              mov edi, 1	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006c6b	    0x41be01000000	                             mov r14d, 1	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006c71	            0x31d2	                            xor edx, edx	      8016	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_2
0x4006c73	    0xf604cd000000	                 test byte [rcx*8], 0x40	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c7b	            0x7423	                            je 0x4006ca0	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c7d	     0xfb605000000	           movzx eax, byte [0x04006c84] 	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c84	      0xba01000000	                              mov edx, 1	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c89	            0x3c71	                            cmp al, 0x71	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c8b	            0x7413	                            je 0x4006ca0	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c8d	            0x31d2	                            xor edx, edx	      8016	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_2
0x4006c8f	            0x84c0	                             test al, al	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c91	     0xf840a070000	                            je 0x40073a1	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006c97	    0x660f1f840000	                    nop word [rax + rax]	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006ca0	      0x4489442418	             mov dword [rsp + 0x18], r8d	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006ca5	          0x891424	                    mov dword [rsp], edx	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x4006ca8	      0xe800000000	                          call 0x4006cad	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x4006cad	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x4006cb2	    0x418b8fdc0000	            mov ecx, dword [r15 + 0xdc] 	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x4006cb9	            0x31f6	                            xor esi, esi	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x4006cbb	          0x8b1424	                    mov edx, dword [rsp]	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x4006cbe	          0x4989c4	                            mov r12, rax	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x4006cc1	          0x4489c7	                            mov edi, r8d	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x4006cc4	      0xe8a7ccffff	                          call sym.reloc	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x4006cc9	          0x4189c1	                            mov r9d, eax	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x4006ccc	          0x8d40ff	                      lea eax, [rax - 1]	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006ccf	          0x83f801	                              cmp eax, 1	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006cd2	            0x7648	                           jbe 0x4006d1c	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006cd4	    0x4181f9840100	                          cmp r9d, 0x184	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006cdb	            0x743f	                            je 0x4006d1c	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006cdd	    0x488b8da00000	            mov rcx, qword [rbp + 0xa0] 	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006ce4	    0x488b3d000000	            mov rdi, qword [0x04006ceb] 	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006ceb	          0x4c89e6	                            mov rsi, r12	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006cee	        0x488d477c	                   lea rax, [rdi + 0x7c]	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006cf2	          0x4829c6	                            sub rsi, rax	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006cf5	          0x4531c0	                            xor r8d, r8d	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x4006cf8	          0x4489f2	                           mov edx, r14d	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x4006cfb	      0xe800000000	                          call 0x4006d00	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x4006d00	          0x83c301	                              add ebx, 1	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006d03	        0x4883c508	                              add rbp, 8	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006d07	        0x4983c704	                              add r15, 4	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006d0b	    0x3b1d00000000	            cmp ebx, dword [0x04006d11] 	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006d11	     0xf82d9feffff	                            jb 0x4006bf0	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006d17	      0xe948faffff	                           jmp 0x4006764	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x4006d1c	    0x488b05000000	            mov rax, qword [0x04006d23] 	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d23	    0x488b8da00000	            mov rcx, qword [rbp + 0xa0] 	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d2a	          0x4885c0	                           test rax, rax	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d2d	            0x74b5	                            je 0x4006ce4	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d2f	          0x483b01	                    cmp rax, qword [rcx]	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d32	          0x4889ca	                            mov rdx, rcx	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d35	            0x75ad	                           jne 0x4006ce4	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d37	         0xfb64118	           movzx eax, byte [rcx + 0x18] 	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d3b	            0x3c03	                               cmp al, 3	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d3d	            0x7422	                            je 0x4006d61	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d3f	            0x3c13	                            cmp al, 0x13	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d41	            0x75a1	                           jne 0x4006ce4	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x4006d43	        0x488b7908	                mov rdi, qword [rcx + 8]	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x4006d47	        0x44890c24	                    mov dword [rsp], r9d	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x4006d4b	      0xe800000000	                          call 0x4006d50	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x4006d50	        0x80781814	            cmp byte [rax + 0x18], 0x14 	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x4006d54	        0x448b0c24	                    mov r9d, dword [rsp]	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x4006d58	            0x7583	                           jne 0x4006cdd	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x4006d5a	    0x488b95a00000	            mov rdx, qword [rbp + 0xa0] 	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x4006d61	    0x488b3d000000	            mov rdi, qword [0x04006d68] 	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4006d68	      0x48397c2408	                cmp qword [rsp + 8], rdi	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4006d6d	     0xf84f1090000	                            je 0x4007764	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4006d73	      0x488b442408	                mov rax, qword [rsp + 8]	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006d78	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006d7c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006d80	          0x4889f1	                            mov rcx, rsi	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006d83	      0x482b4c2410	             sub rcx, qword [rsp + 0x10]	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006d88	          0x4839c7	                            cmp rdi, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006d8b	        0x48893424	                    mov qword [rsp], rsi	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006d8f	            0x7421	                            je 0x4006db2	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006d91	          0x4885c0	                           test rax, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006d94	            0x750f	                           jne 0x4006da5	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006d96	            0xeb1a	                           jmp 0x4006db2	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006d98	     0xf1f84000000	                   nop dword [rax + rax]	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006da0	          0x4839c7	                            cmp rdi, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006da3	            0x740d	                            je 0x4006db2	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006da5	        0x48034810	             add rcx, qword [rax + 0x10]	      8085	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006da9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006dad	          0x4885c0	                           test rax, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006db0	            0x75ee	                           jne 0x4006da0	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x4006db2	        0x488d477c	                   lea rax, [rdi + 0x7c]	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006db6	          0x4c89e6	                            mov rsi, r12	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006db9	          0x4829c6	                            sub rsi, rax	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006dbc	          0x4801f1	                            add rcx, rsi	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x4006dbf	    0x448b05000000	            mov r8d, dword [0x04006dc6] 	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x4006dc6	          0x4585c0	                           test r8d, r8d	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x4006dc9	     0xf845f090000	                            je 0x400772e	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x4006dcf	        0x4183fe04	                             cmp r14d, 4	      8091	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x4006dd3	     0xf849e090000	                            je 0x4007777	      8091	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x4006dd9	        0x4183fe08	                             cmp r14d, 8	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x4006ddd	      0xb891010000	                          mov eax, 0x191	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x4006de2	        0x440f44c8	                          cmove r9d, eax	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x4006de6	        0x48014a10	            add qword [rdx + 0x10], rcx 	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x4006dea	          0x4889d1	                            mov rcx, rdx	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x4006ded	      0xe903ffffff	                           jmp 0x4006cf5	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x4006df2	    0x660f1f440000	                    nop word [rax + rax]	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x4006df8	    0x41b808000000	                              mov r8d, 8	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006dfe	      0xbf08000000	                              mov edi, 8	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006e03	    0x41be08000000	                             mov r14d, 8	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4006e09	      0xe963feffff	                           jmp 0x4006c71	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4006e0e	            0x6690	                                     nop	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4006e10	            0x89da	                            mov edx, ebx	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006e12	     0xfb614d50000	                 movzx edx, byte [rdx*8]	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006e1a	            0x84d2	                             test dl, dl	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006e1c	     0xf8848050000	                            js 0x400736a	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006e22	          0xf6c204	                              test dl, 4	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006e25	     0xf85d5070000	                           jne 0x4007600	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006e2b	          0xf6c208	                              test dl, 8	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006e2e	     0xf85cc070000	                           jne 0x4007600	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006e34	          0xc0ea04	                               shr dl, 4	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e37	          0x83e201	                              and edx, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e3a	          0x80fa01	                               cmp dl, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e3d	          0x4d19e4	                            sbb r12, r12	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e40	        0x4183e402	                             and r12d, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e44	        0x4983c402	                              add r12, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e48	          0x80fa01	                               cmp dl, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e4b	            0x19d2	                            sbb edx, edx	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e4d	          0x83e202	                              and edx, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e50	          0x83c202	                              add edx, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e53	      0xe91d050000	                           jmp 0x4007375	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006e58	    0x8b3500000000	            mov esi, dword [0x04006e5e] 	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4006e5e	            0x85f6	                           test esi, esi	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4006e60	     0xf84fef8ffff	                            je 0x4006764	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4006e66	      0x488b442408	                mov rax, qword [rsp + 8]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4006e6b	      0xbb00000000	                              mov ebx, 0	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4006e70	          0x4531ff	                          xor r15d, r15d	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4006e73	          0x4989de	                            mov r14, rbx	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4006e76	        0x4883c07c	                           add rax, 0x7c	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4006e7a	      0x4889442418	             mov qword [rsp + 0x18], rax	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4006e7f	              0x90	                                     nop	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4006e80	        0xf6437a1f	           test byte [rbx + 0x7a], 0x1f 	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x4006e84	     0xf8496010000	                            je 0x4007020	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x4006e8a	    0x488bbba00000	            mov rdi, qword [rbx + 0xa0] 	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x4006e91	          0x4489f8	                           mov eax, r15d	      7821	tc-i386.c	FUNCTION_93	IF_1
0x4006e94	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7821	tc-i386.c	FUNCTION_93	IF_1
0x4006e9c	        0x807f1802	                cmp byte [rdi + 0x18], 2	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x4006ea0	     0xf848a020000	                            je 0x4007130	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x4006ea6	            0xa810	                           test al, 0x10	      7821	tc-i386.c	FUNCTION_93	IF_1
0x4006ea8	     0xf853a020000	                           jne 0x40070e8	      7821	tc-i386.c	FUNCTION_93	IF_1
0x4006eae	            0xa801	                              test al, 1	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x4006eb0	     0xf859a080000	                           jne 0x4007750	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x4006eb6	            0x89c2	                            mov edx, eax	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4006eb8	    0x458baec80000	           mov r13d, dword [r14 + 0xc8] 	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x4006ebf	            0xd0ea	                               shr dl, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4006ec1	          0x83e201	                              and edx, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4006ec4	          0x80fa01	                               cmp dl, 1	      7819	tc-i386.c	FUNCTION_93
0x4006ec7	            0x19ed	                            sbb ebp, ebp	      7819	tc-i386.c	FUNCTION_93
0x4006ec9	          0xc0e803	                               shr al, 3	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x4006ecc	        0x4183e501	                             and r13d, 1	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x4006ed0	          0x83e502	                              and ebp, 2	      7819	tc-i386.c	FUNCTION_93
0x4006ed3	            0x89c2	                            mov edx, eax	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x4006ed5	          0x83c502	                              add ebp, 2	      7819	tc-i386.c	FUNCTION_93
0x4006ed8	          0x83e201	                              and edx, 1	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x4006edb	          0x4585ed	                         test r13d, r13d	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x4006ede	     0xf84a5000000	                            je 0x4006f89	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x4006ee4	    0x448b1d000000	           mov r11d, dword [0x04006eeb] 	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x4006eeb	          0x4585db	                         test r11d, r11d	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x4006eee	     0xf8495000000	                            je 0x4006f89	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x4006ef4	            0x85f6	                           test esi, esi	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006ef6	     0xf8409080000	                            je 0x4007705	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006efc	            0x31c0	                            xor eax, eax	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006efe	          0x4531c9	                            xor r9d, r9d	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006f01	            0xeb49	                           jmp 0x4006f4c	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006f03	       0xf1f440000	                   nop dword [rax + rax]	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006f08	          0xf6c104	                              test cl, 4	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006f0b	     0xf852f010000	                           jne 0x4007040	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006f11	          0xf6c108	                              test cl, 8	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006f14	     0xf8526010000	                           jne 0x4007040	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4006f1a	          0xc0e904	                               shr cl, 4	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f1d	          0x83e101	                              and ecx, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f20	          0x80f901	                               cmp cl, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f23	          0x4d19e4	                            sbb r12, r12	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f26	        0x4183e402	                             and r12d, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f2a	        0x4983c402	                              add r12, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f2e	          0x80f901	                               cmp cl, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f31	          0x4519c9	                            sbb r9d, r9d	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f34	        0x4183e102	                              and r9d, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f38	        0x4183c102	                              add r9d, 2	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f3c	         0xf1f4000	                         nop dword [rax]	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4006f40	        0x4c296710	             sub qword [rdi + 0x10], r12	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x4006f44	        0x4883c001	                              add rax, 1	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x4006f48	            0x39c6	                            cmp esi, eax	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006f4a	            0x7634	                           jbe 0x4006f80	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x4006f4c	    0xf604c5000000	                 test byte [rax*8], 0xfc	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x4006f54	            0x89c1	                            mov ecx, eax	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x4006f56	            0x74ec	                            je 0x4006f44	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x4006f58	          0x4585c9	                           test r9d, r9d	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x4006f5b	     0xf85d8070000	                           jne 0x4007739	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x4006f61	     0xfb60ccd0000	                 movzx ecx, byte [rcx*8]	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006f69	            0x84c9	                             test cl, cl	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006f6b	            0x799b	                           jns 0x4006f08	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006f6d	    0x41bc08000000	                             mov r12d, 8	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4006f73	    0x41b908000000	                              mov r9d, 8	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4006f79	            0xebc5	                           jmp 0x4006f40	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4006f7b	       0xf1f440000	                   nop dword [rax + rax]	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4006f80	          0x4585c9	                           test r9d, r9d	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x4006f83	     0xf847c070000	                            je 0x4007705	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x4006f89	          0x4863fd	                         movsxd rdi, ebp	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x4006f8c	          0x891424	                    mov dword [rsp], edx	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x4006f8f	      0xe800000000	                          call 0x4006f94	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x4006f94	    0x418b8edc0000	            mov ecx, dword [r14 + 0xdc] 	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x4006f9b	          0x8b1424	                    mov edx, dword [rsp]	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x4006f9e	          0x4489ee	                           mov esi, r13d	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x4006fa1	            0x89ef	                            mov edi, ebp	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x4006fa3	          0x4989c4	                            mov r12, rax	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x4006fa6	      0xe8c5c9ffff	                          call sym.reloc	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x4006fab	          0x4189c1	                            mov r9d, eax	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x4006fae	    0x488b05000000	            mov rax, qword [0x04006fb5] 	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fb5	    0x488b8ba00000	            mov rcx, qword [rbx + 0xa0] 	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fbc	          0x4885c0	                           test rax, rax	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fbf	            0x740c	                            je 0x4006fcd	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fc1	          0x483b01	                    cmp rax, qword [rcx]	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fc4	          0x4889ca	                            mov rdx, rcx	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fc7	     0xf84e3010000	                            je 0x40071b0	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fcd	    0x488b3d000000	            mov rdi, qword [0x04006fd4] 	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fd4	          0x4c89e6	                            mov rsi, r12	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fd7	        0x488d477c	                   lea rax, [rdi + 0x7c]	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fdb	          0x4829c6	                            sub rsi, rax	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4006fde	          0x4589e8	                           mov r8d, r13d	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x4006fe1	            0x89ea	                            mov edx, ebp	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x4006fe3	      0xe800000000	                          call 0x4006fe8	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x4006fe8	    0x448b2d000000	           mov r13d, dword [0x04006fef] 	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4006fef	          0x4585ed	                         test r13d, r13d	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4006ff2	     0xf8518010000	                           jne 0x4007110	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4006ff8	    0x448b25000000	           mov r12d, dword [0x04006fff] 	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4006fff	          0x4585e4	                         test r12d, r12d	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007002	            0x751c	                           jne 0x4007020	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007004	    0x8b2d00000000	            mov ebp, dword [0x0400700a] 	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400700a	            0x85ed	                           test ebp, ebp	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400700c	            0x7512	                           jne 0x4007020	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400700e	    0x833d00000000	               cmp dword [0x04007015], 5	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007015	            0x7441	                            je 0x4007058	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007017	    0x660f1f840000	                    nop word [rax + rax]	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007020	    0x8b3500000000	            mov esi, dword [0x04007026] 	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007026	        0x4183c701	                             add r15d, 1	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400702a	        0x4883c308	                              add rbx, 8	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400702e	        0x4983c604	                              add r14, 4	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4007032	          0x4139f7	                           cmp r15d, esi	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4007035	     0xf8245feffff	                            jb 0x4006e80	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400703b	      0xe976fbffff	                           jmp 0x4006bb6	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x4007040	    0x41bc01000000	                             mov r12d, 1	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4007046	    0x41b901000000	                              mov r9d, 1	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400704c	      0xe9effeffff	                           jmp 0x4006f40	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4007051	     0xf1f80000000	                         nop dword [rax]	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4007058	    0x8b3500000000	            mov esi, dword [0x0400705e] 	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400705e	          0x83fe01	                              cmp esi, 1	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007061	     0xf8495040000	                            je 0x40074fc	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007067	          0x83fe02	                              cmp esi, 2	      7956	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400706a	            0x75ba	                           jne 0x4007026	      7956	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400706c	    0x8b1500000000	            mov edx, dword [0x04007072] 	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007072	    0x81fa8b000000	                           cmp edx, 0x8b	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007078	            0x7413	                            je 0x400708d	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400707a	    0x81fa85000000	                           cmp edx, 0x85	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007080	            0x740b	                            je 0x400708d	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007082	    0x81e2c7000000	                           and edx, 0xc7	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007088	          0x83fa03	                              cmp edx, 3	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400708b	            0x7599	                           jne 0x4007026	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400708d	    0x448b1d000000	           mov r11d, dword [0x04007094] 	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x4007094	          0x4585db	                         test r11d, r11d	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x4007097	     0xf8460060000	                            je 0x40076fd	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400709d	    0x448b15000000	           mov r10d, dword [0x040070a4] 	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070a4	           0xfb608	                   movzx ecx, byte [rax]	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070a7	          0x4585d2	                         test r10d, r10d	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070aa	           0xf95c2	                                setne dl	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070ad	          0x83e1f7	                     and ecx, 0xfffffff7	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070b0	          0xc1e203	                              shl edx, 3	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070b3	             0x9ca	                             or edx, ecx	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070b5	            0x8810	                      mov byte [rax], dl	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x40070b7	    0x488b0d000000	            mov rcx, qword [0x040070be] 	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070be	          0x4885c9	                           test rcx, rcx	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070c1	     0xf845fffffff	                            je 0x4007026	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070c7	         0xfb64911	           movzx ecx, byte [rcx + 0x11] 	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070cb	          0x83c102	                              add ecx, 2	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070ce	          0x80f901	                               cmp cl, 1	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070d1	     0xf874fffffff	                            ja 0x4007026	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070d7	          0x83ca10	                            or edx, 0x10	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070da	            0x8810	                      mov byte [rax], dl	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070dc	      0xe945ffffff	                           jmp 0x4007026	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070e1	     0xf1f80000000	                         nop dword [rax]	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x40070e8	    0x458baec80000	           mov r13d, dword [r14 + 0xc8] 	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x40070ef	            0x89c2	                            mov edx, eax	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x40070f1	          0xc0ea03	                               shr dl, 3	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x40070f4	          0x83e201	                              and edx, 1	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x40070f7	        0x4183e501	                             and r13d, 1	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x40070fb	            0xa801	                              test al, 1	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x40070fd	     0xf854d060000	                           jne 0x4007750	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x4007103	      0xbd08000000	                              mov ebp, 8	      7822	tc-i386.c	FUNCTION_93	IF_1
0x4007108	      0xe9cefdffff	                           jmp 0x4006edb	      7822	tc-i386.c	FUNCTION_93	IF_1
0x400710d	           0xf1f00	                         nop dword [rax]	      7822	tc-i386.c	FUNCTION_93	IF_1
0x4007110	    0x8b1500000000	            mov edx, dword [0x04007116] 	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007116	          0x83fa02	                              cmp edx, 2	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007119	     0xf8439ffffff	                            je 0x4007058	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400711f	            0x85d2	                           test edx, edx	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007121	     0xf85f9feffff	                           jne 0x4007020	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007127	      0xe9e2feffff	                           jmp 0x400700e	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400712c	         0xf1f4000	                         nop dword [rax]	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007130	            0xa810	                           test al, 0x10	      7821	tc-i386.c	FUNCTION_93	IF_1
0x4007132	            0x7564	                           jne 0x4007198	      7821	tc-i386.c	FUNCTION_93	IF_1
0x4007134	            0xa801	                              test al, 1	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x4007136	     0xf859c000000	                           jne 0x40071d8	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400713c	            0xd0e8	                               shr al, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400713e	          0x83e001	                              and eax, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4007141	            0x3c01	                               cmp al, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4007143	          0x4d19ed	                            sbb r13, r13	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4007146	        0x4183e502	                             and r13d, 2	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400714a	        0x4983c502	                              add r13, 2	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400714e	            0x3c01	                               cmp al, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4007150	          0x4519e4	                          sbb r12d, r12d	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4007153	        0x4183e402	                             and r12d, 2	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x4007157	        0x4183c402	                             add r12d, 2	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400715b	    0x8b0d00000000	            mov ecx, dword [0x04007161] 	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x4007161	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x4007165	          0x4489e6	                           mov esi, r12d	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x4007168	          0x48d3ff	                             sar rdi, cl	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400716b	      0xe890cbffff	                call sym.offset_in_range	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x4007170	          0x4c89ef	                            mov rdi, r13	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x4007173	          0x4889c5	                            mov rbp, rax	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x4007176	      0xe800000000	                          call 0x400717b	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400717b	          0x4889ee	                            mov rsi, rbp	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400717e	          0x4489e2	                           mov edx, r12d	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x4007181	          0x4889c7	                            mov rdi, rax	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x4007184	      0xe800000000	                          call 0x4007189	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x4007189	    0x8b3500000000	            mov esi, dword [0x0400718f] 	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400718f	      0xe992feffff	                           jmp 0x4007026	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x4007194	         0xf1f4000	                         nop dword [rax]	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x4007198	    0x41bd08000000	                             mov r13d, 8	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400719e	    0x41bc08000000	                             mov r12d, 8	      7822	tc-i386.c	FUNCTION_93	IF_1
0x40071a4	            0xebb5	                           jmp 0x400715b	      7822	tc-i386.c	FUNCTION_93	IF_1
0x40071a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7822	tc-i386.c	FUNCTION_93	IF_1
0x40071b0	        0x4183f902	                              cmp r9d, 2	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071b4	            0x7443	                            je 0x40071f9	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071b6	    0x4181f9840100	                          cmp r9d, 0x184	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071bd	            0x743a	                            je 0x40071f9	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071bf	        0x4183f901	                              cmp r9d, 1	      7902	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071c3	            0x7424	                            je 0x40071e9	      7902	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071c5	        0x4183f909	                              cmp r9d, 9	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071c9	     0xf85fefdffff	                           jne 0x4006fcd	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071cf	            0xeb55	                           jmp 0x4007226	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071d1	     0xf1f80000000	                         nop dword [rax]	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071d8	    0x41bd01000000	                             mov r13d, 1	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x40071de	    0x41bc01000000	                             mov r12d, 1	      7824	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x40071e4	      0xe972ffffff	                           jmp 0x400715b	      7824	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x40071e9	    0x448b15000000	           mov r10d, dword [0x040071f0] 	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071f0	          0x4585d2	                         test r10d, r10d	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071f3	     0xf84d4fdffff	                            je 0x4006fcd	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071f9	         0xfb64218	           movzx eax, byte [rdx + 0x18] 	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071fd	            0x3c03	                               cmp al, 3	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x40071ff	            0x7425	                            je 0x4007226	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4007201	            0x3c13	                            cmp al, 0x13	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4007203	            0x75c0	                           jne 0x40071c5	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x4007205	        0x488b7a08	                mov rdi, qword [rdx + 8]	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x4007209	        0x44890c24	                    mov dword [rsp], r9d	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400720d	      0xe800000000	                          call 0x4007212	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x4007212	        0x80781814	            cmp byte [rax + 0x18], 0x14 	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x4007216	    0x488b93a00000	            mov rdx, qword [rbx + 0xa0] 	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400721d	        0x448b0c24	                    mov r9d, dword [rsp]	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x4007221	          0x4889d1	                            mov rcx, rdx	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x4007224	            0x759f	                           jne 0x40071c5	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x4007226	    0x488b3d000000	            mov rdi, qword [0x0400722d] 	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400722d	      0x48397c2408	                cmp qword [rsp + 8], rdi	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4007232	     0xf84e1040000	                            je 0x4007719	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4007238	      0x488b742408	                mov rsi, qword [rsp + 8]	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400723d	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x4007241	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007245	        0x48890424	                    mov qword [rsp], rax	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x4007249	      0x482b442410	             sub rax, qword [rsp + 0x10]	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400724e	          0x4839f7	                            cmp rdi, rsi	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007251	            0x7512	                           jne 0x4007265	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007253	            0xeb15	                           jmp 0x400726a	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007255	           0xf1f00	                         nop dword [rax]	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007258	        0x48034610	             add rax, qword [rsi + 0x10]	      7922	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400725c	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007260	          0x4839f7	                            cmp rdi, rsi	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007263	            0x7405	                            je 0x400726a	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007265	          0x4885f6	                           test rsi, rsi	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x4007268	            0x75ee	                           jne 0x4007258	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400726a	        0x488d777c	                   lea rsi, [rdi + 0x7c]	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400726e	          0x4929f4	                            sub r12, rsi	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x4007271	          0x4c89e6	                            mov rsi, r12	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x4007274	          0x4c01e0	                            add rax, r12	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x4007277	    0x448b05000000	            mov r8d, dword [0x0400727e] 	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400727e	          0x4585c0	                           test r8d, r8d	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x4007281	     0xf85f9030000	                           jne 0x4007680	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x4007287	        0x48014210	            add qword [rdx + 0x10], rax 	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400728b	          0x4889d1	                            mov rcx, rdx	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400728e	    0x41b96b010000	                          mov r9d, 0x16b	      7928	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x4007294	      0xe945fdffff	                           jmp 0x4006fde	      7928	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x4007299	    0x8b0500000000	            mov eax, dword [0x0400729f] 	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400729f	    0x8d3cc5000000	                        lea edi, [rax*8]	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x40072a6	    0x8b0500000000	            mov eax, dword [0x040072ac] 	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x40072ac	          0xc1e006	                              shl eax, 6	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x40072af	             0x9c7	                             or edi, eax	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x40072b1	     0xb3d00000000	              or edi, dword [0x040072b7]	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x40072b7	      0xe800000000	                          call 0x40072bc	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x40072bc	    0x833d00000000	               cmp dword [0x040072c3], 4	      7791	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072c3	     0xf85dff8ffff	                           jne 0x4006ba8	      7791	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072c9	    0x833d00000000	               cmp dword [0x040072d0], 3	      7792	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072d0	     0xf84d2f8ffff	                            je 0x4006ba8	      7792	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072d6	    0x488b05000000	            mov rax, qword [0x040072dd] 	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072dd	          0x4885c0	                           test rax, rax	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072e0	            0x740a	                            je 0x40072ec	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072e2	        0xf6400b40	            test byte [rax + 0xb], 0x40 	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072e6	     0xf85bcf8ffff	                           jne 0x4006ba8	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x40072ec	    0x8b0500000000	            mov eax, dword [0x040072f2] 	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x40072f2	    0x8d3cc5000000	                        lea edi, [rax*8]	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x40072f9	    0x8b0500000000	            mov eax, dword [0x040072ff] 	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x40072ff	          0xc1e006	                              shl eax, 6	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x4007302	             0x9c7	                             or edi, eax	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x4007304	     0xb3d00000000	              or edi, dword [0x0400730a]	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400730a	      0xe800000000	                          call 0x400730f	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400730f	      0xe994f8ffff	                           jmp 0x4006ba8	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x4007314	      0xbf04000000	                              mov edi, 4	      7760	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_22
0x4007319	      0xe800000000	                          call 0x400731e	      7760	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_22
0x400731e	     0xfb615000000	           movzx edx, byte [0x04007325] 	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4007325	        0x488d4802	                      lea rcx, [rax + 2]	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4007329	            0x8810	                      mov byte [rax], dl	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400732b	     0xfb715000000	           movzx edx, word [0x04007332] 	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4007332	          0x885001	                  mov byte [rax + 1], dl	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4007335	      0xe94df8ffff	                           jmp 0x4006b87	      7763	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400733a	      0xbf03000000	                              mov edi, 3	      7765	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_23
0x400733f	      0xe800000000	                          call 0x4007344	      7765	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_23
0x4007344	     0xfb715000000	           movzx edx, word [0x0400734b] 	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400734b	        0x488d4801	                      lea rcx, [rax + 1]	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400734f	            0x8810	                      mov byte [rax], dl	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4007351	      0xe931f8ffff	                           jmp 0x4006b87	      7767	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x4007356	      0xba00000000	                              mov edx, 0	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400735b	      0xbe151e0000	                         mov esi, 0x1e15	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x4007360	      0xbf00000000	                              mov edi, 0	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x4007365	      0xe800000000	                          call 0x400736a	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400736a	    0x41bc08000000	                             mov r12d, 8	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4007370	      0xba08000000	                              mov edx, 8	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4007375	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x4007379	            0x89d6	                            mov esi, edx	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400737b	          0x891424	                    mov dword [rsp], edx	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400737e	      0xe87dc9ffff	                call sym.offset_in_range	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x4007383	          0x4c89e7	                            mov rdi, r12	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x4007386	          0x4989c6	                            mov r14, rax	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x4007389	      0xe800000000	                          call 0x400738e	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400738e	          0x8b1424	                    mov edx, dword [rsp]	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x4007391	          0x4c89f6	                            mov rsi, r14	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x4007394	          0x4889c7	                            mov rdi, rax	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x4007397	      0xe800000000	                          call 0x400739c	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400739c	      0xe95ff9ffff	                           jmp 0x4006d00	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x40073a1	     0xfb615000000	           movzx edx, byte [0x040073a8] 	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x40073a8	          0xc0ea03	                               shr dl, 3	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x40073ab	          0x83e201	                              and edx, 1	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x40073ae	      0xe9edf8ffff	                           jmp 0x4006ca0	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x40073b3	    0x488b05000000	            mov rax, qword [0x040073ba] 	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x40073ba	          0x488b38	                    mov rdi, qword [rax]	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x40073bd	      0xe80ee5ffff	                   call sym.need_plt32_p	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x40073c2	          0x83f801	                              cmp eax, 1	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x40073c5	      0xbf04000000	                              mov edi, 4	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x40073ca	      0xba01000000	                              mov edx, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x40073cf	            0x19c9	                            sbb ecx, ecx	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x40073d1	      0xbe01000000	                              mov esi, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x40073d6	    0x81e1c9feffff	                     and ecx, 0xfffffec9	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x40073dc	    0x81c17e010000	                          add ecx, 0x17e	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x40073e2	      0xe889c5ffff	                          call sym.reloc	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x40073e7	          0x4189c1	                            mov r9d, eax	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x40073ea	    0x488b3d000000	            mov rdi, qword [0x040073f1] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x40073f1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x40073f6	    0x644833042528	                xor rax, qword fs:[0x28]	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x40073ff	     0xf8591030000	                           jne 0x4007796	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4007405	    0x488b0d000000	            mov rcx, qword [0x0400740c] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400740c	        0x4883c438	                           add rsp, 0x38	      7812	tc-i386.c	FUNCTION_92
0x4007410	          0x4c89e6	                            mov rsi, r12	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4007413	              0x5b	                                 pop rbx	      7812	tc-i386.c	FUNCTION_92
0x4007414	              0x5d	                                 pop rbp	      7812	tc-i386.c	FUNCTION_92
0x4007415	            0x415c	                                 pop r12	      7812	tc-i386.c	FUNCTION_92
0x4007417	            0x415d	                                 pop r13	      7812	tc-i386.c	FUNCTION_92
0x4007419	            0x415e	                                 pop r14	      7812	tc-i386.c	FUNCTION_92
0x400741b	            0x415f	                                 pop r15	      7812	tc-i386.c	FUNCTION_92
0x400741d	        0x488d577c	                   lea rdx, [rdi + 0x7c]	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4007421	    0x41b801000000	                              mov r8d, 1	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4007427	          0x4829d6	                            sub rsi, rdx	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400742a	      0xba04000000	                              mov edx, 4	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400742f	      0xe900000000	                           jmp 0x4007434	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x4007434	    0x4881feffff00	                         cmp rsi, 0xffff	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400743b	     0xf869cf4ffff	                           jbe 0x40068dd	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x4007441	    0x488d86008000	                 lea rax, [rsi + 0x8000]	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x4007448	    0x483dffff0000	                         cmp rax, 0xffff	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400744e	     0xf8689f4ffff	                           jbe 0x40068dd	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x4007454	            0x31ff	                            xor edi, edi	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007456	      0xba05000000	                              mov edx, 5	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400745b	      0xbe00000000	                              mov esi, 0	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007460	      0xe800000000	                          call 0x4007465	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007465	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400746a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007473	     0xf851d030000	                           jne 0x4007796	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007479	        0x4883c438	                           add rsp, 0x38	      7812	tc-i386.c	FUNCTION_92
0x400747d	          0x4889c7	                            mov rdi, rax	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007480	            0x31c0	                            xor eax, eax	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007482	              0x5b	                                 pop rbx	      7812	tc-i386.c	FUNCTION_92
0x4007483	              0x5d	                                 pop rbp	      7812	tc-i386.c	FUNCTION_92
0x4007484	            0x415c	                                 pop r12	      7812	tc-i386.c	FUNCTION_92
0x4007486	            0x415d	                                 pop r13	      7812	tc-i386.c	FUNCTION_92
0x4007488	            0x415e	                                 pop r14	      7812	tc-i386.c	FUNCTION_92
0x400748a	            0x415f	                                 pop r15	      7812	tc-i386.c	FUNCTION_92
0x400748c	      0xe900000000	                           jmp 0x4007491	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x4007491	      0xbf66000000	                           mov edi, 0x66	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x4007496	      0xe800000000	                          call 0x400749b	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x400749b	    0x832d00000000	               sub dword [0x040074a2], 1	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x40074a2	      0xbb02000000	                              mov ebx, 2	      7493	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x40074a7	      0xe929f5ffff	                           jmp 0x40069d5	      7493	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x40074ac	            0x31ff	                            xor edi, edi	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074ae	      0xba05000000	                              mov edx, 5	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074b3	      0xbe00000000	                              mov esi, 0	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074b8	      0xe800000000	                          call 0x40074bd	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074bd	          0x4889c7	                            mov rdi, rax	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074c0	            0x31c0	                            xor eax, eax	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074c2	      0xe800000000	                          call 0x40074c7	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074c7	      0xe9baf3ffff	                           jmp 0x4006886	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x40074cc	           0xfb6f8	                           movzx edi, al	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x40074cf	      0xe800000000	                          call 0x40074d4	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x40074d4	    0x8b0500000000	            mov eax, dword [0x040074da] 	      7506	tc-i386.c	FUNCTION_90	IF_8
0x40074da	          0x83e801	                              sub eax, 1	      7506	tc-i386.c	FUNCTION_90	IF_8
0x40074dd	    0x890500000000	            mov dword [0x040074e3], eax 	      7506	tc-i386.c	FUNCTION_90	IF_8
0x40074e3	      0xe911f5ffff	                           jmp 0x40069f9	      7506	tc-i386.c	FUNCTION_90	IF_8
0x40074e8	           0xfb6f8	                           movzx edi, al	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x40074eb	      0xe800000000	                          call 0x40074f0	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x40074f0	    0x832d00000000	               sub dword [0x040074f7], 1	      7499	tc-i386.c	FUNCTION_90	IF_7
0x40074f7	      0xe9e8f4ffff	                           jmp 0x40069e4	      7499	tc-i386.c	FUNCTION_90	IF_7
0x40074fc	    0x813d00000000	           cmp dword [0x04007506], 0xff 	      7954	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007506	     0xf851afbffff	                           jne 0x4007026	      7954	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400750c	    0x8b1500000000	            mov edx, dword [0x04007512] 	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007512	          0x83ea02	                              sub edx, 2	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007515	          0x83e2fd	                     and edx, 0xfffffffd	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007518	     0xf846ffbffff	                            je 0x400708d	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400751e	      0xe903fbffff	                           jmp 0x4007026	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x4007523	    0x8b3d00000000	            mov edi, dword [0x04007529] 	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x4007529	    0xf7c70000ff00	                      test edi, 0xff0000	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400752f	     0xf8461f0ffff	                            je 0x4006596	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x4007535	          0xc1ef10	                           shr edi, 0x10	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x4007538	    0xf60500000000	           test byte [0x0400753f], 0x10 	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400753f	        0x400fb6ff	                          movzx edi, dil	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x4007543	     0xf8537f0ffff	                           jne 0x4006580	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x4007549	      0xe943f0ffff	                           jmp 0x4006591	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400754e	            0x31ff	                            xor edi, edi	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x4007550	      0xba05000000	                              mov edx, 5	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x4007555	      0xbe00000000	                              mov esi, 0	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400755a	      0xe800000000	                          call 0x400755f	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400755f	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x4007564	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400756d	     0xf8523020000	                           jne 0x4007796	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x4007573	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x4007578	          0x4889c2	                            mov rdx, rax	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400757b	            0x31c0	                            xor eax, eax	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400757d	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x4007580	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x4007584	        0x4883c438	                           add rsp, 0x38	      7812	tc-i386.c	FUNCTION_92
0x4007588	              0x5b	                                 pop rbx	      7812	tc-i386.c	FUNCTION_92
0x4007589	              0x5d	                                 pop rbp	      7812	tc-i386.c	FUNCTION_92
0x400758a	            0x415c	                                 pop r12	      7812	tc-i386.c	FUNCTION_92
0x400758c	            0x415d	                                 pop r13	      7812	tc-i386.c	FUNCTION_92
0x400758e	            0x415e	                                 pop r14	      7812	tc-i386.c	FUNCTION_92
0x4007590	            0x415f	                                 pop r15	      7812	tc-i386.c	FUNCTION_92
0x4007592	      0xe900000000	                           jmp 0x4007597	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x4007597	    0x833d00000000	               cmp dword [0x0400759e], 2	      7709	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400759e	     0xf85ffefffff	                           jne 0x40065a3	      7709	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x40075a4	    0x813d00000000	          cmp dword [0x040075ae], 0x18b 	      7710	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x40075ae	     0xf85efefffff	                           jne 0x40065a3	      7710	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x40075b4	    0x803d00000000	                cmp byte [0x040075bb], 0	      7711	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x40075bb	     0xf85e2efffff	                           jne 0x40065a3	      7711	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x40075c1	      0xbf40000000	                           mov edi, 0x40	      7712	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	CALL_13
0x40075c6	      0xe81596ffff	                     call sym.add_prefix	      7712	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	CALL_13
0x40075cb	      0xe9d3efffff	                           jmp 0x40065a3	      7712	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	CALL_13
0x40075d0	    0x8b3d00000000	            mov edi, dword [0x040075d6] 	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x40075d6	      0xe800000000	                          call 0x40075db	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x40075db	      0xe9bbf5ffff	                           jmp 0x4006b9b	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x40075e0	            0x31ff	                            xor edi, edi	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x40075e2	      0xba05000000	                              mov edx, 5	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x40075e7	      0xbe00000000	                              mov esi, 0	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x40075ec	      0xe800000000	                          call 0x40075f1	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x40075f1	          0x4889c7	                            mov rdi, rax	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x40075f4	            0x31c0	                            xor eax, eax	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x40075f6	      0xe800000000	                          call 0x40075fb	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x40075fb	      0xe9adf0ffff	                           jmp 0x40066ad	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x4007600	    0x41bc01000000	                             mov r12d, 1	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4007606	      0xba01000000	                              mov edx, 1	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x400760b	      0xe965fdffff	                           jmp 0x4007375	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4007610	      0xbf67000000	                           mov edi, 0x67	      7465	tc-i386.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x4007615	      0xe800000000	                          call 0x400761a	      7465	tc-i386.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x400761a	    0x832d00000000	               sub dword [0x04007621], 1	      7466	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x4007621	      0xe995f3ffff	                           jmp 0x40069bb	      7466	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x4007626	           0xfb6f8	                           movzx edi, al	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x4007629	      0xe800000000	                          call 0x400762e	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x400762e	    0x832d00000000	               sub dword [0x04007635], 1	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x4007635	      0xe99bf3ffff	                           jmp 0x40069d5	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400763a	            0x31ff	                            xor edi, edi	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400763c	      0xba05000000	                              mov edx, 5	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x4007641	      0xbe00000000	                              mov esi, 0	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x4007646	      0xe800000000	                          call 0x400764b	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400764b	          0x4889c7	                            mov rdi, rax	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400764e	            0x31c0	                            xor eax, eax	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x4007650	      0xe800000000	                          call 0x4007655	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x4007655	      0xe9b1f3ffff	                           jmp 0x4006a0b	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400765a	    0x803d00000000	                cmp byte [0x04007661], 0	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x4007661	     0xf843bfeffff	                            je 0x40074a2	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x4007667	      0xbf66000000	                           mov edi, 0x66	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x400766c	      0xe800000000	                          call 0x4007671	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x4007671	    0x832d00000000	               sub dword [0x04007678], 1	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x4007678	      0xe94df4ffff	                           jmp 0x4006aca	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400767d	           0xf1f00	                         nop dword [rax]	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x4007680	        0x4183f901	                              cmp r9d, 1	      7932	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x4007684	        0x410f94c1	                                sete r9b	      7932	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x4007688	        0x450fb6c9	                          movzx r9d, r9b	      7932	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x400768c	    0x478d8c498e01	           lea r9d, [r9 + r9*2 + 0x18e] 	      7932	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x4007694	      0xe945f9ffff	                           jmp 0x4006fde	      7932	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_3	IF_8
0x4007699	    0x833d00000000	               cmp dword [0x040076a0], 1	      7641	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076a0	     0xf85e7f2ffff	                           jne 0x400698d	      7641	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076a6	    0x488b05000000	            mov rax, qword [0x040076ad] 	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076b1	          0x4889c2	                            mov rdx, rax	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076b4	        0x4883e2ef	             and rdx, 0xffffffffffffffef	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076b8	    0x4881fae80000	                           cmp rdx, 0xe8	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076bf	            0x740c	                            je 0x40076cd	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076c1	    0x483df0000000	                           cmp rax, 0xf0	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076c7	     0xf85c0f2ffff	                           jne 0x400698d	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x40076cd	      0xbf05000000	                              mov edi, 5	      7649	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_6
0x40076d2	      0xe800000000	                          call 0x40076d7	      7649	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_6
0x40076d7	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x40076dc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x40076e5	     0xf85ab000000	                           jne 0x4007796	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x40076eb	      0xba05000000	                              mov edx, 5	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x40076f0	      0xbef0830424	                     mov esi, 0x240483f0	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x40076f5	          0x4889c7	                            mov rdi, rax	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x40076f8	      0xe946f2ffff	                           jmp 0x4006943	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x40076fd	          0x800810	                     or byte [rax], 0x10	      7970	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	ELSE_5
0x4007700	      0xe921f9ffff	                           jmp 0x4007026	      7970	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	ELSE_5
0x4007705	      0xba00000000	                              mov edx, 0	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400770a	      0xbed51e0000	                         mov esi, 0x1ed5	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400770f	      0xbf00000000	                              mov edi, 0	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x4007714	      0xe800000000	                          call 0x4007719	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x4007719	          0x4c89e6	                            mov rsi, r12	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400771c	      0x482b742418	             sub rsi, qword [rsp + 0x18]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4007721	          0x4889f0	                            mov rax, rsi	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4007724	      0x482b442410	             sub rax, qword [rsp + 0x10]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x4007729	      0xe949fbffff	                           jmp 0x4007277	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400772e	    0x41b96b010000	                          mov r9d, 0x16b	      8090	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x4007734	      0xe9adf6ffff	                           jmp 0x4006de6	      8090	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x4007739	      0xba00000000	                              mov edx, 0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400773e	      0xbed01e0000	                         mov esi, 0x1ed0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x4007743	      0xbf00000000	                              mov edi, 0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x4007748	      0xe800000000	                          call 0x400774d	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400774d	           0xf1f00	                         nop dword [rax]	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x4007750	      0xba00000000	                              mov edx, 0	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x4007755	      0xbec11e0000	                         mov esi, 0x1ec1	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400775a	      0xbf00000000	                              mov edi, 0	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400775f	      0xe800000000	                          call 0x4007764	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x4007764	          0x4c89e6	                            mov rsi, r12	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4007767	          0x4c29ee	                            sub rsi, r13	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400776a	          0x4889f1	                            mov rcx, rsi	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400776d	      0x482b4c2410	             sub rcx, qword [rsp + 0x10]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4007772	      0xe948f6ffff	                           jmp 0x4006dbf	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x4007777	    0x41b98e010000	                          mov r9d, 0x18e	      8092	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400777d	      0xe964f6ffff	                           jmp 0x4006de6	      8092	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x4007782	      0xba00000000	                              mov edx, 0	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x4007787	      0xbe3f1e0000	                         mov esi, 0x1e3f	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400778c	      0xbf00000000	                              mov edi, 0	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x4007791	      0xe800000000	                          call 0x4007796	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x4007796	      0xe800000000	                          call 0x400779b	      7812	tc-i386.c	FUNCTION_92
md_undefined_symbol	IF,3:DO,0:ELSE,0:WHILE,0:CALL,5:functions,0:SWITCH,0:FOR,0	39
0x40106b0	            0x31c0	                            xor eax, eax	     11194	tc-i386.c	FUNCTION_130	IF_1
0x40106b2	          0x803f5f	                    cmp byte [rdi], 0x5f	     11180	tc-i386.c	
0x40106b5	            0x752c	                           jne 0x40106e3	     11180	tc-i386.c	
0x40106b7	        0x807f0147	                cmp byte [rdi + 1], 0x47	     11181	tc-i386.c	
0x40106bb	          0x4889fa	                            mov rdx, rdi	     11181	tc-i386.c	
0x40106be	            0x7523	                           jne 0x40106e3	     11181	tc-i386.c	
0x40106c0	        0x807f024c	                cmp byte [rdi + 2], 0x4c	     11182	tc-i386.c	
0x40106c4	            0x751d	                           jne 0x40106e3	     11182	tc-i386.c	
0x40106c6	      0xbf00000000	                              mov edi, 0	     11183	tc-i386.c	
0x40106cb	      0xb916000000	                           mov ecx, 0x16	     11183	tc-i386.c	
0x40106d0	          0x4889d6	                            mov rsi, rdx	     11183	tc-i386.c	
0x40106d3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11183	tc-i386.c	
0x40106d5	            0x750c	                           jne 0x40106e3	     11183	tc-i386.c	
0x40106d7	    0x488b05000000	            mov rax, qword [0x040106de] 	     11185	tc-i386.c	FUNCTION_130
0x40106de	          0x4885c0	                           test rax, rax	     11185	tc-i386.c	FUNCTION_130
0x40106e1	            0x7405	                            je 0x40106e8	     11185	tc-i386.c	FUNCTION_130
0x40106e3	              0xc3	                                     ret	     11195	tc-i386.c	FUNCTION_130	IF_1
0x40106e4	         0xf1f4000	                         nop dword [rax]	     11195	tc-i386.c	FUNCTION_130	IF_1
0x40106e8	              0x53	                                push rbx	     11179	tc-i386.c	FUNCTION_129
0x40106e9	          0x4889d7	                            mov rdi, rdx	     11187	tc-i386.c	FUNCTION_130	IF_1
0x40106ec	          0x4889d3	                            mov rbx, rdx	     11187	tc-i386.c	FUNCTION_130	IF_1
0x40106ef	      0xe800000000	                          call 0x40106f4	     11187	tc-i386.c	FUNCTION_130	IF_1
0x40106f4	          0x4885c0	                           test rax, rax	     11187	tc-i386.c	FUNCTION_130	IF_1
0x40106f7	            0x741b	                            je 0x4010714	     11187	tc-i386.c	FUNCTION_130	IF_1
0x40106f9	            0x31ff	                            xor edi, edi	     11188	tc-i386.c	FUNCTION_130	IF_1
0x40106fb	      0xba05000000	                              mov edx, 5	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010700	      0xbe00000000	                              mov esi, 0	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010705	      0xe800000000	                          call 0x401070a	     11188	tc-i386.c	FUNCTION_130	IF_1
0x401070a	          0x4889c7	                            mov rdi, rax	     11188	tc-i386.c	FUNCTION_130	IF_1
0x401070d	            0x31c0	                            xor eax, eax	     11188	tc-i386.c	FUNCTION_130	IF_1
0x401070f	      0xe800000000	                          call 0x4010714	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010714	          0x4889df	                            mov rdi, rbx	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4010717	      0xb900000000	                              mov ecx, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401071c	            0x31d2	                            xor edx, edx	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401071e	      0xbe00000000	                              mov esi, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4010723	      0xe800000000	                          call 0x4010728	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4010728	    0x488905000000	            mov qword [0x0401072f], rax 	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401072f	              0x5b	                                 pop rbx	     11195	tc-i386.c	FUNCTION_130	IF_1
0x4010730	              0xc3	                                     ret	     11195	tc-i386.c	FUNCTION_130	IF_1
i386_operator	IF,11:DO,0:ELSE,0:WHILE,0:CALL,7:functions,0:SWITCH,1:FOR,2	155
0x4010dc0	            0x4156	                                push r14	       120	tc-i386-intel.c	FUNCTION_156
0x4010dc2	            0x4155	                                push r13	       120	tc-i386-intel.c	FUNCTION_156
0x4010dc4	            0x4154	                                push r12	       120	tc-i386-intel.c	FUNCTION_156
0x4010dc6	              0x55	                                push rbp	       120	tc-i386-intel.c	FUNCTION_156
0x4010dc7	              0x53	                                push rbx	       120	tc-i386-intel.c	FUNCTION_156
0x4010dc8	      0xbb01000000	                              mov ebx, 1	       124	tc-i386-intel.c	FUNCTION_156	IF_1
0x4010dcd	        0x4883ec10	                           sub rsp, 0x10	       120	tc-i386-intel.c	FUNCTION_156
0x4010dd1	    0x8b0d00000000	            mov ecx, dword [0x04010dd7] 	       123	tc-i386-intel.c	FUNCTION_156	IF_1
0x4010dd7	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	tc-i386-intel.c	FUNCTION_156
0x4010de0	      0x4889442408	                mov qword [rsp + 8], rax	       120	tc-i386-intel.c	FUNCTION_156
0x4010de5	            0x31c0	                            xor eax, eax	       120	tc-i386-intel.c	FUNCTION_156
0x4010de7	            0x85c9	                           test ecx, ecx	       123	tc-i386-intel.c	FUNCTION_156	IF_1
0x4010de9	            0x745d	                            je 0x4010e48	       123	tc-i386-intel.c	FUNCTION_156	IF_1
0x4010deb	          0x4885ff	                           test rdi, rdi	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010dee	          0x4989fc	                            mov r12, rdi	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010df1	          0x4189f5	                           mov r13d, esi	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010df4	     0xf84c6000000	                            je 0x4010ec0	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010dfa	          0x4989d6	                            mov r14, rdx	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010dfd	      0xbb00000000	                              mov ebx, 0	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010e02	      0xbf00000000	                              mov edi, 0	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010e07	            0x31ed	                            xor ebp, ebp	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010e09	            0xeb15	                           jmp 0x4010e20	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010e0b	       0xf1f440000	                   nop dword [rax + rax]	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010e10	        0x4883c310	                           add rbx, 0x10	       126	tc-i386-intel.c	FUNCTION_156	IF_2
0x4010e14	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e18	          0x83c501	                              add ebp, 1	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e1b	          0x4885ff	                           test rdi, rdi	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e1e	            0x7450	                            je 0x4010e70	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e20	          0x4c89e6	                            mov rsi, r12	       160	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	CALL_3
0x4010e23	      0xe800000000	                          call 0x4010e28	       160	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	CALL_3
0x4010e28	            0x85c0	                           test eax, eax	       160	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	CALL_3
0x4010e2a	            0x75e4	                           jne 0x4010e10	       160	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	CALL_3
0x4010e2c	          0x4889e8	                            mov rax, rbp	       162	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e2f	        0x48c1e004	                              shl rax, 4	       162	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e33	    0x8b8000000000	                    mov eax, dword [rax]	       162	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e39	            0x85c0	                           test eax, eax	       163	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e3b	            0x7473	                            je 0x4010eb0	       163	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e3d	            0x31db	                            xor ebx, ebx	       129	tc-i386-intel.c	FUNCTION_156	IF_2	IF_3
0x4010e3f	          0x4139c5	                           cmp r13d, eax	       163	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e42	            0x746c	                            je 0x4010eb0	       163	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e44	         0xf1f4000	                         nop dword [rax]	       163	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6	IF_7
0x4010e48	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       195	tc-i386-intel.c	FUNCTION_156
0x4010e4d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       195	tc-i386-intel.c	FUNCTION_156
0x4010e56	            0x89d8	                            mov eax, ebx	       195	tc-i386-intel.c	FUNCTION_156
0x4010e58	     0xf85c6010000	                           jne 0x4011024	       195	tc-i386-intel.c	FUNCTION_156
0x4010e5e	        0x4883c410	                           add rsp, 0x10	       195	tc-i386-intel.c	FUNCTION_156
0x4010e62	              0x5b	                                 pop rbx	       195	tc-i386-intel.c	FUNCTION_156
0x4010e63	              0x5d	                                 pop rbp	       195	tc-i386-intel.c	FUNCTION_156
0x4010e64	            0x415c	                                 pop r12	       195	tc-i386-intel.c	FUNCTION_156
0x4010e66	            0x415d	                                 pop r13	       195	tc-i386-intel.c	FUNCTION_156
0x4010e68	            0x415e	                                 pop r14	       195	tc-i386-intel.c	FUNCTION_156
0x4010e6a	              0xc3	                                     ret	       195	tc-i386-intel.c	FUNCTION_156
0x4010e6b	       0xf1f440000	                   nop dword [rax + rax]	       195	tc-i386-intel.c	FUNCTION_156
0x4010e70	      0xbb00000000	                              mov ebx, 0	       195	tc-i386-intel.c	FUNCTION_156
0x4010e75	      0xbf00000000	                              mov edi, 0	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e7a	            0x31ed	                            xor ebp, ebp	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e7c	            0xeb12	                           jmp 0x4010e90	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e7e	            0x6690	                                     nop	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e80	        0x4883c318	                           add rbx, 0x18	       159	tc-i386-intel.c	FUNCTION_156	FOR_1
0x4010e84	        0x488b7be8	             mov rdi, qword [rbx - 0x18]	       168	tc-i386-intel.c	FUNCTION_156	FOR_2
0x4010e88	          0x83c501	                              add ebp, 1	       168	tc-i386-intel.c	FUNCTION_156	FOR_2
0x4010e8b	          0x4885ff	                           test rdi, rdi	       168	tc-i386-intel.c	FUNCTION_156	FOR_2
0x4010e8e	            0x7412	                            je 0x4010ea2	       168	tc-i386-intel.c	FUNCTION_156	FOR_2
0x4010e90	          0x4c89e6	                            mov rsi, r12	       169	tc-i386-intel.c	FUNCTION_156	FOR_2	IF_8	CALL_4
0x4010e93	      0xe800000000	                          call 0x4010e98	       169	tc-i386-intel.c	FUNCTION_156	FOR_2	IF_8	CALL_4
0x4010e98	            0x85c0	                           test eax, eax	       169	tc-i386-intel.c	FUNCTION_156	FOR_2	IF_8	CALL_4
0x4010e9a	            0x75e4	                           jne 0x4010e80	       169	tc-i386-intel.c	FUNCTION_156	FOR_2	IF_8	CALL_4
0x4010e9c	        0x41803e20	                    cmp byte [r14], 0x20	       172	tc-i386-intel.c	FUNCTION_156	IF_9
0x4010ea0	            0x745f	                            je 0x4010f01	       172	tc-i386-intel.c	FUNCTION_156	IF_9
0x4010ea2	      0xbb01000000	                              mov ebx, 1	       194	tc-i386-intel.c	FUNCTION_156
0x4010ea7	            0xeb9f	                           jmp 0x4010e48	       194	tc-i386-intel.c	FUNCTION_156
0x4010ea9	     0xf1f80000000	                         nop dword [rax]	       194	tc-i386-intel.c	FUNCTION_156
0x4010eb0	        0x48c1e504	                              shl rbp, 4	       165	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6
0x4010eb4	    0x8b9d00000000	                    mov ebx, dword [rbp]	       165	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6
0x4010eba	            0xeb8c	                           jmp 0x4010e48	       165	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6
0x4010ebc	         0xf1f4000	                         nop dword [rax]	       165	tc-i386-intel.c	FUNCTION_156	FOR_1	IF_6
0x4010ec0	            0x31db	                            xor ebx, ebx	       129	tc-i386-intel.c	FUNCTION_156	IF_2	IF_3
0x4010ec2	          0x83fe02	                              cmp esi, 2	       128	tc-i386-intel.c	FUNCTION_156	IF_2	IF_3
0x4010ec5	            0x7581	                           jne 0x4010e48	       128	tc-i386-intel.c	FUNCTION_156	IF_2	IF_3
0x4010ec7	    0x488b05000000	            mov rax, qword [0x04010ece] 	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010ece	           0xfb610	                   movzx edx, byte [rax]	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010ed1	          0x80fa40	                            cmp dl, 0x40	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010ed4	     0xf84b3000000	                            je 0x4010f8d	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010eda	          0x80fa5b	                            cmp dl, 0x5b	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010edd	     0xf8495000000	                            je 0x4010f78	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010ee3	          0x80fa3a	                            cmp dl, 0x3a	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010ee6	     0xf855cffffff	                           jne 0x4010e48	       130	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010eec	        0x4883c001	                              add rax, 1	       133	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010ef0	      0xbb1f000000	                           mov ebx, 0x1f	       134	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010ef5	    0x488905000000	            mov qword [0x04010efc], rax 	       133	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010efc	      0xe947ffffff	                           jmp 0x4010e48	       134	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010f01	          0x4889e7	                            mov rdi, rsp	       178	tc-i386-intel.c	FUNCTION_156	IF_9	CALL_5
0x4010f04	    0x488305000000	               add qword [0x04010f0c], 1	       177	tc-i386-intel.c	FUNCTION_156	IF_9
0x4010f0c	      0xe800000000	                          call 0x4010f11	       178	tc-i386-intel.c	FUNCTION_156	IF_9	CALL_5
0x4010f11	        0x488b1c24	                    mov rbx, qword [rsp]	       180	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	CALL_6
0x4010f15	      0xbe00000000	                              mov esi, 0	       180	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	CALL_6
0x4010f1a	          0x4189c4	                           mov r12d, eax	       178	tc-i386-intel.c	FUNCTION_156	IF_9	CALL_5
0x4010f1d	          0x4889df	                            mov rdi, rbx	       180	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	CALL_6
0x4010f20	      0xe800000000	                          call 0x4010f25	       180	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	CALL_6
0x4010f25	            0x85c0	                           test eax, eax	       180	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	CALL_6
0x4010f27	            0x7532	                           jne 0x4010f5b	       180	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	CALL_6
0x4010f29	        0x410fb606	                   movzx eax, byte [r14]	       183	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10
0x4010f2d	          0x8843ff	                  mov byte [rbx - 1], al	       183	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10
0x4010f30	    0x8b0500000000	            mov eax, dword [0x04010f36] 	       185	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	IF_11
0x4010f36	          0x458826	                    mov byte [r14], r12b	       184	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10
0x4010f39	            0x85c0	                           test eax, eax	       185	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	IF_11
0x4010f3b	            0x7f06	                            jg 0x4010f43	       185	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	IF_11
0x4010f3d	        0x4183fd01	                             cmp r13d, 1	       185	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	IF_11
0x4010f41	            0x7407	                            je 0x4010f4a	       185	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	IF_11
0x4010f43	            0x31db	                            xor ebx, ebx	       186	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	IF_11
0x4010f45	      0xe9fefeffff	                           jmp 0x4010e48	       186	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10	IF_11
0x4010f4a	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       187	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10
0x4010f4f	    0x8b1cc5000000	                  mov ebx, dword [rax*8]	       187	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10
0x4010f56	      0xe9edfeffff	                           jmp 0x4010e48	       187	tc-i386-intel.c	FUNCTION_156	IF_9	IF_10
0x4010f5b	        0x410fbefc	                         movsx edi, r12b	       190	tc-i386-intel.c	FUNCTION_156	IF_9	CALL_7
0x4010f5f	      0xe800000000	                          call 0x4010f64	       190	tc-i386-intel.c	FUNCTION_156	IF_9	CALL_7
0x4010f64	        0x488b0424	                    mov rax, qword [rsp]	       191	tc-i386-intel.c	FUNCTION_156	IF_9
0x4010f68	        0x4883e801	                              sub rax, 1	       191	tc-i386-intel.c	FUNCTION_156	IF_9
0x4010f6c	    0x488905000000	            mov qword [0x04010f73], rax 	       191	tc-i386-intel.c	FUNCTION_156	IF_9
0x4010f73	      0xe92affffff	                           jmp 0x4010ea2	       191	tc-i386-intel.c	FUNCTION_156	IF_9
0x4010f78	        0x4883c001	                              add rax, 1	       136	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010f7c	      0xbb1d000000	                           mov ebx, 0x1d	       137	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010f81	    0x488905000000	            mov qword [0x04010f88], rax 	       136	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010f88	      0xe9bbfeffff	                           jmp 0x4010e48	       137	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1
0x4010f8d	    0x486305000000	         movsxd rax, dword [0x04010f94] 	       139	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010f94	            0x85c0	                           test eax, eax	       139	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010f96	     0xf88acfeffff	                            js 0x4010e48	       139	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010f9c	        0x4883c034	                           add rax, 0x34	       139	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fa0	    0x833c85000000	                 cmp dword [rax*4], 0x47	       139	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fa8	     0xf859afeffff	                           jne 0x4010e48	       139	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fae	    0x488d3c850000	                        lea rdi, [rax*4]	       142	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fb6	      0xba00000000	                              mov edx, 0	       142	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fbb	          0x4889e6	                            mov rsi, rsp	       142	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fbe	    0xc70424000000	                      mov dword [rsp], 0	       141	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fc5	      0xe82627ffff	                        call sym.lex_got	       142	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fca	          0x4885c0	                           test rax, rax	       146	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4	IF_5
0x4010fcd	     0xf8475feffff	                            je 0x4010e48	       146	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4	IF_5
0x4010fd3	          0x4889c7	                            mov rdi, rax	       148	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4	CALL_1
0x4010fd6	      0xbb13000000	                           mov ebx, 0x13	       152	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fdb	      0xe800000000	                          call 0x4010fe0	       148	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4	CALL_1
0x4010fe0	    0x488b05000000	            mov rax, qword [0x04010fe7] 	       149	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010fe7	      0xbe30000000	                           mov esi, 0x30	        90	string3.h	FUNCTION_147	CALL_6
0x4010fec	        0x488d5001	                      lea rdx, [rax + 1]	       149	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010ff0	    0x488915000000	            mov qword [0x04010ff7], rdx 	       149	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010ff7	          0xc6002b	                    mov byte [rax], 0x2b	       149	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4010ffa	          0x8b0424	                    mov eax, dword [rsp]	        90	string3.h	FUNCTION_147	CALL_6
0x4010ffd	    0x488b3d000000	            mov rdi, qword [0x04011004] 	        90	string3.h	FUNCTION_147	CALL_6
0x4011004	          0x8d50ff	                      lea edx, [rax - 1]	        90	string3.h	FUNCTION_147	CALL_6
0x4011007	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_147	CALL_6
0x401100a	      0xe800000000	                          call 0x401100f	        90	string3.h	FUNCTION_147	CALL_6
0x401100f	        0x48630424	                 movsxd rax, dword [rsp]	       151	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4011013	    0x488b15000000	            mov rdx, qword [0x0401101a] 	       151	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x401101a	      0xc64402ff20	         mov byte [rdx + rax - 1], 0x20 	       151	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x401101f	      0xe924feffff	                           jmp 0x4010e48	       151	tc-i386-intel.c	FUNCTION_156	IF_2	SWITCH_1	IF_4
0x4011024	      0xe800000000	                          call 0x4011029	       195	tc-i386-intel.c	FUNCTION_156
md_assemble	IF,46:DO,0:ELSE,3:WHILE,0:CALL,55:functions,0:SWITCH,0:FOR,5	2302
0x400bb00	            0x4157	                                push r15	      3965	tc-i386.c	FUNCTION_68
0x400bb02	            0x4156	                                push r14	      3965	tc-i386.c	FUNCTION_68
0x400bb04	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_147	CALL_6
0x400bb09	            0x4155	                                push r13	      3965	tc-i386.c	FUNCTION_68
0x400bb0b	            0x4154	                                push r12	      3965	tc-i386.c	FUNCTION_68
0x400bb0d	          0x4989f8	                             mov r8, rdi	      3965	tc-i386.c	FUNCTION_68
0x400bb10	              0x55	                                push rbp	      3965	tc-i386.c	FUNCTION_68
0x400bb11	              0x53	                                push rbx	      3965	tc-i386.c	FUNCTION_68
0x400bb12	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_147	CALL_6
0x400bb15	      0xb937000000	                           mov ecx, 0x37	        90	string3.h	FUNCTION_147	CALL_6
0x400bb1a	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_147	CALL_6
0x400bb1f	        0x4883ec48	                           sub rsp, 0x48	      3965	tc-i386.c	FUNCTION_68
0x400bb23	    0x48c705000000	               mov qword [0x0400bb2e], 0	      3976	tc-i386.c	FUNCTION_68
0x400bb2e	    0x64488b042528	                mov rax, qword fs:[0x28]	      3965	tc-i386.c	FUNCTION_68
0x400bb37	      0x4889442438	             mov qword [rsp + 0x38], rax	      3965	tc-i386.c	FUNCTION_68
0x400bb3c	            0x31c0	                            xor eax, eax	      3965	tc-i386.c	FUNCTION_68
0x400bb3e	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x400bb43	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_147	CALL_6
0x400bb46	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_147	CALL_6
0x400bb49	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_147	CALL_6
0x400bb4e	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_147	CALL_6
0x400bb53	          0x4889ee	                            mov rsi, rbp	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x400bb56	    0xc70500000000	           mov dword [0x0400bb60], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400bb60	    0xc70500000000	           mov dword [0x0400bb6a], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400bb6a	    0xc70500000000	           mov dword [0x0400bb74], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400bb74	    0xc70500000000	           mov dword [0x0400bb7e], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400bb7e	    0xc70500000000	           mov dword [0x0400bb88], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400bb88	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_147	CALL_6
0x400bb8b	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_147	CALL_6
0x400bb8e	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_147	CALL_6
0x400bb93	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_147	CALL_6
0x400bb96	          0x4c89c7	                             mov rdi, r8	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x400bb99	      0xe8e2a1ffff	                     call sym.parse_insn	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x400bb9e	          0x4885c0	                           test rax, rax	      3983	tc-i386.c	FUNCTION_68	IF_1
0x400bba1	     0xf8402010000	                            je 0x400bca9	      3983	tc-i386.c	FUNCTION_68	IF_1
0x400bba7	    0x440fb6250000	          movzx r12d, byte [0x0400bbaf] 	      3985	tc-i386.c	FUNCTION_68
0x400bbaf	           0xfb610	                   movzx edx, byte [rax]	      3985	tc-i386.c	FUNCTION_68
0x400bbb2	          0x4531ff	                          xor r15d, r15d	      4563	tc-i386.c	FUNCTION_70
0x400bbb5	        0x48890424	                    mov qword [rsp], rax	      4563	tc-i386.c	FUNCTION_70
0x400bbb9	            0x84d2	                             test dl, dl	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x400bbbb	     0xf84e4010000	                            je 0x400bda5	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x400bbc1	          0x80fa20	                            cmp dl, 0x20	      4571	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x400bbc4	     0xf84c6010000	                            je 0x400bd90	      4571	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x400bbca	          0x80fa22	                            cmp dl, 0x22	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbcd	           0xf95c1	                                setne cl	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbd0	            0x84d2	                             test dl, dl	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbd2	           0xf95c0	                                setne al	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbd5	            0x84c1	                             test cl, al	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbd7	            0x7410	                            je 0x400bbe9	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbd9	           0xfb6c2	                           movzx eax, dl	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbdc	    0x80b800000000	                       cmp byte [rax], 0	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbe3	     0xf8406120000	                            je 0x400cdef	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400bbe9	    0x8b3d00000000	            mov edi, dword [0x0400bbef] 	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400bbef	        0x488b1c24	                    mov rbx, qword [rsp]	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400bbf3	            0x31c0	                            xor eax, eax	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400bbf5	            0xeb57	                           jmp 0x400bc4e	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400bbf7	    0x660f1f840000	                    nop word [rax + rax]	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400bc00	          0x80fa2c	                            cmp dl, 0x2c	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400bc03	     0xf84e7000000	                            je 0x400bcf0	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400bc09	            0x84d2	                             test dl, dl	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x400bc0b	     0xf84df000000	                            je 0x400bcf0	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x400bc11	            0x89d1	                            mov ecx, edx	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400bc13	          0x83e1fd	                     and ecx, 0xfffffffd	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400bc16	          0x80f920	                            cmp cl, 0x20	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400bc19	            0x7410	                            je 0x400bc2b	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400bc1b	           0xfb6ca	                           movzx ecx, dl	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400bc1e	    0x80b900000000	                       cmp byte [rcx], 0	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400bc25	     0xf8445040000	                            je 0x400c070	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400bc2b	            0x85ff	                           test edi, edi	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400bc2d	     0xf859d000000	                           jne 0x400bcd0	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400bc33	          0x80fa28	                            cmp dl, 0x28	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x400bc36	     0xf84ac000000	                            je 0x400bce8	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x400bc3c	          0x80fa29	                            cmp dl, 0x29	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x400bc3f	           0xf94c2	                                 sete dl	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x400bc42	           0xfb6d2	                           movzx edx, dl	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x400bc45	            0x29d0	                            sub eax, edx	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x400bc47	        0x4883c301	                              add rbx, 1	      4620	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400bc4b	           0xfb613	                   movzx edx, byte [rbx]	      4620	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400bc4e	            0x85c0	                           test eax, eax	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400bc50	            0x74ae	                            je 0x400bc00	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400bc52	            0x84d2	                             test dl, dl	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x400bc54	            0x75bb	                           jne 0x400bc11	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x400bc56	    0x8b0500000000	            mov eax, dword [0x0400bc5c] 	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x400bc5c	            0x85ff	                           test edi, edi	      4588	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x400bc5e	      0xba05000000	                              mov edx, 5	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x400bc63	      0xbe00000000	                              mov esi, 0	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x400bc68	          0x8d5801	                      lea ebx, [rax + 1]	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x400bc6b	            0x7405	                            je 0x400bc72	      4588	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x400bc6d	      0xbe00000000	                              mov esi, 0	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc72	            0x31ff	                            xor edi, edi	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc74	      0xe800000000	                          call 0x400bc79	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc79	            0x89de	                            mov esi, ebx	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc7b	          0x4889c7	                            mov rdi, rax	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc7e	            0x31c0	                            xor eax, eax	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc80	      0xe800000000	                          call 0x400bc85	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc85	           0xf1f00	                         nop dword [rax]	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x400bc88	    0x488b3d000000	            mov rdi, qword [0x0400bc8f] 	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x400bc8f	    0xc70500000000	     mov dword [0x0400bc99], 0xffffffff 	      3988	tc-i386.c	FUNCTION_68
0x400bc99	      0xe800000000	                          call 0x400bc9e	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x400bc9e	    0x48c705000000	               mov qword [0x0400bca9], 0	      3990	tc-i386.c	FUNCTION_68
0x400bca9	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4275	tc-i386.c	FUNCTION_68
0x400bcae	    0x644833042528	                xor rax, qword fs:[0x28]	      4275	tc-i386.c	FUNCTION_68
0x400bcb7	     0xf8510270000	                           jne 0x400e3cd	      4275	tc-i386.c	FUNCTION_68
0x400bcbd	        0x4883c448	                           add rsp, 0x48	      4275	tc-i386.c	FUNCTION_68
0x400bcc1	              0x5b	                                 pop rbx	      4275	tc-i386.c	FUNCTION_68
0x400bcc2	              0x5d	                                 pop rbp	      4275	tc-i386.c	FUNCTION_68
0x400bcc3	            0x415c	                                 pop r12	      4275	tc-i386.c	FUNCTION_68
0x400bcc5	            0x415d	                                 pop r13	      4275	tc-i386.c	FUNCTION_68
0x400bcc7	            0x415e	                                 pop r14	      4275	tc-i386.c	FUNCTION_68
0x400bcc9	            0x415f	                                 pop r15	      4275	tc-i386.c	FUNCTION_68
0x400bccb	              0xc3	                                     ret	      4275	tc-i386.c	FUNCTION_68
0x400bccc	         0xf1f4000	                         nop dword [rax]	      4275	tc-i386.c	FUNCTION_68
0x400bcd0	          0x80fa5b	                            cmp dl, 0x5b	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400bcd3	            0x7413	                            je 0x400bce8	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400bcd5	          0x80fa5d	                            cmp dl, 0x5d	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400bcd8	           0xf94c2	                                 sete dl	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400bcdb	           0xfb6d2	                           movzx edx, dl	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400bcde	            0x29d0	                            sub eax, edx	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400bce0	      0xe962ffffff	                           jmp 0x400bc47	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400bce5	           0xf1f00	                         nop dword [rax]	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400bce8	          0x83c001	                              add eax, 1	      4616	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400bceb	      0xe957ffffff	                           jmp 0x400bc47	      4616	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400bcf0	        0x48391c24	                    cmp qword [rsp], rbx	      4622	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bcf4	     0xf84be030000	                            je 0x400c0b8	      4622	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bcfa	    0x486305000000	         movsxd rax, dword [0x0400bd01] 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd01	          0x8d5001	                      lea edx, [rax + 1]	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd04	    0x890500000000	            mov dword [0x0400bd0a], eax 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd0a	          0x83fa05	                              cmp edx, 5	      4626	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x400bd0d	    0x891500000000	            mov dword [0x0400bd13], edx 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd13	     0xf87940f0000	                            ja 0x400ccad	      4626	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x400bd19	    0x800cc5000000	                   or byte [rax*8], 0x40	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd21	    0x488b05000000	            mov rax, qword [0x0400bd28] 	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd28	            0x85ff	                           test edi, edi	      4636	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x400bd2a	        0x488d5001	                      lea rdx, [rax + 1]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd2e	    0x488915000000	            mov qword [0x0400bd35], rdx 	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd35	           0xfb613	                   movzx edx, byte [rbx]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd38	            0x8810	                      mov byte [rax], dl	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd3a	          0xc60300	                       mov byte [rbx], 0	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd3d	     0xf841d030000	                            je 0x400c060	      4636	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x400bd43	            0x31f6	                            xor esi, esi	      3264	tc-i386.c	FUNCTION_61	IF_1
0x400bd45	      0x807c242066	            cmp byte [rsp + 0x20], 0x66 	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400bd4a	     0xf8459030000	                            je 0x400c0a9	      3263	tc-i386.c	FUNCTION_61	IF_1
0x400bd50	        0x488b3c24	                    mov rdi, qword [rsp]	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x400bd54	      0xe847c9ffff	             call sym.i386_intel_operand	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x400bd59	    0x488b15000000	            mov rdx, qword [0x0400bd60] 	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd60	            0x85c0	                           test eax, eax	      4644	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x400bd62	        0x488d4aff	                      lea rcx, [rdx - 1]	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd66	         0xfb652ff	               movzx edx, byte [rdx - 1]	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd6a	    0x48890d000000	            mov qword [0x0400bd71], rcx 	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd71	            0x8813	                      mov byte [rbx], dl	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400bd73	     0xf840fffffff	                            je 0x400bc88	      4644	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x400bd79	          0x80fa2c	                            cmp dl, 0x2c	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400bd7c	     0xf84be020000	                            je 0x400c040	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400bd82	        0x48891c24	                    mov qword [rsp], rbx	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400bd86	      0xe92efeffff	                           jmp 0x400bbb9	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400bd8b	       0xf1f440000	                   nop dword [rax + rax]	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400bd90	        0x488b0424	                    mov rax, qword [rsp]	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400bd94	         0xfb65001	               movzx edx, byte [rax + 1]	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400bd98	        0x4883c001	                              add rax, 1	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x400bd9c	        0x48890424	                    mov qword [rsp], rax	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x400bda0	      0xe925feffff	                           jmp 0x400bbca	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x400bda5	    0x488b3d000000	            mov rdi, qword [0x0400bdac] 	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x400bdac	    0xc70500000000	     mov dword [0x0400bdb6], 0xffffffff 	      3988	tc-i386.c	FUNCTION_68
0x400bdb6	      0xe800000000	                          call 0x400bdbb	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x400bdbb	    0x8b0500000000	            mov eax, dword [0x0400bdc1] 	      4001	tc-i386.c	FUNCTION_68	IF_3
0x400bdc1	    0x48c705000000	               mov qword [0x0400bdcc], 0	      3990	tc-i386.c	FUNCTION_68
0x400bdcc	            0x85c0	                           test eax, eax	      4001	tc-i386.c	FUNCTION_68	IF_3
0x400bdce	     0xf849c000000	                            je 0x400be70	      4001	tc-i386.c	FUNCTION_68	IF_3
0x400bdd4	    0x8b0500000000	            mov eax, dword [0x0400bdda] 	      4002	tc-i386.c	FUNCTION_68	IF_3
0x400bdda	          0x83f801	                              cmp eax, 1	      4002	tc-i386.c	FUNCTION_68	IF_3
0x400bddd	     0xf868d000000	                           jbe 0x400be70	      4002	tc-i386.c	FUNCTION_68	IF_3
0x400bde3	      0xbf00000000	                              mov edi, 0	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400bde8	      0xb906000000	                              mov ecx, 6	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400bded	          0x4889ee	                            mov rsi, rbp	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400bdf0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400bdf2	            0x747c	                            je 0x400be70	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400bdf4	      0xbf00000000	                              mov edi, 0	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400bdf9	      0xb908000000	                              mov ecx, 8	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400bdfe	          0x4889ee	                            mov rsi, rbp	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400be01	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400be03	            0x746b	                            je 0x400be70	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400be05	    0xf60500000000	           test byte [0x0400be0c], 0xfc 	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400be0c	            0x7409	                            je 0x400be17	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400be0e	    0xf60500000000	           test byte [0x0400be15], 0xfc 	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400be15	            0x7559	                           jne 0x400be70	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400be17	          0x83f802	                              cmp eax, 2	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x400be1a	     0xf822e100000	                            jb 0x400ce4e	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x400be20	          0x83f803	                              cmp eax, 3	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x400be23	            0x761c	                           jbe 0x400be41	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x400be25	          0x83f805	                              cmp eax, 5	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x400be28	     0xf8720100000	                            ja 0x400ce4e	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x400be2e	          0x8d70fe	                      lea esi, [rax - 2]	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x400be31	      0xbf01000000	                              mov edi, 1	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x400be36	      0xe8a542ffff	                call sym.swap_2_operands	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x400be3b	    0x8b0500000000	            mov eax, dword [0x0400be41] 	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x400be41	          0x8d70ff	                      lea esi, [rax - 1]	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x400be44	            0x31ff	                            xor edi, edi	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x400be46	      0xe89542ffff	                call sym.swap_2_operands	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x400be4b	    0x833d00000000	               cmp dword [0x0400be52], 2	      4733	tc-i386.c	FUNCTION_72	IF_1
0x400be52	            0x751c	                           jne 0x400be70	      4733	tc-i386.c	FUNCTION_72	IF_1
0x400be54	    0x488b05000000	            mov rax, qword [0x0400be5b] 	      4736	tc-i386.c	FUNCTION_72	IF_1
0x400be5b	    0x488b15000000	            mov rdx, qword [0x0400be62] 	      4737	tc-i386.c	FUNCTION_72	IF_1
0x400be62	    0x488905000000	            mov qword [0x0400be69], rax 	      4738	tc-i386.c	FUNCTION_72	IF_1
0x400be69	    0x488915000000	            mov qword [0x0400be70], rdx 	      4737	tc-i386.c	FUNCTION_72	IF_1
0x400be70	    0x8b0500000000	            mov eax, dword [0x0400be76] 	      4011	tc-i386.c	FUNCTION_68	IF_4
0x400be76	          0x83f802	                              cmp eax, 2	      4011	tc-i386.c	FUNCTION_68	IF_4
0x400be79	     0xf84d6020000	                            je 0x400c155	      4011	tc-i386.c	FUNCTION_68	IF_4
0x400be7f	            0x85c0	                           test eax, eax	      4016	tc-i386.c	FUNCTION_68	IF_5
0x400be81	     0xf8543030000	                           jne 0x400c1ca	      4016	tc-i386.c	FUNCTION_68	IF_5
0x400be87	    0x448b15000000	           mov r10d, dword [0x0400be8e] 	      4021	tc-i386.c	FUNCTION_68	IF_6
0x400be8e	          0x4585d2	                         test r10d, r10d	      4021	tc-i386.c	FUNCTION_68	IF_6
0x400be91	     0xf84a1000000	                            je 0x400bf38	      4021	tc-i386.c	FUNCTION_68	IF_6
0x400be97	    0x833d00000000	               cmp dword [0x0400be9e], 2	      4022	tc-i386.c	FUNCTION_68	IF_6
0x400be9e	     0xf8494000000	                            je 0x400bf38	      4022	tc-i386.c	FUNCTION_68	IF_6
0x400bea4	    0x833d00000000	               cmp dword [0x0400beab], 2	      4023	tc-i386.c	FUNCTION_68	IF_6
0x400beab	            0x7511	                           jne 0x400bebe	      4023	tc-i386.c	FUNCTION_68	IF_6
0x400bead	      0xbf00000000	                              mov edi, 0	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400beb2	      0xb907000000	                              mov ecx, 7	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400beb7	          0x4889ee	                            mov rsi, rbp	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400beba	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400bebc	            0x747a	                            je 0x400bf38	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400bebe	    0x8b2d00000000	            mov ebp, dword [0x0400bec4] 	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bec4	    0x41bb01000000	                             mov r11d, 1	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400beca	    0x41bf00000080	                    mov r15d, 0x80000000	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bed0	    0x41beffffffff	                    mov r14d, 0xffffffff	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bed6	    0x49ba00000000	          movabs r10, 0xffffffff00000000	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bee0	          0x83ed01	                              sub ebp, 1	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bee3	            0x7853	                            js 0x400bf38	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bee5	          0x4863dd	                         movsxd rbx, ebp	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bee8	        0x488d430e	                    lea rax, [rbx + 0xe]	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400beec	    0xf604c5000000	                 test byte [rax*8], 0x1f	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400bef4	            0x74ea	                            je 0x400bee0	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400bef6	    0x4c8b2cdd0000	                  mov r13, qword [rbx*8]	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400befe	      0x41807d1802	                cmp byte [r13 + 0x18], 2	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400bf03	     0xf84190a0000	                            je 0x400c922	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400bf09	    0x448b0c9d0000	                  mov r9d, dword [rbx*4]	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bf11	    0x4181f9790100	                          cmp r9d, 0x179	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bf18	     0xf84460b0000	                            je 0x400ca64	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bf1e	    0x4181f9950100	                          cmp r9d, 0x195	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bf25	     0xf84390b0000	                            je 0x400ca64	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bf2b	    0x8024c5000000	                  and byte [rax*8], 0xef	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x400bf33	          0x83ed01	                              sub ebp, 1	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bf36	            0x79ad	                           jns 0x400bee5	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bf38	        0x410fbefc	                         movsx edi, r12b	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bf3c	      0xe8ffd6ffff	                 call sym.match_template	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bf41	          0x4885c0	                           test rax, rax	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bf44	          0x4889c5	                            mov rbp, rax	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bf47	     0xf845cfdffff	                            je 0x400bca9	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bf4d	    0x8b0500000000	            mov eax, dword [0x0400bf53] 	      4034	tc-i386.c	FUNCTION_68	IF_8
0x400bf53	            0x85c0	                           test eax, eax	      4034	tc-i386.c	FUNCTION_68	IF_8
0x400bf55	     0xf858f010000	                           jne 0x400c0ea	      4034	tc-i386.c	FUNCTION_68	IF_8
0x400bf5b	    0x8b0500000000	            mov eax, dword [0x0400bf61] 	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bf61	          0x83e0f6	                     and eax, 0xfffffff6	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bf64	      0x3db60f0000	                          cmp eax, 0xfb6	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bf69	     0xf8464090000	                            je 0x400c8d3	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bf6f	    0x803d00000000	                cmp byte [0x0400bf76], 0	      4068	tc-i386.c	FUNCTION_68	IF_11
0x400bf76	     0xf8840090000	                            js 0x400c8bc	      4068	tc-i386.c	FUNCTION_68	IF_11
0x400bf7c	    0x4c8b25000000	            mov r12, qword [0x0400bf83] 	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bf83	          0x4d85e4	                           test r12, r12	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bf86	            0x740d	                            je 0x400bf95	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bf88	    0xf60500000000	               test byte [0x0400bf8f], 1	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bf8f	     0xf8488030000	                            je 0x400c31d	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bf95	     0xfb605000000	           movzx eax, byte [0x0400bf9c] 	      4082	tc-i386.c	FUNCTION_68	IF_14
0x400bf9c	            0x84c0	                             test al, al	      4082	tc-i386.c	FUNCTION_68	IF_14
0x400bf9e	     0xf85ef010000	                           jne 0x400c193	      4082	tc-i386.c	FUNCTION_68	IF_14
0x400bfa4	    0x4c8b25000000	            mov r12, qword [0x0400bfab] 	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400bfab	          0x4d85e4	                           test r12, r12	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400bfae	     0xf8496030000	                            je 0x400c34a	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400bfb4	     0xfb615000000	           movzx edx, byte [0x0400bfbb] 	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfbb	          0xc0ea06	                               shr dl, 6	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfbe	          0x80fa01	                               cmp dl, 1	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfc1	     0xf84b90d0000	                            je 0x400cd80	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfc7	     0xf8250030000	                            jb 0x400c31d	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfcd	          0x80fa02	                               cmp dl, 2	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfd0	     0xf8474030000	                            je 0x400c34a	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfd6	          0x80fa03	                               cmp dl, 3	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfd9	     0xf851b0d0000	                           jne 0x400ccfa	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400bfdf	    0x803d00000000	            cmp byte [0x0400bfe6], 0xf3 	      3763	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x400bfe6	     0xf858c0e0000	                           jne 0x400ce78	      3763	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x400bfec	    0x8b3500000000	            mov esi, dword [0x0400bff2] 	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x400bff2	            0x85f6	                           test esi, esi	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x400bff4	            0x741d	                            je 0x400c013	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x400bff6	    0x8b0500000000	            mov eax, dword [0x0400bffc] 	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x400bffc	          0x83e801	                              sub eax, 1	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x400bfff	    0x488b04c50000	                  mov rax, qword [rax*8]	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x400c007	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400c00b	            0xa85f	                           test al, 0x5f	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x400c00d	     0xf8537030000	                           jne 0x400c34a	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x400c013	    0x488b1d000000	            mov rbx, qword [0x0400c01a] 	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x400c01a	      0xba05000000	                              mov edx, 5	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x400c01f	      0xbe00000000	                              mov esi, 0	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x400c024	            0x31ff	                            xor edi, edi	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400c026	      0xe800000000	                          call 0x400c02b	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400c02b	          0x4889de	                            mov rsi, rbx	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400c02e	          0x4889c7	                            mov rdi, rax	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400c031	            0x31c0	                            xor eax, eax	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400c033	      0xe800000000	                          call 0x400c038	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400c038	      0xe96cfcffff	                           jmp 0x400bca9	      4179	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400c03d	           0xf1f00	                         nop dword [rax]	      4179	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400c040	         0xfb65301	               movzx edx, byte [rbx + 1]	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x400c044	        0x488d4301	                      lea rax, [rbx + 1]	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x400c048	            0x84d2	                             test dl, dl	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x400c04a	     0xf84900d0000	                            je 0x400cde0	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x400c050	          0x4889c3	                            mov rbx, rax	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x400c053	    0x41bf01000000	                             mov r15d, 1	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400c059	      0xe924fdffff	                           jmp 0x400bd82	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400c05e	            0x6690	                                     nop	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400c060	        0x488b3c24	                    mov rdi, qword [rsp]	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x400c064	      0xe8578affff	               call sym.i386_att_operand	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x400c069	      0xe9ebfcffff	                           jmp 0x400bd59	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x400c06e	            0x6690	                                     nop	      4641	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	CALL_15
0x400c070	    0x8b0500000000	            mov eax, dword [0x0400c076] 	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c076	           0xfbefa	                           movsx edi, dl	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c079	          0x8d5801	                      lea ebx, [rax + 1]	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c07c	      0xe81f85ffff	                 call sym.output_invalid	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c081	      0xba05000000	                              mov edx, 5	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c086	          0x4889c5	                            mov rbp, rax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c089	      0xbe00000000	                              mov esi, 0	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c08e	            0x31ff	                            xor edi, edi	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c090	      0xe800000000	                          call 0x400c095	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c095	            0x89da	                            mov edx, ebx	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c097	          0x4889c7	                            mov rdi, rax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c09a	          0x4889ee	                            mov rsi, rbp	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c09d	            0x31c0	                            xor eax, eax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c09f	      0xe800000000	                          call 0x400c0a4	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c0a4	      0xe9dffbffff	                           jmp 0x400bc88	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c0a9	          0x4889ef	                            mov rdi, rbp	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c0ac	      0xe8bf7dffff	     call sym.intel_float_operand.part.4	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c0b1	            0x89c6	                            mov esi, eax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c0b3	      0xe998fcffff	                           jmp 0x400bd50	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400c0b8	          0x4585ff	                         test r15d, r15d	      4649	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x400c0bb	     0xf851f0d0000	                           jne 0x400cde0	      4649	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x400c0c1	          0x80fa2c	                            cmp dl, 0x2c	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x400c0c4	     0xf85b8fcffff	                           jne 0x400bd82	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x400c0ca	      0xba05000000	                              mov edx, 5	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0cf	      0xbe00000000	                              mov esi, 0	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0d4	            0x31ff	                            xor edi, edi	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0d6	      0xe800000000	                          call 0x400c0db	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0db	          0x4889c7	                            mov rdi, rax	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0de	            0x31c0	                            xor eax, eax	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0e0	      0xe800000000	                          call 0x400c0e5	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0e5	      0xe99efbffff	                           jmp 0x400bc88	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x400c0ea	    0x803d00000000	                cmp byte [0x0400c0f1], 0	      4035	tc-i386.c	FUNCTION_68	IF_8
0x400c0f1	     0xf8864feffff	                            js 0x400bf5b	      4035	tc-i386.c	FUNCTION_68	IF_8
0x400c0f7	    0xf60500000000	           test byte [0x0400c0fe], 0x20 	      4036	tc-i386.c	FUNCTION_68	IF_8
0x400c0fe	     0xf8557feffff	                           jne 0x400bf5b	      4036	tc-i386.c	FUNCTION_68	IF_8
0x400c104	    0x48ba00800919	              movabs rdx, 0x180019098000	      4037	tc-i386.c	FUNCTION_68	IF_8
0x400c10e	    0x488515000000	           test qword [0x0400c115], rdx 	      4037	tc-i386.c	FUNCTION_68	IF_8
0x400c115	     0xf840c0a0000	                            je 0x400cb27	      4037	tc-i386.c	FUNCTION_68	IF_8
0x400c11b	    0x4c8b2d000000	            mov r13, qword [0x0400c122] 	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400c122	          0x83f801	                              cmp eax, 1	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c125	    0x41bc00000000	                             mov r12d, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c12b	      0xb800000000	                              mov eax, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c130	      0xba05000000	                              mov edx, 5	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c135	      0xbe00000000	                              mov esi, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c13a	        0x4c0f45e0	                         cmovne r12, rax	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c13e	            0x31ff	                            xor edi, edi	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c140	      0xe800000000	                          call 0x400c145	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400c145	          0x4c89ee	                            mov rsi, r13	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400c148	          0x4889c7	                            mov rdi, rax	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400c14b	            0x31c0	                            xor eax, eax	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400c14d	          0x41ffd4	                                call r12	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400c150	      0xe906feffff	                           jmp 0x400bf5b	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400c155	      0xbf00000000	                              mov edi, 0	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400c15a	      0xb906000000	                              mov ecx, 6	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400c15f	          0x4889ee	                            mov rsi, rbp	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400c162	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400c164	            0x7411	                            je 0x400c177	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400c166	      0xbf00000000	                              mov edi, 0	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400c16b	      0xb908000000	                              mov ecx, 8	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400c170	          0x4889ee	                            mov rsi, rbp	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400c173	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400c175	            0x7553	                           jne 0x400c1ca	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400c177	            0x31ff	                            xor edi, edi	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x400c179	      0xbe01000000	                              mov esi, 1	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x400c17e	      0xe85d3fffff	                call sym.swap_2_operands	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x400c183	    0x8b0500000000	            mov eax, dword [0x0400c189] 	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x400c189	            0x85c0	                           test eax, eax	      4016	tc-i386.c	FUNCTION_68	IF_5
0x400c18b	     0xf84f6fcffff	                            je 0x400be87	      4016	tc-i386.c	FUNCTION_68	IF_5
0x400c191	            0xeb37	                           jmp 0x400c1ca	      4016	tc-i386.c	FUNCTION_68	IF_5
0x400c193	    0xf60500000000	               test byte [0x0400c19a], 8	      4083	tc-i386.c	FUNCTION_68	IF_14
0x400c19a	            0x740e	                            je 0x400c1aa	      4083	tc-i386.c	FUNCTION_68	IF_14
0x400c19c	    0x8b3d00000000	            mov edi, dword [0x0400c1a2] 	      4084	tc-i386.c	FUNCTION_68	IF_14
0x400c1a2	            0x85ff	                           test edi, edi	      4084	tc-i386.c	FUNCTION_68	IF_14
0x400c1a4	     0xf852c090000	                           jne 0x400cad6	      4084	tc-i386.c	FUNCTION_68	IF_14
0x400c1aa	      0xba05000000	                              mov edx, 5	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400c1af	      0xbe00000000	                              mov esi, 0	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400c1b4	            0x31ff	                            xor edi, edi	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c1b6	      0xe800000000	                          call 0x400c1bb	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c1bb	          0x4889c7	                            mov rdi, rax	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c1be	            0x31c0	                            xor eax, eax	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c1c0	      0xe800000000	                          call 0x400c1c5	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c1c5	      0xe9dffaffff	                           jmp 0x400bca9	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c1ca	    0x440fb6050000	           movzx r8d, byte [0x0400c1d2] 	      4750	tc-i386.c	FUNCTION_73	IF_1
0x400c1d2	    0x8b1500000000	            mov edx, dword [0x0400c1d8] 	      4750	tc-i386.c	FUNCTION_73	IF_1
0x400c1d8	          0x4584c0	                           test r8b, r8b	      4750	tc-i386.c	FUNCTION_73	IF_1
0x400c1db	            0x755e	                           jne 0x400c23b	      4750	tc-i386.c	FUNCTION_73	IF_1
0x400c1dd	    0x448b0d000000	            mov r9d, dword [0x0400c1e4] 	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x400c1e4	            0x89d1	                            mov ecx, edx	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400c1e6	          0x4585c9	                           test r9d, r9d	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x400c1e9	     0xf84c3080000	                            je 0x400cab2	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x400c1ef	              0x90	                                     nop	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x400c1f0	          0x83e901	                              sub ecx, 1	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400c1f3	            0x7846	                            js 0x400c23b	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400c1f5	          0x4863c1	                         movsxd rax, ecx	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400c1f8	        0x4883c00e	                            add rax, 0xe	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400c1fc	    0xf604c5000000	                    test byte [rax*8], 1	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400c204	            0x74ea	                            je 0x400c1f0	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400c206	     0xfb634c50000	                 movzx esi, byte [rax*8]	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400c20e	        0x40f6c620	                          test sil, 0x20	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400c212	     0xf85810c0000	                           jne 0x400ce99	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400c218	        0x40f6c640	                          test sil, 0x40	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x400c21c	     0xf856c0c0000	                           jne 0x400ce8e	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x400c222	          0x4084f6	                           test sil, sil	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400c225	     0xf88790c0000	                            js 0x400cea4	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400c22b	    0xf604c5000000	                    test byte [rax*8], 2	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400c233	            0x74bb	                            je 0x400c1f0	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400c235	    0x41b871000000	                           mov r8d, 0x71	      4776	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400c23b	          0x4863f2	                         movsxd rsi, edx	      4776	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400c23e	    0x41baffffffff	                    mov r10d, 0xffffffff	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400c244	    0x49b900000000	           movabs r9, 0xffffffff00000000	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c24e	    0x488d3cf50000	                        lea rdi, [rsi*8]	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c256	        0x4883ee01	                              sub rsi, 1	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c25a	          0x83ea01	                              sub edx, 1	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x400c25d	     0xf8824fcffff	                            js 0x400be87	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x400c263	          0x4863c2	                         movsxd rax, edx	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x400c266	        0x488d480e	                    lea rcx, [rax + 0xe]	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x400c26a	    0xf604cd000000	                 test byte [rcx*8], 0xfc	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x400c272	     0xf8498000000	                            je 0x400c310	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x400c278	    0x488b1cc50000	                  mov rbx, qword [rax*8]	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c280	      0x440fb65b18	          movzx r11d, byte [rbx + 0x18] 	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c285	        0x4180fb02	                             cmp r11b, 2	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c289	     0xf8435050000	                            je 0x400c7c4	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c28f	        0x4180fb05	                             cmp r11b, 5	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c293	     0xf8417050000	                            je 0x400c7b0	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c299	        0x4180fb01	                             cmp r11b, 1	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c29d	     0xf840d050000	                            je 0x400c7b0	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400c2a3	    0x488b0d000000	            mov rcx, qword [0x0400c2aa] 	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2aa	          0x4c89f3	                            mov rbx, r14	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c2ad	          0x4c21cb	                             and rbx, r9	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c2b0	          0x4989de	                            mov r14, rbx	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c2b3	          0x488b01	                    mov rax, qword [rcx]	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2b6	        0x4c8b5908	                mov r11, qword [rcx + 8]	      4861	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2ba	            0x31c9	                            xor ecx, ecx	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2bc	          0x4c39d8	                            cmp rax, r11	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2bf	            0x7314	                           jae 0x400c2d5	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2c1	     0xf1f80000000	                         nop dword [rax]	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2c8	         0xb4cf034	      or ecx, dword [rax + rsi*8 + 0x34]	      1805	tc-i386.c	FUNCTION_19	SWITCH_1
0x400c2cc	        0x4883c060	                           add rax, 0x60	      4862	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2d0	          0x4c39d8	                            cmp rax, r11	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2d3	            0x72f3	                            jb 0x400c2c8	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400c2d5	        0x4180f86c	                           cmp r8b, 0x6c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2d9	     0xf840c0a0000	                            je 0x400cceb	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2df	     0xf8e7b090000	                           jle 0x400cc60	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2e5	        0x4180f871	                           cmp r8b, 0x71	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2e9	     0xf8429080000	                            je 0x400cb18	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2ef	        0x4180f877	                           cmp r8b, 0x77	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2f3	            0x751b	                           jne 0x400c310	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2f5	          0x80cf10	                             or bh, 0x10	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2f8	          0x4989de	                            mov r14, rbx	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2fb	            0x89d8	                            mov eax, ebx	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2fd	            0x21d9	                            and ecx, ebx	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400c2ff	            0x85c9	                           test ecx, ecx	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x400c301	            0x740d	                            je 0x400c310	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x400c303	            0x2107	                    and dword [rdi], eax	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x400c305	    0xc74704000000	                  mov dword [rdi + 4], 0	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x400c30c	         0xf1f4000	                         nop dword [rax]	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x400c310	        0x4883ef08	                              sub rdi, 8	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x400c314	        0x4883ee01	                              sub rsi, 1	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x400c318	      0xe93dffffff	                           jmp 0x400c25a	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x400c31d	    0x488b1d000000	            mov rbx, qword [0x0400c324] 	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c324	            0x31ff	                            xor edi, edi	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c326	      0xba05000000	                              mov edx, 5	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c32b	      0xbe00000000	                              mov esi, 0	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c330	      0xe800000000	                          call 0x400c335	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c335	          0x4c89e2	                            mov rdx, r12	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c338	          0x4889c7	                            mov rdi, rax	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c33b	          0x4889de	                            mov rsi, rbx	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c33e	            0x31c0	                            xor eax, eax	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c340	      0xe800000000	                          call 0x400c345	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c345	      0xe95ff9ffff	                           jmp 0x400bca9	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x400c34a	    0x48833d000000	               cmp qword [0x0400c352], 0	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400c352	            0x740d	                            je 0x400c361	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400c354	    0xf60500000000	               test byte [0x0400c35b], 2	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400c35b	     0xf844a0a0000	                            je 0x400cdab	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400c361	    0x48833d000000	               cmp qword [0x0400c369], 0	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400c369	            0x740d	                            je 0x400c378	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400c36b	    0xf60500000000	               test byte [0x0400c372], 4	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400c372	     0xf84e8090000	                            je 0x400cd60	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400c378	    0xf60500000000	               test byte [0x0400c37f], 1	      4104	tc-i386.c	FUNCTION_68	IF_18
0x400c37f	            0x743c	                            je 0x400c3bd	      4104	tc-i386.c	FUNCTION_68	IF_18
0x400c381	    0x8b0500000000	            mov eax, dword [0x0400c387] 	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400c387	          0x83f802	                              cmp eax, 2	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400c38a	     0xf84820a0000	                            je 0x400ce12	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400c390	          0x83f801	                              cmp eax, 1	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c393	     0xf84950a0000	                            je 0x400ce2e	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c399	    0x803d00000000	                cmp byte [0x0400c3a0], 0	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3a0	            0x741b	                            je 0x400c3bd	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3a2	      0xba05000000	                              mov edx, 5	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3a7	      0xbe00000000	                              mov esi, 0	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3ac	            0x31ff	                            xor edi, edi	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3ae	      0xe800000000	                          call 0x400c3b3	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3b3	          0x4889c7	                            mov rdi, rax	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3b6	            0x31c0	                            xor eax, eax	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3b8	      0xe800000000	                          call 0x400c3bd	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400c3bd	    0x8b1500000000	            mov edx, dword [0x0400c3c3] 	      4115	tc-i386.c	FUNCTION_68	IF_21
0x400c3c3	     0xfb605000000	           movzx eax, byte [0x0400c3ca] 	      4116	tc-i386.c	FUNCTION_68	IF_21
0x400c3ca	            0x85d2	                           test edx, edx	      4115	tc-i386.c	FUNCTION_68	IF_21
0x400c3cc	            0x741e	                            je 0x400c3ec	      4115	tc-i386.c	FUNCTION_68	IF_21
0x400c3ce	            0xa802	                              test al, 2	      4116	tc-i386.c	FUNCTION_68	IF_21
0x400c3d0	            0x741a	                            je 0x400c3ec	      4116	tc-i386.c	FUNCTION_68	IF_21
0x400c3d2	    0x803d00000000	                cmp byte [0x0400c3d9], 0	      4117	tc-i386.c	FUNCTION_68	IF_21
0x400c3d9	            0x7511	                           jne 0x400c3ec	      4117	tc-i386.c	FUNCTION_68	IF_21
0x400c3db	      0xbff2000000	                           mov edi, 0xf2	      4118	tc-i386.c	FUNCTION_68	CALL_37
0x400c3e0	      0xe8fb47ffff	                     call sym.add_prefix	      4118	tc-i386.c	FUNCTION_68	CALL_37
0x400c3e5	     0xfb605000000	           movzx eax, byte [0x0400c3ec] 	      4118	tc-i386.c	FUNCTION_68	CALL_37
0x400c3ec	            0xa801	                              test al, 1	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400c3ee	     0xf849d000000	                            je 0x400c491	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400c3f4	    0x8b0500000000	            mov eax, dword [0x0400c3fa] 	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400c3fa	            0x85c0	                           test eax, eax	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400c3fc	     0xf848f000000	                            je 0x400c491	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400c402	    0x488b05000000	            mov rax, qword [0x0400c409] 	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400c409	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400c40d	            0xa85f	                           test al, 0x5f	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x400c40f	        0x410f94c4	                               sete r12b	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x400c413	        0x410fb6c4	                         movzx eax, r12b	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x400c417	          0x4989c4	                            mov r12, rax	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x400c41a	        0x4883c006	                              add rax, 6	      5763	tc-i386.c	FUNCTION_78	IF_1
0x400c41e	    0xf604c5000000	                    test byte [rax*8], 4	      5763	tc-i386.c	FUNCTION_78	IF_1
0x400c426	     0xf84340f0000	                            je 0x400d360	      5763	tc-i386.c	FUNCTION_78	IF_1
0x400c42c	    0x488b05000000	            mov rax, qword [0x0400c433] 	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c433	    0x483d00000000	                              cmp rax, 0	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c439	            0x743e	                            je 0x400c479	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c43b	          0x4885c0	                           test rax, rax	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c43e	            0x7439	                            je 0x400c479	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c440	      0xba05000000	                              mov edx, 5	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c445	      0xbe00000000	                              mov esi, 0	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c44a	            0x31ff	                            xor edi, edi	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c44c	    0x488b2d000000	            mov rbp, qword [0x0400c453] 	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c453	    0x488b1d000000	            mov rbx, qword [0x0400c45a] 	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c45a	      0xe800000000	                          call 0x400c45f	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c45f	      0x418d542401	                      lea edx, [r12 + 1]	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c464	          0x4889c7	                            mov rdi, rax	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c467	          0x4889e9	                            mov rcx, rbp	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c46a	          0x4889de	                            mov rsi, rbx	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c46d	            0x31c0	                            xor eax, eax	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c46f	      0xe800000000	                          call 0x400c474	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c474	      0xe930f8ffff	                           jmp 0x400bca9	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c479	    0x488b05000000	            mov rax, qword [0x0400c480] 	      5777	tc-i386.c	FUNCTION_78	IF_1
0x400c480	    0x488905000000	            mov qword [0x0400c487], rax 	      5777	tc-i386.c	FUNCTION_78	IF_1
0x400c487	    0xc70500000000	               mov dword [0x0400c491], 0	      4125	tc-i386.c	FUNCTION_68	IF_22
0x400c491	    0x8b3500000000	            mov esi, dword [0x0400c497] 	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c497	            0x85f6	                           test esi, esi	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c499	     0xf8481010000	                            je 0x400c620	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c49f	    0x8b0500000000	            mov eax, dword [0x0400c4a5] 	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c4a5	            0x85c0	                           test eax, eax	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c4a7	     0xf8573010000	                           jne 0x400c620	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c4ad	    0xf60500000000	           test byte [0x0400c4b4], 0x20 	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c4b4	     0xf8466010000	                            je 0x400c620	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c4ba	    0x8b0500000000	            mov eax, dword [0x0400c4c0] 	      3787	tc-i386.c	FUNCTION_67	IF_1
0x400c4c0	            0x85c0	                           test eax, eax	      3787	tc-i386.c	FUNCTION_67	IF_1
0x400c4c2	            0x740d	                            je 0x400c4d1	      3787	tc-i386.c	FUNCTION_67	IF_1
0x400c4c4	    0x833d00000000	               cmp dword [0x0400c4cb], 1	      3788	tc-i386.c	FUNCTION_67	IF_1
0x400c4cb	     0xf84211a0000	                            je 0x400def2	      3788	tc-i386.c	FUNCTION_67	IF_1
0x400c4d1	    0x833d00000000	               cmp dword [0x0400c4d8], 2	      3821	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400c4d8	     0xf84a0190000	                            je 0x400de7e	      3821	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400c4de	          0x83fe01	                              cmp esi, 1	      3884	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c4e1	     0xf8e39010000	                           jle 0x400c620	      3884	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c4e7	    0x833d00000000	               cmp dword [0x0400c4ee], 3	      3885	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c4ee	     0xf852c010000	                           jne 0x400c620	      3885	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c4f4	    0x488b05000000	            mov rax, qword [0x0400c4fb] 	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c4fb	    0x483905000000	            cmp qword [0x0400c502], rax 	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c502	     0xf8518010000	                           jne 0x400c620	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c508	    0xf60500000000	               test byte [0x0400c50f], 8	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c50f	     0xf850b010000	                           jne 0x400c620	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c515	     0xfb605000000	           movzx eax, byte [0x0400c51c] 	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c51c	          0x83e006	                              and eax, 6	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c51f	            0x7541	                           jne 0x400c562	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c521	    0x488b15000000	            mov rdx, qword [0x0400c528] 	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c528	          0x4885d2	                           test rdx, rdx	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c52b	            0x740d	                            je 0x400c53a	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c52d	        0x448b6a08	               mov r13d, dword [rdx + 8]	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c531	          0x4585ed	                         test r13d, r13d	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c534	     0xf84e6000000	                            je 0x400c620	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c53a	    0x48833d000000	               cmp qword [0x0400c542], 0	      3890	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c542	     0xf85d8000000	                           jne 0x400c620	      3890	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c548	    0x803d00000000	                cmp byte [0x0400c54f], 0	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x400c54f	     0xf84cb000000	                            je 0x400c620	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x400c555	    0x833d00000000	               cmp dword [0x0400c55c], 3	      3892	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c55c	     0xf844c1e0000	                            je 0x400e3ae	      3892	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c562	    0x8b1500000000	            mov edx, dword [0x0400c568] 	      3895	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c568	            0x89d6	                            mov esi, edx	      3896	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c56a	          0x83e6fd	                     and esi, 0xfffffffd	      3896	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c56d	          0x83fe55	                           cmp esi, 0x55	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c570	        0x400f94c7	                                sete dil	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c574	    0x81fe55660000	                         cmp esi, 0x6655	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c57a	    0x8db20899ffff	                 lea esi, [rdx - 0x66f8]	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c580	           0xf94c1	                                 sete cl	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c583	             0x9f9	                             or ecx, edi	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c585	          0x83fe03	                              cmp esi, 3	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c588	        0x400f96c6	                               setbe sil	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c58c	          0x4008f1	                              or cl, sil	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c58f	            0x750f	                           jne 0x400c5a0	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c591	    0x81eadf660000	                         sub edx, 0x66df	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c597	          0x83e2ef	                     and edx, 0xffffffef	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c59a	     0xf8580000000	                           jne 0x400c620	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c5a0	    0x813d00000000	         cmp dword [0x0400c5aa], 0xffff 	      3905	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c5aa	            0x7574	                           jne 0x400c620	      3905	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400c5ac	    0x803d00000000	                cmp byte [0x0400c5b3], 0	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x400c5b3	     0xf84931f0000	                            je 0x400e54c	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x400c5b9	    0x833d00000000	               cmp dword [0x0400c5c0], 3	      3938	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400c5c0	     0xf846e1f0000	                            je 0x400e534	      3938	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400c5c6	     0xfb605000000	           movzx eax, byte [0x0400c5cd] 	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400c5cd	    0x802500000000	             and byte [0x0400c5d4], 0xf8	      3944	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400c5d4	          0x83e099	                     and eax, 0xffffff99	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400c5d7	          0x83c822	                            or eax, 0x22	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400c5da	    0x880500000000	               mov byte [0x0400c5e0], al	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400c5e0	          0x83e006	                              and eax, 6	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400c5e3	            0x84c0	                             test al, al	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x400c5e5	            0x7439	                            je 0x400c620	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x400c5e7	     0xfb605000000	           movzx eax, byte [0x0400c5ee] 	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c5ee	          0x83c808	                               or eax, 8	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c5f1	          0x83e0ef	                     and eax, 0xffffffef	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c5f4	    0x880500000000	               mov byte [0x0400c5fa], al	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c5fa	     0xfb605000000	           movzx eax, byte [0x0400c601] 	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c601	          0x83c808	                               or eax, 8	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c604	          0x83e0ef	                     and eax, 0xffffffef	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c607	    0x880500000000	               mov byte [0x0400c60d], al	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c60d	     0xfb605000000	           movzx eax, byte [0x0400c614] 	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c614	          0x83c808	                               or eax, 8	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c617	          0x83e0ef	                     and eax, 0xffffffef	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c61a	    0x880500000000	               mov byte [0x0400c620], al	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x400c620	      0xe83b47ffff	                 call sym.process_suffix	      4131	tc-i386.c	FUNCTION_68	IF_25	CALL_40
0x400c625	            0x85c0	                           test eax, eax	      4131	tc-i386.c	FUNCTION_68	IF_25	CALL_40
0x400c627	     0xf847cf6ffff	                            je 0x400bca9	      4131	tc-i386.c	FUNCTION_68	IF_25	CALL_40
0x400c62d	    0x8b1500000000	            mov edx, dword [0x0400c633] 	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c633	            0x85d2	                           test edx, edx	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c635	     0xf8474080000	                            je 0x400ceaf	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c63b	      0xbe00000000	                              mov esi, 0	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c640	            0x31ff	                            xor edi, edi	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c642	          0x4889f0	                            mov rax, rsi	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c645	          0x8b5038	            mov edx, dword [rax + 0x38] 	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400c648	          0x23507c	             and edx, dword [rax + 0x7c]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400c64b	          0x83c701	                              add edi, 1	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c64e	          0x8b4834	            mov ecx, dword [rax + 0x34] 	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400c651	          0x214878	             and dword [rax + 0x78], ecx	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400c654	        0x4883c008	                              add rax, 8	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400c658	          0x895074	             mov dword [rax + 0x74], edx	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400c65b	    0x8b0d00000000	            mov ecx, dword [0x0400c661] 	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c661	            0x39f9	                            cmp ecx, edi	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c663	            0x89ca	                            mov edx, ecx	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c665	            0x77de	                            ja 0x400c645	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400c667	          0x83f902	                              cmp ecx, 2	      6402	tc-i386.c	FUNCTION_85
0x400c66a	      0xb802000000	                              mov eax, 2	      6402	tc-i386.c	FUNCTION_85
0x400c66f	           0xf46c1	                         cmovbe eax, ecx	      6402	tc-i386.c	FUNCTION_85
0x400c672	            0x85c0	                           test eax, eax	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400c674	     0xf8453050000	                            je 0x400cbcd	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400c67a	          0x83e801	                              sub eax, 1	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400c67d	    0x448b05000000	            mov r8d, dword [0x0400c684] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c684	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c689	    0x488d3cc50000	                        lea rdi, [rax*8]	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c691	    0x41bb00400000	                        mov r11d, 0x4000	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400c697	    0x41ba00100000	                        mov r10d, 0x1000	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400c69d	    0x49b900000000	           movabs r9, 0xffffffff00000000	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c6a7	          0x4189cc	                           mov r12d, ecx	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c6aa	        0x488b4678	            mov rax, qword [rsi + 0x78] 	      6335	tc-i386.c	FUNCTION_84
0x400c6ae	          0x8b567c	            mov edx, dword [rsi + 0x7c] 	      6335	tc-i386.c	FUNCTION_84
0x400c6b1	           0xfb6cc	                           movzx ecx, ah	      6341	tc-i386.c	FUNCTION_84	IF_1
0x400c6b4	    0x81e1fc000000	                           and ecx, 0xfc	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400c6ba	     0xf84e0040000	                            je 0x400cba0	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400c6c0	          0x4139d0	                            cmp r8d, edx	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6c3	     0xf84bc050000	                            je 0x400cc85	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6c9	    0x391500000000	            cmp dword [0x0400c6cf], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6cf	     0xf84f6060000	                            je 0x400cdcb	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6d5	    0x391500000000	            cmp dword [0x0400c6db], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6db	     0xf8481070000	                            je 0x400ce62	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6e1	    0x391500000000	            cmp dword [0x0400c6e7], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6e7	     0xf845b0c0000	                            je 0x400d348	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6ed	    0x391500000000	            cmp dword [0x0400c6f3], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6f3	     0xf843a0c0000	                            je 0x400d333	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6f9	    0x391500000000	            cmp dword [0x0400c6ff], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c6ff	     0xf848f040000	                            je 0x400cb94	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c705	     0xfb60d000000	           movzx ecx, byte [0x0400c70c] 	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400c70c	            0x84c9	                             test cl, cl	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400c70e	     0xf84e41a0000	                            je 0x400e1f8	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400c714	          0x4c21cb	                             and rbx, r9	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c717	          0x80f962	                            cmp cl, 0x62	      6354	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400c71a	          0x4889da	                            mov rdx, rbx	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c71d	     0xf843f170000	                            je 0x400de62	      6354	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400c723	          0x80f977	                            cmp cl, 0x77	      6359	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400c726	     0xf84e1150000	                            je 0x400dd0d	      6359	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400c72c	          0x4889c3	                            mov rbx, rax	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400c72f	    0x81e300200000	                         and ebx, 0x2000	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400c735	          0x4809d3	                             or rbx, rdx	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400c738	          0x80f971	                            cmp cl, 0x71	      6361	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c73b	            0x7517	                           jne 0x400c754	      6361	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c73d	          0x4889c1	                            mov rcx, rax	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c740	      0x2500400000	                         and eax, 0x4000	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c745	    0x81e100800000	                         and ecx, 0x8000	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c74b	          0x4809ca	                             or rdx, rcx	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c74e	          0x4889d3	                            mov rbx, rdx	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c751	          0x4809c3	                             or rbx, rax	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400c754	            0x89db	                            mov ebx, ebx	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400c756	            0x31d2	                            xor edx, edx	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400c758	          0x4889d8	                            mov rax, rbx	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400c75b	          0x4139d0	                            cmp r8d, edx	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c75e	     0xf841f160000	                            je 0x400dd83	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c764	    0x3b1500000000	            cmp edx, dword [0x0400c76a] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c76a	     0xf8402160000	                            je 0x400dd72	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c770	    0x3b1500000000	            cmp edx, dword [0x0400c776] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c776	     0xf84e5150000	                            je 0x400dd61	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c77c	    0x3b1500000000	            cmp edx, dword [0x0400c782] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c782	     0xf84c8150000	                            je 0x400dd50	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c788	    0x3b1500000000	            cmp edx, dword [0x0400c78e] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c78e	     0xf84ab150000	                            je 0x400dd3f	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c794	    0x3b1500000000	            cmp edx, dword [0x0400c79a] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c79a	     0xf848e150000	                            je 0x400dd2e	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400c7a0	      0xba05000000	                              mov edx, 5	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c7a5	      0xbe00000000	                              mov esi, 0	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c7aa	      0xe905faffff	                           jmp 0x400c1b4	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c7af	              0x90	                                     nop	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400c7b0	      0xba00000000	                              mov edx, 0	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x400c7b5	      0xbeee120000	                         mov esi, 0x12ee	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x400c7ba	      0xbf00000000	                              mov edi, 0	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x400c7bf	      0xe800000000	                          call 0x400c7c4	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x400c7c4	        0x4180f86c	                           cmp r8b, 0x6c	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400c7c8	     0xf8404050000	                            je 0x400ccd2	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400c7ce	        0x4180f877	                           cmp r8b, 0x77	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400c7d2	     0xf84c8040000	                            je 0x400cca0	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400c7d8	        0x4180f862	                           cmp r8b, 0x62	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400c7dc	     0xf8463030000	                            je 0x400cb45	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400c7e2	    0x440fb61cc500	                movzx r11d, byte [rax*8]	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c7eb	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c7ef	        0x41f6c310	                         test r11b, 0x10	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c7f3	            0x7427	                            je 0x400c81c	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c7f5	    0x48f7c10000ff	            test rcx, 0xffffffffffff0000	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c7fc	     0xf8507030000	                           jne 0x400cb09	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c802	          0x80f580	                            xor ch, 0x80	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c805	    0x4881e9008000	                         sub rcx, 0x8000	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c80c	        0x48894b10	             mov qword [rbx + 0x10], rcx	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c810	    0x488b1cc50000	                  mov rbx, qword [rax*8]	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c818	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400c81c	    0xf604c5000000	                 test byte [rax*8], 0x20	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400c824	     0xf8404020000	                            je 0x400ca2e	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400c82a	          0x4c85c9	                            test rcx, r9	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400c82d	     0xf84db010000	                            je 0x400ca0e	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400c833	          0x4d21cd	                             and r13, r9	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400c836	    0x4981cd008000	                          or r13, 0x8000	      2222	tc-i386.c	FUNCTION_38
0x400c83d	    0x4c8d99800000	                   lea r11, [rcx + 0x80]	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x400c844	    0x4981fbff0000	                           cmp r11, 0xff	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x400c84b	     0xf8628040000	                           jbe 0x400cc79	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x400c851	    0x4881f9ff0000	                           cmp rcx, 0xff	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x400c858	     0xf86db020000	                           jbe 0x400cb39	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x400c85e	    0x4c8d99008000	                 lea r11, [rcx + 0x8000]	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400c865	    0x4981fbffff00	                         cmp r11, 0xffff	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400c86c	     0xf866d040000	                           jbe 0x400ccdf	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400c872	    0x4881f9ffff00	                         cmp rcx, 0xffff	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400c879	     0xf8660040000	                           jbe 0x400ccdf	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400c87f	      0xbb00000080	                     mov ebx, 0x80000000	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400c884	        0x4c8d1c19	                    lea r11, [rcx + rbx]	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400c888	          0x4d39d3	                            cmp r11, r10	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400c88b	     0xf86870e0000	                           jbe 0x400d718	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400c891	          0x4d89eb	                            mov r11, r13	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x400c894	    0x4981cb002000	                          or r11, 0x2000	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x400c89b	          0x4c39d1	                            cmp rcx, r10	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x400c89e	        0x4d0f46eb	                         cmovbe r13, r11	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x400c8a2	          0x44092f	                    or dword [rdi], r13d	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x400c8a5	        0x4180f871	                           cmp r8b, 0x71	      4840	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x400c8a9	     0xf8561faffff	                           jne 0x400c310	      4840	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x400c8af	    0x8024c5000000	                  and byte [rax*8], 0xdf	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x400c8b7	      0xe954faffff	                           jmp 0x400c310	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x400c8bc	      0xbf9b000000	                           mov edi, 0x9b	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400c8c1	      0xe81a43ffff	                     call sym.add_prefix	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400c8c6	            0x85c0	                           test eax, eax	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400c8c8	     0xf84dbf3ffff	                            je 0x400bca9	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400c8ce	      0xe9a9f6ffff	                           jmp 0x400bf7c	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400c8d3	    0x833d00000000	               cmp dword [0x0400c8da], 2	      4060	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400c8da	            0x743a	                            je 0x400c916	      4060	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400c8dc	    0x803d00000000	                cmp byte [0x0400c8e3], 0	      4061	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400c8e3	            0x7531	                           jne 0x400c916	      4061	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400c8e5	    0x448b05000000	            mov r8d, dword [0x0400c8ec] 	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400c8ec	          0x4585c0	                           test r8d, r8d	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400c8ef	            0x7425	                            je 0x400c916	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400c8f1	    0x4c8b25000000	            mov r12, qword [0x0400c8f8] 	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c8f8	      0xbe00000000	                              mov esi, 0	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c8fd	            0x31ff	                            xor edi, edi	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c8ff	      0xba05000000	                              mov edx, 5	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c904	      0xe800000000	                          call 0x400c909	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c909	          0x4c89e6	                            mov rsi, r12	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c90c	          0x4889c7	                            mov rdi, rax	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c90f	            0x31c0	                            xor eax, eax	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c911	      0xe800000000	                          call 0x400c916	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400c916	    0xc60500000000	                mov byte [0x0400c91d], 0	      4065	tc-i386.c	FUNCTION_68	IF_9
0x400c91d	      0xe94df6ffff	                           jmp 0x400bf6f	      4065	tc-i386.c	FUNCTION_68	IF_9
0x400c922	     0xfb60cc50000	                 movzx ecx, byte [rax*8]	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c92a	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400c92e	          0xf6c102	                              test cl, 2	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c931	            0x7421	                            je 0x400c954	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c933	    0x48f7c20000ff	            test rdx, 0xffffffffffff0000	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c93a	     0xf85fe030000	                           jne 0x400cd3e	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c940	          0x80f680	                            xor dh, 0x80	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c943	          0x83e1ef	                     and ecx, 0xffffffef	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c946	    0x4881ea008000	                         sub rdx, 0x8000	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c94d	    0x880cc5000000	                    mov byte [rax*8], cl	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400c954	    0xf604dd000000	                    test byte [rbx*8], 4	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400c95c	            0x741b	                            je 0x400c979	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400c95e	          0x4c85d2	                           test rdx, r10	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400c961	     0xf85eb010000	                           jne 0x400cb52	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400c967	    0x8024dd000000	                  and byte [rbx*8], 0xef	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400c96f	          0x4c31fa	                            xor rdx, r15	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400c972	    0x4881c2000000	             add rdx, 0xffffffff80000000	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400c979	          0x4885d2	                           test rdx, rdx	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c97c	     0xf85d0010000	                           jne 0x400cb52	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c982	        0x488d4b0e	                    lea rcx, [rbx + 0xe]	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c986	     0xfb604cd0000	                 movzx eax, byte [rcx*8]	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c98e	            0xa840	                           test al, 0x40	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c990	     0xf8478030000	                            je 0x400cd0e	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c996	          0x83e0e0	                     and eax, 0xffffffe0	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c999	    0x8804cd000000	                    mov byte [rcx*8], al	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c9a0	    0x832d00000000	               sub dword [0x0400c9a7], 1	      4935	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c9a7	    0x48c704dd0000	                    mov qword [rbx*8], 0	      4934	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400c9b3	     0xfb604dd0000	                 movzx eax, byte [rbx*8]	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400c9bb	            0xa804	                              test al, 4	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400c9bd	            0x750c	                           jne 0x400c9cb	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400c9bf	            0xa808	                              test al, 8	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400c9c1	            0x7508	                           jne 0x400c9cb	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400c9c3	            0xa802	                              test al, 2	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400c9c5	     0xf8415f5ffff	                            je 0x400bee0	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400c9cb	    0x8b0d00000000	            mov ecx, dword [0x0400c9d1] 	      2194	tc-i386.c	FUNCTION_36
0x400c9d1	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400c9d4	     0xf8440130000	                            je 0x400dd1a	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400c9da	          0x4489d8	                           mov eax, r11d	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400c9dd	            0xd3e0	                             shl eax, cl	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400c9df	          0x83e801	                              sub eax, 1	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400c9e2	          0x4885d0	                           test rax, rdx	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400c9e5	     0xf85f5f4ffff	                           jne 0x400bee0	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400c9eb	          0x4889d0	                            mov rax, rdx	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400c9ee	          0x48d3f8	                             sar rax, cl	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400c9f1	        0x4883e880	             sub rax, 0xffffffffffffff80	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400c9f5	    0x483dff000000	                           cmp rax, 0xff	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400c9fb	     0xf87dff4ffff	                            ja 0x400bee0	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400ca01	    0x800cdd000000	                      or byte [rbx*8], 1	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400ca09	      0xe9d2f4ffff	                           jmp 0x400bee0	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400ca0e	    0x41bf00000080	                    mov r15d, 0x80000000	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400ca14	          0x4c31f9	                            xor rcx, r15	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400ca17	    0x4881c1000000	             add rcx, 0xffffffff80000000	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400ca1e	        0x48894b10	             mov qword [rbx + 0x10], rcx	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400ca22	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400ca2a	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400ca2e	          0x4d89eb	                            mov r11, r13	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400ca31	          0x4d21cb	                             and r11, r9	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400ca34	          0x4d89dd	                            mov r13, r11	      2222	tc-i386.c	FUNCTION_38
0x400ca37	    0x4981cd008000	                          or r13, 0x8000	      2222	tc-i386.c	FUNCTION_38
0x400ca3e	    0x833d00000000	               cmp dword [0x0400ca45], 2	      2224	tc-i386.c	FUNCTION_38	IF_1
0x400ca45	     0xf84f2fdffff	                            je 0x400c83d	      2224	tc-i386.c	FUNCTION_38	IF_1
0x400ca4b	        0x4883f901	                              cmp rcx, 1	      2224	tc-i386.c	FUNCTION_38	IF_1
0x400ca4f	     0xf85e8fdffff	                           jne 0x400c83d	      2224	tc-i386.c	FUNCTION_38	IF_1
0x400ca55	    0x4981cb00fe00	                          or r11, 0xfe00	      2236	tc-i386.c	FUNCTION_38	IF_1
0x400ca5c	          0x4d89dd	                            mov r13, r11	      2236	tc-i386.c	FUNCTION_38	IF_1
0x400ca5f	      0xe93efeffff	                           jmp 0x400c8a2	      2236	tc-i386.c	FUNCTION_38	IF_1
0x400ca64	            0x31ff	                            xor edi, edi	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca66	      0x4c89542410	             mov qword [rsp + 0x10], r10	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca6b	      0x44895c240c	             mov dword [rsp + 0xc], r11d	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca70	        0x44890c24	                    mov dword [rsp], r9d	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca74	      0xe800000000	                          call 0x400ca79	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca79	    0x488b3d000000	            mov rdi, qword [0x0400ca80] 	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca80	        0x448b0c24	                    mov r9d, dword [rsp]	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca84	          0x4531c0	                            xor r8d, r8d	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca87	          0x4c89e9	                            mov rcx, r13	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca8a	        0x488d577c	                   lea rdx, [rdi + 0x7c]	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca8e	          0x4829d0	                            sub rax, rdx	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca91	            0x31d2	                            xor edx, edx	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca93	          0x4889c6	                            mov rsi, rax	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca96	      0xe800000000	                          call 0x400ca9b	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400ca9b	    0x8024dd000000	                  and byte [rbx*8], 0xe0	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400caa3	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400caa8	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400caad	      0xe92ef4ffff	                           jmp 0x400bee0	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400cab2	    0x833d00000000	               cmp dword [0x0400cab9], 1	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cab9	           0xf94c1	                                 sete cl	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cabc	    0x803d00000000	                cmp byte [0x0400cac3], 0	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cac3	           0xf95c0	                                setne al	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cac6	            0x38c1	                              cmp cl, al	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cac8	      0xb877000000	                           mov eax, 0x77	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cacd	        0x440f45c0	                         cmovne r8d, eax	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cad1	      0xe965f7ffff	                           jmp 0x400c23b	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400cad6	    0x813d00000000	           cmp dword [0x0400cae0], 0x86 	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400cae0	     0xf84bef4ffff	                            je 0x400bfa4	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400cae6	    0x8b1500000000	            mov edx, dword [0x0400caec] 	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400caec	          0x83ea01	                              sub edx, 1	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400caef	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400caf7	        0x48c1ea10	                           shr rdx, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400cafb	          0x83e25f	                           and edx, 0x5f	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x400cafe	     0xf84a6f6ffff	                            je 0x400c1aa	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x400cb04	      0xe99bf4ffff	                           jmp 0x400bfa4	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x400cb09	        0x4183e320	                          and r11d, 0x20	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400cb0d	     0xf8420fdffff	                            je 0x400c833	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400cb13	      0xe912fdffff	                           jmp 0x400c82a	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400cb18	          0x80cfc0	                             or bh, 0xc0	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cb1b	          0x4989de	                            mov r14, rbx	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cb1e	            0x89d8	                            mov eax, ebx	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cb20	            0x21d9	                            and ecx, ebx	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cb22	      0xe9d8f7ffff	                           jmp 0x400c2ff	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cb27	    0xf60500000000	           test byte [0x0400cb2e], 0x20 	      4045	tc-i386.c	FUNCTION_68	IF_8
0x400cb2e	     0xf8427f4ffff	                            je 0x400bf5b	      4045	tc-i386.c	FUNCTION_68	IF_8
0x400cb34	      0xe9e2f5ffff	                           jmp 0x400c11b	      4045	tc-i386.c	FUNCTION_68	IF_8
0x400cb39	    0x4981cd007400	                          or r13, 0x7400	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x400cb40	      0xe95dfdffff	                           jmp 0x400c8a2	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x400cb45	    0x800ccd000000	                   or byte [rcx*8], 0xfc	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400cb4d	      0xe990fcffff	                           jmp 0x400c7e2	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400cb52	    0x833d00000000	               cmp dword [0x0400cb59], 2	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cb59	     0xf8554feffff	                           jne 0x400c9b3	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cb5f	        0x4a8d043a	                    lea rax, [rdx + r15]	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400cb63	          0x4c39f2	                            cmp rdx, r14	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400cb66	           0xf96c1	                                setbe cl	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400cb69	          0x4c39f0	                            cmp rax, r14	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400cb6c	     0xf86ae010000	                           jbe 0x400cd20	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400cb72	    0x803d00000000	                cmp byte [0x0400cb79], 0	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400cb79	     0xf8434feffff	                            je 0x400c9b3	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400cb7f	            0x84c9	                             test cl, cl	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400cb81	     0xf842cfeffff	                            je 0x400c9b3	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400cb87	    0x800cdd000000	                      or byte [rbx*8], 4	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x400cb8f	      0xe937feffff	                           jmp 0x400c9cb	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x400cb94	    0x390500000000	            cmp dword [0x0400cb9a], eax 	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400cb9a	     0xf8565fbffff	                           jne 0x400c705	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400cba0	        0x48c1e220	                           shl rdx, 0x20	      6391	tc-i386.c	FUNCTION_84
0x400cba4	            0x89c0	                            mov eax, eax	      6391	tc-i386.c	FUNCTION_84
0x400cba6	        0x4883c608	                              add rsi, 8	      6391	tc-i386.c	FUNCTION_84
0x400cbaa	          0x4809c2	                             or rdx, rax	      6391	tc-i386.c	FUNCTION_84
0x400cbad	        0x48895670	             mov qword [rsi + 0x70], rdx	      6391	tc-i386.c	FUNCTION_84
0x400cbb1	          0x4839fe	                            cmp rsi, rdi	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400cbb4	     0xf85f0faffff	                           jne 0x400c6aa	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400cbba	    0xf60500000000	           test byte [0x0400cbc1], 0xfc 	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400cbc1	          0x4489e1	                           mov ecx, r12d	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400cbc4	     0xf85f4110000	                           jne 0x400ddbe	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400cbca	          0x4489e2	                           mov edx, r12d	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400cbcd	    0xf60500000000	               test byte [0x0400cbd4], 2	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400cbd4	            0x89cb	                            mov ebx, ecx	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400cbd6	            0x740c	                            je 0x400cbe4	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400cbd8	    0xc70500000000	               mov dword [0x0400cbe2], 0	      4144	tc-i386.c	FUNCTION_68	IF_27
0x400cbe2	            0x89d3	                            mov ebx, edx	      4144	tc-i386.c	FUNCTION_68	IF_27
0x400cbe4	          0x83fa03	                              cmp edx, 3	      4148	tc-i386.c	FUNCTION_68	IF_28
0x400cbe7	     0xf8663090000	                           jbe 0x400d550	      4148	tc-i386.c	FUNCTION_68	IF_28
0x400cbed	    0x8b0500000000	            mov eax, dword [0x0400cbf3] 	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400cbf3	      0x2520004000	                       and eax, 0x400020	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400cbf8	          0x83f820	                           cmp eax, 0x20	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400cbfb	     0xf8434090000	                            je 0x400d535	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400cc01	     0xfb615000000	           movzx edx, byte [0x0400cc08] 	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400cc08	          0xf6c240	                           test dl, 0x40	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400cc0b	     0xf84a9070000	                            je 0x400d3ba	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400cc11	    0xf60500000000	           test byte [0x0400cc18], 0x18 	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400cc18	     0xf849c070000	                            je 0x400d3ba	      6424	tc-i386.c	FUNCTION_86	IF_1
0x400cc1e	    0x8b0d00000000	            mov ecx, dword [0x0400cc24] 	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc24	          0x8d43ff	                      lea eax, [rbx - 1]	      6427	tc-i386.c	FUNCTION_86	IF_1
0x400cc27	            0x85c9	                           test ecx, ecx	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc29	            0x7418	                            je 0x400cc43	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc2b	          0x83fb04	                              cmp ebx, 4	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc2e	            0x7713	                            ja 0x400cc43	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc30	    0x8b3500000000	            mov esi, dword [0x0400cc36] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cc36	    0x3934c5000000	                  cmp dword [rax*8], esi	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cc3d	     0xf848f110000	                            je 0x400ddd2	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cc43	      0xba00000000	                              mov edx, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc48	      0xbe21190000	                         mov esi, 0x1921	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc4d	      0xbf00000000	                              mov edi, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc52	      0xe800000000	                          call 0x400cc57	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc57	    0x660f1f840000	                    nop word [rax + rax]	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400cc60	        0x4180f862	                           cmp r8b, 0x62	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cc64	     0xf85a6f6ffff	                           jne 0x400c310	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cc6a	          0x80cf04	                                or bh, 4	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cc6d	          0x4989de	                            mov r14, rbx	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cc70	            0x89d8	                            mov eax, ebx	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cc72	            0x21d9	                            and ecx, ebx	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cc74	      0xe986f6ffff	                           jmp 0x400c2ff	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400cc79	    0x4981cd007c00	                          or r13, 0x7c00	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400cc80	      0xe91dfcffff	                           jmp 0x400c8a2	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x400cc85	    0x390500000000	            cmp dword [0x0400cc8b], eax 	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400cc8b	     0xf840fffffff	                            je 0x400cba0	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400cc91	      0xe933faffff	                           jmp 0x400c6c9	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400cc96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400cca0	    0x800ccd000000	                   or byte [rcx*8], 0xf0	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400cca8	      0xe935fbffff	                           jmp 0x400c7e2	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400ccad	            0x31ff	                            xor edi, edi	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccaf	      0xba05000000	                              mov edx, 5	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccb4	      0xbe00000000	                              mov esi, 0	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccb9	      0xe800000000	                          call 0x400ccbe	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccbe	      0xbe05000000	                              mov esi, 5	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccc3	          0x4889c7	                            mov rdi, rax	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccc6	            0x31c0	                            xor eax, eax	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccc8	      0xe800000000	                          call 0x400cccd	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400cccd	      0xe9b6efffff	                           jmp 0x400bc88	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x400ccd2	    0x800ccd000000	                   or byte [rcx*8], 0xa0	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400ccda	      0xe903fbffff	                           jmp 0x400c7e2	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400ccdf	    0x4981cd007000	                          or r13, 0x7000	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x400cce6	      0xe9b7fbffff	                           jmp 0x400c8a2	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x400cceb	          0x80cf20	                             or bh, 0x20	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400ccee	          0x4989de	                            mov r14, rbx	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400ccf1	            0x89d8	                            mov eax, ebx	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400ccf3	            0x21d9	                            and ecx, ebx	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400ccf5	      0xe905f6ffff	                           jmp 0x400c2ff	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400ccfa	      0xba00000000	                              mov edx, 0	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x400ccff	      0xbea60e0000	                          mov esi, 0xea6	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x400cd04	      0xbf00000000	                              mov edi, 0	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x400cd09	      0xe800000000	                          call 0x400cd0e	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x400cd0e	    0x833d00000000	               cmp dword [0x0400cd15], 2	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cd15	     0xf8598fcffff	                           jne 0x400c9b3	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cd1b	      0xb901000000	                              mov ecx, 1	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cd20	        0x488d730e	                    lea rsi, [rbx + 0xe]	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400cd24	     0xfb604f50000	                 movzx eax, byte [rsi*8]	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400cd2c	          0x83e0ef	                     and eax, 0xffffffef	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400cd2f	          0x83c808	                               or eax, 8	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400cd32	    0x8804f5000000	                    mov byte [rsi*8], al	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400cd39	      0xe934feffff	                           jmp 0x400cb72	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400cd3e	          0x83e104	                              and ecx, 4	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400cd41	     0xf8517fcffff	                           jne 0x400c95e	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400cd47	    0x833d00000000	               cmp dword [0x0400cd4e], 2	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cd4e	     0xf8577fcffff	                           jne 0x400c9cb	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cd54	      0xe906feffff	                           jmp 0x400cb5f	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cd59	     0xf1f80000000	                         nop dword [rax]	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400cd60	            0x31ff	                            xor edi, edi	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd62	      0xba05000000	                              mov edx, 5	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd67	      0xbe00000000	                              mov esi, 0	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd6c	      0xe800000000	                          call 0x400cd71	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd71	          0x4889c7	                            mov rdi, rax	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd74	            0x31c0	                            xor eax, eax	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd76	      0xe800000000	                          call 0x400cd7b	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd7b	      0xe9f8f5ffff	                           jmp 0x400c378	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400cd80	            0x84c0	                             test al, al	      3756	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x400cd82	     0xf85c2f5ffff	                           jne 0x400c34a	      3756	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x400cd88	            0x31ff	                            xor edi, edi	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cd8a	      0xba05000000	                              mov edx, 5	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cd8f	      0xbe00000000	                              mov esi, 0	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cd94	      0xe800000000	                          call 0x400cd99	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cd99	          0x4c89e6	                            mov rsi, r12	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cd9c	          0x4889c7	                            mov rdi, rax	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cd9f	            0x31c0	                            xor eax, eax	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cda1	      0xe800000000	                          call 0x400cda6	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cda6	      0xe9feeeffff	                           jmp 0x400bca9	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x400cdab	            0x31ff	                            xor edi, edi	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdad	      0xba05000000	                              mov edx, 5	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdb2	      0xbe00000000	                              mov esi, 0	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdb7	      0xe800000000	                          call 0x400cdbc	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdbc	          0x4889c7	                            mov rdi, rax	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdbf	            0x31c0	                            xor eax, eax	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdc1	      0xe800000000	                          call 0x400cdc6	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdc6	      0xe996f5ffff	                           jmp 0x400c361	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400cdcb	    0x390500000000	            cmp dword [0x0400cdd1], eax 	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400cdd1	     0xf84c9fdffff	                            je 0x400cba0	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400cdd7	      0xe9f9f8ffff	                           jmp 0x400c6d5	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400cddc	         0xf1f4000	                         nop dword [rax]	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400cde0	      0xba05000000	                              mov edx, 5	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x400cde5	      0xbe00000000	                              mov esi, 0	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x400cdea	      0xe9e5f2ffff	                           jmp 0x400c0d4	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x400cdef	    0x8b0500000000	            mov eax, dword [0x0400cdf5] 	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400cdf5	           0xfbefa	                           movsx edi, dl	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400cdf8	          0x8d5801	                      lea ebx, [rax + 1]	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400cdfb	      0xe8a077ffff	                 call sym.output_invalid	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400ce00	      0xba05000000	                              mov edx, 5	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400ce05	          0x4889c5	                            mov rbp, rax	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400ce08	      0xbe00000000	                              mov esi, 0	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400ce0d	      0xe97cf2ffff	                           jmp 0x400c08e	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400ce12	    0x803d00000000	                cmp byte [0x0400ce19], 0	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400ce19	      0xba05000000	                              mov edx, 5	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400ce1e	      0xbe00000000	                              mov esi, 0	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400ce23	     0xf8494f5ffff	                            je 0x400c3bd	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400ce29	      0xe97ef5ffff	                           jmp 0x400c3ac	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400ce2e	    0x8b0d00000000	            mov ecx, dword [0x0400ce34] 	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400ce34	            0x85c9	                           test ecx, ecx	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400ce36	     0xf8481f5ffff	                            je 0x400c3bd	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400ce3c	    0x803d00000000	                cmp byte [0x0400ce43], 0	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400ce43	     0xf8574f5ffff	                           jne 0x400c3bd	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400ce49	      0xe954f5ffff	                           jmp 0x400c3a2	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400ce4e	      0xba00000000	                              mov edx, 0	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x400ce53	      0xbe7a120000	                         mov esi, 0x127a	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x400ce58	      0xbf00000000	                              mov edi, 0	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x400ce5d	      0xe800000000	                          call 0x400ce62	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x400ce62	    0x390500000000	            cmp dword [0x0400ce68], eax 	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400ce68	     0xf8432fdffff	                            je 0x400cba0	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400ce6e	      0xe96ef8ffff	                           jmp 0x400c6e1	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400ce73	       0xf1f440000	                   nop dword [rax + rax]	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400ce78	    0x488b1d000000	            mov rbx, qword [0x0400ce7f] 	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x400ce7f	      0xba05000000	                              mov edx, 5	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x400ce84	      0xbe00000000	                              mov esi, 0	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x400ce89	      0xe996f1ffff	                           jmp 0x400c024	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x400ce8e	    0x41b877000000	                           mov r8d, 0x77	      4766	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x400ce94	      0xe9a2f3ffff	                           jmp 0x400c23b	      4766	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x400ce99	    0x41b862000000	                           mov r8d, 0x62	      4761	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400ce9f	      0xe997f3ffff	                           jmp 0x400c23b	      4761	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400cea4	    0x41b86c000000	                           mov r8d, 0x6c	      4771	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400ceaa	      0xe98cf3ffff	                           jmp 0x400c23b	      4771	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400ceaf	    0xf60500000000	               test byte [0x0400ceb6], 2	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400ceb6	     0xf851cfdffff	                           jne 0x400cbd8	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400cebc	    0x8b0500000000	            mov eax, dword [0x0400cec2] 	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400cec2	      0x2520004000	                       and eax, 0x400020	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400cec7	          0x83f820	                           cmp eax, 0x20	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400ceca	     0xf8465060000	                            je 0x400d535	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400ced0	    0x448b15000000	           mov r10d, dword [0x0400ced7] 	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400ced7	          0x4585d2	                         test r10d, r10d	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400ceda	            0x750d	                           jne 0x400cee9	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400cedc	    0xf60500000000	               test byte [0x0400cee3], 1	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400cee3	     0xf85ab0e0000	                           jne 0x400dd94	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400cee9	    0x8b1500000000	            mov edx, dword [0x0400ceef] 	      4172	tc-i386.c	FUNCTION_68	IF_34
0x400ceef	    0xf7c200860300	                       test edx, 0x38600	      4172	tc-i386.c	FUNCTION_68	IF_34
0x400cef5	     0xf85a3000000	                           jne 0x400cf9e	      4172	tc-i386.c	FUNCTION_68	IF_34
0x400cefb	    0x803d00000000	                cmp byte [0x0400cf02], 0	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x400cf02	     0xf8596000000	                           jne 0x400cf9e	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x400cf08	    0x8b1d00000000	            mov ebx, dword [0x0400cf0e] 	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x400cf0e	    0x8b0500000000	            mov eax, dword [0x0400cf14] 	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x400cf14	    0x81fbcd000000	                           cmp ebx, 0xcd	      4191	tc-i386.c	FUNCTION_68	IF_37
0x400cf1a	     0xfb615000000	           movzx edx, byte [0x0400cf21] 	      4192	tc-i386.c	FUNCTION_68	IF_37
0x400cf21	     0xf84d9000000	                            je 0x400d000	      4191	tc-i386.c	FUNCTION_68	IF_37
0x400cf27	    0x81e2e0000000	                           and edx, 0xe0	      4199	tc-i386.c	FUNCTION_68	IF_38
0x400cf2d	            0x7411	                            je 0x400cf40	      4199	tc-i386.c	FUNCTION_68	IF_38
0x400cf2f	    0x488b15000000	            mov rdx, qword [0x0400cf36] 	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400cf36	        0x807a1802	                cmp byte [rdx + 0x18], 2	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400cf3a	     0xf84460a0000	                            je 0x400d986	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400cf40	    0x803d00000000	                cmp byte [0x0400cf47], 0	      4211	tc-i386.c	FUNCTION_68	IF_39
0x400cf47	            0x7909	                           jns 0x400cf52	      4211	tc-i386.c	FUNCTION_68	IF_39
0x400cf49	          0x83c808	                               or eax, 8	      4212	tc-i386.c	FUNCTION_68	IF_39
0x400cf4c	    0x890500000000	            mov dword [0x0400cf52], eax 	      4212	tc-i386.c	FUNCTION_68	IF_39
0x400cf52	    0x8b1500000000	            mov edx, dword [0x0400cf58] 	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400cf58	    0x81e201000020	                     and edx, 0x20000001	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400cf5e	    0x81fa01000020	                     cmp edx, 0x20000001	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400cf64	     0xf84ff020000	                            je 0x400d269	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400cf6a	    0x8b1500000000	            mov edx, dword [0x0400cf70] 	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400cf70	    0x81e201000020	                     and edx, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400cf76	    0x81fa01000020	                     cmp edx, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400cf7c	     0xf8408030000	                            je 0x400d28a	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400cf82	            0x85c0	                           test eax, eax	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400cf84	     0xf847e020000	                            je 0x400d208	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400cf8a	          0x83c840	                            or eax, 0x40	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400cf8d	            0x89c7	                            mov edi, eax	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400cf8f	      0xe84c3cffff	                     call sym.add_prefix	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x400cf94	      0xe80795ffff	                    call sym.output_insn	      4274	tc-i386.c	FUNCTION_68	CALL_55
0x400cf99	      0xe90bedffff	                           jmp 0x400bca9	      4274	tc-i386.c	FUNCTION_68	CALL_55
0x400cf9e	    0x833d00000000	               cmp dword [0x0400cfa5], 1	      4175	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400cfa5	     0xf84230c0000	                            je 0x400dbce	      4175	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400cfab	     0xfb635000000	           movzx esi, byte [0x0400cfb2] 	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x400cfb2	            0x89f7	                            mov edi, esi	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x400cfb4	          0x83e706	                              and edi, 6	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x400cfb7	     0xf8481010000	                            je 0x400d13e	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x400cfbd	    0x488b05000000	            mov rax, qword [0x0400cfc4] 	      3319	tc-i386.c	FUNCTION_62	IF_1
0x400cfc4	          0x4885c0	                           test rax, rax	      3319	tc-i386.c	FUNCTION_62	IF_1
0x400cfc7	     0xf84530a0000	                            je 0x400da20	      3319	tc-i386.c	FUNCTION_62	IF_1
0x400cfcd	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3319	tc-i386.c	FUNCTION_62	IF_1
0x400cfd1	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400cfd5	          0x8d4808	                      lea ecx, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400cfd8	          0xf6c201	                              test dl, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400cfdb	           0xf45c1	                         cmovne eax, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400cfde	          0x83e204	                              and edx, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x400cfe1	            0x7455	                            je 0x400d038	      2128	tc-i386.c	FUNCTION_28	IF_2
0x400cfe3	      0xba00000000	                              mov edx, 0	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x400cfe8	      0xbefb0c0000	                          mov esi, 0xcfb	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x400cfed	      0xbf00000000	                              mov edi, 0	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x400cff2	      0xe800000000	                          call 0x400cff7	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x400cff7	    0x660f1f840000	                    nop word [rax + rax]	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x400d000	          0xf6c208	                              test dl, 8	      4192	tc-i386.c	FUNCTION_68	IF_37
0x400d003	     0xf851effffff	                           jne 0x400cf27	      4192	tc-i386.c	FUNCTION_68	IF_37
0x400d009	    0x488b0d000000	            mov rcx, qword [0x0400d010] 	      4193	tc-i386.c	FUNCTION_68	IF_37
0x400d010	      0x4883791003	               cmp qword [rcx + 0x10], 3	      4193	tc-i386.c	FUNCTION_68	IF_37
0x400d015	     0xf850cffffff	                           jne 0x400cf27	      4193	tc-i386.c	FUNCTION_68	IF_37
0x400d01b	    0xc70500000000	           mov dword [0x0400d025], 0xcc 	      4195	tc-i386.c	FUNCTION_68	IF_37
0x400d025	    0xc70500000000	               mov dword [0x0400d02f], 0	      4196	tc-i386.c	FUNCTION_68	IF_37
0x400d02f	      0xe9f3feffff	                           jmp 0x400cf27	      4196	tc-i386.c	FUNCTION_68	IF_37
0x400d034	         0xf1f4000	                         nop dword [rax]	      4196	tc-i386.c	FUNCTION_68	IF_37
0x400d038	            0xf7d0	                                 not eax	      3321	tc-i386.c	FUNCTION_62	IF_1
0x400d03a	          0x83e00f	                            and eax, 0xf	      3321	tc-i386.c	FUNCTION_62	IF_1
0x400d03d	          0x4189c0	                            mov r8d, eax	      3321	tc-i386.c	FUNCTION_62	IF_1
0x400d040	    0x8b1500000000	            mov edx, dword [0x0400d046] 	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d046	          0x83fa02	                              cmp edx, 2	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d049	            0x741e	                            je 0x400d069	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d04b	    0x448b0d000000	            mov r9d, dword [0x0400d052] 	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d052	          0x4585c9	                           test r9d, r9d	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d055	            0x7512	                           jne 0x400d069	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d057	    0x8b0d00000000	            mov ecx, dword [0x0400d05d] 	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d05d	    0x3b0d00000000	            cmp ecx, dword [0x0400d063] 	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d063	     0xf84c2090000	                            je 0x400da2b	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400d069	        0x4080ff06	                              cmp dil, 6	      3359	tc-i386.c	FUNCTION_62	IF_3
0x400d06d	    0x8b0d00000000	            mov ecx, dword [0x0400d073] 	      3360	tc-i386.c	FUNCTION_62	IF_3
0x400d073	            0x7448	                            je 0x400d0bd	      3359	tc-i386.c	FUNCTION_62	IF_3
0x400d075	        0x4080ff04	                              cmp dil, 4	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x400d079	      0xb901000000	                              mov ecx, 1	      3362	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x400d07e	            0x743d	                            je 0x400d0bd	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x400d080	          0x8b4d08	                mov ecx, dword [rbp + 8]	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d083	            0x85c9	                           test ecx, ecx	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d085	     0xf84f20a0000	                            je 0x400db7d	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d08b	            0x31c0	                            xor eax, eax	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d08d	            0xeb0b	                           jmp 0x400d09a	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d08f	          0x83c001	                              add eax, 1	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d092	            0x39c8	                            cmp eax, ecx	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d094	     0xf84e30a0000	                            je 0x400db7d	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x400d09a	            0x89c7	                            mov edi, eax	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d09c	    0x440fb64cfd38	   movzx r9d, byte [rbp + rdi*8 + 0x38] 	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d0a2	        0x41f6c108	                             test r9b, 8	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d0a6	            0x74e7	                            je 0x400d08f	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d0a8	        0x4183e110	                           and r9d, 0x10	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d0ac	            0x74e1	                            je 0x400d08f	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d0ae	    0xf604fd000000	                 test byte [rdi*8], 0x10	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d0b6	            0x74d7	                            je 0x400d08f	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x400d0b8	      0xb901000000	                              mov ecx, 1	      3362	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x400d0bd	    0x8b1d00000000	            mov ebx, dword [0x0400d0c3] 	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0c3	           0xfb6c7	                           movzx eax, bh	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0c6	          0x83f866	                           cmp eax, 0x66	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0c9	     0xf84a40a0000	                            je 0x400db73	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0cf	     0xf8613090000	                           jbe 0x400d9e8	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0d5	      0x3df2000000	                           cmp eax, 0xf2	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0da	     0xf8436090000	                            je 0x400da16	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0e0	      0x3df3000000	                           cmp eax, 0xf3	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0e5	      0xbf02000000	                              mov edi, 2	      3387	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0ea	     0xf8502090000	                           jne 0x400d9f2	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d0f0	          0x83fa02	                              cmp edx, 2	      3397	tc-i386.c	FUNCTION_62	IF_6
0x400d0f3	    0x8b1500000000	            mov edx, dword [0x0400d0f9] 	      3398	tc-i386.c	FUNCTION_62	IF_6
0x400d0f9	            0x741f	                            je 0x400d11a	      3397	tc-i386.c	FUNCTION_62	IF_6
0x400d0fb	    0xf7c200800300	                       test edx, 0x38000	      3398	tc-i386.c	FUNCTION_62	IF_6
0x400d101	            0x7517	                           jne 0x400d11a	      3398	tc-i386.c	FUNCTION_62	IF_6
0x400d103	            0x89f0	                            mov eax, esi	      3399	tc-i386.c	FUNCTION_62	IF_6
0x400d105	          0x83e060	                           and eax, 0x60	      3399	tc-i386.c	FUNCTION_62	IF_6
0x400d108	            0x3c40	                            cmp al, 0x40	      3399	tc-i386.c	FUNCTION_62	IF_6
0x400d10a	            0x740e	                            je 0x400d11a	      3399	tc-i386.c	FUNCTION_62	IF_6
0x400d10c	    0x8b0500000000	            mov eax, dword [0x0400d112] 	      3400	tc-i386.c	FUNCTION_62	IF_6
0x400d112	            0xa80b	                            test al, 0xb	      3400	tc-i386.c	FUNCTION_62	IF_6
0x400d114	     0xf846a0a0000	                            je 0x400db84	      3400	tc-i386.c	FUNCTION_62	IF_6
0x400d11a	            0x89d0	                            mov eax, edx	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400d11c	    0xc70500000000	               mov dword [0x0400d126], 3	      3420	tc-i386.c	FUNCTION_62	ELSE_4
0x400d126	          0xc1e80f	                            shr eax, 0xf	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400d129	          0x83e007	                              and eax, 7	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400d12c	            0x3c05	                               cmp al, 5	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400d12e	     0xf87540b0000	                            ja 0x400dc88	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400d134	           0xfb6c0	                           movzx eax, al	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400d137	    0xff24c5000000	                       jmp qword [rax*8]	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400d13e	    0x488b0d000000	            mov rcx, qword [0x0400d145] 	      3487	tc-i386.c	FUNCTION_64	IF_1
0x400d145	    0x448b1d000000	           mov r11d, dword [0x0400d14c] 	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400d14c	          0x4885c9	                           test rcx, rcx	      3487	tc-i386.c	FUNCTION_64	IF_1
0x400d14f	     0xf8479080000	                            je 0x400d9ce	      3487	tc-i386.c	FUNCTION_64	IF_1
0x400d155	        0x41f6c302	                            test r11b, 2	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400d159	     0xf853e080000	                           jne 0x400d99d	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400d15f	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	      3491	tc-i386.c	FUNCTION_64	IF_1
0x400d163	         0xfb64910	           movzx ecx, byte [rcx + 0x10] 	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x400d167	        0x448d4008	                      lea r8d, [rax + 8]	      3493	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x400d16b	          0xf6c101	                              test cl, 1	      3493	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x400d16e	        0x410f45c0	                         cmovne eax, r8d	      3493	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x400d172	          0x83e104	                              and ecx, 4	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x400d175	            0x7507	                           jne 0x400d17e	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x400d177	    0xc60500000000	                mov byte [0x0400d17e], 8	      3497	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x400d17e	            0xf7d0	                                 not eax	      3498	tc-i386.c	FUNCTION_64	IF_1
0x400d180	          0x4531d2	                          xor r10d, r10d	      3484	tc-i386.c	FUNCTION_64
0x400d183	          0x83e00f	                            and eax, 0xf	      3498	tc-i386.c	FUNCTION_64	IF_1
0x400d186	            0x89c1	                            mov ecx, eax	      3498	tc-i386.c	FUNCTION_64	IF_1
0x400d188	    0x8b1d00000000	            mov ebx, dword [0x0400d18e] 	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d18e	           0xfb6c7	                           movzx eax, bh	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d191	          0x83f866	                           cmp eax, 0x66	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d194	     0xf84680b0000	                            je 0x400dd02	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d19a	     0xf86380b0000	                           jbe 0x400dcd8	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d1a0	      0x3df2000000	                           cmp eax, 0xf2	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d1a5	     0xf844c0b0000	                            je 0x400dcf7	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d1ab	      0x3df3000000	                           cmp eax, 0xf3	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d1b0	    0x41b802000000	                              mov r8d, 2	      3521	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d1b6	     0xf85270b0000	                           jne 0x400dce3	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400d1bc	            0x89d0	                            mov eax, edx	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1be	    0xc70500000000	               mov dword [0x0400d1c8], 4	      3531	tc-i386.c	FUNCTION_64
0x400d1c8	    0xc60500000000	            mov byte [0x0400d1cf], 0x62 	      3532	tc-i386.c	FUNCTION_64
0x400d1cf	          0xc1e80f	                            shr eax, 0xf	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1d2	          0x83e007	                              and eax, 7	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1d5	            0x3c01	                               cmp al, 1	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1d7	     0xf844f020000	                            je 0x400d42c	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1dd	     0xf82ea0a0000	                            jb 0x400dccd	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1e3	            0x3c02	                               cmp al, 2	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1e5	    0x41b903000000	                              mov r9d, 3	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1eb	     0xf8441020000	                            je 0x400d432	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d1f1	      0xba00000000	                              mov edx, 0	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x400d1f6	      0xbedb0d0000	                          mov esi, 0xddb	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x400d1fb	      0xbf00000000	                              mov edi, 0	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x400d200	      0xe800000000	                          call 0x400d205	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x400d205	           0xf1f00	                         nop dword [rax]	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x400d208	    0x8b1500000000	            mov edx, dword [0x0400d20e] 	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d20e	            0x85d2	                           test edx, edx	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d210	     0xf847efdffff	                            je 0x400cf94	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d216	            0x31c0	                            xor eax, eax	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d218	          0x4863d0	                         movsxd rdx, eax	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d21b	        0x4883c20e	                            add rdx, 0xe	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d21f	    0xf604d5000000	                    test byte [rdx*8], 1	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d227	            0x7422	                            je 0x400d24b	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d229	    0xf604d5000000	                 test byte [rdx*8], 0x20	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d231	            0x7418	                            je 0x400d24b	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d233	    0x488b14c50000	                  mov rdx, qword [rax*8]	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d23b	        0xf6421002	               test byte [rdx + 0x10], 2	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d23f	            0x750a	                           jne 0x400d24b	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d241	        0x807a1103	                cmp byte [rdx + 0x11], 3	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d245	     0xf8766070000	                            ja 0x400d9b1	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d24b	        0x4883c001	                              add rax, 1	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d24f	        0x4883f802	                              cmp rax, 2	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x400d253	            0x75c3	                           jne 0x400d218	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x400d255	    0xc70500000000	           mov dword [0x0400d25f], 0x40 	      4267	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x400d25f	      0xbf40000000	                           mov edi, 0x40	      4267	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x400d264	      0xe926fdffff	                           jmp 0x400cf8f	      4267	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x400d269	    0x488b15000000	            mov rdx, qword [0x0400d270] 	      4219	tc-i386.c	FUNCTION_68	IF_40
0x400d270	        0xf6421002	               test byte [rdx + 0x10], 2	      4219	tc-i386.c	FUNCTION_68	IF_40
0x400d274	            0x7529	                           jne 0x400d29f	      4219	tc-i386.c	FUNCTION_68	IF_40
0x400d276	    0x8b1500000000	            mov edx, dword [0x0400d27c] 	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d27c	    0x81e201000020	                     and edx, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d282	    0x81fa01000020	                     cmp edx, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d288	            0x750d	                           jne 0x400d297	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d28a	    0x488b15000000	            mov rdx, qword [0x0400d291] 	      4221	tc-i386.c	FUNCTION_68	IF_40
0x400d291	        0xf6421002	               test byte [rdx + 0x10], 2	      4221	tc-i386.c	FUNCTION_68	IF_40
0x400d295	            0x7508	                           jne 0x400d29f	      4221	tc-i386.c	FUNCTION_68	IF_40
0x400d297	            0x85c0	                           test eax, eax	      4224	tc-i386.c	FUNCTION_68	IF_40
0x400d299	     0xf8469ffffff	                            je 0x400d208	      4224	tc-i386.c	FUNCTION_68	IF_40
0x400d29f	          0x83c840	                            or eax, 0x40	      4228	tc-i386.c	FUNCTION_68	IF_40
0x400d2a2	      0xbb00000000	                              mov ebx, 0	      4228	tc-i386.c	FUNCTION_68	IF_40
0x400d2a7	            0x31ed	                            xor ebp, ebp	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d2a9	    0x890500000000	            mov dword [0x0400d2af], eax 	      4228	tc-i386.c	FUNCTION_68	IF_40
0x400d2af	          0x4863c5	                         movsxd rax, ebp	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2b2	        0x4883c00e	                            add rax, 0xe	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2b6	    0xf604c5000000	                    test byte [rax*8], 1	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2be	            0x745c	                            je 0x400d31c	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2c0	    0xf604c5000000	                 test byte [rax*8], 0x20	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2c8	            0x7452	                            je 0x400d31c	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2ca	    0x488b83a00000	            mov rax, qword [rbx + 0xa0] 	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2d1	        0xf6401002	               test byte [rax + 0x10], 2	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2d5	            0x7545	                           jne 0x400d31c	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d2d7	        0x80781103	                cmp byte [rax + 0x11], 3	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x400d2db	            0x7632	                           jbe 0x400d30f	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x400d2dd	          0x4c8b28	                    mov r13, qword [rax]	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2e0	    0x4c8b25000000	            mov r12, qword [0x0400d2e7] 	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2e7	      0xba05000000	                              mov edx, 5	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2ec	      0xbe00000000	                              mov esi, 0	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2f1	            0x31ff	                            xor edi, edi	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2f3	      0xe800000000	                          call 0x400d2f8	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2f8	          0x4c89ea	                            mov rdx, r13	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2fb	          0x4889c7	                            mov rdi, rax	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d2fe	          0x4c89e6	                            mov rsi, r12	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d301	            0x31c0	                            xor eax, eax	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d303	      0xe800000000	                          call 0x400d308	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d308	    0x488b83a00000	            mov rax, qword [rbx + 0xa0] 	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d30f	    0x4805c0000000	                           add rax, 0xc0	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d315	    0x488983a00000	             mov qword [rbx + 0xa0], rax	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d31c	          0x83c501	                              add ebp, 1	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d31f	        0x4883c308	                              add rbx, 8	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d323	          0x83fd02	                              cmp ebp, 2	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d326	            0x7587	                           jne 0x400d2af	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d328	    0x8b0500000000	            mov eax, dword [0x0400d32e] 	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d32e	      0xe94ffcffff	                           jmp 0x400cf82	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d333	    0x390500000000	            cmp dword [0x0400d339], eax 	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400d339	     0xf8461f8ffff	                            je 0x400cba0	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400d33f	      0xe9b5f3ffff	                           jmp 0x400c6f9	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400d344	         0xf1f4000	                         nop dword [rax]	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400d348	    0x390500000000	            cmp dword [0x0400d34e], eax 	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400d34e	     0xf844cf8ffff	                            je 0x400cba0	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400d354	      0xe994f3ffff	                           jmp 0x400c6ed	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400d359	     0xf1f80000000	                         nop dword [rax]	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400d360	      0x418d442401	                      lea eax, [r12 + 1]	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400d365	            0x4898	                                    cdqe	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400d367	    0xf604c5000000	                    test byte [rax*8], 4	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400d36f	     0xf8412f1ffff	                            je 0x400c487	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400d375	    0x488b05000000	            mov rax, qword [0x0400d37c] 	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400d37c	          0x4885c0	                           test rax, rax	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400d37f	     0xf8402f1ffff	                            je 0x400c487	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400d385	    0x483d00000000	                              cmp rax, 0	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400d38b	     0xf84f6f0ffff	                            je 0x400c487	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400d391	      0xba05000000	                              mov edx, 5	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d396	      0xbe00000000	                              mov esi, 0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d39b	            0x31ff	                            xor edi, edi	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d39d	    0x488b2d000000	            mov rbp, qword [0x0400d3a4] 	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d3a4	    0x488b1d000000	            mov rbx, qword [0x0400d3ab] 	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d3ab	      0xe800000000	                          call 0x400d3b0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d3b0	      0x418d542402	                      lea edx, [r12 + 2]	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d3b5	      0xe9aaf0ffff	                           jmp 0x400c464	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400d3ba	    0xf60500000000	           test byte [0x0400d3c1], 0x20 	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d3c1	     0xf84f1010000	                            je 0x400d5b8	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d3c7	    0xf60500000000	               test byte [0x0400d3ce], 8	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d3ce	     0xf84e4010000	                            je 0x400d5b8	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d3d4	          0x83fb01	                              cmp ebx, 1	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3d7	            0x7637	                           jbe 0x400d410	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3d9	          0x8d53fe	                      lea edx, [rbx - 2]	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3dc	      0xb800000000	                              mov eax, 0	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3e1	    0x488d14d50000	                        lea rdx, [rdx*8]	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3e9	    0x488b88a80000	            mov rcx, qword [rax + 0xa8] 	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3f0	        0x4883c008	                              add rax, 8	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3f4	    0x488988980000	             mov qword [rax + 0x98], rcx	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3fb	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d3ff	        0x48894870	             mov qword [rax + 0x70], rcx	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d403	        0x488b4834	            mov rcx, qword [rax + 0x34] 	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d407	        0x4889482c	             mov qword [rax + 0x2c], rcx	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d40b	          0x4839d0	                            cmp rax, rdx	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d40e	            0x75d9	                           jne 0x400d3e9	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400d410	          0x8d4bff	                      lea ecx, [rbx - 1]	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d413	    0x832d00000000	               sub dword [0x0400d41a], 1	      6519	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d41a	    0x832d00000000	               sub dword [0x0400d421], 1	      6520	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d421	    0x890d00000000	            mov dword [0x0400d427], ecx 	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d427	      0xe926020000	                           jmp 0x400d652	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400d42c	    0x41b902000000	                              mov r9d, 2	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400d432	    0x8b0500000000	            mov eax, dword [0x0400d438] 	      3553	tc-i386.c	FUNCTION_64
0x400d438	            0x89c2	                            mov edx, eax	      3553	tc-i386.c	FUNCTION_64
0x400d43a	            0xf7d2	                                 not edx	      3553	tc-i386.c	FUNCTION_64
0x400d43c	          0xc1e205	                              shl edx, 5	      3553	tc-i386.c	FUNCTION_64
0x400d43f	          0x4109d1	                             or r9d, edx	      3553	tc-i386.c	FUNCTION_64
0x400d442	        0x41f6c304	                            test r11b, 4	      3557	tc-i386.c	FUNCTION_64	IF_5
0x400d446	    0x44880d000000	              mov byte [0x0400d44d], r9b	      3553	tc-i386.c	FUNCTION_64
0x400d44d	     0xf852a050000	                           jne 0x400d97d	      3557	tc-i386.c	FUNCTION_64	IF_5
0x400d453	        0x4183c910	                            or r9d, 0x10	      3558	tc-i386.c	FUNCTION_64	IF_5
0x400d457	    0x44880d000000	              mov byte [0x0400d45e], r9b	      3558	tc-i386.c	FUNCTION_64	IF_5
0x400d45e	    0x8b1500000000	            mov edx, dword [0x0400d464] 	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x400d464	     0x31500000000	             add edx, dword [0x0400d46a]	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x400d46a	    0x3b1500000000	            cmp edx, dword [0x0400d470] 	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x400d470	     0xf84ed040000	                            je 0x400d963	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x400d476	          0x4489d2	                           mov edx, r10d	      3576	tc-i386.c	FUNCTION_64
0x400d479	            0xf7d2	                                 not edx	      3576	tc-i386.c	FUNCTION_64
0x400d47b	          0x4421da	                           and edx, r11d	      3576	tc-i386.c	FUNCTION_64
0x400d47e	            0x85d2	                           test edx, edx	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x400d480	    0x891500000000	            mov dword [0x0400d486], edx 	      3576	tc-i386.c	FUNCTION_64
0x400d486	     0xf852d080000	                           jne 0x400dcb9	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x400d48c	          0x4189c1	                            mov r9d, eax	      3580	tc-i386.c	FUNCTION_64
0x400d48f	        0x4183e108	                              and r9d, 8	      3580	tc-i386.c	FUNCTION_64
0x400d493	           0xf95c2	                                setne dl	      3580	tc-i386.c	FUNCTION_64
0x400d496	          0xc1e207	                              shl edx, 7	      3580	tc-i386.c	FUNCTION_64
0x400d499	          0x83e660	                           and esi, 0x60	      3581	tc-i386.c	FUNCTION_64	IF_8
0x400d49c	     0xf84fa070000	                            je 0x400dc9c	      3581	tc-i386.c	FUNCTION_64	IF_8
0x400d4a2	        0x4080fe40	                           cmp sil, 0x40	      3581	tc-i386.c	FUNCTION_64	IF_8
0x400d4a6	      0xbe80ffffff	                     mov esi, 0xffffff80	      3581	tc-i386.c	FUNCTION_64	IF_8
0x400d4ab	           0xf44d6	                          cmove edx, esi	      3581	tc-i386.c	FUNCTION_64	IF_8
0x400d4ae	    0x4c8b0d000000	              mov r9, qword [0x0400d4b5]	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400d4b5	          0xc1e103	                              shl ecx, 3	      3597	tc-i386.c	FUNCTION_64
0x400d4b8	        0x4183c804	                               or r8d, 4	      3597	tc-i386.c	FUNCTION_64
0x400d4bc	          0x4409c1	                             or ecx, r8d	      3597	tc-i386.c	FUNCTION_64
0x400d4bf	             0x9ca	                             or edx, ecx	      3597	tc-i386.c	FUNCTION_64
0x400d4c1	          0x4d85c9	                             test r9, r9	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400d4c4	    0x881500000000	               mov byte [0x0400d4ca], dl	      3597	tc-i386.c	FUNCTION_64
0x400d4ca	            0x740f	                            je 0x400d4db	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400d4cc	        0x418b4908	                 mov ecx, dword [r9 + 8]	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400d4d0	            0x85c9	                           test ecx, ecx	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400d4d2	            0x7407	                            je 0x400d4db	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400d4d4	    0x800d00000000	              or byte [0x0400d4db], 0x80	      3602	tc-i386.c	FUNCTION_64	IF_12
0x400d4db	    0x488b15000000	            mov rdx, qword [0x0400d4e2] 	      3605	tc-i386.c	FUNCTION_64	IF_13
0x400d4e2	          0x4885d2	                           test rdx, rdx	      3605	tc-i386.c	FUNCTION_64	IF_13
0x400d4e5	     0xf84050f0000	                            je 0x400e3f0	      3605	tc-i386.c	FUNCTION_64	IF_13
0x400d4eb	            0x8b12	                    mov edx, dword [rdx]	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d4ed	          0x83fa04	                              cmp edx, 4	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d4f0	     0xf84dc0e0000	                            je 0x400e3d2	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d4f6	     0xfb60d000000	           movzx ecx, byte [0x0400d4fd] 	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d4fd	          0xc1e205	                              shl edx, 5	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d500	          0x83c910	                            or ecx, 0x10	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d503	             0x9ca	                             or edx, ecx	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d505	    0x881500000000	               mov byte [0x0400d50b], dl	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x400d50b	          0x4d85c9	                             test r9, r9	      3664	tc-i386.c	FUNCTION_64	IF_21
0x400d50e	     0xf8400faffff	                            je 0x400cf14	      3664	tc-i386.c	FUNCTION_64	IF_21
0x400d514	          0x498b09	                     mov rcx, qword [r9]	      3664	tc-i386.c	FUNCTION_64	IF_21
0x400d517	          0x4885c9	                           test rcx, rcx	      3664	tc-i386.c	FUNCTION_64	IF_21
0x400d51a	     0xf84f4f9ffff	                            je 0x400cf14	      3664	tc-i386.c	FUNCTION_64	IF_21
0x400d520	     0xfb615000000	           movzx edx, byte [0x0400d527] 	      3665	tc-i386.c	FUNCTION_64	IF_21
0x400d527	           0xa5111	                or dl, byte [rcx + 0x11]	      3665	tc-i386.c	FUNCTION_64	IF_21
0x400d52a	    0x881500000000	               mov byte [0x0400d530], dl	      3665	tc-i386.c	FUNCTION_64	IF_21
0x400d530	      0xe9dff9ffff	                           jmp 0x400cf14	      3665	tc-i386.c	FUNCTION_64	IF_21
0x400d535	      0xe83634ffff	                 call sym.process_immext	      4158	tc-i386.c	FUNCTION_68	CALL_43
0x400d53a	    0x8b1d00000000	            mov ebx, dword [0x0400d540] 	      4158	tc-i386.c	FUNCTION_68	CALL_43
0x400d540	            0x85db	                           test ebx, ebx	      4161	tc-i386.c	FUNCTION_68	IF_31
0x400d542	     0xf8488f9ffff	                            je 0x400ced0	      4161	tc-i386.c	FUNCTION_68	IF_31
0x400d548	      0xe9b4f6ffff	                           jmp 0x400cc01	      4161	tc-i386.c	FUNCTION_68	IF_31
0x400d54d	           0xf1f00	                         nop dword [rax]	      4161	tc-i386.c	FUNCTION_68	IF_31
0x400d550	            0x85d2	                           test edx, edx	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d552	     0xf8464f9ffff	                            je 0x400cebc	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d558	    0x8b3500000000	            mov esi, dword [0x0400d55e] 	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d55e	            0x31ff	                            xor edi, edi	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d560	            0x31c9	                            xor ecx, ecx	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d562	            0x89c8	                            mov eax, ecx	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d564	        0x4883c00e	                            add rax, 0xe	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d568	    0x440fb604c500	                 movzx r8d, byte [rax*8]	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d571	          0x4584c0	                           test r8b, r8b	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d574	            0x781a	                            js 0x400d590	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d576	    0xf604c5000000	                    test byte [rax*8], 1	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d57e	            0x7510	                           jne 0x400d590	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d580	        0x4183e020	                           and r8d, 0x20	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d584	            0x7412	                            je 0x400d598	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d586	    0xf604c5000000	                    test byte [rax*8], 8	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d58e	            0x7508	                           jne 0x400d598	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d590	          0x83ee01	                              sub esi, 1	      4153	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d593	      0xbf01000000	                              mov edi, 1	      4153	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d598	          0x83c101	                              add ecx, 1	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d59b	            0x39d1	                            cmp ecx, edx	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d59d	            0x75c3	                           jne 0x400d562	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d59f	          0x4084ff	                           test dil, dil	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d5a2	     0xf8445f6ffff	                            je 0x400cbed	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d5a8	    0x893500000000	            mov dword [0x0400d5ae], esi 	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d5ae	      0xe93af6ffff	                           jmp 0x400cbed	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d5b3	       0xf1f440000	                   nop dword [rax + rax]	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d5b8	    0xf60500000000	           test byte [0x0400d5bf], 0x10 	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400d5bf	     0xf8441020000	                            je 0x400d806	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400d5c5	          0x83fb01	                              cmp ebx, 1	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d5c8	     0xf86b4020000	                           jbe 0x400d882	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d5ce	    0xf60500000000	               test byte [0x0400d5d5], 4	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d5d5	     0xf84a7020000	                            je 0x400d882	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d5db	    0x488b15000000	            mov rdx, qword [0x0400d5e2] 	      6528	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_7
0x400d5e2	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400d5e6	         0xfb64a10	           movzx ecx, byte [rdx + 0x10] 	      2123	tc-i386.c	FUNCTION_28
0x400d5ea	          0x8d7008	                      lea esi, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400d5ed	          0xf6c101	                              test cl, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400d5f0	           0xf45c6	                         cmovne eax, esi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400d5f3	          0x83e104	                              and ecx, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400d5f6	          0x8d7010	                   lea esi, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400d5f9	           0xf45c6	                         cmovne eax, esi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400d5fc	          0x4189c5	                           mov r13d, eax	      6529	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400d5ff	        0x4183e5fc	                    and r13d, 0xfffffffc	      6529	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400d603	          0x4439e8	                           cmp eax, r13d	      6531	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400d606	        0x458d7503	                     lea r14d, [r13 + 3]	      6530	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400d60a	            0x7446	                            je 0x400d652	      6531	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x400d60c	          0x4c8b22	                    mov r12, qword [rdx]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d60f	    0x488b1d000000	            mov rbx, qword [0x0400d616] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d616	      0xba05000000	                              mov edx, 5	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d61b	    0x4c8b3d000000	            mov r15, qword [0x0400d622] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d622	      0xbe00000000	                              mov esi, 0	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d627	            0x31ff	                            xor edi, edi	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d629	      0xe800000000	                          call 0x400d62e	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d62e	          0x4589e9	                           mov r9d, r13d	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d631	          0x4889c7	                            mov rdi, rax	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d634	          0x4d89e0	                             mov r8, r12	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d637	            0x4157	                                push r15	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d639	            0x4156	                                push r14	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d63b	          0x4889d9	                            mov rcx, rbx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d63e	            0x4154	                                push r12	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d640	              0x53	                                push rbx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d641	          0x4c89e2	                            mov rdx, r12	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d644	          0x4889de	                            mov rsi, rbx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d647	            0x31c0	                            xor eax, eax	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d649	      0xe800000000	                          call 0x400d64e	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d64e	        0x4883c420	                           add rsp, 0x20	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400d652	     0xfb605000000	           movzx eax, byte [0x0400d659] 	      6560	tc-i386.c	FUNCTION_86	IF_11
0x400d659	            0xa810	                           test al, 0x10	      6560	tc-i386.c	FUNCTION_86	IF_11
0x400d65b	     0xf847f000000	                            je 0x400d6e0	      6560	tc-i386.c	FUNCTION_86	IF_11
0x400d661	    0x66f705000000	          test word [0x0400d66a], 0x180 	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400d66a	     0xf84d3000000	                            je 0x400d743	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400d670	    0x8b0500000000	            mov eax, dword [0x0400d676] 	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400d676	    0x488b0d000000	            mov rcx, qword [0x0400d67d] 	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400d67d	          0x83f807	                              cmp eax, 7	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400d680	         0xfb65111	           movzx edx, byte [rcx + 0x11] 	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400d684	     0xf849a000000	                            je 0x400d724	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400d68a	          0xc1e203	                              shl edx, 3	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400d68d	            0x31db	                            xor ebx, ebx	      6422	tc-i386.c	FUNCTION_86
0x400d68f	             0x9c2	                             or edx, eax	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400d691	        0xf6411001	               test byte [rcx + 0x10], 1	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400d695	    0x891500000000	            mov dword [0x0400d69b], edx 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x400d69b	            0x7407	                            je 0x400d6a4	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400d69d	    0x830d00000000	                or dword [0x0400d6a4], 1	      6573	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x400d6a4	    0x81fa8d000000	                           cmp edx, 0x8d	      6629	tc-i386.c	FUNCTION_86	IF_22
0x400d6aa	     0xf8455020000	                            je 0x400d905	      6629	tc-i386.c	FUNCTION_86	IF_22
0x400d6b0	    0x488b05000000	            mov rax, qword [0x0400d6b7] 	      6629	tc-i386.c	FUNCTION_86	IF_22
0x400d6b7	          0x4839c3	                            cmp rbx, rax	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400d6ba	     0xf8429f8ffff	                            je 0x400cee9	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400d6c0	          0x4885c0	                           test rax, rax	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400d6c3	     0xf8420f8ffff	                            je 0x400cee9	      6639	tc-i386.c	FUNCTION_86	IF_23
0x400d6c9	          0x8b7808	                mov edi, dword [rax + 8]	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400d6cc	      0xe80f35ffff	                     call sym.add_prefix	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400d6d1	            0x85c0	                           test eax, eax	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400d6d3	     0xf8510f8ffff	                           jne 0x400cee9	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400d6d9	      0xe9cbe5ffff	                           jmp 0x400bca9	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400d6de	            0x6690	                                     nop	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x400d6e0	            0xa808	                              test al, 8	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x400d6e2	     0xf85890e0000	                           jne 0x400e571	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x400d6e8	    0x8b1500000000	            mov edx, dword [0x0400d6ee] 	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400d6ee	            0x89d0	                            mov eax, edx	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400d6f0	          0x83e0fc	                     and eax, 0xfffffffc	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400d6f3	      0x3da0000000	                           cmp eax, 0xa0	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400d6f8	     0xf84690e0000	                            je 0x400e567	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400d6fe	    0xf60500000000	               test byte [0x0400d705], 1	      6422	tc-i386.c	FUNCTION_86
0x400d705	      0xb800000000	                              mov eax, 0	      6422	tc-i386.c	FUNCTION_86
0x400d70a	      0xbb00000000	                              mov ebx, 0	      6422	tc-i386.c	FUNCTION_86
0x400d70f	        0x480f44d8	                          cmove rbx, rax	      6422	tc-i386.c	FUNCTION_86
0x400d713	            0xeb8f	                           jmp 0x400d6a4	      6422	tc-i386.c	FUNCTION_86
0x400d715	           0xf1f00	                         nop dword [rax]	      6422	tc-i386.c	FUNCTION_86
0x400d718	    0x4981cd006000	                          or r13, 0x6000	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x400d71f	      0xe97ef1ffff	                           jmp 0x400c8a2	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x400d724	          0x80fa01	                               cmp dl, 1	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400d727	     0xf855dffffff	                           jne 0x400d68a	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x400d72d	    0x488b1d000000	            mov rbx, qword [0x0400d734] 	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400d734	      0xba05000000	                              mov edx, 5	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400d739	      0xbe00000000	                              mov esi, 0	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400d73e	      0xe9e1e8ffff	                           jmp 0x400c024	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x400d743	    0x48ba01000000	                 movabs rdx, 0x400000001	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d74d	            0x31c0	                            xor eax, eax	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d74f	          0x4889d1	                            mov rcx, rdx	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d752	    0x48230d000000	             and rcx, qword [0x0400d759]	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d759	          0x4839d1	                            cmp rcx, rdx	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d75c	            0x740c	                            je 0x400d76a	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d75e	     0xfb605000000	           movzx eax, byte [0x0400d765] 	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d765	            0xf7d0	                                 not eax	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d767	          0x83e001	                              and eax, 1	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x400d76a	        0x4883c014	                           add rax, 0x14	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400d76e	    0x488b04c50000	                  mov rax, qword [rax*8]	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400d776	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400d77a	     0xb1500000000	              or edx, dword [0x0400d780]	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400d780	        0xf6401001	               test byte [rax + 0x10], 1	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400d784	    0x891500000000	            mov dword [0x0400d78a], edx 	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x400d78a	            0x7407	                            je 0x400d793	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400d78c	    0x830d00000000	                or dword [0x0400d793], 1	      6589	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x400d793	    0x448b25000000	           mov r12d, dword [0x0400d79a] 	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400d79a	            0x31db	                            xor ebx, ebx	      6422	tc-i386.c	FUNCTION_86
0x400d79c	          0x4585e4	                         test r12d, r12d	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400d79f	     0xf85fffeffff	                           jne 0x400d6a4	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400d7a5	    0xf60500000000	               test byte [0x0400d7ac], 1	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400d7ac	     0xf84f2feffff	                            je 0x400d6a4	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x400d7b2	    0x833d00000000	               cmp dword [0x0400d7b9], 2	      6594	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d7b9	     0xf84d7000000	                            je 0x400d896	      6594	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d7bf	    0x488b05000000	            mov rax, qword [0x0400d7c6] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7c6	    0x4c8b2d000000	            mov r13, qword [0x0400d7cd] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7cd	      0xba05000000	                              mov edx, 5	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7d2	    0x4c8b25000000	            mov r12, qword [0x0400d7d9] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7d9	      0xbe00000000	                              mov esi, 0	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7de	            0x31ff	                            xor edi, edi	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7e0	          0x4c8b30	                    mov r14, qword [rax]	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7e3	      0xe800000000	                          call 0x400d7e8	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7e8	          0x4c89ea	                            mov rdx, r13	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7eb	          0x4889c7	                            mov rdi, rax	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7ee	          0x4c89e6	                            mov rsi, r12	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7f1	          0x4c89f1	                            mov rcx, r14	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7f4	            0x31c0	                            xor eax, eax	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7f6	      0xe800000000	                          call 0x400d7fb	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d7fb	    0x8b1500000000	            mov edx, dword [0x0400d801] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d801	      0xe99efeffff	                           jmp 0x400d6a4	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x400d806	    0xf60500000000	           test byte [0x0400d80d], 0x10 	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d80d	     0xf843ffeffff	                            je 0x400d652	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d813	     0xfb605000000	           movzx eax, byte [0x0400d81a] 	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d81a	            0xf7d0	                                 not eax	      6548	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10
0x400d81c	          0x83e001	                              and eax, 1	      6548	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10
0x400d81f	    0x833d00000000	               cmp dword [0x0400d826], 1	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d826	     0xf8523010000	                           jne 0x400d94f	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d82c	          0x8d5001	                      lea edx, [rax + 1]	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d82f	        0x488d4a14	                   lea rcx, [rdx + 0x14]	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d833	    0x48833ccd0000	                    cmp qword [rcx*8], 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d83c	     0xf850d010000	                           jne 0x400d94f	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d842	        0x488d7014	                   lea rsi, [rax + 0x14]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d846	        0x4883c00e	                            add rax, 0xe	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d84a	    0xc70500000000	               mov dword [0x0400d854], 2	      6557	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d854	    0x488b04c50000	                  mov rax, qword [rax*8]	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d85c	    0x488b34f50000	                  mov rsi, qword [rsi*8]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d864	    0x488904d50000	                  mov qword [rdx*8], rax	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d86c	    0x488934cd0000	                  mov qword [rcx*8], rsi	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d874	          0x8d4b01	                      lea ecx, [rbx + 1]	      6556	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d877	    0x890d00000000	            mov dword [0x0400d87d], ecx 	      6556	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d87d	      0xe9d0fdffff	                           jmp 0x400d652	      6556	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x400d882	      0xba00000000	                              mov edx, 0	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d887	      0xbe7f190000	                         mov esi, 0x197f	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d88c	      0xbf00000000	                              mov edi, 0	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d891	      0xe800000000	                          call 0x400d896	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400d896	    0x486315000000	         movsxd rdx, dword [0x0400d89d] 	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d89d	    0x4c8b25000000	            mov r12, qword [0x0400d8a4] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8a4	      0xbe00000000	                              mov esi, 0	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8a9	    0x4c8b35000000	            mov r14, qword [0x0400d8b0] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8b0	          0x4889d0	                            mov rax, rdx	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d8b3	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8bb	            0x85c0	                           test eax, eax	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d8bd	           0xf94c0	                                 sete al	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d8c0	            0x31ff	                            xor edi, edi	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8c2	           0xfb6c0	                           movzx eax, al	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d8c5	          0x4c8b2a	                    mov r13, qword [rdx]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8c8	      0xba05000000	                              mov edx, 5	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8cd	        0x4883c014	                           add rax, 0x14	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x400d8d1	    0x488b04c50000	                  mov rax, qword [rax*8]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8d9	          0x4c8b38	                    mov r15, qword [rax]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8dc	      0xe800000000	                          call 0x400d8e1	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8e1	          0x4c89e2	                            mov rdx, r12	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8e4	          0x4889c7	                            mov rdi, rax	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8e7	          0x4d89e9	                             mov r9, r13	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8ea	          0x4d89e0	                             mov r8, r12	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8ed	          0x4c89f9	                            mov rcx, r15	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8f0	          0x4c89f6	                            mov rsi, r14	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8f3	            0x31c0	                            xor eax, eax	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8f5	      0xe800000000	                          call 0x400d8fa	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d8fa	    0x8b1500000000	            mov edx, dword [0x0400d900] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d900	      0xe99ffdffff	                           jmp 0x400d6a4	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x400d905	    0x488b05000000	            mov rax, qword [0x0400d90c] 	      6630	tc-i386.c	FUNCTION_86	IF_22
0x400d90c	          0x4885c0	                           test rax, rax	      6630	tc-i386.c	FUNCTION_86	IF_22
0x400d90f	     0xf84d4f5ffff	                            je 0x400cee9	      6630	tc-i386.c	FUNCTION_86	IF_22
0x400d915	    0x448b1d000000	           mov r11d, dword [0x0400d91c] 	      6631	tc-i386.c	FUNCTION_86	IF_22
0x400d91c	          0x4585db	                         test r11d, r11d	      6631	tc-i386.c	FUNCTION_86	IF_22
0x400d91f	     0xf8592fdffff	                           jne 0x400d6b7	      6631	tc-i386.c	FUNCTION_86	IF_22
0x400d925	    0x4c8b25000000	            mov r12, qword [0x0400d92c] 	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d92c	            0x31ff	                            xor edi, edi	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d92e	      0xba05000000	                              mov edx, 5	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d933	      0xbe00000000	                              mov esi, 0	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d938	      0xe800000000	                          call 0x400d93d	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d93d	          0x4c89e6	                            mov rsi, r12	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d940	          0x4889c7	                            mov rdi, rax	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d943	            0x31c0	                            xor eax, eax	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d945	      0xe800000000	                          call 0x400d94a	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d94a	      0xe961fdffff	                           jmp 0x400d6b0	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x400d94f	      0xba00000000	                              mov edx, 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d954	      0xbe99190000	                         mov esi, 0x1999	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d959	      0xbf00000000	                              mov edi, 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d95e	      0xe800000000	                          call 0x400d963	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x400d963	        0x41f6c301	                            test r11b, 1	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x400d967	     0xf8409fbffff	                            je 0x400d476	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x400d96d	        0x4183ca01	                              or r10d, 1	      3570	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x400d971	    0x802500000000	             and byte [0x0400d978], 0xbf	      3571	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x400d978	      0xe9f9faffff	                           jmp 0x400d476	      3571	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x400d97d	        0x4183ca04	                              or r10d, 4	      3560	tc-i386.c	FUNCTION_64	ELSE_3
0x400d981	      0xe9d8faffff	                           jmp 0x400d45e	      3560	tc-i386.c	FUNCTION_64	ELSE_3
0x400d986	    0x48c702000000	                      mov qword [rdx], 0	      4207	tc-i386.c	FUNCTION_68	IF_38
0x400d98d	    0x488b15000000	            mov rdx, qword [0x0400d994] 	      4208	tc-i386.c	FUNCTION_68	IF_38
0x400d994	        0xc6421803	                mov byte [rdx + 0x18], 3	      4208	tc-i386.c	FUNCTION_68	IF_38
0x400d998	      0xe9a3f5ffff	                           jmp 0x400cf40	      4208	tc-i386.c	FUNCTION_68	IF_38
0x400d99d	      0xba00000000	                              mov edx, 0	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400d9a2	      0xbea10d0000	                          mov esi, 0xda1	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400d9a7	      0xbf00000000	                              mov edi, 0	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400d9ac	      0xe800000000	                          call 0x400d9b1	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400d9b1	    0x8b0500000000	            mov eax, dword [0x0400d9b7] 	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d9b7	    0xc70500000000	               mov dword [0x0400d9c1], 0	      4262	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d9c1	            0x85c0	                           test eax, eax	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d9c3	     0xf84cbf5ffff	                            je 0x400cf94	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d9c9	      0xe9bcf5ffff	                           jmp 0x400cf8a	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d9ce	        0x41f6c302	                            test r11b, 2	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x400d9d2	            0x7532	                           jne 0x400da06	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x400d9d4	    0xc60500000000	                mov byte [0x0400d9db], 8	      3507	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x400d9db	          0x4531d2	                          xor r10d, r10d	      3484	tc-i386.c	FUNCTION_64
0x400d9de	      0xb90f000000	                            mov ecx, 0xf	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x400d9e3	      0xe9a0f7ffff	                           jmp 0x400d188	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x400d9e8	            0x31ff	                            xor edi, edi	      3381	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d9ea	            0x85c0	                           test eax, eax	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d9ec	     0xf84fef6ffff	                            je 0x400d0f0	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x400d9f2	      0xba00000000	                              mov edx, 0	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x400d9f7	      0xbe410d0000	                          mov esi, 0xd41	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x400d9fc	      0xbf00000000	                              mov edi, 0	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x400da01	      0xe800000000	                          call 0x400da06	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x400da06	    0x41ba02000000	                             mov r10d, 2	      3509	tc-i386.c	FUNCTION_64	ELSE_1	ELSE_2
0x400da0c	      0xb90f000000	                            mov ecx, 0xf	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x400da11	      0xe972f7ffff	                           jmp 0x400d188	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x400da16	      0xbf03000000	                              mov edi, 3	      3390	tc-i386.c	FUNCTION_62	SWITCH_1
0x400da1b	      0xe9d0f6ffff	                           jmp 0x400d0f0	      3390	tc-i386.c	FUNCTION_62	SWITCH_1
0x400da20	    0x41b80f000000	                            mov r8d, 0xf	      3326	tc-i386.c	FUNCTION_62	ELSE_1
0x400da26	      0xe915f6ffff	                           jmp 0x400d040	      3326	tc-i386.c	FUNCTION_62	ELSE_1
0x400da2b	    0x48b804000000	            movabs rax, 0x3800000000004 	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da35	    0x482305000000	             and rax, qword [0x0400da3c]	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da3c	        0x4883f804	                              cmp rax, 4	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da40	     0xf8523f6ffff	                           jne 0x400d069	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da46	    0x833d00000000	               cmp dword [0x0400da4d], 1	      3335	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da4d	     0xf8516f6ffff	                           jne 0x400d069	      3335	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da53	          0x8d41ff	                      lea eax, [rcx - 1]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da56	    0x488b3d000000	            mov rdi, qword [0x0400da5d] 	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da5d	        0x488d480e	                    lea rcx, [rax + 0xe]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da61	        0x4883c014	                           add rax, 0x14	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da65	    0x833d00000000	               cmp dword [0x0400da6c], 3	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x400da6c	    0x488b34cd0000	                  mov rsi, qword [rcx*8]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da74	    0x48893ccd0000	                  mov qword [rcx*8], rdi	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da7c	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da84	    0x488935000000	            mov qword [0x0400da8b], rsi 	      3343	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da8b	    0x488b35000000	            mov rsi, qword [0x0400da92] 	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da92	    0x488934c50000	                  mov qword [rax*8], rsi	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400da9a	    0x48890d000000	            mov qword [0x0400daa1], rcx 	      3346	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400daa1	     0xf8513010000	                           jne 0x400dbba	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x400daa7	    0x8b0500000000	            mov eax, dword [0x0400daad] 	      3351	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400daad	    0x8b0d00000000	            mov ecx, dword [0x0400dab3] 	      3352	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dab3	    0x488bb5880000	            mov rsi, qword [rbp + 0x88] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400daba	    0xc70500000000	               mov dword [0x0400dac4], 4	      3350	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dac4	    0x890500000000	            mov dword [0x0400daca], eax 	      3353	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400daca	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dace	    0x890d00000000	            mov dword [0x0400dad4], ecx 	      3352	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dad4	    0x488905000000	            mov qword [0x0400dadb], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dadb	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dadf	    0x488905000000	            mov qword [0x0400dae6], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dae6	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400daea	    0x488905000000	            mov qword [0x0400daf1], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400daf1	        0x488b4578	            mov rax, qword [rbp + 0x78] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400daf5	    0x488905000000	            mov qword [0x0400dafc], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400dafc	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db03	    0x488935000000	            mov qword [0x0400db0a], rsi 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db0a	        0x48c1ee28	                           shr rsi, 0x28	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db0e	            0x89f7	                            mov edi, esi	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db10	    0x488905000000	            mov qword [0x0400db17], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db17	    0x488b85900000	            mov rax, qword [rbp + 0x90] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db1e	          0x83e706	                              and edi, 6	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db21	    0x488905000000	            mov qword [0x0400db28], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db28	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db2f	    0x488905000000	            mov qword [0x0400db36], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db36	    0x488b85a00000	            mov rax, qword [rbp + 0xa0] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db3d	    0x488905000000	            mov qword [0x0400db44], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db44	    0x488b85a80000	            mov rax, qword [rbp + 0xa8] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db4b	    0x488905000000	            mov qword [0x0400db52], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db52	    0x488b85b00000	            mov rax, qword [rbp + 0xb0] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db59	    0x488905000000	            mov qword [0x0400db60], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db60	    0x488b85b80000	            mov rax, qword [rbp + 0xb8] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db67	    0x488905000000	            mov qword [0x0400db6e], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db6e	      0xe9f6f4ffff	                           jmp 0x400d069	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x400db73	      0xbf01000000	                              mov edi, 1	      3384	tc-i386.c	FUNCTION_62	SWITCH_1
0x400db78	      0xe973f5ffff	                           jmp 0x400d0f0	      3384	tc-i386.c	FUNCTION_62	SWITCH_1
0x400db7d	            0x31c9	                            xor ecx, ecx	      3367	tc-i386.c	FUNCTION_62	ELSE_3
0x400db7f	      0xe939f5ffff	                           jmp 0x400d0bd	      3367	tc-i386.c	FUNCTION_62	ELSE_3
0x400db84	            0x89c2	                            mov edx, eax	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400db86	        0x41c1e003	                              shl r8d, 3	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400db8a	          0xc1e102	                              shl ecx, 2	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400db8d	          0xc1ea02	                              shr edx, 2	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400db90	    0xc70500000000	               mov dword [0x0400db9a], 2	      3405	tc-i386.c	FUNCTION_62	IF_6
0x400db9a	    0xc60500000000	            mov byte [0x0400dba1], 0xc5 	      3406	tc-i386.c	FUNCTION_62	IF_6
0x400dba1	          0x83f201	                              xor edx, 1	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400dba4	          0xc1e207	                              shl edx, 7	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400dba7	          0x4409c2	                             or edx, r8d	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400dbaa	             0x9ca	                             or edx, ecx	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400dbac	             0x9d7	                             or edi, edx	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400dbae	    0x40883d000000	              mov byte [0x0400dbb5], dil	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400dbb5	      0xe95af3ffff	                           jmp 0x400cf14	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400dbba	      0xba00000000	                              mov edx, 0	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x400dbbf	      0xbe140d0000	                          mov esi, 0xd14	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x400dbc4	      0xbf00000000	                              mov edi, 0	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x400dbc9	      0xe800000000	                          call 0x400dbce	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x400dbce	    0x488b1d000000	            mov rbx, qword [0x0400dbd5] 	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400dbd5	      0xba05000000	                              mov edx, 5	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400dbda	      0xbe00000000	                              mov esi, 0	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400dbdf	      0xe940e4ffff	                           jmp 0x400c024	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400dbe4	    0xc60500000000	            mov byte [0x0400dbeb], 0x8f 	      3442	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dbeb	      0xba09000000	                              mov edx, 9	      3442	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dbf0	    0x8b0500000000	            mov eax, dword [0x0400dbf6] 	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x400dbf6	          0x83e660	                           and esi, 0x60	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x400dbf9	          0x4189c1	                            mov r9d, eax	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x400dbfc	          0x41f7d1	                                 not r9d	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x400dbff	        0x41c1e105	                              shl r9d, 5	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc03	          0x4409ca	                             or edx, r9d	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc06	    0x881500000000	               mov byte [0x0400dc0c], dl	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc0c	            0x89c2	                            mov edx, eax	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc0e	          0xc1ea03	                              shr edx, 3	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc11	          0xc1e207	                              shl edx, 7	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc14	        0x4080fe40	                           cmp sil, 0x40	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc18	      0xbe80ffffff	                     mov esi, 0xffffff80	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc1d	           0xf45f2	                         cmovne esi, edx	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc20	    0x428d14c50000	                         lea edx, [r8*8]	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc28	          0xc1e102	                              shl ecx, 2	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc2b	             0x9ca	                             or edx, ecx	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc2d	             0x9fa	                             or edx, edi	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc2f	             0x9f2	                             or edx, esi	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc31	    0x881500000000	               mov byte [0x0400dc37], dl	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc37	      0xe9d8f2ffff	                           jmp 0x400cf14	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400dc3c	    0xc60500000000	            mov byte [0x0400dc43], 0x8f 	      3438	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc43	      0xba08000000	                              mov edx, 8	      3438	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc48	            0xeba6	                           jmp 0x400dbf0	      3438	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc4a	    0xc60500000000	            mov byte [0x0400dc51], 0xc4 	      3434	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc51	      0xba03000000	                              mov edx, 3	      3434	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc56	            0xeb98	                           jmp 0x400dbf0	      3434	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc58	    0xc60500000000	            mov byte [0x0400dc5f], 0xc4 	      3430	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc5f	      0xba02000000	                              mov edx, 2	      3430	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc64	            0xeb8a	                           jmp 0x400dbf0	      3430	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc66	    0xc60500000000	            mov byte [0x0400dc6d], 0xc4 	      3426	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc6d	      0xba01000000	                              mov edx, 1	      3426	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc72	      0xe979ffffff	                           jmp 0x400dbf0	      3426	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc77	    0xc60500000000	            mov byte [0x0400dc7e], 0x8f 	      3446	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc7e	      0xba0a000000	                            mov edx, 0xa	      3446	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc83	      0xe968ffffff	                           jmp 0x400dbf0	      3446	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400dc88	      0xba00000000	                              mov edx, 0	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x400dc8d	      0xbe790d0000	                          mov esi, 0xd79	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x400dc92	      0xbf00000000	                              mov edi, 0	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x400dc97	      0xe800000000	                          call 0x400dc9c	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x400dc9c	          0x4585c9	                           test r9d, r9d	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x400dc9f	     0xf8509f8ffff	                           jne 0x400d4ae	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x400dca5	    0x833d00000000	               cmp dword [0x0400dcac], 1	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x400dcac	      0xbe80ffffff	                     mov esi, 0xffffff80	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x400dcb1	           0xf44d6	                          cmove edx, esi	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x400dcb4	      0xe9f5f7ffff	                           jmp 0x400d4ae	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x400dcb9	      0xba00000000	                              mov edx, 0	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x400dcbe	      0xbef90d0000	                          mov esi, 0xdf9	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x400dcc3	      0xbf00000000	                              mov edi, 0	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x400dcc8	      0xe800000000	                          call 0x400dccd	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x400dccd	    0x41b901000000	                              mov r9d, 1	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400dcd3	      0xe95af7ffff	                           jmp 0x400d432	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400dcd8	          0x4531c0	                            xor r8d, r8d	      3515	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400dcdb	            0x85c0	                           test eax, eax	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400dcdd	     0xf84d9f4ffff	                            je 0x400d1bc	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400dce3	      0xba00000000	                              mov edx, 0	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x400dce8	      0xbec70d0000	                          mov esi, 0xdc7	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x400dced	      0xbf00000000	                              mov edi, 0	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x400dcf2	      0xe800000000	                          call 0x400dcf7	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x400dcf7	    0x41b803000000	                              mov r8d, 3	      3524	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400dcfd	      0xe9baf4ffff	                           jmp 0x400d1bc	      3524	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400dd02	    0x41b801000000	                              mov r8d, 1	      3518	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400dd08	      0xe9aff4ffff	                           jmp 0x400d1bc	      3518	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400dd0d	      0x2500100000	                         and eax, 0x1000	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400dd12	          0x4809c3	                             or rbx, rax	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400dd15	      0xe93aeaffff	                           jmp 0x400c754	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400dd1a	      0xba00000000	                              mov edx, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400dd1f	      0xbe96080000	                          mov esi, 0x896	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400dd24	      0xbf00000000	                              mov edi, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400dd29	      0xe800000000	                          call 0x400dd2e	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400dd2e	    0x390500000000	            cmp dword [0x0400dd34], eax 	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400dd34	     0xf8466eeffff	                            je 0x400cba0	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400dd3a	      0xe961eaffff	                           jmp 0x400c7a0	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400dd3f	    0x390500000000	            cmp dword [0x0400dd45], eax 	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400dd45	     0xf8455eeffff	                            je 0x400cba0	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400dd4b	      0xe944eaffff	                           jmp 0x400c794	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400dd50	    0x390500000000	            cmp dword [0x0400dd56], eax 	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400dd56	     0xf8444eeffff	                            je 0x400cba0	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400dd5c	      0xe927eaffff	                           jmp 0x400c788	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400dd61	    0x390500000000	            cmp dword [0x0400dd67], eax 	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400dd67	     0xf8433eeffff	                            je 0x400cba0	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400dd6d	      0xe90aeaffff	                           jmp 0x400c77c	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400dd72	    0x390500000000	            cmp dword [0x0400dd78], eax 	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400dd78	     0xf8422eeffff	                            je 0x400cba0	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400dd7e	      0xe9ede9ffff	                           jmp 0x400c770	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400dd83	    0x390500000000	            cmp dword [0x0400dd89], eax 	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400dd89	     0xf8411eeffff	                            je 0x400cba0	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400dd8f	      0xe9d0e9ffff	                           jmp 0x400c764	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400dd94	    0x488b1d000000	            mov rbx, qword [0x0400dd9b] 	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400dd9b	            0x31ff	                            xor edi, edi	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400dd9d	      0xba05000000	                              mov edx, 5	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400dda2	      0xbe00000000	                              mov esi, 0	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400dda7	      0xe800000000	                          call 0x400ddac	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400ddac	          0x4889de	                            mov rsi, rbx	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400ddaf	          0x4889c7	                            mov rdi, rax	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400ddb2	            0x31c0	                            xor eax, eax	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400ddb4	      0xe800000000	                          call 0x400ddb9	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400ddb9	      0xe92bf1ffff	                           jmp 0x400cee9	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400ddbe	      0xba00000000	                              mov edx, 0	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400ddc3	      0xbe0a190000	                         mov esi, 0x190a	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400ddc8	      0xbf00000000	                              mov edi, 0	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400ddcd	      0xe800000000	                          call 0x400ddd2	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400ddd2	    0x8b3500000000	            mov esi, dword [0x0400ddd8] 	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400ddd8	    0x3934c5000000	                  cmp dword [rax*8], esi	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400dddf	     0xf855eeeffff	                           jne 0x400cc43	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x400dde5	     0xfb635000000	           movzx esi, byte [0x0400ddec] 	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400ddec	        0x40f6c620	                          test sil, 0x20	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400ddf0	     0xf84c3040000	                            je 0x400e2b9	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400ddf6	    0xf60500000000	               test byte [0x0400ddfd], 8	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400ddfd	     0xf84b6040000	                            je 0x400e2b9	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x400de03	          0x83e20c	                            and edx, 0xc	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400de06	          0x80fa08	                               cmp dl, 8	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400de09	     0xf8449040000	                            je 0x400e258	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400de0f	          0x83fb01	                              cmp ebx, 1	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de12	            0x7437	                            je 0x400de4b	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de14	          0x8d53fe	                      lea edx, [rbx - 2]	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de17	      0xb800000000	                              mov eax, 0	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de1c	    0x488d14d50000	                        lea rdx, [rdx*8]	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de24	    0x488b88a80000	            mov rcx, qword [rax + 0xa8] 	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de2b	        0x4883c008	                              add rax, 8	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de2f	    0x488988980000	             mov qword [rax + 0x98], rcx	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de36	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de3a	        0x48894870	             mov qword [rax + 0x70], rcx	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de3e	        0x488b4834	            mov rcx, qword [rax + 0x34] 	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de42	        0x4889482c	             mov qword [rax + 0x2c], rcx	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de46	          0x4839c2	                            cmp rdx, rax	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de49	            0x75d9	                           jne 0x400de24	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400de4b	    0xf60500000000	           test byte [0x0400de52], 0x20 	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x400de52	     0xf84faf7ffff	                            je 0x400d652	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x400de58	      0xe8132bffff	                 call sym.process_immext	      6501	tc-i386.c	FUNCTION_86	IF_1	CALL_5
0x400de5d	      0xe9f0f7ffff	                           jmp 0x400d652	      6501	tc-i386.c	FUNCTION_86	IF_1	CALL_5
0x400de62	          0x4889c1	                            mov rcx, rax	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400de65	      0x2500080000	                          and eax, 0x800	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400de6a	    0x81e100040000	                          and ecx, 0x400	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400de70	          0x4809ca	                             or rdx, rcx	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400de73	          0x4889d3	                            mov rbx, rdx	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400de76	          0x4809c3	                             or rbx, rax	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400de79	      0xe9d6e8ffff	                           jmp 0x400c754	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400de7e	     0xfb615000000	           movzx edx, byte [0x0400de85] 	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400de85	          0xf6c202	                              test dl, 2	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400de88	            0x740d	                            je 0x400de97	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400de8a	    0x833d00000000	               cmp dword [0x0400de91], 1	      3823	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400de91	     0xf84f9000000	                            je 0x400df90	      3823	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400de97	    0xf60500000000	               test byte [0x0400de9e], 2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400de9e	     0xf843ae6ffff	                            je 0x400c4de	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dea4	    0x8b0500000000	            mov eax, dword [0x0400deaa] 	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400deaa	          0x83f802	                              cmp eax, 2	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dead	     0xf84fc000000	                            je 0x400dfaf	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400deb3	          0x83f801	                              cmp eax, 1	      3844	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400deb6	     0xf8522e6ffff	                           jne 0x400c4de	      3844	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400debc	    0x833d00000000	               cmp dword [0x0400dec3], 1	      3845	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dec3	     0xf8557e7ffff	                           jne 0x400c620	      3845	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dec9	    0x833d00000000	           cmp dword [0x0400ded0], 0x30 	      3846	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400ded0	     0xf854ae7ffff	                           jne 0x400c620	      3846	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400ded6	    0x813d00000000	         cmp dword [0x0400dee0], 0xffff 	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dee0	     0xf853ae7ffff	                           jne 0x400c620	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dee6	    0x800d00000000	              or byte [0x0400deed], 0x40	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400deed	      0xe92ee7ffff	                           jmp 0x400c620	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400def2	    0x833d00000000	               cmp dword [0x0400def9], 1	      3789	tc-i386.c	FUNCTION_67	IF_1
0x400def9	     0xf85d2e5ffff	                           jne 0x400c4d1	      3789	tc-i386.c	FUNCTION_67	IF_1
0x400deff	    0xf60500000000	           test byte [0x0400df06], 0x20 	      3790	tc-i386.c	FUNCTION_67	IF_1
0x400df06	     0xf85c5e5ffff	                           jne 0x400c4d1	      3790	tc-i386.c	FUNCTION_67	IF_1
0x400df0c	    0x488b05000000	            mov rax, qword [0x0400df13] 	      3791	tc-i386.c	FUNCTION_67	IF_1
0x400df13	        0x80781802	                cmp byte [rax + 0x18], 2	      3791	tc-i386.c	FUNCTION_67	IF_1
0x400df17	     0xf85b4e5ffff	                           jne 0x400c4d1	      3791	tc-i386.c	FUNCTION_67	IF_1
0x400df1d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x400df21	          0x4889c2	                            mov rdx, rax	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x400df24	          0x83e27f	                           and edx, 0x7f	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x400df27	          0x4839d0	                            cmp rax, rdx	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x400df2a	     0xf85a1e5ffff	                           jne 0x400c4d1	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x400df30	    0x8b0500000000	            mov eax, dword [0x0400df36] 	      3793	tc-i386.c	FUNCTION_67	IF_1
0x400df36	      0x3da8000000	                           cmp eax, 0xa8	      3793	tc-i386.c	FUNCTION_67	IF_1
0x400df3b	     0xf8452020000	                            je 0x400e193	      3793	tc-i386.c	FUNCTION_67	IF_1
0x400df41	      0x3df6000000	                           cmp eax, 0xf6	      3795	tc-i386.c	FUNCTION_67	IF_1
0x400df46	     0xf8585e5ffff	                           jne 0x400c4d1	      3795	tc-i386.c	FUNCTION_67	IF_1
0x400df4c	    0x448b3d000000	           mov r15d, dword [0x0400df53] 	      3796	tc-i386.c	FUNCTION_67	IF_1
0x400df53	          0x4585ff	                         test r15d, r15d	      3796	tc-i386.c	FUNCTION_67	IF_1
0x400df56	     0xf8575e5ffff	                           jne 0x400c4d1	      3796	tc-i386.c	FUNCTION_67	IF_1
0x400df5c	    0x833d00000000	               cmp dword [0x0400df63], 2	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400df63	    0x488b0d000000	            mov rcx, qword [0x0400df6a] 	      3801	tc-i386.c	FUNCTION_67	IF_1
0x400df6a	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	      3801	tc-i386.c	FUNCTION_67	IF_1
0x400df6e	     0xf84c5010000	                            je 0x400e139	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400df74	          0x83f803	                              cmp eax, 3	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400df77	     0xf87a3e6ffff	                            ja 0x400c620	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400df7d	    0x800d00000000	              or byte [0x0400df84], 0x20	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400df84	    0xc60500000000	                mov byte [0x0400df8b], 0	      3806	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400df8b	      0xe990e6ffff	                           jmp 0x400c620	      3806	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400df90	    0x833d00000000	               cmp dword [0x0400df97], 1	      3824	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400df97	     0xf84ce000000	                            je 0x400e06b	      3824	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400df9d	    0xf60500000000	               test byte [0x0400dfa4], 2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfa4	     0xf8512ffffff	                           jne 0x400debc	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfaa	      0xe971e6ffff	                           jmp 0x400c620	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfaf	    0x488b05000000	            mov rax, qword [0x0400dfb6] 	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfb6	    0x483905000000	            cmp qword [0x0400dfbd], rax 	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfbd	     0xf855de6ffff	                           jne 0x400c620	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfc3	    0x8b0500000000	            mov eax, dword [0x0400dfc9] 	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfc9	          0x8d50d8	                   lea edx, [rax - 0x28]	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfcc	          0x83e2f7	                     and edx, 0xfffffff7	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfcf	     0xf854be6ffff	                           jne 0x400c620	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfd5	    0x813d00000000	         cmp dword [0x0400dfdf], 0xffff 	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfdf	     0xf853be6ffff	                           jne 0x400c620	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfe5	      0x3dc6000000	                           cmp eax, 0xc6	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfea	           0xf94c2	                                 sete dl	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dfed	    0x800d00000000	              or byte [0x0400dff4], 0x40	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400dff4	      0x3db0000000	                           cmp eax, 0xb0	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400dff9	            0x7408	                            je 0x400e003	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400dffb	            0x84d2	                             test dl, dl	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400dffd	     0xf841de6ffff	                            je 0x400c620	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e003	     0xfb605000000	           movzx eax, byte [0x0400e00a] 	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e00a	    0x800d00000000	              or byte [0x0400e011], 0x80	      3870	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e011	    0x802500000000	             and byte [0x0400e018], 0xfd	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e018	          0x83c820	                            or eax, 0x20	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e01b	          0x83e03f	                           and eax, 0x3f	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e01e	    0x880500000000	               mov byte [0x0400e024], al	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e024	     0xfb605000000	           movzx eax, byte [0x0400e02b] 	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e02b	          0x83c820	                            or eax, 0x20	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e02e	          0x83e03f	                           and eax, 0x3f	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e031	            0x84d2	                             test dl, dl	      3872	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e033	    0x880500000000	               mov byte [0x0400e039], al	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e039	     0xf84e1e5ffff	                            je 0x400c620	      3872	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e03f	     0xfb605000000	           movzx eax, byte [0x0400e046] 	      3879	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e046	    0xc70500000000	           mov dword [0x0400e050], 0xb0 	      3877	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e050	    0xc70500000000	         mov dword [0x0400e05a], 0xffff 	      3878	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e05a	          0x83c810	                            or eax, 0x10	      3879	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e05d	          0x83e0f7	                     and eax, 0xfffffff7	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e060	    0x880500000000	               mov byte [0x0400e066], al	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e066	      0xe9b5e5ffff	                           jmp 0x400c620	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400e06b	    0x488b0d000000	            mov rcx, qword [0x0400e072] 	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e072	        0x80791802	                cmp byte [rcx + 0x18], 2	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e076	     0xf8521ffffff	                           jne 0x400df9d	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e07c	    0x8b0500000000	            mov eax, dword [0x0400e082] 	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e082	      0x3db0000000	                           cmp eax, 0xb0	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e087	     0xf8485000000	                            je 0x400e112	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e08d	        0x488b5110	            mov rdx, qword [rcx + 0x10] 	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e091	          0x4889d1	                            mov rcx, rdx	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e094	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e09a	          0x4839ca	                            cmp rdx, rcx	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e09d	     0xf85fafeffff	                           jne 0x400df9d	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e0a3	          0x83f824	                           cmp eax, 0x24	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0a6	            0x7459	                            je 0x400e101	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0a8	      0x3da8000000	                           cmp eax, 0xa8	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0ad	            0x7452	                            je 0x400e101	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0af	      0x3d80000000	                           cmp eax, 0x80	      3833	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0b4	            0x742c	                            je 0x400e0e2	      3833	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0b6	      0x3dc6000000	                           cmp eax, 0xc6	      3836	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0bb	           0xf94c2	                                 sete dl	      3836	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0be	      0x3df6000000	                           cmp eax, 0xf6	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0c3	            0x7408	                            je 0x400e0cd	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0c5	            0x84d2	                             test dl, dl	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0c7	     0xf84d0feffff	                            je 0x400df9d	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0cd	    0x448b35000000	           mov r14d, dword [0x0400e0d4] 	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0d4	          0x4585f6	                         test r14d, r14d	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0d7	     0xf8410ffffff	                            je 0x400dfed	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0dd	      0xe9bbfeffff	                           jmp 0x400df9d	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0e2	    0x833d00000000	               cmp dword [0x0400e0e9], 4	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0e9	     0xf84f7fdffff	                            je 0x400dee6	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0ef	    0xf60500000000	               test byte [0x0400e0f6], 2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0f6	     0xf85c0fdffff	                           jne 0x400debc	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e0fc	      0xe9dde3ffff	                           jmp 0x400c4de	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e101	    0x813d00000000	         cmp dword [0x0400e10b], 0xffff 	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e10b	            0x75a2	                           jne 0x400e0af	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e10d	      0xe9d3feffff	                           jmp 0x400dfe5	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e112	    0x813d00000000	         cmp dword [0x0400e11c], 0xffff 	      3827	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e11c	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x400e120	     0xf8482000000	                            je 0x400e1a8	      3827	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e126	          0x4889c2	                            mov rdx, rax	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e129	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e12f	          0x4839c2	                            cmp rdx, rax	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e132	            0x75bb	                           jne 0x400e0ef	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e134	      0xe964feffff	                           jmp 0x400df9d	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x400e139	     0xfb615000000	           movzx edx, byte [0x0400e140] 	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400e140	    0xc60500000000	                mov byte [0x0400e147], 0	      3806	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400e147	          0x83ca20	                            or edx, 0x20	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400e14a	          0x83f803	                              cmp eax, 3	      3807	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x400e14d	    0x881500000000	               mov byte [0x0400e153], dl	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400e153	     0xf86c7e4ffff	                           jbe 0x400c620	      3807	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x400e159	        0xf6411001	               test byte [rcx + 0x10], 1	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x400e15d	     0xf85bde4ffff	                           jne 0x400c620	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x400e163	          0xf6c240	                           test dl, 0x40	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x400e166	    0x48c7c080feff	             mov rax, 0xfffffffffffffe80	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x400e16d	            0x7515	                           jne 0x400e184	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x400e16f	          0x83e280	                     and edx, 0xffffff80	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400e172	          0x80fa01	                               cmp dl, 1	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400e175	          0x4819c0	                            sbb rax, rax	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400e178	    0x482580feffff	             and rax, 0xfffffffffffffe80	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400e17e	    0x482d00030000	                          sub rax, 0x300	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x400e184	          0x4801c8	                            add rax, rcx	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400e187	    0x488905000000	            mov qword [0x0400e18e], rax 	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400e18e	      0xe98de4ffff	                           jmp 0x400c620	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400e193	    0x813d00000000	         cmp dword [0x0400e19d], 0xffff 	      3794	tc-i386.c	FUNCTION_67	IF_1
0x400e19d	     0xf852ee3ffff	                           jne 0x400c4d1	      3794	tc-i386.c	FUNCTION_67	IF_1
0x400e1a3	      0xe9b4fdffff	                           jmp 0x400df5c	      3794	tc-i386.c	FUNCTION_67	IF_1
0x400e1a8	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x400e1ad	          0x4839c8	                            cmp rax, rcx	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x400e1b0	     0xf8770ffffff	                            ja 0x400e126	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x400e1b6	     0xfb605000000	           movzx eax, byte [0x0400e1bd] 	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1bd	          0x83e2fd	                     and edx, 0xfffffffd	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1c0	    0x800d00000000	              or byte [0x0400e1c7], 0x40	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400e1c7	    0x800d00000000	              or byte [0x0400e1ce], 0x80	      3870	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1ce	    0x881500000000	               mov byte [0x0400e1d4], dl	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1d4	          0x83c820	                            or eax, 0x20	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1d7	          0x83e03f	                           and eax, 0x3f	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1da	    0x880500000000	               mov byte [0x0400e1e0], al	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1e0	     0xfb605000000	           movzx eax, byte [0x0400e1e7] 	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1e7	          0x83c820	                            or eax, 0x20	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1ea	          0x83e03f	                           and eax, 0x3f	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1ed	    0x880500000000	               mov byte [0x0400e1f3], al	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1f3	      0xe928e4ffff	                           jmp 0x400c620	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400e1f8	    0x391500000000	            cmp dword [0x0400e1fe], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400e1fe	            0x744e	                            je 0x400e24e	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400e200	    0x391500000000	            cmp dword [0x0400e206], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400e206	            0x743c	                            je 0x400e244	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400e208	    0x391500000000	            cmp dword [0x0400e20e], edx 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400e20e	     0xf8547e5ffff	                           jne 0x400c75b	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400e214	    0x390500000000	            cmp dword [0x0400e21a], eax 	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400e21a	     0xf853be5ffff	                           jne 0x400c75b	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400e220	    0x833d00000000	               cmp dword [0x0400e227], 1	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e227	           0xf94c2	                                 sete dl	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e22a	    0x803d00000000	                cmp byte [0x0400e231], 0	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e231	           0xf95c0	                                setne al	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e234	            0x38c2	                              cmp dl, al	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e236	          0x4c89d0	                            mov rax, r10	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e239	        0x490f44c3	                          cmove rax, r11	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e23d	            0x31d2	                            xor edx, edx	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e23f	      0xe917e5ffff	                           jmp 0x400c75b	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400e244	    0x390500000000	            cmp dword [0x0400e24a], eax 	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400e24a	            0x74d4	                            je 0x400e220	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400e24c	            0xebba	                           jmp 0x400e208	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400e24e	    0x390500000000	            cmp dword [0x0400e254], eax 	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400e254	            0x74ca	                            je 0x400e220	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400e256	            0xeba8	                           jmp 0x400e200	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400e258	    0x800d00000000	                 or byte [0x0400e25f], 4	      6443	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400e25f	          0x83e6df	                     and esi, 0xffffffdf	      6442	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400e262	    0x408835000000	              mov byte [0x0400e269], sil	      6442	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400e269	          0x8d5301	                      lea edx, [rbx + 1]	      6491	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e26c	          0x83c101	                              add ecx, 1	      6492	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e26f	    0x830500000000	               add dword [0x0400e276], 1	      6493	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e276	    0x890d00000000	            mov dword [0x0400e27c], ecx 	      6492	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e27c	            0x89d9	                            mov ecx, ebx	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e27e	    0x891500000000	            mov dword [0x0400e284], edx 	      6491	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e284	    0x488b14c50000	                  mov rdx, qword [rax*8]	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e28c	    0x488914cd0000	                  mov qword [rcx*8], rdx	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e294	    0x488b14c50000	                  mov rdx, qword [rax*8]	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e29c	    0x488b04c50000	                  mov rax, qword [rax*8]	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e2a4	    0x488914cd0000	                  mov qword [rcx*8], rdx	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e2ac	    0x488904cd0000	                  mov qword [rcx*8], rax	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e2b4	      0xe992fbffff	                           jmp 0x400de4b	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400e2b9	    0xf60500000000	           test byte [0x0400e2c0], 0x20 	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e2c0	            0x74a7	                            je 0x400e269	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e2c2	          0x83fb04	                              cmp ebx, 4	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e2c5	     0xf84b9020000	                            je 0x400e584	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e2cb	          0x83e20c	                            and edx, 0xc	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e2ce	          0x80fa08	                               cmp dl, 8	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e2d1	     0xf85ad020000	                           jne 0x400e584	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e2d7	            0x89d8	                            mov eax, ebx	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e2d9	          0x8d50ff	                      lea edx, [rax - 1]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e2dc	    0x488b34d50000	                  mov rsi, qword [rdx*8]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e2e4	          0x4889d1	                            mov rcx, rdx	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e2e7	    0x488934c50000	                  mov qword [rax*8], rsi	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e2ef	    0x488b34d50000	                  mov rsi, qword [rdx*8]	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e2f7	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e2ff	    0x488934c50000	                  mov qword [rax*8], rsi	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e307	    0x488914c50000	                  mov qword [rax*8], rdx	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e30f	            0x89c8	                            mov eax, ecx	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e311	            0x85c0	                           test eax, eax	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e313	            0x75c4	                           jne 0x400e2d9	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400e315	    0x488b3d000000	            mov rdi, qword [0x0400e31c] 	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400e31c	      0xbe00000000	                              mov esi, 0	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400e321	      0xe800000000	                          call 0x400e326	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400e326	            0x89d9	                            mov ecx, ebx	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e328	    0x48c705000000	               mov qword [0x0400e333], 0	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e333	    0x48c705000000	               mov qword [0x0400e33e], 0	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e33e	    0xc60500000000	                mov byte [0x0400e345], 8	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e345	    0xc60500000000	                mov byte [0x0400e34c], 8	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e34c	    0x488905000000	            mov qword [0x0400e353], rax 	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x400e353	    0x488b14cd0000	                  mov rdx, qword [rcx*8]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e35b	          0x8d4301	                      lea eax, [rbx + 1]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e35e	    0xc60500000000	                mov byte [0x0400e365], 4	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e365	    0xc60500000000	                mov byte [0x0400e36c], 4	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e36c	    0x830500000000	               add dword [0x0400e373], 2	      6478	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e373	    0x830500000000	               add dword [0x0400e37a], 2	      6479	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e37a	    0x488914c50000	                  mov qword [rax*8], rdx	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e382	    0x488b14cd0000	                  mov rdx, qword [rcx*8]	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e38a	    0x830500000000	               add dword [0x0400e391], 2	      6480	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e391	    0x488914c50000	                  mov qword [rax*8], rdx	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e399	    0x488b14cd0000	                  mov rdx, qword [rcx*8]	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e3a1	    0x488914c50000	                  mov qword [rax*8], rdx	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e3a9	      0xe99dfaffff	                           jmp 0x400de4b	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400e3ae	    0xf60500000000	               test byte [0x0400e3b5], 8	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400e3b5	     0xf85a7e1ffff	                           jne 0x400c562	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400e3bb	    0xf60500000000	               test byte [0x0400e3c2], 8	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400e3c2	     0xf859ae1ffff	                           jne 0x400c562	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400e3c8	      0xe953e2ffff	                           jmp 0x400c620	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400e3cd	      0xe800000000	                          call 0x400e3d2	      4275	tc-i386.c	FUNCTION_68
0x400e3d2	     0xfb615000000	           movzx edx, byte [0x0400e3d9] 	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x400e3d9	          0xc1e205	                              shl edx, 5	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x400e3dc	     0xa1500000000	                or dl, byte [0x0400e3e2]	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x400e3e2	          0x83ca10	                            or edx, 0x10	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x400e3e5	    0x881500000000	               mov byte [0x0400e3eb], dl	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x400e3eb	      0xe91bf1ffff	                           jmp 0x400d50b	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x400e3f0	    0x440fb6050000	           movzx r8d, byte [0x0400e3f8] 	      3611	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400e3f8	          0x4489c2	                            mov edx, r8d	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400e3fb	          0x83e207	                              and edx, 7	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400e3fe	            0x745e	                            je 0x400e45e	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400e400	          0x80fa05	                               cmp dl, 5	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400e403	            0x7459	                            je 0x400e45e	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400e405	        0x4183e007	                              and r8d, 7	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e409	        0x4180f802	                              cmp r8b, 2	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e40d	            0x7424	                            je 0x400e433	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e40f	     0xf86e8000000	                           jbe 0x400e4fd	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e415	        0x4180f803	                              cmp r8b, 3	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e419	     0xf84d4000000	                            je 0x400e4f3	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e41f	     0xfb63d000000	           movzx edi, byte [0x0400e426] 	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e426	          0xc1e705	                              shl edi, 5	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e429	        0x4180f804	                              cmp r8b, 4	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e42d	     0xf8599000000	                           jne 0x400e4cc	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e433	    0x400a3d000000	               or dil, byte [0x0400e43a]	      3651	tc-i386.c	FUNCTION_64	IF_13
0x400e43a	    0x48833d000000	               cmp qword [0x0400e442], 0	      3653	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x400e442	    0x40883d000000	              mov byte [0x0400e449], dil	      3651	tc-i386.c	FUNCTION_64	IF_13
0x400e449	     0xf84bcf0ffff	                            je 0x400d50b	      3653	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x400e44f	          0x83cf10	                            or edi, 0x10	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x400e452	    0x40883d000000	              mov byte [0x0400e459], dil	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x400e459	      0xe9adf0ffff	                           jmp 0x400d50b	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x400e45e	    0x448b1d000000	           mov r11d, dword [0x0400e465] 	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e465	          0x4585db	                         test r11d, r11d	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e468	            0x749b	                            je 0x400e405	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e46a	          0x4531d2	                          xor r10d, r10d	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e46d	          0x4489d6	                           mov esi, r10d	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e470	     0xfb614f50000	                 movzx edx, byte [rsi*8]	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e478	            0x89d1	                            mov ecx, edx	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e47a	          0xc0e903	                               shr cl, 3	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e47d	            0x89cd	                            mov ebp, ecx	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e47f	            0x89d1	                            mov ecx, edx	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e481	          0xc0ea05	                               shr dl, 5	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e484	          0xc0e904	                               shr cl, 4	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e487	          0x83e501	                              and ebp, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e48a	          0x83e201	                              and edx, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e48d	          0x83e101	                              and ecx, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e490	             0x1e9	                            add ecx, ebp	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e492	             0x1ca	                            add edx, ecx	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e494	          0x83fa01	                              cmp edx, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e497	     0xf8e85000000	                           jle 0x400e522	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x400e49d	     0xfb614f50000	                 movzx edx, byte [rsi*8]	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e4a5	          0xf6c220	                           test dl, 0x20	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e4a8	            0x7563	                           jne 0x400e50d	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e4aa	          0xf6c210	                           test dl, 0x10	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4ad	            0x7531	                           jne 0x400e4e0	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4af	          0x83e208	                              and edx, 8	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400e4b2	            0x746e	                            je 0x400e522	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400e4b4	     0xfb615000000	           movzx edx, byte [0x0400e4bb] 	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400e4bb	          0x83e2f8	                     and edx, 0xfffffff8	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400e4be	          0x83ca02	                               or edx, 2	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400e4c1	    0x881500000000	               mov byte [0x0400e4c7], dl	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400e4c7	      0xe967ffffff	                           jmp 0x400e433	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400e4cc	      0xba00000000	                              mov edx, 0	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x400e4d1	      0xbe400e0000	                          mov esi, 0xe40	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x400e4d6	      0xbf00000000	                              mov edi, 0	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x400e4db	      0xe800000000	                          call 0x400e4e0	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x400e4e0	     0xfb615000000	           movzx edx, byte [0x0400e4e7] 	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4e7	          0x83e2f8	                     and edx, 0xfffffff8	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4ea	          0x83ca03	                               or edx, 3	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4ed	    0x881500000000	               mov byte [0x0400e4f3], dl	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4f3	      0xbf20000000	                           mov edi, 0x20	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4f8	      0xe936ffffff	                           jmp 0x400e433	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400e4fd	        0x4180f801	                              cmp r8b, 1	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e501	            0x75c9	                           jne 0x400e4cc	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e503	      0xbf40000000	                           mov edi, 0x40	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e508	      0xe926ffffff	                           jmp 0x400e433	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400e50d	     0xfb615000000	           movzx edx, byte [0x0400e514] 	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e514	          0x83e2f8	                     and edx, 0xfffffff8	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e517	          0x83ca01	                               or edx, 1	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e51a	    0x881500000000	               mov byte [0x0400e520], dl	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e520	            0xebe1	                           jmp 0x400e503	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x400e522	        0x4183c201	                             add r10d, 1	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e526	          0x4539da	                          cmp r10d, r11d	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e529	     0xf853effffff	                           jne 0x400e46d	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e52f	      0xe9d1feffff	                           jmp 0x400e405	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400e534	     0xfb615000000	           movzx edx, byte [0x0400e53b] 	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400e53b	          0x83e2f8	                     and edx, 0xfffffff8	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400e53e	          0x83ca02	                               or edx, 2	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400e541	    0x881500000000	               mov byte [0x0400e547], dl	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400e547	      0xe997e0ffff	                           jmp 0x400c5e3	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400e54c	     0xfb605000000	           movzx eax, byte [0x0400e553] 	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400e553	          0x83e0f9	                     and eax, 0xfffffff9	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400e556	          0x83c802	                               or eax, 2	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400e559	    0x880500000000	               mov byte [0x0400e55f], al	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400e55f	          0x83e006	                              and eax, 6	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400e562	      0xe97ce0ffff	                           jmp 0x400c5e3	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400e567	      0xbb00000000	                              mov ebx, 0	      6620	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400e56c	      0xe93ff1ffff	                           jmp 0x400d6b0	      6620	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x400e571	      0xe82a36ffff	               call sym.build_modrm_byte	      6616	tc-i386.c	FUNCTION_86	ELSE_11	IF_19	CALL_19
0x400e576	    0x8b1500000000	            mov edx, dword [0x0400e57c] 	      6616	tc-i386.c	FUNCTION_86	ELSE_11	IF_19	CALL_19
0x400e57c	          0x4889c3	                            mov rbx, rax	      6616	tc-i386.c	FUNCTION_86	ELSE_11	IF_19	CALL_19
0x400e57f	      0xe920f1ffff	                           jmp 0x400d6a4	      6616	tc-i386.c	FUNCTION_86	ELSE_11	IF_19	CALL_19
0x400e584	      0xba00000000	                              mov edx, 0	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e589	      0xbe3f190000	                         mov esi, 0x193f	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e58e	      0xbf00000000	                              mov edi, 0	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400e593	      0xe800000000	                          call 0x400e598	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
i386_mach	IF,9:DO,0:ELSE,6:WHILE,0:CALL,11:functions,0:SWITCH,0:FOR,0	60
0x400b6c0	        0x4883ec08	                              sub rsp, 8	      2740	tc-i386.c	ELSE_3	FUNCTION_51
0x400b6c4	    0x488b05000000	            mov rax, qword [0x0400b6cb] 	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b6cb	      0xbf00000000	                              mov edi, 0	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b6d0	      0xb906000000	                              mov ecx, 6	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b6d5	          0x4889c6	                            mov rsi, rax	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b6d8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b6da	            0x7534	                           jne 0x400b710	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b6dc	    0x8b1500000000	            mov edx, dword [0x0400b6e2] 	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b6e2	          0x83fa0a	                            cmp edx, 0xa	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b6e5	     0xf8485000000	                            je 0x400b770	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b6eb	          0x83fa0b	                            cmp edx, 0xb	      2750	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x400b6ee	     0xf848c000000	                            je 0x400b780	      2750	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x400b6f4	        0x80780601	                   cmp byte [rax + 6], 1	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b6f8	          0x4819c0	                            sbb rax, rax	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b6fb	        0x4883c408	                              add rsp, 8	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b6ff	        0x4883e0f8	             and rax, 0xfffffffffffffff8	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b703	        0x4883c010	                           add rax, 0x10	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b707	              0xc3	                                     ret	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b708	     0xf1f84000000	                   nop dword [rax + rax]	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b710	      0xbf00000000	                              mov edi, 0	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b715	      0xb905000000	                              mov ecx, 5	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b71a	          0x4889c6	                            mov rsi, rax	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b71d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b71f	            0x751f	                           jne 0x400b740	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b721	    0x833d00000000	            cmp dword [0x0400b728], 0xc 	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b728	      0xba04000000	                              mov edx, 4	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b72d	      0xb804010000	                          mov eax, 0x104	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b732	        0x480f45c2	                         cmovne rax, rdx	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b736	        0x4883c408	                              add rsp, 8	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b73a	              0xc3	                                     ret	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b73b	       0xf1f440000	                   nop dword [rax + rax]	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b740	      0xbf00000000	                              mov edi, 0	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b745	      0xb906000000	                              mov ecx, 6	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b74a	          0x4889c6	                            mov rsi, rax	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b74d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b74f	            0x74d0	                            je 0x400b721	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b751	      0xba05000000	                              mov edx, 5	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b756	      0xbe00000000	                              mov esi, 0	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b75b	            0x31ff	                            xor edi, edi	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b75d	      0xe800000000	                          call 0x400b762	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b762	          0x4889c7	                            mov rdi, rax	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b765	            0x31c0	                            xor eax, eax	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b767	      0xe800000000	                          call 0x400b76c	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b76c	         0xf1f4000	                         nop dword [rax]	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b770	        0x80780600	                   cmp byte [rax + 6], 0	      2745	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x400b774	            0x751a	                           jne 0x400b790	      2745	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x400b776	      0xb820000000	                           mov eax, 0x20	      2748	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b77b	        0x4883c408	                              add rsp, 8	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b77f	              0xc3	                                     ret	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b780	        0x80780600	                   cmp byte [rax + 6], 0	      2752	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x400b784	            0x7516	                           jne 0x400b79c	      2752	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x400b786	      0xb840000000	                           mov eax, 0x40	      2755	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x400b78b	        0x4883c408	                              add rsp, 8	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b78f	              0xc3	                                     ret	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b790	      0xba05000000	                              mov edx, 5	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b795	      0xbe00000000	                              mov esi, 0	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b79a	            0xebbf	                           jmp 0x400b75b	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b79c	      0xba05000000	                              mov edx, 5	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b7a1	      0xbe00000000	                              mov esi, 0	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b7a6	            0xebb3	                           jmp 0x400b75b	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
signed_cons	IF,1:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	8
0x4000210	        0x4883ec08	                              sub rsp, 8	      8461	tc-i386.c	FUNCTION_100
0x4000214	    0x833d00000000	               cmp dword [0x0400021b], 2	      8462	tc-i386.c	FUNCTION_100	IF_1
0x400021b	            0x750a	                           jne 0x4000227	      8462	tc-i386.c	FUNCTION_100	IF_1
0x400021d	    0xc70500000000	               mov dword [0x04000227], 1	      8463	tc-i386.c	FUNCTION_100	IF_1
0x4000227	      0xe800000000	                          call 0x400022c	      8464	tc-i386.c	FUNCTION_100	CALL_1
0x400022c	    0xc70500000000	     mov dword [0x04000236], 0xffffffff 	      8465	tc-i386.c	FUNCTION_100
0x4000236	        0x4883c408	                              add rsp, 8	      8466	tc-i386.c	FUNCTION_100
0x400023a	              0xc3	                                     ret	      8466	tc-i386.c	FUNCTION_100
x86_dwarf2_addr_size	IF,1:DO,0:ELSE,0:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	11
0x40111c0	    0x833d00000000	               cmp dword [0x040111c7], 2	     11566	tc-i386.c	
0x40111c7	            0x7507	                           jne 0x40111d0	     11566	tc-i386.c	
0x40111c9	      0xb804000000	                              mov eax, 4	     11566	tc-i386.c	
0x40111ce	              0xc3	                                     ret	     11566	tc-i386.c	
0x40111cf	              0x90	                                     nop	     11566	tc-i386.c	
0x40111d0	        0x4883ec08	                              sub rsp, 8	     11564	tc-i386.c	FUNCTION_138
0x40111d4	    0x488b3d000000	            mov rdi, qword [0x040111db] 	     11569	tc-i386.c	
0x40111db	      0xe800000000	                          call 0x40111e0	     11569	tc-i386.c	
0x40111e0	        0x4883c408	                              add rsp, 8	     11570	tc-i386.c	FUNCTION_139
0x40111e4	          0xc1e803	                              shr eax, 3	     11569	tc-i386.c	
0x40111e7	              0xc3	                                     ret	     11570	tc-i386.c	FUNCTION_139
offset_in_range	IF,3:DO,0:ELSE,0:WHILE,0:CALL,5:functions,0:SWITCH,1:FOR,0	81
0x4003d00	              0x55	                                push rbp	      2272	tc-i386.c	FUNCTION_39
0x4003d01	              0x53	                                push rbx	      2272	tc-i386.c	FUNCTION_39
0x4003d02	        0x4883ec68	                           sub rsp, 0x68	      2272	tc-i386.c	FUNCTION_39
0x4003d06	    0x64488b042528	                mov rax, qword fs:[0x28]	      2272	tc-i386.c	FUNCTION_39
0x4003d0f	      0x4889442458	             mov qword [rsp + 0x58], rax	      2272	tc-i386.c	FUNCTION_39
0x4003d14	            0x31c0	                            xor eax, eax	      2272	tc-i386.c	FUNCTION_39
0x4003d16	          0x83fe02	                              cmp esi, 2	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d19	     0xf8439010000	                            je 0x4003e58	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d1f	     0xf8e03010000	                           jle 0x4003e28	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d25	          0x83fe04	                              cmp esi, 4	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d28	     0xf84b2000000	                            je 0x4003de0	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d2e	            0x31c0	                            xor eax, eax	      2281	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d30	          0x83fe08	                              cmp esi, 8	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d33	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2281	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d3a	     0xf85fd000000	                           jne 0x4003e3d	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003d40	    0x833d00000000	               cmp dword [0x04003d47], 2	      2288	tc-i386.c	FUNCTION_39	IF_1
0x4003d47	          0x4889fb	                            mov rbx, rdi	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003d4a	     0xf84af000000	                            je 0x4003dff	      2288	tc-i386.c	FUNCTION_39	IF_1
0x4003d50	    0x48ba00000000	          movabs rdx, 0xffffffff00000000	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003d5a	          0x4885d3	                           test rbx, rdx	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003d5d	            0x750f	                           jne 0x4003d6e	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003d5f	      0xbf00000080	                     mov edi, 0x80000000	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003d64	          0x4831df	                            xor rdi, rbx	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003d67	    0x488d9f000000	             lea rbx, [rdi - 0x80000000]	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003d6e	          0x4889c2	                            mov rdx, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003d71	          0x4821da	                            and rdx, rbx	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003d74	     0xf84a6000000	                            je 0x4003e20	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003d7a	          0x4839c2	                            cmp rdx, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003d7d	     0xf849d000000	                            je 0x4003e20	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003d83	          0x4889de	                            mov rsi, rbx	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4003d86	          0x4889e7	                            mov rdi, rsp	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4003d89	          0x4821eb	                            and rbx, rbp	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4003d8c	      0xe800000000	                          call 0x4003d91	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4003d91	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4003d96	          0x4889de	                            mov rsi, rbx	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4003d99	      0xe800000000	                          call 0x4003d9e	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4003d9e	      0xba05000000	                              mov edx, 5	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003da3	      0xbe00000000	                              mov esi, 0	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003da8	            0x31ff	                            xor edi, edi	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003daa	      0xe800000000	                          call 0x4003daf	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003daf	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003db4	          0x4889c7	                            mov rdi, rax	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003db7	          0x4889e6	                            mov rsi, rsp	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003dba	            0x31c0	                            xor eax, eax	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003dbc	      0xe800000000	                          call 0x4003dc1	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4003dc1	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      2303	tc-i386.c	FUNCTION_39
0x4003dc6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2303	tc-i386.c	FUNCTION_39
0x4003dcf	          0x4889d8	                            mov rax, rbx	      2303	tc-i386.c	FUNCTION_39
0x4003dd2	     0xf8591000000	                           jne 0x4003e69	      2303	tc-i386.c	FUNCTION_39
0x4003dd8	        0x4883c468	                           add rsp, 0x68	      2303	tc-i386.c	FUNCTION_39
0x4003ddc	              0x5b	                                 pop rbx	      2303	tc-i386.c	FUNCTION_39
0x4003ddd	              0x5d	                                 pop rbp	      2303	tc-i386.c	FUNCTION_39
0x4003dde	              0xc3	                                     ret	      2303	tc-i386.c	FUNCTION_39
0x4003ddf	              0x90	                                     nop	      2303	tc-i386.c	FUNCTION_39
0x4003de0	    0x833d00000000	               cmp dword [0x04003de7], 2	      2288	tc-i386.c	FUNCTION_39	IF_1
0x4003de7	    0x48b800000000	          movabs rax, 0xffffffff00000000	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003df1	      0xbdffffffff	                     mov ebp, 0xffffffff	      2279	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003df6	          0x4889fb	                            mov rbx, rdi	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x4003df9	     0xf8551ffffff	                           jne 0x4003d50	      2288	tc-i386.c	FUNCTION_39	IF_1
0x4003dff	    0x803d00000000	                cmp byte [0x04003e06], 0	      2289	tc-i386.c	FUNCTION_39	IF_1
0x4003e06	     0xf8544ffffff	                           jne 0x4003d50	      2289	tc-i386.c	FUNCTION_39	IF_1
0x4003e0c	          0x4889c2	                            mov rdx, rax	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003e0f	          0x4821da	                            and rdx, rbx	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003e12	     0xf8562ffffff	                           jne 0x4003d7a	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003e18	     0xf1f84000000	                   nop dword [rax + rax]	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003e20	          0x4821eb	                            and rbx, rbp	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003e23	            0xeb9c	                           jmp 0x4003dc1	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003e25	           0xf1f00	                         nop dword [rax]	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4003e28	          0x83fe01	                              cmp esi, 1	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003e2b	    0x48c7c000ffff	             mov rax, 0xffffffffffffff00	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003e32	      0xbdff000000	                           mov ebp, 0xff	      2277	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003e37	     0xf8403ffffff	                            je 0x4003d40	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003e3d	      0xba00000000	                              mov edx, 0	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x4003e42	      0xbeeb080000	                          mov esi, 0x8eb	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x4003e47	      0xbf00000000	                              mov edi, 0	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x4003e4c	      0xe800000000	                          call 0x4003e51	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x4003e51	     0xf1f80000000	                         nop dword [rax]	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x4003e58	    0x48c7c00000ff	             mov rax, 0xffffffffffff0000	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003e5f	      0xbdffff0000	                         mov ebp, 0xffff	      2278	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003e64	      0xe9d7feffff	                           jmp 0x4003d40	      2278	tc-i386.c	FUNCTION_39	SWITCH_1
0x4003e69	      0xe800000000	                          call 0x4003e6e	      2303	tc-i386.c	FUNCTION_39
x86_address_bytes	IF,1:DO,0:ELSE,0:WHILE,0:CALL,0:functions,0:SWITCH,0:FOR,0	13
0x400e5f0	    0x488b05000000	            mov rax, qword [0x0400e5f7] 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e5f7	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e5fe	      0xb804000000	                              mov eax, 4	      8132	tc-i386.c	FUNCTION_98	IF_1
0x400e603	        0xf6421010	           test byte [rdx + 0x10], 0x10 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e607	            0x7407	                            je 0x400e610	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e609	            0xf3c3	                                     ret	      8134	tc-i386.c	FUNCTION_98
0x400e60b	       0xf1f440000	                   nop dword [rax + rax]	      8134	tc-i386.c	FUNCTION_98
0x400e610	          0x8b5204	                mov edx, dword [rdx + 4]	      8133	tc-i386.c	FUNCTION_98
0x400e613	          0x8d4207	                      lea eax, [rdx + 7]	      8133	tc-i386.c	FUNCTION_98
0x400e616	            0x85d2	                           test edx, edx	      8133	tc-i386.c	FUNCTION_98
0x400e618	           0xf49c2	                         cmovns eax, edx	      8133	tc-i386.c	FUNCTION_98
0x400e61b	          0xc1f803	                              sar eax, 3	      8133	tc-i386.c	FUNCTION_98
0x400e61e	              0xc3	                                     ret	      8134	tc-i386.c	FUNCTION_98
md_convert_frag	IF,3:DO,0:ELSE,1:WHILE,0:CALL,7:functions,0:SWITCH,1:FOR,0	137
0x400ea60	            0x4156	                                push r14	      9857	tc-i386.c	FUNCTION_116
0x400ea62	            0x4155	                                push r13	      9857	tc-i386.c	FUNCTION_116
0x400ea64	            0x4154	                                push r12	      9857	tc-i386.c	FUNCTION_116
0x400ea66	              0x55	                                push rbp	      9857	tc-i386.c	FUNCTION_116
0x400ea67	          0x4989d4	                            mov r12, rdx	      9857	tc-i386.c	FUNCTION_116
0x400ea6a	              0x53	                                push rbx	      9857	tc-i386.c	FUNCTION_116
0x400ea6b	        0x488b7a28	            mov rdi, qword [rdx + 0x28] 	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x400ea6f	        0x4c8b6a30	            mov r13, qword [rdx + 0x30] 	      9865	tc-i386.c	FUNCTION_116
0x400ea73	      0xe800000000	                          call 0x400ea78	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x400ea78	      0x4903442420	             add rax, qword [r12 + 0x20]	      9874	tc-i386.c	FUNCTION_116
0x400ea7d	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9876	tc-i386.c	FUNCTION_116	IF_1
0x400ea82	          0x4889c6	                            mov rsi, rax	      9874	tc-i386.c	FUNCTION_116
0x400ea85	      0x492b742410	             sub rsi, qword [r12 + 0x10]	      9874	tc-i386.c	FUNCTION_116
0x400ea8a	        0x492b3424	                    sub rsi, qword [r12]	      9874	tc-i386.c	FUNCTION_116
0x400ea8e	          0xf6c202	                              test dl, 2	      9876	tc-i386.c	FUNCTION_116	IF_1
0x400ea91	          0x4889f5	                            mov rbp, rsi	      9874	tc-i386.c	FUNCTION_116
0x400ea94	            0x7542	                           jne 0x400ead8	      9876	tc-i386.c	FUNCTION_116	IF_1
0x400ea96	        0x4983c501	                              add r13, 1	      9880	tc-i386.c	FUNCTION_116	IF_1
0x400ea9a	    0x41be01000000	                             mov r14d, 1	      9880	tc-i386.c	FUNCTION_116	IF_1
0x400eaa0	          0x83e203	                              and edx, 3	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400eaa3	          0x4889ee	                            mov rsi, rbp	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400eaa6	          0x4c29f6	                            sub rsi, r14	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400eaa9	          0x83fa02	                              cmp edx, 2	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400eaac	            0x745a	                            je 0x400eb08	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400eaae	            0x31db	                            xor ebx, ebx	      9949	tc-i386.c	FUNCTION_116
0x400eab0	          0x83fa03	                              cmp edx, 3	      9949	tc-i386.c	FUNCTION_116
0x400eab3	           0xf94c3	                                 sete bl	      9949	tc-i386.c	FUNCTION_116
0x400eab6	          0x83c301	                              add ebx, 1	      9949	tc-i386.c	FUNCTION_116
0x400eab9	            0x89da	                            mov edx, ebx	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eabb	          0x4c89ef	                            mov rdi, r13	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eabe	      0xe800000000	                          call 0x400eac3	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eac3	              0x5b	                                 pop rbx	      9951	tc-i386.c	FUNCTION_116
0x400eac4	      0x4d01742410	            add qword [r12 + 0x10], r14 	      9950	tc-i386.c	FUNCTION_116
0x400eac9	              0x5d	                                 pop rbp	      9951	tc-i386.c	FUNCTION_116
0x400eaca	            0x415c	                                 pop r12	      9951	tc-i386.c	FUNCTION_116
0x400eacc	            0x415d	                                 pop r13	      9951	tc-i386.c	FUNCTION_116
0x400eace	            0x415e	                                 pop r14	      9951	tc-i386.c	FUNCTION_116
0x400ead0	              0xc3	                                     ret	      9951	tc-i386.c	FUNCTION_116
0x400ead1	     0xf1f80000000	                         nop dword [rax]	      9951	tc-i386.c	FUNCTION_116
0x400ead8	    0x8b0d00000000	            mov ecx, dword [0x0400eade] 	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eade	            0x85c9	                           test ecx, ecx	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae0	            0x740d	                            je 0x400eaef	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae2	            0x89d0	                            mov eax, edx	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae4	          0xc1e802	                              shr eax, 2	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae7	            0x85c0	                           test eax, eax	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae9	     0xf8539010000	                           jne 0x400ec28	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eaef	          0x83fa0b	                            cmp edx, 0xb	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eaf2	            0x89d3	                            mov ebx, edx	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eaf4	     0xf8766010000	                            ja 0x400ec60	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eafa	    0xff24dd000000	                       jmp qword [rbx*8]	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb01	     0xf1f80000000	                         nop dword [rax]	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb08	    0x8b0500000000	            mov eax, dword [0x0400eb0e] 	      9936	tc-i386.c	FUNCTION_116	IF_3
0x400eb0e	      0xbb04000000	                              mov ebx, 4	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eb13	            0x85c0	                           test eax, eax	      9936	tc-i386.c	FUNCTION_116	IF_3
0x400eb15	            0x74a2	                            je 0x400eab9	      9936	tc-i386.c	FUNCTION_116	IF_3
0x400eb17	      0xb800000080	                     mov eax, 0x80000000	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400eb1c	      0xbaffffffff	                     mov edx, 0xffffffff	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400eb21	      0xbb04000000	                              mov ebx, 4	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eb26	          0x4801f0	                            add rax, rsi	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400eb29	          0x4839d0	                            cmp rax, rdx	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400eb2c	            0x768b	                           jbe 0x400eab9	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400eb2e	            0x31ff	                            xor edi, edi	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400eb30	      0xba05000000	                              mov edx, 5	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400eb35	      0xbe00000000	                              mov esi, 0	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400eb3a	      0xe800000000	                          call 0x400eb3f	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400eb3f	      0x418b742448	            mov esi, dword [r12 + 0x48] 	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400eb44	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400eb49	          0x4889c2	                            mov rdx, rax	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400eb4c	            0x31c0	                            xor eax, eax	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400eb4e	      0xe800000000	                          call 0x400eb53	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400eb53	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9949	tc-i386.c	FUNCTION_116
0x400eb58	            0x31f6	                            xor esi, esi	      9949	tc-i386.c	FUNCTION_116
0x400eb5a	          0x83e203	                              and edx, 3	      9949	tc-i386.c	FUNCTION_116
0x400eb5d	          0x83fa02	                              cmp edx, 2	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eb60	     0xf8548ffffff	                           jne 0x400eaae	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eb66	      0xe94effffff	                           jmp 0x400eab9	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eb6b	       0xf1f440000	                   nop dword [rax + rax]	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400eb70	      0x4180750001	                       xor byte [r13], 1	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb75	      0x41c6450103	                   mov byte [r13 + 1], 3	      9921	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb7a	    0x41be04000000	                             mov r14d, 4	      9924	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb80	      0x41c64502e9	                mov byte [r13 + 2], 0xe9	      9922	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb85	        0x4983c503	                              add r13, 3	      9923	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb89	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9923	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb8e	      0xe90dffffff	                           jmp 0x400eaa0	      9924	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb93	       0xf1f440000	                   nop dword [rax + rax]	      9924	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb98	      0x410fb64500	                   movzx eax, byte [r13]	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb9d	    0x41be03000000	                             mov r14d, 3	      9916	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eba3	      0x41c645000f	                     mov byte [r13], 0xf	      9914	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eba8	        0x4983c502	                              add r13, 2	      9915	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebac	          0x83c010	                           add eax, 0x10	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebaf	        0x418845ff	                  mov byte [r13 - 1], al	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebb3	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebb8	      0xe9e3feffff	                           jmp 0x400eaa0	      9916	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebbd	           0xf1f00	                         nop dword [rax]	      9916	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebc0	      0x410fb64500	                   movzx eax, byte [r13]	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebc5	    0x41be05000000	                             mov r14d, 5	      9909	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebcb	      0x41c645000f	                     mov byte [r13], 0xf	      9907	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebd0	        0x4983c502	                              add r13, 2	      9908	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebd4	          0x83c010	                           add eax, 0x10	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebd7	        0x418845ff	                  mov byte [r13 - 1], al	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebdb	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebe0	      0xe9bbfeffff	                           jmp 0x400eaa0	      9909	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebe5	           0xf1f00	                         nop dword [rax]	      9909	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebe8	      0x41c64500e9	                    mov byte [r13], 0xe9	      9899	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebed	    0x41be02000000	                             mov r14d, 2	      9901	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebf3	        0x4983c501	                              add r13, 1	      9900	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebf7	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9900	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebfc	      0xe99ffeffff	                           jmp 0x400eaa0	      9901	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec01	     0xf1f80000000	                         nop dword [rax]	      9901	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec08	      0x41c64500e9	                    mov byte [r13], 0xe9	      9893	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec0d	    0x41be04000000	                             mov r14d, 4	      9895	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec13	        0x4983c501	                              add r13, 1	      9894	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec17	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9894	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec1c	      0xe97ffeffff	                           jmp 0x400eaa0	      9895	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec21	     0xf1f80000000	                         nop dword [rax]	      9895	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ec28	      0xba05000000	                              mov edx, 5	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400ec2d	      0xbe00000000	                              mov esi, 0	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400ec32	            0x31ff	                            xor edi, edi	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400ec34	      0xe800000000	                          call 0x400ec39	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400ec39	      0x418b742448	            mov esi, dword [r12 + 0x48] 	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec3e	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec43	          0x4889c2	                            mov rdx, rax	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec46	            0x31c0	                            xor eax, eax	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec48	      0xe800000000	                          call 0x400ec4d	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec4d	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec52	      0xe998feffff	                           jmp 0x400eaef	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec57	    0x660f1f840000	                    nop word [rax + rax]	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400ec60	      0xba05000000	                              mov edx, 5	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec65	      0xbe00000000	                              mov esi, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec6a	            0x31ff	                            xor edi, edi	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec6c	      0xe800000000	                          call 0x400ec71	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec71	      0xb900000000	                              mov ecx, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec76	          0x4889c7	                            mov rdi, rax	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec79	      0xbac7260000	                         mov edx, 0x26c7	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec7e	          0x4889de	                            mov rsi, rbx	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec81	            0x31c0	                            xor eax, eax	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ec83	      0xe800000000	                          call 0x400ec88	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
i386_validate_fix	IF,8:DO,0:ELSE,4:WHILE,0:CALL,1:functions,0:SWITCH,0:FOR,0	46
0x4010760	        0x488b4720	            mov rax, qword [rdi + 0x20] 	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4010764	          0x4885c0	                           test rax, rax	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4010767	            0x7437	                            je 0x40107a0	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4010769	    0x483b05000000	            cmp rax, qword [0x04010770] 	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4010770	            0x7406	                            je 0x4010778	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4010772	            0xf3c3	                                     ret	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4010774	         0xf1f4000	                         nop dword [rax]	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4010778	        0x837f5009	               cmp dword [rdi + 0x50], 9	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x401077c	            0x7442	                            je 0x40107c0	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x401077e	    0x833d00000000	               cmp dword [0x04010785], 1	     11271	tc-i386.c	
0x4010785	            0x19c0	                            sbb eax, eax	     11271	tc-i386.c	
0x4010787	          0x83e0dd	                     and eax, 0xffffffdd	     11271	tc-i386.c	
0x401078a	       0x58d010000	                          add eax, 0x18d	     11271	tc-i386.c	
0x401078f	          0x894750	             mov dword [rdi + 0x50], eax	     11271	tc-i386.c	
0x4010792	    0x48c747200000	               mov qword [rdi + 0x20], 0	     11275	tc-i386.c	FUNCTION_134
0x401079a	              0xc3	                                     ret	     11275	tc-i386.c	FUNCTION_134
0x401079b	       0xf1f440000	                   nop dword [rax + rax]	     11275	tc-i386.c	FUNCTION_134
0x40107a0	    0x8b0500000000	            mov eax, dword [0x040107a6] 	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x40107a6	            0x85c0	                           test eax, eax	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x40107a8	            0x75c8	                           jne 0x4010772	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x40107aa	    0x817f50640100	          cmp dword [rdi + 0x50], 0x164 	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x40107b1	            0x75bf	                           jne 0x4010772	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x40107b3	          0xf60710	                   test byte [rdi], 0x10	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x40107b6	            0x74ba	                            je 0x4010772	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x40107b8	    0xc747507c0100	          mov dword [rdi + 0x50], 0x17c 	     11283	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	CALL_1
0x40107bf	              0xc3	                                     ret	     11283	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	CALL_1
0x40107c0	    0x8b0d00000000	            mov ecx, dword [0x040107c6] 	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107c6	            0x85c9	                           test ecx, ecx	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107c8	            0x7427	                            je 0x40107f1	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107ca	           0xfb607	                   movzx eax, byte [rdi]	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x40107cd	            0xa810	                           test al, 0x10	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x40107cf	            0x7417	                            je 0x40107e8	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x40107d1	          0x83e008	                              and eax, 8	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107d4	            0x3c01	                               cmp al, 1	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107d6	            0x19c0	                            sbb eax, eax	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107d8	       0x59b010000	                          add eax, 0x19b	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107dd	          0x894750	             mov dword [rdi + 0x50], eax	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107e0	            0xebb0	                           jmp 0x4010792	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107e2	    0x660f1f440000	                    nop word [rax + rax]	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107e8	    0xc74750830100	          mov dword [rdi + 0x50], 0x183 	     11266	tc-i386.c	FUNCTION_133	ELSE_3	ELSE_4	IF_7	IF_8
0x40107ef	            0xeba1	                           jmp 0x4010792	     11266	tc-i386.c	FUNCTION_133	ELSE_3	ELSE_4	IF_7	IF_8
0x40107f1	              0x52	                                push rdx	     11250	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	ELSE_1
0x40107f2	      0xbefa2b0000	                         mov esi, 0x2bfa	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107f7	      0xba00000000	                              mov edx, 0	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107fc	      0xbf00000000	                              mov edi, 0	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x4010801	      0xe800000000	                          call 0x4010806	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
add_prefix	IF,5:DO,0:ELSE,2:WHILE,0:CALL,3:functions,0:SWITCH,1:FOR,0	90
0x4000be0	          0x8d47c0	                   lea eax, [rdi - 0x40]	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4000be3	        0x4883ec08	                              sub rsp, 8	      2325	tc-i386.c	FUNCTION_40
0x4000be7	          0x83f80f	                            cmp eax, 0xf	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4000bea	            0x770d	                            ja 0x4000bf9	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4000bec	    0x833d00000000	               cmp dword [0x04000bf3], 2	      2330	tc-i386.c	FUNCTION_40	IF_1
0x4000bf3	     0xf84ef000000	                            je 0x4000ce8	      2330	tc-i386.c	FUNCTION_40	IF_1
0x4000bf9	          0x83ff65	                           cmp edi, 0x65	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000bfc	            0x7642	                           jbe 0x4000c40	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000bfe	    0x81ff9b000000	                           cmp edi, 0x9b	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c04	     0xf8406010000	                            je 0x4000d10	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c0a	     0xf8780000000	                            ja 0x4000c90	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c10	          0x83ff66	                           cmp edi, 0x66	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c13	     0xf8417010000	                            je 0x4000d30	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c19	          0x83ff67	                           cmp edi, 0x67	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c1c	      0xba02000000	                              mov edx, 2	      2373	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c21	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4000c26	            0x7448	                            je 0x4000c70	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c28	      0xba00000000	                              mov edx, 0	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4000c2d	      0xbe28090000	                          mov esi, 0x928	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4000c32	      0xbf00000000	                              mov edi, 0	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4000c37	      0xe800000000	                          call 0x4000c3c	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4000c3c	         0xf1f4000	                         nop dword [rax]	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x4000c40	          0x83ff64	                           cmp edi, 0x64	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c43	     0xf8300010000	                           jae 0x4000d49	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c49	          0x83ff2e	                           cmp edi, 0x2e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c4c	     0xf84f7000000	                            je 0x4000d49	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c52	     0xf86e8000000	                           jbe 0x4000d40	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c58	          0x83ff36	                           cmp edi, 0x36	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c5b	     0xf84e8000000	                            je 0x4000d49	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c61	          0x83ff3e	                           cmp edi, 0x3e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c64	      0xba01000000	                              mov edx, 1	      2354	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c69	      0xb803000000	                              mov eax, 3	      2347	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c6e	            0x75b8	                           jne 0x4000c28	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c70	    0x80ba00000000	                       cmp byte [rdx], 0	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4000c77	            0x7547	                           jne 0x4000cc0	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4000c79	    0x830500000000	               add dword [0x04000c80], 1	      2387	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4000c80	            0x31c9	                            xor ecx, ecx	      2387	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4000c82	             0x9cf	                             or edi, ecx	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4000c84	    0x4088ba000000	                     mov byte [rdx], dil	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4000c8b	        0x4883c408	                              add rsp, 8	      2394	tc-i386.c	FUNCTION_40
0x4000c8f	              0xc3	                                     ret	      2394	tc-i386.c	FUNCTION_40
0x4000c90	    0x81fff0000000	                           cmp edi, 0xf0	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c96	     0xf8484000000	                            je 0x4000d20	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c9c	            0x728a	                            jb 0x4000c28	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000c9e	    0x8d870effffff	                   lea eax, [rdi - 0xf2]	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000ca4	          0x83f801	                              cmp eax, 1	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000ca7	     0xf877bffffff	                            ja 0x4000c28	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000cad	      0xba04000000	                              mov edx, 4	      2359	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000cb2	      0xb802000000	                              mov eax, 2	      2360	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000cb7	    0x80ba00000000	                       cmp byte [rdx], 0	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4000cbe	            0x74b9	                            je 0x4000c79	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4000cc0	      0xba05000000	                              mov edx, 5	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000cc5	      0xbe00000000	                              mov esi, 0	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000cca	            0x31ff	                            xor edi, edi	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000ccc	      0xe800000000	                          call 0x4000cd1	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000cd1	          0x4889c7	                            mov rdi, rax	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000cd4	            0x31c0	                            xor eax, eax	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000cd6	      0xe800000000	                          call 0x4000cdb	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000cdb	            0x31c0	                            xor eax, eax	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4000cdd	        0x4883c408	                              add rsp, 8	      2394	tc-i386.c	FUNCTION_40
0x4000ce1	              0xc3	                                     ret	      2394	tc-i386.c	FUNCTION_40
0x4000ce2	    0x660f1f440000	                    nop word [rax + rax]	      2394	tc-i386.c	FUNCTION_40
0x4000ce8	     0xfb60d000000	           movzx ecx, byte [0x04000cef] 	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4000cef	            0x89c8	                            mov eax, ecx	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4000cf1	          0x83e00f	                            and eax, 0xf	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4000cf4	            0x85f8	                           test eax, edi	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4000cf6	            0x75c8	                           jne 0x4000cc0	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4000cf8	            0x84c9	                             test cl, cl	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4000cfa	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4000cff	      0xba06000000	                              mov edx, 6	      2326	tc-i386.c	FUNCTION_40
0x4000d04	     0xf8578ffffff	                           jne 0x4000c82	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4000d0a	      0xe96affffff	                           jmp 0x4000c79	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4000d0f	              0x90	                                     nop	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4000d10	            0x31d2	                            xor edx, edx	      2369	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d12	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4000d17	      0xe954ffffff	                           jmp 0x4000c70	      2370	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d1c	         0xf1f4000	                         nop dword [rax]	      2370	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d20	      0xba05000000	                              mov edx, 5	      2364	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d25	      0xb801000000	                              mov eax, 1	      2365	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d2a	      0xe941ffffff	                           jmp 0x4000c70	      2366	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d2f	              0x90	                                     nop	      2366	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d30	      0xba03000000	                              mov edx, 3	      2377	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d35	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4000d3a	      0xe931ffffff	                           jmp 0x4000c70	      2378	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d3f	              0x90	                                     nop	      2378	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d40	          0x83ff26	                           cmp edi, 0x26	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d43	     0xf85dffeffff	                           jne 0x4000c28	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d49	      0xba01000000	                              mov edx, 1	      2354	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4000d4e	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4000d53	      0xe918ffffff	                           jmp 0x4000c70	      2326	tc-i386.c	FUNCTION_40
md_operand	IF,2:DO,0:ELSE,1:WHILE,0:CALL,4:functions,0:SWITCH,1:FOR,0	63
0x400f0b0	              0x53	                                push rbx	     10349	tc-i386.c	FUNCTION_123
0x400f0b1	          0x4889fb	                            mov rbx, rdi	     10349	tc-i386.c	FUNCTION_123
0x400f0b4	        0x4883ec10	                           sub rsp, 0x10	     10349	tc-i386.c	FUNCTION_123
0x400f0b8	    0x488b3d000000	            mov rdi, qword [0x0400f0bf] 	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0bf	    0x64488b042528	                mov rax, qword fs:[0x28]	     10349	tc-i386.c	FUNCTION_123
0x400f0c8	      0x4889442408	                mov qword [rsp + 8], rax	     10349	tc-i386.c	FUNCTION_123
0x400f0cd	            0x31c0	                            xor eax, eax	     10349	tc-i386.c	FUNCTION_123
0x400f0cf	           0xfb607	                   movzx eax, byte [rdi]	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0d2	            0x3c25	                            cmp al, 0x25	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0d4	            0x746a	                            je 0x400f140	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0d6	            0x3c5b	                            cmp al, 0x5b	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0d8	            0x7547	                           jne 0x400f121	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0da	    0x8b0500000000	            mov eax, dword [0x0400f0e0] 	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f0e0	            0x85c0	                           test eax, eax	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f0e2	     0xf84cc000000	                            je 0x400f1b4	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f0e8	        0x488d4701	                      lea rax, [rdi + 1]	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0ec	        0x48893c24	                    mov qword [rsp], rdi	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0f0	      0xba01000000	                              mov edx, 1	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f0f5	            0x31ff	                            xor edi, edi	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f0f7	          0x4889de	                            mov rsi, rbx	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f0fa	    0x488905000000	            mov qword [0x0400f101], rax 	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f101	      0xe800000000	                          call 0x400f106	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f106	    0x488b05000000	            mov rax, qword [0x0400f10d] 	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f10d	          0x80385d	                    cmp byte [rax], 0x5d	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f110	            0x746e	                            je 0x400f180	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f112	        0x488b0424	                    mov rax, qword [rsp]	     10380	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x400f116	        0xc6431801	                mov byte [rbx + 0x18], 1	     10379	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x400f11a	    0x488905000000	            mov qword [0x0400f121], rax 	     10380	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x400f121	      0x488b442408	                mov rax, qword [rsp + 8]	     10384	tc-i386.c	FUNCTION_123
0x400f126	    0x644833042528	                xor rax, qword fs:[0x28]	     10384	tc-i386.c	FUNCTION_123
0x400f12f	            0x757e	                           jne 0x400f1af	     10384	tc-i386.c	FUNCTION_123
0x400f131	        0x4883c410	                           add rsp, 0x10	     10384	tc-i386.c	FUNCTION_123
0x400f135	              0x5b	                                 pop rbx	     10384	tc-i386.c	FUNCTION_123
0x400f136	              0xc3	                                     ret	     10384	tc-i386.c	FUNCTION_123
0x400f137	    0x660f1f840000	                    nop word [rax + rax]	     10384	tc-i386.c	FUNCTION_123
0x400f140	          0x4889e6	                            mov rsi, rsp	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x400f143	      0xe8683effff	            call sym.parse_real_register	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x400f148	          0x4885c0	                           test rax, rax	     10357	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f14b	            0x74d4	                            je 0x400f121	     10357	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f14d	    0x482d00000000	                              sub rax, 0	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f153	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f15d	        0xc6431805	                mov byte [rbx + 0x18], 5	     10359	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f161	        0x48c1f803	                              sar rax, 3	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f165	        0x480fafc2	                           imul rax, rdx	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f169	        0x48894310	             mov qword [rbx + 0x10], rax	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f16d	        0x488b0424	                    mov rax, qword [rsp]	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f171	    0x488905000000	            mov qword [0x0400f178], rax 	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f178	            0xeba7	                           jmp 0x400f121	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f17a	    0x660f1f440000	                    nop word [rax + rax]	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f180	        0x4883c001	                              add rax, 1	     10371	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f184	          0x4889df	                            mov rdi, rbx	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x400f187	    0x488905000000	            mov qword [0x0400f18e], rax 	     10371	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f18e	      0xe800000000	                          call 0x400f193	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x400f193	    0x48c703000000	                      mov qword [rbx], 0	     10373	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f19a	        0x48894308	                mov qword [rbx + 8], rax	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x400f19e	    0x48c743100000	               mov qword [rbx + 0x10], 0	     10374	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f1a6	        0xc643181d	            mov byte [rbx + 0x18], 0x1d 	     10375	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f1aa	      0xe972ffffff	                           jmp 0x400f121	     10375	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f1af	      0xe800000000	                          call 0x400f1b4	     10384	tc-i386.c	FUNCTION_123
0x400f1b4	      0xba00000000	                              mov edx, 0	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f1b9	      0xbe7e280000	                         mov esi, 0x287e	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f1be	      0xbf00000000	                              mov edi, 0	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f1c3	      0xe800000000	                          call 0x400f1c8	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
process_immext	IF,6:DO,0:ELSE,0:WHILE,0:CALL,10:functions,0:SWITCH,0:FOR,2	150
0x4000970	    0xf60500000000	           test byte [0x04000977], 0x28 	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4000977	            0x4156	                                push r14	      3670	tc-i386.c	FUNCTION_65
0x4000979	            0x4155	                                push r13	      3670	tc-i386.c	FUNCTION_65
0x400097b	            0x4154	                                push r12	      3670	tc-i386.c	FUNCTION_65
0x400097d	              0x55	                                push rbp	      3670	tc-i386.c	FUNCTION_65
0x400097e	              0x53	                                push rbx	      3670	tc-i386.c	FUNCTION_65
0x400097f	     0xf843b010000	                            je 0x4000ac0	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4000985	    0x8b0500000000	            mov eax, dword [0x0400098b] 	      3674	tc-i386.c	FUNCTION_65	IF_1
0x400098b	            0x85c0	                           test eax, eax	      3674	tc-i386.c	FUNCTION_65	IF_1
0x400098d	     0xf848c000000	                            je 0x4000a1f	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4000993	      0xbd01000000	                              mov ebp, 1	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4000998	            0x31db	                            xor ebx, ebx	      3674	tc-i386.c	FUNCTION_65	IF_1
0x400099a	            0xeb1e	                           jmp 0x40009ba	      3674	tc-i386.c	FUNCTION_65	IF_1
0x400099c	         0xf1f4000	                         nop dword [rax]	      3674	tc-i386.c	FUNCTION_65	IF_1
0x40009a0	          0x83e204	                              and edx, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x40009a3	            0x752a	                           jne 0x40009cf	      2128	tc-i386.c	FUNCTION_28	IF_2
0x40009a5	            0x39de	                            cmp esi, ebx	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x40009a7	            0x7526	                           jne 0x40009cf	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x40009a9	        0x4883c301	                              add rbx, 1	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x40009ad	    0x392d00000000	            cmp dword [0x040009b3], ebp 	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x40009b3	          0x8d4501	                      lea eax, [rbp + 1]	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x40009b6	            0x765d	                           jbe 0x4000a15	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x40009b8	            0x89c5	                            mov ebp, eax	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x40009ba	    0x488b04dd0000	                  mov rax, qword [rbx*8]	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x40009c2	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x40009c6	         0xfb67011	           movzx esi, byte [rax + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x40009ca	          0xf6c201	                              test dl, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x40009cd	            0x74d1	                            je 0x40009a0	      2125	tc-i386.c	FUNCTION_28	IF_1
0x40009cf	    0x4c8b35000000	            mov r14, qword [0x040009d6] 	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009d6	          0x4c8b28	                    mov r13, qword [rax]	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009d9	            0x31ff	                            xor edi, edi	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009db	    0x4c8b25000000	            mov r12, qword [0x040009e2] 	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009e2	      0xba05000000	                              mov edx, 5	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009e7	      0xbe00000000	                              mov esi, 0	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009ec	      0xe800000000	                          call 0x40009f1	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009f1	          0x4d89f0	                             mov r8, r14	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009f4	          0x4889c7	                            mov rdi, rax	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009f7	            0x89e9	                            mov ecx, ebp	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009f9	            0x31c0	                            xor eax, eax	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009fb	          0x4c89ea	                            mov rdx, r13	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x40009fe	          0x4c89e6	                            mov rsi, r12	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4000a01	      0xe800000000	                          call 0x4000a06	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4000a06	        0x4883c301	                              add rbx, 1	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4000a0a	    0x392d00000000	            cmp dword [0x04000a10], ebp 	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4000a10	          0x8d4501	                      lea eax, [rbp + 1]	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4000a13	            0x77a3	                            ja 0x40009b8	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4000a15	    0xc70500000000	               mov dword [0x04000a1f], 0	      3688	tc-i386.c	FUNCTION_65	IF_1
0x4000a1f	    0xf60500000000	           test byte [0x04000a26], 0x40 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4000a26	     0xf8580010000	                           jne 0x4000bac	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4000a2c	    0x8b0500000000	            mov eax, dword [0x04000a32] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a32	          0x83f801	                              cmp eax, 1	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a35	     0xf8715010000	                            ja 0x4000b50	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a3b	    0x8b0d00000000	            mov ecx, dword [0x04000a41] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a41	          0x83f902	                              cmp ecx, 2	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a44	            0x7619	                           jbe 0x4000a5f	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a46	    0xf70500000000	       test dword [0x04000a50], 0x38600 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a50	     0xf84ea000000	                            je 0x4000b40	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a56	          0x83f904	                              cmp ecx, 4	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a59	     0xf87f1000000	                            ja 0x4000b50	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000a5f	          0x8d5001	                      lea edx, [rax + 1]	      3734	tc-i386.c	FUNCTION_65
0x4000a62	        0x48c1e005	                              shl rax, 5	      3734	tc-i386.c	FUNCTION_65
0x4000a66	    0x480500000000	                              add rax, 0	      3734	tc-i386.c	FUNCTION_65
0x4000a6c	    0x891500000000	            mov dword [0x04000a72], edx 	      3734	tc-i386.c	FUNCTION_65
0x4000a72	            0x89ca	                            mov edx, ecx	      3735	tc-i386.c	FUNCTION_65
0x4000a74	          0x83c101	                              add ecx, 1	      3737	tc-i386.c	FUNCTION_65
0x4000a77	    0x488904d50000	                  mov qword [rdx*8], rax	      3734	tc-i386.c	FUNCTION_65
0x4000a7f	        0x4883c20e	                            add rdx, 0xe	      3736	tc-i386.c	FUNCTION_65
0x4000a83	    0x48c704d50000	                    mov qword [rdx*8], 0	      3736	tc-i386.c	FUNCTION_65
0x4000a8f	    0x800cd5000000	                      or byte [rdx*8], 4	      3736	tc-i386.c	FUNCTION_65
0x4000a97	    0x8b3d00000000	            mov edi, dword [0x04000a9d] 	      3739	tc-i386.c	FUNCTION_65
0x4000a9d	        0xc6401802	                mov byte [rax + 0x18], 2	      3738	tc-i386.c	FUNCTION_65
0x4000aa1	    0x890d00000000	            mov dword [0x04000aa7], ecx 	      3737	tc-i386.c	FUNCTION_65
0x4000aa7	    0xc70500000000	         mov dword [0x04000ab1], 0xffff 	      3740	tc-i386.c	FUNCTION_65
0x4000ab1	        0x48897810	             mov qword [rax + 0x10], rdi	      3739	tc-i386.c	FUNCTION_65
0x4000ab5	              0x5b	                                 pop rbx	      3741	tc-i386.c	FUNCTION_65
0x4000ab6	              0x5d	                                 pop rbp	      3741	tc-i386.c	FUNCTION_65
0x4000ab7	            0x415c	                                 pop r12	      3741	tc-i386.c	FUNCTION_65
0x4000ab9	            0x415d	                                 pop r13	      3741	tc-i386.c	FUNCTION_65
0x4000abb	            0x415e	                                 pop r14	      3741	tc-i386.c	FUNCTION_65
0x4000abd	              0xc3	                                     ret	      3741	tc-i386.c	FUNCTION_65
0x4000abe	            0x6690	                                     nop	      3741	tc-i386.c	FUNCTION_65
0x4000ac0	    0xf60500000000	           test byte [0x04000ac7], 0x40 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4000ac7	     0xf845fffffff	                            je 0x4000a2c	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4000acd	    0x8b1d00000000	            mov ebx, dword [0x04000ad3] 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4000ad3	            0x85db	                           test ebx, ebx	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4000ad5	     0xf84d1000000	                            je 0x4000bac	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4000adb	          0x83fb03	                              cmp ebx, 3	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x4000ade	     0xf85df000000	                           jne 0x4000bc3	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x4000ae4	            0x31c0	                            xor eax, eax	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x4000ae6	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000aee	            0x89c6	                            mov esi, eax	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000af0	         0xfb64a10	           movzx ecx, byte [rdx + 0x10] 	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000af4	          0xf6c101	                              test cl, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4000af7	            0x756f	                           jne 0x4000b68	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4000af9	         0xfb67a11	           movzx edi, byte [rdx + 0x11] 	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000afd	            0x39c7	                            cmp edi, eax	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000aff	            0x7567	                           jne 0x4000b68	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000b01	          0x83e104	                              and ecx, 4	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000b04	            0x7562	                           jne 0x4000b68	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000b06	        0x4883c001	                              add rax, 1	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4000b0a	        0x4883f802	                              cmp rax, 2	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x4000b0e	            0x75d6	                           jne 0x4000ae6	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x4000b10	    0x488b15000000	            mov rdx, qword [0x04000b17] 	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b17	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b1b	            0xa801	                              test al, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4000b1d	            0x754c	                           jne 0x4000b6b	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4000b1f	            0xa804	                              test al, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4000b21	            0x7548	                           jne 0x4000b6b	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4000b23	            0x31c0	                            xor eax, eax	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b25	    0x813d00000000	           cmp dword [0x04000b2f], 0xfb 	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b2f	         0xfb64a11	           movzx ecx, byte [rdx + 0x11] 	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b33	           0xf94c0	                                 sete al	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b36	          0x83c002	                              add eax, 2	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b39	            0x39c8	                            cmp eax, ecx	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b3b	            0x7465	                            je 0x4000ba2	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b3d	            0xeb2c	                           jmp 0x4000b6b	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b3f	              0x90	                                     nop	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4000b40	    0x803d00000000	                cmp byte [0x04000b47], 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b47	     0xf8509ffffff	                           jne 0x4000a56	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b4d	           0xf1f00	                         nop dword [rax]	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b50	      0xba00000000	                              mov edx, 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b55	      0xbe940e0000	                          mov esi, 0xe94	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b5a	      0xbf00000000	                              mov edi, 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b5f	      0xe800000000	                          call 0x4000b64	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b64	         0xf1f4000	                         nop dword [rax]	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b68	          0x8d5e01	                      lea ebx, [rsi + 1]	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000b6b	          0x4c8b22	                    mov r12, qword [rdx]	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b6e	    0x4c8b2d000000	            mov r13, qword [0x04000b75] 	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b75	      0xba05000000	                              mov edx, 5	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b7a	    0x488b2d000000	            mov rbp, qword [0x04000b81] 	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b81	      0xbe00000000	                              mov esi, 0	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b86	            0x31ff	                            xor edi, edi	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b88	      0xe800000000	                          call 0x4000b8d	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b8d	          0x4d89e8	                             mov r8, r13	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b90	          0x4889c7	                            mov rdi, rax	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b93	            0x89d9	                            mov ecx, ebx	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b95	          0x4c89e2	                            mov rdx, r12	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b98	          0x4889ee	                            mov rsi, rbp	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b9b	            0x31c0	                            xor eax, eax	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000b9d	      0xe800000000	                          call 0x4000ba2	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4000ba2	    0xc70500000000	               mov dword [0x04000bac], 0	      3716	tc-i386.c	FUNCTION_65	IF_3
0x4000bac	    0x8b0500000000	            mov eax, dword [0x04000bb2] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000bb2	    0x8b0d00000000	            mov ecx, dword [0x04000bb8] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000bb8	          0x83f801	                              cmp eax, 1	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000bbb	     0xf869efeffff	                           jbe 0x4000a5f	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000bc1	            0xeb8d	                           jmp 0x4000b50	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4000bc3	      0xba00000000	                              mov edx, 0	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4000bc8	      0xbe740e0000	                          mov esi, 0xe74	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4000bcd	      0xbf00000000	                              mov edi, 0	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4000bd2	      0xe800000000	                          call 0x4000bd7	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
