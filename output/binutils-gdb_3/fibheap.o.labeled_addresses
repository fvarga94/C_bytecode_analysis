fibheap_union	FOR,0:CALL,4:ELSE,0:IF,3:SWITCH,0:WHILE,0:functions,0:DO,0	37
0x4000530	              0x53	                                push rbx	       145	fibheap.c	FUNCTION_8
0x4000531	          0x4889fb	                            mov rbx, rdi	       145	fibheap.c	FUNCTION_8
0x4000534	        0x4883ec10	                           sub rsp, 0x10	       145	fibheap.c	FUNCTION_8
0x4000538	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       149	fibheap.c	FUNCTION_8	IF_1
0x400053c	          0x4885c0	                           test rax, rax	       149	fibheap.c	FUNCTION_8	IF_1
0x400053f	            0x745f	                            je 0x40005a0	       149	fibheap.c	FUNCTION_8	IF_1
0x4000541	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	       154	fibheap.c	FUNCTION_8	IF_2
0x4000545	          0x4885d2	                           test rdx, rdx	       154	fibheap.c	FUNCTION_8	IF_2
0x4000548	            0x7430	                            je 0x400057a	       154	fibheap.c	FUNCTION_8	IF_2
0x400054a	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       161	fibheap.c	FUNCTION_8
0x400054e	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       162	fibheap.c	FUNCTION_8
0x4000552	        0x48895118	             mov qword [rcx + 0x18], rdx	       161	fibheap.c	FUNCTION_8
0x4000556	        0x48894718	             mov qword [rdi + 0x18], rax	       162	fibheap.c	FUNCTION_8
0x400055a	        0x48897810	             mov qword [rax + 0x10], rdi	       164	fibheap.c	FUNCTION_8
0x400055e	        0x48894a10	             mov qword [rdx + 0x10], rcx	       165	fibheap.c	FUNCTION_8
0x4000562	          0x488b06	                    mov rax, qword [rsi]	       166	fibheap.c	FUNCTION_8
0x4000565	        0x488b5308	                mov rdx, qword [rbx + 8]	       166	fibheap.c	FUNCTION_8
0x4000569	          0x480103	                    add qword [rbx], rax	       166	fibheap.c	FUNCTION_8
0x400056c	        0x488b4608	                mov rax, qword [rsi + 8]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x4000570	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x4000574	        0x48394820	            cmp qword [rax + 0x20], rcx 	        78	fibheap.c	FUNCTION_3	IF_1
0x4000578	            0x7c16	                            jl 0x4000590	        78	fibheap.c	FUNCTION_3	IF_1
0x400057a	          0x4889f7	                            mov rdi, rsi	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x400057d	      0xe800000000	                          call 0x4000582	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x4000582	          0x4889d8	                            mov rax, rbx	       157	fibheap.c	FUNCTION_8	IF_2
0x4000585	        0x4883c410	                           add rsp, 0x10	       174	fibheap.c	FUNCTION_8
0x4000589	              0x5b	                                 pop rbx	       174	fibheap.c	FUNCTION_8
0x400058a	              0xc3	                                     ret	       174	fibheap.c	FUNCTION_8
0x400058b	       0xf1f440000	                   nop dword [rax + rax]	       174	fibheap.c	FUNCTION_8
0x4000590	        0x48894308	                mov qword [rbx + 8], rax	       170	fibheap.c	FUNCTION_8	IF_3
0x4000594	            0xebe4	                           jmp 0x400057a	       170	fibheap.c	FUNCTION_8	IF_3
0x4000596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       170	fibheap.c	FUNCTION_8	IF_3
0x40005a0	      0x4889742408	                mov qword [rsp + 8], rsi	       170	fibheap.c	FUNCTION_8	IF_3
0x40005a5	      0xe800000000	                          call 0x40005aa	       151	fibheap.c	FUNCTION_8	IF_1	CALL_1
0x40005aa	      0x488b742408	                mov rsi, qword [rsp + 8]	       152	fibheap.c	FUNCTION_8	IF_1
0x40005af	          0x4889f0	                            mov rax, rsi	       152	fibheap.c	FUNCTION_8	IF_1
0x40005b2	            0xebd1	                           jmp 0x4000585	       152	fibheap.c	FUNCTION_8	IF_1
fibheap_consolidate	FOR,1:CALL,6:ELSE,0:IF,3:SWITCH,0:WHILE,2:functions,0:DO,0	134
0x4000120	          0x4989f9	                             mov r9, rdi	       357	fibheap.c	FUNCTION_19
0x4000123	    0x4881ec180200	                          sub rsp, 0x218	       357	fibheap.c	FUNCTION_19
0x400012a	      0xb941000000	                           mov ecx, 0x41	        90	string3.h	FUNCTION_28	CALL_6
0x400012f	        0x498b5110	              mov rdx, qword [r9 + 0x10]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000133	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_28	CALL_6
0x4000136	          0x4989e2	                            mov r10, rsp	        90	string3.h	FUNCTION_28	CALL_6
0x4000139	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	fibheap.c	FUNCTION_19
0x4000142	    0x488984240802	            mov qword [rsp + 0x208], rax	       357	fibheap.c	FUNCTION_19
0x400014a	            0x31c0	                            xor eax, eax	       357	fibheap.c	FUNCTION_19
0x400014c	          0x4885d2	                           test rdx, rdx	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400014f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_28	CALL_6
0x4000152	     0xf84d3010000	                            je 0x400032b	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000158	     0xf1f84000000	                   nop dword [rax + rax]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000160	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       348	fibheap.c	FUNCTION_18	IF_1
0x4000164	          0x4839d0	                            cmp rax, rdx	       348	fibheap.c	FUNCTION_18	IF_1
0x4000167	     0xf848d010000	                            je 0x40002fa	       348	fibheap.c	FUNCTION_18	IF_1
0x400016d	          0x488b0a	                    mov rcx, qword [rdx]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000170	          0x4885c9	                           test rcx, rcx	       475	fibheap.c	FUNCTION_24	IF_2
0x4000173	            0x740a	                            je 0x400017f	       475	fibheap.c	FUNCTION_24	IF_2
0x4000175	        0x48395108	                cmp qword [rcx + 8], rdx	       475	fibheap.c	FUNCTION_24	IF_2
0x4000179	     0xf8488010000	                            je 0x4000307	       475	fibheap.c	FUNCTION_24	IF_2
0x400017f	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       478	fibheap.c	FUNCTION_24
0x4000183	        0x48894110	             mov qword [rcx + 0x10], rax	       478	fibheap.c	FUNCTION_24
0x4000187	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	       479	fibheap.c	FUNCTION_24
0x400018b	        0x48894e18	             mov qword [rsi + 0x18], rcx	       479	fibheap.c	FUNCTION_24
0x400018f	    0x48c702000000	                      mov qword [rdx], 0	       481	fibheap.c	FUNCTION_24
0x4000196	        0x48895210	             mov qword [rdx + 0x10], rdx	       482	fibheap.c	FUNCTION_24
0x400019a	        0x48895218	             mov qword [rdx + 0x18], rdx	       483	fibheap.c	FUNCTION_24
0x400019e	        0x49894110	              mov qword [r9 + 0x10], rax	       351	fibheap.c	FUNCTION_18	CALL_1
0x40001a2	          0x8b7a30	            mov edi, dword [rdx + 0x30] 	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40001a5	    0x81e7ffffff7f	                     and edi, 0x7fffffff	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40001ab	          0x4c63c7	                          movsxd r8, edi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001ae	        0x4a8b04c4	             mov rax, qword [rsp + r8*8]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001b2	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001b5	            0x755f	                           jne 0x4000216	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001b7	      0xe99c000000	                           jmp 0x4000258	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001bc	         0xf1f4000	                         nop dword [rax]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001c0	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	       409	fibheap.c	FUNCTION_20	ELSE_1
0x40001c4	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x40001c8	          0x4839f1	                            cmp rcx, rsi	       449	fibheap.c	FUNCTION_23	IF_1
0x40001cb	            0x7473	                            je 0x4000240	       449	fibheap.c	FUNCTION_23	IF_1
0x40001cd	        0x48897018	             mov qword [rax + 0x18], rsi	       458	fibheap.c	FUNCTION_23	ELSE_1
0x40001d1	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40001d5	        0x48894610	             mov qword [rsi + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40001d9	        0x48894118	             mov qword [rcx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40001dd	        0x48894810	             mov qword [rax + 0x10], rcx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40001e1	          0x8b4a30	            mov ecx, dword [rdx + 0x30] 	       411	fibheap.c	FUNCTION_20
0x40001e4	          0x83c701	                              add edi, 1	       387	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40001e7	          0x488910	                    mov qword [rax], rdx	       410	fibheap.c	FUNCTION_20
0x40001ea	          0x8d7101	                      lea esi, [rcx + 1]	       411	fibheap.c	FUNCTION_20
0x40001ed	    0x81e100000080	                     and ecx, 0x80000000	       411	fibheap.c	FUNCTION_20
0x40001f3	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       411	fibheap.c	FUNCTION_20
0x40001f9	             0x9f1	                             or ecx, esi	       411	fibheap.c	FUNCTION_20
0x40001fb	          0x894a30	             mov dword [rdx + 0x30], ecx	       411	fibheap.c	FUNCTION_20
0x40001fe	        0x8060337f	             and byte [rax + 0x33], 0x7f	       412	fibheap.c	FUNCTION_20
0x4000202	    0x4ac704c40000	               mov qword [rsp + r8*8], 0	       386	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400020a	          0x4c63c7	                          movsxd r8, edi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400020d	        0x4a8b04c4	             mov rax, qword [rsp + r8*8]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000211	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000214	            0x7442	                            je 0x4000258	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000216	        0x488b7020	            mov rsi, qword [rax + 0x20] 	        80	fibheap.c	FUNCTION_3	IF_2
0x400021a	        0x48397220	            cmp qword [rdx + 0x20], rsi 	        80	fibheap.c	FUNCTION_3	IF_2
0x400021e	            0x7e09	                           jle 0x4000229	        80	fibheap.c	FUNCTION_3	IF_2
0x4000220	          0x4889c1	                            mov rcx, rax	        80	fibheap.c	FUNCTION_3	IF_2
0x4000223	          0x4889d0	                            mov rax, rdx	        80	fibheap.c	FUNCTION_3	IF_2
0x4000226	          0x4889ca	                            mov rdx, rcx	        80	fibheap.c	FUNCTION_3	IF_2
0x4000229	        0x488b4a08	                mov rcx, qword [rdx + 8]	       406	fibheap.c	FUNCTION_20	IF_1
0x400022d	          0x4885c9	                           test rcx, rcx	       406	fibheap.c	FUNCTION_20	IF_1
0x4000230	            0x758e	                           jne 0x40001c0	       406	fibheap.c	FUNCTION_20	IF_1
0x4000232	        0x48894208	                mov qword [rdx + 8], rax	       407	fibheap.c	FUNCTION_20	IF_1
0x4000236	            0xeba9	                           jmp 0x40001e1	       407	fibheap.c	FUNCTION_20	IF_1
0x4000238	     0xf1f84000000	                   nop dword [rax + rax]	       407	fibheap.c	FUNCTION_20	IF_1
0x4000240	        0x48894118	             mov qword [rcx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x4000244	        0x48894110	             mov qword [rcx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x4000248	        0x48894818	             mov qword [rax + 0x18], rcx	       453	fibheap.c	FUNCTION_23	IF_1
0x400024c	        0x48894810	             mov qword [rax + 0x10], rcx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000250	            0xeb8f	                           jmp 0x40001e1	       454	fibheap.c	FUNCTION_23	IF_1
0x4000252	    0x660f1f440000	                    nop word [rax + rax]	       454	fibheap.c	FUNCTION_23	IF_1
0x4000258	        0x4a8914c4	             mov qword [rsp + r8*8], rdx	       389	fibheap.c	FUNCTION_19	WHILE_1
0x400025c	        0x498b5110	              mov rdx, qword [r9 + 0x10]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000260	          0x4885d2	                           test rdx, rdx	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000263	     0xf85f7feffff	                           jne 0x4000160	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000269	        0x488b0424	                    mov rax, qword [rsp]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400026d	        0x498d4a08	                      lea rcx, [r10 + 8]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000271	    0x49c741080000	                   mov qword [r9 + 8], 0	       391	fibheap.c	FUNCTION_19
0x4000279	    0x4981c2080200	                          add r10, 0x208	       391	fibheap.c	FUNCTION_19
0x4000280	            0xeb46	                           jmp 0x40002c8	       391	fibheap.c	FUNCTION_19
0x4000282	    0x660f1f440000	                    nop word [rax + rax]	       391	fibheap.c	FUNCTION_19
0x4000288	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x400028c	          0x4839f2	                            cmp rdx, rsi	       449	fibheap.c	FUNCTION_23	IF_1
0x400028f	            0x7457	                            je 0x40002e8	       449	fibheap.c	FUNCTION_23	IF_1
0x4000291	        0x48897018	             mov qword [rax + 0x18], rsi	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000295	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000299	        0x48894610	             mov qword [rsi + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x400029d	        0x48894218	             mov qword [rdx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40002a1	        0x48895010	             mov qword [rax + 0x10], rdx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40002a5	        0x498b5108	                 mov rdx, qword [r9 + 8]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x40002a9	          0x4885d2	                           test rdx, rdx	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x40002ac	            0x740a	                            je 0x40002b8	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x40002ae	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x40002b2	        0x48397820	            cmp qword [rax + 0x20], rdi 	        78	fibheap.c	FUNCTION_3	IF_1
0x40002b6	            0x7d04	                           jge 0x40002bc	        78	fibheap.c	FUNCTION_3	IF_1
0x40002b8	        0x49894108	                 mov qword [r9 + 8], rax	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x40002bc	          0x4c39d1	                            cmp rcx, r10	       392	fibheap.c	FUNCTION_19	FOR_1
0x40002bf	            0x744f	                            je 0x4000310	       392	fibheap.c	FUNCTION_19	FOR_1
0x40002c1	          0x488b01	                    mov rax, qword [rcx]	       392	fibheap.c	FUNCTION_19	FOR_1
0x40002c4	        0x4883c108	                              add rcx, 8	       392	fibheap.c	FUNCTION_19	FOR_1
0x40002c8	          0x4885c0	                           test rax, rax	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x40002cb	            0x74ef	                            je 0x40002bc	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x40002cd	        0x498b5110	              mov rdx, qword [r9 + 0x10]	       331	fibheap.c	FUNCTION_17	IF_1
0x40002d1	          0x4885d2	                           test rdx, rdx	       331	fibheap.c	FUNCTION_17	IF_1
0x40002d4	            0x75b2	                           jne 0x4000288	       331	fibheap.c	FUNCTION_17	IF_1
0x40002d6	        0x49894110	              mov qword [r9 + 0x10], rax	       333	fibheap.c	FUNCTION_17	IF_1
0x40002da	        0x48894010	             mov qword [rax + 0x10], rax	       334	fibheap.c	FUNCTION_17	IF_1
0x40002de	        0x48894018	             mov qword [rax + 0x18], rax	       335	fibheap.c	FUNCTION_17	IF_1
0x40002e2	            0xebc1	                           jmp 0x40002a5	       335	fibheap.c	FUNCTION_17	IF_1
0x40002e4	         0xf1f4000	                         nop dword [rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x40002e8	        0x48894218	             mov qword [rdx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x40002ec	        0x48894210	             mov qword [rdx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x40002f0	        0x48895018	             mov qword [rax + 0x18], rdx	       453	fibheap.c	FUNCTION_23	IF_1
0x40002f4	        0x48895010	             mov qword [rax + 0x10], rdx	       454	fibheap.c	FUNCTION_23	IF_1
0x40002f8	            0xebab	                           jmp 0x40002a5	       454	fibheap.c	FUNCTION_23	IF_1
0x40002fa	    0x49c741100000	                mov qword [r9 + 0x10], 0	       349	fibheap.c	FUNCTION_18	IF_1
0x4000302	      0xe99bfeffff	                           jmp 0x40001a2	       349	fibheap.c	FUNCTION_18	IF_1
0x4000307	        0x48894108	                mov qword [rcx + 8], rax	       476	fibheap.c	FUNCTION_24	IF_2
0x400030b	      0xe96ffeffff	                           jmp 0x400017f	       476	fibheap.c	FUNCTION_24	IF_2
0x4000310	    0x488b84240802	           mov rax, qword [rsp + 0x208] 	       399	fibheap.c	FUNCTION_19
0x4000318	    0x644833042528	                xor rax, qword fs:[0x28]	       399	fibheap.c	FUNCTION_19
0x4000321	            0x750f	                           jne 0x4000332	       399	fibheap.c	FUNCTION_19
0x4000323	    0x4881c4180200	                          add rsp, 0x218	       399	fibheap.c	FUNCTION_19
0x400032a	              0xc3	                                     ret	       399	fibheap.c	FUNCTION_19
0x400032b	            0x31c0	                            xor eax, eax	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400032d	      0xe93bffffff	                           jmp 0x400026d	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000332	      0xe800000000	                          call 0x4000337	       399	fibheap.c	FUNCTION_19
fibheap_insert	FOR,0:CALL,2:ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:DO,0	45
0x4000450	            0x4154	                                push r12	        99	fibheap.c	FUNCTION_5
0x4000452	              0x55	                                push rbp	        99	fibheap.c	FUNCTION_5
0x4000453	          0x4889f5	                            mov rbp, rsi	        99	fibheap.c	FUNCTION_5
0x4000456	              0x53	                                push rbx	        99	fibheap.c	FUNCTION_5
0x4000457	      0xbe38000000	                           mov esi, 0x38	        68	fibheap.c	FUNCTION_2	CALL_1
0x400045c	          0x4889fb	                            mov rbx, rdi	        99	fibheap.c	FUNCTION_5
0x400045f	      0xbf01000000	                              mov edi, 1	        68	fibheap.c	FUNCTION_2	CALL_1
0x4000464	          0x4989d4	                            mov r12, rdx	        99	fibheap.c	FUNCTION_5
0x4000467	      0xe800000000	                          call 0x400046c	        68	fibheap.c	FUNCTION_2	CALL_1
0x400046c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x4000470	        0x48894010	             mov qword [rax + 0x10], rax	        69	fibheap.c	FUNCTION_2
0x4000474	        0x48894018	             mov qword [rax + 0x18], rax	        70	fibheap.c	FUNCTION_2
0x4000478	        0x4c896028	             mov qword [rax + 0x28], r12	       106	fibheap.c	FUNCTION_5
0x400047c	        0x48896820	             mov qword [rax + 0x20], rbp	       107	fibheap.c	FUNCTION_5
0x4000480	          0x4885d2	                           test rdx, rdx	       331	fibheap.c	FUNCTION_17	IF_1
0x4000483	            0x7443	                            je 0x40004c8	       331	fibheap.c	FUNCTION_17	IF_1
0x4000485	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x4000489	          0x4839ca	                            cmp rdx, rcx	       449	fibheap.c	FUNCTION_23	IF_1
0x400048c	            0x7442	                            je 0x40004d0	       449	fibheap.c	FUNCTION_23	IF_1
0x400048e	        0x48894818	             mov qword [rax + 0x18], rcx	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000492	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000496	        0x48894110	             mov qword [rcx + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x400049a	        0x48894218	             mov qword [rdx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x400049e	        0x48895010	             mov qword [rax + 0x10], rdx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40004a2	        0x488b5308	                mov rdx, qword [rbx + 8]	       114	fibheap.c	FUNCTION_5	IF_1
0x40004a6	          0x4885d2	                           test rdx, rdx	       114	fibheap.c	FUNCTION_5	IF_1
0x40004a9	            0x740a	                            je 0x40004b5	       114	fibheap.c	FUNCTION_5	IF_1
0x40004ab	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	       114	fibheap.c	FUNCTION_5	IF_1
0x40004af	        0x48397020	            cmp qword [rax + 0x20], rsi 	       114	fibheap.c	FUNCTION_5	IF_1
0x40004b3	            0x7d04	                           jge 0x40004b9	       114	fibheap.c	FUNCTION_5	IF_1
0x40004b5	        0x48894308	                mov qword [rbx + 8], rax	       115	fibheap.c	FUNCTION_5	IF_1
0x40004b9	        0x48830301	                      add qword [rbx], 1	       117	fibheap.c	FUNCTION_5
0x40004bd	              0x5b	                                 pop rbx	       120	fibheap.c	FUNCTION_5
0x40004be	              0x5d	                                 pop rbp	       120	fibheap.c	FUNCTION_5
0x40004bf	            0x415c	                                 pop r12	       120	fibheap.c	FUNCTION_5
0x40004c1	              0xc3	                                     ret	       120	fibheap.c	FUNCTION_5
0x40004c2	    0x660f1f440000	                    nop word [rax + rax]	       120	fibheap.c	FUNCTION_5
0x40004c8	        0x48894310	             mov qword [rbx + 0x10], rax	       333	fibheap.c	FUNCTION_17	IF_1
0x40004cc	            0xebd4	                           jmp 0x40004a2	       333	fibheap.c	FUNCTION_17	IF_1
0x40004ce	            0x6690	                                     nop	       333	fibheap.c	FUNCTION_17	IF_1
0x40004d0	        0x48894218	             mov qword [rdx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x40004d4	        0x48894210	             mov qword [rdx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x40004d8	        0x48895018	             mov qword [rax + 0x18], rdx	       453	fibheap.c	FUNCTION_23	IF_1
0x40004dc	        0x48895010	             mov qword [rax + 0x10], rdx	       454	fibheap.c	FUNCTION_23	IF_1
0x40004e0	            0xebc0	                           jmp 0x40004a2	       454	fibheap.c	FUNCTION_23	IF_1
fibheap_replace_key_data	FOR,0:CALL,5:ELSE,0:IF,4:SWITCH,0:WHILE,0:functions,0:DO,0	59
0x40005f0	        0x4c8b4620	              mov r8, qword [rsi + 0x20]	       200	fibheap.c	FUNCTION_10
0x40005f4	            0x31c0	                            xor eax, eax	       209	fibheap.c	FUNCTION_10	IF_1
0x40005f6	          0x4c39c2	                             cmp rdx, r8	        80	fibheap.c	FUNCTION_3	IF_2
0x40005f9	            0x7f24	                            jg 0x400061f	        80	fibheap.c	FUNCTION_3	IF_2
0x40005fb	              0x55	                                push rbp	       200	fibheap.c	FUNCTION_10
0x40005fc	              0x53	                                push rbx	       200	fibheap.c	FUNCTION_10
0x40005fd	        0x48895620	             mov qword [rsi + 0x20], rdx	       214	fibheap.c	FUNCTION_10
0x4000601	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	       211	fibheap.c	FUNCTION_10
0x4000605	        0x48894e28	             mov qword [rsi + 0x28], rcx	       213	fibheap.c	FUNCTION_10
0x4000609	            0x751d	                           jne 0x4000628	       220	fibheap.c	FUNCTION_10	IF_2
0x400060b	    0x48b900000000	          movabs rcx, 0x8000000000000000	       220	fibheap.c	FUNCTION_10	IF_2
0x4000615	          0x4889d8	                            mov rax, rbx	       221	fibheap.c	FUNCTION_10	IF_2
0x4000618	          0x4939c8	                             cmp r8, rcx	       220	fibheap.c	FUNCTION_10	IF_2
0x400061b	            0x740b	                            je 0x4000628	       220	fibheap.c	FUNCTION_10	IF_2
0x400061d	              0x5b	                                 pop rbx	       236	fibheap.c	FUNCTION_10
0x400061e	              0x5d	                                 pop rbp	       236	fibheap.c	FUNCTION_10
0x400061f	            0xf3c3	                                     ret	       236	fibheap.c	FUNCTION_10
0x4000621	     0xf1f80000000	                         nop dword [rax]	       236	fibheap.c	FUNCTION_10
0x4000628	          0x4c8b1e	                    mov r11, qword [rsi]	       215	fibheap.c	FUNCTION_10
0x400062b	          0x4989f1	                             mov r9, rsi	       215	fibheap.c	FUNCTION_10
0x400062e	          0x4989fa	                            mov r10, rdi	       215	fibheap.c	FUNCTION_10
0x4000631	          0x4d85db	                           test r11, r11	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000634	            0x7452	                            je 0x4000688	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000636	        0x493b5320	            cmp rdx, qword [r11 + 0x20] 	        80	fibheap.c	FUNCTION_3	IF_2
0x400063a	            0x7f4c	                            jg 0x4000688	        80	fibheap.c	FUNCTION_3	IF_2
0x400063c	          0x4c89da	                            mov rdx, r11	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x400063f	      0xe8fcf9ffff	                    call sym.fibheap_cut	       228	fibheap.c	FUNCTION_10	IF_3	CALL_3
0x4000644	          0x498b2b	                    mov rbp, qword [r11]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000647	          0x4885ed	                           test rbp, rbp	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400064a	            0x7434	                            je 0x4000680	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400064c	      0x41807b3300	                cmp byte [r11 + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000651	            0x794d	                           jns 0x40006a0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000653	          0x4889ea	                            mov rdx, rbp	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000656	          0x4c89de	                            mov rsi, r11	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000659	          0x4c89d7	                            mov rdi, r10	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x400065c	      0xe8dff9ffff	                    call sym.fibheap_cut	       440	fibheap.c	FUNCTION_22	WHILE_1	ELSE_1	CALL_1
0x4000661	        0x488b4500	                    mov rax, qword [rbp]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000665	          0x4885c0	                           test rax, rax	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000668	            0x7416	                            je 0x4000680	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400066a	        0x807d3300	                cmp byte [rbp + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x400066e	          0x4989eb	                            mov r11, rbp	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000671	            0x792d	                           jns 0x40006a0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000673	          0x4889c5	                            mov rbp, rax	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000676	            0xebdb	                           jmp 0x4000653	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000678	     0xf1f84000000	                   nop dword [rax + rax]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000680	        0x498b5120	              mov rdx, qword [r9 + 0x20]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000684	         0xf1f4000	                         nop dword [rax]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000688	        0x498b4208	                mov rax, qword [r10 + 8]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x400068c	        0x48395020	            cmp qword [rax + 0x20], rdx 	        80	fibheap.c	FUNCTION_3	IF_2
0x4000690	            0x7c04	                            jl 0x4000696	        80	fibheap.c	FUNCTION_3	IF_2
0x4000692	        0x4d894a08	                 mov qword [r10 + 8], r9	       233	fibheap.c	FUNCTION_10	IF_4
0x4000696	          0x4889d8	                            mov rax, rbx	       235	fibheap.c	FUNCTION_10
0x4000699	              0x5b	                                 pop rbx	       236	fibheap.c	FUNCTION_10
0x400069a	              0x5d	                                 pop rbp	       236	fibheap.c	FUNCTION_10
0x400069b	            0xeb82	                           jmp 0x400061f	       236	fibheap.c	FUNCTION_10
0x400069d	           0xf1f00	                         nop dword [rax]	       236	fibheap.c	FUNCTION_10
0x40006a0	      0x41804b3380	              or byte [r11 + 0x33], 0x80	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40006a5	        0x498b5120	              mov rdx, qword [r9 + 0x20]	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40006a9	            0xebdd	                           jmp 0x4000688	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
fibheap_new	FOR,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0	3
0x4000440	      0xbe18000000	                           mov esi, 0x18	        59	fibheap.c	FUNCTION_1	CALL_1
0x4000445	      0xbf01000000	                              mov edi, 1	        59	fibheap.c	FUNCTION_1	CALL_1
0x400044a	      0xe900000000	                           jmp 0x400044f	        59	fibheap.c	FUNCTION_1	CALL_1
fibheap_replace_data	FOR,0:CALL,1:ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0	3
0x40006b0	          0x4889d1	                            mov rcx, rdx	       242	fibheap.c	FUNCTION_11	CALL_1
0x40006b3	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	       242	fibheap.c	FUNCTION_11	CALL_1
0x40006b7	      0xe934ffffff	        jmp sym.fibheap_replace_key_data	       242	fibheap.c	FUNCTION_11	CALL_1
fibheap_min	FOR,0:CALL,0:ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:DO,0	8
0x40004f0	        0x488b4708	                mov rax, qword [rdi + 8]	       127	fibheap.c	FUNCTION_6	IF_1
0x40004f4	          0x4885c0	                           test rax, rax	       127	fibheap.c	FUNCTION_6	IF_1
0x40004f7	            0x7407	                            je 0x4000500	       127	fibheap.c	FUNCTION_6	IF_1
0x40004f9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       129	fibheap.c	FUNCTION_6
0x40004fd	              0xc3	                                     ret	       129	fibheap.c	FUNCTION_6
0x40004fe	            0x6690	                                     nop	       129	fibheap.c	FUNCTION_6
0x4000500	            0x31c0	                            xor eax, eax	       128	fibheap.c	FUNCTION_6	IF_1
0x4000502	              0xc3	                                     ret	       130	fibheap.c	FUNCTION_6
fibheap_min_key	FOR,0:CALL,0:ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:DO,0	8
0x4000510	        0x488b4708	                mov rax, qword [rdi + 8]	       137	fibheap.c	FUNCTION_7	IF_1
0x4000514	          0x4885c0	                           test rax, rax	       137	fibheap.c	FUNCTION_7	IF_1
0x4000517	            0x7407	                            je 0x4000520	       137	fibheap.c	FUNCTION_7	IF_1
0x4000519	        0x488b4020	            mov rax, qword [rax + 0x20] 	       139	fibheap.c	FUNCTION_7
0x400051d	              0xc3	                                     ret	       139	fibheap.c	FUNCTION_7
0x400051e	            0x6690	                                     nop	       139	fibheap.c	FUNCTION_7
0x4000520	            0x31c0	                            xor eax, eax	       138	fibheap.c	FUNCTION_7	IF_1
0x4000522	              0xc3	                                     ret	       140	fibheap.c	FUNCTION_7
fibheap_extr_min_node	FOR,1:CALL,3:ELSE,1:IF,2:SWITCH,0:WHILE,0:functions,0:DO,0	71
0x4000340	              0x53	                                push rbx	       292	fibheap.c	FUNCTION_16
0x4000341	        0x488b5f08	                mov rbx, qword [rdi + 8]	       293	fibheap.c	FUNCTION_16
0x4000345	            0x31f6	                            xor esi, esi	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000347	        0x488b5308	                mov rdx, qword [rbx + 8]	       298	fibheap.c	FUNCTION_16	FOR_1
0x400034b	            0xeb23	                           jmp 0x4000370	       298	fibheap.c	FUNCTION_16	FOR_1
0x400034d	           0xf1f00	                         nop dword [rax]	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000350	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       449	fibheap.c	FUNCTION_23	IF_1
0x4000354	          0x4c39c1	                             cmp rcx, r8	       449	fibheap.c	FUNCTION_23	IF_1
0x4000357	            0x744f	                            je 0x40003a8	       449	fibheap.c	FUNCTION_23	IF_1
0x4000359	        0x4c894218	              mov qword [rdx + 0x18], r8	       458	fibheap.c	FUNCTION_23	ELSE_1
0x400035d	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000361	        0x49895010	              mov qword [r8 + 0x10], rdx	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000365	        0x48895118	             mov qword [rcx + 0x18], rdx	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000369	        0x48894a10	             mov qword [rdx + 0x10], rcx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x400036d	          0x4c89ca	                             mov rdx, r9	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x4000370	          0x4839f2	                            cmp rdx, rsi	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000373	            0x744b	                            je 0x40003c0	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000375	          0x4885d2	                           test rdx, rdx	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000378	            0x7446	                            je 0x40003c0	       298	fibheap.c	FUNCTION_16	FOR_1
0x400037a	    0x48c702000000	                      mov qword [rdx], 0	       303	fibheap.c	FUNCTION_16	FOR_1
0x4000381	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x4000385	          0x4885f6	                           test rsi, rsi	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x4000388	        0x480f44f2	                          cmove rsi, rdx	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x400038c	        0x4c8b4a18	              mov r9, qword [rdx + 0x18]	       302	fibheap.c	FUNCTION_16	FOR_1
0x4000390	          0x4885c9	                           test rcx, rcx	       331	fibheap.c	FUNCTION_17	IF_1
0x4000393	            0x75bb	                           jne 0x4000350	       331	fibheap.c	FUNCTION_17	IF_1
0x4000395	        0x48895710	             mov qword [rdi + 0x10], rdx	       333	fibheap.c	FUNCTION_17	IF_1
0x4000399	        0x48895210	             mov qword [rdx + 0x10], rdx	       334	fibheap.c	FUNCTION_17	IF_1
0x400039d	        0x48895218	             mov qword [rdx + 0x18], rdx	       335	fibheap.c	FUNCTION_17	IF_1
0x40003a1	            0xebca	                           jmp 0x400036d	       335	fibheap.c	FUNCTION_17	IF_1
0x40003a3	       0xf1f440000	                   nop dword [rax + rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x40003a8	        0x48895118	             mov qword [rcx + 0x18], rdx	       451	fibheap.c	FUNCTION_23	IF_1
0x40003ac	        0x48895110	             mov qword [rcx + 0x10], rdx	       452	fibheap.c	FUNCTION_23	IF_1
0x40003b0	        0x48894a18	             mov qword [rdx + 0x18], rcx	       453	fibheap.c	FUNCTION_23	IF_1
0x40003b4	        0x48894a10	             mov qword [rdx + 0x10], rcx	       454	fibheap.c	FUNCTION_23	IF_1
0x40003b8	            0xebb3	                           jmp 0x400036d	       454	fibheap.c	FUNCTION_23	IF_1
0x40003ba	    0x660f1f440000	                    nop word [rax + rax]	       454	fibheap.c	FUNCTION_23	IF_1
0x40003c0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       348	fibheap.c	FUNCTION_18	IF_1
0x40003c4	          0x4839c3	                            cmp rbx, rax	       348	fibheap.c	FUNCTION_18	IF_1
0x40003c7	            0x745f	                            je 0x4000428	       348	fibheap.c	FUNCTION_18	IF_1
0x40003c9	          0x488b13	                    mov rdx, qword [rbx]	       475	fibheap.c	FUNCTION_24	IF_2
0x40003cc	          0x4885d2	                           test rdx, rdx	       475	fibheap.c	FUNCTION_24	IF_2
0x40003cf	            0x7406	                            je 0x40003d7	       475	fibheap.c	FUNCTION_24	IF_2
0x40003d1	        0x483b5a08	                cmp rbx, qword [rdx + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x40003d5	            0x745b	                            je 0x4000432	       475	fibheap.c	FUNCTION_24	IF_2
0x40003d7	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       478	fibheap.c	FUNCTION_24
0x40003db	        0x48894210	             mov qword [rdx + 0x10], rax	       478	fibheap.c	FUNCTION_24
0x40003df	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       479	fibheap.c	FUNCTION_24
0x40003e3	        0x48895118	             mov qword [rcx + 0x18], rdx	       479	fibheap.c	FUNCTION_24
0x40003e7	    0x48c703000000	                      mov qword [rbx], 0	       481	fibheap.c	FUNCTION_24
0x40003ee	        0x48895b10	             mov qword [rbx + 0x10], rbx	       482	fibheap.c	FUNCTION_24
0x40003f2	        0x48895b18	             mov qword [rbx + 0x18], rbx	       483	fibheap.c	FUNCTION_24
0x40003f6	        0x48894710	             mov qword [rdi + 0x10], rax	       351	fibheap.c	FUNCTION_18	CALL_1
0x40003fa	        0x48832f01	                      sub qword [rdi], 1	       312	fibheap.c	FUNCTION_16	IF_2
0x40003fe	            0x7510	                           jne 0x4000410	       312	fibheap.c	FUNCTION_16	IF_2
0x4000400	          0x4889d8	                            mov rax, rbx	       323	fibheap.c	FUNCTION_16
0x4000403	    0x48c747080000	                  mov qword [rdi + 8], 0	       313	fibheap.c	FUNCTION_16	IF_2
0x400040b	              0x5b	                                 pop rbx	       323	fibheap.c	FUNCTION_16
0x400040c	              0xc3	                                     ret	       323	fibheap.c	FUNCTION_16
0x400040d	           0xf1f00	                         nop dword [rax]	       323	fibheap.c	FUNCTION_16
0x4000410	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       318	fibheap.c	FUNCTION_16	ELSE_1
0x4000414	        0x48894708	                mov qword [rdi + 8], rax	       318	fibheap.c	FUNCTION_16	ELSE_1
0x4000418	      0xe803fdffff	            call sym.fibheap_consolidate	       319	fibheap.c	FUNCTION_16	ELSE_1	CALL_3
0x400041d	          0x4889d8	                            mov rax, rbx	       323	fibheap.c	FUNCTION_16
0x4000420	              0x5b	                                 pop rbx	       323	fibheap.c	FUNCTION_16
0x4000421	              0xc3	                                     ret	       323	fibheap.c	FUNCTION_16
0x4000422	    0x660f1f440000	                    nop word [rax + rax]	       323	fibheap.c	FUNCTION_16
0x4000428	    0x48c747100000	               mov qword [rdi + 0x10], 0	       349	fibheap.c	FUNCTION_18	IF_1
0x4000430	            0xebc8	                           jmp 0x40003fa	       349	fibheap.c	FUNCTION_18	IF_1
0x4000432	        0x48894208	                mov qword [rdx + 8], rax	       476	fibheap.c	FUNCTION_24	IF_2
0x4000436	            0xeb9f	                           jmp 0x40003d7	       476	fibheap.c	FUNCTION_24	IF_2
fibheap_extract_min	FOR,0:CALL,2:ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:DO,0	13
0x40005c0	              0x53	                                push rbx	       179	fibheap.c	FUNCTION_9
0x40005c1	      0x48837f0800	                  cmp qword [rdi + 8], 0	       184	fibheap.c	FUNCTION_9	IF_1
0x40005c6	            0x7418	                            je 0x40005e0	       184	fibheap.c	FUNCTION_9	IF_1
0x40005c8	      0xe873fdffff	          call sym.fibheap_extr_min_node	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x40005cd	          0x4889c7	                            mov rdi, rax	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x40005d0	        0x488b5828	            mov rbx, qword [rax + 0x28] 	       189	fibheap.c	FUNCTION_9	IF_1
0x40005d4	      0xe800000000	                          call 0x40005d9	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x40005d9	          0x4889d8	                            mov rax, rbx	       194	fibheap.c	FUNCTION_9
0x40005dc	              0x5b	                                 pop rbx	       194	fibheap.c	FUNCTION_9
0x40005dd	              0xc3	                                     ret	       194	fibheap.c	FUNCTION_9
0x40005de	            0x6690	                                     nop	       194	fibheap.c	FUNCTION_9
0x40005e0	            0x31db	                            xor ebx, ebx	       181	fibheap.c	FUNCTION_9
0x40005e2	            0xebf5	                           jmp 0x40005d9	       181	fibheap.c	FUNCTION_9
fibheap_delete	FOR,0:CALL,3:ELSE,0:IF,0:SWITCH,0:WHILE,1:functions,0:DO,0	14
0x4000740	              0x53	                                push rbx	       275	fibheap.c	FUNCTION_14
0x4000741	      0x48837f0800	                  cmp qword [rdi + 8], 0	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000746	          0x4889fb	                            mov rbx, rdi	       275	fibheap.c	FUNCTION_14
0x4000749	            0x741c	                            je 0x4000767	       276	fibheap.c	FUNCTION_14	WHILE_1
0x400074b	       0xf1f440000	                   nop dword [rax + rax]	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000750	          0x4889df	                            mov rdi, rbx	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000753	      0xe8e8fbffff	          call sym.fibheap_extr_min_node	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000758	          0x4889c7	                            mov rdi, rax	       277	fibheap.c	FUNCTION_14	CALL_2
0x400075b	      0xe800000000	                          call 0x4000760	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000760	      0x48837b0800	                  cmp qword [rbx + 8], 0	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000765	            0x75e9	                           jne 0x4000750	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000767	          0x4889df	                            mov rdi, rbx	       279	fibheap.c	FUNCTION_14	CALL_3
0x400076a	              0x5b	                                 pop rbx	       280	fibheap.c	FUNCTION_14
0x400076b	      0xe900000000	                   jmp sym.fibheap_empty	       279	fibheap.c	FUNCTION_14	CALL_3
fibheap_delete_node	FOR,0:CALL,3:ELSE,0:IF,1:SWITCH,0:WHILE,0:functions,0:DO,0	24
0x40006e0	            0x4154	                                push r12	       257	fibheap.c	FUNCTION_13
0x40006e2	              0x55	                                push rbp	       257	fibheap.c	FUNCTION_13
0x40006e3	    0x48ba00000000	          movabs rdx, 0x8000000000000000	       250	fibheap.c	FUNCTION_12	CALL_1
0x40006ed	              0x53	                                push rbx	       257	fibheap.c	FUNCTION_13
0x40006ee	        0x4c8b6628	            mov r12, qword [rsi + 0x28] 	       258	fibheap.c	FUNCTION_13
0x40006f2	          0x4889fd	                            mov rbp, rdi	       257	fibheap.c	FUNCTION_13
0x40006f5	          0x4889f3	                            mov rbx, rsi	       257	fibheap.c	FUNCTION_13
0x40006f8	          0x4c89e1	                            mov rcx, r12	       250	fibheap.c	FUNCTION_12	CALL_1
0x40006fb	      0xe800000000	                          call 0x4000700	       250	fibheap.c	FUNCTION_12	CALL_1
0x4000700	        0x483b5d08	                cmp rbx, qword [rbp + 8]	       262	fibheap.c	FUNCTION_13	IF_1
0x4000704	            0x7510	                           jne 0x4000716	       262	fibheap.c	FUNCTION_13	IF_1
0x4000706	          0x4889ef	                            mov rdi, rbp	       267	fibheap.c	FUNCTION_13	CALL_3
0x4000709	      0xe800000000	                          call 0x400070e	       267	fibheap.c	FUNCTION_13	CALL_3
0x400070e	          0x4c89e0	                            mov rax, r12	       270	fibheap.c	FUNCTION_13
0x4000711	              0x5b	                                 pop rbx	       270	fibheap.c	FUNCTION_13
0x4000712	              0x5d	                                 pop rbp	       270	fibheap.c	FUNCTION_13
0x4000713	            0x415c	                                 pop r12	       270	fibheap.c	FUNCTION_13
0x4000715	              0xc3	                                     ret	       270	fibheap.c	FUNCTION_13
0x4000716	    0x488b0d000000	            mov rcx, qword [0x0400071d] 	        97	stdio2.h	CALL_24
0x400071d	      0xba20000000	                           mov edx, 0x20	        97	stdio2.h	CALL_24
0x4000722	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_24
0x4000727	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_24
0x400072c	      0xe800000000	                          call 0x4000731	        97	stdio2.h	CALL_24
0x4000731	      0xe800000000	                          call 0x4000736	       265	fibheap.c	FUNCTION_13	IF_1	CALL_2
fibheap_cut	FOR,0:CALL,2:ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0	52
0x4000040	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       470	fibheap.c	FUNCTION_24	IF_1
0x4000044	          0x4c8b06	                     mov r8, qword [rsi]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000047	      0xb900000000	                              mov ecx, 0	       470	fibheap.c	FUNCTION_24	IF_1
0x400004c	          0x4839c6	                            cmp rsi, rax	       470	fibheap.c	FUNCTION_24	IF_1
0x400004f	        0x480f45c8	                         cmovne rcx, rax	       470	fibheap.c	FUNCTION_24	IF_1
0x4000053	          0x4d85c0	                             test r8, r8	       475	fibheap.c	FUNCTION_24	IF_2
0x4000056	            0x7406	                            je 0x400005e	       475	fibheap.c	FUNCTION_24	IF_2
0x4000058	        0x493b7008	                 cmp rsi, qword [r8 + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x400005c	            0x7472	                            je 0x40000d0	       475	fibheap.c	FUNCTION_24	IF_2
0x400005e	        0x488b4e18	            mov rcx, qword [rsi + 0x18] 	       478	fibheap.c	FUNCTION_24
0x4000062	        0x48894110	             mov qword [rcx + 0x10], rax	       478	fibheap.c	FUNCTION_24
0x4000066	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       479	fibheap.c	FUNCTION_24
0x400006a	        0x48894818	             mov qword [rax + 0x18], rcx	       479	fibheap.c	FUNCTION_24
0x400006e	          0x8b4230	            mov eax, dword [rdx + 0x30] 	       420	fibheap.c	FUNCTION_21
0x4000071	    0x48c706000000	                      mov qword [rsi], 0	       481	fibheap.c	FUNCTION_24
0x4000078	        0x48897610	             mov qword [rsi + 0x10], rsi	       482	fibheap.c	FUNCTION_24
0x400007c	        0x48897618	             mov qword [rsi + 0x18], rsi	       483	fibheap.c	FUNCTION_24
0x4000080	    0x8d88ffffff7f	             lea ecx, [rax + 0x7fffffff]	       420	fibheap.c	FUNCTION_21
0x4000086	      0x2500000080	                     and eax, 0x80000000	       420	fibheap.c	FUNCTION_21
0x400008b	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000091	             0x9c8	                             or eax, ecx	       420	fibheap.c	FUNCTION_21
0x4000093	          0x894230	             mov dword [rdx + 0x30], eax	       420	fibheap.c	FUNCTION_21
0x4000096	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x400009a	          0x4885c0	                           test rax, rax	       331	fibheap.c	FUNCTION_17	IF_1
0x400009d	            0x7441	                            je 0x40000e0	       331	fibheap.c	FUNCTION_17	IF_1
0x400009f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x40000a3	          0x4839d0	                            cmp rax, rdx	       449	fibheap.c	FUNCTION_23	IF_1
0x40000a6	            0x7458	                            je 0x4000100	       449	fibheap.c	FUNCTION_23	IF_1
0x40000a8	        0x48895618	             mov qword [rsi + 0x18], rdx	       458	fibheap.c	FUNCTION_23	ELSE_1
0x40000ac	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40000b0	        0x48897210	             mov qword [rdx + 0x10], rsi	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40000b4	        0x48897018	             mov qword [rax + 0x18], rsi	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40000b8	        0x48894610	             mov qword [rsi + 0x10], rax	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40000bc	    0x48c706000000	                      mov qword [rsi], 0	       422	fibheap.c	FUNCTION_21
0x40000c3	        0x8066337f	             and byte [rsi + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x40000c7	              0xc3	                                     ret	       423	fibheap.c	FUNCTION_21
0x40000c8	     0xf1f84000000	                   nop dword [rax + rax]	       423	fibheap.c	FUNCTION_21
0x40000d0	        0x49894808	                 mov qword [r8 + 8], rcx	       476	fibheap.c	FUNCTION_24	IF_2
0x40000d4	            0xeb88	                           jmp 0x400005e	       476	fibheap.c	FUNCTION_24	IF_2
0x40000d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       476	fibheap.c	FUNCTION_24	IF_2
0x40000e0	        0x48897710	             mov qword [rdi + 0x10], rsi	       333	fibheap.c	FUNCTION_17	IF_1
0x40000e4	        0x48897610	             mov qword [rsi + 0x10], rsi	       334	fibheap.c	FUNCTION_17	IF_1
0x40000e8	        0x48897618	             mov qword [rsi + 0x18], rsi	       335	fibheap.c	FUNCTION_17	IF_1
0x40000ec	    0x48c706000000	                      mov qword [rsi], 0	       422	fibheap.c	FUNCTION_21
0x40000f3	        0x8066337f	             and byte [rsi + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x40000f7	              0xc3	                                     ret	       423	fibheap.c	FUNCTION_21
0x40000f8	     0xf1f84000000	                   nop dword [rax + rax]	       423	fibheap.c	FUNCTION_21
0x4000100	        0x48897018	             mov qword [rax + 0x18], rsi	       451	fibheap.c	FUNCTION_23	IF_1
0x4000104	        0x48897010	             mov qword [rax + 0x10], rsi	       452	fibheap.c	FUNCTION_23	IF_1
0x4000108	        0x48894618	             mov qword [rsi + 0x18], rax	       453	fibheap.c	FUNCTION_23	IF_1
0x400010c	        0x48894610	             mov qword [rsi + 0x10], rax	       454	fibheap.c	FUNCTION_23	IF_1
0x4000110	            0xebaa	                           jmp 0x40000bc	       454	fibheap.c	FUNCTION_23	IF_1
fibheap_empty	FOR,0:CALL,0:ELSE,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0	4
0x4000770	            0x31c0	                            xor eax, eax	       286	fibheap.c	FUNCTION_15
0x4000772	        0x48833f00	                      cmp qword [rdi], 0	       286	fibheap.c	FUNCTION_15
0x4000776	           0xf94c0	                                 sete al	       286	fibheap.c	FUNCTION_15
0x4000779	              0xc3	                                     ret	       287	fibheap.c	FUNCTION_15
