_rl_copy_undo_list	IF,2:ELSE,1:functions,0:DO,0:CALL,1:FOR,0:SWITCH,0:WHILE,1	32
0x4000180	          0x4885ff	                           test rdi, rdi	       142	undo.c	FUNCTION_3	IF_1
0x4000183	            0x7453	                            je 0x40001d8	       142	undo.c	FUNCTION_3	IF_1
0x4000185	            0x4154	                                push r12	       139	undo.c	FUNCTION_3
0x4000187	              0x55	                                push rbp	       139	undo.c	FUNCTION_3
0x4000188	              0x53	                                push rbx	       139	undo.c	FUNCTION_3
0x4000189	          0x4889fb	                            mov rbx, rdi	       139	undo.c	FUNCTION_3
0x400018c	      0xe800000000	                          call 0x4000191	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x4000191	          0x4989c4	                            mov r12, rax	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x4000194	          0x4889c5	                            mov rbp, rax	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x4000197	            0xeb1b	                           jmp 0x40001b4	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x4000199	     0xf1f80000000	                         nop dword [rax]	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001a0	          0x4889df	                            mov rdi, rbx	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001a3	      0xe800000000	                          call 0x40001a8	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001a8	          0x4d85e4	                           test r12, r12	       150	undo.c	FUNCTION_3	WHILE_1	IF_2
0x40001ab	            0x7423	                            je 0x40001d0	       150	undo.c	FUNCTION_3	WHILE_1	IF_2
0x40001ad	        0x48894500	                    mov qword [rbp], rax	       154	undo.c	FUNCTION_3	WHILE_1	ELSE_1
0x40001b1	          0x4889c5	                            mov rbp, rax	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001b4	          0x488b1b	                    mov rbx, qword [rbx]	       157	undo.c	FUNCTION_3	WHILE_1
0x40001b7	          0x4885db	                           test rbx, rbx	       147	undo.c	FUNCTION_3	WHILE_1
0x40001ba	            0x75e4	                           jne 0x40001a0	       147	undo.c	FUNCTION_3	WHILE_1
0x40001bc	    0x48c745000000	                      mov qword [rbp], 0	       160	undo.c	FUNCTION_3
0x40001c4	          0x4c89e0	                            mov rax, r12	       161	undo.c	FUNCTION_3
0x40001c7	              0x5b	                                 pop rbx	       162	undo.c	FUNCTION_3
0x40001c8	              0x5d	                                 pop rbp	       162	undo.c	FUNCTION_3
0x40001c9	            0x415c	                                 pop r12	       162	undo.c	FUNCTION_3
0x40001cb	              0xc3	                                     ret	       162	undo.c	FUNCTION_3
0x40001cc	         0xf1f4000	                         nop dword [rax]	       162	undo.c	FUNCTION_3
0x40001d0	          0x4989c4	                            mov r12, rax	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001d3	            0xebdc	                           jmp 0x40001b1	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001d5	           0xf1f00	                         nop dword [rax]	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001d8	            0x31c0	                            xor eax, eax	       149	undo.c	FUNCTION_3	WHILE_1	CALL_1
0x40001da	              0xc3	                                     ret	       162	undo.c	FUNCTION_3
rl_begin_undo_group	IF,0:ELSE,0:functions,0:DO,0:CALL,1:FOR,0:SWITCH,0:WHILE,0	14
0x4000450	        0x4883ec08	                              sub rsp, 8	       256	undo.c	FUNCTION_5
0x4000454	      0xbf20000000	                           mov edi, 0x20	        79	undo.c	CALL_3
0x4000459	      0xe800000000	                          call 0x400045e	        79	undo.c	CALL_3
0x400045e	    0x488b15000000	            mov rdx, qword [0x04000465] 	       100	undo.c	
0x4000465	    0xc74018020000	               mov dword [rax + 0x18], 2	        80	undo.c	
0x400046c	    0xc74008000000	                  mov dword [rax + 8], 0	        81	undo.c	
0x4000473	    0xc7400c000000	                mov dword [rax + 0xc], 0	        82	undo.c	
0x400047a	    0x48c740100000	               mov qword [rax + 0x10], 0	        83	undo.c	
0x4000482	          0x488910	                    mov qword [rax], rdx	       100	undo.c	
0x4000485	    0x488905000000	            mov qword [0x0400048c], rax 	       101	undo.c	
0x400048c	            0x31c0	                            xor eax, eax	       260	undo.c	FUNCTION_5
0x400048e	    0x830500000000	               add dword [0x04000495], 1	       258	undo.c	FUNCTION_5
0x4000495	        0x4883c408	                              add rsp, 8	       260	undo.c	FUNCTION_5
0x4000499	              0xc3	                                     ret	       260	undo.c	FUNCTION_5
rl_do_undo	IF,3:ELSE,1:functions,0:DO,1:CALL,8:FOR,0:SWITCH,1:WHILE,0	124
0x40001e0	            0x4155	                                push r13	       168	undo.c	FUNCTION_4
0x40001e2	            0x4154	                                push r12	       168	undo.c	FUNCTION_4
0x40001e4	          0x4531ed	                          xor r13d, r13d	       174	undo.c	FUNCTION_4
0x40001e7	              0x55	                                push rbp	       168	undo.c	FUNCTION_4
0x40001e8	              0x53	                                push rbx	       168	undo.c	FUNCTION_4
0x40001e9	            0x31ed	                            xor ebp, ebp	       174	undo.c	FUNCTION_4
0x40001eb	          0x4531e4	                          xor r12d, r12d	       174	undo.c	FUNCTION_4
0x40001ee	        0x4883ec08	                              sub rsp, 8	       168	undo.c	FUNCTION_4
0x40001f2	    0x660f1f440000	                    nop word [rax + rax]	       168	undo.c	FUNCTION_4
0x40001f8	    0x488b1d000000	            mov rbx, qword [0x040001ff] 	       177	undo.c	FUNCTION_4	DO_1	IF_1
0x40001ff	          0x4885db	                           test rbx, rbx	       177	undo.c	FUNCTION_4	DO_1	IF_1
0x4000202	     0xf8490000000	                            je 0x4000298	       177	undo.c	FUNCTION_4	DO_1	IF_1
0x4000208	    0x8b0d00000000	            mov ecx, dword [0x0400020e] 	       181	undo.c	FUNCTION_4	DO_1	CALL_1
0x400020e	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       185	undo.c	FUNCTION_4	DO_1	IF_2
0x4000211	    0xc70500000000	               mov dword [0x0400021b], 1	       180	undo.c	FUNCTION_4	DO_1
0x400021b	            0x89c8	                            mov eax, ecx	       181	undo.c	FUNCTION_4	DO_1	CALL_1
0x400021d	       0xd00000100	                         or eax, 0x10000	       181	undo.c	FUNCTION_4	DO_1	CALL_1
0x4000222	          0x83fa01	                              cmp edx, 1	       185	undo.c	FUNCTION_4	DO_1	IF_2
0x4000225	    0x890500000000	            mov dword [0x0400022b], eax 	       181	undo.c	FUNCTION_4	DO_1	CALL_1
0x400022b	     0xf86cf000000	                           jbe 0x4000300	       185	undo.c	FUNCTION_4	DO_1	IF_2
0x4000231	          0x83fa01	                              cmp edx, 1	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000234	     0xf84fe000000	                            je 0x4000338	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x400023a	     0xf8220010000	                            jb 0x4000360	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000240	          0x83fa02	                              cmp edx, 2	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000243	            0x7463	                            je 0x40002a8	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000245	          0x83fa03	                              cmp edx, 3	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000248	            0x756e	                           jne 0x40002b8	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x400024a	          0x488b13	                    mov rdx, qword [rbx]	       224	undo.c	FUNCTION_4	DO_1
0x400024d	    0x81e1fffffeff	                     and ecx, 0xfffeffff	       221	undo.c	FUNCTION_4	DO_1	CALL_6
0x4000253	          0x4889de	                            mov rsi, rbx	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x4000256	      0xbfffffffff	                     mov edi, 0xffffffff	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x400025b	    0x890d00000000	            mov dword [0x04000261], ecx 	       221	undo.c	FUNCTION_4	DO_1	CALL_6
0x4000261	    0xc70500000000	               mov dword [0x0400026b], 0	       220	undo.c	FUNCTION_4	DO_1
0x400026b	        0x4183c401	                             add r12d, 1	       208	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x400026f	    0x488915000000	            mov qword [0x04000276], rdx 	       224	undo.c	FUNCTION_4	DO_1
0x4000276	      0xe800000000	                          call 0x400027b	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x400027b	          0x4889df	                            mov rdi, rbx	       227	undo.c	FUNCTION_4	DO_1	CALL_8
0x400027e	      0xe800000000	                          call 0x4000283	       227	undo.c	FUNCTION_4	DO_1	CALL_8
0x4000283	    0x488b1d000000	            mov rbx, qword [0x0400028a] 	       177	undo.c	FUNCTION_4	DO_1	IF_1
0x400028a	          0x4885db	                           test rbx, rbx	       177	undo.c	FUNCTION_4	DO_1	IF_1
0x400028d	     0xf8575ffffff	                           jne 0x4000208	       177	undo.c	FUNCTION_4	DO_1	IF_1
0x4000293	       0xf1f440000	                   nop dword [rax + rax]	       177	undo.c	FUNCTION_4	DO_1	IF_1
0x4000298	            0x31c0	                            xor eax, eax	       178	undo.c	FUNCTION_4	DO_1	IF_1
0x400029a	        0x4883c408	                              add rsp, 8	       232	undo.c	FUNCTION_4
0x400029e	              0x5b	                                 pop rbx	       232	undo.c	FUNCTION_4
0x400029f	              0x5d	                                 pop rbp	       232	undo.c	FUNCTION_4
0x40002a0	            0x415c	                                 pop r12	       232	undo.c	FUNCTION_4
0x40002a2	            0x415d	                                 pop r13	       232	undo.c	FUNCTION_4
0x40002a4	              0xc3	                                     ret	       232	undo.c	FUNCTION_4
0x40002a5	           0xf1f00	                         nop dword [rax]	       232	undo.c	FUNCTION_4
0x40002a8	          0x4585e4	                         test r12d, r12d	       213	undo.c	FUNCTION_4	DO_1	SWITCH_1	IF_3
0x40002ab	     0xf8407010000	                            je 0x40003b8	       213	undo.c	FUNCTION_4	DO_1	SWITCH_1	IF_3
0x40002b1	        0x4183ec01	                             sub r12d, 1	       214	undo.c	FUNCTION_4	DO_1	SWITCH_1	IF_3
0x40002b5	           0xf1f00	                         nop dword [rax]	       214	undo.c	FUNCTION_4	DO_1	SWITCH_1	IF_3
0x40002b8	          0x488b13	                    mov rdx, qword [rbx]	       224	undo.c	FUNCTION_4	DO_1
0x40002bb	      0x25fffffeff	                     and eax, 0xfffeffff	       221	undo.c	FUNCTION_4	DO_1	CALL_6
0x40002c0	          0x4889de	                            mov rsi, rbx	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x40002c3	      0xbfffffffff	                     mov edi, 0xffffffff	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x40002c8	    0x890500000000	            mov dword [0x040002ce], eax 	       221	undo.c	FUNCTION_4	DO_1	CALL_6
0x40002ce	    0xc70500000000	               mov dword [0x040002d8], 0	       220	undo.c	FUNCTION_4	DO_1
0x40002d8	    0x488915000000	            mov qword [0x040002df], rdx 	       224	undo.c	FUNCTION_4	DO_1
0x40002df	      0xe800000000	                          call 0x40002e4	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x40002e4	          0x4889df	                            mov rdi, rbx	       227	undo.c	FUNCTION_4	DO_1	CALL_8
0x40002e7	      0xe800000000	                          call 0x40002ec	       227	undo.c	FUNCTION_4	DO_1	CALL_8
0x40002ec	          0x4585e4	                         test r12d, r12d	       229	undo.c	FUNCTION_4
0x40002ef	     0xf8503ffffff	                           jne 0x40001f8	       229	undo.c	FUNCTION_4
0x40002f5	      0xb801000000	                              mov eax, 1	       231	undo.c	FUNCTION_4
0x40002fa	            0xeb9e	                           jmp 0x400029a	       231	undo.c	FUNCTION_4
0x40002fc	         0xf1f4000	                         nop dword [rax]	       231	undo.c	FUNCTION_4
0x4000300	          0x8b6b08	                mov ebp, dword [rbx + 8]	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x4000303	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x4000306	     0xf849c000000	                            je 0x40003a8	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x400030c	          0x83fdfe	             cmp ebp, 0xfffffffffffffffe	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x400030f	     0xf442d000000	           cmove ebp, dword [0x04000316]	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x4000316	        0x448b6b0c	            mov r13d, dword [rbx + 0xc] 	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x400031a	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x400031e	            0x7478	                            je 0x4000398	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x4000320	        0x4183fdfe	            cmp r13d, 0xfffffffffffffffe	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x4000324	    0x440f442d0000	          cmove r13d, dword [0x0400032c]	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x400032c	          0x83fa01	                              cmp edx, 1	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x400032f	     0xf8505ffffff	                           jne 0x400023a	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000335	           0xf1f00	                         nop dword [rax]	       191	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000338	          0x4489ee	                           mov esi, r13d	       202	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_4
0x400033b	            0x89ef	                            mov edi, ebp	       202	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_4
0x400033d	      0xe800000000	                          call 0x4000342	       202	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_4
0x4000342	    0x892d00000000	            mov dword [0x04000348], ebp 	       203	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000348	    0x8b0500000000	            mov eax, dword [0x0400034e] 	       203	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x400034e	    0x488b1d000000	            mov rbx, qword [0x04000355] 	       203	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000355	      0xe95effffff	                           jmp 0x40002b8	       204	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x400035a	    0x660f1f440000	                    nop word [rax + rax]	       204	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000360	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       196	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_2
0x4000364	    0x892d00000000	            mov dword [0x0400036a], ebp 	       195	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x400036a	      0xe800000000	                          call 0x400036f	       196	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_2
0x400036f	    0x488b05000000	            mov rax, qword [0x04000376] 	       197	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_3
0x4000376	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       197	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_3
0x400037a	      0xe800000000	                          call 0x400037f	       197	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_3
0x400037f	    0x8b0500000000	            mov eax, dword [0x04000385] 	       197	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_3
0x4000385	    0x488b1d000000	            mov rbx, qword [0x0400038c] 	       197	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_3
0x400038c	      0xe927ffffff	                           jmp 0x40002b8	       198	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000391	     0xf1f80000000	                         nop dword [rax]	       198	undo.c	FUNCTION_4	DO_1	SWITCH_1
0x4000398	    0x448b2d000000	           mov r13d, dword [0x0400039f] 	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x400039f	      0xe98dfeffff	                           jmp 0x4000231	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x40003a4	         0xf1f4000	                         nop dword [rax]	       188	undo.c	FUNCTION_4	DO_1	IF_2
0x40003a8	    0x8b2d00000000	            mov ebp, dword [0x040003ae] 	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x40003ae	      0xe963ffffff	                           jmp 0x4000316	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x40003b3	       0xf1f440000	                   nop dword [rax + rax]	       187	undo.c	FUNCTION_4	DO_1	IF_2
0x40003b8	      0xe800000000	                          call 0x40003bd	       216	undo.c	FUNCTION_4	DO_1	SWITCH_1	CALL_5
0x40003bd	    0x488b1d000000	            mov rbx, qword [0x040003c4] 	       223	undo.c	FUNCTION_4	DO_1
0x40003c4	      0xbfffffffff	                     mov edi, 0xffffffff	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x40003c9	    0xc70500000000	               mov dword [0x040003d3], 0	       220	undo.c	FUNCTION_4	DO_1
0x40003d3	    0x812500000000	      and dword [0x040003dd], 0xfffeffff	       221	undo.c	FUNCTION_4	DO_1	CALL_6
0x40003dd	          0x488b13	                    mov rdx, qword [rbx]	       224	undo.c	FUNCTION_4	DO_1
0x40003e0	          0x4889de	                            mov rsi, rbx	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x40003e3	    0x488915000000	            mov qword [0x040003ea], rdx 	       224	undo.c	FUNCTION_4	DO_1
0x40003ea	      0xe800000000	                          call 0x40003ef	       225	undo.c	FUNCTION_4	DO_1	CALL_7
0x40003ef	          0x4889df	                            mov rdi, rbx	       227	undo.c	FUNCTION_4	DO_1	CALL_8
0x40003f2	      0xe800000000	                          call 0x40003f7	       227	undo.c	FUNCTION_4	DO_1	CALL_8
0x40003f7	        0x4883c408	                              add rsp, 8	       232	undo.c	FUNCTION_4
0x40003fb	      0xb801000000	                              mov eax, 1	       231	undo.c	FUNCTION_4
0x4000400	              0x5b	                                 pop rbx	       232	undo.c	FUNCTION_4
0x4000401	              0x5d	                                 pop rbp	       232	undo.c	FUNCTION_4
0x4000402	            0x415c	                                 pop r12	       232	undo.c	FUNCTION_4
0x4000404	            0x415d	                                 pop r13	       232	undo.c	FUNCTION_4
0x4000406	              0xc3	                                     ret	       232	undo.c	FUNCTION_4
rl_end_undo_group	IF,0:ELSE,0:functions,0:DO,0:CALL,1:FOR,0:SWITCH,0:WHILE,0	14
0x40004a0	        0x4883ec08	                              sub rsp, 8	       265	undo.c	FUNCTION_6
0x40004a4	      0xbf20000000	                           mov edi, 0x20	        79	undo.c	CALL_3
0x40004a9	      0xe800000000	                          call 0x40004ae	        79	undo.c	CALL_3
0x40004ae	    0x488b15000000	            mov rdx, qword [0x040004b5] 	       100	undo.c	
0x40004b5	    0xc74018030000	               mov dword [rax + 0x18], 3	        80	undo.c	
0x40004bc	    0xc74008000000	                  mov dword [rax + 8], 0	        81	undo.c	
0x40004c3	    0xc7400c000000	                mov dword [rax + 0xc], 0	        82	undo.c	
0x40004ca	    0x48c740100000	               mov qword [rax + 0x10], 0	        83	undo.c	
0x40004d2	          0x488910	                    mov qword [rax], rdx	       100	undo.c	
0x40004d5	    0x488905000000	            mov qword [0x040004dc], rax 	       101	undo.c	
0x40004dc	            0x31c0	                            xor eax, eax	       269	undo.c	FUNCTION_6
0x40004de	    0x832d00000000	               sub dword [0x040004e5], 1	       267	undo.c	FUNCTION_6
0x40004e5	        0x4883c408	                              add rsp, 8	       269	undo.c	FUNCTION_6
0x40004e9	              0xc3	                                     ret	       269	undo.c	FUNCTION_6
rl_free_undo_list	IF,1:ELSE,0:functions,0:DO,0:CALL,3:FOR,0:SWITCH,0:WHILE,1	30
0x4000090	              0x55	                                push rbp	       107	undo.c	FUNCTION_1
0x4000091	              0x53	                                push rbx	       107	undo.c	FUNCTION_1
0x4000092	        0x4883ec08	                              sub rsp, 8	       107	undo.c	FUNCTION_1
0x4000096	    0x488b2d000000	            mov rbp, qword [0x0400009d] 	       110	undo.c	FUNCTION_1
0x400009d	          0x4885ed	                           test rbp, rbp	       111	undo.c	FUNCTION_1	WHILE_1
0x40000a0	          0x4889eb	                            mov rbx, rbp	       111	undo.c	FUNCTION_1	WHILE_1
0x40000a3	            0x751f	                           jne 0x40000c4	       111	undo.c	FUNCTION_1	WHILE_1
0x40000a5	            0xeb39	                           jmp 0x40000e0	       111	undo.c	FUNCTION_1	WHILE_1
0x40000a7	    0x660f1f840000	                    nop word [rax + rax]	       111	undo.c	FUNCTION_1	WHILE_1
0x40000b0	          0x4889df	                            mov rdi, rbx	       119	undo.c	FUNCTION_1	WHILE_1	CALL_2
0x40000b3	      0xe800000000	                          call 0x40000b8	       119	undo.c	FUNCTION_1	WHILE_1	CALL_2
0x40000b8	    0x488b1d000000	            mov rbx, qword [0x040000bf] 	       111	undo.c	FUNCTION_1	WHILE_1
0x40000bf	          0x4885db	                           test rbx, rbx	       111	undo.c	FUNCTION_1	WHILE_1
0x40000c2	            0x741c	                            je 0x40000e0	       111	undo.c	FUNCTION_1	WHILE_1
0x40000c4	          0x488b03	                    mov rax, qword [rbx]	       114	undo.c	FUNCTION_1	WHILE_1
0x40000c7	    0x488905000000	            mov qword [0x040000ce], rax 	       114	undo.c	FUNCTION_1	WHILE_1
0x40000ce	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       116	undo.c	FUNCTION_1	WHILE_1	IF_1
0x40000d1	            0x85c0	                           test eax, eax	       116	undo.c	FUNCTION_1	WHILE_1	IF_1
0x40000d3	            0x75db	                           jne 0x40000b0	       116	undo.c	FUNCTION_1	WHILE_1	IF_1
0x40000d5	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       117	undo.c	FUNCTION_1	WHILE_1	CALL_1
0x40000d9	      0xe800000000	                          call 0x40000de	       117	undo.c	FUNCTION_1	WHILE_1	CALL_1
0x40000de	            0xebd0	                           jmp 0x40000b0	       117	undo.c	FUNCTION_1	WHILE_1	CALL_1
0x40000e0	    0x48c705000000	               mov qword [0x040000eb], 0	       121	undo.c	FUNCTION_1
0x40000eb	        0x4883c408	                              add rsp, 8	       123	undo.c	FUNCTION_1
0x40000ef	          0x4889ee	                            mov rsi, rbp	       122	undo.c	FUNCTION_1	CALL_3
0x40000f2	              0x5b	                                 pop rbx	       123	undo.c	FUNCTION_1
0x40000f3	              0x5d	                                 pop rbp	       123	undo.c	FUNCTION_1
0x40000f4	            0x31d2	                            xor edx, edx	       122	undo.c	FUNCTION_1	CALL_3
0x40000f6	      0xbfffffffff	                     mov edi, 0xffffffff	       122	undo.c	FUNCTION_1	CALL_3
0x40000fb	      0xe900000000	             jmp sym._rl_copy_undo_entry	       122	undo.c	FUNCTION_1	CALL_3
_rl_copy_undo_entry	IF,0:ELSE,0:functions,0:DO,0:CALL,2:FOR,0:SWITCH,0:WHILE,0	36
0x4000100	            0x4156	                                push r14	       128	undo.c	FUNCTION_2
0x4000102	            0x4155	                                push r13	       128	undo.c	FUNCTION_2
0x4000104	            0x4154	                                push r12	       128	undo.c	FUNCTION_2
0x4000106	              0x55	                                push rbp	       128	undo.c	FUNCTION_2
0x4000107	          0x4889fd	                            mov rbp, rdi	       128	undo.c	FUNCTION_2
0x400010a	              0x53	                                push rbx	       128	undo.c	FUNCTION_2
0x400010b	        0x448b670c	            mov r12d, dword [rdi + 0xc] 	       131	undo.c	FUNCTION_2	CALL_1
0x400010f	        0x448b6f08	               mov r13d, dword [rdi + 8]	       131	undo.c	FUNCTION_2	CALL_1
0x4000113	        0x448b7718	           mov r14d, dword [rdi + 0x18] 	       131	undo.c	FUNCTION_2	CALL_1
0x4000117	      0xbf20000000	                           mov edi, 0x20	        79	undo.c	CALL_3
0x400011c	      0xe800000000	                          call 0x4000121	        79	undo.c	CALL_3
0x4000121	    0x48c740100000	               mov qword [rax + 0x10], 0	        83	undo.c	
0x4000129	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	       132	undo.c	FUNCTION_2	CALL_2
0x400012d	          0x4889c3	                            mov rbx, rax	        79	undo.c	CALL_3
0x4000130	        0x44897018	            mov dword [rax + 0x18], r14d	        80	undo.c	
0x4000134	        0x44896808	               mov dword [rax + 8], r13d	        81	undo.c	
0x4000138	        0x4489600c	             mov dword [rax + 0xc], r12d	        82	undo.c	
0x400013c	    0x48c700000000	                      mov qword [rax], 0	        85	undo.c	
0x4000143	          0x4885ed	                           test rbp, rbp	       132	undo.c	FUNCTION_2	CALL_2
0x4000146	            0x741f	                            je 0x4000167	       132	undo.c	FUNCTION_2	CALL_2
0x4000148	          0x4889ef	                            mov rdi, rbp	       132	undo.c	FUNCTION_2	CALL_2
0x400014b	      0xe800000000	                          call 0x4000150	       132	undo.c	FUNCTION_2	CALL_2
0x4000150	        0x488d7801	                      lea rdi, [rax + 1]	       132	undo.c	FUNCTION_2	CALL_2
0x4000154	      0xe800000000	                          call 0x4000159	       132	undo.c	FUNCTION_2	CALL_2
0x4000159	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_13	CALL_3
0x400015c	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_13	CALL_3
0x400015f	      0xe800000000	                          call 0x4000164	       110	string3.h	FUNCTION_13	CALL_3
0x4000164	          0x4889c5	                            mov rbp, rax	       110	string3.h	FUNCTION_13	CALL_3
0x4000167	        0x48896b10	             mov qword [rbx + 0x10], rbp	       132	undo.c	FUNCTION_2	CALL_2
0x400016b	          0x4889d8	                            mov rax, rbx	       134	undo.c	FUNCTION_2
0x400016e	              0x5b	                                 pop rbx	       134	undo.c	FUNCTION_2
0x400016f	              0x5d	                                 pop rbp	       134	undo.c	FUNCTION_2
0x4000170	            0x415c	                                 pop r12	       134	undo.c	FUNCTION_2
0x4000172	            0x415d	                                 pop r13	       134	undo.c	FUNCTION_2
0x4000174	            0x415e	                                 pop r14	       134	undo.c	FUNCTION_2
0x4000176	              0xc3	                                     ret	       134	undo.c	FUNCTION_2
