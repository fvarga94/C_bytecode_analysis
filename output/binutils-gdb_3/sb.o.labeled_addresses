scrub_from_sb	DO,0:ELSE,0:CALL,1:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,1	21
0x40000a0	              0x55	                                push rbp	        97	sb.c	FUNCTION_5
0x40000a1	              0x53	                                push rbx	        97	sb.c	FUNCTION_5
0x40000a2	        0x4883ec08	                              sub rsp, 8	        97	sb.c	FUNCTION_5
0x40000a6	    0x488b2d000000	            mov rbp, qword [0x040000ad] 	        99	sb.c	FUNCTION_5
0x40000ad	    0x488b05000000	            mov rax, qword [0x040000b4] 	        99	sb.c	FUNCTION_5
0x40000b4	          0x4889ea	                            mov rdx, rbp	        99	sb.c	FUNCTION_5
0x40000b7	          0x482b10	                    sub rdx, qword [rax]	        99	sb.c	FUNCTION_5
0x40000ba	        0x488b5808	                mov rbx, qword [rax + 8]	        99	sb.c	FUNCTION_5
0x40000be	          0x4829d3	                            sub rbx, rdx	        99	sb.c	FUNCTION_5
0x40000c1	          0x4839f3	                            cmp rbx, rsi	        99	sb.c	FUNCTION_5
0x40000c4	        0x480f47de	                          cmova rbx, rsi	        99	sb.c	FUNCTION_5
0x40000c8	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_15	CALL_3
0x40000cb	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_15	CALL_3
0x40000ce	          0x4801dd	                            add rbp, rbx	       103	sb.c	FUNCTION_5
0x40000d1	      0xe800000000	                          call 0x40000d6	        53	string3.h	FUNCTION_15	CALL_3
0x40000d6	    0x48892d000000	            mov qword [0x040000dd], rbp 	       103	sb.c	FUNCTION_5
0x40000dd	        0x4883c408	                              add rsp, 8	       105	sb.c	FUNCTION_5
0x40000e1	          0x4889d8	                            mov rax, rbx	       105	sb.c	FUNCTION_5
0x40000e4	              0x5b	                                 pop rbx	       105	sb.c	FUNCTION_5
0x40000e5	              0x5d	                                 pop rbp	       105	sb.c	FUNCTION_5
0x40000e6	              0xc3	                                     ret	       105	sb.c	FUNCTION_5
sb_add_sb	DO,0:ELSE,0:CALL,2:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	18
0x4000160	              0x55	                                push rbp	        85	sb.c	FUNCTION_4
0x4000161	              0x53	                                push rbx	        85	sb.c	FUNCTION_4
0x4000162	          0x4889f5	                            mov rbp, rsi	        85	sb.c	FUNCTION_4
0x4000165	          0x4889fb	                            mov rbx, rdi	        85	sb.c	FUNCTION_4
0x4000168	        0x4883ec08	                              sub rsp, 8	        85	sb.c	FUNCTION_4
0x400016c	        0x488b7608	                mov rsi, qword [rsi + 8]	        86	sb.c	FUNCTION_4	CALL_1
0x4000170	      0xe8cbfeffff	                       call sym.sb_check	        86	sb.c	FUNCTION_4	CALL_1
0x4000175	        0x488b7b08	                mov rdi, qword [rbx + 8]	        53	string3.h	FUNCTION_15	CALL_3
0x4000179	          0x48033b	                    add rdi, qword [rbx]	        53	string3.h	FUNCTION_15	CALL_3
0x400017c	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_15	CALL_3
0x4000180	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_15	CALL_3
0x4000184	      0xe800000000	                          call 0x4000189	        53	string3.h	FUNCTION_15	CALL_3
0x4000189	        0x488b4508	                mov rax, qword [rbp + 8]	        88	sb.c	FUNCTION_4
0x400018d	        0x48014308	                add qword [rbx + 8], rax	        88	sb.c	FUNCTION_4
0x4000191	        0x4883c408	                              add rsp, 8	        89	sb.c	FUNCTION_4
0x4000195	              0x5b	                                 pop rbx	        89	sb.c	FUNCTION_4
0x4000196	              0x5d	                                 pop rbp	        89	sb.c	FUNCTION_4
0x4000197	              0xc3	                                     ret	        89	sb.c	FUNCTION_4
sb_add_string	DO,0:ELSE,0:CALL,3:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	21
0x4000240	            0x4154	                                push r12	       175	sb.c	FUNCTION_10
0x4000242	              0x55	                                push rbp	       175	sb.c	FUNCTION_10
0x4000243	          0x4989f4	                            mov r12, rsi	       175	sb.c	FUNCTION_10
0x4000246	              0x53	                                push rbx	       175	sb.c	FUNCTION_10
0x4000247	          0x4889fb	                            mov rbx, rdi	       175	sb.c	FUNCTION_10
0x400024a	          0x4889f7	                            mov rdi, rsi	       176	sb.c	FUNCTION_10	CALL_1
0x400024d	      0xe800000000	                          call 0x4000252	       176	sb.c	FUNCTION_10	CALL_1
0x4000252	          0x4889df	                            mov rdi, rbx	       177	sb.c	FUNCTION_10	CALL_2
0x4000255	          0x4889c6	                            mov rsi, rax	       177	sb.c	FUNCTION_10	CALL_2
0x4000258	          0x4889c5	                            mov rbp, rax	       176	sb.c	FUNCTION_10	CALL_1
0x400025b	      0xe8e0fdffff	                       call sym.sb_check	       177	sb.c	FUNCTION_10	CALL_2
0x4000260	        0x488b7b08	                mov rdi, qword [rbx + 8]	        53	string3.h	FUNCTION_15	CALL_3
0x4000264	          0x48033b	                    add rdi, qword [rbx]	        53	string3.h	FUNCTION_15	CALL_3
0x4000267	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_15	CALL_3
0x400026a	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_15	CALL_3
0x400026d	      0xe800000000	                          call 0x4000272	        53	string3.h	FUNCTION_15	CALL_3
0x4000272	        0x48016b08	                add qword [rbx + 8], rbp	       179	sb.c	FUNCTION_10
0x4000276	              0x5b	                                 pop rbx	       180	sb.c	FUNCTION_10
0x4000277	              0x5d	                                 pop rbp	       180	sb.c	FUNCTION_10
0x4000278	            0x415c	                                 pop r12	       180	sb.c	FUNCTION_10
0x400027a	              0xc3	                                     ret	       180	sb.c	FUNCTION_10
sb_check	DO,0:ELSE,0:CALL,4:functions,0:SWITCH,0:FOR,0:WHILE,1:IF,2	24
0x4000040	        0x48037708	                add rsi, qword [rdi + 8]	       129	sb.c	FUNCTION_7
0x4000044	        0x483b7710	            cmp rsi, qword [rdi + 0x10] 	       131	sb.c	FUNCTION_7	IF_1
0x4000048	            0x7639	                           jbe 0x4000083	       131	sb.c	FUNCTION_7	IF_1
0x400004a	        0x4883c611	                           add rsi, 0x11	       136	sb.c	FUNCTION_7	IF_1	IF_2
0x400004e	              0x53	                                push rbx	       128	sb.c	FUNCTION_7
0x400004f	          0x4889fb	                            mov rbx, rdi	       128	sb.c	FUNCTION_7
0x4000052	            0x7831	                            js 0x4000085	       136	sb.c	FUNCTION_7	IF_1	IF_2
0x4000054	        0x480fbdf6	                            bsr rsi, rsi	       141	sb.c	FUNCTION_7	IF_1	CALL_2
0x4000058	      0xb940000000	                           mov ecx, 0x40	       139	sb.c	FUNCTION_7	IF_1
0x400005d	        0x4883f63f	                           xor rsi, 0x3f	       141	sb.c	FUNCTION_7	IF_1	CALL_2
0x4000061	            0x29f1	                            sub ecx, esi	       139	sb.c	FUNCTION_7	IF_1
0x4000063	      0xbe01000000	                              mov esi, 1	       139	sb.c	FUNCTION_7	IF_1
0x4000068	          0x48d3e6	                             shl rsi, cl	       139	sb.c	FUNCTION_7	IF_1
0x400006b	        0x488d46ef	                   lea rax, [rsi - 0x11]	       149	sb.c	FUNCTION_7	IF_1
0x400006f	        0x4883ee10	                           sub rsi, 0x10	       150	sb.c	FUNCTION_7	IF_1	CALL_4
0x4000073	        0x48894710	             mov qword [rdi + 0x10], rax	       149	sb.c	FUNCTION_7	IF_1
0x4000077	          0x488b3f	                    mov rdi, qword [rdi]	       150	sb.c	FUNCTION_7	IF_1	CALL_4
0x400007a	      0xe800000000	                          call 0x400007f	       150	sb.c	FUNCTION_7	IF_1	CALL_4
0x400007f	          0x488903	                    mov qword [rbx], rax	       150	sb.c	FUNCTION_7	IF_1	CALL_4
0x4000082	              0x5b	                                 pop rbx	       152	sb.c	FUNCTION_7
0x4000083	            0xf3c3	                                     ret	       152	sb.c	FUNCTION_7
0x4000085	      0xbf00000000	                              mov edi, 0	       137	sb.c	FUNCTION_7	IF_1	CALL_1
0x400008a	            0x31c0	                            xor eax, eax	       137	sb.c	FUNCTION_7	IF_1	CALL_1
0x400008c	      0xe800000000	                          call 0x4000091	       137	sb.c	FUNCTION_7	IF_1	CALL_1
sb_reset	DO,0:ELSE,0:CALL,0:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	2
0x4000200	    0x48c747080000	                  mov qword [rdi + 8], 0	       159	sb.c	FUNCTION_8
0x4000208	              0xc3	                                     ret	       159	sb.c	FUNCTION_8
sb_terminate	DO,0:ELSE,0:CALL,0:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	5
0x40002b0	        0x488b4708	                mov rax, qword [rdi + 8]	       197	sb.c	FUNCTION_12
0x40002b4	          0x488b17	                    mov rdx, qword [rdi]	       197	sb.c	FUNCTION_12
0x40002b7	        0xc6040200	                 mov byte [rdx + rax], 0	       197	sb.c	FUNCTION_12
0x40002bb	          0x488b07	                    mov rax, qword [rdi]	       198	sb.c	FUNCTION_12
0x40002be	              0xc3	                                     ret	       199	sb.c	FUNCTION_12
sb_add_buffer	DO,0:ELSE,0:CALL,2:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	18
0x4000280	            0x4154	                                push r12	       186	sb.c	FUNCTION_11
0x4000282	              0x55	                                push rbp	       186	sb.c	FUNCTION_11
0x4000283	          0x4989f4	                            mov r12, rsi	       186	sb.c	FUNCTION_11
0x4000286	              0x53	                                push rbx	       186	sb.c	FUNCTION_11
0x4000287	          0x4889d6	                            mov rsi, rdx	       187	sb.c	FUNCTION_11	CALL_1
0x400028a	          0x4889fb	                            mov rbx, rdi	       186	sb.c	FUNCTION_11
0x400028d	          0x4889d5	                            mov rbp, rdx	       186	sb.c	FUNCTION_11
0x4000290	      0xe8abfdffff	                       call sym.sb_check	       187	sb.c	FUNCTION_11	CALL_1
0x4000295	        0x488b7b08	                mov rdi, qword [rbx + 8]	        53	string3.h	FUNCTION_15	CALL_3
0x4000299	          0x48033b	                    add rdi, qword [rbx]	        53	string3.h	FUNCTION_15	CALL_3
0x400029c	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_15	CALL_3
0x400029f	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_15	CALL_3
0x40002a2	      0xe800000000	                          call 0x40002a7	        53	string3.h	FUNCTION_15	CALL_3
0x40002a7	        0x48016b08	                add qword [rbx + 8], rbp	       189	sb.c	FUNCTION_11
0x40002ab	              0x5b	                                 pop rbx	       190	sb.c	FUNCTION_11
0x40002ac	              0x5d	                                 pop rbp	       190	sb.c	FUNCTION_11
0x40002ad	            0x415c	                                 pop r12	       190	sb.c	FUNCTION_11
0x40002af	              0xc3	                                     ret	       190	sb.c	FUNCTION_11
sb_kill	DO,0:ELSE,0:CALL,1:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	2
0x4000150	          0x488b3f	                    mov rdi, qword [rdi]	        78	sb.c	FUNCTION_3	CALL_1
0x4000153	      0xe900000000	                           jmp 0x4000158	        78	sb.c	FUNCTION_3	CALL_1
sb_new	DO,0:ELSE,0:CALL,1:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	9
0x4000120	              0x53	                                push rbx	        69	sb.c	FUNCTION_2
0x4000121	          0x4889fb	                            mov rbx, rdi	        69	sb.c	FUNCTION_2
0x4000124	      0xbf30000000	                           mov edi, 0x30	        62	sb.c	FUNCTION_1	CALL_1
0x4000129	      0xe800000000	                          call 0x400012e	        62	sb.c	FUNCTION_1	CALL_1
0x400012e	    0x48c743102f00	           mov qword [rbx + 0x10], 0x2f 	        63	sb.c	FUNCTION_1
0x4000136	          0x488903	                    mov qword [rbx], rax	        62	sb.c	FUNCTION_1	CALL_1
0x4000139	    0x48c743080000	                  mov qword [rbx + 8], 0	        64	sb.c	FUNCTION_1
0x4000141	              0x5b	                                 pop rbx	        71	sb.c	FUNCTION_2
0x4000142	              0xc3	                                     ret	        71	sb.c	FUNCTION_2
sb_add_char	DO,0:ELSE,0:CALL,1:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	16
0x4000210	              0x55	                                push rbp	       166	sb.c	FUNCTION_9
0x4000211	              0x53	                                push rbx	       166	sb.c	FUNCTION_9
0x4000212	          0x4889f5	                            mov rbp, rsi	       166	sb.c	FUNCTION_9
0x4000215	          0x4889fb	                            mov rbx, rdi	       166	sb.c	FUNCTION_9
0x4000218	      0xbe01000000	                              mov esi, 1	       167	sb.c	FUNCTION_9	CALL_1
0x400021d	        0x4883ec08	                              sub rsp, 8	       166	sb.c	FUNCTION_9
0x4000221	      0xe81afeffff	                       call sym.sb_check	       167	sb.c	FUNCTION_9	CALL_1
0x4000226	        0x488b4308	                mov rax, qword [rbx + 8]	       168	sb.c	FUNCTION_9
0x400022a	          0x488b13	                    mov rdx, qword [rbx]	       168	sb.c	FUNCTION_9
0x400022d	        0x488d4801	                      lea rcx, [rax + 1]	       168	sb.c	FUNCTION_9
0x4000231	        0x48894b08	                mov qword [rbx + 8], rcx	       168	sb.c	FUNCTION_9
0x4000235	        0x40882c02	               mov byte [rdx + rax], bpl	       168	sb.c	FUNCTION_9
0x4000239	        0x4883c408	                              add rsp, 8	       169	sb.c	FUNCTION_9
0x400023d	              0x5b	                                 pop rbx	       169	sb.c	FUNCTION_9
0x400023e	              0x5d	                                 pop rbp	       169	sb.c	FUNCTION_9
0x400023f	              0xc3	                                     ret	       169	sb.c	FUNCTION_9
sb_skip_comma	DO,0:ELSE,0:CALL,0:functions,0:SWITCH,0:FOR,0:WHILE,2:IF,1	37
0x4000300	        0x488b4e08	                mov rcx, qword [rsi + 8]	       221	sb.c	FUNCTION_14	WHILE_1
0x4000304	          0x4889f8	                            mov rax, rdi	       220	sb.c	FUNCTION_14
0x4000307	          0x4839cf	                            cmp rdi, rcx	       221	sb.c	FUNCTION_14	WHILE_1
0x400030a	            0x7364	                           jae 0x4000370	       221	sb.c	FUNCTION_14	WHILE_1
0x400030c	          0x488b36	                    mov rsi, qword [rsi]	       222	sb.c	FUNCTION_14	WHILE_1
0x400030f	            0xeb10	                           jmp 0x4000321	       222	sb.c	FUNCTION_14	WHILE_1
0x4000311	     0xf1f80000000	                         nop dword [rax]	       222	sb.c	FUNCTION_14	WHILE_1
0x4000318	        0x4883c001	                              add rax, 1	       224	sb.c	FUNCTION_14	WHILE_1
0x400031c	          0x4839c8	                            cmp rax, rcx	       221	sb.c	FUNCTION_14	WHILE_1
0x400031f	            0x734f	                           jae 0x4000370	       221	sb.c	FUNCTION_14	WHILE_1
0x4000321	         0xfb61406	             movzx edx, byte [rsi + rax]	       222	sb.c	FUNCTION_14	WHILE_1
0x4000325	          0x80fa20	                            cmp dl, 0x20	       222	sb.c	FUNCTION_14	WHILE_1
0x4000328	            0x74ee	                            je 0x4000318	       222	sb.c	FUNCTION_14	WHILE_1
0x400032a	          0x80fa09	                               cmp dl, 9	       222	sb.c	FUNCTION_14	WHILE_1
0x400032d	            0x74e9	                            je 0x4000318	       222	sb.c	FUNCTION_14	WHILE_1
0x400032f	          0x80fa2c	                            cmp dl, 0x2c	       227	sb.c	FUNCTION_14	IF_1
0x4000332	            0x753c	                           jne 0x4000370	       227	sb.c	FUNCTION_14	IF_1
0x4000334	        0x4883c001	                              add rax, 1	       228	sb.c	FUNCTION_14	IF_1
0x4000338	          0x4839c8	                            cmp rax, rcx	       230	sb.c	FUNCTION_14	WHILE_2
0x400033b	            0x7333	                           jae 0x4000370	       230	sb.c	FUNCTION_14	WHILE_2
0x400033d	         0xfb61406	             movzx edx, byte [rsi + rax]	       230	sb.c	FUNCTION_14	WHILE_2
0x4000341	          0x80fa09	                               cmp dl, 9	       231	sb.c	FUNCTION_14	WHILE_2
0x4000344	            0x740a	                            je 0x4000350	       231	sb.c	FUNCTION_14	WHILE_2
0x4000346	          0x80fa20	                            cmp dl, 0x20	       231	sb.c	FUNCTION_14	WHILE_2
0x4000349	            0x7525	                           jne 0x4000370	       231	sb.c	FUNCTION_14	WHILE_2
0x400034b	       0xf1f440000	                   nop dword [rax + rax]	       231	sb.c	FUNCTION_14	WHILE_2
0x4000350	        0x4883c001	                              add rax, 1	       233	sb.c	FUNCTION_14	WHILE_2
0x4000354	          0x4839c8	                            cmp rax, rcx	       230	sb.c	FUNCTION_14	WHILE_2
0x4000357	            0x7317	                           jae 0x4000370	       230	sb.c	FUNCTION_14	WHILE_2
0x4000359	         0xfb61406	             movzx edx, byte [rsi + rax]	       231	sb.c	FUNCTION_14	WHILE_2
0x400035d	          0x80fa20	                            cmp dl, 0x20	       231	sb.c	FUNCTION_14	WHILE_2
0x4000360	            0x74ee	                            je 0x4000350	       231	sb.c	FUNCTION_14	WHILE_2
0x4000362	          0x80fa09	                               cmp dl, 9	       231	sb.c	FUNCTION_14	WHILE_2
0x4000365	            0x74e9	                            je 0x4000350	       231	sb.c	FUNCTION_14	WHILE_2
0x4000367	            0xf3c3	                                     ret	       231	sb.c	FUNCTION_14	WHILE_2
0x4000369	     0xf1f80000000	                         nop dword [rax]	       231	sb.c	FUNCTION_14	WHILE_2
0x4000370	            0xf3c3	                                     ret	       236	sb.c	FUNCTION_14
sb_scrub_and_add_sb	DO,0:ELSE,0:CALL,2:functions,0:SWITCH,0:FOR,0:WHILE,0:IF,0	22
0x40001a0	              0x55	                                push rbp	       112	sb.c	FUNCTION_6
0x40001a1	              0x53	                                push rbx	       112	sb.c	FUNCTION_6
0x40001a2	          0x4889f5	                            mov rbp, rsi	       112	sb.c	FUNCTION_6
0x40001a5	          0x4889fb	                            mov rbx, rdi	       112	sb.c	FUNCTION_6
0x40001a8	        0x4883ec08	                              sub rsp, 8	       112	sb.c	FUNCTION_6
0x40001ac	    0x488935000000	            mov qword [0x040001b3], rsi 	       113	sb.c	FUNCTION_6
0x40001b3	          0x488b06	                    mov rax, qword [rsi]	       114	sb.c	FUNCTION_6
0x40001b6	        0x488b7608	                mov rsi, qword [rsi + 8]	       116	sb.c	FUNCTION_6	CALL_1
0x40001ba	    0x488905000000	            mov qword [0x040001c1], rax 	       114	sb.c	FUNCTION_6
0x40001c1	      0xe87afeffff	                       call sym.sb_check	       116	sb.c	FUNCTION_6	CALL_1
0x40001c6	        0x488b7308	                mov rsi, qword [rbx + 8]	       117	sb.c	FUNCTION_6	CALL_2
0x40001ca	          0x480333	                    add rsi, qword [rbx]	       117	sb.c	FUNCTION_6	CALL_2
0x40001cd	      0xbf00000000	                              mov edi, 0	       117	sb.c	FUNCTION_6	CALL_2
0x40001d2	        0x488b5508	                mov rdx, qword [rbp + 8]	       117	sb.c	FUNCTION_6	CALL_2
0x40001d6	      0xe800000000	                          call 0x40001db	       117	sb.c	FUNCTION_6	CALL_2
0x40001db	    0x48c705000000	               mov qword [0x040001e6], 0	       119	sb.c	FUNCTION_6
0x40001e6	        0x48014308	                add qword [rbx + 8], rax	       117	sb.c	FUNCTION_6	CALL_2
0x40001ea	    0x48c705000000	               mov qword [0x040001f5], 0	       120	sb.c	FUNCTION_6
0x40001f5	        0x4883c408	                              add rsp, 8	       121	sb.c	FUNCTION_6
0x40001f9	              0x5b	                                 pop rbx	       121	sb.c	FUNCTION_6
0x40001fa	              0x5d	                                 pop rbp	       121	sb.c	FUNCTION_6
0x40001fb	              0xc3	                                     ret	       121	sb.c	FUNCTION_6
sb_skip_white	DO,0:ELSE,0:CALL,0:functions,0:SWITCH,0:FOR,0:WHILE,1:IF,0	16
0x40002c0	        0x488b4e08	                mov rcx, qword [rsi + 8]	       207	sb.c	FUNCTION_13	WHILE_1
0x40002c4	          0x4889f8	                            mov rax, rdi	       206	sb.c	FUNCTION_13
0x40002c7	          0x4839cf	                            cmp rdi, rcx	       207	sb.c	FUNCTION_13	WHILE_1
0x40002ca	            0x7323	                           jae 0x40002ef	       207	sb.c	FUNCTION_13	WHILE_1
0x40002cc	          0x488b36	                    mov rsi, qword [rsi]	       208	sb.c	FUNCTION_13	WHILE_1
0x40002cf	            0xeb10	                           jmp 0x40002e1	       208	sb.c	FUNCTION_13	WHILE_1
0x40002d1	     0xf1f80000000	                         nop dword [rax]	       208	sb.c	FUNCTION_13	WHILE_1
0x40002d8	        0x4883c001	                              add rax, 1	       210	sb.c	FUNCTION_13	WHILE_1
0x40002dc	          0x4839c8	                            cmp rax, rcx	       207	sb.c	FUNCTION_13	WHILE_1
0x40002df	            0x730e	                           jae 0x40002ef	       207	sb.c	FUNCTION_13	WHILE_1
0x40002e1	         0xfb61406	             movzx edx, byte [rsi + rax]	       208	sb.c	FUNCTION_13	WHILE_1
0x40002e5	          0x80fa20	                            cmp dl, 0x20	       208	sb.c	FUNCTION_13	WHILE_1
0x40002e8	            0x74ee	                            je 0x40002d8	       208	sb.c	FUNCTION_13	WHILE_1
0x40002ea	          0x80fa09	                               cmp dl, 9	       208	sb.c	FUNCTION_13	WHILE_1
0x40002ed	            0x74e9	                            je 0x40002d8	       208	sb.c	FUNCTION_13	WHILE_1
0x40002ef	            0xf3c3	                                     ret	       212	sb.c	FUNCTION_13
