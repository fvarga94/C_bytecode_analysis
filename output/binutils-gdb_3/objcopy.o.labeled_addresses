copy_section	ELSE,2:SWITCH,0:WHILE,0:IF,12:DO,0:CALL,18:functions,0:FOR,4	242
0x40017a0	            0x4156	                                push r14	      4020	objcopy.c	FUNCTION_51
0x40017a2	            0x4155	                                push r13	      4020	objcopy.c	FUNCTION_51
0x40017a4	          0x4989fd	                            mov r13, rdi	      4020	objcopy.c	FUNCTION_51
0x40017a7	            0x4154	                                push r12	      4020	objcopy.c	FUNCTION_51
0x40017a9	              0x55	                                push rbp	      4020	objcopy.c	FUNCTION_51
0x40017aa	          0x4989f4	                            mov r12, rsi	      4020	objcopy.c	FUNCTION_51
0x40017ad	              0x53	                                push rbx	      4020	objcopy.c	FUNCTION_51
0x40017ae	          0x4889d3	                            mov rbx, rdx	      4020	objcopy.c	FUNCTION_51
0x40017b1	      0xba01000000	                              mov edx, 1	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017b6	        0x4883ec20	                           sub rsp, 0x20	      4020	objcopy.c	FUNCTION_51
0x40017ba	    0x64488b042528	                mov rax, qword fs:[0x28]	      4020	objcopy.c	FUNCTION_51
0x40017c3	      0x4889442418	             mov qword [rsp + 0x18], rax	      4020	objcopy.c	FUNCTION_51
0x40017c8	            0x31c0	                            xor eax, eax	      4020	objcopy.c	FUNCTION_51
0x40017ca	      0xe831ffffff	                   call sym.skip_section	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017cf	            0x85c0	                           test eax, eax	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017d1	            0x753c	                           jne 0x400180f	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017d3	    0x41f644242101	               test byte [r12 + 0x21], 1	      4036	objcopy.c	FUNCTION_51	IF_2
0x40017d9	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4034	objcopy.c	FUNCTION_51
0x40017de	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	      4029	objcopy.c	FUNCTION_51
0x40017e3	      0x4889442408	                mov qword [rsp + 8], rax	      4034	objcopy.c	FUNCTION_51
0x40017e8	            0x740a	                            je 0x40017f4	      4036	objcopy.c	FUNCTION_51	IF_2
0x40017ea	        0xf6452101	               test byte [rbp + 0x21], 1	      4037	objcopy.c	FUNCTION_51	IF_2
0x40017ee	     0xf85bc000000	                           jne 0x40018b0	      4037	objcopy.c	FUNCTION_51	IF_2
0x40017f4	        0x498b3c24	                    mov rdi, qword [r12]	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x40017f8	            0x31f6	                            xor esi, esi	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x40017fa	      0xba40000000	                           mov edx, 0x40	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x40017ff	      0xe8bce9ffff	              call sym.find_section_list	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4001804	          0x4885c0	                           test rax, rax	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4001807	            0x7406	                            je 0x400180f	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4001809	        0xf6402901	               test byte [rax + 0x29], 1	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x400180d	            0x7521	                           jne 0x4001830	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x400180f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4139	objcopy.c	FUNCTION_51
0x4001814	    0x644833042528	                xor rax, qword fs:[0x28]	      4139	objcopy.c	FUNCTION_51
0x400181d	     0xf85c9020000	                           jne 0x4001aec	      4139	objcopy.c	FUNCTION_51
0x4001823	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x4001827	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x4001828	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x4001829	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x400182b	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x400182d	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x400182f	              0xc3	                                     ret	      4139	objcopy.c	FUNCTION_51
0x4001830	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4001835	      0xe800000000	                          call 0x400183a	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x400183a	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x400183f	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_67	CALL_6
0x4001841	          0x4989c4	                            mov r12, rax	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4001844	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_67	CALL_6
0x4001847	          0x4c89ea	                            mov rdx, r13	        90	string3.h	FUNCTION_67	CALL_6
0x400184a	      0xe800000000	                          call 0x400184f	        90	string3.h	FUNCTION_67	CALL_6
0x400184f	            0x31c9	                            xor ecx, ecx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001851	          0x4d89e8	                             mov r8, r13	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001854	          0x4c89e2	                            mov rdx, r12	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001857	          0x4889ee	                            mov rsi, rbp	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x400185a	          0x4889df	                            mov rdi, rbx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x400185d	      0xe800000000	                          call 0x4001862	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001862	            0x85c0	                           test eax, eax	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001864	     0xf856e020000	                           jne 0x4001ad8	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x400186a	            0x31c9	                            xor ecx, ecx	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x400186c	            0x31ff	                            xor edi, edi	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x400186e	          0x4889ea	                            mov rdx, rbp	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4001871	          0x4889de	                            mov rsi, rbx	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4001874	    0xc70500000000	               mov dword [0x0400187e], 1	      4132	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12
0x400187e	      0xe800000000	                          call 0x4001883	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4001883	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001888	    0x644833042528	                xor rax, qword fs:[0x28]	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001891	     0xf8555020000	                           jne 0x4001aec	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001897	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x400189b	          0x4c89e7	                            mov rdi, r12	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x400189e	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x400189f	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x40018a0	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x40018a2	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x40018a4	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x40018a6	      0xe900000000	                           jmp 0x40018ab	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x40018ab	       0xf1f440000	                   nop dword [rax + rax]	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x40018b0	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018b5	          0x4c89e6	                            mov rsi, r12	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018b8	          0x4c89ef	                            mov rdi, r13	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018bb	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4039	objcopy.c	FUNCTION_51	IF_2
0x40018c4	      0xe800000000	                          call 0x40018c9	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018c9	            0x85c0	                           test eax, eax	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018cb	     0xf84d7010000	                            je 0x4001aa8	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018d1	      0x4c8d442408	                       lea r8, [rsp + 8]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018d6	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018db	          0x4889da	                            mov rdx, rbx	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018de	          0x4c89e6	                            mov rsi, r12	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018e1	          0x4c89ef	                            mov rdi, r13	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018e4	      0xe800000000	                          call 0x40018e9	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018e9	            0x85c0	                           test eax, eax	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018eb	     0xf84b7010000	                            je 0x4001aa8	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018f1	    0x448b2d000000	           mov r13d, dword [0x040018f8] 	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x40018f8	          0x4585ed	                         test r13d, r13d	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x40018fb	     0xf84f7010000	                            je 0x4001af8	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4001901	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001906	            0x31d2	                            xor edx, edx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001908	          0x4d63d5	                        movsxd r10, r13d	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400190b	          0x4889c8	                            mov rax, rcx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400190e	          0x4989c8	                             mov r8, rcx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001911	          0x49f7f2	                                 div r10	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001914	          0x4885d2	                           test rdx, rdx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001917	     0xf85f4010000	                           jne 0x4001b11	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400191d	          0x4885c9	                           test rcx, rcx	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001920	            0x746c	                            je 0x400198e	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001922	          0x4589eb	                          mov r11d, r13d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001925	          0x4531c9	                            xor r9d, r9d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001928	        0x41c1eb1f	                          shr r11d, 0x1f	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400192c	          0x4501eb	                          add r11d, r13d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400192f	        0x4d8d6aff	                      lea r13, [r10 - 1]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001933	          0x41d1fb	                             sar r11d, 1	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001936	          0x4d63db	                        movsxd r11, r11d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001939	     0xf1f80000000	                         nop dword [rax]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001940	          0x4d85db	                           test r11, r11	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001943	            0x743e	                            je 0x4001983	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001945	      0x4b8d4c0d00	                     lea rcx, [r13 + r9]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400194a	        0x4f8d3419	                     lea r14, [r9 + r11]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400194e	          0x4c89ca	                             mov rdx, r9	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001951	     0xf1f80000000	                         nop dword [rax]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001958	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4064	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400195d	        0x488d3410	                    lea rsi, [rax + rdx]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001961	          0x4801c8	                            add rax, rcx	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001964	        0x4883c201	                              add rdx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001968	        0x440fb600	                   movzx r8d, byte [rax]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400196c	        0x4883e901	                              sub rcx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001970	          0x4939d6	                            cmp r14, rdx	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001973	           0xfb63e	                   movzx edi, byte [rsi]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001976	          0x448806	                     mov byte [rsi], r8b	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001979	          0x408838	                     mov byte [rax], dil	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400197c	            0x75da	                           jne 0x4001958	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400197e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001983	          0x4d01d1	                             add r9, r10	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001986	          0x4989c8	                             mov r8, rcx	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001989	          0x4c39c9	                             cmp rcx, r9	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400198c	            0x77b2	                            ja 0x4001940	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400198e	    0x448b1d000000	           mov r11d, dword [0x04001995] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001995	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400199a	          0x4585db	                         test r11d, r11d	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400199d	     0xf88c0000000	                            js 0x4001a63	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a3	    0x4c630d000000	          movsxd r9, dword [0x040019aa] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019aa	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019af	            0x31d2	                            xor edx, edx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b6	          0x4d63eb	                        movsxd r13, r11d	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b9	    0x4c6315000000	         movsxd r10, dword [0x040019c0] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019c0	          0x4d89ee	                            mov r14, r13	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019c3	          0x49f7f1	                                  div r9	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019c6	        0x4a8d3401	                     lea rsi, [rcx + r8]	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019ca	          0x4889cf	                            mov rdi, rcx	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019cd	          0x4863c2	                         movsxd rax, edx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d0	          0x4989d4	                            mov r12, rdx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d3	          0x4929c6	                            sub r14, rax	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d6	          0x4901ce	                            add r14, rcx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d9	          0x4139d3	                           cmp r11d, edx	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x40019dc	        0x4b8d040e	                     lea rax, [r14 + r9]	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x40019e0	        0x4c0f4cf0	                          cmovl r14, rax	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x40019e4	          0x4939f6	                            cmp r14, rsi	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019e7	            0x7349	                           jae 0x4001a32	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019e9	        0x458d42ff	                      lea r8d, [r10 - 1]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019ed	           0xf1f00	                         nop dword [rax]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019f0	          0x4585d2	                         test r10d, r10d	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x40019f3	            0x7e2b	                           jle 0x4001a20	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x40019f5	          0x4c39f6	                            cmp rsi, r14	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x40019f8	          0x4c89f0	                            mov rax, r14	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x40019fb	        0x4b8d3c06	                     lea rdi, [r14 + r8]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x40019ff	            0x7710	                            ja 0x4001a11	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a01	            0xeb1d	                           jmp 0x4001a20	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a03	       0xf1f440000	                   nop dword [rax + rax]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a08	        0x4883c001	                              add rax, 1	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a0c	          0x4839f0	                            cmp rax, rsi	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a0f	            0x740f	                            je 0x4001a20	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a11	           0xfb610	                   movzx edx, byte [rax]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a14	        0x4883c101	                              add rcx, 1	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a18	          0x4839c7	                            cmp rdi, rax	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a1b	          0x8851ff	                  mov byte [rcx - 1], dl	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a1e	            0x75e8	                           jne 0x4001a08	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a20	          0x4d01ce	                             add r14, r9	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a23	          0x4c39f6	                            cmp rsi, r14	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a26	            0x77c8	                            ja 0x40019f0	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a28	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a2d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a32	        0x498d41ff	                       lea rax, [r9 - 1]	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a36	            0x31d2	                            xor edx, edx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a38	          0x4c29e8	                            sub rax, r13	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a3b	          0x4c01c0	                             add rax, r8	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a3e	          0x49f7f1	                                  div r9	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a41	            0x31d2	                            xor edx, edx	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a43	        0x490fafc2	                           imul rax, r10	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a47	          0x4989c0	                             mov r8, rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a4a	      0x4889442408	                mov qword [rsp + 8], rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a4f	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a53	          0x49f7f1	                                  div r9	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a56	          0x4539e3	                          cmp r11d, r12d	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a59	            0x7d04	                           jge 0x4001a5f	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a5b	        0x4883c001	                              add rax, 1	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a5f	        0x48894530	            mov qword [rbp + 0x30], rax 	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a63	            0x31c9	                            xor ecx, ecx	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a65	          0x4889fa	                            mov rdx, rdi	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a68	          0x4889ee	                            mov rsi, rbp	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a6b	          0x4889df	                            mov rdi, rbx	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a6e	      0xe800000000	                          call 0x4001a73	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a73	            0x85c0	                           test eax, eax	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a75	     0xf8587000000	                           jne 0x4001b02	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a7b	            0x31ff	                            xor edi, edi	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a7d	            0x31c9	                            xor ecx, ecx	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a7f	          0x4889ea	                            mov rdx, rbp	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a82	          0x4889de	                            mov rsi, rbx	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a85	    0xc70500000000	               mov dword [0x04001a8f], 1	      4110	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001a8f	      0xe800000000	                          call 0x4001a94	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a94	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4001a99	      0xe800000000	                          call 0x4001a9e	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4001a9e	      0xe96cfdffff	                           jmp 0x400180f	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001aa3	       0xf1f440000	                   nop dword [rax + rax]	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001aa8	            0x31ff	                            xor edi, edi	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001aaa	            0x31c9	                            xor ecx, ecx	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001aac	          0x4c89e2	                            mov rdx, r12	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001aaf	          0x4c89ee	                            mov rsi, r13	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001ab2	            0x31c0	                            xor eax, eax	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001ab4	    0xc70500000000	               mov dword [0x04001abe], 1	      4045	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001abe	      0xe800000000	                          call 0x4001ac3	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001ac3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001ac8	      0xe800000000	                          call 0x4001acd	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001acd	      0xe93dfdffff	                           jmp 0x400180f	      4048	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001ad2	    0x660f1f440000	                    nop word [rax + rax]	      4048	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001ad8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001add	    0x644833042528	                xor rax, qword fs:[0x28]	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001ae6	     0xf84abfdffff	                            je 0x4001897	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001aec	      0xe800000000	                          call 0x4001af1	      4139	objcopy.c	FUNCTION_51
0x4001af1	     0xf1f80000000	                         nop dword [rax]	      4139	objcopy.c	FUNCTION_51
0x4001af8	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4139	objcopy.c	FUNCTION_51
0x4001afd	      0xe98cfeffff	                           jmp 0x400198e	      4139	objcopy.c	FUNCTION_51
0x4001b02	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001b07	      0xe800000000	                          call 0x4001b0c	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001b0c	      0xe9fefcffff	                           jmp 0x400180f	      4038	objcopy.c	FUNCTION_51	IF_2
0x4001b11	        0x498b1c24	                    mov rbx, qword [r12]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b15	      0xba05000000	                              mov edx, 5	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b1a	      0xbe00000000	                              mov esi, 0	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b1f	            0x31ff	                            xor edi, edi	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b21	      0xe800000000	                          call 0x4001b26	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b26	          0x4489ea	                           mov edx, r13d	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b29	          0x4889c7	                            mov rdi, rax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b2c	          0x4889de	                            mov rsi, rbx	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b2f	            0x31c0	                            xor eax, eax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b31	      0xe800000000	                          call 0x4001b36	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
copy_usage	ELSE,1:SWITCH,0:WHILE,0:IF,4:DO,0:CALL,14:functions,0:FOR,9	79
0x40004c0	            0x4154	                                push r12	       528	objcopy.c	FUNCTION_1
0x40004c2	    0x4c8b25000000	            mov r12, qword [0x040004c9] 	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004c9	      0xba05000000	                              mov edx, 5	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004ce	              0x55	                                push rbp	       528	objcopy.c	FUNCTION_1
0x40004cf	              0x53	                                push rbx	       528	objcopy.c	FUNCTION_1
0x40004d0	            0x89f5	                            mov ebp, esi	       528	objcopy.c	FUNCTION_1
0x40004d2	          0x4889fb	                            mov rbx, rdi	       528	objcopy.c	FUNCTION_1
0x40004d5	      0xbe00000000	                              mov esi, 0	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004da	            0x31ff	                            xor edi, edi	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004dc	      0xe800000000	                          call 0x40004e1	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004e1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_22
0x40004e4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40004e7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40004ec	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40004ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40004f1	      0xe800000000	                          call 0x40004f6	        97	stdio2.h	CALL_22
0x40004f6	            0x31ff	                            xor edi, edi	       530	objcopy.c	FUNCTION_1	CALL_2
0x40004f8	      0xba05000000	                              mov edx, 5	       530	objcopy.c	FUNCTION_1	CALL_2
0x40004fd	      0xbe00000000	                              mov esi, 0	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000502	      0xe800000000	                          call 0x4000507	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000507	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x400050c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x400050f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000512	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000514	      0xe800000000	                          call 0x4000519	        97	stdio2.h	CALL_22
0x4000519	            0x31ff	                            xor edi, edi	       531	objcopy.c	FUNCTION_1	CALL_3
0x400051b	      0xba05000000	                              mov edx, 5	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000520	      0xbe00000000	                              mov esi, 0	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000525	      0xe800000000	                          call 0x400052a	       531	objcopy.c	FUNCTION_1	CALL_3
0x400052a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x400052f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000532	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000535	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000537	      0xe800000000	                          call 0x400053c	        97	stdio2.h	CALL_22
0x400053c	            0x31ff	                            xor edi, edi	       532	objcopy.c	FUNCTION_1	CALL_4
0x400053e	      0xba05000000	                              mov edx, 5	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000543	      0xbe00000000	                              mov esi, 0	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000548	      0xe800000000	                          call 0x400054d	       532	objcopy.c	FUNCTION_1	CALL_4
0x400054d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000552	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000555	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000558	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400055a	      0xe800000000	                          call 0x400055f	        97	stdio2.h	CALL_22
0x400055f	            0x31ff	                            xor edi, edi	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000561	      0xba05000000	                              mov edx, 5	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000566	      0xbe00000000	                              mov esi, 0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x400056b	      0xe800000000	                          call 0x4000570	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000570	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000575	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000578	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400057b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400057d	      0xe800000000	                          call 0x4000582	        97	stdio2.h	CALL_22
0x4000582	            0x31ff	                            xor edi, edi	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x4000584	      0xba05000000	                              mov edx, 5	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x4000589	      0xbe00000000	                              mov esi, 0	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x400058e	      0xe800000000	                          call 0x4000593	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x4000593	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000598	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x400059b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400059e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40005a0	      0xe800000000	                          call 0x40005a5	        97	stdio2.h	CALL_22
0x40005a5	    0x488b3d000000	            mov rdi, qword [0x040005ac] 	       656	objcopy.c	FUNCTION_1	CALL_12
0x40005ac	          0x4889de	                            mov rsi, rbx	       656	objcopy.c	FUNCTION_1	CALL_12
0x40005af	      0xe800000000	                          call 0x40005b4	       656	objcopy.c	FUNCTION_1	CALL_12
0x40005b4	            0x85ed	                           test ebp, ebp	       657	objcopy.c	FUNCTION_1	IF_4
0x40005b6	            0x7407	                            je 0x40005bf	       657	objcopy.c	FUNCTION_1	IF_4
0x40005b8	            0x89ef	                            mov edi, ebp	       659	objcopy.c	FUNCTION_1	CALL_14
0x40005ba	      0xe800000000	                          call 0x40005bf	       659	objcopy.c	FUNCTION_1	CALL_14
0x40005bf	            0x31ff	                            xor edi, edi	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005c1	      0xba05000000	                              mov edx, 5	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005c6	      0xbe00000000	                              mov esi, 0	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005cb	      0xe800000000	                          call 0x40005d0	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005d0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_22
0x40005d5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40005d8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40005dd	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40005e0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40005e2	      0xe800000000	                          call 0x40005e7	        97	stdio2.h	CALL_22
0x40005e7	            0xebcf	                           jmp 0x40005b8	        97	stdio2.h	CALL_22
convert_efi_target	ELSE,1:SWITCH,0:WHILE,0:IF,2:DO,0:CALL,2:functions,0:FOR,0	24
0x4000110	        0x488d5704	                      lea rdx, [rdi + 4]	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000114	          0xc60770	                    mov byte [rdi], 0x70	      4592	objcopy.c	FUNCTION_59
0x4000117	        0xc6470165	                mov byte [rdi + 1], 0x65	      4593	objcopy.c	FUNCTION_59
0x400011b	        0xc6470269	                mov byte [rdi + 2], 0x69	      4594	objcopy.c	FUNCTION_59
0x400011f	          0x4889f8	                            mov rax, rdi	      4591	objcopy.c	FUNCTION_59
0x4000122	      0xb905000000	                              mov ecx, 5	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000127	      0xbf00000000	                              mov edi, 0	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012c	          0x4889d6	                            mov rsi, rdx	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000131	            0x741b	                            je 0x400014e	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000133	              0x53	                                push rbx	      4591	objcopy.c	FUNCTION_59
0x4000134	      0xbe00000000	                              mov esi, 0	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000139	          0x4889d7	                            mov rdi, rdx	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013c	          0x4889c3	                            mov rbx, rax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013f	      0xe800000000	                          call 0x4000144	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000144	            0x85c0	                           test eax, eax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000146	            0x7504	                           jne 0x400014c	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000148	        0xc643072d	                mov byte [rbx + 7], 0x2d	      4606	objcopy.c	FUNCTION_59	ELSE_1	IF_2
0x400014c	              0x5b	                                 pop rbx	      4608	objcopy.c	FUNCTION_59
0x400014d	              0xc3	                                     ret	      4608	objcopy.c	FUNCTION_59
0x400014e	        0xc6400533	                mov byte [rax + 5], 0x33	      4599	objcopy.c	FUNCTION_59	IF_1
0x4000152	        0xc6400638	                mov byte [rax + 6], 0x38	      4600	objcopy.c	FUNCTION_59	IF_1
0x4000156	        0xc6400736	                mov byte [rax + 7], 0x36	      4601	objcopy.c	FUNCTION_59	IF_1
0x400015a	              0xc3	                                     ret	      4601	objcopy.c	FUNCTION_59	IF_1
htab_hash_redefnode	ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	2
0x4000160	          0x488b3f	                    mov rdi, qword [rdi]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000163	      0xe900000000	                           jmp 0x4000168	       973	objcopy.c	FUNCTION_7	CALL_1
find_section_list	ELSE,2:SWITCH,0:WHILE,0:IF,12:DO,0:CALL,10:functions,0:FOR,1	135
0x40001c0	            0x4156	                                push r14	       876	objcopy.c	FUNCTION_5
0x40001c2	            0x4155	                                push r13	       876	objcopy.c	FUNCTION_5
0x40001c4	          0x4189d5	                           mov r13d, edx	       876	objcopy.c	FUNCTION_5
0x40001c7	            0x4154	                                push r12	       876	objcopy.c	FUNCTION_5
0x40001c9	              0x55	                                push rbp	       876	objcopy.c	FUNCTION_5
0x40001ca	          0x4989fc	                            mov r12, rdi	       876	objcopy.c	FUNCTION_5
0x40001cd	              0x53	                                push rbx	       876	objcopy.c	FUNCTION_5
0x40001ce	    0x488b1d000000	            mov rbx, qword [0x040001d5] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001d5	            0x89f5	                            mov ebp, esi	       876	objcopy.c	FUNCTION_5
0x40001d7	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001da	     0xf84f8000000	                            je 0x40002d8	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e0	          0x4531f6	                          xor r14d, r14d	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e3	            0xeb1f	                           jmp 0x4000204	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e5	           0xf1f00	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e8	        0x488b7b08	                mov rdi, qword [rbx + 8]	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001ec	          0x4c89e6	                            mov rsi, r12	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001ef	      0xe800000000	                          call 0x40001f4	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001f4	            0x85c0	                           test eax, eax	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001f6	     0xf8484000000	                            je 0x4000280	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001fc	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001ff	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000202	            0x7434	                            je 0x4000238	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000204	            0x85ed	                           test ebp, ebp	       883	objcopy.c	FUNCTION_5	FOR_1	IF_1
0x4000206	            0x75e0	                           jne 0x40001e8	       883	objcopy.c	FUNCTION_5	FOR_1	IF_1
0x4000208	        0x44856b14	          test dword [rbx + 0x14], r13d 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x400020c	            0x74ee	                            je 0x40001fc	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x400020e	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000212	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000215	            0x7449	                            je 0x4000260	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000217	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000219	          0x4c89e6	                            mov rsi, r12	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400021c	      0xe800000000	                          call 0x4000221	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000221	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000223	            0x75d7	                           jne 0x40001fc	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000225	          0x4d85f6	                           test r14, r14	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000228	        0x4c0f44f3	                          cmove r14, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400022c	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x400022f	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000232	            0x75d0	                           jne 0x4000204	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000234	         0xf1f4000	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000238	            0x85ed	                           test ebp, ebp	       937	objcopy.c	FUNCTION_5	IF_11
0x400023a	     0xf85a2000000	                           jne 0x40002e2	       937	objcopy.c	FUNCTION_5	IF_11
0x4000240	          0x4d85f6	                           test r14, r14	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000243	     0xf8417010000	                            je 0x4000360	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000249	    0x41c746100100	               mov dword [r14 + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000251	          0x4c89f0	                            mov rax, r14	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000254	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x4000255	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x4000256	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x4000258	            0x415d	                                 pop r13	       955	objcopy.c	FUNCTION_5
0x400025a	            0x415e	                                 pop r14	       955	objcopy.c	FUNCTION_5
0x400025c	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x400025d	           0xf1f00	                         nop dword [rax]	       955	objcopy.c	FUNCTION_5
0x4000260	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000264	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000266	          0x4c89e6	                            mov rsi, r12	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000269	      0xe800000000	                          call 0x400026e	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400026e	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000270	            0x758a	                           jne 0x40001fc	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000272	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000279	            0x31c0	                            xor eax, eax	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400027b	            0xebd7	                           jmp 0x4000254	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400027d	           0xf1f00	                         nop dword [rax]	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000280	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000283	            0xa801	                              test al, 1	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000285	            0x740a	                            je 0x4000291	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000287	        0x41f6c502	                            test r13b, 2	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x400028b	     0xf85d6000000	                           jne 0x4000367	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000291	        0x41f6c501	                            test r13b, 1	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000295	            0x7408	                            je 0x400029f	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000297	            0xa802	                              test al, 2	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000299	     0xf85c8000000	                           jne 0x4000367	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x400029f	            0xa804	                              test al, 4	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002a1	     0xf8599000000	                           jne 0x4000340	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002a7	          0x4489ea	                           mov edx, r13d	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002aa	          0x83e20c	                            and edx, 0xc	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002ad	          0x83fa0c	                            cmp edx, 0xc	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002b0	     0xf8494000000	                            je 0x400034a	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002b6	            0xa810	                           test al, 0x10	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002b8	            0x7572	                           jne 0x400032c	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002ba	          0x4489ea	                           mov edx, r13d	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002bd	          0x83e230	                           and edx, 0x30	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002c0	          0x83fa30	                           cmp edx, 0x30	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002c3	            0x746d	                            je 0x4000332	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002c5	          0x4109c5	                            or r13d, eax	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40002c8	          0x4889d8	                            mov rax, rbx	       908	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40002cb	        0x44896b14	            mov dword [rbx + 0x14], r13d	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40002cf	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x40002d0	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x40002d1	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x40002d3	            0x415d	                                 pop r13	       955	objcopy.c	FUNCTION_5
0x40002d5	            0x415e	                                 pop r14	       955	objcopy.c	FUNCTION_5
0x40002d7	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x40002d8	            0x31c0	                            xor eax, eax	       937	objcopy.c	FUNCTION_5	IF_11
0x40002da	            0x85f6	                           test esi, esi	       937	objcopy.c	FUNCTION_5	IF_11
0x40002dc	     0xf8472ffffff	                            je 0x4000254	       937	objcopy.c	FUNCTION_5	IF_11
0x40002e2	      0xbf30000000	                           mov edi, 0x30	       944	objcopy.c	FUNCTION_5	CALL_10
0x40002e7	      0xe800000000	                          call 0x40002ec	       944	objcopy.c	FUNCTION_5	CALL_10
0x40002ec	    0x488b15000000	            mov rdx, qword [0x040002f3] 	       951	objcopy.c	FUNCTION_5
0x40002f3	        0x4c896008	                mov qword [rax + 8], r12	       945	objcopy.c	FUNCTION_5
0x40002f7	    0xc74010000000	               mov dword [rax + 0x10], 0	       946	objcopy.c	FUNCTION_5
0x40002fe	        0x44896814	            mov dword [rax + 0x14], r13d	       947	objcopy.c	FUNCTION_5
0x4000302	    0x48c740180000	               mov qword [rax + 0x18], 0	       948	objcopy.c	FUNCTION_5
0x400030a	    0x48c740200000	               mov qword [rax + 0x20], 0	       949	objcopy.c	FUNCTION_5
0x4000312	    0xc74028000000	               mov dword [rax + 0x28], 0	       950	objcopy.c	FUNCTION_5
0x4000319	          0x488910	                    mov qword [rax], rdx	       951	objcopy.c	FUNCTION_5
0x400031c	    0x488905000000	            mov qword [0x04000323], rax 	       952	objcopy.c	FUNCTION_5
0x4000323	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x4000324	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x4000325	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x4000327	            0x415d	                                 pop r13	       955	objcopy.c	FUNCTION_5
0x4000329	            0x415e	                                 pop r14	       955	objcopy.c	FUNCTION_5
0x400032b	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x400032c	        0x41f6c520	                         test r13b, 0x20	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000330	            0x7488	                            je 0x40002ba	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000332	      0xba05000000	                              mov edx, 5	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000337	      0xbe00000000	                              mov esi, 0	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x400033c	            0xeb33	                           jmp 0x4000371	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x400033e	            0x6690	                                     nop	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000340	        0x41f6c508	                            test r13b, 8	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000344	     0xf845dffffff	                            je 0x40002a7	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x400034a	      0xba05000000	                              mov edx, 5	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400034f	      0xbe00000000	                              mov esi, 0	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000354	            0xeb1b	                           jmp 0x4000371	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000360	            0x31c0	                            xor eax, eax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000362	      0xe9edfeffff	                           jmp 0x4000254	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000367	      0xba05000000	                              mov edx, 5	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x400036c	      0xbe00000000	                              mov esi, 0	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000371	            0x31ff	                            xor edi, edi	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000373	      0xe800000000	                          call 0x4000378	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000378	          0x4c89e6	                            mov rsi, r12	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400037b	          0x4889c7	                            mov rdi, rax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400037e	            0x31c0	                            xor eax, eax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000380	      0xe800000000	                          call 0x4000385	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
strip_usage	ELSE,1:SWITCH,0:WHILE,0:IF,2:DO,0:CALL,14:functions,0:FOR,0	79
0x4000390	            0x4154	                                push r12	       664	objcopy.c	FUNCTION_2
0x4000392	    0x4c8b25000000	            mov r12, qword [0x04000399] 	       665	objcopy.c	FUNCTION_2	CALL_1
0x4000399	      0xba05000000	                              mov edx, 5	       665	objcopy.c	FUNCTION_2	CALL_1
0x400039e	              0x55	                                push rbp	       664	objcopy.c	FUNCTION_2
0x400039f	              0x53	                                push rbx	       664	objcopy.c	FUNCTION_2
0x40003a0	            0x89f5	                            mov ebp, esi	       664	objcopy.c	FUNCTION_2
0x40003a2	          0x4889fb	                            mov rbx, rdi	       664	objcopy.c	FUNCTION_2
0x40003a5	      0xbe00000000	                              mov esi, 0	       665	objcopy.c	FUNCTION_2	CALL_1
0x40003aa	            0x31ff	                            xor edi, edi	       665	objcopy.c	FUNCTION_2	CALL_1
0x40003ac	      0xe800000000	                          call 0x40003b1	       665	objcopy.c	FUNCTION_2	CALL_1
0x40003b1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_22
0x40003b4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40003b7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40003bc	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40003bf	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40003c1	      0xe800000000	                          call 0x40003c6	        97	stdio2.h	CALL_22
0x40003c6	            0x31ff	                            xor edi, edi	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003c8	      0xba05000000	                              mov edx, 5	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003cd	      0xbe00000000	                              mov esi, 0	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003d2	      0xe800000000	                          call 0x40003d7	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003d7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40003dc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40003df	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40003e2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40003e4	      0xe800000000	                          call 0x40003e9	        97	stdio2.h	CALL_22
0x40003e9	            0x31ff	                            xor edi, edi	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003eb	      0xba05000000	                              mov edx, 5	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003f0	      0xbe00000000	                              mov esi, 0	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003f5	      0xe800000000	                          call 0x40003fa	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003fa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40003ff	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000402	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000405	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000407	      0xe800000000	                          call 0x400040c	        97	stdio2.h	CALL_22
0x400040c	            0x31ff	                            xor edi, edi	       668	objcopy.c	FUNCTION_2	CALL_4
0x400040e	      0xba05000000	                              mov edx, 5	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000413	      0xbe00000000	                              mov esi, 0	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000418	      0xe800000000	                          call 0x400041d	       668	objcopy.c	FUNCTION_2	CALL_4
0x400041d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000422	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000425	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000428	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400042a	      0xe800000000	                          call 0x400042f	        97	stdio2.h	CALL_22
0x400042f	            0x31ff	                            xor edi, edi	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000431	      0xba05000000	                              mov edx, 5	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000436	      0xbe00000000	                              mov esi, 0	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x400043b	      0xe800000000	                          call 0x4000440	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000440	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000445	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000448	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400044b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400044d	      0xe800000000	                          call 0x4000452	        97	stdio2.h	CALL_22
0x4000452	            0x31ff	                            xor edi, edi	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000454	      0xba05000000	                              mov edx, 5	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000459	      0xbe00000000	                              mov esi, 0	       686	objcopy.c	FUNCTION_2	CALL_9
0x400045e	      0xe800000000	                          call 0x4000463	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000463	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000468	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x400046b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400046e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000470	      0xe800000000	                          call 0x4000475	        97	stdio2.h	CALL_22
0x4000475	    0x488b3d000000	            mov rdi, qword [0x0400047c] 	       709	objcopy.c	FUNCTION_2	CALL_12
0x400047c	          0x4889de	                            mov rsi, rbx	       709	objcopy.c	FUNCTION_2	CALL_12
0x400047f	      0xe800000000	                          call 0x4000484	       709	objcopy.c	FUNCTION_2	CALL_12
0x4000484	            0x85ed	                           test ebp, ebp	       710	objcopy.c	FUNCTION_2	IF_2
0x4000486	            0x7407	                            je 0x400048f	       710	objcopy.c	FUNCTION_2	IF_2
0x4000488	            0x89ef	                            mov edi, ebp	       712	objcopy.c	FUNCTION_2	CALL_14
0x400048a	      0xe800000000	                          call 0x400048f	       712	objcopy.c	FUNCTION_2	CALL_14
0x400048f	            0x31ff	                            xor edi, edi	       711	objcopy.c	FUNCTION_2	CALL_13
0x4000491	      0xba05000000	                              mov edx, 5	       711	objcopy.c	FUNCTION_2	CALL_13
0x4000496	      0xbe00000000	                              mov esi, 0	       711	objcopy.c	FUNCTION_2	CALL_13
0x400049b	      0xe800000000	                          call 0x40004a0	       711	objcopy.c	FUNCTION_2	CALL_13
0x40004a0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_22
0x40004a5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40004a8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40004ad	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40004b0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40004b2	      0xe800000000	                          call 0x40004b7	        97	stdio2.h	CALL_22
0x40004b7	            0xebcf	                           jmp 0x4000488	        97	stdio2.h	CALL_22
compare_section_lma	ELSE,3:SWITCH,0:WHILE,0:IF,7:DO,0:CALL,0:functions,0:FOR,0	30
0x4000050	          0x488b3f	                    mov rdi, qword [rdi]	      4165	objcopy.c	FUNCTION_53
0x4000053	          0x488b0e	                    mov rcx, qword [rsi]	      4166	objcopy.c	FUNCTION_53
0x4000056	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000059	          0x8b4120	            mov eax, dword [rcx + 0x20] 	      4166	objcopy.c	FUNCTION_53
0x400005c	    0x81e202010000	                          and edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000062	      0x2502010000	                          and eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000067	    0x81fa02010000	                          cmp edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006d	            0x7441	                            je 0x40000b0	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006f	      0x3d02010000	                          cmp eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000074	            0x742a	                            je 0x40000a0	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000076	        0x488b7130	            mov rsi, qword [rcx + 0x30] 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007a	        0x48397730	            cmp qword [rdi + 0x30], rsi 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007e	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4000083	            0x7720	                            ja 0x40000a5	      4182	objcopy.c	FUNCTION_53	IF_4
0x4000085	            0x7219	                            jb 0x40000a0	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4000087	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008b	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008f	            0x19d2	                            sbb edx, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000091	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000095	           0xf46c2	                         cmovbe eax, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000098	              0xc3	                                     ret	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000099	     0xf1f80000000	                         nop dword [rax]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x40000a0	      0xb8ffffffff	                     mov eax, 0xffffffff	      4172	objcopy.c	FUNCTION_53	IF_1	IF_2
0x40000a5	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
0x40000a7	    0x660f1f840000	                    nop word [rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000b0	            0x89c2	                            mov edx, eax	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b2	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b7	    0x81fa02010000	                          cmp edx, 0x102	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bd	            0x74b7	                            je 0x4000076	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bf	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
mark_symbols_used_in_relocations	ELSE,0:SWITCH,0:WHILE,0:IF,7:DO,0:CALL,7:functions,0:FOR,1	72
0x40005f0	      0x48837e6800	               cmp qword [rsi + 0x68], 0	      4210	objcopy.c	FUNCTION_54	IF_1
0x40005f5	            0x742d	                            je 0x4000624	      4210	objcopy.c	FUNCTION_54	IF_1
0x40005f7	            0x4155	                                push r13	      4203	objcopy.c	FUNCTION_54
0x40005f9	            0x4154	                                push r12	      4203	objcopy.c	FUNCTION_54
0x40005fb	          0x4989d4	                            mov r12, rdx	      4203	objcopy.c	FUNCTION_54
0x40005fe	              0x55	                                push rbp	      4203	objcopy.c	FUNCTION_54
0x40005ff	              0x53	                                push rbx	      4203	objcopy.c	FUNCTION_54
0x4000600	          0x4889fd	                            mov rbp, rdi	      4203	objcopy.c	FUNCTION_54
0x4000603	          0x4889f3	                            mov rbx, rsi	      4203	objcopy.c	FUNCTION_54
0x4000606	        0x4883ec08	                              sub rsp, 8	      4203	objcopy.c	FUNCTION_54
0x400060a	      0xe800000000	                          call 0x400060f	      4213	objcopy.c	FUNCTION_54	CALL_1
0x400060f	          0x4885c0	                           test rax, rax	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000612	     0xf88a8000000	                            js 0x40006c0	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000618	            0x7516	                           jne 0x4000630	      4222	objcopy.c	FUNCTION_54	IF_4
0x400061a	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x400061e	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x400061f	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x4000620	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x4000622	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x4000624	            0xf3c3	                                     ret	      4245	objcopy.c	FUNCTION_54
0x4000626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4245	objcopy.c	FUNCTION_54
0x4000630	          0x4889c7	                            mov rdi, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000633	      0xe800000000	                          call 0x4000638	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000638	          0x4c89e1	                            mov rcx, r12	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400063b	          0x4889c2	                            mov rdx, rax	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400063e	          0x4889de	                            mov rsi, rbx	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000641	          0x4889ef	                            mov rdi, rbp	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000644	          0x4989c5	                            mov r13, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000647	      0xe800000000	                          call 0x400064c	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400064c	          0x4885c0	                           test rax, rax	      4227	objcopy.c	FUNCTION_54	IF_5
0x400064f	     0xf8888000000	                            js 0x40006dd	      4227	objcopy.c	FUNCTION_54	IF_5
0x4000655	            0x7450	                            je 0x40006a7	      4232	objcopy.c	FUNCTION_54	FOR_1
0x4000657	    0x488b35000000	            mov rsi, qword [0x0400065e] 	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400065e	    0x488b3d000000	            mov rdi, qword [0x04000665] 	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000665	      0x498d4cc500	                  lea rcx, [r13 + rax*8]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400066a	    0x4c8b05000000	              mov r8, qword [0x04000671]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000671	          0x4c89ea	                            mov rdx, r13	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000674	         0xf1f4000	                         nop dword [rax]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000678	          0x488b02	                    mov rax, qword [rdx]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400067b	          0x488b00	                    mov rax, qword [rax]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400067e	          0x4885c0	                           test rax, rax	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000681	            0x741b	                            je 0x400069e	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000683	          0x488b00	                    mov rax, qword [rax]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000686	          0x4885c0	                           test rax, rax	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000689	            0x7413	                            je 0x400069e	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400068b	          0x4839f0	                            cmp rax, rsi	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400068e	            0x740e	                            je 0x400069e	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000690	          0x4839f8	                            cmp rax, rdi	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000693	            0x7409	                            je 0x400069e	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000695	          0x4c39c0	                             cmp rax, r8	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000698	            0x7404	                            je 0x400069e	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400069a	        0x83481820	             or dword [rax + 0x18], 0x20	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400069e	        0x4883c208	                              add rdx, 8	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40006a2	          0x4839ca	                            cmp rdx, rcx	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40006a5	            0x75d1	                           jne 0x4000678	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40006a7	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x40006ab	          0x4c89ef	                            mov rdi, r13	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40006ae	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x40006af	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x40006b0	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x40006b2	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x40006b4	      0xe900000000	                           jmp 0x40006b9	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40006b9	     0xf1f80000000	                         nop dword [rax]	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40006c0	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006c4	            0x750e	                           jne 0x40006d4	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006c6	      0xe800000000	                          call 0x40006cb	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006cb	          0x83f805	                              cmp eax, 5	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006ce	     0xf8446ffffff	                            je 0x400061a	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006d4	        0x488b7d00	                    mov rdi, qword [rbp]	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x40006d8	      0xe800000000	                          call 0x40006dd	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x40006dd	        0x488b7d00	                    mov rdi, qword [rbp]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x40006e1	      0xe800000000	                          call 0x40006e6	      4228	objcopy.c	FUNCTION_54	CALL_6
add_specific_symbols	ELSE,0:SWITCH,1:WHILE,0:IF,9:DO,0:CALL,14:functions,0:FOR,5	199
0x40006f0	            0x4157	                                push r15	      1038	objcopy.c	FUNCTION_14
0x40006f2	            0x4156	                                push r14	      1038	objcopy.c	FUNCTION_14
0x40006f4	            0x4155	                                push r13	      1038	objcopy.c	FUNCTION_14
0x40006f6	            0x4154	                                push r12	      1038	objcopy.c	FUNCTION_14
0x40006f8	          0x4989f4	                            mov r12, rsi	      1038	objcopy.c	FUNCTION_14
0x40006fb	              0x55	                                push rbp	      1038	objcopy.c	FUNCTION_14
0x40006fc	              0x53	                                push rbx	      1038	objcopy.c	FUNCTION_14
0x40006fd	          0x4889fd	                            mov rbp, rdi	      1038	objcopy.c	FUNCTION_14
0x4000700	        0x4883ec08	                              sub rsp, 8	      1038	objcopy.c	FUNCTION_14
0x4000704	      0xe800000000	                          call 0x4000709	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000709	          0x4885c0	                           test rax, rax	      1046	objcopy.c	FUNCTION_14	IF_1
0x400070c	            0x7519	                           jne 0x4000727	      1046	objcopy.c	FUNCTION_14	IF_1
0x400070e	    0xc70500000000	               mov dword [0x04000718], 1	      1048	objcopy.c	FUNCTION_14	IF_1
0x4000718	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x400071c	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x400071d	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x400071e	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x4000720	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x4000722	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x4000724	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000726	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000727	        0x488d7802	                      lea rdi, [rax + 2]	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400072b	          0x4889c3	                            mov rbx, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400072e	      0xe800000000	                          call 0x4000733	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000733	      0xbe00000000	                              mov esi, 0	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000738	          0x4889ef	                            mov rdi, rbp	      1053	objcopy.c	FUNCTION_14	CALL_3
0x400073b	          0x4989c6	                            mov r14, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400073e	      0xe800000000	                          call 0x4000743	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000743	          0x4885c0	                           test rax, rax	      1054	objcopy.c	FUNCTION_14	IF_2
0x4000746	          0x4989c5	                            mov r13, rax	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000749	     0xf8418020000	                            je 0x4000967	      1054	objcopy.c	FUNCTION_14	IF_2
0x400074f	          0x4889c1	                            mov rcx, rax	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000752	          0x4889da	                            mov rdx, rbx	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000755	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_90	CALL_9
0x400075a	          0x4c89f7	                            mov rdi, r14	       295	stdio2.h	FUNCTION_90	CALL_9
0x400075d	      0xe800000000	                          call 0x4000762	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000762	          0x4885c0	                           test rax, rax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000765	     0xf84de010000	                            je 0x4000949	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400076b	          0x4c89ef	                            mov rdi, r13	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400076e	      0xe800000000	                          call 0x4000773	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000773	            0x85c0	                           test eax, eax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000775	     0xf85ce010000	                           jne 0x4000949	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400077b	          0x4c89ef	                            mov rdi, r13	      1060	objcopy.c	FUNCTION_14	CALL_11
0x400077e	    0x41bd01000000	                             mov r13d, 1	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000784	      0xe800000000	                          call 0x4000789	      1060	objcopy.c	FUNCTION_14	CALL_11
0x4000789	      0x41c6041e0a	               mov byte [r14 + rbx], 0xa	      1061	objcopy.c	FUNCTION_14
0x400078e	    0x41c6441e0100	             mov byte [r14 + rbx + 1], 0	      1062	objcopy.c	FUNCTION_14
0x4000794	        0x410fb606	                   movzx eax, byte [r14]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000798	            0x84c0	                             test al, al	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400079a	     0xf8478ffffff	                            je 0x4000718	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40007a0	          0x4c89f3	                            mov rbx, r14	      1038	objcopy.c	FUNCTION_14
0x40007a3	            0xeb19	                           jmp 0x40007be	      1038	objcopy.c	FUNCTION_14
0x40007a5	           0xf1f00	                         nop dword [rax]	      1038	objcopy.c	FUNCTION_14
0x40007a8	            0x3c0d	                             cmp al, 0xd	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007aa	     0xf84b8000000	                            je 0x4000868	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b0	            0x3c23	                            cmp al, 0x23	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b2	            0x7503	                           jne 0x40007b7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b4	          0xc60300	                       mov byte [rbx], 0	      1101	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b7	        0x4883c301	                              add rbx, 1	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x40007bb	           0xfb603	                   movzx eax, byte [rbx]	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x40007be	            0x3c0a	                             cmp al, 0xa	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007c0	     0xf84ba000000	                            je 0x4000880	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007c6	            0x7fe0	                            jg 0x40007a8	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007c8	            0x84c0	                             test al, al	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007ca	            0x75eb	                           jne 0x40007b7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007cc	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d0	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d2	            0x740c	                            je 0x40007e0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d4	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d6	            0x7518	                           jne 0x40007f0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d8	     0xf1f84000000	                   nop dword [rax + rax]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007e0	        0x4983c601	                              add r14, 1	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007e4	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007e8	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007ea	            0x74f4	                            je 0x40007e0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007ec	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007ee	            0x74f0	                            je 0x40007e0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007f0	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x40007f2	     0xf8449010000	                            je 0x4000941	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x40007f8	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x40007fa	     0xf8438010000	                            je 0x4000938	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000800	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000802	     0xf8430010000	                            je 0x4000938	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000808	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400080a	     0xf8428010000	                            je 0x4000938	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000810	          0x4d89f7	                            mov r15, r14	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000813	       0xf1f440000	                   nop dword [rax + rax]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000818	        0x4983c701	                              add r15, 1	      1120	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400081c	        0x410fb607	                   movzx eax, byte [r15]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000820	            0x3c20	                            cmp al, 0x20	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000822	            0x7474	                            je 0x4000898	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000824	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000826	            0x7470	                            je 0x4000898	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000828	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400082a	            0x7408	                            je 0x4000834	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400082c	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400082e	            0x7404	                            je 0x4000834	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000830	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000832	            0x75e4	                           jne 0x4000818	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000834	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000837	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400083b	     0xf82bf000000	                            jb 0x4000900	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000841	         0xfb64301	               movzx eax, byte [rbx + 1]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000845	        0x4183c501	                             add r13d, 1	      1143	objcopy.c	FUNCTION_14	FOR_1
0x4000849	        0x4c8d7301	                      lea r14, [rbx + 1]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400084d	            0x84c0	                             test al, al	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400084f	     0xf854bffffff	                           jne 0x40007a0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000855	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x4000859	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x400085a	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x400085b	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x400085d	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x400085f	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x4000861	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000863	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000864	         0xf1f4000	                         nop dword [rax]	      1145	objcopy.c	FUNCTION_14
0x4000868	            0x31c0	                            xor eax, eax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400086a	        0x807b010a	                 cmp byte [rbx + 1], 0xa	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400086e	          0xc60300	                       mov byte [rbx], 0	      1086	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000871	           0xf94c0	                                 sete al	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000874	          0x4801c3	                            add rbx, rax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000877	      0xe950ffffff	                           jmp 0x40007cc	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400087c	         0xf1f4000	                         nop dword [rax]	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000880	            0x31c0	                            xor eax, eax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000882	        0x807b010d	                 cmp byte [rbx + 1], 0xd	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000886	          0xc60300	                       mov byte [rbx], 0	      1078	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000889	           0xf94c0	                                 sete al	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x400088c	          0x4801c3	                            add rbx, rax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x400088f	      0xe938ffffff	                           jmp 0x40007cc	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000894	         0xf1f4000	                         nop dword [rax]	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000898	            0x3c0a	                             cmp al, 0xa	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400089a	            0x7498	                            je 0x4000834	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400089c	            0x3c0d	                             cmp al, 0xd	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400089e	            0x7494	                            je 0x4000834	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40008a0	            0x84c0	                             test al, al	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40008a2	            0x7490	                            je 0x4000834	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40008a4	      0x410fb65701	               movzx edx, byte [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008a9	        0x498d4701	                      lea rax, [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008ad	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008b0	            0x7512	                           jne 0x40008c4	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008b2	    0x660f1f440000	                    nop word [rax + rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008b8	        0x4883c001	                              add rax, 1	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008bc	           0xfb610	                   movzx edx, byte [rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008bf	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c2	            0x74f4	                            je 0x40008b8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c4	          0x80fa09	                               cmp dl, 9	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c7	            0x74ef	                            je 0x40008b8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c9	          0x80fa0d	                             cmp dl, 0xd	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40008cc	            0x7652	                           jbe 0x4000920	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40008ce	            0x31ff	                            xor edi, edi	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008d0	      0xba05000000	                              mov edx, 5	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008d5	      0xbe00000000	                              mov esi, 0	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008da	      0xe800000000	                          call 0x40008df	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008df	          0x4489ea	                           mov edx, r13d	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008e2	          0x4889c7	                            mov rdi, rax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008e5	          0x4889ee	                            mov rsi, rbp	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008e8	            0x31c0	                            xor eax, eax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008ea	      0xe800000000	                          call 0x40008ef	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008ef	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x40008f2	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x40008f6	     0xf8345ffffff	                           jae 0x4000841	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x40008fc	         0xf1f4000	                         nop dword [rax]	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000900	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000905	          0x4c89f6	                            mov rsi, r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000908	          0x4c89e7	                            mov rdi, r12	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400090b	      0xe800000000	                          call 0x4000910	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000910	          0x4c8930	                    mov qword [rax], r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000913	      0xe929ffffff	                           jmp 0x4000841	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000918	     0xf1f84000000	                   nop dword [rax + rax]	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000920	      0xb801240000	                         mov eax, 0x2401	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000925	        0x480fa3d0	                             bt rax, rdx	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000929	     0xf8205ffffff	                            jb 0x4000834	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400092f	            0xeb9d	                           jmp 0x40008ce	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000931	     0xf1f80000000	                         nop dword [rax]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000938	        0x41c60600	                       mov byte [r14], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400093c	      0xe900ffffff	                           jmp 0x4000841	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4000941	          0x4d89f7	                            mov r15, r14	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000944	      0xe95bffffff	                           jmp 0x40008a4	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000949	      0xbe00000000	                              mov esi, 0	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400094e	            0x31ff	                            xor edi, edi	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000950	      0xba05000000	                              mov edx, 5	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000955	      0xe800000000	                          call 0x400095a	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400095a	          0x4889ee	                            mov rsi, rbp	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400095d	          0x4889c7	                            mov rdi, rax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000960	            0x31c0	                            xor eax, eax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000962	      0xe800000000	                          call 0x4000967	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000967	      0xe800000000	                          call 0x400096c	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400096c	            0x8b38	                    mov edi, dword [rax]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400096e	      0xe800000000	                          call 0x4000973	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000973	      0xba05000000	                              mov edx, 5	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000978	          0x4889c3	                            mov rbx, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400097b	      0xbe00000000	                              mov esi, 0	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000980	            0x31ff	                            xor edi, edi	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000982	      0xe800000000	                          call 0x4000987	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000987	          0x4889da	                            mov rdx, rbx	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400098a	          0x4889c7	                            mov rdi, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400098d	          0x4889ee	                            mov rsi, rbp	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000990	            0x31c0	                            xor eax, eax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000992	      0xe800000000	                          call 0x4000997	      1055	objcopy.c	FUNCTION_14	CALL_6
get_sections	ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,0:functions,0:FOR,0	4
0x4000040	          0x488b02	                    mov rax, qword [rdx]	      4149	objcopy.c	FUNCTION_52
0x4000043	          0x488930	                    mov qword [rax], rsi	      4149	objcopy.c	FUNCTION_52
0x4000046	        0x48830208	                      add qword [rdx], 8	      4150	objcopy.c	FUNCTION_52
0x400004a	              0xc3	                                     ret	      4150	objcopy.c	FUNCTION_52
main	ELSE,1:SWITCH,0:WHILE,0:IF,4:DO,0:CALL,17:functions,0:FOR,0	2685
0x4000040	          0x488b02	                    mov rax, qword [rdx]	      4149	objcopy.c	FUNCTION_52
0x4000043	          0x488930	                    mov qword [rax], rsi	      4149	objcopy.c	FUNCTION_52
0x4000046	        0x48830208	                      add qword [rdx], 8	      4150	objcopy.c	FUNCTION_52
0x400004a	              0xc3	                                     ret	      4150	objcopy.c	FUNCTION_52
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	      4150	objcopy.c	FUNCTION_52
0x4000050	          0x488b3f	                    mov rdi, qword [rdi]	      4165	objcopy.c	FUNCTION_53
0x4000053	          0x488b0e	                    mov rcx, qword [rsi]	      4166	objcopy.c	FUNCTION_53
0x4000056	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000059	          0x8b4120	            mov eax, dword [rcx + 0x20] 	      4166	objcopy.c	FUNCTION_53
0x400005c	    0x81e202010000	                          and edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000062	      0x2502010000	                          and eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000067	    0x81fa02010000	                          cmp edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006d	            0x7441	                            je 0x40000b0	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006f	      0x3d02010000	                          cmp eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000074	            0x742a	                            je 0x40000a0	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000076	        0x488b7130	            mov rsi, qword [rcx + 0x30] 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007a	        0x48397730	            cmp qword [rdi + 0x30], rsi 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007e	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4000083	            0x7720	                            ja 0x40000a5	      4182	objcopy.c	FUNCTION_53	IF_4
0x4000085	            0x7219	                            jb 0x40000a0	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4000087	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008b	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008f	            0x19d2	                            sbb edx, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000091	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000095	           0xf46c2	                         cmovbe eax, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000098	              0xc3	                                     ret	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000099	     0xf1f80000000	                         nop dword [rax]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x40000a0	      0xb8ffffffff	                     mov eax, 0xffffffff	      4172	objcopy.c	FUNCTION_53	IF_1	IF_2
0x40000a5	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
0x40000a7	    0x660f1f840000	                    nop word [rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000b0	            0x89c2	                            mov edx, eax	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b2	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b7	    0x81fa02010000	                          cmp edx, 0x102	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bd	            0x74b7	                            je 0x4000076	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bf	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
0x40000c1	       0xf1f440000	                   nop dword [rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000d0	        0x4883ec08	                              sub rsp, 8	       961	objcopy.c	FUNCTION_6
0x40000d4	          0x488b36	                    mov rsi, qword [rsi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000d7	          0x488b3f	                    mov rdi, qword [rdi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000da	      0xe800000000	                          call 0x40000df	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000df	            0x85c0	                           test eax, eax	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e1	           0xf94c0	                                 sete al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e4	        0x4883c408	                              add rsp, 8	       965	objcopy.c	FUNCTION_6
0x40000e8	           0xfb6c0	                           movzx eax, al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000eb	              0xc3	                                     ret	       965	objcopy.c	FUNCTION_6
0x40000ec	         0xf1f4000	                         nop dword [rax]	       965	objcopy.c	FUNCTION_6
0x40000f0	        0x4883ec08	                              sub rsp, 8	       989	objcopy.c	FUNCTION_9
0x40000f4	      0xe800000000	                          call 0x40000f9	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000f9	            0x85c0	                           test eax, eax	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fb	           0xf94c0	                                 sete al	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fe	        0x4883c408	                              add rsp, 8	       991	objcopy.c	FUNCTION_9
0x4000102	           0xfb6c0	                           movzx eax, al	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000105	              0xc3	                                     ret	       991	objcopy.c	FUNCTION_9
0x4000106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       991	objcopy.c	FUNCTION_9
0x4000110	        0x488d5704	                      lea rdx, [rdi + 4]	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000114	          0xc60770	                    mov byte [rdi], 0x70	      4592	objcopy.c	FUNCTION_59
0x4000117	        0xc6470165	                mov byte [rdi + 1], 0x65	      4593	objcopy.c	FUNCTION_59
0x400011b	        0xc6470269	                mov byte [rdi + 2], 0x69	      4594	objcopy.c	FUNCTION_59
0x400011f	          0x4889f8	                            mov rax, rdi	      4591	objcopy.c	FUNCTION_59
0x4000122	      0xb905000000	                              mov ecx, 5	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000127	      0xbf00000000	                              mov edi, 0	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012c	          0x4889d6	                            mov rsi, rdx	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000131	            0x741b	                            je 0x400014e	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000133	              0x53	                                push rbx	      4591	objcopy.c	FUNCTION_59
0x4000134	      0xbe00000000	                              mov esi, 0	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000139	          0x4889d7	                            mov rdi, rdx	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013c	          0x4889c3	                            mov rbx, rax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013f	      0xe800000000	                          call 0x4000144	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000144	            0x85c0	                           test eax, eax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000146	            0x7504	                           jne 0x400014c	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000148	        0xc643072d	                mov byte [rbx + 7], 0x2d	      4606	objcopy.c	FUNCTION_59	ELSE_1	IF_2
0x400014c	              0x5b	                                 pop rbx	      4608	objcopy.c	FUNCTION_59
0x400014d	              0xc3	                                     ret	      4608	objcopy.c	FUNCTION_59
0x400014e	        0xc6400533	                mov byte [rax + 5], 0x33	      4599	objcopy.c	FUNCTION_59	IF_1
0x4000152	        0xc6400638	                mov byte [rax + 6], 0x38	      4600	objcopy.c	FUNCTION_59	IF_1
0x4000156	        0xc6400736	                mov byte [rax + 7], 0x36	      4601	objcopy.c	FUNCTION_59	IF_1
0x400015a	              0xc3	                                     ret	      4601	objcopy.c	FUNCTION_59	IF_1
0x400015b	       0xf1f440000	                   nop dword [rax + rax]	      4601	objcopy.c	FUNCTION_59	IF_1
0x4000160	          0x488b3f	                    mov rdi, qword [rdi]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000163	      0xe900000000	                           jmp 0x4000168	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000168	     0xf1f84000000	                   nop dword [rax + rax]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000170	              0x53	                                push rbx	      1152	objcopy.c	FUNCTION_15
0x4000171	          0x488b3f	                    mov rdi, qword [rdi]	      1155	objcopy.c	FUNCTION_15
0x4000174	          0x4889f3	                            mov rbx, rsi	      1152	objcopy.c	FUNCTION_15
0x4000177	          0x803f21	                    cmp byte [rdi], 0x21	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017a	            0x7424	                            je 0x40001a0	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017c	          0x488b36	                    mov rsi, qword [rsi]	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400017f	            0x31d2	                            xor edx, edx	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000181	      0xe800000000	                          call 0x4000186	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000186	            0x85c0	                           test eax, eax	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000188	            0x7507	                           jne 0x4000191	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400018a	    0xc74308010000	                  mov dword [rbx + 8], 1	      1161	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000191	      0xb801000000	                              mov eax, 1	      1163	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000196	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x4000197	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
0x4000198	     0xf1f84000000	                   nop dword [rax + rax]	      1178	objcopy.c	FUNCTION_15
0x40001a0	          0x488b36	                    mov rsi, qword [rsi]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a3	        0x4883c701	                              add rdi, 1	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a7	            0x31d2	                            xor edx, edx	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a9	      0xe800000000	                          call 0x40001ae	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001ae	            0x85c0	                           test eax, eax	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b0	            0x75df	                           jne 0x4000191	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b2	    0xc74308000000	                  mov dword [rbx + 8], 0	      1170	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x40001b9	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x40001ba	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
0x40001bb	       0xf1f440000	                   nop dword [rax + rax]	      1178	objcopy.c	FUNCTION_15
0x40001c0	            0x4156	                                push r14	       876	objcopy.c	FUNCTION_5
0x40001c2	            0x4155	                                push r13	       876	objcopy.c	FUNCTION_5
0x40001c4	          0x4189d5	                           mov r13d, edx	       876	objcopy.c	FUNCTION_5
0x40001c7	            0x4154	                                push r12	       876	objcopy.c	FUNCTION_5
0x40001c9	              0x55	                                push rbp	       876	objcopy.c	FUNCTION_5
0x40001ca	          0x4989fc	                            mov r12, rdi	       876	objcopy.c	FUNCTION_5
0x40001cd	              0x53	                                push rbx	       876	objcopy.c	FUNCTION_5
0x40001ce	    0x488b1d000000	            mov rbx, qword [0x040001d5] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001d5	            0x89f5	                            mov ebp, esi	       876	objcopy.c	FUNCTION_5
0x40001d7	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001da	     0xf84f8000000	                            je 0x40002d8	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e0	          0x4531f6	                          xor r14d, r14d	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e3	            0xeb1f	                           jmp 0x4000204	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e5	           0xf1f00	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001e8	        0x488b7b08	                mov rdi, qword [rbx + 8]	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001ec	          0x4c89e6	                            mov rsi, r12	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001ef	      0xe800000000	                          call 0x40001f4	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001f4	            0x85c0	                           test eax, eax	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001f6	     0xf8484000000	                            je 0x4000280	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x40001fc	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x40001ff	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000202	            0x7434	                            je 0x4000238	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000204	            0x85ed	                           test ebp, ebp	       883	objcopy.c	FUNCTION_5	FOR_1	IF_1
0x4000206	            0x75e0	                           jne 0x40001e8	       883	objcopy.c	FUNCTION_5	FOR_1	IF_1
0x4000208	        0x44856b14	          test dword [rbx + 0x14], r13d 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x400020c	            0x74ee	                            je 0x40001fc	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x400020e	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000212	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000215	            0x7449	                            je 0x4000260	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000217	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000219	          0x4c89e6	                            mov rsi, r12	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400021c	      0xe800000000	                          call 0x4000221	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000221	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000223	            0x75d7	                           jne 0x40001fc	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000225	          0x4d85f6	                           test r14, r14	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000228	        0x4c0f44f3	                          cmove r14, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400022c	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x400022f	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000232	            0x75d0	                           jne 0x4000204	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000234	         0xf1f4000	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000238	            0x85ed	                           test ebp, ebp	       937	objcopy.c	FUNCTION_5	IF_11
0x400023a	     0xf85a2000000	                           jne 0x40002e2	       937	objcopy.c	FUNCTION_5	IF_11
0x4000240	          0x4d85f6	                           test r14, r14	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000243	     0xf8417010000	                            je 0x4000360	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000249	    0x41c746100100	               mov dword [r14 + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000251	          0x4c89f0	                            mov rax, r14	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000254	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x4000255	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x4000256	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x4000258	            0x415d	                                 pop r13	       955	objcopy.c	FUNCTION_5
0x400025a	            0x415e	                                 pop r14	       955	objcopy.c	FUNCTION_5
0x400025c	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x400025d	           0xf1f00	                         nop dword [rax]	       955	objcopy.c	FUNCTION_5
0x4000260	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000264	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000266	          0x4c89e6	                            mov rsi, r12	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000269	      0xe800000000	                          call 0x400026e	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400026e	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000270	            0x758a	                           jne 0x40001fc	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000272	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000279	            0x31c0	                            xor eax, eax	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400027b	            0xebd7	                           jmp 0x4000254	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400027d	           0xf1f00	                         nop dword [rax]	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000280	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000283	            0xa801	                              test al, 1	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000285	            0x740a	                            je 0x4000291	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000287	        0x41f6c502	                            test r13b, 2	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x400028b	     0xf85d6000000	                           jne 0x4000367	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000291	        0x41f6c501	                            test r13b, 1	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000295	            0x7408	                            je 0x400029f	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000297	            0xa802	                              test al, 2	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000299	     0xf85c8000000	                           jne 0x4000367	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x400029f	            0xa804	                              test al, 4	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002a1	     0xf8599000000	                           jne 0x4000340	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002a7	          0x4489ea	                           mov edx, r13d	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002aa	          0x83e20c	                            and edx, 0xc	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002ad	          0x83fa0c	                            cmp edx, 0xc	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002b0	     0xf8494000000	                            je 0x400034a	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x40002b6	            0xa810	                           test al, 0x10	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002b8	            0x7572	                           jne 0x400032c	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002ba	          0x4489ea	                           mov edx, r13d	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002bd	          0x83e230	                           and edx, 0x30	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002c0	          0x83fa30	                           cmp edx, 0x30	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002c3	            0x746d	                            je 0x4000332	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x40002c5	          0x4109c5	                            or r13d, eax	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40002c8	          0x4889d8	                            mov rax, rbx	       908	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40002cb	        0x44896b14	            mov dword [rbx + 0x14], r13d	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40002cf	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x40002d0	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x40002d1	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x40002d3	            0x415d	                                 pop r13	       955	objcopy.c	FUNCTION_5
0x40002d5	            0x415e	                                 pop r14	       955	objcopy.c	FUNCTION_5
0x40002d7	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x40002d8	            0x31c0	                            xor eax, eax	       937	objcopy.c	FUNCTION_5	IF_11
0x40002da	            0x85f6	                           test esi, esi	       937	objcopy.c	FUNCTION_5	IF_11
0x40002dc	     0xf8472ffffff	                            je 0x4000254	       937	objcopy.c	FUNCTION_5	IF_11
0x40002e2	      0xbf30000000	                           mov edi, 0x30	       944	objcopy.c	FUNCTION_5	CALL_10
0x40002e7	      0xe800000000	                          call 0x40002ec	       944	objcopy.c	FUNCTION_5	CALL_10
0x40002ec	    0x488b15000000	            mov rdx, qword [0x040002f3] 	       951	objcopy.c	FUNCTION_5
0x40002f3	        0x4c896008	                mov qword [rax + 8], r12	       945	objcopy.c	FUNCTION_5
0x40002f7	    0xc74010000000	               mov dword [rax + 0x10], 0	       946	objcopy.c	FUNCTION_5
0x40002fe	        0x44896814	            mov dword [rax + 0x14], r13d	       947	objcopy.c	FUNCTION_5
0x4000302	    0x48c740180000	               mov qword [rax + 0x18], 0	       948	objcopy.c	FUNCTION_5
0x400030a	    0x48c740200000	               mov qword [rax + 0x20], 0	       949	objcopy.c	FUNCTION_5
0x4000312	    0xc74028000000	               mov dword [rax + 0x28], 0	       950	objcopy.c	FUNCTION_5
0x4000319	          0x488910	                    mov qword [rax], rdx	       951	objcopy.c	FUNCTION_5
0x400031c	    0x488905000000	            mov qword [0x04000323], rax 	       952	objcopy.c	FUNCTION_5
0x4000323	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x4000324	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x4000325	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x4000327	            0x415d	                                 pop r13	       955	objcopy.c	FUNCTION_5
0x4000329	            0x415e	                                 pop r14	       955	objcopy.c	FUNCTION_5
0x400032b	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x400032c	        0x41f6c520	                         test r13b, 0x20	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000330	            0x7488	                            je 0x40002ba	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000332	      0xba05000000	                              mov edx, 5	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000337	      0xbe00000000	                              mov esi, 0	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x400033c	            0xeb33	                           jmp 0x4000371	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x400033e	            0x6690	                                     nop	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000340	        0x41f6c508	                            test r13b, 8	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000344	     0xf845dffffff	                            je 0x40002a7	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x400034a	      0xba05000000	                              mov edx, 5	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400034f	      0xbe00000000	                              mov esi, 0	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000354	            0xeb1b	                           jmp 0x4000371	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000360	            0x31c0	                            xor eax, eax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000362	      0xe9edfeffff	                           jmp 0x4000254	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000367	      0xba05000000	                              mov edx, 5	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x400036c	      0xbe00000000	                              mov esi, 0	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000371	            0x31ff	                            xor edi, edi	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000373	      0xe800000000	                          call 0x4000378	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000378	          0x4c89e6	                            mov rsi, r12	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400037b	          0x4889c7	                            mov rdi, rax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x400037e	            0x31c0	                            xor eax, eax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000380	      0xe800000000	                          call 0x4000385	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000385	              0x90	                                     nop	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000386	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000390	            0x4154	                                push r12	       664	objcopy.c	FUNCTION_2
0x4000392	    0x4c8b25000000	            mov r12, qword [0x04000399] 	       665	objcopy.c	FUNCTION_2	CALL_1
0x4000399	      0xba05000000	                              mov edx, 5	       665	objcopy.c	FUNCTION_2	CALL_1
0x400039e	              0x55	                                push rbp	       664	objcopy.c	FUNCTION_2
0x400039f	              0x53	                                push rbx	       664	objcopy.c	FUNCTION_2
0x40003a0	            0x89f5	                            mov ebp, esi	       664	objcopy.c	FUNCTION_2
0x40003a2	          0x4889fb	                            mov rbx, rdi	       664	objcopy.c	FUNCTION_2
0x40003a5	      0xbe00000000	                              mov esi, 0	       665	objcopy.c	FUNCTION_2	CALL_1
0x40003aa	            0x31ff	                            xor edi, edi	       665	objcopy.c	FUNCTION_2	CALL_1
0x40003ac	      0xe800000000	                          call 0x40003b1	       665	objcopy.c	FUNCTION_2	CALL_1
0x40003b1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_22
0x40003b4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40003b7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40003bc	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40003bf	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40003c1	      0xe800000000	                          call 0x40003c6	        97	stdio2.h	CALL_22
0x40003c6	            0x31ff	                            xor edi, edi	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003c8	      0xba05000000	                              mov edx, 5	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003cd	      0xbe00000000	                              mov esi, 0	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003d2	      0xe800000000	                          call 0x40003d7	       666	objcopy.c	FUNCTION_2	CALL_2
0x40003d7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40003dc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40003df	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40003e2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40003e4	      0xe800000000	                          call 0x40003e9	        97	stdio2.h	CALL_22
0x40003e9	            0x31ff	                            xor edi, edi	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003eb	      0xba05000000	                              mov edx, 5	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003f0	      0xbe00000000	                              mov esi, 0	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003f5	      0xe800000000	                          call 0x40003fa	       667	objcopy.c	FUNCTION_2	CALL_3
0x40003fa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40003ff	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000402	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000405	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000407	      0xe800000000	                          call 0x400040c	        97	stdio2.h	CALL_22
0x400040c	            0x31ff	                            xor edi, edi	       668	objcopy.c	FUNCTION_2	CALL_4
0x400040e	      0xba05000000	                              mov edx, 5	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000413	      0xbe00000000	                              mov esi, 0	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000418	      0xe800000000	                          call 0x400041d	       668	objcopy.c	FUNCTION_2	CALL_4
0x400041d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000422	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000425	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000428	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400042a	      0xe800000000	                          call 0x400042f	        97	stdio2.h	CALL_22
0x400042f	            0x31ff	                            xor edi, edi	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000431	      0xba05000000	                              mov edx, 5	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000436	      0xbe00000000	                              mov esi, 0	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x400043b	      0xe800000000	                          call 0x4000440	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000440	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000445	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000448	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400044b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400044d	      0xe800000000	                          call 0x4000452	        97	stdio2.h	CALL_22
0x4000452	            0x31ff	                            xor edi, edi	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000454	      0xba05000000	                              mov edx, 5	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000459	      0xbe00000000	                              mov esi, 0	       686	objcopy.c	FUNCTION_2	CALL_9
0x400045e	      0xe800000000	                          call 0x4000463	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000463	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000468	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x400046b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400046e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000470	      0xe800000000	                          call 0x4000475	        97	stdio2.h	CALL_22
0x4000475	    0x488b3d000000	            mov rdi, qword [0x0400047c] 	       709	objcopy.c	FUNCTION_2	CALL_12
0x400047c	          0x4889de	                            mov rsi, rbx	       709	objcopy.c	FUNCTION_2	CALL_12
0x400047f	      0xe800000000	                          call 0x4000484	       709	objcopy.c	FUNCTION_2	CALL_12
0x4000484	            0x85ed	                           test ebp, ebp	       710	objcopy.c	FUNCTION_2	IF_2
0x4000486	            0x7407	                            je 0x400048f	       710	objcopy.c	FUNCTION_2	IF_2
0x4000488	            0x89ef	                            mov edi, ebp	       712	objcopy.c	FUNCTION_2	CALL_14
0x400048a	      0xe800000000	                          call 0x400048f	       712	objcopy.c	FUNCTION_2	CALL_14
0x400048f	            0x31ff	                            xor edi, edi	       711	objcopy.c	FUNCTION_2	CALL_13
0x4000491	      0xba05000000	                              mov edx, 5	       711	objcopy.c	FUNCTION_2	CALL_13
0x4000496	      0xbe00000000	                              mov esi, 0	       711	objcopy.c	FUNCTION_2	CALL_13
0x400049b	      0xe800000000	                          call 0x40004a0	       711	objcopy.c	FUNCTION_2	CALL_13
0x40004a0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_22
0x40004a5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40004a8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40004ad	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40004b0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40004b2	      0xe800000000	                          call 0x40004b7	        97	stdio2.h	CALL_22
0x40004b7	            0xebcf	                           jmp 0x4000488	        97	stdio2.h	CALL_22
0x40004b9	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_22
0x40004c0	            0x4154	                                push r12	       528	objcopy.c	FUNCTION_1
0x40004c2	    0x4c8b25000000	            mov r12, qword [0x040004c9] 	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004c9	      0xba05000000	                              mov edx, 5	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004ce	              0x55	                                push rbp	       528	objcopy.c	FUNCTION_1
0x40004cf	              0x53	                                push rbx	       528	objcopy.c	FUNCTION_1
0x40004d0	            0x89f5	                            mov ebp, esi	       528	objcopy.c	FUNCTION_1
0x40004d2	          0x4889fb	                            mov rbx, rdi	       528	objcopy.c	FUNCTION_1
0x40004d5	      0xbe00000000	                              mov esi, 0	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004da	            0x31ff	                            xor edi, edi	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004dc	      0xe800000000	                          call 0x40004e1	       529	objcopy.c	FUNCTION_1	CALL_1
0x40004e1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_22
0x40004e4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40004e7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40004ec	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40004ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40004f1	      0xe800000000	                          call 0x40004f6	        97	stdio2.h	CALL_22
0x40004f6	            0x31ff	                            xor edi, edi	       530	objcopy.c	FUNCTION_1	CALL_2
0x40004f8	      0xba05000000	                              mov edx, 5	       530	objcopy.c	FUNCTION_1	CALL_2
0x40004fd	      0xbe00000000	                              mov esi, 0	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000502	      0xe800000000	                          call 0x4000507	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000507	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x400050c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x400050f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000512	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000514	      0xe800000000	                          call 0x4000519	        97	stdio2.h	CALL_22
0x4000519	            0x31ff	                            xor edi, edi	       531	objcopy.c	FUNCTION_1	CALL_3
0x400051b	      0xba05000000	                              mov edx, 5	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000520	      0xbe00000000	                              mov esi, 0	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000525	      0xe800000000	                          call 0x400052a	       531	objcopy.c	FUNCTION_1	CALL_3
0x400052a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x400052f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000532	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000535	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x4000537	      0xe800000000	                          call 0x400053c	        97	stdio2.h	CALL_22
0x400053c	            0x31ff	                            xor edi, edi	       532	objcopy.c	FUNCTION_1	CALL_4
0x400053e	      0xba05000000	                              mov edx, 5	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000543	      0xbe00000000	                              mov esi, 0	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000548	      0xe800000000	                          call 0x400054d	       532	objcopy.c	FUNCTION_1	CALL_4
0x400054d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000552	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000555	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x4000558	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400055a	      0xe800000000	                          call 0x400055f	        97	stdio2.h	CALL_22
0x400055f	            0x31ff	                            xor edi, edi	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000561	      0xba05000000	                              mov edx, 5	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000566	      0xbe00000000	                              mov esi, 0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x400056b	      0xe800000000	                          call 0x4000570	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000570	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000575	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000578	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400057b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x400057d	      0xe800000000	                          call 0x4000582	        97	stdio2.h	CALL_22
0x4000582	            0x31ff	                            xor edi, edi	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x4000584	      0xba05000000	                              mov edx, 5	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x4000589	      0xbe00000000	                              mov esi, 0	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x400058e	      0xe800000000	                          call 0x4000593	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x4000593	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000598	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x400059b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x400059e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40005a0	      0xe800000000	                          call 0x40005a5	        97	stdio2.h	CALL_22
0x40005a5	    0x488b3d000000	            mov rdi, qword [0x040005ac] 	       656	objcopy.c	FUNCTION_1	CALL_12
0x40005ac	          0x4889de	                            mov rsi, rbx	       656	objcopy.c	FUNCTION_1	CALL_12
0x40005af	      0xe800000000	                          call 0x40005b4	       656	objcopy.c	FUNCTION_1	CALL_12
0x40005b4	            0x85ed	                           test ebp, ebp	       657	objcopy.c	FUNCTION_1	IF_4
0x40005b6	            0x7407	                            je 0x40005bf	       657	objcopy.c	FUNCTION_1	IF_4
0x40005b8	            0x89ef	                            mov edi, ebp	       659	objcopy.c	FUNCTION_1	CALL_14
0x40005ba	      0xe800000000	                          call 0x40005bf	       659	objcopy.c	FUNCTION_1	CALL_14
0x40005bf	            0x31ff	                            xor edi, edi	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005c1	      0xba05000000	                              mov edx, 5	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005c6	      0xbe00000000	                              mov esi, 0	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005cb	      0xe800000000	                          call 0x40005d0	       658	objcopy.c	FUNCTION_1	CALL_13
0x40005d0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_22
0x40005d5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x40005d8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40005dd	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_22
0x40005e0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_22
0x40005e2	      0xe800000000	                          call 0x40005e7	        97	stdio2.h	CALL_22
0x40005e7	            0xebcf	                           jmp 0x40005b8	        97	stdio2.h	CALL_22
0x40005e9	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_22
0x40005f0	      0x48837e6800	               cmp qword [rsi + 0x68], 0	      4210	objcopy.c	FUNCTION_54	IF_1
0x40005f5	            0x742d	                            je 0x4000624	      4210	objcopy.c	FUNCTION_54	IF_1
0x40005f7	            0x4155	                                push r13	      4203	objcopy.c	FUNCTION_54
0x40005f9	            0x4154	                                push r12	      4203	objcopy.c	FUNCTION_54
0x40005fb	          0x4989d4	                            mov r12, rdx	      4203	objcopy.c	FUNCTION_54
0x40005fe	              0x55	                                push rbp	      4203	objcopy.c	FUNCTION_54
0x40005ff	              0x53	                                push rbx	      4203	objcopy.c	FUNCTION_54
0x4000600	          0x4889fd	                            mov rbp, rdi	      4203	objcopy.c	FUNCTION_54
0x4000603	          0x4889f3	                            mov rbx, rsi	      4203	objcopy.c	FUNCTION_54
0x4000606	        0x4883ec08	                              sub rsp, 8	      4203	objcopy.c	FUNCTION_54
0x400060a	      0xe800000000	                          call 0x400060f	      4213	objcopy.c	FUNCTION_54	CALL_1
0x400060f	          0x4885c0	                           test rax, rax	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000612	     0xf88a8000000	                            js 0x40006c0	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000618	            0x7516	                           jne 0x4000630	      4222	objcopy.c	FUNCTION_54	IF_4
0x400061a	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x400061e	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x400061f	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x4000620	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x4000622	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x4000624	            0xf3c3	                                     ret	      4245	objcopy.c	FUNCTION_54
0x4000626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4245	objcopy.c	FUNCTION_54
0x4000630	          0x4889c7	                            mov rdi, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000633	      0xe800000000	                          call 0x4000638	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000638	          0x4c89e1	                            mov rcx, r12	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400063b	          0x4889c2	                            mov rdx, rax	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400063e	          0x4889de	                            mov rsi, rbx	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000641	          0x4889ef	                            mov rdi, rbp	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000644	          0x4989c5	                            mov r13, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000647	      0xe800000000	                          call 0x400064c	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400064c	          0x4885c0	                           test rax, rax	      4227	objcopy.c	FUNCTION_54	IF_5
0x400064f	     0xf8888000000	                            js 0x40006dd	      4227	objcopy.c	FUNCTION_54	IF_5
0x4000655	            0x7450	                            je 0x40006a7	      4232	objcopy.c	FUNCTION_54	FOR_1
0x4000657	    0x488b35000000	            mov rsi, qword [0x0400065e] 	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400065e	    0x488b3d000000	            mov rdi, qword [0x04000665] 	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000665	      0x498d4cc500	                  lea rcx, [r13 + rax*8]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400066a	    0x4c8b05000000	              mov r8, qword [0x04000671]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000671	          0x4c89ea	                            mov rdx, r13	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000674	         0xf1f4000	                         nop dword [rax]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000678	          0x488b02	                    mov rax, qword [rdx]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400067b	          0x488b00	                    mov rax, qword [rax]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400067e	          0x4885c0	                           test rax, rax	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000681	            0x741b	                            je 0x400069e	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000683	          0x488b00	                    mov rax, qword [rax]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000686	          0x4885c0	                           test rax, rax	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000689	            0x7413	                            je 0x400069e	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400068b	          0x4839f0	                            cmp rax, rsi	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400068e	            0x740e	                            je 0x400069e	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000690	          0x4839f8	                            cmp rax, rdi	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000693	            0x7409	                            je 0x400069e	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000695	          0x4c39c0	                             cmp rax, r8	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000698	            0x7404	                            je 0x400069e	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400069a	        0x83481820	             or dword [rax + 0x18], 0x20	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400069e	        0x4883c208	                              add rdx, 8	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40006a2	          0x4839ca	                            cmp rdx, rcx	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40006a5	            0x75d1	                           jne 0x4000678	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40006a7	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x40006ab	          0x4c89ef	                            mov rdi, r13	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40006ae	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x40006af	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x40006b0	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x40006b2	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x40006b4	      0xe900000000	                           jmp 0x40006b9	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40006b9	     0xf1f80000000	                         nop dword [rax]	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40006c0	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006c4	            0x750e	                           jne 0x40006d4	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006c6	      0xe800000000	                          call 0x40006cb	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006cb	          0x83f805	                              cmp eax, 5	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006ce	     0xf8446ffffff	                            je 0x400061a	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40006d4	        0x488b7d00	                    mov rdi, qword [rbp]	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x40006d8	      0xe800000000	                          call 0x40006dd	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x40006dd	        0x488b7d00	                    mov rdi, qword [rbp]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x40006e1	      0xe800000000	                          call 0x40006e6	      4228	objcopy.c	FUNCTION_54	CALL_6
0x40006e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x40006f0	            0x4157	                                push r15	      1038	objcopy.c	FUNCTION_14
0x40006f2	            0x4156	                                push r14	      1038	objcopy.c	FUNCTION_14
0x40006f4	            0x4155	                                push r13	      1038	objcopy.c	FUNCTION_14
0x40006f6	            0x4154	                                push r12	      1038	objcopy.c	FUNCTION_14
0x40006f8	          0x4989f4	                            mov r12, rsi	      1038	objcopy.c	FUNCTION_14
0x40006fb	              0x55	                                push rbp	      1038	objcopy.c	FUNCTION_14
0x40006fc	              0x53	                                push rbx	      1038	objcopy.c	FUNCTION_14
0x40006fd	          0x4889fd	                            mov rbp, rdi	      1038	objcopy.c	FUNCTION_14
0x4000700	        0x4883ec08	                              sub rsp, 8	      1038	objcopy.c	FUNCTION_14
0x4000704	      0xe800000000	                          call 0x4000709	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000709	          0x4885c0	                           test rax, rax	      1046	objcopy.c	FUNCTION_14	IF_1
0x400070c	            0x7519	                           jne 0x4000727	      1046	objcopy.c	FUNCTION_14	IF_1
0x400070e	    0xc70500000000	               mov dword [0x04000718], 1	      1048	objcopy.c	FUNCTION_14	IF_1
0x4000718	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x400071c	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x400071d	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x400071e	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x4000720	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x4000722	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x4000724	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000726	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000727	        0x488d7802	                      lea rdi, [rax + 2]	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400072b	          0x4889c3	                            mov rbx, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400072e	      0xe800000000	                          call 0x4000733	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000733	      0xbe00000000	                              mov esi, 0	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000738	          0x4889ef	                            mov rdi, rbp	      1053	objcopy.c	FUNCTION_14	CALL_3
0x400073b	          0x4989c6	                            mov r14, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400073e	      0xe800000000	                          call 0x4000743	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000743	          0x4885c0	                           test rax, rax	      1054	objcopy.c	FUNCTION_14	IF_2
0x4000746	          0x4989c5	                            mov r13, rax	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000749	     0xf8418020000	                            je 0x4000967	      1054	objcopy.c	FUNCTION_14	IF_2
0x400074f	          0x4889c1	                            mov rcx, rax	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000752	          0x4889da	                            mov rdx, rbx	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000755	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_90	CALL_9
0x400075a	          0x4c89f7	                            mov rdi, r14	       295	stdio2.h	FUNCTION_90	CALL_9
0x400075d	      0xe800000000	                          call 0x4000762	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000762	          0x4885c0	                           test rax, rax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000765	     0xf84de010000	                            je 0x4000949	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400076b	          0x4c89ef	                            mov rdi, r13	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400076e	      0xe800000000	                          call 0x4000773	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000773	            0x85c0	                           test eax, eax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000775	     0xf85ce010000	                           jne 0x4000949	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400077b	          0x4c89ef	                            mov rdi, r13	      1060	objcopy.c	FUNCTION_14	CALL_11
0x400077e	    0x41bd01000000	                             mov r13d, 1	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000784	      0xe800000000	                          call 0x4000789	      1060	objcopy.c	FUNCTION_14	CALL_11
0x4000789	      0x41c6041e0a	               mov byte [r14 + rbx], 0xa	      1061	objcopy.c	FUNCTION_14
0x400078e	    0x41c6441e0100	             mov byte [r14 + rbx + 1], 0	      1062	objcopy.c	FUNCTION_14
0x4000794	        0x410fb606	                   movzx eax, byte [r14]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000798	            0x84c0	                             test al, al	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400079a	     0xf8478ffffff	                            je 0x4000718	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40007a0	          0x4c89f3	                            mov rbx, r14	      1038	objcopy.c	FUNCTION_14
0x40007a3	            0xeb19	                           jmp 0x40007be	      1038	objcopy.c	FUNCTION_14
0x40007a5	           0xf1f00	                         nop dword [rax]	      1038	objcopy.c	FUNCTION_14
0x40007a8	            0x3c0d	                             cmp al, 0xd	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007aa	     0xf84b8000000	                            je 0x4000868	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b0	            0x3c23	                            cmp al, 0x23	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b2	            0x7503	                           jne 0x40007b7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b4	          0xc60300	                       mov byte [rbx], 0	      1101	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007b7	        0x4883c301	                              add rbx, 1	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x40007bb	           0xfb603	                   movzx eax, byte [rbx]	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x40007be	            0x3c0a	                             cmp al, 0xa	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007c0	     0xf84ba000000	                            je 0x4000880	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007c6	            0x7fe0	                            jg 0x40007a8	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007c8	            0x84c0	                             test al, al	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007ca	            0x75eb	                           jne 0x40007b7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40007cc	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d0	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d2	            0x740c	                            je 0x40007e0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d4	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d6	            0x7518	                           jne 0x40007f0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007d8	     0xf1f84000000	                   nop dword [rax + rax]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007e0	        0x4983c601	                              add r14, 1	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007e4	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007e8	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007ea	            0x74f4	                            je 0x40007e0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007ec	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007ee	            0x74f0	                            je 0x40007e0	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x40007f0	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x40007f2	     0xf8449010000	                            je 0x4000941	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x40007f8	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x40007fa	     0xf8438010000	                            je 0x4000938	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000800	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000802	     0xf8430010000	                            je 0x4000938	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000808	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400080a	     0xf8428010000	                            je 0x4000938	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000810	          0x4d89f7	                            mov r15, r14	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000813	       0xf1f440000	                   nop dword [rax + rax]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000818	        0x4983c701	                              add r15, 1	      1120	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400081c	        0x410fb607	                   movzx eax, byte [r15]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000820	            0x3c20	                            cmp al, 0x20	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000822	            0x7474	                            je 0x4000898	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000824	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000826	            0x7470	                            je 0x4000898	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000828	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400082a	            0x7408	                            je 0x4000834	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400082c	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400082e	            0x7404	                            je 0x4000834	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000830	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000832	            0x75e4	                           jne 0x4000818	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000834	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000837	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400083b	     0xf82bf000000	                            jb 0x4000900	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000841	         0xfb64301	               movzx eax, byte [rbx + 1]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000845	        0x4183c501	                             add r13d, 1	      1143	objcopy.c	FUNCTION_14	FOR_1
0x4000849	        0x4c8d7301	                      lea r14, [rbx + 1]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400084d	            0x84c0	                             test al, al	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400084f	     0xf854bffffff	                           jne 0x40007a0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000855	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x4000859	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x400085a	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x400085b	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x400085d	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x400085f	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x4000861	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000863	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000864	         0xf1f4000	                         nop dword [rax]	      1145	objcopy.c	FUNCTION_14
0x4000868	            0x31c0	                            xor eax, eax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400086a	        0x807b010a	                 cmp byte [rbx + 1], 0xa	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400086e	          0xc60300	                       mov byte [rbx], 0	      1086	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000871	           0xf94c0	                                 sete al	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000874	          0x4801c3	                            add rbx, rax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000877	      0xe950ffffff	                           jmp 0x40007cc	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400087c	         0xf1f4000	                         nop dword [rax]	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x4000880	            0x31c0	                            xor eax, eax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000882	        0x807b010d	                 cmp byte [rbx + 1], 0xd	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000886	          0xc60300	                       mov byte [rbx], 0	      1078	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x4000889	           0xf94c0	                                 sete al	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x400088c	          0x4801c3	                            add rbx, rax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x400088f	      0xe938ffffff	                           jmp 0x40007cc	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000894	         0xf1f4000	                         nop dword [rax]	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x4000898	            0x3c0a	                             cmp al, 0xa	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400089a	            0x7498	                            je 0x4000834	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400089c	            0x3c0d	                             cmp al, 0xd	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x400089e	            0x7494	                            je 0x4000834	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40008a0	            0x84c0	                             test al, al	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40008a2	            0x7490	                            je 0x4000834	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40008a4	      0x410fb65701	               movzx edx, byte [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008a9	        0x498d4701	                      lea rax, [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008ad	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008b0	            0x7512	                           jne 0x40008c4	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008b2	    0x660f1f440000	                    nop word [rax + rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008b8	        0x4883c001	                              add rax, 1	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008bc	           0xfb610	                   movzx edx, byte [rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008bf	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c2	            0x74f4	                            je 0x40008b8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c4	          0x80fa09	                               cmp dl, 9	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c7	            0x74ef	                            je 0x40008b8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40008c9	          0x80fa0d	                             cmp dl, 0xd	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40008cc	            0x7652	                           jbe 0x4000920	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40008ce	            0x31ff	                            xor edi, edi	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008d0	      0xba05000000	                              mov edx, 5	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008d5	      0xbe00000000	                              mov esi, 0	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008da	      0xe800000000	                          call 0x40008df	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008df	          0x4489ea	                           mov edx, r13d	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008e2	          0x4889c7	                            mov rdi, rax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008e5	          0x4889ee	                            mov rsi, rbp	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008e8	            0x31c0	                            xor eax, eax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008ea	      0xe800000000	                          call 0x40008ef	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x40008ef	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x40008f2	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x40008f6	     0xf8345ffffff	                           jae 0x4000841	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x40008fc	         0xf1f4000	                         nop dword [rax]	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000900	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000905	          0x4c89f6	                            mov rsi, r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000908	          0x4c89e7	                            mov rdi, r12	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400090b	      0xe800000000	                          call 0x4000910	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000910	          0x4c8930	                    mov qword [rax], r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000913	      0xe929ffffff	                           jmp 0x4000841	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000918	     0xf1f84000000	                   nop dword [rax + rax]	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000920	      0xb801240000	                         mov eax, 0x2401	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000925	        0x480fa3d0	                             bt rax, rdx	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000929	     0xf8205ffffff	                            jb 0x4000834	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400092f	            0xeb9d	                           jmp 0x40008ce	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000931	     0xf1f80000000	                         nop dword [rax]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000938	        0x41c60600	                       mov byte [r14], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400093c	      0xe900ffffff	                           jmp 0x4000841	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4000941	          0x4d89f7	                            mov r15, r14	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000944	      0xe95bffffff	                           jmp 0x40008a4	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000949	      0xbe00000000	                              mov esi, 0	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400094e	            0x31ff	                            xor edi, edi	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000950	      0xba05000000	                              mov edx, 5	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000955	      0xe800000000	                          call 0x400095a	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400095a	          0x4889ee	                            mov rsi, rbp	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400095d	          0x4889c7	                            mov rdi, rax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000960	            0x31c0	                            xor eax, eax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000962	      0xe800000000	                          call 0x4000967	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000967	      0xe800000000	                          call 0x400096c	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400096c	            0x8b38	                    mov edi, dword [rax]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400096e	      0xe800000000	                          call 0x4000973	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000973	      0xba05000000	                              mov edx, 5	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000978	          0x4889c3	                            mov rbx, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400097b	      0xbe00000000	                              mov esi, 0	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000980	            0x31ff	                            xor edi, edi	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000982	      0xe800000000	                          call 0x4000987	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000987	          0x4889da	                            mov rdx, rbx	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400098a	          0x4889c7	                            mov rdi, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400098d	          0x4889ee	                            mov rsi, rbp	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000990	            0x31c0	                            xor eax, eax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000992	      0xe800000000	                          call 0x4000997	      1055	objcopy.c	FUNCTION_14	CALL_6
0x4000997	    0x660f1f840000	                    nop word [rax + rax]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40009a0	            0x4156	                                push r14	      4645	objcopy.c	FUNCTION_61
0x40009a2	            0x4155	                                push r13	      4645	objcopy.c	FUNCTION_61
0x40009a4	          0x4989fd	                            mov r13, rdi	      4645	objcopy.c	FUNCTION_61
0x40009a7	            0x4154	                                push r12	      4645	objcopy.c	FUNCTION_61
0x40009a9	              0x55	                                push rbp	      4645	objcopy.c	FUNCTION_61
0x40009aa	      0xbe00000000	                              mov esi, 0	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40009af	              0x53	                                push rbx	      4645	objcopy.c	FUNCTION_61
0x40009b0	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40009b4	      0xe800000000	                          call 0x40009b9	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40009b9	          0x4885c0	                           test rax, rax	      4654	objcopy.c	FUNCTION_61	IF_1
0x40009bc	     0xf84b4000000	                            je 0x4000a76	      4654	objcopy.c	FUNCTION_61	IF_1
0x40009c2	      0xbf00100000	                         mov edi, 0x1000	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009c7	          0x4889c5	                            mov rbp, rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009ca	    0x41bc00100000	                        mov r12d, 0x1000	      4659	objcopy.c	FUNCTION_61
0x40009d0	      0xe800000000	                          call 0x40009d5	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009d5	            0x31db	                            xor ebx, ebx	      4658	objcopy.c	FUNCTION_61
0x40009d7	        0x49894520	             mov qword [r13 + 0x20], rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009db	            0xeb2f	                           jmp 0x4000a0c	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x40009dd	           0xf1f00	                         nop dword [rax]	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x40009e0	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x40009e4	          0x4c89e2	                            mov rdx, r12	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009e7	          0x4801df	                            add rdi, rbx	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009ea	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009ed	          0x4829da	                            sub rdx, rbx	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009f0	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009f5	      0xe800000000	                          call 0x40009fa	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009fa	          0x4889ef	                            mov rdi, rbp	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x40009fd	          0x4989c6	                            mov r14, rax	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000a00	      0xe800000000	                          call 0x4000a05	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000a05	            0x85c0	                           test eax, eax	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000a07	            0x754b	                           jne 0x4000a54	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000a09	          0x4c01f3	                            add rbx, r14	      4675	objcopy.c	FUNCTION_61	WHILE_1
0x4000a0c	          0x4889ef	                            mov rdi, rbp	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a0f	      0xe800000000	                          call 0x4000a14	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a14	            0x85c0	                           test eax, eax	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a16	            0x7528	                           jne 0x4000a40	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a18	          0x4c39e3	                            cmp rbx, r12	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000a1b	            0x75c3	                           jne 0x40009e0	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000a1d	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a21	        0x4c8d241b	                    lea r12, [rbx + rbx]	      4667	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000a25	          0x4c89e6	                            mov rsi, r12	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a28	      0xe800000000	                          call 0x4000a2d	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a2d	        0x49894520	             mov qword [r13 + 0x20], rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a31	          0x4889c7	                            mov rdi, rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a34	            0xebae	                           jmp 0x40009e4	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a40	        0x49895d18	             mov qword [r13 + 0x18], rbx	      4678	objcopy.c	FUNCTION_61
0x4000a44	          0x4889ef	                            mov rdi, rbp	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000a47	              0x5b	                                 pop rbx	      4681	objcopy.c	FUNCTION_61
0x4000a48	              0x5d	                                 pop rbp	      4681	objcopy.c	FUNCTION_61
0x4000a49	            0x415c	                                 pop r12	      4681	objcopy.c	FUNCTION_61
0x4000a4b	            0x415d	                                 pop r13	      4681	objcopy.c	FUNCTION_61
0x4000a4d	            0x415e	                                 pop r14	      4681	objcopy.c	FUNCTION_61
0x4000a4f	      0xe900000000	                           jmp 0x4000a54	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000a54	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a58	      0xbe00000000	                              mov esi, 0	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a5d	            0x31ff	                            xor edi, edi	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a5f	      0xba05000000	                              mov edx, 5	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a64	      0xe800000000	                          call 0x4000a69	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a69	          0x4889de	                            mov rsi, rbx	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a6c	          0x4889c7	                            mov rdi, rax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a6f	            0x31c0	                            xor eax, eax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a71	      0xe800000000	                          call 0x4000a76	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a76	      0xe800000000	                          call 0x4000a7b	      4656	objcopy.c	FUNCTION_61	CALL_4
0x4000a7b	            0x8b38	                    mov edi, dword [rax]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a7d	      0xe800000000	                          call 0x4000a82	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a82	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a86	          0x4889c5	                            mov rbp, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a89	      0xba05000000	                              mov edx, 5	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a8e	      0xbe00000000	                              mov esi, 0	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a93	            0x31ff	                            xor edi, edi	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a95	      0xe800000000	                          call 0x4000a9a	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a9a	          0x4889ea	                            mov rdx, rbp	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a9d	          0x4889c7	                            mov rdi, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000aa0	          0x4889de	                            mov rsi, rbx	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000aa3	            0x31c0	                            xor eax, eax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000aa5	      0xe800000000	                          call 0x4000aaa	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000aaa	    0x660f1f440000	                    nop word [rax + rax]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000ab0	            0x4155	                                push r13	      1687	objcopy.c	FUNCTION_29
0x4000ab2	            0x4154	                                push r12	      1687	objcopy.c	FUNCTION_29
0x4000ab4	          0x4989fd	                            mov r13, rdi	      1687	objcopy.c	FUNCTION_29
0x4000ab7	              0x55	                                push rbp	      1687	objcopy.c	FUNCTION_29
0x4000ab8	              0x53	                                push rbx	      1687	objcopy.c	FUNCTION_29
0x4000ab9	          0x4989f4	                            mov r12, rsi	      1687	objcopy.c	FUNCTION_29
0x4000abc	      0xbf10000000	                           mov edi, 0x10	      1688	objcopy.c	FUNCTION_29
0x4000ac1	          0x4889d5	                            mov rbp, rdx	      1687	objcopy.c	FUNCTION_29
0x4000ac4	        0x4883ec08	                              sub rsp, 8	      1687	objcopy.c	FUNCTION_29
0x4000ac8	      0xe800000000	                          call 0x4000acd	      1688	objcopy.c	FUNCTION_29
0x4000acd	          0x4c89e7	                            mov rdi, r12	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000ad0	          0x4889c3	                            mov rbx, rax	      1688	objcopy.c	FUNCTION_29
0x4000ad3	      0xe800000000	                          call 0x4000ad8	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000ad8	          0x4889ef	                            mov rdi, rbp	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000adb	          0x488903	                    mov qword [rbx], rax	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000ade	      0xe800000000	                          call 0x4000ae3	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000ae3	    0x488b3d000000	            mov rdi, qword [0x04000aea] 	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000aea	        0x48894308	                mov qword [rbx + 8], rax	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000aee	          0x4889de	                            mov rsi, rbx	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000af1	      0xe800000000	                          call 0x4000af6	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000af6	          0x4885c0	                           test rax, rax	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000af9	            0x7551	                           jne 0x4000b4c	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000afb	    0x488b3d000000	            mov rdi, qword [0x04000b02] 	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b02	          0x4889ee	                            mov rsi, rbp	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b05	      0xe800000000	                          call 0x4000b0a	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b0a	          0x4885c0	                           test rax, rax	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b0d	            0x755e	                           jne 0x4000b6d	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b0f	    0x488b3d000000	            mov rdi, qword [0x04000b16] 	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b16	          0x4889de	                            mov rsi, rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b19	      0xba01000000	                              mov edx, 1	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b1e	      0xe800000000	                          call 0x4000b23	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b23	          0x488918	                    mov qword [rax], rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b26	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1707	objcopy.c	FUNCTION_29	CALL_11
0x4000b2a	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b2f	    0x488b3d000000	            mov rdi, qword [0x04000b36] 	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b36	          0x4889de	                            mov rsi, rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b39	      0xe800000000	                          call 0x4000b3e	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b3e	          0x488918	                    mov qword [rax], rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b41	        0x4883c408	                              add rsp, 8	      1709	objcopy.c	FUNCTION_29
0x4000b45	              0x5b	                                 pop rbx	      1709	objcopy.c	FUNCTION_29
0x4000b46	              0x5d	                                 pop rbp	      1709	objcopy.c	FUNCTION_29
0x4000b47	            0x415c	                                 pop r12	      1709	objcopy.c	FUNCTION_29
0x4000b49	            0x415d	                                 pop r13	      1709	objcopy.c	FUNCTION_29
0x4000b4b	              0xc3	                                     ret	      1709	objcopy.c	FUNCTION_29
0x4000b4c	      0xba05000000	                              mov edx, 5	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b51	      0xbe00000000	                              mov esi, 0	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b56	            0x31ff	                            xor edi, edi	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b58	      0xe800000000	                          call 0x4000b5d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b5d	          0x4c89e2	                            mov rdx, r12	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b60	          0x4889c7	                            mov rdi, rax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b63	          0x4c89ee	                            mov rsi, r13	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b66	            0x31c0	                            xor eax, eax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b68	      0xe800000000	                          call 0x4000b6d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b6d	      0xba05000000	                              mov edx, 5	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b72	      0xbe00000000	                              mov esi, 0	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b77	            0x31ff	                            xor edi, edi	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b79	      0xe800000000	                          call 0x4000b7e	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b7e	          0x4889ea	                            mov rdx, rbp	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b81	          0x4889c7	                            mov rdi, rax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b84	          0x4c89ee	                            mov rsi, r13	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b87	            0x31c0	                            xor eax, eax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b89	      0xe800000000	                          call 0x4000b8e	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b8e	            0x6690	                                     nop	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b90	            0x4156	                                push r14	       720	objcopy.c	FUNCTION_3
0x4000b92	          0x4531f6	                          xor r14d, r14d	       725	objcopy.c	FUNCTION_3
0x4000b95	            0x4155	                                push r13	       720	objcopy.c	FUNCTION_3
0x4000b97	            0x4154	                                push r12	       720	objcopy.c	FUNCTION_3
0x4000b99	              0x55	                                push rbp	       720	objcopy.c	FUNCTION_3
0x4000b9a	          0x4889fd	                            mov rbp, rdi	       720	objcopy.c	FUNCTION_3
0x4000b9d	              0x53	                                push rbx	       720	objcopy.c	FUNCTION_3
0x4000b9e	            0xeb0c	                           jmp 0x4000bac	       720	objcopy.c	FUNCTION_3
0x4000ba0	        0x4183ce01	                              or r14d, 1	       741	objcopy.c	FUNCTION_3	DO_1
0x4000ba4	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x4000ba7	            0x7456	                            je 0x4000bff	       768	objcopy.c	FUNCTION_3
0x4000ba9	          0x4889dd	                            mov rbp, rbx	       768	objcopy.c	FUNCTION_3
0x4000bac	      0xbe2c000000	                           mov esi, 0x2c	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bb1	          0x4889ef	                            mov rdi, rbp	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bb4	      0xe800000000	                          call 0x4000bb9	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bb9	          0x4885c0	                           test rax, rax	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x4000bbc	          0x4889c3	                            mov rbx, rax	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bbf	            0x746f	                            je 0x4000c30	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x4000bc1	          0x4189c5	                           mov r13d, eax	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000bc4	        0x4883c301	                              add rbx, 1	       735	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000bc8	          0x4129ed	                           sub r13d, ebp	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000bcb	          0x4d63e5	                        movsxd r12, r13d	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bce	          0x4889ee	                            mov rsi, rbp	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bd1	      0xbf00000000	                              mov edi, 0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bd6	          0x4c89e2	                            mov rdx, r12	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bd9	      0xe800000000	                          call 0x4000bde	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bde	            0x85c0	                           test eax, eax	       741	objcopy.c	FUNCTION_3	DO_1
0x4000be0	            0x74be	                            je 0x4000ba0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000be2	          0x4c89e2	                            mov rdx, r12	       742	objcopy.c	FUNCTION_3	DO_1
0x4000be5	          0x4889ee	                            mov rsi, rbp	       742	objcopy.c	FUNCTION_3	DO_1
0x4000be8	      0xbf00000000	                              mov edi, 0	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bed	      0xe800000000	                          call 0x4000bf2	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bf2	            0x85c0	                           test eax, eax	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bf4	            0x751a	                           jne 0x4000c10	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bf6	        0x4183ce02	                              or r14d, 2	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bfa	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x4000bfd	            0x75aa	                           jne 0x4000ba9	       768	objcopy.c	FUNCTION_3
0x4000bff	              0x5b	                                 pop rbx	       771	objcopy.c	FUNCTION_3
0x4000c00	          0x4489f0	                           mov eax, r14d	       771	objcopy.c	FUNCTION_3
0x4000c03	              0x5d	                                 pop rbp	       771	objcopy.c	FUNCTION_3
0x4000c04	            0x415c	                                 pop r12	       771	objcopy.c	FUNCTION_3
0x4000c06	            0x415d	                                 pop r13	       771	objcopy.c	FUNCTION_3
0x4000c08	            0x415e	                                 pop r14	       771	objcopy.c	FUNCTION_3
0x4000c0a	              0xc3	                                     ret	       771	objcopy.c	FUNCTION_3
0x4000c0b	       0xf1f440000	                   nop dword [rax + rax]	       771	objcopy.c	FUNCTION_3
0x4000c10	          0x4c89e2	                            mov rdx, r12	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c13	          0x4889ee	                            mov rsi, rbp	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c16	      0xbf00000000	                              mov edi, 0	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c1b	      0xe800000000	                          call 0x4000c20	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c20	            0x85c0	                           test eax, eax	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c22	            0x751c	                           jne 0x4000c40	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c24	    0x4181ce000200	                          or r14d, 0x200	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c2b	      0xe974ffffff	                           jmp 0x4000ba4	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c30	          0x4889ef	                            mov rdi, rbp	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c33	      0xe800000000	                          call 0x4000c38	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c38	          0x4189c5	                           mov r13d, eax	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c3b	            0xeb8e	                           jmp 0x4000bcb	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c3d	           0xf1f00	                         nop dword [rax]	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c40	          0x4c89e2	                            mov rdx, r12	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c43	          0x4889ee	                            mov rsi, rbp	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c46	      0xbf00000000	                              mov edi, 0	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c4b	      0xe800000000	                          call 0x4000c50	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c50	            0x85c0	                           test eax, eax	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c52	            0x750c	                           jne 0x4000c60	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c54	        0x4183ce08	                              or r14d, 8	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c58	      0xe947ffffff	                           jmp 0x4000ba4	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c5d	           0xf1f00	                         nop dword [rax]	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c60	          0x4c89e2	                            mov rdx, r12	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c63	          0x4889ee	                            mov rsi, rbp	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c66	      0xbf00000000	                              mov edi, 0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c6b	      0xe800000000	                          call 0x4000c70	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c70	            0x85c0	                           test eax, eax	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c72	            0x750c	                           jne 0x4000c80	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c74	    0x4181ce002000	                         or r14d, 0x2000	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c7b	      0xe924ffffff	                           jmp 0x4000ba4	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c80	          0x4c89e2	                            mov rdx, r12	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c83	          0x4889ee	                            mov rsi, rbp	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c86	      0xbf00000000	                              mov edi, 0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c8b	      0xe800000000	                          call 0x4000c90	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c90	            0x85c0	                           test eax, eax	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c92	            0x750c	                           jne 0x4000ca0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c94	        0x4183ce10	                           or r14d, 0x10	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c98	      0xe907ffffff	                           jmp 0x4000ba4	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c9d	           0xf1f00	                         nop dword [rax]	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ca0	          0x4c89e2	                            mov rdx, r12	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ca3	          0x4889ee	                            mov rsi, rbp	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ca6	      0xbf00000000	                              mov edi, 0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cab	      0xe800000000	                          call 0x4000cb0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cb0	            0x85c0	                           test eax, eax	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cb2	            0x741d	                            je 0x4000cd1	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cb4	          0x4c89e2	                            mov rdx, r12	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cb7	          0x4889ee	                            mov rsi, rbp	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cba	      0xbf00000000	                              mov edi, 0	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cbf	      0xe800000000	                          call 0x4000cc4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cc4	            0x85c0	                           test eax, eax	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cc6	            0x7512	                           jne 0x4000cda	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cc8	        0x4183ce40	                           or r14d, 0x40	       748	objcopy.c	FUNCTION_3	DO_1
0x4000ccc	      0xe9d3feffff	                           jmp 0x4000ba4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cd1	        0x4183ce20	                           or r14d, 0x20	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cd5	      0xe9cafeffff	                           jmp 0x4000ba4	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cda	          0x4c89e2	                            mov rdx, r12	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cdd	          0x4889ee	                            mov rsi, rbp	       749	objcopy.c	FUNCTION_3	DO_1
0x4000ce0	      0xbf00000000	                              mov edi, 0	       749	objcopy.c	FUNCTION_3	DO_1
0x4000ce5	      0xe800000000	                          call 0x4000cea	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cea	            0x85c0	                           test eax, eax	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cec	            0x7420	                            je 0x4000d0e	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cee	          0x4c89e2	                            mov rdx, r12	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cf1	          0x4889ee	                            mov rsi, rbp	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cf4	      0xbf00000000	                              mov edi, 0	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cf9	      0xe800000000	                          call 0x4000cfe	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cfe	            0x85c0	                           test eax, eax	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d00	            0x7518	                           jne 0x4000d1a	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d02	    0x4181ce000100	                          or r14d, 0x100	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d09	      0xe996feffff	                           jmp 0x4000ba4	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d0e	    0x4181ce000000	                   or r14d, section_end.	       749	objcopy.c	FUNCTION_3	DO_1
0x4000d15	      0xe98afeffff	                           jmp 0x4000ba4	       749	objcopy.c	FUNCTION_3	DO_1
0x4000d1a	          0x4c89e2	                            mov rdx, r12	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d1d	          0x4889ee	                            mov rsi, rbp	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d20	      0xbf00000000	                              mov edi, 0	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d25	      0xe800000000	                          call 0x4000d2a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d2a	            0x85c0	                           test eax, eax	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d2c	            0x750c	                           jne 0x4000d3a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d2e	    0x4181ce000080	                       or r14d, 0x800000	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d35	      0xe96afeffff	                           jmp 0x4000ba4	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d3a	          0x4c89e2	                            mov rdx, r12	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d3d	          0x4889ee	                            mov rsi, rbp	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d40	      0xbf00000000	                              mov edi, 0	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d45	      0xe800000000	                          call 0x4000d4a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d4a	            0x85c0	                           test eax, eax	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d4c	            0x750c	                           jne 0x4000d5a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d4e	    0x4181ce000000	                      or r14d, 0x1000000	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d55	      0xe94afeffff	                           jmp 0x4000ba4	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d5a	        0x418d7d01	                      lea edi, [r13 + 1]	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d5e	          0x4863ff	                         movsxd rdi, edi	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d61	      0xe800000000	                          call 0x4000d66	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d66	          0x4c89e2	                            mov rdx, r12	       126	string3.h	FUNCTION_72	CALL_3
0x4000d69	          0x4889c3	                            mov rbx, rax	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d6c	          0x4889ee	                            mov rsi, rbp	       126	string3.h	FUNCTION_72	CALL_3
0x4000d6f	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_72	CALL_3
0x4000d72	      0xe800000000	                          call 0x4000d77	       126	string3.h	FUNCTION_72	CALL_3
0x4000d77	      0xba05000000	                              mov edx, 5	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d7c	      0xbe00000000	                              mov esi, 0	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d81	            0x31ff	                            xor edi, edi	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d83	      0x42c6042300	                 mov byte [rbx + r12], 0	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x4000d88	      0xe800000000	                          call 0x4000d8d	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d8d	          0x4889de	                            mov rsi, rbx	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d90	          0x4889c7	                            mov rdi, rax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d93	            0x31c0	                            xor eax, eax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d95	      0xe800000000	                          call 0x4000d9a	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d9a	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000d9f	            0x31ff	                            xor edi, edi	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000da1	      0xba05000000	                              mov edx, 5	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000da6	      0xe800000000	                          call 0x4000dab	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000dab	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000db0	          0x4889c7	                            mov rdi, rax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000db3	            0x31c0	                            xor eax, eax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000db5	      0xe800000000	                          call 0x4000dba	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000dba	    0x660f1f440000	                    nop word [rax + rax]	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000dc0	    0x488b0d000000	            mov rcx, qword [0x04000dc7] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x4000dc7	          0x4885c9	                           test rcx, rcx	      1207	objcopy.c	FUNCTION_17	IF_1
0x4000dca	            0x745c	                            je 0x4000e28	      1207	objcopy.c	FUNCTION_17	IF_1
0x4000dcc	        0x488b4608	                mov rax, qword [rsi + 8]	      1210	objcopy.c	FUNCTION_17	IF_2
0x4000dd0	          0x4531c0	                            xor r8d, r8d	      1208	objcopy.c	FUNCTION_17	IF_1
0x4000dd3	        0x83780805	                  cmp dword [rax + 8], 5	      1210	objcopy.c	FUNCTION_17	IF_2
0x4000dd7	            0x7546	                           jne 0x4000e1f	      1210	objcopy.c	FUNCTION_17	IF_2
0x4000dd9	    0x488b96f80000	            mov rdx, qword [rsi + 0xf8] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4000de0	    0x8bb2780c0000	           mov esi, dword [rdx + 0xc78] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4000de6	          0x397728	            cmp dword [rdi + 0x28], esi 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4000de9	            0x7534	                           jne 0x4000e1f	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4000deb	          0x8b772c	            mov esi, dword [rdi + 0x2c] 	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000dee	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x4000df5	            0x85f6	                           test esi, esi	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000df7	            0x7426	                            je 0x4000e1f	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000df9	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e00	            0x89f7	                            mov edi, esi	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e02	      0x440fb64805	               movzx r9d, byte [rax + 5]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e07	    0x488b82880000	            mov rax, qword [rdx + 0x88] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e0e	            0x31d2	                            xor edx, edx	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e10	          0x49f7f1	                                  div r9	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e13	          0x4839c7	                            cmp rdi, rax	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e16	            0x7307	                           jae 0x4000e1f	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e18	          0x8d46ff	                      lea eax, [rsi - 1]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e1b	        0x4c8b04c1	             mov r8, qword [rcx + rax*8]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4000e1f	          0x4c89c0	                             mov rax, r8	      1224	objcopy.c	FUNCTION_17
0x4000e22	              0xc3	                                     ret	      1224	objcopy.c	FUNCTION_17
0x4000e23	       0xf1f440000	                   nop dword [rax + rax]	      1224	objcopy.c	FUNCTION_17
0x4000e28	          0x4531c0	                            xor r8d, r8d	      1208	objcopy.c	FUNCTION_17	IF_1
0x4000e2b	            0xebf2	                           jmp 0x4000e1f	      1208	objcopy.c	FUNCTION_17	IF_1
0x4000e2d	           0xf1f00	                         nop dword [rax]	      1208	objcopy.c	FUNCTION_17	IF_1
0x4000e30	        0x488b4708	                mov rax, qword [rdi + 8]	      3413	objcopy.c	FUNCTION_40	IF_1
0x4000e34	        0x83780802	                  cmp dword [rax + 8], 2	      3413	objcopy.c	FUNCTION_40	IF_1
0x4000e38	            0x7406	                            je 0x4000e40	      3413	objcopy.c	FUNCTION_40	IF_1
0x4000e3a	            0xf3c3	                                     ret	      3413	objcopy.c	FUNCTION_40	IF_1
0x4000e3c	         0xf1f4000	                         nop dword [rax]	      3413	objcopy.c	FUNCTION_40	IF_1
0x4000e40	          0x83fa02	                              cmp edx, 2	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e43	            0x741b	                            je 0x4000e60	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e45	            0x31f6	                            xor esi, esi	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e47	            0x85d2	                           test edx, edx	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e49	        0x400f95c6	                               setne sil	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e4d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4000e54	          0xff6078	                  jmp qword [rax + 0x78]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4000e57	    0x660f1f840000	                    nop word [rax + rax]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4000e60	          0x488b16	                    mov rdx, qword [rsi]	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e63	      0xbe01000000	                              mov esi, 1	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e68	        0x837a0802	                  cmp dword [rdx + 8], 2	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e6c	            0x75df	                           jne 0x4000e4d	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4000e6e	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e75	            0x31f6	                            xor esi, esi	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e77	          0x8b5274	            mov edx, dword [rdx + 0x74] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e7a	            0x85d2	                           test edx, edx	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e7c	        0x400f95c6	                               setne sil	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e80	            0xebcb	                           jmp 0x4000e4d	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e82	         0xf1f4000	                         nop dword [rax]	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4000e90	              0x55	                                push rbp	      1240	objcopy.c	
0x4000e91	              0x53	                                push rbx	      1240	objcopy.c	
0x4000e92	        0x4883ec08	                              sub rsp, 8	      1240	objcopy.c	
0x4000e96	    0x488b1d000000	            mov rbx, qword [0x04000e9d] 	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000e9d	          0x4885db	                           test rbx, rbx	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000ea0	            0x741e	                            je 0x4000ec0	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000ea2	          0x488b2f	                    mov rbp, qword [rdi]	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000ea5	           0xf1f00	                         nop dword [rax]	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000ea8	        0x488b7308	                mov rsi, qword [rbx + 8]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000eac	          0x4889ef	                            mov rdi, rbp	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000eaf	      0xe800000000	                          call 0x4000eb4	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000eb4	            0x85c0	                           test eax, eax	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000eb6	            0x7418	                            je 0x4000ed0	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000eb8	          0x488b1b	                    mov rbx, qword [rbx]	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4000ebb	          0x4885db	                           test rbx, rbx	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4000ebe	            0x75e8	                           jne 0x4000ea8	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4000ec0	        0x4883c408	                              add rsp, 8	      1256	objcopy.c	FUNCTION_19
0x4000ec4	            0x31c0	                            xor eax, eax	      1255	objcopy.c	FUNCTION_19
0x4000ec6	              0x5b	                                 pop rbx	      1256	objcopy.c	FUNCTION_19
0x4000ec7	              0x5d	                                 pop rbp	      1256	objcopy.c	FUNCTION_19
0x4000ec8	              0xc3	                                     ret	      1256	objcopy.c	FUNCTION_19
0x4000ec9	     0xf1f80000000	                         nop dword [rax]	      1256	objcopy.c	FUNCTION_19
0x4000ed0	        0x4883c408	                              add rsp, 8	      1256	objcopy.c	FUNCTION_19
0x4000ed4	      0xb801000000	                              mov eax, 1	      1251	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2
0x4000ed9	              0x5b	                                 pop rbx	      1256	objcopy.c	FUNCTION_19
0x4000eda	              0x5d	                                 pop rbp	      1256	objcopy.c	FUNCTION_19
0x4000edb	              0xc3	                                     ret	      1256	objcopy.c	FUNCTION_19
0x4000edc	         0xf1f4000	                         nop dword [rax]	      1256	objcopy.c	FUNCTION_19
0x4000ee0	    0x8b0500000000	            mov eax, dword [0x04000ee6] 	      1261	objcopy.c	FUNCTION_20	IF_1
0x4000ee6	            0x85c0	                           test eax, eax	      1261	objcopy.c	FUNCTION_20	IF_1
0x4000ee8	            0x740b	                            je 0x4000ef5	      1261	objcopy.c	FUNCTION_20	IF_1
0x4000eea	          0x488b0f	                    mov rcx, qword [rdi]	      1262	objcopy.c	FUNCTION_20	IF_1
0x4000eed	            0x31c0	                            xor eax, eax	      1273	objcopy.c	FUNCTION_20
0x4000eef	        0x83790805	                  cmp dword [rcx + 8], 5	      1262	objcopy.c	FUNCTION_20	IF_1
0x4000ef3	            0x740b	                            je 0x4000f00	      1262	objcopy.c	FUNCTION_20	IF_1
0x4000ef5	            0xf3c3	                                     ret	      1274	objcopy.c	FUNCTION_20
0x4000ef7	    0x660f1f840000	                    nop word [rax + rax]	      1274	objcopy.c	FUNCTION_20
0x4000f00	          0x488b12	                    mov rdx, qword [rdx]	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x4000f03	        0x837a0407	                  cmp dword [rdx + 4], 7	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x4000f07	            0x75ec	                           jne 0x4000ef5	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x4000f09	        0xf6420a10	            test byte [rdx + 0xa], 0x10 	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x4000f0d	      0xb801000000	                              mov eax, 1	      1271	objcopy.c	FUNCTION_20	IF_1
0x4000f12	            0x75e1	                           jne 0x4000ef5	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x4000f14	          0x488b36	                    mov rsi, qword [rsi]	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x4000f17	      0xbf00000000	                              mov edi, 0	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x4000f1c	      0xb916000000	                           mov ecx, 0x16	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x4000f21	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1271	objcopy.c	FUNCTION_20	IF_1
0x4000f23	           0xf94c0	                                 sete al	      1271	objcopy.c	FUNCTION_20	IF_1
0x4000f26	           0xfb6c0	                           movzx eax, al	      1271	objcopy.c	FUNCTION_20	IF_1
0x4000f29	              0xc3	                                     ret	      1274	objcopy.c	FUNCTION_20
0x4000f2a	    0x660f1f440000	                    nop word [rax + rax]	      1274	objcopy.c	FUNCTION_20
0x4000f30	              0x53	                                push rbx	      1229	objcopy.c	
0x4000f31	          0x4889fb	                            mov rbx, rdi	      1229	objcopy.c	
0x4000f34	      0xe800000000	                          call 0x4000f39	      1232	objcopy.c	FUNCTION_18	CALL_1
0x4000f39	            0x4898	                                    cdqe	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000f3b	      0xbf00000000	                              mov edi, 0	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000f40	      0xb904000000	                              mov ecx, 4	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000f45	      0x488d7403fc	                lea rsi, [rbx + rax - 4]	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000f4a	              0x5b	                                 pop rbx	      1235	objcopy.c	FUNCTION_18
0x4000f4b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000f4d	           0xf94c0	                                 sete al	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000f50	           0xfb6c0	                           movzx eax, al	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000f53	              0xc3	                                     ret	      1235	objcopy.c	FUNCTION_18
0x4000f54	            0x6690	                                     nop	      1235	objcopy.c	FUNCTION_18
0x4000f56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1235	objcopy.c	FUNCTION_18
0x4000f60	          0x4889f8	                            mov rax, rdi	      3901	objcopy.c	FUNCTION_49
0x4000f63	      0xb906000000	                              mov ecx, 6	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000f68	      0xbf00000000	                              mov edi, 0	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000f6d	          0x4889c6	                            mov rsi, rax	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000f70	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000f72	            0x7454	                            je 0x4000fc8	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000f74	      0xbf00000000	                              mov edi, 0	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000f79	      0xb905000000	                              mov ecx, 5	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000f7e	          0x4889c6	                            mov rsi, rax	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000f81	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000f83	            0x742b	                            je 0x4000fb0	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000f85	        0x4883ec08	                              sub rsp, 8	      3901	objcopy.c	FUNCTION_49
0x4000f89	          0x4889c7	                            mov rdi, rax	      3901	objcopy.c	FUNCTION_49
0x4000f8c	      0xba01000000	                              mov edx, 1	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x4000f91	      0xbe01000000	                              mov esi, 1	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x4000f96	      0xe825f2ffff	              call sym.find_section_list	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x4000f9b	    0xc70500000000	               mov dword [0x04000fa5], 1	      3909	objcopy.c	FUNCTION_49	ELSE_2
0x4000fa5	        0x4883c408	                              add rsp, 8	      3911	objcopy.c	FUNCTION_49
0x4000fa9	              0xc3	                                     ret	      3911	objcopy.c	FUNCTION_49
0x4000faa	    0x660f1f440000	                    nop word [rax + rax]	      3911	objcopy.c	FUNCTION_49
0x4000fb0	        0x488d7804	                      lea rdi, [rax + 4]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fb4	      0xba80000000	                           mov edx, 0x80	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fb9	      0xbe01000000	                              mov esi, 1	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fbe	      0xe9fdf1ffff	               jmp sym.find_section_list	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fc3	       0xf1f440000	                   nop dword [rax + rax]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fc8	        0x488d7805	                      lea rdi, [rax + 5]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fcc	      0xba80000000	                           mov edx, 0x80	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fd1	      0xbe01000000	                              mov esi, 1	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fd6	      0xe9e5f1ffff	               jmp sym.find_section_list	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fdb	       0xf1f440000	                   nop dword [rax + rax]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000fe0	              0x55	                                push rbp	      1279	objcopy.c	
0x4000fe1	              0x53	                                push rbx	      1279	objcopy.c	
0x4000fe2	          0x4889fb	                            mov rbx, rdi	      1279	objcopy.c	
0x4000fe5	        0x4883ec08	                              sub rsp, 8	      1279	objcopy.c	
0x4000fe9	    0x8b3500000000	            mov esi, dword [0x04000fef] 	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000fef	            0x85f6	                           test esi, esi	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000ff1	            0x755d	                           jne 0x4001050	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000ff3	    0x8b0d00000000	            mov ecx, dword [0x04000ff9] 	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000ff9	            0x85c9	                           test ecx, ecx	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000ffb	            0x7553	                           jne 0x4001050	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000ffd	        0xf6432120	           test byte [rbx + 0x21], 0x20 	      1304	objcopy.c	FUNCTION_21	IF_6
0x4001001	     0xf8499000000	                            je 0x40010a0	      1304	objcopy.c	FUNCTION_21	IF_6
0x4001007	    0x8b1500000000	            mov edx, dword [0x0400100d] 	      1308	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400100d	          0x8d42fe	                      lea eax, [rdx - 2]	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001010	          0x83f801	                              cmp eax, 1	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001013	            0x7618	                           jbe 0x400102d	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001015	          0x83fa07	                              cmp edx, 7	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001018	            0x7413	                            je 0x400102d	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400101a	    0x833d00000000	               cmp dword [0x04001021], 2	      1309	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001021	            0x740a	                            je 0x400102d	      1309	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001023	    0x8b0500000000	            mov eax, dword [0x04001029] 	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4001029	            0x85c0	                           test eax, eax	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400102b	            0x7411	                            je 0x400103e	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x400102d	          0x488b33	                    mov rsi, qword [rbx]	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4001030	      0xbf00000000	                              mov edi, 0	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4001035	      0xb907000000	                              mov ecx, 7	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x400103a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x400103c	            0x7552	                           jne 0x4001090	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x400103e	          0x83fa05	                              cmp edx, 5	      1319	objcopy.c	FUNCTION_21	IF_6	IF_9
0x4001041	     0xf84c1000000	                            je 0x4001108	      1319	objcopy.c	FUNCTION_21	IF_6	IF_9
0x4001047	          0x83fa04	                              cmp edx, 4	      1322	objcopy.c	FUNCTION_21	IF_6	IF_10
0x400104a	            0x755a	                           jne 0x40010a6	      1322	objcopy.c	FUNCTION_21	IF_6	IF_10
0x400104c	            0x31c0	                            xor eax, eax	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x400104e	            0xeb45	                           jmp 0x4001095	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x4001050	          0x488b3b	                    mov rdi, qword [rbx]	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x4001053	            0x31f6	                            xor esi, esi	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x4001055	      0xba01000000	                              mov edx, 1	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x400105a	      0xe861f1ffff	              call sym.find_section_list	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x400105f	          0x488b3b	                    mov rdi, qword [rbx]	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x4001062	          0x4889c5	                            mov rbp, rax	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x4001065	            0x31f6	                            xor esi, esi	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x4001067	      0xba02000000	                              mov edx, 2	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x400106c	      0xe84ff1ffff	              call sym.find_section_list	      1288	objcopy.c	FUNCTION_21	IF_1	CALL_2
0x4001071	          0x4885ed	                           test rbp, rbp	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x4001074	            0x7405	                            je 0x400107b	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x4001076	          0x4885c0	                           test rax, rax	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x4001079	            0x7566	                           jne 0x40010e1	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x400107b	          0x4885ed	                           test rbp, rbp	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x400107e	            0x7448	                            je 0x40010c8	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001080	          0x4889df	                            mov rdi, rbx	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001083	      0xe808feffff	       call sym.is_update_section.isra.8	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001088	            0x85c0	                           test eax, eax	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x400108a	     0xf8586000000	                           jne 0x4001116	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4001090	      0xb801000000	                              mov eax, 1	      1299	objcopy.c	FUNCTION_21	IF_1	IF_4
0x4001095	        0x4883c408	                              add rsp, 8	      1330	objcopy.c	FUNCTION_21
0x4001099	              0x5b	                                 pop rbx	      1330	objcopy.c	FUNCTION_21
0x400109a	              0x5d	                                 pop rbp	      1330	objcopy.c	FUNCTION_21
0x400109b	              0xc3	                                     ret	      1330	objcopy.c	FUNCTION_21
0x400109c	         0xf1f4000	                         nop dword [rax]	      1330	objcopy.c	FUNCTION_21
0x40010a0	    0x8b1500000000	            mov edx, dword [0x040010a6] 	      1330	objcopy.c	FUNCTION_21
0x40010a6	            0x31c0	                            xor eax, eax	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x40010a8	          0x83fa06	                              cmp edx, 6	      1326	objcopy.c	FUNCTION_21	IF_11
0x40010ab	            0x75e8	                           jne 0x4001095	      1326	objcopy.c	FUNCTION_21	IF_11
0x40010ad	          0x488b3b	                    mov rdi, qword [rbx]	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40010b0	      0xe87bfeffff	         call sym.is_dwo_section.isra.11	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40010b5	            0x85c0	                           test eax, eax	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40010b7	           0xf94c0	                                 sete al	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40010ba	        0x4883c408	                              add rsp, 8	      1330	objcopy.c	FUNCTION_21
0x40010be	           0xfb6c0	                           movzx eax, al	      1327	objcopy.c	FUNCTION_21	CALL_10
0x40010c1	              0x5b	                                 pop rbx	      1330	objcopy.c	FUNCTION_21
0x40010c2	              0x5d	                                 pop rbp	      1330	objcopy.c	FUNCTION_21
0x40010c3	              0xc3	                                     ret	      1330	objcopy.c	FUNCTION_21
0x40010c4	         0xf1f4000	                         nop dword [rax]	      1330	objcopy.c	FUNCTION_21
0x40010c8	    0x8b1500000000	            mov edx, dword [0x040010ce] 	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x40010ce	            0x85d2	                           test edx, edx	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x40010d0	     0xf8427ffffff	                            je 0x4000ffd	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x40010d6	          0x4885c0	                           test rax, rax	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x40010d9	     0xf851effffff	                           jne 0x4000ffd	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x40010df	            0xebaf	                           jmp 0x4001090	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x40010e1	          0x488b1b	                    mov rbx, qword [rbx]	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x40010e4	      0xba05000000	                              mov edx, 5	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x40010e9	      0xbe00000000	                              mov esi, 0	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x40010ee	            0x31ff	                            xor edi, edi	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40010f0	      0xe800000000	                          call 0x40010f5	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40010f5	          0x4889de	                            mov rsi, rbx	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40010f8	          0x4889c7	                            mov rdi, rax	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40010fb	            0x31c0	                            xor eax, eax	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x40010fd	      0xe800000000	                          call 0x4001102	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001102	    0x660f1f440000	                    nop word [rax + rax]	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001108	          0x488b3b	                    mov rdi, qword [rbx]	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x400110b	        0x4883c408	                              add rsp, 8	      1330	objcopy.c	FUNCTION_21
0x400110f	              0x5b	                                 pop rbx	      1330	objcopy.c	FUNCTION_21
0x4001110	              0x5d	                                 pop rbp	      1330	objcopy.c	FUNCTION_21
0x4001111	      0xe91afeffff	          jmp sym.is_dwo_section.isra.11	      1320	objcopy.c	FUNCTION_21	IF_6	CALL_9
0x4001116	          0x488b1b	                    mov rbx, qword [rbx]	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001119	      0xba05000000	                              mov edx, 5	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x400111e	      0xbe00000000	                              mov esi, 0	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001123	            0xebc9	                           jmp 0x40010ee	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001125	              0x90	                                     nop	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001126	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001130	            0x4154	                                push r12	      1438	objcopy.c	FUNCTION_26
0x4001132	              0x55	                                push rbp	      1438	objcopy.c	FUNCTION_26
0x4001133	          0x4889fd	                            mov rbp, rdi	      1438	objcopy.c	FUNCTION_26
0x4001136	              0x53	                                push rbx	      1438	objcopy.c	FUNCTION_26
0x4001137	        0x488b4608	                mov rax, qword [rsi + 8]	      1439	objcopy.c	FUNCTION_26
0x400113b	          0x4989f4	                            mov r12, rsi	      1438	objcopy.c	FUNCTION_26
0x400113e	          0x4889f7	                            mov rdi, rsi	      1439	objcopy.c	FUNCTION_26
0x4001141	    0xff9000020000	                call qword [rax + 0x200]	      1439	objcopy.c	FUNCTION_26
0x4001147	          0x4889c3	                            mov rbx, rax	      1439	objcopy.c	FUNCTION_26
0x400114a	        0x488b4508	                mov rax, qword [rbp + 8]	      1441	objcopy.c	FUNCTION_26
0x400114e	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	      1444	objcopy.c	FUNCTION_26	IF_1
0x4001152	        0x48894308	                mov qword [rbx + 8], rax	      1441	objcopy.c	FUNCTION_26
0x4001156	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1442	objcopy.c	FUNCTION_26
0x400115a	          0x4885f6	                           test rsi, rsi	      1444	objcopy.c	FUNCTION_26	IF_1
0x400115d	        0x48894310	             mov qword [rbx + 0x10], rax	      1442	objcopy.c	FUNCTION_26
0x4001161	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      1443	objcopy.c	FUNCTION_26
0x4001164	          0x894318	             mov dword [rbx + 0x18], eax	      1443	objcopy.c	FUNCTION_26
0x4001167	            0x741f	                            je 0x4001188	      1444	objcopy.c	FUNCTION_26	IF_1
0x4001169	          0x4c89e7	                            mov rdi, r12	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x400116c	      0xe800000000	                          call 0x4001171	      1446	objcopy.c	FUNCTION_26	IF_1	CALL_1
0x4001171	          0x4885c0	                           test rax, rax	      1447	objcopy.c	FUNCTION_26	IF_1	IF_2
0x4001174	            0x7422	                            je 0x4001198	      1447	objcopy.c	FUNCTION_26	IF_1	IF_2
0x4001176	        0x48894320	             mov qword [rbx + 0x20], rax	      1449	objcopy.c	FUNCTION_26	IF_1
0x400117a	          0x4889d8	                            mov rax, rbx	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x400117d	              0x5b	                                 pop rbx	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x400117e	              0x5d	                                 pop rbp	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x400117f	            0x415c	                                 pop r12	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001181	              0xc3	                                     ret	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001182	    0x660f1f440000	                    nop word [rax + rax]	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001188	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1452	objcopy.c	FUNCTION_26	ELSE_1
0x4001190	          0x4889d8	                            mov rax, rbx	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001193	              0x5b	                                 pop rbx	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001194	              0x5d	                                 pop rbp	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001195	            0x415c	                                 pop r12	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001197	              0xc3	                                     ret	      1454	objcopy.c	FUNCTION_26	ELSE_1
0x4001198	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x400119c	      0xbe00000000	                              mov esi, 0	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011a1	            0x31ff	                            xor edi, edi	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011a3	      0xba05000000	                              mov edx, 5	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011a8	      0xe800000000	                          call 0x40011ad	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011ad	          0x4889de	                            mov rsi, rbx	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011b0	          0x4889c7	                            mov rdi, rax	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011b3	            0x31c0	                            xor eax, eax	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011b5	      0xe800000000	                          call 0x40011ba	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011ba	    0x660f1f440000	                    nop word [rax + rax]	      1448	objcopy.c	FUNCTION_26	IF_1	CALL_3
0x40011c0	        0x4883ec28	                           sub rsp, 0x28	      1182	objcopy.c	FUNCTION_16
0x40011c4	    0x8b1500000000	            mov edx, dword [0x040011ca] 	      1183	objcopy.c	FUNCTION_16	IF_1
0x40011ca	          0x4889f0	                            mov rax, rsi	      1182	objcopy.c	FUNCTION_16
0x40011cd	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1182	objcopy.c	FUNCTION_16
0x40011d6	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1182	objcopy.c	FUNCTION_16
0x40011db	            0x31c9	                            xor ecx, ecx	      1182	objcopy.c	FUNCTION_16
0x40011dd	            0x85d2	                           test edx, edx	      1183	objcopy.c	FUNCTION_16	IF_1
0x40011df	            0x752f	                           jne 0x4001210	      1183	objcopy.c	FUNCTION_16	IF_1
0x40011e1	          0x4889fe	                            mov rsi, rdi	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011e4	          0x4889c7	                            mov rdi, rax	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011e7	      0xe800000000	                          call 0x40011ec	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011ec	          0x4885c0	                           test rax, rax	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011ef	           0xf95c0	                                setne al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011f2	           0xfb6c0	                           movzx eax, al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40011f5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1196	objcopy.c	FUNCTION_16
0x40011fa	    0x644833142528	                xor rdx, qword fs:[0x28]	      1196	objcopy.c	FUNCTION_16
0x4001203	            0x752d	                           jne 0x4001232	      1196	objcopy.c	FUNCTION_16
0x4001205	        0x4883c428	                           add rsp, 0x28	      1196	objcopy.c	FUNCTION_16
0x4001209	              0xc3	                                     ret	      1196	objcopy.c	FUNCTION_16
0x400120a	    0x660f1f440000	                    nop word [rax + rax]	      1196	objcopy.c	FUNCTION_16
0x4001210	        0x48893c24	                    mov qword [rsp], rdi	      1187	objcopy.c	FUNCTION_16	IF_1
0x4001214	          0x4889e2	                            mov rdx, rsp	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001217	          0x4889c7	                            mov rdi, rax	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x400121a	      0xbe00000000	                              mov esi, 0	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x400121f	    0xc74424080000	                  mov dword [rsp + 8], 0	      1188	objcopy.c	FUNCTION_16	IF_1
0x4001227	      0xe800000000	                          call 0x400122c	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x400122c	        0x8b442408	                mov eax, dword [rsp + 8]	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001230	            0xebc3	                           jmp 0x40011f5	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001232	      0xe800000000	                          call 0x4001237	      1196	objcopy.c	FUNCTION_16
0x4001237	    0x660f1f840000	                    nop word [rax + rax]	      1196	objcopy.c	FUNCTION_16
0x4001240	            0x4154	                                push r12	      1335	objcopy.c	
0x4001242	              0x55	                                push rbp	      1335	objcopy.c	
0x4001243	              0x53	                                push rbx	      1335	objcopy.c	
0x4001244	          0x4889fb	                            mov rbx, rdi	      1335	objcopy.c	
0x4001247	      0xe894fdffff	     call sym.is_strip_section_1.isra.13	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x400124c	            0x85c0	                           test eax, eax	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x400124e	     0xf859f000000	                           jne 0x40012f3	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x4001254	        0xf6432302	               test byte [rbx + 0x23], 2	      1340	objcopy.c	FUNCTION_22	IF_2
0x4001258	            0x89c5	                            mov ebp, eax	      1340	objcopy.c	FUNCTION_22	IF_2
0x400125a	            0x7478	                            je 0x40012d4	      1340	objcopy.c	FUNCTION_22	IF_2
0x400125c	    0x488bb3f00000	            mov rsi, qword [rbx + 0xf0] 	      1346	objcopy.c	FUNCTION_22	IF_2	CALL_2
0x4001263	    0x488bbbe00000	            mov rdi, qword [rbx + 0xe0] 	      1346	objcopy.c	FUNCTION_22	IF_2	CALL_2
0x400126a	      0xe851fbffff	         call sym.group_signature.isra.2	      1346	objcopy.c	FUNCTION_22	IF_2	CALL_2
0x400126f	          0x4885c0	                           test rax, rax	      1348	objcopy.c	FUNCTION_22	IF_2	IF_3
0x4001272	            0x747f	                            je 0x40012f3	      1348	objcopy.c	FUNCTION_22	IF_2	IF_3
0x4001274	    0x833d00000000	               cmp dword [0x0400127b], 7	      1355	objcopy.c	FUNCTION_22	IF_2	IF_4
0x400127b	        0x4c8b6008	                mov r12, qword [rax + 8]	      1354	objcopy.c	FUNCTION_22	IF_2
0x400127f	            0x745f	                            je 0x40012e0	      1355	objcopy.c	FUNCTION_22	IF_2	IF_4
0x4001281	    0x488b35000000	            mov rsi, qword [0x04001288] 	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001288	          0x4c89e7	                            mov rdi, r12	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x400128b	      0xe830ffffff	            call sym.is_specified_symbol	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001290	            0x85c0	                           test eax, eax	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001292	            0x755f	                           jne 0x40012f3	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001294	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x400129b	    0x4c8ba0c00000	            mov r12, qword [rax + 0xc0] 	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x40012a2	          0x4d85e4	                           test r12, r12	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40012a5	            0x744c	                            je 0x40012f3	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40012a7	          0x4c89e3	                            mov rbx, r12	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40012aa	            0xeb1c	                           jmp 0x40012c8	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40012ac	         0xf1f4000	                         nop dword [rax]	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40012b0	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40012b7	    0x488b98c00000	            mov rbx, qword [rax + 0xc0] 	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40012be	          0x4939dc	                            cmp r12, rbx	      1367	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x40012c1	            0x7430	                            je 0x40012f3	      1367	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x40012c3	          0x4885db	                           test rbx, rbx	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40012c6	            0x742b	                            je 0x40012f3	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40012c8	          0x4889df	                            mov rdi, rbx	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40012cb	      0xe810fdffff	     call sym.is_strip_section_1.isra.13	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40012d0	            0x85c0	                           test eax, eax	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40012d2	            0x75dc	                           jne 0x40012b0	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40012d4	            0x89e8	                            mov eax, ebp	      1375	objcopy.c	FUNCTION_22
0x40012d6	              0x5b	                                 pop rbx	      1375	objcopy.c	FUNCTION_22
0x40012d7	              0x5d	                                 pop rbp	      1375	objcopy.c	FUNCTION_22
0x40012d8	            0x415c	                                 pop r12	      1375	objcopy.c	FUNCTION_22
0x40012da	              0xc3	                                     ret	      1375	objcopy.c	FUNCTION_22
0x40012db	       0xf1f440000	                   nop dword [rax + rax]	      1375	objcopy.c	FUNCTION_22
0x40012e0	    0x488b35000000	            mov rsi, qword [0x040012e7] 	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x40012e7	          0x4c89e7	                            mov rdi, r12	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x40012ea	      0xe8d1feffff	            call sym.is_specified_symbol	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x40012ef	            0x85c0	                           test eax, eax	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x40012f1	            0x758e	                           jne 0x4001281	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x40012f3	      0xbd01000000	                              mov ebp, 1	      1338	objcopy.c	FUNCTION_22	IF_1
0x40012f8	            0x89e8	                            mov eax, ebp	      1375	objcopy.c	FUNCTION_22
0x40012fa	              0x5b	                                 pop rbx	      1375	objcopy.c	FUNCTION_22
0x40012fb	              0x5d	                                 pop rbp	      1375	objcopy.c	FUNCTION_22
0x40012fc	            0x415c	                                 pop r12	      1375	objcopy.c	FUNCTION_22
0x40012fe	              0xc3	                                     ret	      1375	objcopy.c	FUNCTION_22
0x40012ff	              0x90	                                     nop	      1375	objcopy.c	FUNCTION_22
0x4001300	            0x4157	                                push r15	      3664	objcopy.c	FUNCTION_45
0x4001302	            0x4156	                                push r14	      3664	objcopy.c	FUNCTION_45
0x4001304	          0x4989fe	                            mov r14, rdi	      3664	objcopy.c	FUNCTION_45
0x4001307	            0x4155	                                push r13	      3664	objcopy.c	FUNCTION_45
0x4001309	            0x4154	                                push r12	      3664	objcopy.c	FUNCTION_45
0x400130b	          0x4889f7	                            mov rdi, rsi	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x400130e	              0x55	                                push rbp	      3664	objcopy.c	FUNCTION_45
0x400130f	              0x53	                                push rbx	      3664	objcopy.c	FUNCTION_45
0x4001310	          0x4889f5	                            mov rbp, rsi	      3664	objcopy.c	FUNCTION_45
0x4001313	          0x4989d5	                            mov r13, rdx	      3664	objcopy.c	FUNCTION_45
0x4001316	        0x4883ec18	                           sub rsp, 0x18	      3664	objcopy.c	FUNCTION_45
0x400131a	      0xe821ffffff	       call sym.is_strip_section.isra.17	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x400131f	            0x85c0	                           test eax, eax	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001321	            0x7415	                            je 0x4001338	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001323	        0x4883c418	                           add rsp, 0x18	      3830	objcopy.c	FUNCTION_45
0x4001327	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001328	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001329	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x400132b	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x400132d	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x400132f	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x4001331	              0xc3	                                     ret	      3830	objcopy.c	FUNCTION_45
0x4001332	    0x660f1f440000	                    nop word [rax + rax]	      3830	objcopy.c	FUNCTION_45
0x4001338	    0x488b1d000000	            mov rbx, qword [0x0400133f] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400133f	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3682	objcopy.c	FUNCTION_45
0x4001342	        0x4c8b6500	                    mov r12, qword [rbp]	      3681	objcopy.c	FUNCTION_45
0x4001346	          0x4885db	                           test rbx, rbx	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001349	        0x89442408	                mov dword [rsp + 8], eax	      3682	objcopy.c	FUNCTION_45
0x400134d	            0x7516	                           jne 0x4001365	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400134f	      0xe9ec010000	                           jmp 0x4001540	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001354	         0xf1f4000	                         nop dword [rax]	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001358	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400135c	          0x4885db	                           test rbx, rbx	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400135f	     0xf84db010000	                            je 0x4001540	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001365	          0x488b3b	                    mov rdi, qword [rbx]	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001368	          0x4c89e6	                            mov rsi, r12	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x400136b	      0xe800000000	                          call 0x4001370	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001370	            0x85c0	                           test eax, eax	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001372	            0x75e4	                           jne 0x4001358	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001374	        0x448b7b10	           mov r15d, dword [rbx + 0x10] 	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4001378	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3633	objcopy.c	FUNCTION_43	FOR_1	IF_1
0x400137c	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      3682	objcopy.c	FUNCTION_45
0x4001380	    0x440f447c2408	             cmove r15d, dword [rsp + 8]	      3682	objcopy.c	FUNCTION_45
0x4001386	    0x488b35000000	            mov rsi, qword [0x0400138d] 	      3686	objcopy.c	FUNCTION_45	IF_2
0x400138d	          0x4885f6	                           test rsi, rsi	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001390	            0x7407	                            je 0x4001399	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001392	      0xf644240801	                  test byte [rsp + 8], 1	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001397	            0x7510	                           jne 0x40013a9	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001399	    0x488b35000000	            mov rsi, qword [0x040013a0] 	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x40013a0	          0x4885f6	                           test rsi, rsi	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x40013a3	     0xf84ec020000	                            je 0x4001695	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x40013a9	          0x4889f7	                            mov rdi, rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013ac	      0x4889742408	                mov qword [rsp + 8], rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013b1	      0xe800000000	                          call 0x40013b6	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013b6	          0x4889df	                            mov rdi, rbx	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013b9	          0x4989c4	                            mov r12, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013bc	      0xe800000000	                          call 0x40013c1	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013c1	      0x498d7c0401	                lea rdi, [r12 + rax + 1]	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013c6	      0xe800000000	                          call 0x40013cb	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013cb	      0x488b742408	                mov rsi, qword [rsp + 8]	       110	string3.h	FUNCTION_70	CALL_3
0x40013d0	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_70	CALL_3
0x40013d3	          0x4989c4	                            mov r12, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013d6	      0xe800000000	                          call 0x40013db	       110	string3.h	FUNCTION_70	CALL_3
0x40013db	          0x4889de	                            mov rsi, rbx	       148	string3.h	FUNCTION_74	CALL_3
0x40013de	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_74	CALL_3
0x40013e1	      0xe800000000	                          call 0x40013e6	       148	string3.h	FUNCTION_74	CALL_3
0x40013e6	        0x488b7d00	                    mov rdi, qword [rbp]	       148	string3.h	FUNCTION_74	CALL_3
0x40013ea	            0x31f6	                            xor esi, esi	      3704	objcopy.c	FUNCTION_45	CALL_8
0x40013ec	      0xba40000000	                           mov edx, 0x40	      3704	objcopy.c	FUNCTION_45	CALL_8
0x40013f1	      0xe8caedffff	              call sym.find_section_list	      3704	objcopy.c	FUNCTION_45	CALL_8
0x40013f6	          0x4885c0	                           test rax, rax	      3706	objcopy.c	FUNCTION_45	IF_5
0x40013f9	            0x746d	                            je 0x4001468	      3706	objcopy.c	FUNCTION_45	IF_5
0x40013fb	          0x4589f8	                           mov r8d, r15d	      3707	objcopy.c	FUNCTION_45	IF_5
0x40013fe	    0x4181e0040100	                          and r8d, 0x104	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001405	        0x440b4028	              or r8d, dword [rax + 0x28]	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001409	          0x4589c7	                           mov r15d, r8d	      3707	objcopy.c	FUNCTION_45	IF_5
0x400140c	          0x4489fa	                           mov edx, r15d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x400140f	          0x4c89e6	                            mov rsi, r12	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001412	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001415	      0xe800000000	                          call 0x400141a	      3725	objcopy.c	FUNCTION_45	CALL_10
0x400141a	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x400141d	          0x4889c3	                            mov rbx, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001420	     0xf85b1000000	                           jne 0x40014d7	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001426	      0xba05000000	                              mov edx, 5	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x400142b	      0xbe00000000	                              mov esi, 0	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001430	            0x31ff	                            xor edi, edi	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001432	            0x31db	                            xor ebx, ebx	      3730	objcopy.c	FUNCTION_45	IF_8
0x4001434	      0xe800000000	                          call 0x4001439	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001439	    0xc70500000000	               mov dword [0x04001443], 1	      3828	objcopy.c	FUNCTION_45
0x4001443	        0x4883c418	                           add rsp, 0x18	      3830	objcopy.c	FUNCTION_45
0x4001447	          0x4889da	                            mov rdx, rbx	      3829	objcopy.c	FUNCTION_45	CALL_25
0x400144a	          0x4c89ee	                            mov rsi, r13	      3829	objcopy.c	FUNCTION_45	CALL_25
0x400144d	          0x4889c1	                            mov rcx, rax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001450	            0x31ff	                            xor edi, edi	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001452	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001453	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001454	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x4001456	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x4001458	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x400145a	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x400145c	            0x31c0	                            xor eax, eax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x400145e	      0xe900000000	                           jmp 0x4001463	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001463	       0xf1f440000	                   nop dword [rax + rax]	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001468	    0x833d00000000	               cmp dword [0x0400146f], 4	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x400146f	            0x759b	                           jne 0x400140c	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001471	    0x41f7c7010000	                    test r15d, 0x2000001	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001478	            0x7492	                            je 0x400140c	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x400147a	        0x498b4608	                mov rax, qword [r14 + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x400147e	          0x8b4008	                mov eax, dword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001481	          0x83f805	                              cmp eax, 5	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001484	     0xf845e020000	                            je 0x40016e8	      1381	objcopy.c	FUNCTION_23	IF_1
0x400148a	          0x83f802	                              cmp eax, 2	      1389	objcopy.c	FUNCTION_23	IF_2
0x400148d	     0xf842b020000	                            je 0x40016be	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001493	        0x498b4508	                mov rax, qword [r13 + 8]	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001497	    0x4181e7fdfeff	                    and r15d, 0xfdfffefd	      3712	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x400149e	        0x83780805	                  cmp dword [rax + 8], 5	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x40014a2	     0xf8564ffffff	                           jne 0x400140c	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x40014a8	    0x816520fdfeff	      and dword [rbp + 0x20], 0xfdfffefd	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x40014af	          0x4489fa	                           mov edx, r15d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014b2	          0x4c89e6	                            mov rsi, r12	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014b5	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014b8	      0xe800000000	                          call 0x40014bd	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014bd	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x40014c0	          0x4889c3	                            mov rbx, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014c3	     0xf845dffffff	                            je 0x4001426	      3727	objcopy.c	FUNCTION_45	IF_8
0x40014c9	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3734	objcopy.c	FUNCTION_45	CALL_12
0x40014d0	    0xc74004080000	                  mov dword [rax + 4], 8	      3734	objcopy.c	FUNCTION_45	CALL_12
0x40014d7	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      3736	objcopy.c	FUNCTION_45
0x40014db	          0x4c89ea	                            mov rdx, r13	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014de	          0x4889ee	                            mov rsi, rbp	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014e1	          0x4c89f7	                            mov rdi, r14	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014e4	      0xe800000000	                          call 0x40014e9	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014e9	    0x8b0d00000000	            mov ecx, dword [0x040014ef] 	      3738	objcopy.c	FUNCTION_45	IF_10
0x40014ef	            0x85c9	                           test ecx, ecx	      3738	objcopy.c	FUNCTION_45	IF_10
0x40014f1	     0xf8859010000	                            js 0x4001650	      3738	objcopy.c	FUNCTION_45	IF_10
0x40014f7	    0x48630d000000	         movsxd rcx, dword [0x040014fe] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x40014fe	            0x31d2	                            xor edx, edx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001500	      0x488d4408ff	                lea rax, [rax + rcx - 1]	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001505	          0x48f7f1	                                 div rcx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001508	    0x486315000000	         movsxd rdx, dword [0x0400150f] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x400150f	        0x480fafc2	                           imul rax, rdx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001513	          0x4889c2	                            mov rdx, rax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001516	          0x4889de	                            mov rsi, rbx	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001519	          0x4c89ef	                            mov rdi, r13	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x400151c	      0xe800000000	                          call 0x4001521	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001521	            0x85c0	                           test eax, eax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001523	            0x752b	                           jne 0x4001550	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001525	      0xba05000000	                              mov edx, 5	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x400152a	      0xbe00000000	                              mov esi, 0	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x400152f	            0x31ff	                            xor edi, edi	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001531	      0xe800000000	                          call 0x4001536	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001536	      0xe9fefeffff	                           jmp 0x4001439	      3745	objcopy.c	FUNCTION_45	IF_12
0x400153b	       0xf1f440000	                   nop dword [rax + rax]	      3745	objcopy.c	FUNCTION_45	IF_12
0x4001540	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      3682	objcopy.c	FUNCTION_45
0x4001545	          0x4c89e3	                            mov rbx, r12	      3681	objcopy.c	FUNCTION_45
0x4001548	      0xe939feffff	                           jmp 0x4001386	      3681	objcopy.c	FUNCTION_45
0x400154d	           0xf1f00	                         nop dword [rax]	      3681	objcopy.c	FUNCTION_45
0x4001550	        0x488b7d00	                    mov rdi, qword [rbp]	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001554	            0x31f6	                            xor esi, esi	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001556	      0xba0c000000	                            mov edx, 0xc	      3749	objcopy.c	FUNCTION_45	CALL_16
0x400155b	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	      3748	objcopy.c	FUNCTION_45
0x400155f	      0xe85cecffff	              call sym.find_section_list	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001564	          0x4885c0	                           test rax, rax	      3751	objcopy.c	FUNCTION_45	IF_13
0x4001567	     0xf8442010000	                            je 0x40016af	      3751	objcopy.c	FUNCTION_45	IF_13
0x400156d	        0xf6401404	               test byte [rax + 0x14], 4	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001571	     0xf8409010000	                            je 0x4001680	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001577	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x400157b	        0x804b2401	                 or byte [rbx + 0x24], 1	      1688	bfd.h	FUNCTION_94
0x400157f	        0x48894330	             mov qword [rbx + 0x30], rax	      1687	bfd.h	FUNCTION_94
0x4001583	            0x31f6	                            xor esi, esi	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4001585	        0x488b7d00	                    mov rdi, qword [rbp]	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4001589	        0x48894328	             mov qword [rbx + 0x28], rax	      1687	bfd.h	FUNCTION_94
0x400158d	      0xba30000000	                           mov edx, 0x30	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4001592	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	      3767	objcopy.c	FUNCTION_45
0x4001596	      0xe825ecffff	              call sym.find_section_list	      3768	objcopy.c	FUNCTION_45	CALL_19
0x400159b	          0x4885c0	                           test rax, rax	      3770	objcopy.c	FUNCTION_45	IF_16
0x400159e	     0xf84fc000000	                            je 0x40016a0	      3770	objcopy.c	FUNCTION_45	IF_16
0x40015a4	        0xf6401420	           test byte [rax + 0x14], 0x20 	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015a8	     0xf84c2000000	                            je 0x4001670	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015ae	        0x4c036020	             add r12, qword [rax + 0x20]	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015b2	          0x4c89e0	                            mov rax, r12	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015b5	        0x48894330	             mov qword [rbx + 0x30], rax	      3780	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40015b9	          0x8b4570	            mov eax, dword [rbp + 0x70] 	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x40015bc	         0xfb65324	           movzx edx, byte [rbx + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x40015c0	          0x894370	             mov dword [rbx + 0x70], eax	      1696	bfd.h	FUNCTION_95
0x40015c3	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	      3793	objcopy.c	FUNCTION_45
0x40015c9	          0x83e2cf	                     and edx, 0xffffffcf	      3796	objcopy.c	FUNCTION_45
0x40015cc	    0x8983c4000000	             mov dword [rbx + 0xc4], eax	      3793	objcopy.c	FUNCTION_45
0x40015d2	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x40015d6	          0x83e030	                           and eax, 0x30	      3796	objcopy.c	FUNCTION_45
0x40015d9	             0x9d0	                             or eax, edx	      3796	objcopy.c	FUNCTION_45
0x40015db	          0x884324	               mov byte [rbx + 0x24], al	      3796	objcopy.c	FUNCTION_45
0x40015de	        0xf6452302	               test byte [rbp + 0x23], 2	      3804	objcopy.c	FUNCTION_45	IF_19
0x40015e2	        0x48895d68	            mov qword [rbp + 0x68], rbx 	      3801	objcopy.c	FUNCTION_45
0x40015e6	    0x48c745600000	               mov qword [rbp + 0x60], 0	      3802	objcopy.c	FUNCTION_45
0x40015ee	            0x7429	                            je 0x4001619	      3804	objcopy.c	FUNCTION_45	IF_19
0x40015f0	    0x4c8bbde00000	            mov r15, qword [rbp + 0xe0] 	      3804	objcopy.c	FUNCTION_45	IF_19
0x40015f7	    0x488bb5f00000	            mov rsi, qword [rbp + 0xf0] 	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x40015fe	          0x4c89ff	                            mov rdi, r15	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x4001601	      0xe8baf7ffff	         call sym.group_signature.isra.2	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x4001606	          0x4885c0	                           test rax, rax	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001609	            0x740e	                            je 0x4001619	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x400160b	        0x498b5608	                mov rdx, qword [r14 + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x400160f	        0x83481820	             or dword [rax + 0x18], 0x20	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001613	        0x837a0805	                  cmp dword [rdx + 8], 5	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001617	            0x7473	                            je 0x400168c	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001619	        0x498b4508	                mov rax, qword [r13 + 8]	      3818	objcopy.c	FUNCTION_45	IF_22
0x400161d	          0x4889d9	                            mov rcx, rbx	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001620	          0x4c89ea	                            mov rdx, r13	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001623	          0x4889ee	                            mov rsi, rbp	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001626	          0x4c89f7	                            mov rdi, r14	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001629	    0xff9050010000	                call qword [rax + 0x150]	      3818	objcopy.c	FUNCTION_45	IF_22
0x400162f	            0x85c0	                           test eax, eax	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001631	     0xf85ecfcffff	                           jne 0x4001323	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001637	      0xba05000000	                              mov edx, 5	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x400163c	      0xbe00000000	                              mov esi, 0	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001641	            0x31ff	                            xor edi, edi	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001643	      0xe800000000	                          call 0x4001648	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001648	      0xe9ecfdffff	                           jmp 0x4001439	      3821	objcopy.c	FUNCTION_45	IF_22
0x400164d	           0xf1f00	                         nop dword [rax]	      3821	objcopy.c	FUNCTION_45	IF_22
0x4001650	    0x8b1500000000	            mov edx, dword [0x04001656] 	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001656	            0x85d2	                           test edx, edx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001658	      0xba00000000	                              mov edx, 0	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x400165d	        0x480f45c2	                         cmovne rax, rdx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001661	      0xe9adfeffff	                           jmp 0x4001513	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001670	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001674	      0xe93cffffff	                           jmp 0x40015b5	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001679	     0xf1f80000000	                         nop dword [rax]	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001680	        0x4c036018	             add r12, qword [rax + 0x18]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001684	          0x4c89e0	                            mov rax, r12	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001687	      0xe9effeffff	                           jmp 0x400157b	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x400168c	    0x498987b00000	             mov qword [r15 + 0xb0], rax	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001693	            0xeb84	                           jmp 0x4001619	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001695	          0x4c89e7	                            mov rdi, r12	      3681	objcopy.c	FUNCTION_45
0x4001698	          0x4989dc	                            mov r12, rbx	      3681	objcopy.c	FUNCTION_45
0x400169b	      0xe94afdffff	                           jmp 0x40013ea	      3681	objcopy.c	FUNCTION_45
0x40016a0	          0x4c89e0	                            mov rax, r12	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40016a3	    0x480305000000	             add rax, qword [0x040016aa]	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40016aa	      0xe906ffffff	                           jmp 0x40015b5	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40016af	          0x4c89e0	                            mov rax, r12	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40016b2	    0x480305000000	             add rax, qword [0x040016b9]	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40016b9	      0xe9bdfeffff	                           jmp 0x400157b	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40016be	        0x488b7500	                    mov rsi, qword [rbp]	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016c2	      0xbf00000000	                              mov edi, 0	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016c7	      0xb909000000	                              mov ecx, 9	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016cc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016ce	           0xf94c0	                                 sete al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016d1	           0xfb6c0	                           movzx eax, al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016d4	            0x85c0	                           test eax, eax	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016d6	     0xf8530fdffff	                           jne 0x400140c	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016dc	      0xe9b2fdffff	                           jmp 0x4001493	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016e1	     0xf1f80000000	                         nop dword [rax]	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016e8	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016ef	        0x83780407	                  cmp dword [rax + 4], 7	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016f3	           0xf94c0	                                 sete al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016f6	           0xfb6c0	                           movzx eax, al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016f9	            0xebd9	                           jmp 0x40016d4	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016fb	       0xf1f440000	                   nop dword [rax + rax]	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4001700	    0x8b0d00000000	            mov ecx, dword [0x04001706] 	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001706	            0x85c9	                           test ecx, ecx	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001708	            0x750a	                           jne 0x4001714	      3843	objcopy.c	FUNCTION_46	IF_1
0x400170a	    0x8b0500000000	            mov eax, dword [0x04001710] 	      3846	objcopy.c	FUNCTION_46	IF_2
0x4001710	            0x85c0	                           test eax, eax	      3846	objcopy.c	FUNCTION_46	IF_2
0x4001712	            0x740c	                            je 0x4001720	      3846	objcopy.c	FUNCTION_46	IF_2
0x4001714	      0xb801000000	                              mov eax, 1	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001719	              0xc3	                                     ret	      3871	objcopy.c	FUNCTION_46
0x400171a	    0x660f1f440000	                    nop word [rax + rax]	      3871	objcopy.c	FUNCTION_46
0x4001720	            0x4154	                                push r12	      3836	objcopy.c	FUNCTION_46
0x4001722	              0x55	                                push rbp	      3836	objcopy.c	FUNCTION_46
0x4001723	          0x4189d4	                           mov r12d, edx	      3836	objcopy.c	FUNCTION_46
0x4001726	              0x53	                                push rbx	      3836	objcopy.c	FUNCTION_46
0x4001727	          0x4889fb	                            mov rbx, rdi	      3836	objcopy.c	FUNCTION_46
0x400172a	          0x4889f7	                            mov rdi, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400172d	          0x4889f5	                            mov rbp, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001730	      0xe80bfbffff	       call sym.is_strip_section.isra.17	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001735	            0x85c0	                           test eax, eax	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001737	            0x740f	                            je 0x4001748	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001739	      0xb801000000	                              mov eax, 1	      3844	objcopy.c	FUNCTION_46	IF_1
0x400173e	              0x5b	                                 pop rbx	      3871	objcopy.c	FUNCTION_46
0x400173f	              0x5d	                                 pop rbp	      3871	objcopy.c	FUNCTION_46
0x4001740	            0x415c	                                 pop r12	      3871	objcopy.c	FUNCTION_46
0x4001742	              0xc3	                                     ret	      3871	objcopy.c	FUNCTION_46
0x4001743	       0xf1f440000	                   nop dword [rax + rax]	      3871	objcopy.c	FUNCTION_46
0x4001748	          0x4889ef	                            mov rdi, rbp	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x400174b	      0xe840f7ffff	       call sym.is_update_section.isra.8	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x4001750	            0x85c0	                           test eax, eax	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x4001752	            0x75e5	                           jne 0x4001739	      3852	objcopy.c	FUNCTION_46	IF_4	CALL_2
0x4001754	          0x4585e4	                         test r12d, r12d	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4001757	            0x7527	                           jne 0x4001780	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4001759	        0xf6452302	               test byte [rbp + 0x23], 2	      3861	objcopy.c	FUNCTION_46	IF_6
0x400175d	            0x75da	                           jne 0x4001739	      3861	objcopy.c	FUNCTION_46	IF_6
0x400175f	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001764	           0xf94c2	                                 sete dl	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001767	      0x48837d6800	               cmp qword [rbp + 0x68], 0	      3844	objcopy.c	FUNCTION_46	IF_1
0x400176c	           0xf94c0	                                 sete al	      3844	objcopy.c	FUNCTION_46	IF_1
0x400176f	             0x9d0	                             or eax, edx	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001771	           0xfb6c0	                           movzx eax, al	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001774	            0xebc8	                           jmp 0x400173e	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001776	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001780	    0x488d95e00000	                   lea rdx, [rbp + 0xe0]	      3844	objcopy.c	FUNCTION_46	IF_1
0x4001787	        0x488d7b08	                      lea rdi, [rbx + 8]	      3844	objcopy.c	FUNCTION_46	IF_1
0x400178b	          0x4889ee	                            mov rsi, rbp	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x400178e	      0xe84df7ffff	 call sym.is_merged_note_section.isra.10	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4001793	            0x85c0	                           test eax, eax	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4001795	            0x74c2	                            je 0x4001759	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4001797	            0xeba0	                           jmp 0x4001739	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x4001799	     0xf1f80000000	                         nop dword [rax]	      3857	objcopy.c	FUNCTION_46	IF_5	CALL_3
0x40017a0	            0x4156	                                push r14	      4020	objcopy.c	FUNCTION_51
0x40017a2	            0x4155	                                push r13	      4020	objcopy.c	FUNCTION_51
0x40017a4	          0x4989fd	                            mov r13, rdi	      4020	objcopy.c	FUNCTION_51
0x40017a7	            0x4154	                                push r12	      4020	objcopy.c	FUNCTION_51
0x40017a9	              0x55	                                push rbp	      4020	objcopy.c	FUNCTION_51
0x40017aa	          0x4989f4	                            mov r12, rsi	      4020	objcopy.c	FUNCTION_51
0x40017ad	              0x53	                                push rbx	      4020	objcopy.c	FUNCTION_51
0x40017ae	          0x4889d3	                            mov rbx, rdx	      4020	objcopy.c	FUNCTION_51
0x40017b1	      0xba01000000	                              mov edx, 1	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017b6	        0x4883ec20	                           sub rsp, 0x20	      4020	objcopy.c	FUNCTION_51
0x40017ba	    0x64488b042528	                mov rax, qword fs:[0x28]	      4020	objcopy.c	FUNCTION_51
0x40017c3	      0x4889442418	             mov qword [rsp + 0x18], rax	      4020	objcopy.c	FUNCTION_51
0x40017c8	            0x31c0	                            xor eax, eax	      4020	objcopy.c	FUNCTION_51
0x40017ca	      0xe831ffffff	                   call sym.skip_section	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017cf	            0x85c0	                           test eax, eax	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017d1	            0x753c	                           jne 0x400180f	      4026	objcopy.c	FUNCTION_51	IF_1	CALL_1
0x40017d3	    0x41f644242101	               test byte [r12 + 0x21], 1	      4036	objcopy.c	FUNCTION_51	IF_2
0x40017d9	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4034	objcopy.c	FUNCTION_51
0x40017de	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	      4029	objcopy.c	FUNCTION_51
0x40017e3	      0x4889442408	                mov qword [rsp + 8], rax	      4034	objcopy.c	FUNCTION_51
0x40017e8	            0x740a	                            je 0x40017f4	      4036	objcopy.c	FUNCTION_51	IF_2
0x40017ea	        0xf6452101	               test byte [rbp + 0x21], 1	      4037	objcopy.c	FUNCTION_51	IF_2
0x40017ee	     0xf85bc000000	                           jne 0x40018b0	      4037	objcopy.c	FUNCTION_51	IF_2
0x40017f4	        0x498b3c24	                    mov rdi, qword [r12]	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x40017f8	            0x31f6	                            xor esi, esi	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x40017fa	      0xba40000000	                           mov edx, 0x40	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x40017ff	      0xe8bce9ffff	              call sym.find_section_list	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4001804	          0x4885c0	                           test rax, rax	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4001807	            0x7406	                            je 0x400180f	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x4001809	        0xf6402901	               test byte [rax + 0x29], 1	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x400180d	            0x7521	                           jne 0x4001830	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x400180f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4139	objcopy.c	FUNCTION_51
0x4001814	    0x644833042528	                xor rax, qword fs:[0x28]	      4139	objcopy.c	FUNCTION_51
0x400181d	     0xf85c9020000	                           jne 0x4001aec	      4139	objcopy.c	FUNCTION_51
0x4001823	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x4001827	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x4001828	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x4001829	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x400182b	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x400182d	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x400182f	              0xc3	                                     ret	      4139	objcopy.c	FUNCTION_51
0x4001830	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4001835	      0xe800000000	                          call 0x400183a	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x400183a	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x400183f	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_67	CALL_6
0x4001841	          0x4989c4	                            mov r12, rax	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x4001844	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_67	CALL_6
0x4001847	          0x4c89ea	                            mov rdx, r13	        90	string3.h	FUNCTION_67	CALL_6
0x400184a	      0xe800000000	                          call 0x400184f	        90	string3.h	FUNCTION_67	CALL_6
0x400184f	            0x31c9	                            xor ecx, ecx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001851	          0x4d89e8	                             mov r8, r13	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001854	          0x4c89e2	                            mov rdx, r12	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001857	          0x4889ee	                            mov rsi, rbp	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x400185a	          0x4889df	                            mov rdi, rbx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x400185d	      0xe800000000	                          call 0x4001862	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001862	            0x85c0	                           test eax, eax	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x4001864	     0xf856e020000	                           jne 0x4001ad8	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x400186a	            0x31c9	                            xor ecx, ecx	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x400186c	            0x31ff	                            xor edi, edi	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x400186e	          0x4889ea	                            mov rdx, rbp	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4001871	          0x4889de	                            mov rsi, rbx	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4001874	    0xc70500000000	               mov dword [0x0400187e], 1	      4132	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12
0x400187e	      0xe800000000	                          call 0x4001883	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x4001883	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001888	    0x644833042528	                xor rax, qword fs:[0x28]	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001891	     0xf8555020000	                           jne 0x4001aec	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001897	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x400189b	          0x4c89e7	                            mov rdi, r12	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x400189e	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x400189f	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x40018a0	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x40018a2	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x40018a4	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x40018a6	      0xe900000000	                           jmp 0x40018ab	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x40018ab	       0xf1f440000	                   nop dword [rax + rax]	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x40018b0	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018b5	          0x4c89e6	                            mov rsi, r12	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018b8	          0x4c89ef	                            mov rdi, r13	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018bb	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4039	objcopy.c	FUNCTION_51	IF_2
0x40018c4	      0xe800000000	                          call 0x40018c9	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018c9	            0x85c0	                           test eax, eax	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018cb	     0xf84d7010000	                            je 0x4001aa8	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x40018d1	      0x4c8d442408	                       lea r8, [rsp + 8]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018d6	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018db	          0x4889da	                            mov rdx, rbx	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018de	          0x4c89e6	                            mov rsi, r12	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018e1	          0x4c89ef	                            mov rdi, r13	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018e4	      0xe800000000	                          call 0x40018e9	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018e9	            0x85c0	                           test eax, eax	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018eb	     0xf84b7010000	                            je 0x4001aa8	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x40018f1	    0x448b2d000000	           mov r13d, dword [0x040018f8] 	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x40018f8	          0x4585ed	                         test r13d, r13d	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x40018fb	     0xf84f7010000	                            je 0x4001af8	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4001901	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001906	            0x31d2	                            xor edx, edx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001908	          0x4d63d5	                        movsxd r10, r13d	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400190b	          0x4889c8	                            mov rax, rcx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400190e	          0x4989c8	                             mov r8, rcx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001911	          0x49f7f2	                                 div r10	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001914	          0x4885d2	                           test rdx, rdx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001917	     0xf85f4010000	                           jne 0x4001b11	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400191d	          0x4885c9	                           test rcx, rcx	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001920	            0x746c	                            je 0x400198e	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001922	          0x4589eb	                          mov r11d, r13d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001925	          0x4531c9	                            xor r9d, r9d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001928	        0x41c1eb1f	                          shr r11d, 0x1f	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400192c	          0x4501eb	                          add r11d, r13d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400192f	        0x4d8d6aff	                      lea r13, [r10 - 1]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001933	          0x41d1fb	                             sar r11d, 1	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001936	          0x4d63db	                        movsxd r11, r11d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001939	     0xf1f80000000	                         nop dword [rax]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001940	          0x4d85db	                           test r11, r11	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001943	            0x743e	                            je 0x4001983	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001945	      0x4b8d4c0d00	                     lea rcx, [r13 + r9]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400194a	        0x4f8d3419	                     lea r14, [r9 + r11]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400194e	          0x4c89ca	                             mov rdx, r9	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001951	     0xf1f80000000	                         nop dword [rax]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001958	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4064	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400195d	        0x488d3410	                    lea rsi, [rax + rdx]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001961	          0x4801c8	                            add rax, rcx	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001964	        0x4883c201	                              add rdx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001968	        0x440fb600	                   movzx r8d, byte [rax]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400196c	        0x4883e901	                              sub rcx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001970	          0x4939d6	                            cmp r14, rdx	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001973	           0xfb63e	                   movzx edi, byte [rsi]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001976	          0x448806	                     mov byte [rsi], r8b	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001979	          0x408838	                     mov byte [rax], dil	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400197c	            0x75da	                           jne 0x4001958	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x400197e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x4001983	          0x4d01d1	                             add r9, r10	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001986	          0x4989c8	                             mov r8, rcx	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001989	          0x4c39c9	                             cmp rcx, r9	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400198c	            0x77b2	                            ja 0x4001940	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400198e	    0x448b1d000000	           mov r11d, dword [0x04001995] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001995	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400199a	          0x4585db	                         test r11d, r11d	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400199d	     0xf88c0000000	                            js 0x4001a63	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a3	    0x4c630d000000	          movsxd r9, dword [0x040019aa] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019aa	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019af	            0x31d2	                            xor edx, edx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b6	          0x4d63eb	                        movsxd r13, r11d	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b9	    0x4c6315000000	         movsxd r10, dword [0x040019c0] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019c0	          0x4d89ee	                            mov r14, r13	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019c3	          0x49f7f1	                                  div r9	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019c6	        0x4a8d3401	                     lea rsi, [rcx + r8]	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019ca	          0x4889cf	                            mov rdi, rcx	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019cd	          0x4863c2	                         movsxd rax, edx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d0	          0x4989d4	                            mov r12, rdx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d3	          0x4929c6	                            sub r14, rax	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d6	          0x4901ce	                            add r14, rcx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019d9	          0x4139d3	                           cmp r11d, edx	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x40019dc	        0x4b8d040e	                     lea rax, [r14 + r9]	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x40019e0	        0x4c0f4cf0	                          cmovl r14, rax	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x40019e4	          0x4939f6	                            cmp r14, rsi	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019e7	            0x7349	                           jae 0x4001a32	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019e9	        0x458d42ff	                      lea r8d, [r10 - 1]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019ed	           0xf1f00	                         nop dword [rax]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x40019f0	          0x4585d2	                         test r10d, r10d	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x40019f3	            0x7e2b	                           jle 0x4001a20	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x40019f5	          0x4c39f6	                            cmp rsi, r14	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x40019f8	          0x4c89f0	                            mov rax, r14	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x40019fb	        0x4b8d3c06	                     lea rdi, [r14 + r8]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x40019ff	            0x7710	                            ja 0x4001a11	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a01	            0xeb1d	                           jmp 0x4001a20	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a03	       0xf1f440000	                   nop dword [rax + rax]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a08	        0x4883c001	                              add rax, 1	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a0c	          0x4839f0	                            cmp rax, rsi	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a0f	            0x740f	                            je 0x4001a20	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001a11	           0xfb610	                   movzx edx, byte [rax]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a14	        0x4883c101	                              add rcx, 1	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a18	          0x4839c7	                            cmp rdi, rax	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a1b	          0x8851ff	                  mov byte [rcx - 1], dl	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a1e	            0x75e8	                           jne 0x4001a08	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001a20	          0x4d01ce	                             add r14, r9	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a23	          0x4c39f6	                            cmp rsi, r14	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a26	            0x77c8	                            ja 0x40019f0	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a28	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a2d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001a32	        0x498d41ff	                       lea rax, [r9 - 1]	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a36	            0x31d2	                            xor edx, edx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a38	          0x4c29e8	                            sub rax, r13	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a3b	          0x4c01c0	                             add rax, r8	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a3e	          0x49f7f1	                                  div r9	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a41	            0x31d2	                            xor edx, edx	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a43	        0x490fafc2	                           imul rax, r10	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a47	          0x4989c0	                             mov r8, rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a4a	      0x4889442408	                mov qword [rsp + 8], rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a4f	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a53	          0x49f7f1	                                  div r9	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001a56	          0x4539e3	                          cmp r11d, r12d	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a59	            0x7d04	                           jge 0x4001a5f	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a5b	        0x4883c001	                              add rax, 1	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a5f	        0x48894530	            mov qword [rbp + 0x30], rax 	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x4001a63	            0x31c9	                            xor ecx, ecx	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a65	          0x4889fa	                            mov rdx, rdi	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a68	          0x4889ee	                            mov rsi, rbp	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a6b	          0x4889df	                            mov rdi, rbx	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a6e	      0xe800000000	                          call 0x4001a73	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a73	            0x85c0	                           test eax, eax	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a75	     0xf8587000000	                           jne 0x4001b02	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x4001a7b	            0x31ff	                            xor edi, edi	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a7d	            0x31c9	                            xor ecx, ecx	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a7f	          0x4889ea	                            mov rdx, rbp	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a82	          0x4889de	                            mov rsi, rbx	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a85	    0xc70500000000	               mov dword [0x04001a8f], 1	      4110	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001a8f	      0xe800000000	                          call 0x4001a94	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x4001a94	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4001a99	      0xe800000000	                          call 0x4001a9e	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4001a9e	      0xe96cfdffff	                           jmp 0x400180f	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001aa3	       0xf1f440000	                   nop dword [rax + rax]	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001aa8	            0x31ff	                            xor edi, edi	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001aaa	            0x31c9	                            xor ecx, ecx	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001aac	          0x4c89e2	                            mov rdx, r12	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001aaf	          0x4c89ee	                            mov rsi, r13	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001ab2	            0x31c0	                            xor eax, eax	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001ab4	    0xc70500000000	               mov dword [0x04001abe], 1	      4045	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001abe	      0xe800000000	                          call 0x4001ac3	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001ac3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001ac8	      0xe800000000	                          call 0x4001acd	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001acd	      0xe93dfdffff	                           jmp 0x400180f	      4048	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001ad2	    0x660f1f440000	                    nop word [rax + rax]	      4048	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001ad8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001add	    0x644833042528	                xor rax, qword fs:[0x28]	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001ae6	     0xf84abfdffff	                            je 0x4001897	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001aec	      0xe800000000	                          call 0x4001af1	      4139	objcopy.c	FUNCTION_51
0x4001af1	     0xf1f80000000	                         nop dword [rax]	      4139	objcopy.c	FUNCTION_51
0x4001af8	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4139	objcopy.c	FUNCTION_51
0x4001afd	      0xe98cfeffff	                           jmp 0x400198e	      4139	objcopy.c	FUNCTION_51
0x4001b02	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001b07	      0xe800000000	                          call 0x4001b0c	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001b0c	      0xe9fefcffff	                           jmp 0x400180f	      4038	objcopy.c	FUNCTION_51	IF_2
0x4001b11	        0x498b1c24	                    mov rbx, qword [r12]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b15	      0xba05000000	                              mov edx, 5	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b1a	      0xbe00000000	                              mov esi, 0	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b1f	            0x31ff	                            xor edi, edi	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b21	      0xe800000000	                          call 0x4001b26	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b26	          0x4489ea	                           mov edx, r13d	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b29	          0x4889c7	                            mov rdi, rax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b2c	          0x4889de	                            mov rsi, rbx	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b2f	            0x31c0	                            xor eax, eax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b31	      0xe800000000	                          call 0x4001b36	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001b40	            0x4157	                                push r15	      3919	objcopy.c	FUNCTION_50
0x4001b42	            0x4156	                                push r14	      3919	objcopy.c	FUNCTION_50
0x4001b44	            0x4155	                                push r13	      3919	objcopy.c	FUNCTION_50
0x4001b46	            0x4154	                                push r12	      3919	objcopy.c	FUNCTION_50
0x4001b48	          0x4989fd	                            mov r13, rdi	      3919	objcopy.c	FUNCTION_50
0x4001b4b	              0x55	                                push rbp	      3919	objcopy.c	FUNCTION_50
0x4001b4c	              0x53	                                push rbx	      3919	objcopy.c	FUNCTION_50
0x4001b4d	          0x4889d5	                            mov rbp, rdx	      3919	objcopy.c	FUNCTION_50
0x4001b50	            0x31d2	                            xor edx, edx	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x4001b52	          0x4889f3	                            mov rbx, rsi	      3919	objcopy.c	FUNCTION_50
0x4001b55	        0x4883ec18	                           sub rsp, 0x18	      3919	objcopy.c	FUNCTION_50
0x4001b59	      0xe8a2fbffff	                   call sym.skip_section	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x4001b5e	            0x85c0	                           test eax, eax	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x4001b60	            0x7546	                           jne 0x4001ba8	      3926	objcopy.c	FUNCTION_50	IF_1	CALL_1
0x4001b62	         0xfb64544	           movzx eax, byte [rbp + 0x44] 	      3932	objcopy.c	FUNCTION_50	IF_2
0x4001b66	        0x4c8b6368	            mov r12, qword [rbx + 0x68] 	      3929	objcopy.c	FUNCTION_50
0x4001b6a	          0x83e007	                              and eax, 7	      3932	objcopy.c	FUNCTION_50	IF_2
0x4001b6d	            0x3c03	                               cmp al, 3	      3932	objcopy.c	FUNCTION_50	IF_2
0x4001b6f	            0x741d	                            je 0x4001b8e	      3932	objcopy.c	FUNCTION_50	IF_2
0x4001b71	    0x833d00000000	               cmp dword [0x04001b78], 6	      3933	objcopy.c	FUNCTION_50	IF_2
0x4001b78	            0x7414	                            je 0x4001b8e	      3933	objcopy.c	FUNCTION_50	IF_2
0x4001b7a	          0x488b3b	                    mov rdi, qword [rbx]	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4001b7d	            0x31f6	                            xor esi, esi	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4001b7f	      0xba80000000	                           mov edx, 0x80	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4001b84	      0xe837e6ffff	              call sym.find_section_list	      3890	objcopy.c	FUNCTION_48	CALL_1
0x4001b89	          0x4885c0	                           test rax, rax	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x4001b8c	            0x7432	                            je 0x4001bc0	      3934	objcopy.c	FUNCTION_50	IF_2	CALL_2
0x4001b8e	        0x488b4508	                mov rax, qword [rbp + 8]	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001b92	            0x31c9	                            xor ecx, ecx	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001b94	            0x31d2	                            xor edx, edx	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001b96	          0x4c89e6	                            mov rsi, r12	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001b99	          0x4889ef	                            mov rdi, rbp	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001b9c	    0xff9078020000	                call qword [rax + 0x278]	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001ba2	    0x4183642420fb	      and dword [r12 + 0x20], 0xfffffffb	      3957	objcopy.c	FUNCTION_50	IF_5
0x4001ba8	        0x4883c418	                           add rsp, 0x18	      4013	objcopy.c	FUNCTION_50
0x4001bac	              0x5b	                                 pop rbx	      4013	objcopy.c	FUNCTION_50
0x4001bad	              0x5d	                                 pop rbp	      4013	objcopy.c	FUNCTION_50
0x4001bae	            0x415c	                                 pop r12	      4013	objcopy.c	FUNCTION_50
0x4001bb0	            0x415d	                                 pop r13	      4013	objcopy.c	FUNCTION_50
0x4001bb2	            0x415e	                                 pop r14	      4013	objcopy.c	FUNCTION_50
0x4001bb4	            0x415f	                                 pop r15	      4013	objcopy.c	FUNCTION_50
0x4001bb6	              0xc3	                                     ret	      4013	objcopy.c	FUNCTION_50
0x4001bb7	    0x660f1f840000	                    nop word [rax + rax]	      4013	objcopy.c	FUNCTION_50
0x4001bc0	          0x4889de	                            mov rsi, rbx	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4001bc3	          0x4c89ef	                            mov rdi, r13	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4001bc6	      0xe800000000	                          call 0x4001bcb	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4001bcb	          0x4885c0	                           test rax, rax	      3940	objcopy.c	FUNCTION_50	ELSE_1	IF_3
0x4001bce	          0x4989c0	                             mov r8, rax	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x4001bd1	     0xf88b6010000	                            js 0x4001d8d	      3940	objcopy.c	FUNCTION_50	ELSE_1	IF_3
0x4001bd7	            0x74b5	                            je 0x4001b8e	      3954	objcopy.c	FUNCTION_50	IF_5
0x4001bd9	    0x4c8bbb800000	            mov r15, qword [rbx + 0x80] 	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4001be0	          0x4d85ff	                           test r15, r15	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4001be3	     0xf8417010000	                            je 0x4001d00	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4001be9	    0x448bb3880000	           mov r14d, dword [rbx + 0x88] 	      3965	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4001bf0	    0x833d00000000	               cmp dword [0x04001bf7], 7	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001bf7	            0x7477	                            je 0x4001c70	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001bf9	        0x488b4508	                mov rax, qword [rbp + 8]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001bfd	          0x4d85f6	                           test r14, r14	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c00	          0x4489f1	                           mov ecx, r14d	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c03	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c0a	            0x743c	                            je 0x4001c48	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c0c	        0x4883c418	                           add rsp, 0x18	      4013	objcopy.c	FUNCTION_50
0x4001c10	          0x4489f1	                           mov ecx, r14d	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c13	          0x4c89fa	                            mov rdx, r15	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c16	              0x5b	                                 pop rbx	      4013	objcopy.c	FUNCTION_50
0x4001c17	          0x4c89e6	                            mov rsi, r12	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c1a	          0x4889ef	                            mov rdi, rbp	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c1d	              0x5d	                                 pop rbp	      4013	objcopy.c	FUNCTION_50
0x4001c1e	            0x415c	                                 pop r12	      4013	objcopy.c	FUNCTION_50
0x4001c20	            0x415d	                                 pop r13	      4013	objcopy.c	FUNCTION_50
0x4001c22	            0x415e	                                 pop r14	      4013	objcopy.c	FUNCTION_50
0x4001c24	            0x415f	                                 pop r15	      4013	objcopy.c	FUNCTION_50
0x4001c26	            0xffe0	                                 jmp rax	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c28	    0x4883bb800000	               cmp qword [rbx + 0x80], 0	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001c30	     0xf8439010000	                            je 0x4001d6f	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001c36	        0x488b4508	                mov rax, qword [rbp + 8]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c3a	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001c3f	            0x31c9	                            xor ecx, ecx	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c41	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c48	          0x4889ef	                            mov rdi, rbp	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c4b	          0x4c89e6	                            mov rsi, r12	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c4e	            0x31d2	                            xor edx, edx	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c50	            0xffd0	                                call rax	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001c52	    0x4183642420fb	      and dword [r12 + 0x20], 0xfffffffb	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x4001c58	        0x4883c418	                           add rsp, 0x18	      4013	objcopy.c	FUNCTION_50
0x4001c5c	          0x4c89ff	                            mov rdi, r15	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x4001c5f	              0x5b	                                 pop rbx	      4013	objcopy.c	FUNCTION_50
0x4001c60	              0x5d	                                 pop rbp	      4013	objcopy.c	FUNCTION_50
0x4001c61	            0x415c	                                 pop r12	      4013	objcopy.c	FUNCTION_50
0x4001c63	            0x415d	                                 pop r13	      4013	objcopy.c	FUNCTION_50
0x4001c65	            0x415e	                                 pop r14	      4013	objcopy.c	FUNCTION_50
0x4001c67	            0x415f	                                 pop r15	      4013	objcopy.c	FUNCTION_50
0x4001c69	      0xe900000000	                           jmp 0x4001c6e	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x4001c6e	            0x6690	                                     nop	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x4001c70	          0x4c89c7	                             mov rdi, r8	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x4001c73	      0xe800000000	                          call 0x4001c78	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x4001c78	          0x4d85f6	                           test r14, r14	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001c7b	      0x4889442408	                mov qword [rsp + 8], rax	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x4001c80	            0x74a6	                            je 0x4001c28	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001c82	    0x48c704240000	                      mov qword [rsp], 0	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001c8a	          0x4531ed	                          xor r13d, r13d	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001c8d	           0xf1f00	                         nop dword [rax]	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001c90	        0x4b8b04ef	            mov rax, qword [r15 + r13*8]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001c94	          0x488b00	                    mov rax, qword [rax]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001c97	          0x4885c0	                           test rax, rax	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001c9a	            0x7435	                            je 0x4001cd1	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001c9c	          0x488b00	                    mov rax, qword [rax]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001c9f	          0x4885c0	                           test rax, rax	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001ca2	            0x742d	                            je 0x4001cd1	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001ca4	        0x488b7808	                mov rdi, qword [rax + 8]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4001ca8	    0x488b35000000	            mov rsi, qword [0x04001caf] 	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4001caf	      0xe80cf5ffff	            call sym.is_specified_symbol	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4001cb4	            0x85c0	                           test eax, eax	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4001cb6	            0x7419	                            je 0x4001cd1	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4001cb8	        0x488b0c24	                    mov rcx, qword [rsp]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4001cbc	        0x4b8b04ef	            mov rax, qword [r15 + r13*8]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4001cc0	      0x488b542408	                mov rdx, qword [rsp + 8]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4001cc5	        0x488904ca	            mov qword [rdx + rcx*8], rax	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4001cc9	        0x488d4101	                      lea rax, [rcx + 1]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4001ccd	        0x48890424	                    mov qword [rsp], rax	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x4001cd1	        0x4983c501	                              add r13, 1	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001cd5	          0x4d39f5	                            cmp r13, r14	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001cd8	            0x75b6	                           jne 0x4001c90	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001cda	    0x4883bb800000	               cmp qword [rbx + 0x80], 0	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001ce2	     0xf848f000000	                            je 0x4001d77	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001ce8	        0x4c8b3424	                    mov r14, qword [rsp]	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001cec	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001cf1	      0xe903ffffff	                           jmp 0x4001bf9	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001cf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001d00	          0x4889c7	                            mov rdi, rax	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4001d03	        0x48890424	                    mov qword [rsp], rax	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4001d07	      0xe800000000	                          call 0x4001d0c	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4001d0c	    0x488b0d000000	            mov rcx, qword [0x04001d13] 	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001d13	          0x4889c2	                            mov rdx, rax	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001d16	          0x4889de	                            mov rsi, rbx	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001d19	          0x4c89ef	                            mov rdi, r13	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001d1c	          0x4989c7	                            mov r15, rax	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4001d1f	      0xe800000000	                          call 0x4001d24	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001d24	          0x4885c0	                           test rax, rax	      3972	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x4001d27	          0x4989c6	                            mov r14, rax	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001d2a	        0x4c8b0424	                     mov r8, qword [rsp]	      3972	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x4001d2e	     0xf89bcfeffff	                           jns 0x4001bf0	      3972	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x4001d34	      0xba05000000	                              mov edx, 5	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x4001d39	      0xbe00000000	                              mov esi, 0	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x4001d3e	            0x31ff	                            xor edi, edi	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x4001d40	    0xc70500000000	               mov dword [0x04001d4a], 1	      3974	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x4001d4a	      0xe800000000	                          call 0x4001d4f	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x4001d4f	          0x4889c1	                            mov rcx, rax	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4001d52	        0x4883c418	                           add rsp, 0x18	      4013	objcopy.c	FUNCTION_50
0x4001d56	          0x4889da	                            mov rdx, rbx	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4001d59	          0x4c89ee	                            mov rsi, r13	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4001d5c	              0x5b	                                 pop rbx	      4013	objcopy.c	FUNCTION_50
0x4001d5d	              0x5d	                                 pop rbp	      4013	objcopy.c	FUNCTION_50
0x4001d5e	            0x415c	                                 pop r12	      4013	objcopy.c	FUNCTION_50
0x4001d60	            0x415d	                                 pop r13	      4013	objcopy.c	FUNCTION_50
0x4001d62	            0x415e	                                 pop r14	      4013	objcopy.c	FUNCTION_50
0x4001d64	            0x415f	                                 pop r15	      4013	objcopy.c	FUNCTION_50
0x4001d66	            0x31ff	                            xor edi, edi	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4001d68	            0x31c0	                            xor eax, eax	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4001d6a	      0xe900000000	                           jmp 0x4001d6f	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x4001d6f	    0x48c704240000	                      mov qword [rsp], 0	      3986	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001d77	          0x4c89ff	                            mov rdi, r15	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x4001d7a	      0xe800000000	                          call 0x4001d7f	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x4001d7f	        0x4c8b3424	                    mov r14, qword [rsp]	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x4001d83	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001d88	      0xe96cfeffff	                           jmp 0x4001bf9	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001d8d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4001d91	            0x740e	                            je 0x4001da1	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4001d93	    0xc70500000000	               mov dword [0x04001d9d], 1	      3947	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2
0x4001d9d	            0x31c9	                            xor ecx, ecx	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x4001d9f	            0xebb1	                           jmp 0x4001d52	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x4001da1	      0xe800000000	                          call 0x4001da6	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4001da6	          0x83f805	                              cmp eax, 5	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4001da9	            0x75e8	                           jne 0x4001d93	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4001dab	      0xe9defdffff	                           jmp 0x4001b8e	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x4001db0	            0x4155	                                push r13	      4620	objcopy.c	FUNCTION_60
0x4001db2	            0x4154	                                push r12	      4620	objcopy.c	FUNCTION_60
0x4001db4	          0x4989f5	                            mov r13, rsi	      4620	objcopy.c	FUNCTION_60
0x4001db7	              0x55	                                push rbp	      4620	objcopy.c	FUNCTION_60
0x4001db8	              0x53	                                push rbx	      4620	objcopy.c	FUNCTION_60
0x4001db9	      0xbe3d000000	                           mov esi, 0x3d	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4001dbe	          0x4989fc	                            mov r12, rdi	      4620	objcopy.c	FUNCTION_60
0x4001dc1	          0x4889d3	                            mov rbx, rdx	      4620	objcopy.c	FUNCTION_60
0x4001dc4	        0x4883ec08	                              sub rsp, 8	      4620	objcopy.c	FUNCTION_60
0x4001dc8	      0xe800000000	                          call 0x4001dcd	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4001dcd	          0x4885c0	                           test rax, rax	      4625	objcopy.c	FUNCTION_60	IF_1
0x4001dd0	            0x744b	                            je 0x4001e1d	      4625	objcopy.c	FUNCTION_60	IF_1
0x4001dd2	          0x4889c5	                            mov rbp, rax	      4625	objcopy.c	FUNCTION_60	IF_1
0x4001dd5	      0xbf30000000	                           mov edi, 0x30	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4001dda	      0xe800000000	                          call 0x4001ddf	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4001ddf	          0x4889ee	                            mov rsi, rbp	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4001de2	          0x4889c3	                            mov rbx, rax	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4001de5	          0x4c89e7	                            mov rdi, r12	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4001de8	          0x4c29e6	                            sub rsi, r12	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4001deb	        0x4883c501	                              add rbp, 1	      4630	objcopy.c	FUNCTION_60
0x4001def	      0xe800000000	                          call 0x4001df4	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4001df4	        0x48896b10	             mov qword [rbx + 0x10], rbp	      4630	objcopy.c	FUNCTION_60
0x4001df8	        0x48894308	                mov qword [rbx + 8], rax	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4001dfc	          0x4889d8	                            mov rax, rbx	      4636	objcopy.c	FUNCTION_60
0x4001dff	          0x4c892b	                    mov qword [rbx], r13	      4631	objcopy.c	FUNCTION_60
0x4001e02	    0x48c743200000	               mov qword [rbx + 0x20], 0	      4632	objcopy.c	FUNCTION_60
0x4001e0a	    0x48c743180000	               mov qword [rbx + 0x18], 0	      4633	objcopy.c	FUNCTION_60
0x4001e12	        0x4883c408	                              add rsp, 8	      4636	objcopy.c	FUNCTION_60
0x4001e16	              0x5b	                                 pop rbx	      4636	objcopy.c	FUNCTION_60
0x4001e17	              0x5d	                                 pop rbp	      4636	objcopy.c	FUNCTION_60
0x4001e18	            0x415c	                                 pop r12	      4636	objcopy.c	FUNCTION_60
0x4001e1a	            0x415d	                                 pop r13	      4636	objcopy.c	FUNCTION_60
0x4001e1c	              0xc3	                                     ret	      4636	objcopy.c	FUNCTION_60
0x4001e1d	      0xbe00000000	                              mov esi, 0	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e22	            0x31ff	                            xor edi, edi	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e24	      0xba05000000	                              mov edx, 5	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e29	      0xe800000000	                          call 0x4001e2e	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e2e	          0x4889de	                            mov rsi, rbx	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e31	          0x4889c7	                            mov rdi, rax	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e34	            0x31c0	                            xor eax, eax	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e36	      0xe800000000	                          call 0x4001e3b	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e3b	       0xf1f440000	                   nop dword [rax + rax]	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4001e40	            0x4157	                                push r15	      2408	objcopy.c	FUNCTION_38
0x4001e42	            0x4156	                                push r14	      2408	objcopy.c	FUNCTION_38
0x4001e44	          0x4989ff	                            mov r15, rdi	      2408	objcopy.c	FUNCTION_38
0x4001e47	            0x4155	                                push r13	      2408	objcopy.c	FUNCTION_38
0x4001e49	            0x4154	                                push r12	      2408	objcopy.c	FUNCTION_38
0x4001e4b	          0x4989d4	                            mov r12, rdx	      2408	objcopy.c	FUNCTION_38
0x4001e4e	              0x55	                                push rbp	      2408	objcopy.c	FUNCTION_38
0x4001e4f	              0x53	                                push rbx	      2408	objcopy.c	FUNCTION_38
0x4001e50	          0x4889f3	                            mov rbx, rsi	      2408	objcopy.c	FUNCTION_38
0x4001e53	    0x4881ec080100	                          sub rsp, 0x108	      2408	objcopy.c	FUNCTION_38
0x4001e5a	        0x488b5608	                mov rdx, qword [rsi + 8]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4001e5e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2408	objcopy.c	FUNCTION_38
0x4001e67	    0x48898424f800	             mov qword [rsp + 0xf8], rax	      2408	objcopy.c	FUNCTION_38
0x4001e6f	            0x31c0	                            xor eax, eax	      2408	objcopy.c	FUNCTION_38
0x4001e71	        0x488b4708	                mov rax, qword [rdi + 8]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4001e75	          0x8b520c	              mov edx, dword [rdx + 0xc]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4001e78	          0x8b400c	              mov eax, dword [rax + 0xc]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4001e7b	            0x39d0	                            cmp eax, edx	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e7d	           0xf95c1	                                setne cl	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e80	          0x83f802	                              cmp eax, 2	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e83	           0xf95c0	                                setne al	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e86	            0x84c1	                             test cl, al	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e88	            0x7456	                            je 0x4001ee0	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e8a	          0x83fa02	                              cmp edx, 2	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e8d	            0x7451	                            je 0x4001ee0	      2424	objcopy.c	FUNCTION_38	IF_1
0x4001e8f	      0xba05000000	                              mov edx, 5	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4001e94	      0xbe00000000	                              mov esi, 0	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4001e99	            0x31ff	                            xor edi, edi	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4001e9b	      0xe800000000	                          call 0x4001ea0	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4001ea0	            0x31ed	                            xor ebp, ebp	      2429	objcopy.c	FUNCTION_38	IF_1
0x4001ea2	          0x4889c7	                            mov rdi, rax	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4001ea5	            0x31c0	                            xor eax, eax	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4001ea7	      0xe800000000	                          call 0x4001eac	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4001eac	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	      3197	objcopy.c	FUNCTION_38
0x4001eb4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3197	objcopy.c	FUNCTION_38
0x4001ebd	            0x89e8	                            mov eax, ebp	      3197	objcopy.c	FUNCTION_38
0x4001ebf	     0xf85371a0000	                           jne 0x40038fc	      3197	objcopy.c	FUNCTION_38
0x4001ec5	    0x4881c4080100	                          add rsp, 0x108	      3197	objcopy.c	FUNCTION_38
0x4001ecc	              0x5b	                                 pop rbx	      3197	objcopy.c	FUNCTION_38
0x4001ecd	              0x5d	                                 pop rbp	      3197	objcopy.c	FUNCTION_38
0x4001ece	            0x415c	                                 pop r12	      3197	objcopy.c	FUNCTION_38
0x4001ed0	            0x415d	                                 pop r13	      3197	objcopy.c	FUNCTION_38
0x4001ed2	            0x415e	                                 pop r14	      3197	objcopy.c	FUNCTION_38
0x4001ed4	            0x415f	                                 pop r15	      3197	objcopy.c	FUNCTION_38
0x4001ed6	              0xc3	                                     ret	      3197	objcopy.c	FUNCTION_38
0x4001ed7	    0x660f1f840000	                    nop word [rax + rax]	      3197	objcopy.c	FUNCTION_38
0x4001ee0	      0x410fb67744	           movzx esi, byte [r15 + 0x44] 	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4001ee5	          0x4889df	                            mov rdi, rbx	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4001ee8	          0x83e607	                              and esi, 7	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4001eeb	      0xe800000000	                          call 0x4001ef0	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4001ef0	            0x31c9	                            xor ecx, ecx	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4001ef2	            0x85c0	                           test eax, eax	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4001ef4	            0x89c5	                            mov ebp, eax	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4001ef6	     0xf8414040000	                            je 0x4002310	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4001efc	    0x4983bf900000	               cmp qword [r15 + 0x90], 0	      2438	objcopy.c	FUNCTION_38	IF_3
0x4001f04	     0xf8426060000	                            je 0x4002530	      2438	objcopy.c	FUNCTION_38	IF_3
0x4001f0a	        0x498b4708	                mov rax, qword [r15 + 8]	      2445	objcopy.c	FUNCTION_38	IF_4
0x4001f0e	        0x83780805	                  cmp dword [rax + 8], 5	      2445	objcopy.c	FUNCTION_38	IF_4
0x4001f12	            0x7454	                            je 0x4001f68	      2445	objcopy.c	FUNCTION_38	IF_4
0x4001f14	    0x8b1500000000	            mov edx, dword [0x04001f1a] 	      2447	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4001f1a	          0x83fa01	                              cmp edx, 1	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4001f1d	            0x7439	                            je 0x4001f58	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4001f1f	          0x83e201	                              and edx, 1	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4001f22	            0x7434	                            je 0x4001f58	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4001f24	          0x4c89ff	                            mov rdi, r15	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f27	      0xe800000000	                          call 0x4001f2c	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f2c	      0xba05000000	                              mov edx, 5	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f31	          0x4889c3	                            mov rbx, rax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f34	      0xbe00000000	                              mov esi, 0	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f39	            0x31ff	                            xor edi, edi	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f3b	            0x31ed	                            xor ebp, ebp	      2452	objcopy.c	FUNCTION_38	IF_4	IF_5
0x4001f3d	      0xe800000000	                          call 0x4001f42	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f42	          0x4889de	                            mov rsi, rbx	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f45	          0x4889c7	                            mov rdi, rax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f48	            0x31c0	                            xor eax, eax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f4a	      0xe800000000	                          call 0x4001f4f	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f4f	      0xe958ffffff	                           jmp 0x4001eac	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f54	         0xf1f4000	                         nop dword [rax]	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x4001f58	    0x448b0d000000	            mov r9d, dword [0x04001f5f] 	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4001f5f	          0x4585c9	                           test r9d, r9d	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4001f62	     0xf8578030000	                           jne 0x40022e0	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4001f68	    0x448b05000000	            mov r8d, dword [0x04001f6f] 	      2463	objcopy.c	FUNCTION_38	IF_7
0x4001f6f	          0x4585c0	                           test r8d, r8d	      2463	objcopy.c	FUNCTION_38	IF_7
0x4001f72	     0xf85b0030000	                           jne 0x4002328	      2463	objcopy.c	FUNCTION_38	IF_7
0x4001f78	    0x8b3d00000000	            mov edi, dword [0x04001f7e] 	      2468	objcopy.c	FUNCTION_38	IF_8
0x4001f7e	            0x31f6	                            xor esi, esi	      2469	objcopy.c	FUNCTION_38	IF_8
0x4001f80	            0x85ff	                           test edi, edi	      2468	objcopy.c	FUNCTION_38	IF_8
0x4001f82	            0x751c	                           jne 0x4001fa0	      2468	objcopy.c	FUNCTION_38	IF_8
0x4001f84	    0x8b0d00000000	            mov ecx, dword [0x04001f8a] 	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4001f8a	    0x488b35000000	            mov rsi, qword [0x04001f91] 	      2473	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4001f91	            0x85c9	                           test ecx, ecx	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4001f93	     0xf8437030000	                            je 0x40022d0	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4001f99	    0x480335000000	             add rsi, qword [0x04001fa0]	      2476	objcopy.c	FUNCTION_38	ELSE_1
0x4001fa0	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	      2481	objcopy.c	FUNCTION_38	IF_10
0x4001fa4	          0x83e007	                              and eax, 7	      2481	objcopy.c	FUNCTION_38	IF_10
0x4001fa7	            0x3c03	                               cmp al, 3	      2481	objcopy.c	FUNCTION_38	IF_10
0x4001fa9	            0x7455	                            je 0x4002000	      2481	objcopy.c	FUNCTION_38	IF_10
0x4001fab	        0x418b6f44	            mov ebp, dword [r15 + 0x44] 	      2485	objcopy.c	FUNCTION_38	IF_10
0x4001faf	    0x8b0500000000	            mov eax, dword [0x04001fb5] 	      2488	objcopy.c	FUNCTION_38	IF_10
0x4001fb5	          0x4889df	                            mov rdi, rbx	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x4001fb8	        0x488b5308	                mov rdx, qword [rbx + 8]	      2488	objcopy.c	FUNCTION_38	IF_10
0x4001fbc	          0xc1ed05	                              shr ebp, 5	      2485	objcopy.c	FUNCTION_38	IF_10
0x4001fbf	            0xf7d0	                                 not eax	      2488	objcopy.c	FUNCTION_38	IF_10
0x4001fc1	    0x81e5ffff0f00	                        and ebp, 0xfffff	      2485	objcopy.c	FUNCTION_38	IF_10
0x4001fc7	          0x234214	             and eax, dword [rdx + 0x14]	      2488	objcopy.c	FUNCTION_38	IF_10
0x4001fca	     0xb2d00000000	              or ebp, dword [0x04001fd0]	      2486	objcopy.c	FUNCTION_38	IF_10
0x4001fd0	            0x21c5	                            and ebp, eax	      2488	objcopy.c	FUNCTION_38	IF_10
0x4001fd2	            0x89e8	                            mov eax, ebp	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4001fd4	          0x83e0fe	                     and eax, 0xfffffffe	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4001fd7	    0x833d00000000	               cmp dword [0x04001fde], 7	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4001fde	           0xf44e8	                          cmove ebp, eax	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4001fe1	      0xe800000000	                          call 0x4001fe6	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x4001fe6	            0x85c0	                           test eax, eax	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x4001fe8	     0xf84ca020000	                            je 0x40022b8	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x4001fee	            0x89ee	                            mov esi, ebp	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4001ff0	          0x4889df	                            mov rdi, rbx	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4001ff3	      0xe800000000	                          call 0x4001ff8	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4001ff8	            0x85c0	                           test eax, eax	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4001ffa	     0xf84b8020000	                            je 0x40022b8	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4002000	          0x4c89ff	                            mov rdi, r15	      2502	objcopy.c	FUNCTION_38	CALL_19
0x4002003	      0xe800000000	                          call 0x4002008	      2502	objcopy.c	FUNCTION_38	CALL_19
0x4002008	          0x4c89ff	                            mov rdi, r15	      2503	objcopy.c	FUNCTION_38	CALL_20
0x400200b	          0x4189c5	                           mov r13d, eax	      2502	objcopy.c	FUNCTION_38	CALL_19
0x400200e	      0xe800000000	                          call 0x4002013	      2503	objcopy.c	FUNCTION_38	CALL_20
0x4002013	          0x4d85e4	                           test r12, r12	      2504	objcopy.c	FUNCTION_38	IF_13
0x4002016	            0x89c5	                            mov ebp, eax	      2503	objcopy.c	FUNCTION_38	CALL_20
0x4002018	            0x742a	                            je 0x4002044	      2504	objcopy.c	FUNCTION_38	IF_13
0x400201a	          0x4c89ff	                            mov rdi, r15	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x400201d	      0xe800000000	                          call 0x4002022	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4002022	          0x4885c0	                           test rax, rax	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4002025	            0x7413	                            je 0x400203a	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4002027	          0x4c89ff	                            mov rdi, r15	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x400202a	      0xe800000000	                          call 0x400202f	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x400202f	          0x8b500c	              mov edx, dword [rax + 0xc]	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4002032	            0x85d2	                           test edx, edx	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4002034	     0xf85be040000	                           jne 0x40024f8	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x400203a	      0x458b6c240c	            mov r13d, dword [r12 + 0xc] 	      2509	objcopy.c	FUNCTION_38	IF_13	IF_14
0x400203f	      0x418b6c2410	            mov ebp, dword [r12 + 0x10] 	      2510	objcopy.c	FUNCTION_38	IF_13	IF_14
0x4002044	        0x488b4308	                mov rax, qword [rbx + 8]	      2516	objcopy.c	FUNCTION_38	IF_15
0x4002048	            0x89ea	                            mov edx, ebp	      2516	objcopy.c	FUNCTION_38	IF_15
0x400204a	          0x4489ee	                           mov esi, r13d	      2516	objcopy.c	FUNCTION_38	IF_15
0x400204d	          0x4889df	                            mov rdi, rbx	      2516	objcopy.c	FUNCTION_38	IF_15
0x4002050	    0xff9090020000	                call qword [rax + 0x290]	      2516	objcopy.c	FUNCTION_38	IF_15
0x4002056	            0x85c0	                           test eax, eax	      2516	objcopy.c	FUNCTION_38	IF_15
0x4002058	            0x89c5	                            mov ebp, eax	      2516	objcopy.c	FUNCTION_38	IF_15
0x400205a	            0x7564	                           jne 0x40020c0	      2516	objcopy.c	FUNCTION_38	IF_15
0x400205c	      0x41f6474704	               test byte [r15 + 0x47], 4	      2517	objcopy.c	FUNCTION_38	IF_15
0x4002061	            0x7518	                           jne 0x400207b	      2517	objcopy.c	FUNCTION_38	IF_15
0x4002063	          0x4c89ff	                            mov rdi, r15	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x4002066	      0xe800000000	                          call 0x400206b	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x400206b	          0x4889df	                            mov rdi, rbx	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x400206e	          0x4189c4	                           mov r12d, eax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x4002071	      0xe800000000	                          call 0x4002076	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x4002076	          0x4139c4	                           cmp r12d, eax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x4002079	            0x7445	                            je 0x40020c0	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x400207b	          0x4c89ff	                            mov rdi, r15	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x400207e	      0xe800000000	                          call 0x4002083	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x4002083	            0x85c0	                           test eax, eax	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x4002085	     0xf85f5020000	                           jne 0x4002380	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x400208b	          0x4c89ff	                            mov rdi, r15	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x400208e	      0xe800000000	                          call 0x4002093	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x4002093	      0xba05000000	                              mov edx, 5	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x4002098	          0x4889c3	                            mov rbx, rax	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x400209b	      0xbe00000000	                              mov esi, 0	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x40020a0	            0x31ff	                            xor edi, edi	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020a2	      0xe800000000	                          call 0x40020a7	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020a7	          0x4889de	                            mov rsi, rbx	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020aa	          0x4889c7	                            mov rdi, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020ad	            0x31c0	                            xor eax, eax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020af	      0xe800000000	                          call 0x40020b4	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020b4	      0xe9f3fdffff	                           jmp 0x4001eac	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020b9	     0xf1f80000000	                         nop dword [rax]	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40020c0	      0x410fb67744	           movzx esi, byte [r15 + 0x44] 	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x40020c5	          0x4889df	                            mov rdi, rbx	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x40020c8	          0x83e607	                              and esi, 7	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x40020cb	      0xe800000000	                          call 0x40020d0	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x40020d0	            0x85c0	                           test eax, eax	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x40020d2	     0xf84e0010000	                            je 0x40022b8	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x40020d8	        0x488b4308	                mov rax, qword [rbx + 8]	      2536	objcopy.c	FUNCTION_38	IF_18
0x40020dc	        0x83780802	                  cmp dword [rax + 8], 2	      2536	objcopy.c	FUNCTION_38	IF_18
0x40020e0	     0xf857a010000	                           jne 0x4002260	      2536	objcopy.c	FUNCTION_38	IF_18
0x40020e6	          0x488b30	                    mov rsi, qword [rax]	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x40020e9	      0xba00000000	                              mov edx, 0	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x40020ee	      0xb904000000	                              mov ecx, 4	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x40020f3	          0x4889d7	                            mov rdi, rdx	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x40020f6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x40020f8	     0xf8562010000	                           jne 0x4002260	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x40020fe	        0x498b4f08	                mov rcx, qword [r15 + 8]	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x4002102	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2540	objcopy.c	FUNCTION_38	IF_18	CALL_40
0x4002109	        0x83790802	                  cmp dword [rcx + 8], 2	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x400210d	     0xf84a5110000	                            je 0x40032b8	      2543	objcopy.c	FUNCTION_38	IF_18	IF_19
0x4002113	    0x4c8b05000000	              mov r8, qword [0x0400211a]	      2547	objcopy.c	FUNCTION_38	IF_18	IF_20
0x400211a	        0x4983f8ff	              cmp r8, 0xffffffffffffffff	      2547	objcopy.c	FUNCTION_38	IF_18	IF_20
0x400211e	     0xf84de110000	                            je 0x4003302	      2547	objcopy.c	FUNCTION_38	IF_18	IF_20
0x4002124	    0x4c8980100100	             mov qword [rax + 0x110], r8	      2548	objcopy.c	FUNCTION_38	IF_18	IF_20
0x400212b	    0x488b15000000	            mov rdx, qword [0x04002132] 	      2552	objcopy.c	FUNCTION_38	IF_18	IF_21
0x4002132	        0x4883faff	             cmp rdx, 0xffffffffffffffff	      2552	objcopy.c	FUNCTION_38	IF_18	IF_21
0x4002136	            0x7407	                            je 0x400213f	      2552	objcopy.c	FUNCTION_38	IF_18	IF_21
0x4002138	    0x488990680100	            mov qword [rax + 0x168], rdx	      2553	objcopy.c	FUNCTION_38	IF_18	IF_21
0x400213f	    0x488b15000000	            mov rdx, qword [0x04002146] 	      2555	objcopy.c	FUNCTION_38	IF_18	IF_22
0x4002146	        0x4883faff	             cmp rdx, 0xffffffffffffffff	      2555	objcopy.c	FUNCTION_38	IF_18	IF_22
0x400214a	            0x7407	                            je 0x4002153	      2555	objcopy.c	FUNCTION_38	IF_18	IF_22
0x400214c	    0x488990680100	            mov qword [rax + 0x168], rdx	      2556	objcopy.c	FUNCTION_38	IF_18	IF_22
0x4002153	    0x488b15000000	            mov rdx, qword [0x0400215a] 	      2558	objcopy.c	FUNCTION_38	IF_18	IF_23
0x400215a	        0x4883faff	             cmp rdx, 0xffffffffffffffff	      2558	objcopy.c	FUNCTION_38	IF_18	IF_23
0x400215e	            0x7407	                            je 0x4002167	      2558	objcopy.c	FUNCTION_38	IF_18	IF_23
0x4002160	    0x488990000100	            mov qword [rax + 0x100], rdx	      2559	objcopy.c	FUNCTION_38	IF_18	IF_23
0x4002167	    0x488b15000000	            mov rdx, qword [0x0400216e] 	      2561	objcopy.c	FUNCTION_38	IF_18	IF_24
0x400216e	        0x4883faff	             cmp rdx, 0xffffffffffffffff	      2561	objcopy.c	FUNCTION_38	IF_18	IF_24
0x4002172	     0xf8475110000	                            je 0x40032ed	      2561	objcopy.c	FUNCTION_38	IF_18	IF_24
0x4002178	    0x488990080100	            mov qword [rax + 0x108], rdx	      2562	objcopy.c	FUNCTION_38	IF_18	IF_24
0x400217f	    0x488b0d000000	            mov rcx, qword [0x04002186] 	      2566	objcopy.c	FUNCTION_38	IF_18	IF_25
0x4002186	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      2566	objcopy.c	FUNCTION_38	IF_18	IF_25
0x400218a	            0x7407	                            je 0x4002193	      2566	objcopy.c	FUNCTION_38	IF_18	IF_25
0x400218c	    0x488988580100	            mov qword [rax + 0x158], rcx	      2567	objcopy.c	FUNCTION_38	IF_18	IF_25
0x4002193	    0x488b0d000000	            mov rcx, qword [0x0400219a] 	      2569	objcopy.c	FUNCTION_38	IF_18	IF_26
0x400219a	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      2569	objcopy.c	FUNCTION_38	IF_18	IF_26
0x400219e	            0x7407	                            je 0x40021a7	      2569	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40021a0	    0x488988580100	            mov qword [rax + 0x158], rcx	      2570	objcopy.c	FUNCTION_38	IF_18	IF_26
0x40021a7	     0xfb70d000000	           movzx ecx, word [0x040021ae] 	      2572	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40021ae	        0x6683f9ff	              cmp cx, 0xffffffffffffffff	      2572	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40021b2	            0x7407	                            je 0x40021bb	      2572	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40021b4	    0x668988480100	              mov word [rax + 0x148], cx	      2573	objcopy.c	FUNCTION_38	IF_18	IF_27
0x40021bb	     0xfb70d000000	           movzx ecx, word [0x040021c2] 	      2575	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40021c2	        0x6683f9ff	              cmp cx, 0xffffffffffffffff	      2575	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40021c6	            0x7407	                            je 0x40021cf	      2575	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40021c8	    0x668988200100	              mov word [rax + 0x120], cx	      2576	objcopy.c	FUNCTION_38	IF_18	IF_28
0x40021cf	     0xfb70d000000	           movzx ecx, word [0x040021d6] 	      2578	objcopy.c	FUNCTION_38	IF_18	IF_29
0x40021d6	        0x6683f9ff	              cmp cx, 0xffffffffffffffff	      2578	objcopy.c	FUNCTION_38	IF_18	IF_29
0x40021da	            0x7407	                            je 0x40021e3	      2578	objcopy.c	FUNCTION_38	IF_18	IF_29
0x40021dc	    0x668988220100	              mov word [rax + 0x122], cx	      2579	objcopy.c	FUNCTION_38	IF_18	IF_29
0x40021e3	          0x4c39c2	                             cmp rdx, r8	      2581	objcopy.c	FUNCTION_38	IF_18	IF_30
0x40021e6	            0x7378	                           jae 0x4002260	      2581	objcopy.c	FUNCTION_38	IF_18	IF_30
0x40021e8	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_76	CALL_1
0x40021f0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_76	CALL_1
0x40021f5	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_76	CALL_1
0x40021fa	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_76	CALL_1
0x40021ff	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_76	CALL_1
0x4002201	      0xe800000000	                          call 0x4002206	        33	stdio2.h	FUNCTION_76	CALL_1
0x4002206	    0x4c8b05000000	              mov r8, qword [0x0400220d]	        33	stdio2.h	FUNCTION_76	CALL_1
0x400220d	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	        33	stdio2.h	FUNCTION_76	CALL_1
0x4002215	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_76	CALL_1
0x400221a	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_76	CALL_1
0x400221f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_76	CALL_1
0x4002224	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_76	CALL_1
0x4002226	      0xe800000000	                          call 0x400222b	        33	stdio2.h	FUNCTION_76	CALL_1
0x400222b	      0xba05000000	                              mov edx, 5	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x4002230	      0xbe00000000	                              mov esi, 0	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x4002235	            0x31ff	                            xor edi, edi	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x4002237	      0xe800000000	                          call 0x400223c	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x400223c	    0x488d9424e000	                   lea rdx, [rsp + 0xe0]	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x4002244	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x400224c	          0x4889c7	                            mov rdi, rax	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x400224f	            0x31c0	                            xor eax, eax	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x4002251	      0xe800000000	                          call 0x4002256	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x4002256	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2587	objcopy.c	FUNCTION_38	IF_18	IF_30	CALL_44
0x4002260	    0x488b2d000000	            mov rbp, qword [0x04002267] 	      2593	objcopy.c	FUNCTION_38	IF_31
0x4002267	          0x4885ed	                           test rbp, rbp	      2593	objcopy.c	FUNCTION_38	IF_31
0x400226a	            0x7408	                            je 0x4002274	      2593	objcopy.c	FUNCTION_38	IF_31
0x400226c	          0x4889ef	                            mov rdi, rbp	      2594	objcopy.c	FUNCTION_38	CALL_45
0x400226f	      0xe800000000	                          call 0x4002274	      2594	objcopy.c	FUNCTION_38	CALL_45
0x4002274	    0x488b3d000000	            mov rdi, qword [0x0400227b] 	      2596	objcopy.c	FUNCTION_38	IF_32
0x400227b	          0x4839fd	                            cmp rbp, rdi	      2596	objcopy.c	FUNCTION_38	IF_32
0x400227e	            0x7405	                            je 0x4002285	      2596	objcopy.c	FUNCTION_38	IF_32
0x4002280	      0xe800000000	                          call 0x4002285	      2597	objcopy.c	FUNCTION_38	CALL_46
0x4002285	        0x498b4708	                mov rax, qword [r15 + 8]	      2602	objcopy.c	FUNCTION_38
0x4002289	    0x48c705000000	               mov qword [0x04002294], 0	      2599	objcopy.c	FUNCTION_38
0x4002294	          0x4c89ff	                            mov rdi, r15	      2602	objcopy.c	FUNCTION_38
0x4002297	    0x48c705000000	               mov qword [0x040022a2], 0	      2600	objcopy.c	FUNCTION_38
0x40022a2	    0xff90f0010000	                call qword [rax + 0x1f0]	      2602	objcopy.c	FUNCTION_38
0x40022a8	          0x4885c0	                           test rax, rax	      2603	objcopy.c	FUNCTION_38	IF_33
0x40022ab	     0xf89ff000000	                           jns 0x40023b0	      2603	objcopy.c	FUNCTION_38	IF_33
0x40022b1	     0xf1f80000000	                         nop dword [rax]	      2603	objcopy.c	FUNCTION_38	IF_33
0x40022b8	            0x31c9	                            xor ecx, ecx	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022ba	            0x31d2	                            xor edx, edx	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022bc	          0x4c89fe	                            mov rsi, r15	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022bf	            0x31ff	                            xor edi, edi	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022c1	            0x31c0	                            xor eax, eax	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022c3	            0x31ed	                            xor ebp, ebp	      2497	objcopy.c	FUNCTION_38	IF_10	IF_12
0x40022c5	      0xe800000000	                          call 0x40022ca	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022ca	      0xe9ddfbffff	                           jmp 0x4001eac	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022cf	              0x90	                                     nop	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x40022d0	    0x498bb7a80000	            mov rsi, qword [r15 + 0xa8] 	      2475	objcopy.c	FUNCTION_38	ELSE_1	ELSE_2
0x40022d7	      0xe9bdfcffff	                           jmp 0x4001f99	      2475	objcopy.c	FUNCTION_38	ELSE_1	ELSE_2
0x40022dc	         0xf1f4000	                         nop dword [rax]	      2475	objcopy.c	FUNCTION_38	ELSE_1	ELSE_2
0x40022e0	          0x4c89ff	                            mov rdi, r15	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40022e3	      0xe800000000	                          call 0x40022e8	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40022e8	      0xba05000000	                              mov edx, 5	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40022ed	          0x4889c3	                            mov rbx, rax	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40022f0	      0xbe00000000	                              mov esi, 0	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40022f5	      0xe93ffcffff	                           jmp 0x4001f39	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40022fa	      0xba05000000	                              mov edx, 5	      3173	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x40022ff	      0xbe00000000	                              mov esi, 0	      3173	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4002304	            0x31ff	                            xor edi, edi	      3173	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x4002306	      0xe800000000	                          call 0x400230b	      3173	objcopy.c	FUNCTION_38	IF_98	CALL_162
0x400230b	          0x4889c1	                            mov rcx, rax	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x400230e	            0x6690	                                     nop	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x4002310	            0x31d2	                            xor edx, edx	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x4002312	          0x4889de	                            mov rsi, rbx	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x4002315	            0x31ff	                            xor edi, edi	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x4002317	            0x31c0	                            xor eax, eax	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x4002319	      0xe800000000	                          call 0x400231e	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x400231e	      0xe989fbffff	                           jmp 0x4001eac	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x4002323	       0xf1f440000	                   nop dword [rax + rax]	      3172	objcopy.c	FUNCTION_38	IF_98	CALL_161
0x4002328	        0x488b5308	                mov rdx, qword [rbx + 8]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x400232c	          0x488b08	                    mov rcx, qword [rax]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x400232f	          0x4c89ff	                            mov rdi, r15	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x4002332	          0x4c8b2b	                    mov r13, qword [rbx]	      2466	objcopy.c	FUNCTION_38	IF_7
0x4002335	          0x4c8b32	                    mov r14, qword [rdx]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x4002338	      0x48894c2408	                mov qword [rsp + 8], rcx	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x400233d	      0xe800000000	                          call 0x4002342	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x4002342	            0x31ff	                            xor edi, edi	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x4002344	      0xba05000000	                              mov edx, 5	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x4002349	      0xbe00000000	                              mov esi, 0	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x400234e	          0x4889c5	                            mov rbp, rax	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x4002351	      0xe800000000	                          call 0x4002356	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x4002356	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       104	stdio2.h	CALL_25
0x400235b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_25
0x400235e	          0x4d89f1	                             mov r9, r14	       104	stdio2.h	CALL_25
0x4002361	          0x4d89e8	                             mov r8, r13	       104	stdio2.h	CALL_25
0x4002364	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_25
0x4002367	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x400236c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_25
0x400236e	      0xe800000000	                          call 0x4002373	       104	stdio2.h	CALL_25
0x4002373	      0xe900fcffff	                           jmp 0x4001f78	       104	stdio2.h	CALL_25
0x4002378	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_25
0x4002380	          0x4c89ff	                            mov rdi, r15	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002383	      0xe800000000	                          call 0x4002388	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002388	          0x4c89ff	                            mov rdi, r15	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400238b	          0x4889c3	                            mov rbx, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400238e	      0xe800000000	                          call 0x4002393	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002393	          0x4889de	                            mov rsi, rbx	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002396	            0x89c7	                            mov edi, eax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002398	      0xe800000000	                          call 0x400239d	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400239d	      0xba05000000	                              mov edx, 5	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40023a2	          0x4889c3	                            mov rbx, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40023a5	      0xbe00000000	                              mov esi, 0	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40023aa	      0xe9f1fcffff	                           jmp 0x40020a0	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40023af	              0x90	                                     nop	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40023b0	          0x4889c7	                            mov rdi, rax	      2609	objcopy.c	FUNCTION_38	CALL_48
0x40023b3	      0xe800000000	                          call 0x40023b8	      2609	objcopy.c	FUNCTION_38	CALL_48
0x40023b8	        0x498b5708	                mov rdx, qword [r15 + 8]	      2610	objcopy.c	FUNCTION_38
0x40023bc	    0x488905000000	            mov qword [0x040023c3], rax 	      2609	objcopy.c	FUNCTION_38	CALL_48
0x40023c3	          0x4889c6	                            mov rsi, rax	      2610	objcopy.c	FUNCTION_38
0x40023c6	    0x488905000000	            mov qword [0x040023cd], rax 	      2609	objcopy.c	FUNCTION_38	CALL_48
0x40023cd	          0x4c89ff	                            mov rdi, r15	      2610	objcopy.c	FUNCTION_38
0x40023d0	    0xff92f8010000	                call qword [rdx + 0x1f8]	      2610	objcopy.c	FUNCTION_38
0x40023d6	          0x4885c0	                           test rax, rax	      2611	objcopy.c	FUNCTION_38	IF_34
0x40023d9	      0x4889442418	             mov qword [rsp + 0x18], rax	      2610	objcopy.c	FUNCTION_38
0x40023de	     0xf88d4feffff	                            js 0x40022b8	      2611	objcopy.c	FUNCTION_38	IF_34
0x40023e4	     0xf841e030000	                            je 0x4002708	      2619	objcopy.c	FUNCTION_38	IF_35
0x40023ea	          0x4889da	                            mov rdx, rbx	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023ed	      0xbe00000000	                              mov esi, 0	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023f2	          0x4c89ff	                            mov rdi, r15	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023f5	      0xe800000000	                          call 0x40023fa	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023fa	    0x8b0500000000	            mov eax, dword [0x04002400] 	      2629	objcopy.c	FUNCTION_38	IF_36
0x4002400	            0x85c0	                           test eax, eax	      2629	objcopy.c	FUNCTION_38	IF_36
0x4002402	     0xf84b0020000	                            je 0x40026b8	      2629	objcopy.c	FUNCTION_38	IF_36
0x4002408	    0x4c8b25000000	            mov r12, qword [0x0400240f] 	      2632	objcopy.c	FUNCTION_38	IF_37
0x400240f	          0x4d85e4	                           test r12, r12	      2632	objcopy.c	FUNCTION_38	IF_37
0x4002412	     0xf85b9000000	                           jne 0x40024d1	      2632	objcopy.c	FUNCTION_38	IF_37
0x4002418	      0xe933010000	                           jmp 0x4002550	      2632	objcopy.c	FUNCTION_38	IF_37
0x400241d	           0xf1f00	                         nop dword [rax]	      2632	objcopy.c	FUNCTION_38	IF_37
0x4002420	          0x8b6828	            mov ebp, dword [rax + 0x28] 	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x4002423	    0x81cd00010000	                           or ebp, 0x100	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x4002429	      0x498b742408	                mov rsi, qword [r12 + 8]	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x400242e	          0x4889df	                            mov rdi, rbx	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x4002431	      0xe800000000	                          call 0x4002436	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x4002436	          0x4885c0	                           test rax, rax	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x4002439	     0xf8509030000	                           jne 0x4002748	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x400243f	      0x498b742408	                mov rsi, qword [r12 + 8]	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x4002444	            0x89ea	                            mov edx, ebp	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x4002446	          0x4889df	                            mov rdi, rbx	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x4002449	    0x81ca00001000	                        or edx, 0x100000	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x400244f	      0xe800000000	                          call 0x4002454	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x4002454	          0x4885c0	                           test rax, rax	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x4002457	      0x4989442428	             mov qword [r12 + 0x28], rax	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x400245c	     0xf8417030000	                            je 0x4002779	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x4002462	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x4002467	          0x4889c6	                            mov rsi, rax	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x400246a	          0x4889df	                            mov rdi, rbx	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x400246d	      0xe800000000	                          call 0x4002472	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x4002472	            0x85c0	                           test eax, eax	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x4002474	     0xf84b6020000	                            je 0x4002730	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x400247a	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_62
0x400247f	            0x31f6	                            xor esi, esi	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_62
0x4002481	      0xba0c000000	                            mov edx, 0xc	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_62
0x4002486	      0xe835ddffff	              call sym.find_section_list	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_62
0x400248b	          0x4885c0	                           test rax, rax	      2681	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42
0x400248e	            0x7415	                            je 0x40024a5	      2681	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42
0x4002490	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_63
0x4002494	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_63
0x4002499	        0x80482401	                 or byte [rax + 0x24], 1	      1688	bfd.h	FUNCTION_94
0x400249d	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_94
0x40024a1	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_94
0x40024a5	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_65
0x40024aa	            0x31f6	                            xor esi, esi	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_65
0x40024ac	      0xba30000000	                           mov edx, 0x30	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_65
0x40024b1	      0xe80addffff	              call sym.find_section_list	      2688	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_65
0x40024b6	          0x4885c0	                           test rax, rax	      2690	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40024b9	            0x740d	                            je 0x40024c8	      2690	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40024bb	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40024c0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40024c4	        0x48894230	             mov qword [rdx + 0x30], rax	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x40024c8	        0x4d8b2424	                    mov r12, qword [r12]	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x40024cc	          0x4d85e4	                           test r12, r12	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x40024cf	            0x747f	                            je 0x4002550	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x40024d1	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_53
0x40024d6	            0x31f6	                            xor esi, esi	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_53
0x40024d8	      0xba40000000	                           mov edx, 0x40	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_53
0x40024dd	      0xe8dedcffff	              call sym.find_section_list	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_53
0x40024e2	          0x4885c0	                           test rax, rax	      2643	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x40024e5	     0xf8535ffffff	                           jne 0x4002420	      2643	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x40024eb	      0xbd28010000	                          mov ebp, 0x128	      2646	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7
0x40024f0	      0xe934ffffff	                           jmp 0x4002429	      2646	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7
0x40024f5	           0xf1f00	                         nop dword [rax]	      2646	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7
0x40024f8	          0x4c89ff	                            mov rdi, r15	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40024fb	      0xe800000000	                          call 0x4002500	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002500	            0x31ff	                            xor edi, edi	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002502	          0x4989c4	                            mov r12, rax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002505	      0xba05000000	                              mov edx, 5	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x400250a	      0xbe00000000	                              mov esi, 0	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x400250f	      0xe800000000	                          call 0x4002514	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002514	          0x4c89e6	                            mov rsi, r12	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002517	          0x4889c7	                            mov rdi, rax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x400251a	            0x31c0	                            xor eax, eax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x400251c	      0xe800000000	                          call 0x4002521	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002521	      0xe91efbffff	                           jmp 0x4002044	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002526	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x4002530	          0x4c89ff	                            mov rdi, r15	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002533	      0xe800000000	                          call 0x4002538	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002538	      0xba05000000	                              mov edx, 5	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x400253d	          0x4889c3	                            mov rbx, rax	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002540	      0xbe00000000	                              mov esi, 0	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002545	      0xe9eff9ffff	                           jmp 0x4001f39	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x400254a	    0x660f1f440000	                    nop word [rax + rax]	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002550	    0x4c8b25000000	            mov r12, qword [0x04002557] 	      2705	objcopy.c	FUNCTION_38	IF_45
0x4002557	          0x4d85e4	                           test r12, r12	      2705	objcopy.c	FUNCTION_38	IF_45
0x400255a	            0x7444	                            je 0x40025a0	      2705	objcopy.c	FUNCTION_38	IF_45
0x400255c	         0xf1f4000	                         nop dword [rax]	      2705	objcopy.c	FUNCTION_38	IF_45
0x4002560	      0x498b742408	                mov rsi, qword [r12 + 8]	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x4002565	          0x4c89ff	                            mov rdi, r15	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x4002568	      0xe800000000	                          call 0x400256d	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x400256d	          0x4885c0	                           test rax, rax	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x4002570	      0x4989442428	             mov qword [r12 + 0x28], rax	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x4002575	     0xf8426040000	                            je 0x40029a1	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x400257b	        0x4c8b6868	            mov r13, qword [rax + 0x68] 	      2720	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x400257f	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x4002584	          0x4889df	                            mov rdi, rbx	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x4002587	          0x4c89ee	                            mov rsi, r13	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x400258a	      0xe800000000	                          call 0x400258f	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x400258f	            0x85c0	                           test eax, eax	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x4002591	     0xf84fb0a0000	                            je 0x4003092	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x4002597	        0x4d8b2424	                    mov r12, qword [r12]	      2711	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x400259b	          0x4d85e4	                           test r12, r12	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x400259e	            0x75c0	                           jne 0x4002560	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x40025a0	    0x8b0500000000	            mov eax, dword [0x040025a6] 	      2729	objcopy.c	FUNCTION_38	IF_48
0x40025a6	            0x85c0	                           test eax, eax	      2729	objcopy.c	FUNCTION_38	IF_48
0x40025a8	     0xf85f20d0000	                           jne 0x40033a0	      2729	objcopy.c	FUNCTION_38	IF_48
0x40025ae	    0x4c8b25000000	            mov r12, qword [0x040025b5] 	      2778	objcopy.c	FUNCTION_38	IF_54
0x40025b5	          0x4d85e4	                           test r12, r12	      2778	objcopy.c	FUNCTION_38	IF_54
0x40025b8	            0x7536	                           jne 0x40025f0	      2778	objcopy.c	FUNCTION_38	IF_54
0x40025ba	      0xe9fa010000	                           jmp 0x40027b9	      2778	objcopy.c	FUNCTION_38	IF_54
0x40025bf	              0x90	                                     nop	      2778	objcopy.c	FUNCTION_38	IF_54
0x40025c0	      0xba05000000	                              mov edx, 5	      2804	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x40025c5	      0xbe00000000	                              mov esi, 0	      2804	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x40025ca	            0x31ff	                            xor edi, edi	      2804	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x40025cc	      0xe800000000	                          call 0x40025d1	      2804	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_93
0x40025d1	          0x4889ea	                            mov rdx, rbp	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_92
0x40025d4	          0x4889c1	                            mov rcx, rax	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_92
0x40025d7	          0x4c89fe	                            mov rsi, r15	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_92
0x40025da	            0x31ff	                            xor edi, edi	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_92
0x40025dc	            0x31c0	                            xor eax, eax	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_92
0x40025de	      0xe800000000	                          call 0x40025e3	      2803	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57	CALL_92
0x40025e3	        0x4d8b2424	                    mov r12, qword [r12]	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x40025e7	          0x4d85e4	                           test r12, r12	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x40025ea	     0xf84c9010000	                            je 0x40027b9	      2782	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x40025f0	      0x498b742408	                mov rsi, qword [r12 + 8]	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_87
0x40025f5	          0x4c89ff	                            mov rdi, r15	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_87
0x40025f8	      0xe800000000	                          call 0x40025fd	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_87
0x40025fd	          0x4885c0	                           test rax, rax	      2785	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55
0x4002600	          0x4889c5	                            mov rbp, rax	      2784	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_87
0x4002603	     0xf8481010000	                            je 0x400278a	      2785	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_55
0x4002609	        0xf6402101	               test byte [rax + 0x21], 1	      2793	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x400260d	      0xba05000000	                              mov edx, 5	      2796	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4002612	      0xbe00000000	                              mov esi, 0	      2796	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56	CALL_91
0x4002617	            0x74b1	                            je 0x40025ca	      2793	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_56
0x4002619	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      2800	objcopy.c	FUNCTION_38	IF_54	FOR_3
0x400261d	          0x4d85ed	                           test r13, r13	      2801	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57
0x4002620	            0x749e	                            je 0x40025c0	      2801	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_57
0x4002622	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_94
0x4002627	      0xbe00000000	                              mov esi, 0	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_94
0x400262c	      0xe800000000	                          call 0x4002631	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_94
0x4002631	          0x4885c0	                           test rax, rax	      2810	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58
0x4002634	          0x4989c6	                            mov r14, rax	      2809	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_94
0x4002637	     0xf843b030000	                            je 0x4002978	      2810	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_58
0x400263d	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_97
0x4002645	          0x4889ee	                            mov rsi, rbp	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_97
0x4002648	          0x4c89ff	                            mov rdi, r15	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_97
0x400264b	      0xe800000000	                          call 0x4002650	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_97
0x4002650	            0x85c0	                           test eax, eax	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_97
0x4002652	            0x743c	                            je 0x4002690	      2818	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	CALL_97
0x4002654	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_98
0x400265c	          0x4c89f1	                            mov rcx, r14	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_98
0x400265f	          0x4c89ea	                            mov rdx, r13	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_98
0x4002662	      0xbe01000000	                              mov esi, 1	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_98
0x4002667	      0xe800000000	                          call 0x400266c	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_98
0x400266c	          0x4939c5	                            cmp r13, rax	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_98
0x400266f	     0xf85a0100000	                           jne 0x4003715	      2820	objcopy.c	FUNCTION_38	IF_54	FOR_3	IF_59	IF_60	CALL_98
0x4002675	          0x4c89f7	                            mov rdi, r14	      2833	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_105
0x4002678	      0xe800000000	                          call 0x400267d	      2833	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_105
0x400267d	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      2834	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_106
0x4002685	      0xe800000000	                          call 0x400268a	      2834	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_106
0x400268a	      0xe954ffffff	                           jmp 0x40025e3	      2834	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_106
0x400268f	              0x90	                                     nop	      2834	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_106
0x4002690	            0x31ff	                            xor edi, edi	      2831	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_104
0x4002692	      0xba05000000	                              mov edx, 5	      2831	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_104
0x4002697	      0xbe00000000	                              mov esi, 0	      2831	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_104
0x400269c	      0xe800000000	                          call 0x40026a1	      2831	objcopy.c	FUNCTION_38	IF_54	FOR_3	CALL_104
0x40026a1	          0x4889ea	                            mov rdx, rbp	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026a4	          0x4889c1	                            mov rcx, rax	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026a7	          0x4c89fe	                            mov rsi, r15	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026aa	            0x31ff	                            xor edi, edi	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026ac	            0x31c0	                            xor eax, eax	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026ae	      0xe800000000	                          call 0x40026b3	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026b3	            0xebc0	                           jmp 0x4002675	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026b5	           0xf1f00	                         nop dword [rax]	      2830	objcopy.c	FUNCTION_38	IF_54	FOR_3	ELSE_12	CALL_103
0x40026b8	        0x488b4308	                mov rax, qword [rbx + 8]	      3647	objcopy.c	FUNCTION_44	IF_1
0x40026bc	          0x4889de	                            mov rsi, rbx	      3647	objcopy.c	FUNCTION_44	IF_1
0x40026bf	          0x4c89ff	                            mov rdi, r15	      3647	objcopy.c	FUNCTION_44	IF_1
0x40026c2	    0xff9060010000	                call qword [rax + 0x160]	      3647	objcopy.c	FUNCTION_44	IF_1
0x40026c8	            0x85c0	                           test eax, eax	      3647	objcopy.c	FUNCTION_44	IF_1
0x40026ca	     0xf8538fdffff	                           jne 0x4002408	      3647	objcopy.c	FUNCTION_44	IF_1
0x40026d0	            0x31ff	                            xor edi, edi	      3651	objcopy.c	FUNCTION_44	IF_1	CALL_2
0x40026d2	      0xba05000000	                              mov edx, 5	      3651	objcopy.c	FUNCTION_44	IF_1	CALL_2
0x40026d7	      0xbe00000000	                              mov esi, 0	      3651	objcopy.c	FUNCTION_44	IF_1	CALL_2
0x40026dc	    0xc70500000000	               mov dword [0x040026e6], 1	      3649	objcopy.c	FUNCTION_44	IF_1
0x40026e6	      0xe800000000	                          call 0x40026eb	      3651	objcopy.c	FUNCTION_44	IF_1	CALL_2
0x40026eb	            0x31d2	                            xor edx, edx	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x40026ed	          0x4889c1	                            mov rcx, rax	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x40026f0	          0x4c89fe	                            mov rsi, r15	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x40026f3	            0x31ff	                            xor edi, edi	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x40026f5	            0x31c0	                            xor eax, eax	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x40026f7	      0xe800000000	                          call 0x40026fc	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x40026fc	      0xe907fdffff	                           jmp 0x4002408	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4002701	     0xf1f80000000	                         nop dword [rax]	      3650	objcopy.c	FUNCTION_44	IF_1	CALL_1
0x4002708	    0x488b3d000000	            mov rdi, qword [0x0400270f] 	      2621	objcopy.c	FUNCTION_38	IF_35	CALL_50
0x400270f	      0xe800000000	                          call 0x4002714	      2621	objcopy.c	FUNCTION_38	IF_35	CALL_50
0x4002714	    0x48c705000000	               mov qword [0x0400271f], 0	      2622	objcopy.c	FUNCTION_38	IF_35
0x400271f	    0x48c705000000	               mov qword [0x0400272a], 0	      2622	objcopy.c	FUNCTION_38	IF_35
0x400272a	      0xe9bbfcffff	                           jmp 0x40023ea	      2622	objcopy.c	FUNCTION_38	IF_35
0x400272f	              0x90	                                     nop	      2622	objcopy.c	FUNCTION_38	IF_35
0x4002730	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x4002735	            0x31c9	                            xor ecx, ecx	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x4002737	              0x48	                                 invalid	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
0x4002738	              0x89	                                 invalid	      3068	objcopy.c	FUNCTION_38	IF_83	FOR_6	IF_84	CALL_143
section_add_load_file	ELSE,0:SWITCH,0:WHILE,1:IF,3:DO,0:CALL,12:functions,0:FOR,0	77
0x40009a0	            0x4156	                                push r14	      4645	objcopy.c	FUNCTION_61
0x40009a2	            0x4155	                                push r13	      4645	objcopy.c	FUNCTION_61
0x40009a4	          0x4989fd	                            mov r13, rdi	      4645	objcopy.c	FUNCTION_61
0x40009a7	            0x4154	                                push r12	      4645	objcopy.c	FUNCTION_61
0x40009a9	              0x55	                                push rbp	      4645	objcopy.c	FUNCTION_61
0x40009aa	      0xbe00000000	                              mov esi, 0	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40009af	              0x53	                                push rbx	      4645	objcopy.c	FUNCTION_61
0x40009b0	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40009b4	      0xe800000000	                          call 0x40009b9	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40009b9	          0x4885c0	                           test rax, rax	      4654	objcopy.c	FUNCTION_61	IF_1
0x40009bc	     0xf84b4000000	                            je 0x4000a76	      4654	objcopy.c	FUNCTION_61	IF_1
0x40009c2	      0xbf00100000	                         mov edi, 0x1000	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009c7	          0x4889c5	                            mov rbp, rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009ca	    0x41bc00100000	                        mov r12d, 0x1000	      4659	objcopy.c	FUNCTION_61
0x40009d0	      0xe800000000	                          call 0x40009d5	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009d5	            0x31db	                            xor ebx, ebx	      4658	objcopy.c	FUNCTION_61
0x40009d7	        0x49894520	             mov qword [r13 + 0x20], rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40009db	            0xeb2f	                           jmp 0x4000a0c	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x40009dd	           0xf1f00	                         nop dword [rax]	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x40009e0	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x40009e4	          0x4c89e2	                            mov rdx, r12	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009e7	          0x4801df	                            add rdi, rbx	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009ea	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009ed	          0x4829da	                            sub rdx, rbx	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009f0	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009f5	      0xe800000000	                          call 0x40009fa	       295	stdio2.h	FUNCTION_90	CALL_9
0x40009fa	          0x4889ef	                            mov rdi, rbp	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x40009fd	          0x4989c6	                            mov r14, rax	       295	stdio2.h	FUNCTION_90	CALL_9
0x4000a00	      0xe800000000	                          call 0x4000a05	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000a05	            0x85c0	                           test eax, eax	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000a07	            0x754b	                           jne 0x4000a54	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000a09	          0x4c01f3	                            add rbx, r14	      4675	objcopy.c	FUNCTION_61	WHILE_1
0x4000a0c	          0x4889ef	                            mov rdi, rbp	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a0f	      0xe800000000	                          call 0x4000a14	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a14	            0x85c0	                           test eax, eax	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a16	            0x7528	                           jne 0x4000a40	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000a18	          0x4c39e3	                            cmp rbx, r12	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000a1b	            0x75c3	                           jne 0x40009e0	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000a1d	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a21	        0x4c8d241b	                    lea r12, [rbx + rbx]	      4667	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000a25	          0x4c89e6	                            mov rsi, r12	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a28	      0xe800000000	                          call 0x4000a2d	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a2d	        0x49894520	             mov qword [r13 + 0x20], rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a31	          0x4889c7	                            mov rdi, rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a34	            0xebae	                           jmp 0x40009e4	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000a40	        0x49895d18	             mov qword [r13 + 0x18], rbx	      4678	objcopy.c	FUNCTION_61
0x4000a44	          0x4889ef	                            mov rdi, rbp	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000a47	              0x5b	                                 pop rbx	      4681	objcopy.c	FUNCTION_61
0x4000a48	              0x5d	                                 pop rbp	      4681	objcopy.c	FUNCTION_61
0x4000a49	            0x415c	                                 pop r12	      4681	objcopy.c	FUNCTION_61
0x4000a4b	            0x415d	                                 pop r13	      4681	objcopy.c	FUNCTION_61
0x4000a4d	            0x415e	                                 pop r14	      4681	objcopy.c	FUNCTION_61
0x4000a4f	      0xe900000000	                           jmp 0x4000a54	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000a54	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a58	      0xbe00000000	                              mov esi, 0	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a5d	            0x31ff	                            xor edi, edi	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a5f	      0xba05000000	                              mov edx, 5	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a64	      0xe800000000	                          call 0x4000a69	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a69	          0x4889de	                            mov rsi, rbx	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a6c	          0x4889c7	                            mov rdi, rax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a6f	            0x31c0	                            xor eax, eax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a71	      0xe800000000	                          call 0x4000a76	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000a76	      0xe800000000	                          call 0x4000a7b	      4656	objcopy.c	FUNCTION_61	CALL_4
0x4000a7b	            0x8b38	                    mov edi, dword [rax]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a7d	      0xe800000000	                          call 0x4000a82	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a82	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a86	          0x4889c5	                            mov rbp, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a89	      0xba05000000	                              mov edx, 5	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a8e	      0xbe00000000	                              mov esi, 0	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a93	            0x31ff	                            xor edi, edi	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a95	      0xe800000000	                          call 0x4000a9a	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a9a	          0x4889ea	                            mov rdx, rbp	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000a9d	          0x4889c7	                            mov rdi, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000aa0	          0x4889de	                            mov rsi, rbx	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000aa3	            0x31c0	                            xor eax, eax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x4000aa5	      0xe800000000	                          call 0x4000aaa	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
eq_string_redefnode	ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	9
0x40000d0	        0x4883ec08	                              sub rsp, 8	       961	objcopy.c	FUNCTION_6
0x40000d4	          0x488b36	                    mov rsi, qword [rsi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000d7	          0x488b3f	                    mov rdi, qword [rdi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000da	      0xe800000000	                          call 0x40000df	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000df	            0x85c0	                           test eax, eax	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e1	           0xf94c0	                                 sete al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e4	        0x4883c408	                              add rsp, 8	       965	objcopy.c	FUNCTION_6
0x40000e8	           0xfb6c0	                           movzx eax, al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000eb	              0xc3	                                     ret	       965	objcopy.c	FUNCTION_6
is_specified_symbol_predicate	ELSE,1:SWITCH,0:WHILE,0:IF,3:DO,0:CALL,2:functions,0:FOR,0	24
0x4000170	              0x53	                                push rbx	      1152	objcopy.c	FUNCTION_15
0x4000171	          0x488b3f	                    mov rdi, qword [rdi]	      1155	objcopy.c	FUNCTION_15
0x4000174	          0x4889f3	                            mov rbx, rsi	      1152	objcopy.c	FUNCTION_15
0x4000177	          0x803f21	                    cmp byte [rdi], 0x21	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017a	            0x7424	                            je 0x40001a0	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017c	          0x488b36	                    mov rsi, qword [rsi]	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400017f	            0x31d2	                            xor edx, edx	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000181	      0xe800000000	                          call 0x4000186	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000186	            0x85c0	                           test eax, eax	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000188	            0x7507	                           jne 0x4000191	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400018a	    0xc74308010000	                  mov dword [rbx + 8], 1	      1161	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000191	      0xb801000000	                              mov eax, 1	      1163	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000196	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x4000197	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
0x4000198	     0xf1f84000000	                   nop dword [rax + rax]	      1178	objcopy.c	FUNCTION_15
0x40001a0	          0x488b36	                    mov rsi, qword [rsi]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a3	        0x4883c701	                              add rdi, 1	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a7	            0x31d2	                            xor edx, edx	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a9	      0xe800000000	                          call 0x40001ae	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001ae	            0x85c0	                           test eax, eax	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b0	            0x75df	                           jne 0x4000191	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b2	    0xc74308000000	                  mov dword [rbx + 8], 0	      1170	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x40001b9	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x40001ba	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
parse_flags	ELSE,2:SWITCH,0:WHILE,0:IF,2:DO,1:CALL,8:functions,0:FOR,0	157
0x4000b90	            0x4156	                                push r14	       720	objcopy.c	FUNCTION_3
0x4000b92	          0x4531f6	                          xor r14d, r14d	       725	objcopy.c	FUNCTION_3
0x4000b95	            0x4155	                                push r13	       720	objcopy.c	FUNCTION_3
0x4000b97	            0x4154	                                push r12	       720	objcopy.c	FUNCTION_3
0x4000b99	              0x55	                                push rbp	       720	objcopy.c	FUNCTION_3
0x4000b9a	          0x4889fd	                            mov rbp, rdi	       720	objcopy.c	FUNCTION_3
0x4000b9d	              0x53	                                push rbx	       720	objcopy.c	FUNCTION_3
0x4000b9e	            0xeb0c	                           jmp 0x4000bac	       720	objcopy.c	FUNCTION_3
0x4000ba0	        0x4183ce01	                              or r14d, 1	       741	objcopy.c	FUNCTION_3	DO_1
0x4000ba4	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x4000ba7	            0x7456	                            je 0x4000bff	       768	objcopy.c	FUNCTION_3
0x4000ba9	          0x4889dd	                            mov rbp, rbx	       768	objcopy.c	FUNCTION_3
0x4000bac	      0xbe2c000000	                           mov esi, 0x2c	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bb1	          0x4889ef	                            mov rdi, rbp	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bb4	      0xe800000000	                          call 0x4000bb9	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bb9	          0x4885c0	                           test rax, rax	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x4000bbc	          0x4889c3	                            mov rbx, rax	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x4000bbf	            0x746f	                            je 0x4000c30	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x4000bc1	          0x4189c5	                           mov r13d, eax	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000bc4	        0x4883c301	                              add rbx, 1	       735	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000bc8	          0x4129ed	                           sub r13d, ebp	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x4000bcb	          0x4d63e5	                        movsxd r12, r13d	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bce	          0x4889ee	                            mov rsi, rbp	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bd1	      0xbf00000000	                              mov edi, 0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bd6	          0x4c89e2	                            mov rdx, r12	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bd9	      0xe800000000	                          call 0x4000bde	       741	objcopy.c	FUNCTION_3	DO_1
0x4000bde	            0x85c0	                           test eax, eax	       741	objcopy.c	FUNCTION_3	DO_1
0x4000be0	            0x74be	                            je 0x4000ba0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000be2	          0x4c89e2	                            mov rdx, r12	       742	objcopy.c	FUNCTION_3	DO_1
0x4000be5	          0x4889ee	                            mov rsi, rbp	       742	objcopy.c	FUNCTION_3	DO_1
0x4000be8	      0xbf00000000	                              mov edi, 0	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bed	      0xe800000000	                          call 0x4000bf2	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bf2	            0x85c0	                           test eax, eax	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bf4	            0x751a	                           jne 0x4000c10	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bf6	        0x4183ce02	                              or r14d, 2	       742	objcopy.c	FUNCTION_3	DO_1
0x4000bfa	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x4000bfd	            0x75aa	                           jne 0x4000ba9	       768	objcopy.c	FUNCTION_3
0x4000bff	              0x5b	                                 pop rbx	       771	objcopy.c	FUNCTION_3
0x4000c00	          0x4489f0	                           mov eax, r14d	       771	objcopy.c	FUNCTION_3
0x4000c03	              0x5d	                                 pop rbp	       771	objcopy.c	FUNCTION_3
0x4000c04	            0x415c	                                 pop r12	       771	objcopy.c	FUNCTION_3
0x4000c06	            0x415d	                                 pop r13	       771	objcopy.c	FUNCTION_3
0x4000c08	            0x415e	                                 pop r14	       771	objcopy.c	FUNCTION_3
0x4000c0a	              0xc3	                                     ret	       771	objcopy.c	FUNCTION_3
0x4000c0b	       0xf1f440000	                   nop dword [rax + rax]	       771	objcopy.c	FUNCTION_3
0x4000c10	          0x4c89e2	                            mov rdx, r12	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c13	          0x4889ee	                            mov rsi, rbp	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c16	      0xbf00000000	                              mov edi, 0	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c1b	      0xe800000000	                          call 0x4000c20	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c20	            0x85c0	                           test eax, eax	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c22	            0x751c	                           jne 0x4000c40	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c24	    0x4181ce000200	                          or r14d, 0x200	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c2b	      0xe974ffffff	                           jmp 0x4000ba4	       743	objcopy.c	FUNCTION_3	DO_1
0x4000c30	          0x4889ef	                            mov rdi, rbp	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c33	      0xe800000000	                          call 0x4000c38	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c38	          0x4189c5	                           mov r13d, eax	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c3b	            0xeb8e	                           jmp 0x4000bcb	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c3d	           0xf1f00	                         nop dword [rax]	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000c40	          0x4c89e2	                            mov rdx, r12	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c43	          0x4889ee	                            mov rsi, rbp	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c46	      0xbf00000000	                              mov edi, 0	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c4b	      0xe800000000	                          call 0x4000c50	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c50	            0x85c0	                           test eax, eax	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c52	            0x750c	                           jne 0x4000c60	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c54	        0x4183ce08	                              or r14d, 8	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c58	      0xe947ffffff	                           jmp 0x4000ba4	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c5d	           0xf1f00	                         nop dword [rax]	       744	objcopy.c	FUNCTION_3	DO_1
0x4000c60	          0x4c89e2	                            mov rdx, r12	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c63	          0x4889ee	                            mov rsi, rbp	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c66	      0xbf00000000	                              mov edi, 0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c6b	      0xe800000000	                          call 0x4000c70	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c70	            0x85c0	                           test eax, eax	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c72	            0x750c	                           jne 0x4000c80	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c74	    0x4181ce002000	                         or r14d, 0x2000	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c7b	      0xe924ffffff	                           jmp 0x4000ba4	       745	objcopy.c	FUNCTION_3	DO_1
0x4000c80	          0x4c89e2	                            mov rdx, r12	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c83	          0x4889ee	                            mov rsi, rbp	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c86	      0xbf00000000	                              mov edi, 0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c8b	      0xe800000000	                          call 0x4000c90	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c90	            0x85c0	                           test eax, eax	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c92	            0x750c	                           jne 0x4000ca0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c94	        0x4183ce10	                           or r14d, 0x10	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c98	      0xe907ffffff	                           jmp 0x4000ba4	       746	objcopy.c	FUNCTION_3	DO_1
0x4000c9d	           0xf1f00	                         nop dword [rax]	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ca0	          0x4c89e2	                            mov rdx, r12	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ca3	          0x4889ee	                            mov rsi, rbp	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ca6	      0xbf00000000	                              mov edi, 0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cab	      0xe800000000	                          call 0x4000cb0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cb0	            0x85c0	                           test eax, eax	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cb2	            0x741d	                            je 0x4000cd1	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cb4	          0x4c89e2	                            mov rdx, r12	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cb7	          0x4889ee	                            mov rsi, rbp	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cba	      0xbf00000000	                              mov edi, 0	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cbf	      0xe800000000	                          call 0x4000cc4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cc4	            0x85c0	                           test eax, eax	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cc6	            0x7512	                           jne 0x4000cda	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cc8	        0x4183ce40	                           or r14d, 0x40	       748	objcopy.c	FUNCTION_3	DO_1
0x4000ccc	      0xe9d3feffff	                           jmp 0x4000ba4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000cd1	        0x4183ce20	                           or r14d, 0x20	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cd5	      0xe9cafeffff	                           jmp 0x4000ba4	       747	objcopy.c	FUNCTION_3	DO_1
0x4000cda	          0x4c89e2	                            mov rdx, r12	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cdd	          0x4889ee	                            mov rsi, rbp	       749	objcopy.c	FUNCTION_3	DO_1
0x4000ce0	      0xbf00000000	                              mov edi, 0	       749	objcopy.c	FUNCTION_3	DO_1
0x4000ce5	      0xe800000000	                          call 0x4000cea	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cea	            0x85c0	                           test eax, eax	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cec	            0x7420	                            je 0x4000d0e	       749	objcopy.c	FUNCTION_3	DO_1
0x4000cee	          0x4c89e2	                            mov rdx, r12	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cf1	          0x4889ee	                            mov rsi, rbp	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cf4	      0xbf00000000	                              mov edi, 0	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cf9	      0xe800000000	                          call 0x4000cfe	       750	objcopy.c	FUNCTION_3	DO_1
0x4000cfe	            0x85c0	                           test eax, eax	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d00	            0x7518	                           jne 0x4000d1a	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d02	    0x4181ce000100	                          or r14d, 0x100	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d09	      0xe996feffff	                           jmp 0x4000ba4	       750	objcopy.c	FUNCTION_3	DO_1
0x4000d0e	    0x4181ce000000	                   or r14d, section_end.	       749	objcopy.c	FUNCTION_3	DO_1
0x4000d15	      0xe98afeffff	                           jmp 0x4000ba4	       749	objcopy.c	FUNCTION_3	DO_1
0x4000d1a	          0x4c89e2	                            mov rdx, r12	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d1d	          0x4889ee	                            mov rsi, rbp	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d20	      0xbf00000000	                              mov edi, 0	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d25	      0xe800000000	                          call 0x4000d2a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d2a	            0x85c0	                           test eax, eax	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d2c	            0x750c	                           jne 0x4000d3a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d2e	    0x4181ce000080	                       or r14d, 0x800000	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d35	      0xe96afeffff	                           jmp 0x4000ba4	       751	objcopy.c	FUNCTION_3	DO_1
0x4000d3a	          0x4c89e2	                            mov rdx, r12	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d3d	          0x4889ee	                            mov rsi, rbp	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d40	      0xbf00000000	                              mov edi, 0	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d45	      0xe800000000	                          call 0x4000d4a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d4a	            0x85c0	                           test eax, eax	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d4c	            0x750c	                           jne 0x4000d5a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d4e	    0x4181ce000000	                      or r14d, 0x1000000	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d55	      0xe94afeffff	                           jmp 0x4000ba4	       752	objcopy.c	FUNCTION_3	DO_1
0x4000d5a	        0x418d7d01	                      lea edi, [r13 + 1]	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d5e	          0x4863ff	                         movsxd rdi, edi	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d61	      0xe800000000	                          call 0x4000d66	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d66	          0x4c89e2	                            mov rdx, r12	       126	string3.h	FUNCTION_72	CALL_3
0x4000d69	          0x4889c3	                            mov rbx, rax	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000d6c	          0x4889ee	                            mov rsi, rbp	       126	string3.h	FUNCTION_72	CALL_3
0x4000d6f	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_72	CALL_3
0x4000d72	      0xe800000000	                          call 0x4000d77	       126	string3.h	FUNCTION_72	CALL_3
0x4000d77	      0xba05000000	                              mov edx, 5	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d7c	      0xbe00000000	                              mov esi, 0	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d81	            0x31ff	                            xor edi, edi	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d83	      0x42c6042300	                 mov byte [rbx + r12], 0	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x4000d88	      0xe800000000	                          call 0x4000d8d	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d8d	          0x4889de	                            mov rsi, rbx	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d90	          0x4889c7	                            mov rdi, rax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d93	            0x31c0	                            xor eax, eax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d95	      0xe800000000	                          call 0x4000d9a	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000d9a	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000d9f	            0x31ff	                            xor edi, edi	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000da1	      0xba05000000	                              mov edx, 5	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000da6	      0xe800000000	                          call 0x4000dab	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000dab	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000db0	          0x4889c7	                            mov rdi, rax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000db3	            0x31c0	                            xor eax, eax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000db5	      0xe800000000	                          call 0x4000dba	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
add_redefine_and_check	ELSE,0:SWITCH,0:WHILE,0:IF,2:DO,0:CALL,11:functions,0:FOR,0	62
0x4000ab0	            0x4155	                                push r13	      1687	objcopy.c	FUNCTION_29
0x4000ab2	            0x4154	                                push r12	      1687	objcopy.c	FUNCTION_29
0x4000ab4	          0x4989fd	                            mov r13, rdi	      1687	objcopy.c	FUNCTION_29
0x4000ab7	              0x55	                                push rbp	      1687	objcopy.c	FUNCTION_29
0x4000ab8	              0x53	                                push rbx	      1687	objcopy.c	FUNCTION_29
0x4000ab9	          0x4989f4	                            mov r12, rsi	      1687	objcopy.c	FUNCTION_29
0x4000abc	      0xbf10000000	                           mov edi, 0x10	      1688	objcopy.c	FUNCTION_29
0x4000ac1	          0x4889d5	                            mov rbp, rdx	      1687	objcopy.c	FUNCTION_29
0x4000ac4	        0x4883ec08	                              sub rsp, 8	      1687	objcopy.c	FUNCTION_29
0x4000ac8	      0xe800000000	                          call 0x4000acd	      1688	objcopy.c	FUNCTION_29
0x4000acd	          0x4c89e7	                            mov rdi, r12	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000ad0	          0x4889c3	                            mov rbx, rax	      1688	objcopy.c	FUNCTION_29
0x4000ad3	      0xe800000000	                          call 0x4000ad8	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000ad8	          0x4889ef	                            mov rdi, rbp	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000adb	          0x488903	                    mov qword [rbx], rax	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000ade	      0xe800000000	                          call 0x4000ae3	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000ae3	    0x488b3d000000	            mov rdi, qword [0x04000aea] 	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000aea	        0x48894308	                mov qword [rbx + 8], rax	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000aee	          0x4889de	                            mov rsi, rbx	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000af1	      0xe800000000	                          call 0x4000af6	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000af6	          0x4885c0	                           test rax, rax	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000af9	            0x7551	                           jne 0x4000b4c	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000afb	    0x488b3d000000	            mov rdi, qword [0x04000b02] 	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b02	          0x4889ee	                            mov rsi, rbp	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b05	      0xe800000000	                          call 0x4000b0a	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b0a	          0x4885c0	                           test rax, rax	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b0d	            0x755e	                           jne 0x4000b6d	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000b0f	    0x488b3d000000	            mov rdi, qword [0x04000b16] 	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b16	          0x4889de	                            mov rsi, rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b19	      0xba01000000	                              mov edx, 1	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b1e	      0xe800000000	                          call 0x4000b23	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b23	          0x488918	                    mov qword [rax], rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000b26	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1707	objcopy.c	FUNCTION_29	CALL_11
0x4000b2a	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b2f	    0x488b3d000000	            mov rdi, qword [0x04000b36] 	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b36	          0x4889de	                            mov rsi, rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b39	      0xe800000000	                          call 0x4000b3e	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b3e	          0x488918	                    mov qword [rax], rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000b41	        0x4883c408	                              add rsp, 8	      1709	objcopy.c	FUNCTION_29
0x4000b45	              0x5b	                                 pop rbx	      1709	objcopy.c	FUNCTION_29
0x4000b46	              0x5d	                                 pop rbp	      1709	objcopy.c	FUNCTION_29
0x4000b47	            0x415c	                                 pop r12	      1709	objcopy.c	FUNCTION_29
0x4000b49	            0x415d	                                 pop r13	      1709	objcopy.c	FUNCTION_29
0x4000b4b	              0xc3	                                     ret	      1709	objcopy.c	FUNCTION_29
0x4000b4c	      0xba05000000	                              mov edx, 5	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b51	      0xbe00000000	                              mov esi, 0	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b56	            0x31ff	                            xor edi, edi	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b58	      0xe800000000	                          call 0x4000b5d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b5d	          0x4c89e2	                            mov rdx, r12	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b60	          0x4889c7	                            mov rdi, rax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b63	          0x4c89ee	                            mov rsi, r13	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b66	            0x31c0	                            xor eax, eax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b68	      0xe800000000	                          call 0x4000b6d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000b6d	      0xba05000000	                              mov edx, 5	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b72	      0xbe00000000	                              mov esi, 0	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b77	            0x31ff	                            xor edi, edi	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b79	      0xe800000000	                          call 0x4000b7e	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b7e	          0x4889ea	                            mov rdx, rbp	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b81	          0x4889c7	                            mov rdi, rax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b84	          0x4c89ee	                            mov rsi, r13	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b87	            0x31c0	                            xor eax, eax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x4000b89	      0xe800000000	                          call 0x4000b8e	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
copy_file	ELSE,3:SWITCH,2:WHILE,0:IF,18:DO,0:CALL,30:functions,0:FOR,0	242
0x4004dd0	            0x4157	                                push r15	      3428	objcopy.c	FUNCTION_41
0x4004dd2	            0x4156	                                push r14	      3428	objcopy.c	FUNCTION_41
0x4004dd4	          0x4d89c6	                             mov r14, r8	      3428	objcopy.c	FUNCTION_41
0x4004dd7	            0x4155	                                push r13	      3428	objcopy.c	FUNCTION_41
0x4004dd9	            0x4154	                                push r12	      3428	objcopy.c	FUNCTION_41
0x4004ddb	          0x4989f5	                            mov r13, rsi	      3428	objcopy.c	FUNCTION_41
0x4004dde	              0x55	                                push rbp	      3428	objcopy.c	FUNCTION_41
0x4004ddf	              0x53	                                push rbx	      3428	objcopy.c	FUNCTION_41
0x4004de0	          0x4889fd	                            mov rbp, rdi	      3428	objcopy.c	FUNCTION_41
0x4004de3	          0x4889d3	                            mov rbx, rdx	      3428	objcopy.c	FUNCTION_41
0x4004de6	          0x4989cc	                            mov r12, rcx	      3428	objcopy.c	FUNCTION_41
0x4004de9	        0x4883ec28	                           sub rsp, 0x28	      3428	objcopy.c	FUNCTION_41
0x4004ded	    0x64488b042528	                mov rax, qword fs:[0x28]	      3428	objcopy.c	FUNCTION_41
0x4004df6	      0x4889442418	             mov qword [rsp + 0x18], rax	      3428	objcopy.c	FUNCTION_41
0x4004dfb	            0x31c0	                            xor eax, eax	      3428	objcopy.c	FUNCTION_41
0x4004dfd	      0xe800000000	                          call 0x4004e02	      3432	objcopy.c	FUNCTION_41	CALL_1
0x4004e02	        0x4883f800	                              cmp rax, 0	      3434	objcopy.c	FUNCTION_41	IF_1
0x4004e06	     0xf8e04010000	                           jle 0x4004f10	      3434	objcopy.c	FUNCTION_41	IF_1
0x4004e0c	          0x4889de	                            mov rsi, rbx	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4004e0f	          0x4889ef	                            mov rdi, rbp	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4004e12	      0xe800000000	                          call 0x4004e17	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4004e17	          0x4885c0	                           test rax, rax	      3446	objcopy.c	FUNCTION_41	IF_3
0x4004e1a	          0x4889c3	                            mov rbx, rax	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4004e1d	     0xf848d020000	                            je 0x40050b0	      3446	objcopy.c	FUNCTION_41	IF_3
0x4004e23	    0x8b0d00000000	            mov ecx, dword [0x04004e29] 	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e29	          0x83f910	                           cmp ecx, 0x10	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e2c	            0x7744	                            ja 0x4004e72	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e2e	      0xb801000000	                              mov eax, 1	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e33	          0x48d3e0	                             shl rax, cl	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e36	      0xa92a020000	                         test eax, 0x22a	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e3b	     0xf84f7000000	                            je 0x4004f38	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e41	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e44	            0x89f0	                            mov eax, esi	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e46	          0xc1e805	                              shr eax, 5	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e49	      0x25ffff0f00	                        and eax, 0xfffff	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4004e4e	          0x83f905	                              cmp ecx, 5	      3462	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e51	     0xf84b9020000	                            je 0x4005110	      3462	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e57	       0xd00400200	                         or eax, 0x24000	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e5c	      0x25ffff0f00	                        and eax, 0xfffff	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e61	          0xc1e005	                              shl eax, 5	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e64	            0x89c2	                            mov edx, eax	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e66	            0x89f0	                            mov eax, esi	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e68	      0x251f0000fe	                     and eax, 0xfe00001f	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e6d	             0x9d0	                             or eax, edx	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e6f	          0x894344	             mov dword [rbx + 0x44], eax	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4004e72	    0x8b0500000000	            mov eax, dword [0x04004e78] 	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4004e78	          0x83f801	                              cmp eax, 1	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4004e7b	     0xf84cf000000	                            je 0x4004f50	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4004e81	          0x83f802	                              cmp eax, 2	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4004e84	     0xf849e000000	                            je 0x4004f28	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x4004e8a	      0xbe02000000	                              mov esi, 2	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x4004e8f	          0x4889df	                            mov rdi, rbx	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x4004e92	      0xe800000000	                          call 0x4004e97	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x4004e97	            0x85c0	                           test eax, eax	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x4004e99	     0xf84c1000000	                            je 0x4004f60	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x4004e9f	          0x4d85e4	                           test r12, r12	      3492	objcopy.c	FUNCTION_41	IF_5	IF_6
0x4004ea2	    0x41bf01000000	                             mov r15d, 1	      3498	objcopy.c	FUNCTION_41	IF_5	ELSE_1
0x4004ea8	     0xf84f2010000	                            je 0x40050a0	      3492	objcopy.c	FUNCTION_41	IF_5	IF_6
0x4004eae	          0x4c89e6	                            mov rsi, r12	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x4004eb1	          0x4c89ef	                            mov rdi, r13	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x4004eb4	      0xe800000000	                          call 0x4004eb9	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x4004eb9	          0x4885c0	                           test rax, rax	      3501	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4004ebc	          0x4889c5	                            mov rbp, rax	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x4004ebf	     0xf8463010000	                            je 0x4005028	      3501	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4004ec5	    0x8b1500000000	            mov edx, dword [0x04004ecb] 	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4004ecb	        0x488d7308	                      lea rsi, [rbx + 8]	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4004ecf	          0x4889c7	                            mov rdi, rax	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4004ed2	      0xe859bfffff	   call sym.set_long_section_mode.isra.7	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4004ed7	          0x4d89f0	                             mov r8, r14	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4004eda	          0x4489f9	                           mov ecx, r15d	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4004edd	          0x4c89e2	                            mov rdx, r12	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4004ee0	          0x4889ee	                            mov rsi, rbp	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4004ee3	          0x4889df	                            mov rdi, rbx	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4004ee6	      0xe845f7ffff	                   call sym.copy_archive	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4004eeb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3586	objcopy.c	FUNCTION_41
0x4004ef0	    0x644833042528	                xor rax, qword fs:[0x28]	      3586	objcopy.c	FUNCTION_41
0x4004ef9	     0xf8593020000	                           jne 0x4005192	      3586	objcopy.c	FUNCTION_41
0x4004eff	        0x4883c428	                           add rsp, 0x28	      3586	objcopy.c	FUNCTION_41
0x4004f03	              0x5b	                                 pop rbx	      3586	objcopy.c	FUNCTION_41
0x4004f04	              0x5d	                                 pop rbp	      3586	objcopy.c	FUNCTION_41
0x4004f05	            0x415c	                                 pop r12	      3586	objcopy.c	FUNCTION_41
0x4004f07	            0x415d	                                 pop r13	      3586	objcopy.c	FUNCTION_41
0x4004f09	            0x415e	                                 pop r14	      3586	objcopy.c	FUNCTION_41
0x4004f0b	            0x415f	                                 pop r15	      3586	objcopy.c	FUNCTION_41
0x4004f0d	              0xc3	                                     ret	      3586	objcopy.c	FUNCTION_41
0x4004f0e	            0x6690	                                     nop	      3586	objcopy.c	FUNCTION_41
0x4004f10	     0xf84ea000000	                            je 0x4005000	      3436	objcopy.c	FUNCTION_41	IF_1	IF_2
0x4004f16	    0xc70500000000	               mov dword [0x04004f20], 1	      3584	objcopy.c	FUNCTION_41	ELSE_3
0x4004f20	            0xebc9	                           jmp 0x4004eeb	      3584	objcopy.c	FUNCTION_41	ELSE_3
0x4004f22	    0x660f1f440000	                    nop word [rax + rax]	      3584	objcopy.c	FUNCTION_41	ELSE_3
0x4004f28	    0x814b44000080	         or dword [rbx + 0x44], 0x800000	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f2f	      0xe956ffffff	                           jmp 0x4004e8a	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f34	         0xf1f4000	                         nop dword [rax]	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f38	      0xa900000100	                       test eax, 0x10000	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f3d	     0xf842fffffff	                            je 0x4004e72	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f43	    0x814b44000010	         or dword [rbx + 0x44], 0x100000	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x4004f4a	      0xe923ffffff	                           jmp 0x4004e72	      3467	objcopy.c	FUNCTION_41	SWITCH_1
0x4004f4f	              0x90	                                     nop	      3467	objcopy.c	FUNCTION_41	SWITCH_1
0x4004f50	    0x814b44000080	        or dword [rbx + 0x44], 0x1800000	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f57	      0xe92effffff	                           jmp 0x4004e8a	      3476	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f5c	         0xf1f4000	                         nop dword [rax]	      3476	objcopy.c	FUNCTION_41	SWITCH_2
0x4004f60	      0x488d542408	                      lea rdx, [rsp + 8]	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4004f65	      0xbe01000000	                              mov esi, 1	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4004f6a	          0x4889df	                            mov rdi, rbx	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4004f6d	      0xe800000000	                          call 0x4004f72	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4004f72	            0x85c0	                           test eax, eax	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4004f74	     0xf8456010000	                            je 0x40050d0	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x4004f7a	          0x4d85e4	                           test r12, r12	      3519	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4004f7d	     0xf849d010000	                            je 0x4005120	      3519	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4004f83	          0x4c89e6	                            mov rsi, r12	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4004f86	          0x4c89ef	                            mov rdi, r13	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4004f89	      0xe800000000	                          call 0x4004f8e	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4004f8e	          0x4885c0	                           test rax, rax	      3523	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x4004f91	          0x4989c4	                            mov r12, rax	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x4004f94	     0xf848e000000	                            je 0x4005028	      3523	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x4004f9a	    0x8b1500000000	            mov edx, dword [0x04004fa0] 	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4004fa0	        0x488d7308	                      lea rsi, [rbx + 8]	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4004fa4	          0x4889c7	                            mov rdi, rax	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4004fa7	      0xe884beffff	   call sym.set_long_section_mode.isra.7	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x4004fac	          0x4c89f2	                            mov rdx, r14	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4004faf	          0x4c89e6	                            mov rsi, r12	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4004fb2	          0x4889df	                            mov rdi, rbx	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4004fb5	      0xe886ceffff	                    call sym.copy_object	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4004fba	            0x85c0	                           test eax, eax	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4004fbc	     0xf85be000000	                           jne 0x4005080	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4004fc2	    0xc70500000000	               mov dword [0x04004fcc], 1	      3533	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11
0x4004fcc	          0x4c89e7	                            mov rdi, r12	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4004fcf	      0xe800000000	                          call 0x4004fd4	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4004fd4	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4004fd6	           0xf94c0	                                 sete al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4004fd9	            0x84c0	                             test al, al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4004fdb	            0x7473	                            je 0x4005050	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4004fdd	            0x31c9	                            xor ecx, ecx	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4004fdf	            0x31d2	                            xor edx, edx	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4004fe1	            0x31f6	                            xor esi, esi	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4004fe3	          0x4c89ef	                            mov rdi, r13	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4004fe6	            0x31c0	                            xor eax, eax	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4004fe8	    0xc70500000000	               mov dword [0x04004ff2], 1	      3541	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x4004ff2	      0xe800000000	                          call 0x4004ff7	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x4004ff7	      0xe9effeffff	                           jmp 0x4004eeb	      3543	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x4004ffc	         0xf1f4000	                         nop dword [rax]	      3543	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x4005000	            0x31ff	                            xor edi, edi	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005002	      0xba05000000	                              mov edx, 5	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005007	      0xbe00000000	                              mov esi, 0	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x400500c	      0xe800000000	                          call 0x4005011	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005011	          0x4889ee	                            mov rsi, rbp	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005014	          0x4889c7	                            mov rdi, rax	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005017	            0x31c0	                            xor eax, eax	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005019	      0xe800000000	                          call 0x400501e	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x400501e	      0xe9f3feffff	                           jmp 0x4004f16	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005023	       0xf1f440000	                   nop dword [rax + rax]	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x4005028	            0x31c9	                            xor ecx, ecx	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x400502a	            0x31d2	                            xor edx, edx	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x400502c	            0x31f6	                            xor esi, esi	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x400502e	          0x4c89ef	                            mov rdi, r13	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4005031	            0x31c0	                            xor eax, eax	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4005033	      0xe800000000	                          call 0x4005038	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4005038	    0xc70500000000	               mov dword [0x04005042], 1	      3504	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4005042	      0xe9a4feffff	                           jmp 0x4004eeb	      3505	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4005047	    0x660f1f840000	                    nop word [rax + rax]	      3505	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4005050	          0x4889df	                            mov rdi, rbx	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4005053	      0xe800000000	                          call 0x4005058	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4005058	            0x85c0	                           test eax, eax	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x400505a	     0xf858bfeffff	                           jne 0x4004eeb	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4005060	            0x31c9	                            xor ecx, ecx	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005062	            0x31d2	                            xor edx, edx	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005064	            0x31f6	                            xor esi, esi	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005066	          0x4889ef	                            mov rdi, rbp	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005069	    0xc70500000000	               mov dword [0x04005073], 1	      3548	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x4005073	      0xe800000000	                          call 0x4005078	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005078	      0xe96efeffff	                           jmp 0x4004eeb	      3550	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x400507d	           0xf1f00	                         nop dword [rax]	      3550	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x4005080	    0x8b0500000000	            mov eax, dword [0x04005086] 	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005086	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005088	     0xf853effffff	                           jne 0x4004fcc	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x400508e	          0x4c89e7	                            mov rdi, r12	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005091	      0xe800000000	                          call 0x4005096	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005096	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005098	           0xf94c0	                                 sete al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x400509b	      0xe939ffffff	                           jmp 0x4004fd9	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x40050a0	        0x488b4308	                mov rax, qword [rbx + 8]	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40050a4	          0x4531ff	                          xor r15d, r15d	      3495	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40050a7	          0x4c8b20	                    mov r12, qword [rax]	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40050aa	      0xe9fffdffff	                           jmp 0x4004eae	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40050af	              0x90	                                     nop	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40050b0	            0x31c9	                            xor ecx, ecx	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x40050b2	            0x31d2	                            xor edx, edx	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x40050b4	            0x31f6	                            xor esi, esi	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x40050b6	          0x4889ef	                            mov rdi, rbp	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x40050b9	            0x31c0	                            xor eax, eax	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x40050bb	      0xe800000000	                          call 0x40050c0	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x40050c0	    0xc70500000000	               mov dword [0x040050ca], 1	      3449	objcopy.c	FUNCTION_41	IF_3
0x40050ca	      0xe91cfeffff	                           jmp 0x4004eeb	      3450	objcopy.c	FUNCTION_41	IF_3
0x40050cf	              0x90	                                     nop	      3450	objcopy.c	FUNCTION_41	IF_3
0x40050d0	      0xe800000000	                          call 0x40050d5	      3555	objcopy.c	FUNCTION_41	ELSE_3	CALL_21
0x40050d5	      0x488d542410	                   lea rdx, [rsp + 0x10]	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40050da	      0xbe03000000	                              mov esi, 3	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40050df	          0x4889df	                            mov rdi, rbx	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40050e2	          0x4189c7	                           mov r15d, eax	      3555	objcopy.c	FUNCTION_41	ELSE_3	CALL_21
0x40050e5	      0xe800000000	                          call 0x40050ea	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40050ea	            0x85c0	                           test eax, eax	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40050ec	            0x7442	                            je 0x4005130	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40050ee	        0x4183ff0d	                           cmp r15d, 0xd	      3561	objcopy.c	FUNCTION_41	ELSE_3	IF_14	IF_15
0x40050f2	     0xf8582feffff	                           jne 0x4004f7a	      3561	objcopy.c	FUNCTION_41	ELSE_3	IF_14	IF_15
0x40050f8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x40050fd	      0xe800000000	                          call 0x4005102	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x4005102	      0xe973feffff	                           jmp 0x4004f7a	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x4005107	    0x660f1f840000	                    nop word [rax + rax]	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x4005110	          0x80cc40	                             or ah, 0x40	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4005113	      0xe949fdffff	                           jmp 0x4004e61	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4005118	     0xf1f84000000	                   nop dword [rax + rax]	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4005120	        0x488b4308	                mov rax, qword [rbx + 8]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4005124	          0x4c8b20	                    mov r12, qword [rax]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4005127	      0xe957feffff	                           jmp 0x4004f83	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x400512c	         0xf1f4000	                         nop dword [rax]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4005130	      0xe800000000	                          call 0x4005135	      3566	objcopy.c	FUNCTION_41	ELSE_3	CALL_24
0x4005135	          0x4139c7	                           cmp r15d, eax	      3568	objcopy.c	FUNCTION_41	ELSE_3	IF_16
0x4005138	            0x89c3	                            mov ebx, eax	      3566	objcopy.c	FUNCTION_41	ELSE_3	CALL_24
0x400513a	            0x7408	                            je 0x4005144	      3568	objcopy.c	FUNCTION_41	ELSE_3	IF_16
0x400513c	          0x4489ff	                           mov edi, r15d	      3569	objcopy.c	FUNCTION_41	ELSE_3	CALL_25
0x400513f	      0xe800000000	                          call 0x4005144	      3569	objcopy.c	FUNCTION_41	ELSE_3	CALL_25
0x4005144	            0x31c9	                            xor ecx, ecx	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4005146	            0x31d2	                            xor edx, edx	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4005148	            0x31f6	                            xor esi, esi	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x400514a	            0x31c0	                            xor eax, eax	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x400514c	          0x4889ef	                            mov rdi, rbp	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x400514f	      0xe800000000	                          call 0x4005154	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4005154	        0x4183ff0d	                           cmp r15d, 0xd	      3573	objcopy.c	FUNCTION_41	ELSE_3	IF_17
0x4005158	            0x7422	                            je 0x400517c	      3573	objcopy.c	FUNCTION_41	ELSE_3	IF_17
0x400515a	          0x83fb0d	                            cmp ebx, 0xd	      3578	objcopy.c	FUNCTION_41	ELSE_3	IF_18
0x400515d	     0xf85b3fdffff	                           jne 0x4004f16	      3578	objcopy.c	FUNCTION_41	ELSE_3	IF_18
0x4005163	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3580	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_29
0x4005168	      0xe800000000	                          call 0x400516d	      3580	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_29
0x400516d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x4005172	      0xe800000000	                          call 0x4005177	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x4005177	      0xe99afdffff	                           jmp 0x4004f16	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x400517c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3575	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_27
0x4005181	      0xe800000000	                          call 0x4005186	      3575	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_27
0x4005186	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x400518b	      0xe800000000	                          call 0x4005190	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x4005190	            0xebc8	                           jmp 0x400515a	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x4005192	      0xe800000000	                  call section_end..text	      3586	objcopy.c	FUNCTION_41
eq_string	ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0:CALL,1:functions,0:FOR,0	7
0x40000f0	        0x4883ec08	                              sub rsp, 8	       989	objcopy.c	FUNCTION_9
0x40000f4	      0xe800000000	                          call 0x40000f9	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000f9	            0x85c0	                           test eax, eax	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fb	           0xf94c0	                                 sete al	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fe	        0x4883c408	                              add rsp, 8	       991	objcopy.c	FUNCTION_9
0x4000102	           0xfb6c0	                           movzx eax, al	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000105	              0xc3	                                     ret	       991	objcopy.c	FUNCTION_9
setup_section	ELSE,7:SWITCH,0:WHILE,0:IF,22:DO,0:CALL,25:functions,0:FOR,0	258
0x4001300	            0x4157	                                push r15	      3664	objcopy.c	FUNCTION_45
0x4001302	            0x4156	                                push r14	      3664	objcopy.c	FUNCTION_45
0x4001304	          0x4989fe	                            mov r14, rdi	      3664	objcopy.c	FUNCTION_45
0x4001307	            0x4155	                                push r13	      3664	objcopy.c	FUNCTION_45
0x4001309	            0x4154	                                push r12	      3664	objcopy.c	FUNCTION_45
0x400130b	          0x4889f7	                            mov rdi, rsi	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x400130e	              0x55	                                push rbp	      3664	objcopy.c	FUNCTION_45
0x400130f	              0x53	                                push rbx	      3664	objcopy.c	FUNCTION_45
0x4001310	          0x4889f5	                            mov rbp, rsi	      3664	objcopy.c	FUNCTION_45
0x4001313	          0x4989d5	                            mov r13, rdx	      3664	objcopy.c	FUNCTION_45
0x4001316	        0x4883ec18	                           sub rsp, 0x18	      3664	objcopy.c	FUNCTION_45
0x400131a	      0xe821ffffff	       call sym.is_strip_section.isra.17	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x400131f	            0x85c0	                           test eax, eax	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001321	            0x7415	                            je 0x4001338	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001323	        0x4883c418	                           add rsp, 0x18	      3830	objcopy.c	FUNCTION_45
0x4001327	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001328	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001329	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x400132b	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x400132d	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x400132f	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x4001331	              0xc3	                                     ret	      3830	objcopy.c	FUNCTION_45
0x4001332	    0x660f1f440000	                    nop word [rax + rax]	      3830	objcopy.c	FUNCTION_45
0x4001338	    0x488b1d000000	            mov rbx, qword [0x0400133f] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400133f	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3682	objcopy.c	FUNCTION_45
0x4001342	        0x4c8b6500	                    mov r12, qword [rbp]	      3681	objcopy.c	FUNCTION_45
0x4001346	          0x4885db	                           test rbx, rbx	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001349	        0x89442408	                mov dword [rsp + 8], eax	      3682	objcopy.c	FUNCTION_45
0x400134d	            0x7516	                           jne 0x4001365	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400134f	      0xe9ec010000	                           jmp 0x4001540	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001354	         0xf1f4000	                         nop dword [rax]	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001358	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400135c	          0x4885db	                           test rbx, rbx	      3627	objcopy.c	FUNCTION_43	FOR_1
0x400135f	     0xf84db010000	                            je 0x4001540	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001365	          0x488b3b	                    mov rdi, qword [rbx]	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001368	          0x4c89e6	                            mov rsi, r12	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x400136b	      0xe800000000	                          call 0x4001370	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001370	            0x85c0	                           test eax, eax	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001372	            0x75e4	                           jne 0x4001358	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001374	        0x448b7b10	           mov r15d, dword [rbx + 0x10] 	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4001378	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3633	objcopy.c	FUNCTION_43	FOR_1	IF_1
0x400137c	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      3682	objcopy.c	FUNCTION_45
0x4001380	    0x440f447c2408	             cmove r15d, dword [rsp + 8]	      3682	objcopy.c	FUNCTION_45
0x4001386	    0x488b35000000	            mov rsi, qword [0x0400138d] 	      3686	objcopy.c	FUNCTION_45	IF_2
0x400138d	          0x4885f6	                           test rsi, rsi	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001390	            0x7407	                            je 0x4001399	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001392	      0xf644240801	                  test byte [rsp + 8], 1	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001397	            0x7510	                           jne 0x40013a9	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001399	    0x488b35000000	            mov rsi, qword [0x040013a0] 	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x40013a0	          0x4885f6	                           test rsi, rsi	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x40013a3	     0xf84ec020000	                            je 0x4001695	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x40013a9	          0x4889f7	                            mov rdi, rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013ac	      0x4889742408	                mov qword [rsp + 8], rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013b1	      0xe800000000	                          call 0x40013b6	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013b6	          0x4889df	                            mov rdi, rbx	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013b9	          0x4989c4	                            mov r12, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013bc	      0xe800000000	                          call 0x40013c1	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013c1	      0x498d7c0401	                lea rdi, [r12 + rax + 1]	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013c6	      0xe800000000	                          call 0x40013cb	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013cb	      0x488b742408	                mov rsi, qword [rsp + 8]	       110	string3.h	FUNCTION_70	CALL_3
0x40013d0	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_70	CALL_3
0x40013d3	          0x4989c4	                            mov r12, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x40013d6	      0xe800000000	                          call 0x40013db	       110	string3.h	FUNCTION_70	CALL_3
0x40013db	          0x4889de	                            mov rsi, rbx	       148	string3.h	FUNCTION_74	CALL_3
0x40013de	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_74	CALL_3
0x40013e1	      0xe800000000	                          call 0x40013e6	       148	string3.h	FUNCTION_74	CALL_3
0x40013e6	        0x488b7d00	                    mov rdi, qword [rbp]	       148	string3.h	FUNCTION_74	CALL_3
0x40013ea	            0x31f6	                            xor esi, esi	      3704	objcopy.c	FUNCTION_45	CALL_8
0x40013ec	      0xba40000000	                           mov edx, 0x40	      3704	objcopy.c	FUNCTION_45	CALL_8
0x40013f1	      0xe8caedffff	              call sym.find_section_list	      3704	objcopy.c	FUNCTION_45	CALL_8
0x40013f6	          0x4885c0	                           test rax, rax	      3706	objcopy.c	FUNCTION_45	IF_5
0x40013f9	            0x746d	                            je 0x4001468	      3706	objcopy.c	FUNCTION_45	IF_5
0x40013fb	          0x4589f8	                           mov r8d, r15d	      3707	objcopy.c	FUNCTION_45	IF_5
0x40013fe	    0x4181e0040100	                          and r8d, 0x104	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001405	        0x440b4028	              or r8d, dword [rax + 0x28]	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001409	          0x4589c7	                           mov r15d, r8d	      3707	objcopy.c	FUNCTION_45	IF_5
0x400140c	          0x4489fa	                           mov edx, r15d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x400140f	          0x4c89e6	                            mov rsi, r12	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001412	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001415	      0xe800000000	                          call 0x400141a	      3725	objcopy.c	FUNCTION_45	CALL_10
0x400141a	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x400141d	          0x4889c3	                            mov rbx, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001420	     0xf85b1000000	                           jne 0x40014d7	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001426	      0xba05000000	                              mov edx, 5	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x400142b	      0xbe00000000	                              mov esi, 0	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001430	            0x31ff	                            xor edi, edi	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001432	            0x31db	                            xor ebx, ebx	      3730	objcopy.c	FUNCTION_45	IF_8
0x4001434	      0xe800000000	                          call 0x4001439	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001439	    0xc70500000000	               mov dword [0x04001443], 1	      3828	objcopy.c	FUNCTION_45
0x4001443	        0x4883c418	                           add rsp, 0x18	      3830	objcopy.c	FUNCTION_45
0x4001447	          0x4889da	                            mov rdx, rbx	      3829	objcopy.c	FUNCTION_45	CALL_25
0x400144a	          0x4c89ee	                            mov rsi, r13	      3829	objcopy.c	FUNCTION_45	CALL_25
0x400144d	          0x4889c1	                            mov rcx, rax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001450	            0x31ff	                            xor edi, edi	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001452	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001453	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001454	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x4001456	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x4001458	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x400145a	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x400145c	            0x31c0	                            xor eax, eax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x400145e	      0xe900000000	                           jmp 0x4001463	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001463	       0xf1f440000	                   nop dword [rax + rax]	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001468	    0x833d00000000	               cmp dword [0x0400146f], 4	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x400146f	            0x759b	                           jne 0x400140c	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001471	    0x41f7c7010000	                    test r15d, 0x2000001	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001478	            0x7492	                            je 0x400140c	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x400147a	        0x498b4608	                mov rax, qword [r14 + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x400147e	          0x8b4008	                mov eax, dword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001481	          0x83f805	                              cmp eax, 5	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001484	     0xf845e020000	                            je 0x40016e8	      1381	objcopy.c	FUNCTION_23	IF_1
0x400148a	          0x83f802	                              cmp eax, 2	      1389	objcopy.c	FUNCTION_23	IF_2
0x400148d	     0xf842b020000	                            je 0x40016be	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001493	        0x498b4508	                mov rax, qword [r13 + 8]	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001497	    0x4181e7fdfeff	                    and r15d, 0xfdfffefd	      3712	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x400149e	        0x83780805	                  cmp dword [rax + 8], 5	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x40014a2	     0xf8564ffffff	                           jne 0x400140c	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x40014a8	    0x816520fdfeff	      and dword [rbp + 0x20], 0xfdfffefd	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x40014af	          0x4489fa	                           mov edx, r15d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014b2	          0x4c89e6	                            mov rsi, r12	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014b5	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014b8	      0xe800000000	                          call 0x40014bd	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014bd	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x40014c0	          0x4889c3	                            mov rbx, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x40014c3	     0xf845dffffff	                            je 0x4001426	      3727	objcopy.c	FUNCTION_45	IF_8
0x40014c9	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3734	objcopy.c	FUNCTION_45	CALL_12
0x40014d0	    0xc74004080000	                  mov dword [rax + 4], 8	      3734	objcopy.c	FUNCTION_45	CALL_12
0x40014d7	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      3736	objcopy.c	FUNCTION_45
0x40014db	          0x4c89ea	                            mov rdx, r13	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014de	          0x4889ee	                            mov rsi, rbp	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014e1	          0x4c89f7	                            mov rdi, r14	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014e4	      0xe800000000	                          call 0x40014e9	      3737	objcopy.c	FUNCTION_45	CALL_13
0x40014e9	    0x8b0d00000000	            mov ecx, dword [0x040014ef] 	      3738	objcopy.c	FUNCTION_45	IF_10
0x40014ef	            0x85c9	                           test ecx, ecx	      3738	objcopy.c	FUNCTION_45	IF_10
0x40014f1	     0xf8859010000	                            js 0x4001650	      3738	objcopy.c	FUNCTION_45	IF_10
0x40014f7	    0x48630d000000	         movsxd rcx, dword [0x040014fe] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x40014fe	            0x31d2	                            xor edx, edx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001500	      0x488d4408ff	                lea rax, [rax + rcx - 1]	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001505	          0x48f7f1	                                 div rcx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001508	    0x486315000000	         movsxd rdx, dword [0x0400150f] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x400150f	        0x480fafc2	                           imul rax, rdx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001513	          0x4889c2	                            mov rdx, rax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001516	          0x4889de	                            mov rsi, rbx	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001519	          0x4c89ef	                            mov rdi, r13	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x400151c	      0xe800000000	                          call 0x4001521	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001521	            0x85c0	                           test eax, eax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001523	            0x752b	                           jne 0x4001550	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001525	      0xba05000000	                              mov edx, 5	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x400152a	      0xbe00000000	                              mov esi, 0	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x400152f	            0x31ff	                            xor edi, edi	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001531	      0xe800000000	                          call 0x4001536	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001536	      0xe9fefeffff	                           jmp 0x4001439	      3745	objcopy.c	FUNCTION_45	IF_12
0x400153b	       0xf1f440000	                   nop dword [rax + rax]	      3745	objcopy.c	FUNCTION_45	IF_12
0x4001540	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      3682	objcopy.c	FUNCTION_45
0x4001545	          0x4c89e3	                            mov rbx, r12	      3681	objcopy.c	FUNCTION_45
0x4001548	      0xe939feffff	                           jmp 0x4001386	      3681	objcopy.c	FUNCTION_45
0x400154d	           0xf1f00	                         nop dword [rax]	      3681	objcopy.c	FUNCTION_45
0x4001550	        0x488b7d00	                    mov rdi, qword [rbp]	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001554	            0x31f6	                            xor esi, esi	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001556	      0xba0c000000	                            mov edx, 0xc	      3749	objcopy.c	FUNCTION_45	CALL_16
0x400155b	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	      3748	objcopy.c	FUNCTION_45
0x400155f	      0xe85cecffff	              call sym.find_section_list	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001564	          0x4885c0	                           test rax, rax	      3751	objcopy.c	FUNCTION_45	IF_13
0x4001567	     0xf8442010000	                            je 0x40016af	      3751	objcopy.c	FUNCTION_45	IF_13
0x400156d	        0xf6401404	               test byte [rax + 0x14], 4	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001571	     0xf8409010000	                            je 0x4001680	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001577	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x400157b	        0x804b2401	                 or byte [rbx + 0x24], 1	      1688	bfd.h	FUNCTION_94
0x400157f	        0x48894330	             mov qword [rbx + 0x30], rax	      1687	bfd.h	FUNCTION_94
0x4001583	            0x31f6	                            xor esi, esi	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4001585	        0x488b7d00	                    mov rdi, qword [rbp]	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4001589	        0x48894328	             mov qword [rbx + 0x28], rax	      1687	bfd.h	FUNCTION_94
0x400158d	      0xba30000000	                           mov edx, 0x30	      3768	objcopy.c	FUNCTION_45	CALL_19
0x4001592	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	      3767	objcopy.c	FUNCTION_45
0x4001596	      0xe825ecffff	              call sym.find_section_list	      3768	objcopy.c	FUNCTION_45	CALL_19
0x400159b	          0x4885c0	                           test rax, rax	      3770	objcopy.c	FUNCTION_45	IF_16
0x400159e	     0xf84fc000000	                            je 0x40016a0	      3770	objcopy.c	FUNCTION_45	IF_16
0x40015a4	        0xf6401420	           test byte [rax + 0x14], 0x20 	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015a8	     0xf84c2000000	                            je 0x4001670	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015ae	        0x4c036020	             add r12, qword [rax + 0x20]	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015b2	          0x4c89e0	                            mov rax, r12	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x40015b5	        0x48894330	             mov qword [rbx + 0x30], rax	      3780	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40015b9	          0x8b4570	            mov eax, dword [rbp + 0x70] 	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x40015bc	         0xfb65324	           movzx edx, byte [rbx + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x40015c0	          0x894370	             mov dword [rbx + 0x70], eax	      1696	bfd.h	FUNCTION_95
0x40015c3	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	      3793	objcopy.c	FUNCTION_45
0x40015c9	          0x83e2cf	                     and edx, 0xffffffcf	      3796	objcopy.c	FUNCTION_45
0x40015cc	    0x8983c4000000	             mov dword [rbx + 0xc4], eax	      3793	objcopy.c	FUNCTION_45
0x40015d2	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x40015d6	          0x83e030	                           and eax, 0x30	      3796	objcopy.c	FUNCTION_45
0x40015d9	             0x9d0	                             or eax, edx	      3796	objcopy.c	FUNCTION_45
0x40015db	          0x884324	               mov byte [rbx + 0x24], al	      3796	objcopy.c	FUNCTION_45
0x40015de	        0xf6452302	               test byte [rbp + 0x23], 2	      3804	objcopy.c	FUNCTION_45	IF_19
0x40015e2	        0x48895d68	            mov qword [rbp + 0x68], rbx 	      3801	objcopy.c	FUNCTION_45
0x40015e6	    0x48c745600000	               mov qword [rbp + 0x60], 0	      3802	objcopy.c	FUNCTION_45
0x40015ee	            0x7429	                            je 0x4001619	      3804	objcopy.c	FUNCTION_45	IF_19
0x40015f0	    0x4c8bbde00000	            mov r15, qword [rbp + 0xe0] 	      3804	objcopy.c	FUNCTION_45	IF_19
0x40015f7	    0x488bb5f00000	            mov rsi, qword [rbp + 0xf0] 	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x40015fe	          0x4c89ff	                            mov rdi, r15	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x4001601	      0xe8baf7ffff	         call sym.group_signature.isra.2	      3806	objcopy.c	FUNCTION_45	IF_19	CALL_22
0x4001606	          0x4885c0	                           test rax, rax	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001609	            0x740e	                            je 0x4001619	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x400160b	        0x498b5608	                mov rdx, qword [r14 + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x400160f	        0x83481820	             or dword [rax + 0x18], 0x20	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001613	        0x837a0805	                  cmp dword [rdx + 8], 5	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001617	            0x7473	                            je 0x400168c	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001619	        0x498b4508	                mov rax, qword [r13 + 8]	      3818	objcopy.c	FUNCTION_45	IF_22
0x400161d	          0x4889d9	                            mov rcx, rbx	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001620	          0x4c89ea	                            mov rdx, r13	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001623	          0x4889ee	                            mov rsi, rbp	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001626	          0x4c89f7	                            mov rdi, r14	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001629	    0xff9050010000	                call qword [rax + 0x150]	      3818	objcopy.c	FUNCTION_45	IF_22
0x400162f	            0x85c0	                           test eax, eax	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001631	     0xf85ecfcffff	                           jne 0x4001323	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001637	      0xba05000000	                              mov edx, 5	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x400163c	      0xbe00000000	                              mov esi, 0	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001641	            0x31ff	                            xor edi, edi	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001643	      0xe800000000	                          call 0x4001648	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001648	      0xe9ecfdffff	                           jmp 0x4001439	      3821	objcopy.c	FUNCTION_45	IF_22
0x400164d	           0xf1f00	                         nop dword [rax]	      3821	objcopy.c	FUNCTION_45	IF_22
0x4001650	    0x8b1500000000	            mov edx, dword [0x04001656] 	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001656	            0x85d2	                           test edx, edx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001658	      0xba00000000	                              mov edx, 0	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x400165d	        0x480f45c2	                         cmovne rax, rdx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001661	      0xe9adfeffff	                           jmp 0x4001513	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001670	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001674	      0xe93cffffff	                           jmp 0x40015b5	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001679	     0xf1f80000000	                         nop dword [rax]	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001680	        0x4c036018	             add r12, qword [rax + 0x18]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001684	          0x4c89e0	                            mov rax, r12	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001687	      0xe9effeffff	                           jmp 0x400157b	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x400168c	    0x498987b00000	             mov qword [r15 + 0xb0], rax	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001693	            0xeb84	                           jmp 0x4001619	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001695	          0x4c89e7	                            mov rdi, r12	      3681	objcopy.c	FUNCTION_45
0x4001698	          0x4989dc	                            mov r12, rbx	      3681	objcopy.c	FUNCTION_45
0x400169b	      0xe94afdffff	                           jmp 0x40013ea	      3681	objcopy.c	FUNCTION_45
0x40016a0	          0x4c89e0	                            mov rax, r12	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40016a3	    0x480305000000	             add rax, qword [0x040016aa]	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40016aa	      0xe906ffffff	                           jmp 0x40015b5	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x40016af	          0x4c89e0	                            mov rax, r12	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40016b2	    0x480305000000	             add rax, qword [0x040016b9]	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40016b9	      0xe9bdfeffff	                           jmp 0x400157b	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x40016be	        0x488b7500	                    mov rsi, qword [rbp]	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016c2	      0xbf00000000	                              mov edi, 0	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016c7	      0xb909000000	                              mov ecx, 9	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016cc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016ce	           0xf94c0	                                 sete al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016d1	           0xfb6c0	                           movzx eax, al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x40016d4	            0x85c0	                           test eax, eax	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016d6	     0xf8530fdffff	                           jne 0x400140c	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016dc	      0xe9b2fdffff	                           jmp 0x4001493	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016e1	     0xf1f80000000	                         nop dword [rax]	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x40016e8	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016ef	        0x83780407	                  cmp dword [rax + 4], 7	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016f3	           0xf94c0	                                 sete al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016f6	           0xfb6c0	                           movzx eax, al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x40016f9	            0xebd9	                           jmp 0x40016d4	      1382	objcopy.c	FUNCTION_23	CALL_1
