eh_frame_convert_frag	IF,0:ELSE,0:WHILE,0:functions,0:DO,0:SWITCH,1:CALL,7:FOR,0	79
0x4000710	            0x4154	                                push r12	       515	ehopt.c	FUNCTION_5
0x4000712	              0x55	                                push rbp	       515	ehopt.c	FUNCTION_5
0x4000713	              0x53	                                push rbx	       515	ehopt.c	FUNCTION_5
0x4000714	          0x4889fb	                            mov rbx, rdi	       515	ehopt.c	FUNCTION_5
0x4000717	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	       520	ehopt.c	FUNCTION_5
0x400071b	        0x488b6f20	            mov rbp, qword [rdi + 0x20] 	       521	ehopt.c	FUNCTION_5
0x400071f	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000723	      0xe800000000	                          call 0x4000728	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000728	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	       525	ehopt.c	FUNCTION_5
0x400072b	            0x89cf	                            mov edi, ecx	       525	ehopt.c	FUNCTION_5
0x400072d	          0xc1ef03	                              shr edi, 3	       525	ehopt.c	FUNCTION_5
0x4000730	            0x85ff	                           test edi, edi	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000732	     0xf84c3000000	                            je 0x40007fb	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000738	            0x4899	                                     cqo	       527	ehopt.c	FUNCTION_5
0x400073a	          0x4863ff	                         movsxd rdi, edi	       527	ehopt.c	FUNCTION_5
0x400073d	          0x83e107	                              and ecx, 7	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000740	          0x48f7ff	                                idiv rdi	       527	ehopt.c	FUNCTION_5
0x4000743	          0x83f901	                              cmp ecx, 1	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000746	     0xf8494000000	                            je 0x40007e0	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x400074c	            0x7262	                            jb 0x40007b0	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x400074e	          0x83f902	                              cmp ecx, 2	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000751	            0x757d	                           jne 0x40007d0	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000753	    0x483dffff0000	                         cmp rax, 0xffff	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000759	     0xf8fb0000000	                            jg 0x400080f	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x400075f	          0x4863ed	                         movsxd rbp, ebp	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x4000762	    0x41c6442c7c03	          mov byte [r12 + rbp + 0x7c], 3	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x4000768	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x400076c	      0x488d7c137c	            lea rdi, [rbx + rdx + 0x7c] 	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000771	      0xba02000000	                              mov edx, 2	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000776	          0x4889c6	                            mov rsi, rax	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000779	      0xe800000000	                          call 0x400077e	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x400077e	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000781	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000785	          0x83e107	                              and ecx, 7	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000788	          0x4801f9	                            add rcx, rdi	       552	ehopt.c	FUNCTION_5
0x400078b	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	       553	ehopt.c	FUNCTION_5
0x4000792	    0xc74360000000	               mov dword [rbx + 0x60], 0	       554	ehopt.c	FUNCTION_5
0x4000799	        0x48894b10	             mov qword [rbx + 0x10], rcx	       552	ehopt.c	FUNCTION_5
0x400079d	    0x48c743200000	               mov qword [rbx + 0x20], 0	       555	ehopt.c	FUNCTION_5
0x40007a5	              0x5b	                                 pop rbx	       556	ehopt.c	FUNCTION_5
0x40007a6	              0x5d	                                 pop rbp	       556	ehopt.c	FUNCTION_5
0x40007a7	            0x415c	                                 pop r12	       556	ehopt.c	FUNCTION_5
0x40007a9	              0xc3	                                     ret	       556	ehopt.c	FUNCTION_5
0x40007aa	    0x660f1f440000	                    nop word [rax + rax]	       556	ehopt.c	FUNCTION_5
0x40007b0	        0x4883f83f	                           cmp rax, 0x3f	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x40007b4	            0x7f6d	                            jg 0x4000823	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x40007b6	          0x4863ed	                         movsxd rbp, ebp	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x40007b9	          0x83c840	                            or eax, 0x40	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x40007bc	      0x4188442c7c	         mov byte [r12 + rbp + 0x7c], al	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x40007c1	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x40007c5	            0xebc1	                           jmp 0x4000788	       533	ehopt.c	FUNCTION_5	SWITCH_1
0x40007c7	    0x660f1f840000	                    nop word [rax + rax]	       533	ehopt.c	FUNCTION_5	SWITCH_1
0x40007d0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x40007d4	      0x488d7c137c	            lea rdi, [rbx + rdx + 0x7c] 	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x40007d9	      0xba04000000	                              mov edx, 4	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x40007de	            0xeb96	                           jmp 0x4000776	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x40007e0	    0x483dff000000	                           cmp rax, 0xff	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007e6	            0x7f4f	                            jg 0x4000837	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007e8	          0x4863ed	                         movsxd rbp, ebp	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x40007eb	    0x41c6442c7c02	          mov byte [r12 + rbp + 0x7c], 2	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x40007f1	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x40007f5	        0x88443b7c	         mov byte [rbx + rdi + 0x7c], al	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x40007f9	            0xeb8d	                           jmp 0x4000788	       539	ehopt.c	FUNCTION_5	SWITCH_1
0x40007fb	      0xba00000000	                              mov edx, 0	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000800	      0xbe0e020000	                          mov esi, 0x20e	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000805	      0xbf00000000	                              mov edi, 0	       526	ehopt.c	FUNCTION_5	CALL_2
0x400080a	      0xe800000000	                          call 0x400080f	       526	ehopt.c	FUNCTION_5	CALL_2
0x400080f	      0xba00000000	                              mov edx, 0	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000814	      0xbe1e020000	                          mov esi, 0x21e	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000819	      0xbf00000000	                              mov edi, 0	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x400081e	      0xe800000000	                          call 0x4000823	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000823	      0xba00000000	                              mov edx, 0	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000828	      0xbe13020000	                          mov esi, 0x213	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x400082d	      0xbf00000000	                              mov edi, 0	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000832	      0xe800000000	                          call 0x4000837	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000837	      0xba00000000	                              mov edx, 0	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x400083c	      0xbe18020000	                          mov esi, 0x218	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000841	      0xbf00000000	                              mov edi, 0	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x4000846	      0xe800000000	                  call section_end..data	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
eh_frame_relax_frag	IF,0:ELSE,0:WHILE,0:functions,0:DO,0:SWITCH,0:CALL,1:FOR,0	7
0x4000700	              0x53	                                push rbx	       501	ehopt.c	FUNCTION_4
0x4000701	          0x8b5f60	            mov ebx, dword [rdi + 0x60] 	       504	ehopt.c	FUNCTION_4
0x4000704	      0xe800000000	                          call 0x4000709	       505	ehopt.c	FUNCTION_4	CALL_1
0x4000709	          0x83e307	                              and ebx, 7	       504	ehopt.c	FUNCTION_4
0x400070c	            0x29d8	                            sub eax, ebx	       506	ehopt.c	FUNCTION_4
0x400070e	              0x5b	                                 pop rbx	       507	ehopt.c	FUNCTION_4
0x400070f	              0xc3	                                     ret	       507	ehopt.c	FUNCTION_4
check_eh_frame	IF,25:ELSE,12:WHILE,0:functions,0:DO,0:SWITCH,1:CALL,14:FOR,0	403
0x4000040	            0x4155	                                push r13	       257	ehopt.c	FUNCTION_2
0x4000042	            0x4154	                                push r12	       257	ehopt.c	FUNCTION_2
0x4000044	              0x55	                                push rbp	       257	ehopt.c	FUNCTION_2
0x4000045	              0x53	                                push rbx	       257	ehopt.c	FUNCTION_2
0x4000046	        0x4883ec28	                           sub rsp, 0x28	       257	ehopt.c	FUNCTION_2
0x400004a	    0x448b1d000000	           mov r11d, dword [0x04000051] 	       278	ehopt.c	FUNCTION_2	IF_1
0x4000051	    0x64488b042528	                mov rax, qword fs:[0x28]	       257	ehopt.c	FUNCTION_2
0x400005a	      0x4889442418	             mov qword [rsp + 0x18], rax	       257	ehopt.c	FUNCTION_2
0x400005f	            0x31c0	                            xor eax, eax	       257	ehopt.c	FUNCTION_2
0x4000061	          0x4585db	                         test r11d, r11d	       278	ehopt.c	FUNCTION_2	IF_1
0x4000064	            0x7552	                           jne 0x40000b8	       278	ehopt.c	FUNCTION_2	IF_1
0x4000066	    0x488b05000000	            mov rax, qword [0x0400006d] 	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400006d	          0x4989fd	                            mov r13, rdi	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000070	          0x4989f4	                            mov r12, rsi	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000073	      0xbf00000000	                              mov edi, 0	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000078	      0xb909000000	                              mov ecx, 9	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400007d	          0x488b00	                    mov rax, qword [rax]	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000080	          0x4889c6	                            mov rsi, rax	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000083	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000085	            0x7459	                            je 0x40000e0	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000087	      0xbf00000000	                              mov edi, 0	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x400008c	      0xb90c000000	                            mov ecx, 0xc	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x4000091	          0x4889c6	                            mov rsi, rax	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x4000094	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x4000096	            0x7520	                           jne 0x40000b8	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x4000098	      0xbd00000000	                              mov ebp, 0	       291	ehopt.c	FUNCTION_2	ELSE_1	IF_4
0x400009d	        0x448b5500	                   mov r10d, dword [rbp]	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000a1	          0x4585d2	                         test r10d, r10d	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000a4	            0x754e	                           jne 0x40000f4	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000a6	      0x41833c2404	                      cmp dword [r12], 4	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x40000ab	     0xf841f020000	                            je 0x40002d0	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x40000b1	     0xf1f80000000	                         nop dword [rax]	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x40000b8	            0x31db	                            xor ebx, ebx	       463	ehopt.c	FUNCTION_2
0x40000ba	            0x89d8	                            mov eax, ebx	       464	ehopt.c	FUNCTION_2
0x40000bc	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       464	ehopt.c	FUNCTION_2
0x40000c1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       464	ehopt.c	FUNCTION_2
0x40000ca	     0xf851a050000	                           jne 0x40005ea	       464	ehopt.c	FUNCTION_2
0x40000d0	        0x4883c428	                           add rsp, 0x28	       464	ehopt.c	FUNCTION_2
0x40000d4	              0x5b	                                 pop rbx	       464	ehopt.c	FUNCTION_2
0x40000d5	              0x5d	                                 pop rbp	       464	ehopt.c	FUNCTION_2
0x40000d6	            0x415c	                                 pop r12	       464	ehopt.c	FUNCTION_2
0x40000d8	            0x415d	                                 pop r13	       464	ehopt.c	FUNCTION_2
0x40000da	              0xc3	                                     ret	       464	ehopt.c	FUNCTION_2
0x40000db	       0xf1f440000	                   nop dword [rax + rax]	       464	ehopt.c	FUNCTION_2
0x40000e0	        0x8078095f	                cmp byte [rax + 9], 0x5f	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x40000e4	      0xbd00000000	                              mov ebp, 0	       289	ehopt.c	FUNCTION_2	IF_3
0x40000e9	            0x749c	                            je 0x4000087	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x40000eb	        0x448b5500	                   mov r10d, dword [rbp]	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000ef	          0x4585d2	                         test r10d, r10d	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000f2	            0x74b2	                            je 0x40000a6	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000f4	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000f8	      0xe800000000	                          call 0x40000fd	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000fd	            0x85c0	                           test eax, eax	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000ff	            0x89c3	                            mov ebx, eax	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x4000101	            0x740d	                            je 0x4000110	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x4000103	    0xc74500000000	                      mov dword [rbp], 0	       300	ehopt.c	FUNCTION_2	ELSE_2	IF_5
0x400010a	            0xeb9a	                           jmp 0x40000a6	       300	ehopt.c	FUNCTION_2	ELSE_2	IF_5
0x400010c	         0xf1f4000	                         nop dword [rax]	       300	ehopt.c	FUNCTION_2	ELSE_2	IF_5
0x4000110	          0x8b4500	                    mov eax, dword [rbp]	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000113	          0x83f807	                              cmp eax, 7	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000116	            0x77a2	                            ja 0x40000ba	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000118	            0x89c2	                            mov edx, eax	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x400011a	    0xff24d5000000	                       jmp qword [rdx*8]	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x4000121	      0x41833c2401	                      cmp dword [r12], 1	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000126	            0x7590	                           jne 0x40000b8	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000128	      0x41807d1802	                cmp byte [r13 + 0x18], 2	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400012d	            0x7589	                           jne 0x40000b8	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400012f	      0x49837d1004	               cmp qword [r13 + 0x10], 4	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000134	            0x7582	                           jne 0x40000b8	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000136	      0xbf01000000	                              mov edi, 1	       388	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_9
0x400013b	      0xe800000000	                          call 0x4000140	       388	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_9
0x4000140	    0x488b05000000	            mov rax, qword [0x04000147] 	       390	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000147	    0xc74500070000	                      mov dword [rbp], 7	       389	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400014e	        0x48894518	            mov qword [rbp + 0x18], rax 	       390	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000152	      0xe800000000	                          call 0x4000157	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x4000157	          0x894520	            mov dword [rbp + 0x20], eax 	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x400015a	      0xe95bffffff	                           jmp 0x40000ba	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x400015f	              0x90	                                     nop	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x4000160	        0x418b0424	                    mov eax, dword [r12]	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x4000164	            0x85c0	                           test eax, eax	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x4000166	            0x7816	                            js 0x400017e	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x4000168	          0x8b5524	            mov edx, dword [rbp + 0x24] 	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400016b	            0x29c2	                            sub edx, eax	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400016d	            0x85d2	                           test edx, edx	       374	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x400016f	          0x895524	            mov dword [rbp + 0x24], edx 	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000172	     0xf8448010000	                            je 0x40002c0	       374	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x4000178	     0xf893affffff	                           jns 0x40000b8	       376	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x400017e	    0xc74500080000	                      mov dword [rbp], 8	       377	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x4000185	      0xe930ffffff	                           jmp 0x40000ba	       377	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x400018a	        0x418b0424	                    mov eax, dword [r12]	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400018e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000191	     0xf84f9010000	                            je 0x4000390	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000197	          0x83f801	                              cmp eax, 1	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400019a	     0xf8460030000	                            je 0x4000500	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40001a0	    0xc74500080000	                      mov dword [rbp], 8	       363	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_6
0x40001a7	      0xe90cffffff	                           jmp 0x40000b8	       363	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_6
0x40001ac	        0x448b4d04	                mov r9d, dword [rbp + 4]	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x40001b0	          0x4585c9	                           test r9d, r9d	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x40001b3	     0xf8457010000	                            je 0x4000310	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x40001b9	        0x448b450c	              mov r8d, dword [rbp + 0xc]	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40001bd	          0x4585c0	                           test r8d, r8d	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40001c0	     0xf84fa000000	                            je 0x40002c0	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40001c6	    0xc74500040000	                      mov dword [rbp], 4	       339	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40001cd	    0xc74524000000	               mov dword [rbp + 0x24], 0	       340	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40001d4	    0xc74528000000	               mov dword [rbp + 0x28], 0	       341	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40001db	      0xe9dafeffff	                           jmp 0x40000ba	       341	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40001e0	          0x83c001	                              add eax, 1	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x40001e3	          0x894500	                    mov dword [rbp], eax	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x40001e6	      0xe9cffeffff	                           jmp 0x40000ba	       330	ehopt.c	FUNCTION_2	SWITCH_1
0x40001eb	      0x41833c2404	                      cmp dword [r12], 4	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40001f0	    0xc74500060000	                      mov dword [rbp], 6	       396	ehopt.c	FUNCTION_2	SWITCH_1
0x40001f7	     0xf85bbfeffff	                           jne 0x40000b8	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40001fd	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x4000202	            0x3c02	                               cmp al, 2	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x4000204	     0xf842f030000	                            je 0x4000539	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x400020a	            0x3c14	                            cmp al, 0x14	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x400020c	     0xf845f030000	                            je 0x4000571	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000212	            0x3c0b	                             cmp al, 0xb	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000214	            0x7408	                            je 0x400021e	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000216	            0x3c0e	                             cmp al, 0xe	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000218	     0xf859afeffff	                           jne 0x40000b8	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x400021e	          0x8b7508	                mov esi, dword [rbp + 8]	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000221	          0x83fe01	                              cmp esi, 1	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000224	     0xf868efeffff	                           jbe 0x40000b8	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x400022a	        0x498b5500	                    mov rdx, qword [r13]	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400022e	      0x48837a0800	                  cmp qword [rdx + 8], 0	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000233	     0xf847ffeffff	                            je 0x40000b8	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000239	        0x498b4d08	                mov rcx, qword [r13 + 8]	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400023d	      0x4883790800	                  cmp qword [rcx + 8], 0	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000242	     0xf8470feffff	                            je 0x40000b8	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000248	        0x807a2814	            cmp byte [rdx + 0x28], 0x14 	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400024c	     0xf8566feffff	                           jne 0x40000b8	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000252	        0x80792802	                cmp byte [rcx + 0x28], 2	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000256	     0xf855cfeffff	                           jne 0x40000b8	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400025c	            0x3c0b	                             cmp al, 0xb	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400025e	     0xf848b030000	                            je 0x40005ef	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000264	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000268	      0xb801000000	                              mov eax, 1	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400026d	          0x48d3e0	                             shl rax, cl	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000270	          0x4839f0	                            cmp rax, rsi	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000273	     0xf853ffeffff	                           jne 0x40000b8	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000279	        0x488d7a10	                   lea rdi, [rdx + 0x10]	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400027d	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	       452	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000281	        0x48635d20	         movsxd rbx, dword [rbp + 0x20] 	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000285	      0xe800000000	                          call 0x400028a	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400028a	          0x8b4d08	                mov ecx, dword [rbp + 8]	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400028d	              0x56	                                push rsi	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400028e	          0x4989c0	                             mov r8, rax	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000291	            0x4154	                                push r12	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000293	          0x4989d9	                             mov r9, rbx	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000296	          0xc1e103	                              shl ecx, 3	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000299	            0x31d2	                            xor edx, edx	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400029b	      0xbe04000000	                              mov esi, 4	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40002a0	      0xbf0c000000	                            mov edi, 0xc	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40002a5	      0xe800000000	                          call 0x40002aa	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40002aa	      0xbb01000000	                              mov ebx, 1	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40002af	              0x58	                                 pop rax	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40002b0	              0x5a	                                 pop rdx	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40002b1	      0xe904feffff	                           jmp 0x40000ba	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40002b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40002c0	    0xc74500060000	                      mov dword [rbp], 6	       375	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x40002c7	            0x31db	                            xor ebx, ebx	       463	ehopt.c	FUNCTION_2
0x40002c9	      0xe9ecfdffff	                           jmp 0x40000ba	       463	ehopt.c	FUNCTION_2
0x40002ce	            0x6690	                                     nop	       463	ehopt.c	FUNCTION_2
0x40002d0	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x40002d5	            0x3c03	                               cmp al, 3	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x40002d7	            0x7408	                            je 0x40002e1	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x40002d9	            0x3c14	                            cmp al, 0x14	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x40002db	     0xf85d7fdffff	                           jne 0x40000b8	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x40002e1	        0x498b7d00	                    mov rdi, qword [r13]	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x40002e5	      0xe800000000	                          call 0x40002ea	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x40002ea	            0x85c0	                           test eax, eax	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x40002ec	            0x89c3	                            mov ebx, eax	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x40002ee	     0xf85c4fdffff	                           jne 0x40000b8	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x40002f4	        0x498b4500	                    mov rax, qword [r13]	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x40002f8	    0xc74500010000	                      mov dword [rbp], 1	       320	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x40002ff	        0x48894510	            mov qword [rbp + 0x10], rax 	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000303	      0xe9b2fdffff	                           jmp 0x40000ba	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000308	     0xf1f84000000	                   nop dword [rax + rax]	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000310	    0x488b15000000	            mov rdx, qword [0x04000317] 	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000317	      0xbf00000000	                              mov edi, 0	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400031c	      0xb90c000000	                            mov ecx, 0xc	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000321	    0x488b82a80000	            mov rax, qword [rdx + 0xa8] 	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000328	          0x488b32	                    mov rsi, qword [rdx]	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400032b	          0x4c8b00	                     mov r8, qword [rax]	       115	ehopt.c	FUNCTION_1	CALL_1
0x400032e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000330	          0x498b00	                     mov rax, qword [r8]	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000333	        0x400f97c7	                                seta dil	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000337	           0xf92c2	                                 setb dl	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400033a	            0x29d7	                            sub edi, edx	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400033c	        0x400fbeff	                          movsx edi, dil	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000340	          0x4885c0	                           test rax, rax	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000343	            0x7432	                            je 0x4000377	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000345	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000349	        0x4883f904	                              cmp rcx, 4	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x400034d	            0x7f70	                            jg 0x40003bf	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x400034f	      0xba04000000	                              mov edx, 4	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000354	            0xeb16	                           jmp 0x400036c	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000360	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000364	          0x4863f2	                         movsxd rsi, edx	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000367	          0x4839f1	                            cmp rcx, rsi	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x400036a	            0x7f5d	                            jg 0x40003c9	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x400036c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       131	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000370	            0x29ca	                            sub edx, ecx	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000372	          0x4885c0	                           test rax, rax	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000375	            0x75e9	                           jne 0x4000360	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000377	    0xc74504000000	                  mov dword [rbp + 4], 0	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x400037e	    0xc74500080000	                      mov dword [rbp], 8	       336	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000385	            0x31db	                            xor ebx, ebx	       463	ehopt.c	FUNCTION_2
0x4000387	      0xe92efdffff	                           jmp 0x40000ba	       336	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x400038c	         0xf1f4000	                         nop dword [rax]	       336	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000390	      0x41807d1802	                cmp byte [r13 + 0x18], 2	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x4000395	     0xf8505feffff	                           jne 0x40001a0	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400039b	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x400039f	    0xc74500050000	                      mov dword [rbp], 5	       352	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003a6	            0x89c3	                            mov ebx, eax	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003a8	          0x894524	            mov dword [rbp + 0x24], eax 	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003ab	            0x85db	                           test ebx, ebx	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40003ad	     0xf8505fdffff	                           jne 0x40000b8	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40003b3	    0xc74500060000	                      mov dword [rbp], 6	       365	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40003ba	      0xe9fbfcffff	                           jmp 0x40000ba	       365	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x40003bf	      0xbe04000000	                              mov esi, 4	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40003c4	      0xba04000000	                              mov edx, 4	       127	ehopt.c	FUNCTION_1	ELSE_1
0x40003c9	          0x4829f1	                            sub rcx, rsi	       134	ehopt.c	FUNCTION_1	IF_2
0x40003cc	        0x4883f903	                              cmp rcx, 3	       134	ehopt.c	FUNCTION_1	IF_2
0x40003d0	            0x7ea5	                           jle 0x4000377	       134	ehopt.c	FUNCTION_1	IF_2
0x40003d2	          0x4863ca	                         movsxd rcx, edx	       135	ehopt.c	FUNCTION_1	IF_2
0x40003d5	            0x85ff	                           test edi, edi	       135	ehopt.c	FUNCTION_1	IF_2
0x40003d7	       0xfb64c087c	     movzx ecx, byte [rax + rcx + 0x7c] 	       135	ehopt.c	FUNCTION_1	IF_2
0x40003dc	        0x400f94c6	                                sete sil	       135	ehopt.c	FUNCTION_1	IF_2
0x40003e0	          0x4000ce	                             add sil, cl	       135	ehopt.c	FUNCTION_1	IF_2
0x40003e3	            0x7592	                           jne 0x4000377	       135	ehopt.c	FUNCTION_1	IF_2
0x40003e5	          0x8d7201	                      lea esi, [rdx + 1]	       136	ehopt.c	FUNCTION_1	IF_2
0x40003e8	          0x4863f6	                         movsxd rsi, esi	       136	ehopt.c	FUNCTION_1	IF_2
0x40003eb	        0x3a4c307c	        cmp cl, byte [rax + rsi + 0x7c] 	       136	ehopt.c	FUNCTION_1	IF_2
0x40003ef	            0x7586	                           jne 0x4000377	       136	ehopt.c	FUNCTION_1	IF_2
0x40003f1	          0x8d7202	                      lea esi, [rdx + 2]	       137	ehopt.c	FUNCTION_1	IF_2
0x40003f4	          0x4863f6	                         movsxd rsi, esi	       137	ehopt.c	FUNCTION_1	IF_2
0x40003f7	        0x3a4c307c	        cmp cl, byte [rax + rsi + 0x7c] 	       137	ehopt.c	FUNCTION_1	IF_2
0x40003fb	     0xf8576ffffff	                           jne 0x4000377	       137	ehopt.c	FUNCTION_1	IF_2
0x4000401	          0x8d7203	                      lea esi, [rdx + 3]	       138	ehopt.c	FUNCTION_1	IF_2
0x4000404	          0x83c204	                              add edx, 4	       143	ehopt.c	FUNCTION_1
0x4000407	          0x4863f6	                         movsxd rsi, esi	       138	ehopt.c	FUNCTION_1	IF_2
0x400040a	        0x3a4c307c	        cmp cl, byte [rax + rsi + 0x7c] 	       138	ehopt.c	FUNCTION_1	IF_2
0x400040e	     0xf8563ffffff	                           jne 0x4000377	       138	ehopt.c	FUNCTION_1	IF_2
0x4000414	            0xeb0f	                           jmp 0x4000425	       138	ehopt.c	FUNCTION_1	IF_2
0x4000416	        0x488b4038	            mov rax, qword [rax + 0x38] 	       147	ehopt.c	FUNCTION_1	WHILE_2
0x400041a	            0x29ca	                            sub edx, ecx	       146	ehopt.c	FUNCTION_1	WHILE_2
0x400041c	          0x4885c0	                           test rax, rax	       144	ehopt.c	FUNCTION_1	WHILE_2
0x400041f	     0xf8452ffffff	                            je 0x4000377	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000425	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000429	          0x4863f2	                         movsxd rsi, edx	       144	ehopt.c	FUNCTION_1	WHILE_2
0x400042c	          0x4839f1	                            cmp rcx, rsi	       144	ehopt.c	FUNCTION_1	WHILE_2
0x400042f	            0x7ee5	                           jle 0x4000416	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000431	          0x4889cf	                            mov rdi, rcx	       150	ehopt.c	FUNCTION_1	IF_3
0x4000434	          0x4829f7	                            sub rdi, rsi	       150	ehopt.c	FUNCTION_1	IF_3
0x4000437	          0x4885ff	                           test rdi, rdi	       150	ehopt.c	FUNCTION_1	IF_3
0x400043a	     0xf8e37ffffff	                           jle 0x4000377	       150	ehopt.c	FUNCTION_1	IF_3
0x4000440	      0x807c307c01	         cmp byte [rax + rsi + 0x7c], 1 	       151	ehopt.c	FUNCTION_1	IF_3
0x4000445	     0xf852cffffff	                           jne 0x4000377	       151	ehopt.c	FUNCTION_1	IF_3
0x400044b	        0x4d8b5020	              mov r10, qword [r8 + 0x20]	       116	ehopt.c	FUNCTION_1	CALL_2
0x400044f	          0x83c201	                              add edx, 1	       157	ehopt.c	FUNCTION_1
0x4000452	            0x31f6	                            xor esi, esi	       156	ehopt.c	FUNCTION_1
0x4000454	          0x4989c8	                             mov r8, rcx	       156	ehopt.c	FUNCTION_1
0x4000457	          0x4863ca	                         movsxd rcx, edx	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400045a	          0x4939c8	                             cmp r8, rcx	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400045d	     0xf8e6e010000	                           jle 0x40005d1	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000463	       0xfb67c087c	     movzx edi, byte [rax + rcx + 0x7c] 	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000468	          0x4084ff	                           test dil, dil	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400046b	            0x7431	                            je 0x400049e	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400046d	        0x4d8d48ff	                        lea r9, [r8 - 1]	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000471	          0x4929c9	                             sub r9, rcx	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000474	            0x31c9	                            xor ecx, ecx	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000476	          0x83fe08	                              cmp esi, 8	       170	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000479	            0x7f0a	                            jg 0x4000485	       170	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400047b	          0x4c63de	                         movsxd r11, esi	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400047e	          0x83c601	                              add esi, 1	       173	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000481	        0x42883c1c	               mov byte [rsp + r11], dil	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000485	          0x83c201	                              add edx, 1	       175	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000488	          0x4c39c9	                             cmp rcx, r9	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400048b	            0x74ca	                            je 0x4000457	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400048d	          0x4863fa	                         movsxd rdi, edx	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000490	        0x4883c101	                              add rcx, 1	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000494	       0xfb67c387c	     movzx edi, byte [rax + rdi + 0x7c] 	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000499	          0x4084ff	                           test dil, dil	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400049c	            0x75d8	                           jne 0x4000476	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400049e	          0x83c201	                              add edx, 1	       180	ehopt.c	FUNCTION_1
0x40004a1	            0xeb0f	                           jmp 0x40004b2	       180	ehopt.c	FUNCTION_1
0x40004a3	        0x488b4038	            mov rax, qword [rax + 0x38] 	       184	ehopt.c	FUNCTION_1	WHILE_6
0x40004a7	            0x29fa	                            sub edx, edi	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40004a9	          0x4885c0	                           test rax, rax	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40004ac	     0xf84c5feffff	                            je 0x4000377	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40004b2	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40004b6	          0x4863ca	                         movsxd rcx, edx	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40004b9	          0x4839cf	                            cmp rdi, rcx	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40004bc	            0x7ee5	                           jle 0x40004a3	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40004be	          0x4863f6	                         movsxd rsi, esi	       189	ehopt.c	FUNCTION_1
0x40004c1	        0xc6043400	                 mov byte [rsp + rsi], 0	       189	ehopt.c	FUNCTION_1
0x40004c5	         0xfb63424	                   movzx esi, byte [rsp]	       190	ehopt.c	FUNCTION_1	IF_8
0x40004c9	          0x4084f6	                           test sil, sil	       190	ehopt.c	FUNCTION_1	IF_8
0x40004cc	     0xf8526010000	                           jne 0x40005f8	       190	ehopt.c	FUNCTION_1	IF_8
0x40004d2	       0xfbe54087c	     movsx edx, byte [rax + rcx + 0x7c] 	       219	ehopt.c	FUNCTION_1
0x40004d7	    0xc74504010000	                  mov dword [rbp + 4], 1	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x40004de	           0xfb6c2	                           movzx eax, dl	       219	ehopt.c	FUNCTION_1
0x40004e1	          0x80e280	                            and dl, 0x80	       221	ehopt.c	FUNCTION_1	IF_13
0x40004e4	      0xba00000000	                              mov edx, 0	       221	ehopt.c	FUNCTION_1	IF_13
0x40004e9	           0xf45c2	                         cmovne eax, edx	       221	ehopt.c	FUNCTION_1	IF_13
0x40004ec	          0x894508	                mov dword [rbp + 8], eax	       223	ehopt.c	FUNCTION_1
0x40004ef	            0x31c0	                            xor eax, eax	       224	ehopt.c	FUNCTION_1
0x40004f1	        0x4080fe7a	                           cmp sil, 0x7a	       224	ehopt.c	FUNCTION_1
0x40004f5	           0xf94c0	                                 sete al	       224	ehopt.c	FUNCTION_1
0x40004f8	          0x89450c	              mov dword [rbp + 0xc], eax	       224	ehopt.c	FUNCTION_1
0x40004fb	      0xe9b9fcffff	                           jmp 0x40001b9	       224	ehopt.c	FUNCTION_1
0x4000500	      0x41807d1802	                cmp byte [r13 + 0x18], 2	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000505	     0xf8595fcffff	                           jne 0x40001a0	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400050b	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       356	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400050f	          0x8b4d28	            mov ecx, dword [rbp + 0x28] 	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000512	            0x89c3	                            mov ebx, eax	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000514	          0x83e37f	                           and ebx, 0x7f	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000517	            0xd3e3	                             shl ebx, cl	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000519	           0xb5d24	              or ebx, dword [rbp + 0x24]	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400051c	          0x83c107	                              add ecx, 7	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x400051f	            0x84c0	                             test al, al	       359	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x4000521	          0x894d28	            mov dword [rbp + 0x28], ecx 	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000524	          0x895d24	            mov dword [rbp + 0x24], ebx 	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000527	     0xf888bfbffff	                            js 0x40000b8	       359	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x400052d	    0xc74500050000	                      mov dword [rbp], 5	       360	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x4000534	      0xe972feffff	                           jmp 0x40003ab	       360	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x4000539	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x400053d	        0x4883f83f	                           cmp rax, 0x3f	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000541	            0x7e5b	                           jle 0x400059e	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x4000543	    0x483dff000000	                           cmp rax, 0xff	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000549	            0x7e6c	                           jle 0x40005b7	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400054b	    0x483dffff0000	                         cmp rax, 0xffff	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000551	     0xf8f61fbffff	                            jg 0x40000b8	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000557	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400055b	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400055f	      0xc644027c03	          mov byte [rdx + rax + 0x7c], 3	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000564	    0x41c704240200	                      mov dword [r12], 2	       420	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400056c	      0xe949fbffff	                           jmp 0x40000ba	       420	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000571	        0x837d0801	                  cmp dword [rbp + 8], 1	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000575	     0xf853dfbffff	                           jne 0x40000b8	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x400057b	        0x48635d20	         movsxd rbx, dword [rbp + 0x20] 	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400057f	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	       430	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000583	          0x4c89ef	                            mov rdi, r13	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000586	      0xe800000000	                          call 0x400058b	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400058b	          0x4989c0	                             mov r8, rax	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400058e	              0x57	                                push rdi	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400058f	      0xb908000000	                              mov ecx, 8	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000594	            0x4154	                                push r12	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000596	          0x4989d9	                             mov r9, rbx	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000599	      0xe9fbfcffff	                           jmp 0x4000299	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400059e	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40005a2	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       407	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40005a6	          0x83c840	                            or eax, 0x40	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40005a9	      0xbb01000000	                              mov ebx, 1	       410	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40005ae	        0x8844117c	         mov byte [rcx + rdx + 0x7c], al	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40005b2	      0xe903fbffff	                           jmp 0x40000ba	       410	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40005b7	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x40005bb	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x40005bf	      0xc644027c02	          mov byte [rdx + rax + 0x7c], 2	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x40005c4	    0x41c704240100	                      mov dword [r12], 1	       415	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x40005cc	      0xe9e9faffff	                           jmp 0x40000ba	       415	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x40005d1	        0x488b4038	            mov rax, qword [rax + 0x38] 	       163	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x40005d5	          0x4429c2	                            sub edx, r8d	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x40005d8	          0x4885c0	                           test rax, rax	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x40005db	     0xf8496fdffff	                            je 0x4000377	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x40005e1	        0x4c8b4010	              mov r8, qword [rax + 0x10]	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x40005e5	      0xe96dfeffff	                           jmp 0x4000457	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x40005ea	      0xe800000000	                          call 0x40005ef	       464	ehopt.c	FUNCTION_2
0x40005ef	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005f3	      0xe978fcffff	                           jmp 0x4000270	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005f8	        0x4080fe65	                           cmp sil, 0x65	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40005fc	            0x752c	                           jne 0x400062a	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40005fe	      0x807c240168	                cmp byte [rsp + 1], 0x68	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x4000603	     0xf856efdffff	                           jne 0x4000377	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x4000609	      0x807c240200	                   cmp byte [rsp + 2], 0	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x400060e	     0xf8563fdffff	                           jne 0x4000377	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x4000614	            0xeb0a	                           jmp 0x4000620	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x4000616	        0x49394208	                cmp qword [r10 + 8], rax	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400061a	            0x741d	                            je 0x4000639	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400061c	        0x4d8b5240	            mov r10, qword [r10 + 0x40] 	       200	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000620	          0x4d85d2	                           test r10, r10	       198	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000623	            0x75f1	                           jne 0x4000616	       198	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000625	          0x83c204	                              add edx, 4	       202	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x4000628	            0xeb1c	                           jmp 0x4000646	       202	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x400062a	        0x4080fe7a	                           cmp sil, 0x7a	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x400062e	     0xf8543fdffff	                           jne 0x4000377	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x4000634	      0xe999feffff	                           jmp 0x40004d2	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x4000639	        0x493b4a10	            cmp rcx, qword [r10 + 0x10] 	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400063d	            0x75dd	                           jne 0x400061c	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400063f	      0x410fb64a02	               movzx ecx, byte [r10 + 2]	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x4000644	             0x1ca	                            add edx, ecx	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x4000646	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400064a	          0x4863ca	                         movsxd rcx, edx	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400064d	          0x4839cf	                            cmp rdi, rcx	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000650	     0xf8f7cfeffff	                            jg 0x40004d2	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000656	        0x488b4038	            mov rax, qword [rax + 0x38] 	       208	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400065a	            0x29fa	                            sub edx, edi	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400065c	          0x4885c0	                           test rax, rax	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400065f	            0x75e5	                           jne 0x4000646	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000661	      0xe911fdffff	                           jmp 0x4000377	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
